{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3","program":"/Users/turjachowdhury/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","secp256k1","/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"recovery\"","--cfg","feature=\"std\"","-C","metadata=c970b131b7ee6315","-C","extra-filename=-c970b131b7ee6315","--out-dir","/Users/turjachowdhury/GitHub/rust-playground/eth/web3/target/rls/debug/deps","-L","dependency=/Users/turjachowdhury/GitHub/rust-playground/eth/web3/target/rls/debug/deps","--extern","secp256k1_sys=/Users/turjachowdhury/GitHub/rust-playground/eth/web3/target/rls/debug/deps/libsecp256k1_sys-69ceb8a5f0610a16.rmeta","--cap-lints","allow","-L","native=/Users/turjachowdhury/GitHub/rust-playground/eth/web3/target/rls/debug/build/secp256k1-sys-f1170ffe9692fc44/out","--error-format=json","--sysroot","/Users/turjachowdhury/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/turjachowdhury/GitHub/rust-playground/eth/web3/target/rls/debug/deps/libsecp256k1-c970b131b7ee6315.rmeta"},"prelude":{"crate_id":{"name":"secp256k1","disambiguator":[960184805118369592,0]},"crate_root":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src","external_crates":[{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3177202280525429736,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14771084576412554041,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2214913233095760658,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14062411168213242900,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12076482825092298057,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[14222321261015582298,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8777242437552039366,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17835652209006724865,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[8739993533421390330,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[14051958152740382928,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[10065303707608660519,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[11544620977869425193,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[6400271788769952154,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[15384311983005613458,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[18308402029100966730,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[6407954677654987270,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[15697432329694890830,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[8370702540642071065,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[13043233986326649044,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","num":20,"id":{"name":"secp256k1_sys","disambiguator":[7056775564520430027,0]}}],"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":502,"byte_end":44225,"line_start":16,"line_end":1114,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":20,"index":0},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":7649,"byte_end":7662,"line_start":168,"line_end":168,"column_start":9,"column_end":22},"alias_span":null,"name":"ffi","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":52517,"byte_end":52518,"line_start":10,"line_end":10,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":38}},{"kind":"Use","ref_id":{"krate":0,"index":1135},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":148552,"byte_end":148562,"line_start":13,"line_end":13,"column_start":26,"column_end":36},"alias_span":null,"name":"RecoveryId","value":"","parent":{"krate":0,"index":427}},{"kind":"Use","ref_id":{"krate":0,"index":1150},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":148564,"byte_end":148584,"line_start":13,"line_end":13,"column_start":38,"column_end":58},"alias_span":null,"name":"RecoverableSignature","value":"","parent":{"krate":0,"index":427}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":8598,"byte_end":8599,"line_start":209,"line_end":209,"column_start":14,"column_end":15},"alias_span":null,"name":"*","value":"KeyPair, XOnlyPublicKey, SecretKey, PublicKey","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":8618,"byte_end":8619,"line_start":210,"line_end":210,"column_start":18,"column_end":19},"alias_span":null,"name":"*","value":"Verification, Context, Signing","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":502,"byte_end":44225,"line_start":16,"line_end":1114,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":38},{"krate":0,"index":165},{"krate":0,"index":349},{"krate":0,"index":367},{"krate":0,"index":427},{"krate":0,"index":606},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":694},{"krate":0,"index":697},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":704},{"krate":0,"index":707},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":715},{"krate":0,"index":1229},{"krate":0,"index":1230},{"krate":0,"index":1235},{"krate":0,"index":1239},{"krate":0,"index":1241},{"krate":0,"index":1242},{"krate":0,"index":1245},{"krate":0,"index":1247},{"krate":0,"index":1249},{"krate":0,"index":1251},{"krate":0,"index":1254},{"krate":0,"index":1257},{"krate":0,"index":1260},{"krate":0,"index":1263},{"krate":0,"index":1266},{"krate":0,"index":1270},{"krate":0,"index":719},{"krate":0,"index":722},{"krate":0,"index":725},{"krate":0,"index":727},{"krate":0,"index":1272},{"krate":0,"index":1293},{"krate":0,"index":1294},{"krate":0,"index":1295},{"krate":0,"index":1297},{"krate":0,"index":1298},{"krate":0,"index":1300},{"krate":0,"index":1302},{"krate":0,"index":1304},{"krate":0,"index":1307},{"krate":0,"index":1309},{"krate":0,"index":729},{"krate":0,"index":731},{"krate":0,"index":733},{"krate":0,"index":734},{"krate":0,"index":739},{"krate":0,"index":741},{"krate":0,"index":743},{"krate":0,"index":746},{"krate":0,"index":748},{"krate":0,"index":751},{"krate":0,"index":754},{"krate":0,"index":760},{"krate":0,"index":762},{"krate":0,"index":763}],"decl_id":null,"docs":" Rust bindings for Pieter Wuille's secp256k1 library, which is used for\n fast and accurate manipulation of ECDSA signatures on the secp256k1\n curve. Such signatures are used extensively by the Bitcoin network\n and its derivatives.","sig":null,"attributes":[{"value":"/ Rust bindings for Pieter Wuille's secp256k1 library, which is used for","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":502,"byte_end":576,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ fast and accurate manipulation of ECDSA signatures on the secp256k1","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":577,"byte_end":648,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/ curve. Such signatures are used extensively by the Bitcoin network","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":649,"byte_end":719,"line_start":18,"line_end":18,"column_start":1,"column_end":71}},{"value":"/ and its derivatives.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":720,"byte_end":744,"line_start":19,"line_end":19,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":745,"byte_end":748,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ To minimize dependencies, some functions are feature-gated. To generate","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":749,"byte_end":824,"line_start":21,"line_end":21,"column_start":1,"column_end":76}},{"value":"/ random keys or to re-randomize a context object, compile with the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":825,"byte_end":894,"line_start":22,"line_end":22,"column_start":1,"column_end":70}},{"value":"/ `rand-std` feature. If you are willing to use the `rand-std` feature, we","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":895,"byte_end":971,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/ have enabled an additional defense-in-depth sidechannel protection for","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":972,"byte_end":1046,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ our context objects, which re-blinds certain operations on secret key","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":1047,"byte_end":1120,"line_start":25,"line_end":25,"column_start":1,"column_end":74}},{"value":"/ data. To de/serialize objects with serde, compile with \"serde\".","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":1121,"byte_end":1188,"line_start":26,"line_end":26,"column_start":1,"column_end":68}},{"value":"/ **Important**: `serde` encoding is **not** the same as consensus","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":1189,"byte_end":1257,"line_start":27,"line_end":27,"column_start":1,"column_end":69}},{"value":"/ encoding!","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":1258,"byte_end":1271,"line_start":28,"line_end":28,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":1272,"byte_end":1275,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Where possible, the bindings use the Rust type system to ensure that","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":1276,"byte_end":1348,"line_start":30,"line_end":30,"column_start":1,"column_end":73}},{"value":"/ API usage errors are impossible. For example, the library uses context","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":1349,"byte_end":1423,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/ objects that contain precomputation tables which are created on object","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":1424,"byte_end":1498,"line_start":32,"line_end":32,"column_start":1,"column_end":75}},{"value":"/ construction. Since this is a slow operation (10+ milliseconds, vs ~50","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":1499,"byte_end":1573,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ microseconds for typical crypto operations, on a 2.70 Ghz i7-6820HQ)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":1574,"byte_end":1646,"line_start":34,"line_end":34,"column_start":1,"column_end":73}},{"value":"/ the tables are optional, giving a performance boost for users who only","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":1647,"byte_end":1721,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"/ care about signing, only care about verification, or only care about","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":1722,"byte_end":1794,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ parsing. In the upstream library, if you attempt to sign a message using","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":1795,"byte_end":1871,"line_start":37,"line_end":37,"column_start":1,"column_end":77}},{"value":"/ a context that does not support this, it will trigger an assertion","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":1872,"byte_end":1942,"line_start":38,"line_end":38,"column_start":1,"column_end":71}},{"value":"/ failure and terminate the program. In `rust-secp256k1`, this is caught","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":1943,"byte_end":2017,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"/ at compile-time; in fact, it is impossible to compile code that will","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":2018,"byte_end":2090,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/ trigger any assertion failures in the upstream library.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":2091,"byte_end":2150,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":2151,"byte_end":2154,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":2155,"byte_end":2166,"line_start":43,"line_end":43,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(all(feature = \"std\", feature=\"rand-std\", feature=\"bitcoin_hashes\"))] {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":2167,"byte_end":2249,"line_start":44,"line_end":44,"column_start":1,"column_end":83}},{"value":"/ use secp256k1::rand::rngs::OsRng;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":2250,"byte_end":2287,"line_start":45,"line_end":45,"column_start":1,"column_end":38}},{"value":"/ use secp256k1::{Secp256k1, Message};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":2288,"byte_end":2328,"line_start":46,"line_end":46,"column_start":1,"column_end":41}},{"value":"/ use secp256k1::hashes::sha256;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":2329,"byte_end":2363,"line_start":47,"line_end":47,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":2364,"byte_end":2367,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ let secp = Secp256k1::new();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":2368,"byte_end":2400,"line_start":49,"line_end":49,"column_start":1,"column_end":33}},{"value":"/ let mut rng = OsRng::new().expect(\"OsRng\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":2401,"byte_end":2448,"line_start":50,"line_end":50,"column_start":1,"column_end":48}},{"value":"/ let (secret_key, public_key) = secp.generate_keypair(&mut rng);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":2449,"byte_end":2516,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/ let message = Message::from_hashed_data::<sha256::Hash>(\"Hello World!\".as_bytes());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":2517,"byte_end":2604,"line_start":52,"line_end":52,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":2605,"byte_end":2608,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ let sig = secp.sign_ecdsa(&message, &secret_key);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":2609,"byte_end":2662,"line_start":54,"line_end":54,"column_start":1,"column_end":54}},{"value":"/ assert!(secp.verify_ecdsa(&message, &sig, &public_key).is_ok());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":2663,"byte_end":2731,"line_start":55,"line_end":55,"column_start":1,"column_end":69}},{"value":"/ # }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":2732,"byte_end":2739,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":2740,"byte_end":2747,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":2748,"byte_end":2751,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ If the \"global-context\" feature is enabled you have access to an alternate API.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":2752,"byte_end":2835,"line_start":59,"line_end":59,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":2836,"byte_end":2839,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":2840,"byte_end":2851,"line_start":61,"line_end":61,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(all(feature=\"global-context\", feature = \"std\", feature=\"rand-std\", features = \"bitcoin_hashes\"))] {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":2852,"byte_end":2963,"line_start":62,"line_end":62,"column_start":1,"column_end":112}},{"value":"/ use secp256k1::rand::thread_rng;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":2964,"byte_end":3000,"line_start":63,"line_end":63,"column_start":1,"column_end":37}},{"value":"/ use secp256k1::{generate_keypair, Message};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":3001,"byte_end":3048,"line_start":64,"line_end":64,"column_start":1,"column_end":48}},{"value":"/ use secp256k1::hashes::sha256;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":3049,"byte_end":3083,"line_start":65,"line_end":65,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":3084,"byte_end":3087,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ let (secret_key, public_key) = generate_keypair(&mut thread_rng());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":3088,"byte_end":3159,"line_start":67,"line_end":67,"column_start":1,"column_end":72}},{"value":"/ let message = Message::from_hashed_data::<sha256::Hash>(\"Hello World!\".as_bytes());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":3160,"byte_end":3247,"line_start":68,"line_end":68,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":3248,"byte_end":3251,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ let sig = secret_key.sign_ecdsa(&message, &secret_key);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":3252,"byte_end":3311,"line_start":70,"line_end":70,"column_start":1,"column_end":60}},{"value":"/ assert!(sig.verify(&message, &public_key).is_ok());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":3312,"byte_end":3367,"line_start":71,"line_end":71,"column_start":1,"column_end":56}},{"value":"/ # }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":3368,"byte_end":3375,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":3376,"byte_end":3383,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":3384,"byte_end":3387,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ The above code requires `rust-secp256k1` to be compiled with the `rand-std` and `bitcoin_hashes`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":3388,"byte_end":3488,"line_start":75,"line_end":75,"column_start":1,"column_end":101}},{"value":"/ feature enabled, to get access to [`generate_keypair`](struct.Secp256k1.html#method.generate_keypair)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":3489,"byte_end":3594,"line_start":76,"line_end":76,"column_start":1,"column_end":106}},{"value":"/ Alternately, keys and messages can be parsed from slices, like","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":3595,"byte_end":3661,"line_start":77,"line_end":77,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":3662,"byte_end":3665,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":3666,"byte_end":3677,"line_start":79,"line_end":79,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(any(feature = \"alloc\", features = \"std\"))] {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":3678,"byte_end":3734,"line_start":80,"line_end":80,"column_start":1,"column_end":57}},{"value":"/ use secp256k1::{Secp256k1, Message, SecretKey, PublicKey};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":3735,"byte_end":3797,"line_start":81,"line_end":81,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":3798,"byte_end":3801,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ let secp = Secp256k1::new();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":3802,"byte_end":3834,"line_start":83,"line_end":83,"column_start":1,"column_end":33}},{"value":"/ let secret_key = SecretKey::from_slice(&[0xcd; 32]).expect(\"32 bytes, within curve order\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":3835,"byte_end":3930,"line_start":84,"line_end":84,"column_start":1,"column_end":96}},{"value":"/ let public_key = PublicKey::from_secret_key(&secp, &secret_key);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":3931,"byte_end":3999,"line_start":85,"line_end":85,"column_start":1,"column_end":69}},{"value":"/ // This is unsafe unless the supplied byte slice is the output of a cryptographic hash function.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":4000,"byte_end":4100,"line_start":86,"line_end":86,"column_start":1,"column_end":101}},{"value":"/ // See the above example for how to use this library together with `bitcoin_hashes`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":4101,"byte_end":4189,"line_start":87,"line_end":87,"column_start":1,"column_end":89}},{"value":"/ let message = Message::from_slice(&[0xab; 32]).expect(\"32 bytes\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":4190,"byte_end":4260,"line_start":88,"line_end":88,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":4261,"byte_end":4264,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ let sig = secp.sign_ecdsa(&message, &secret_key);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":4265,"byte_end":4318,"line_start":90,"line_end":90,"column_start":1,"column_end":54}},{"value":"/ assert!(secp.verify_ecdsa(&message, &sig, &public_key).is_ok());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":4319,"byte_end":4387,"line_start":91,"line_end":91,"column_start":1,"column_end":69}},{"value":"/ # }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":4388,"byte_end":4395,"line_start":92,"line_end":92,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":4396,"byte_end":4403,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":4404,"byte_end":4407,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Users who only want to verify signatures can use a cheaper context, like so:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":4408,"byte_end":4488,"line_start":95,"line_end":95,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":4489,"byte_end":4492,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":4493,"byte_end":4504,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/ # #[cfg(any(feature = \"alloc\", feature = \"std\"))] {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":4505,"byte_end":4560,"line_start":98,"line_end":98,"column_start":1,"column_end":56}},{"value":"/ use secp256k1::{Secp256k1, Message, ecdsa, PublicKey};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":4561,"byte_end":4619,"line_start":99,"line_end":99,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":4620,"byte_end":4623,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ let secp = Secp256k1::verification_only();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":4624,"byte_end":4670,"line_start":101,"line_end":101,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":4671,"byte_end":4674,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ let public_key = PublicKey::from_slice(&[","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":4675,"byte_end":4720,"line_start":103,"line_end":103,"column_start":1,"column_end":46}},{"value":"/     0x02,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":4721,"byte_end":4734,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/     0xc6, 0x6e, 0x7d, 0x89, 0x66, 0xb5, 0xc5, 0x55,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":4735,"byte_end":4790,"line_start":105,"line_end":105,"column_start":1,"column_end":56}},{"value":"/     0xaf, 0x58, 0x05, 0x98, 0x9d, 0xa9, 0xfb, 0xf8,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":4791,"byte_end":4846,"line_start":106,"line_end":106,"column_start":1,"column_end":56}},{"value":"/     0xdb, 0x95, 0xe1, 0x56, 0x31, 0xce, 0x35, 0x8c,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":4847,"byte_end":4902,"line_start":107,"line_end":107,"column_start":1,"column_end":56}},{"value":"/     0x3a, 0x17, 0x10, 0xc9, 0x62, 0x67, 0x90, 0x63,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":4903,"byte_end":4958,"line_start":108,"line_end":108,"column_start":1,"column_end":56}},{"value":"/ ]).expect(\"public keys must be 33 or 65 bytes, serialized according to SEC 2\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":4959,"byte_end":5042,"line_start":109,"line_end":109,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":5043,"byte_end":5046,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ let message = Message::from_slice(&[","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":5047,"byte_end":5087,"line_start":111,"line_end":111,"column_start":1,"column_end":41}},{"value":"/     0xaa, 0xdf, 0x7d, 0xe7, 0x82, 0x03, 0x4f, 0xbe,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":5088,"byte_end":5143,"line_start":112,"line_end":112,"column_start":1,"column_end":56}},{"value":"/     0x3d, 0x3d, 0xb2, 0xcb, 0x13, 0xc0, 0xcd, 0x91,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":5144,"byte_end":5199,"line_start":113,"line_end":113,"column_start":1,"column_end":56}},{"value":"/     0xbf, 0x41, 0xcb, 0x08, 0xfa, 0xc7, 0xbd, 0x61,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":5200,"byte_end":5255,"line_start":114,"line_end":114,"column_start":1,"column_end":56}},{"value":"/     0xd5, 0x44, 0x53, 0xcf, 0x6e, 0x82, 0xb4, 0x50,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":5256,"byte_end":5311,"line_start":115,"line_end":115,"column_start":1,"column_end":56}},{"value":"/ ]).expect(\"messages must be 32 bytes and are expected to be hashes\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":5312,"byte_end":5385,"line_start":116,"line_end":116,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":5386,"byte_end":5389,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ let sig = ecdsa::Signature::from_compact(&[","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":5390,"byte_end":5437,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/     0xdc, 0x4d, 0xc2, 0x64, 0xa9, 0xfe, 0xf1, 0x7a,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":5438,"byte_end":5493,"line_start":119,"line_end":119,"column_start":1,"column_end":56}},{"value":"/     0x3f, 0x25, 0x34, 0x49, 0xcf, 0x8c, 0x39, 0x7a,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":5494,"byte_end":5549,"line_start":120,"line_end":120,"column_start":1,"column_end":56}},{"value":"/     0xb6, 0xf1, 0x6f, 0xb3, 0xd6, 0x3d, 0x86, 0x94,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":5550,"byte_end":5605,"line_start":121,"line_end":121,"column_start":1,"column_end":56}},{"value":"/     0x0b, 0x55, 0x86, 0x82, 0x3d, 0xfd, 0x02, 0xae,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":5606,"byte_end":5661,"line_start":122,"line_end":122,"column_start":1,"column_end":56}},{"value":"/     0x3b, 0x46, 0x1b, 0xb4, 0x33, 0x6b, 0x5e, 0xcb,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":5662,"byte_end":5717,"line_start":123,"line_end":123,"column_start":1,"column_end":56}},{"value":"/     0xae, 0xfd, 0x66, 0x27, 0xaa, 0x92, 0x2e, 0xfc,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":5718,"byte_end":5773,"line_start":124,"line_end":124,"column_start":1,"column_end":56}},{"value":"/     0x04, 0x8f, 0xec, 0x0c, 0x88, 0x1c, 0x10, 0xc4,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":5774,"byte_end":5829,"line_start":125,"line_end":125,"column_start":1,"column_end":56}},{"value":"/     0xc9, 0x42, 0x8f, 0xca, 0x69, 0xc1, 0x32, 0xa2,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":5830,"byte_end":5885,"line_start":126,"line_end":126,"column_start":1,"column_end":56}},{"value":"/ ]).expect(\"compact signatures are 64 bytes; DER signatures are 68-72 bytes\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":5886,"byte_end":5967,"line_start":127,"line_end":127,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":5968,"byte_end":5971,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ # #[cfg(not(fuzzing))]","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":5972,"byte_end":5998,"line_start":129,"line_end":129,"column_start":1,"column_end":27}},{"value":"/ assert!(secp.verify_ecdsa(&message, &sig, &public_key).is_ok());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":5999,"byte_end":6067,"line_start":130,"line_end":130,"column_start":1,"column_end":69}},{"value":"/ # }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":6068,"byte_end":6075,"line_start":131,"line_end":131,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":6076,"byte_end":6083,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":6084,"byte_end":6087,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ Observe that the same code using, say [`signing_only`](struct.Secp256k1.html#method.signing_only)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":6088,"byte_end":6189,"line_start":134,"line_end":134,"column_start":1,"column_end":102}},{"value":"/ to generate a context would simply not compile.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":6190,"byte_end":6241,"line_start":135,"line_end":135,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":6242,"byte_end":6245,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ## Crate features/optional dependencies","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":6246,"byte_end":6289,"line_start":137,"line_end":137,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":6290,"byte_end":6293,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ This crate provides the following opt-in Cargo features:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":6294,"byte_end":6354,"line_start":139,"line_end":139,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":6355,"byte_end":6358,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ * `std` - use standard Rust library, enabled by default.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":6359,"byte_end":6419,"line_start":141,"line_end":141,"column_start":1,"column_end":61}},{"value":"/ * `alloc` - use the `alloc` standard Rust library to provide heap allocations.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":6420,"byte_end":6502,"line_start":142,"line_end":142,"column_start":1,"column_end":83}},{"value":"/ * `rand` - use `rand` library to provide random generator (e.g. to generate keys).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":6503,"byte_end":6589,"line_start":143,"line_end":143,"column_start":1,"column_end":87}},{"value":"/ * `rand-std` - use `rand` library with its `std` feature enabled. (Implies `rand`.)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":6590,"byte_end":6677,"line_start":144,"line_end":144,"column_start":1,"column_end":88}},{"value":"/ * `recovery` - enable functions that can compute the public key from signature.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":6678,"byte_end":6761,"line_start":145,"line_end":145,"column_start":1,"column_end":84}},{"value":"/ * `lowmemory` - optimize the library for low-memory environments.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":6762,"byte_end":6831,"line_start":146,"line_end":146,"column_start":1,"column_end":70}},{"value":"/ * `global-context` - enable use of global secp256k1 context (implies `std`).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":6832,"byte_end":6912,"line_start":147,"line_end":147,"column_start":1,"column_end":81}},{"value":"/ * `serde` - implements serialization and deserialization for types in this crate using `serde`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":6913,"byte_end":7012,"line_start":148,"line_end":148,"column_start":1,"column_end":100}},{"value":"/           **Important**: `serde` encoding is **not** the same as consensus encoding!","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":7013,"byte_end":7101,"line_start":149,"line_end":149,"column_start":1,"column_end":89}},{"value":"/ * `bitcoin_hashes` - enables interaction with the `bitcoin-hashes` crate (e.g. conversions).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":7102,"byte_end":7198,"line_start":150,"line_end":150,"column_start":1,"column_end":97}},{"value":"deny(non_upper_case_globals)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":7222,"byte_end":7254,"line_start":153,"line_end":153,"column_start":1,"column_end":33}},{"value":"deny(non_camel_case_types)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":7255,"byte_end":7285,"line_start":154,"line_end":154,"column_start":1,"column_end":31}},{"value":"deny(non_snake_case)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":7286,"byte_end":7310,"line_start":155,"line_end":155,"column_start":1,"column_end":25}},{"value":"deny(unused_mut)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":7311,"byte_end":7331,"line_start":156,"line_end":156,"column_start":1,"column_end":21}},{"value":"warn(missing_docs)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":7332,"byte_end":7354,"line_start":157,"line_end":157,"column_start":1,"column_end":23}},{"value":"warn(missing_copy_implementations)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":7355,"byte_end":7393,"line_start":158,"line_end":158,"column_start":1,"column_end":39}},{"value":"warn(missing_debug_implementations)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":7394,"byte_end":7433,"line_start":159,"line_end":159,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":767},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":49062,"byte_end":49075,"line_start":87,"line_end":87,"column_start":12,"column_end":25},"name":"DisplaySecret","qualname":"::secret::DisplaySecret","value":"DisplaySecret {  }","parent":null,"children":[{"krate":0,"index":768}],"decl_id":null,"docs":" Helper struct for safely printing secrets (like [`SecretKey`] value).\n Formats the explicit byte value of the secret kept inside the type as a\n little-endian hexadecimal string using the provided formatter.","sig":null,"attributes":[{"value":"/ Helper struct for safely printing secrets (like [`SecretKey`] value).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":48468,"byte_end":48541,"line_start":76,"line_end":76,"column_start":1,"column_end":74}},{"value":"/ Formats the explicit byte value of the secret kept inside the type as a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":48542,"byte_end":48617,"line_start":77,"line_end":77,"column_start":1,"column_end":76}},{"value":"/ little-endian hexadecimal string using the provided formatter.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":48618,"byte_end":48684,"line_start":78,"line_end":78,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":48685,"byte_end":48688,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ Secrets should not implement neither [`Debug`] and [`Display`] traits directly,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":48689,"byte_end":48772,"line_start":80,"line_end":80,"column_start":1,"column_end":84}},{"value":"/ and instead provide `fn display_secret<'a>(&'a self) -> DisplaySecret<'a>`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":48773,"byte_end":48851,"line_start":81,"line_end":81,"column_start":1,"column_end":79}},{"value":"/ function to be used in different display contexts (see \"examples\" below).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":48852,"byte_end":48929,"line_start":82,"line_end":82,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":48930,"byte_end":48933,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ [`Display`]: fmt::Display","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":48934,"byte_end":48963,"line_start":84,"line_end":84,"column_start":1,"column_end":30}},{"value":"/ [`Debug`]: fmt::Debug","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":48964,"byte_end":48989,"line_start":85,"line_end":85,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":49172,"byte_end":49175,"line_start":93,"line_end":93,"column_start":8,"column_end":11},"name":"fmt","qualname":"<DisplaySecret as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":49155,"byte_end":49164,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":49498,"byte_end":49501,"line_start":103,"line_end":103,"column_start":8,"column_end":11},"name":"fmt","qualname":"<DisplaySecret as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":50739,"byte_end":50753,"line_start":141,"line_end":141,"column_start":12,"column_end":26},"name":"display_secret","qualname":"<SecretKey>::display_secret","value":"fn display_secret<'_>(&'_ Self) -> DisplaySecret","parent":null,"children":[],"decl_id":null,"docs":" Formats the explicit byte value of the secret key kept inside the type as a\n little-endian hexadecimal string using the provided formatter.","sig":null,"attributes":[{"value":"/ Formats the explicit byte value of the secret key kept inside the type as a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":49678,"byte_end":49757,"line_start":112,"line_end":112,"column_start":5,"column_end":84}},{"value":"/ little-endian hexadecimal string using the provided formatter.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":49762,"byte_end":49828,"line_start":113,"line_end":113,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":49833,"byte_end":49836,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ This is the only method that outputs the actual secret key value, and, thus,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":49841,"byte_end":49921,"line_start":115,"line_end":115,"column_start":5,"column_end":85}},{"value":"/ should be used with extreme precaution.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":49926,"byte_end":49969,"line_start":116,"line_end":116,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":49974,"byte_end":49977,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":49982,"byte_end":49995,"line_start":118,"line_end":118,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":50000,"byte_end":50003,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":50008,"byte_end":50015,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/ # #[cfg(all(feature = \"std\", not(feature = \"bitcoin_hashes\")))] {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":50020,"byte_end":50089,"line_start":121,"line_end":121,"column_start":5,"column_end":74}},{"value":"/ use secp256k1::ONE_KEY;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":50094,"byte_end":50121,"line_start":122,"line_end":122,"column_start":5,"column_end":32}},{"value":"/ let key = ONE_KEY;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":50126,"byte_end":50148,"line_start":123,"line_end":123,"column_start":5,"column_end":27}},{"value":"/ // Normal display hides value","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":50153,"byte_end":50186,"line_start":124,"line_end":124,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":50191,"byte_end":50206,"line_start":125,"line_end":125,"column_start":5,"column_end":20}},{"value":"/     \"SecretKey(#2518682f7819fb2d)\",","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":50211,"byte_end":50250,"line_start":126,"line_end":126,"column_start":5,"column_end":44}},{"value":"/     format!(\"{:?}\", key)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":50255,"byte_end":50283,"line_start":127,"line_end":127,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":50288,"byte_end":50294,"line_start":128,"line_end":128,"column_start":5,"column_end":11}},{"value":"/ // Here we explicitly display the secret value:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":50299,"byte_end":50350,"line_start":129,"line_end":129,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":50355,"byte_end":50370,"line_start":130,"line_end":130,"column_start":5,"column_end":20}},{"value":"/     \"0000000000000000000000000000000000000000000000000000000000000001\",","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":50375,"byte_end":50450,"line_start":131,"line_end":131,"column_start":5,"column_end":80}},{"value":"/     format!(\"{}\", key.display_secret())","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":50455,"byte_end":50498,"line_start":132,"line_end":132,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":50503,"byte_end":50509,"line_start":133,"line_end":133,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":50514,"byte_end":50529,"line_start":134,"line_end":134,"column_start":5,"column_end":20}},{"value":"/     \"DisplaySecret(\\\"0000000000000000000000000000000000000000000000000000000000000001\\\")\",","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":50534,"byte_end":50628,"line_start":135,"line_end":135,"column_start":5,"column_end":99}},{"value":"/     format!(\"{:?}\", key.display_secret())","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":50633,"byte_end":50678,"line_start":136,"line_end":136,"column_start":5,"column_end":50}},{"value":"/ );","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":50683,"byte_end":50689,"line_start":137,"line_end":137,"column_start":5,"column_end":11}},{"value":"/ # }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":50694,"byte_end":50701,"line_start":138,"line_end":138,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":50706,"byte_end":50713,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":50718,"byte_end":50727,"line_start":140,"line_end":140,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":52100,"byte_end":52114,"line_start":182,"line_end":182,"column_start":12,"column_end":26},"name":"display_secret","qualname":"<KeyPair>::display_secret","value":"fn display_secret<'_>(&'_ Self) -> DisplaySecret","parent":null,"children":[],"decl_id":null,"docs":" Formats the explicit byte value of the secret key kept inside the type as a\n little-endian hexadecimal string using the provided formatter.","sig":null,"attributes":[{"value":"/ Formats the explicit byte value of the secret key kept inside the type as a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":50866,"byte_end":50945,"line_start":147,"line_end":147,"column_start":5,"column_end":84}},{"value":"/ little-endian hexadecimal string using the provided formatter.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":50950,"byte_end":51016,"line_start":148,"line_end":148,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":51021,"byte_end":51024,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ This is the only method that outputs the actual secret key value, and, thus,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":51029,"byte_end":51109,"line_start":150,"line_end":150,"column_start":5,"column_end":85}},{"value":"/ should be used with extreme precaution.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":51114,"byte_end":51157,"line_start":151,"line_end":151,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":51162,"byte_end":51165,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":51170,"byte_end":51183,"line_start":153,"line_end":153,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":51188,"byte_end":51191,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":51196,"byte_end":51203,"line_start":155,"line_end":155,"column_start":5,"column_end":12}},{"value":"/ # #[cfg(all(feature = \"std\", not(feature = \"bitcoin_hashes\")))] {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":51208,"byte_end":51277,"line_start":156,"line_end":156,"column_start":5,"column_end":74}},{"value":"/ use secp256k1::ONE_KEY;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":51282,"byte_end":51309,"line_start":157,"line_end":157,"column_start":5,"column_end":32}},{"value":"/ use secp256k1::KeyPair;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":51314,"byte_end":51341,"line_start":158,"line_end":158,"column_start":5,"column_end":32}},{"value":"/ use secp256k1::Secp256k1;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":51346,"byte_end":51375,"line_start":159,"line_end":159,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":51380,"byte_end":51383,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let secp = Secp256k1::new();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":51388,"byte_end":51420,"line_start":161,"line_end":161,"column_start":5,"column_end":37}},{"value":"/ let key = ONE_KEY;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":51425,"byte_end":51447,"line_start":162,"line_end":162,"column_start":5,"column_end":27}},{"value":"/ let key = KeyPair::from_secret_key(&secp, key);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":51452,"byte_end":51503,"line_start":163,"line_end":163,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":51508,"byte_end":51511,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ // Normal display hides value","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":51516,"byte_end":51549,"line_start":165,"line_end":165,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":51554,"byte_end":51569,"line_start":166,"line_end":166,"column_start":5,"column_end":20}},{"value":"/     \"KeyPair(#2518682f7819fb2d)\",","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":51574,"byte_end":51611,"line_start":167,"line_end":167,"column_start":5,"column_end":42}},{"value":"/     format!(\"{:?}\", key)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":51616,"byte_end":51644,"line_start":168,"line_end":168,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":51649,"byte_end":51655,"line_start":169,"line_end":169,"column_start":5,"column_end":11}},{"value":"/ // Here we explicitly display the secret value:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":51660,"byte_end":51711,"line_start":170,"line_end":170,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":51716,"byte_end":51731,"line_start":171,"line_end":171,"column_start":5,"column_end":20}},{"value":"/     \"0000000000000000000000000000000000000000000000000000000000000001\",","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":51736,"byte_end":51811,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/     format!(\"{}\", key.display_secret())","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":51816,"byte_end":51859,"line_start":173,"line_end":173,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":51864,"byte_end":51870,"line_start":174,"line_end":174,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":51875,"byte_end":51890,"line_start":175,"line_end":175,"column_start":5,"column_end":20}},{"value":"/     \"DisplaySecret(\\\"0000000000000000000000000000000000000000000000000000000000000001\\\")\",","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":51895,"byte_end":51989,"line_start":176,"line_end":176,"column_start":5,"column_end":99}},{"value":"/     format!(\"{:?}\", key.display_secret())","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":51994,"byte_end":52039,"line_start":177,"line_end":177,"column_start":5,"column_end":50}},{"value":"/ );","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":52044,"byte_end":52050,"line_start":178,"line_end":178,"column_start":5,"column_end":11}},{"value":"/ # }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":52055,"byte_end":52062,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":52067,"byte_end":52074,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":52079,"byte_end":52088,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":69},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":54446,"byte_end":54453,"line_start":65,"line_end":65,"column_start":18,"column_end":25},"name":"Context","qualname":"::context::Context","value":"Context: private::Sealed","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":72}],"decl_id":null,"docs":" A trait for all kinds of contexts that lets you define the exact flags and a function to\n deallocate memory. It isn't possible to implement this for types outside this crate.\n","sig":null,"attributes":[{"value":"/ A trait for all kinds of contexts that lets you define the exact flags and a function to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":54247,"byte_end":54339,"line_start":63,"line_end":63,"column_start":1,"column_end":93}},{"value":"/ deallocate memory. It isn't possible to implement this for types outside this crate.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":54340,"byte_end":54428,"line_start":64,"line_end":64,"column_start":1,"column_end":89}}]},{"kind":"Const","id":{"krate":0,"index":70},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":54511,"byte_end":54516,"line_start":67,"line_end":67,"column_start":11,"column_end":16},"name":"FLAGS","qualname":"::context::Context::FLAGS","value":"c_uint","parent":{"krate":0,"index":69},"children":[],"decl_id":null,"docs":" Flags for the ffi.\n","sig":null,"attributes":[{"value":"/ Flags for the ffi.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":54478,"byte_end":54500,"line_start":66,"line_end":66,"column_start":5,"column_end":27}}]},{"kind":"Const","id":{"krate":0,"index":71},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":54583,"byte_end":54594,"line_start":69,"line_end":69,"column_start":11,"column_end":22},"name":"DESCRIPTION","qualname":"::context::Context::DESCRIPTION","value":"&'static str","parent":{"krate":0,"index":69},"children":[],"decl_id":null,"docs":" A constant description of the context.\n","sig":null,"attributes":[{"value":"/ A constant description of the context.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":54530,"byte_end":54572,"line_start":68,"line_end":68,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":54697,"byte_end":54707,"line_start":71,"line_end":71,"column_start":15,"column_end":25},"name":"deallocate","qualname":"::context::Context::deallocate","value":"unsafe fn deallocate(*mut u8, usize)","parent":{"krate":0,"index":69},"children":[],"decl_id":null,"docs":" A function to deallocate the memory when the context is dropped.\n","sig":null,"attributes":[{"value":"/ A function to deallocate the memory when the context is dropped.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":54614,"byte_end":54682,"line_start":70,"line_end":70,"column_start":5,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":73},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":54838,"byte_end":54845,"line_start":75,"line_end":75,"column_start":11,"column_end":18},"name":"Signing","qualname":"::context::Signing","value":"Signing: Context","parent":null,"children":[],"decl_id":null,"docs":" Marker trait for indicating that an instance of `Secp256k1` can be used for signing.\n","sig":null,"attributes":[{"value":"/ Marker trait for indicating that an instance of `Secp256k1` can be used for signing.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":54739,"byte_end":54827,"line_start":74,"line_end":74,"column_start":1,"column_end":89}}]},{"kind":"Trait","id":{"krate":0,"index":74},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":54963,"byte_end":54975,"line_start":78,"line_end":78,"column_start":11,"column_end":23},"name":"Verification","qualname":"::context::Verification","value":"Verification: Context","parent":null,"children":[],"decl_id":null,"docs":" Marker trait for indicating that an instance of `Secp256k1` can be used for verification.\n","sig":null,"attributes":[{"value":"/ Marker trait for indicating that an instance of `Secp256k1` can be used for verification.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":54859,"byte_end":54952,"line_start":77,"line_end":77,"column_start":1,"column_end":94}}]},{"kind":"Struct","id":{"krate":0,"index":789},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":55159,"byte_end":55179,"line_start":82,"line_end":82,"column_start":12,"column_end":32},"name":"SignOnlyPreallocated","qualname":"::context::SignOnlyPreallocated","value":"SignOnlyPreallocated {  }","parent":null,"children":[{"krate":0,"index":791}],"decl_id":null,"docs":" Represents the set of capabilities needed for signing with a user preallocated memory.\n","sig":null,"attributes":[{"value":"/ Represents the set of capabilities needed for signing with a user preallocated memory.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":54989,"byte_end":55079,"line_start":80,"line_end":80,"column_start":1,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":821},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":55402,"byte_end":55424,"line_start":88,"line_end":88,"column_start":12,"column_end":34},"name":"VerifyOnlyPreallocated","qualname":"::context::VerifyOnlyPreallocated","value":"VerifyOnlyPreallocated {  }","parent":null,"children":[{"krate":0,"index":823}],"decl_id":null,"docs":" Represents the set of capabilities needed for verification with a user preallocated memory.\n","sig":null,"attributes":[{"value":"/ Represents the set of capabilities needed for verification with a user preallocated memory.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":55227,"byte_end":55322,"line_start":86,"line_end":86,"column_start":1,"column_end":96}}]},{"kind":"Struct","id":{"krate":0,"index":853},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":55627,"byte_end":55642,"line_start":94,"line_end":94,"column_start":12,"column_end":27},"name":"AllPreallocated","qualname":"::context::AllPreallocated","value":"AllPreallocated {  }","parent":null,"children":[{"krate":0,"index":855}],"decl_id":null,"docs":" Represents the set of all capabilities with a user preallocated memory.\n","sig":null,"attributes":[{"value":"/ Represents the set of all capabilities with a user preallocated memory.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":55472,"byte_end":55547,"line_start":92,"line_end":92,"column_start":1,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":77},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":55736,"byte_end":55742,"line_start":100,"line_end":100,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::context::private::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":885},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":56634,"byte_end":56642,"line_start":128,"line_end":128,"column_start":14,"column_end":22},"name":"SignOnly","qualname":"::context::alloc_only::SignOnly","value":"enum SignOnly { }","parent":null,"children":[],"decl_id":null,"docs":" Represents the set of capabilities needed for signing.\n","sig":null,"attributes":[{"value":"/ Represents the set of capabilities needed for signing.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":56415,"byte_end":56473,"line_start":125,"line_end":125,"column_start":5,"column_end":63}}]},{"kind":"Enum","id":{"krate":0,"index":904},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":56875,"byte_end":56885,"line_start":133,"line_end":133,"column_start":14,"column_end":24},"name":"VerifyOnly","qualname":"::context::alloc_only::VerifyOnly","value":"enum VerifyOnly { }","parent":null,"children":[],"decl_id":null,"docs":" Represents the set of capabilities needed for verification.\n","sig":null,"attributes":[{"value":"/ Represents the set of capabilities needed for verification.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":56651,"byte_end":56714,"line_start":130,"line_end":130,"column_start":5,"column_end":68}}]},{"kind":"Enum","id":{"krate":0,"index":923},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":57098,"byte_end":57101,"line_start":138,"line_end":138,"column_start":14,"column_end":17},"name":"All","qualname":"::context::alloc_only::All","value":"enum All { }","parent":null,"children":[],"decl_id":null,"docs":" Represents the set of all capabilities.\n","sig":null,"attributes":[{"value":"/ Represents the set of all capabilities.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":56894,"byte_end":56937,"line_start":135,"line_end":135,"column_start":5,"column_end":48}}]},{"kind":"Const","id":{"krate":0,"index":98},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":57295,"byte_end":57300,"line_start":147,"line_end":147,"column_start":15,"column_end":20},"name":"FLAGS","qualname":"::<context::alloc_only::SignOnly as context::Context>::FLAGS","value":"c_uint","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":99},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":57352,"byte_end":57363,"line_start":148,"line_end":148,"column_start":15,"column_end":26},"name":"DESCRIPTION","qualname":"::<context::alloc_only::SignOnly as context::Context>::DESCRIPTION","value":"&'static str","parent":{"krate":0,"index":97},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":57415,"byte_end":57425,"line_start":150,"line_end":150,"column_start":19,"column_end":29},"name":"deallocate","qualname":"<SignOnly as context::Context>::deallocate","value":"unsafe fn deallocate(*mut u8, usize)","parent":{"krate":0,"index":69},"children":[],"decl_id":{"krate":0,"index":72},"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":102},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":57650,"byte_end":57655,"line_start":157,"line_end":157,"column_start":15,"column_end":20},"name":"FLAGS","qualname":"::<context::alloc_only::VerifyOnly as context::Context>::FLAGS","value":"c_uint","parent":{"krate":0,"index":101},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":103},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":57709,"byte_end":57720,"line_start":158,"line_end":158,"column_start":15,"column_end":26},"name":"DESCRIPTION","qualname":"::<context::alloc_only::VerifyOnly as context::Context>::DESCRIPTION","value":"&'static str","parent":{"krate":0,"index":101},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":57777,"byte_end":57787,"line_start":160,"line_end":160,"column_start":19,"column_end":29},"name":"deallocate","qualname":"<VerifyOnly as context::Context>::deallocate","value":"unsafe fn deallocate(*mut u8, usize)","parent":{"krate":0,"index":69},"children":[],"decl_id":{"krate":0,"index":72},"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":106},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":58005,"byte_end":58010,"line_start":167,"line_end":167,"column_start":15,"column_end":20},"name":"FLAGS","qualname":"::<context::alloc_only::All as context::Context>::FLAGS","value":"c_uint","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":107},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":58072,"byte_end":58083,"line_start":168,"line_end":168,"column_start":15,"column_end":26},"name":"DESCRIPTION","qualname":"::<context::alloc_only::All as context::Context>::DESCRIPTION","value":"&'static str","parent":{"krate":0,"index":105},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":58139,"byte_end":58149,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"name":"deallocate","qualname":"<All as context::Context>::deallocate","value":"unsafe fn deallocate(*mut u8, usize)","parent":{"krate":0,"index":69},"children":[],"decl_id":{"krate":0,"index":72},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":59207,"byte_end":59214,"line_start":194,"line_end":194,"column_start":16,"column_end":23},"name":"gen_new","qualname":"<Secp256k1<C>>::gen_new","value":"fn gen_new() -> Secp256k1<C>","parent":null,"children":[],"decl_id":null,"docs":" Lets you create a context in a generic manner (sign/verify/all).","sig":null,"attributes":[{"value":"/ Lets you create a context in a generic manner (sign/verify/all).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":58363,"byte_end":58431,"line_start":177,"line_end":177,"column_start":9,"column_end":77}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":58440,"byte_end":58443,"line_start":178,"line_end":178,"column_start":9,"column_end":12}},{"value":"/ If `rand-std` feature is enabled, context will have been randomized using `thread_rng`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":58452,"byte_end":58543,"line_start":179,"line_end":179,"column_start":9,"column_end":100}},{"value":"/ If `rand-std` feature is not enabled please consider randomizing the context as follows:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":58552,"byte_end":58644,"line_start":180,"line_end":180,"column_start":9,"column_end":101}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":58653,"byte_end":58660,"line_start":181,"line_end":181,"column_start":9,"column_end":16}},{"value":"/ # #[cfg(all(feature = \"std\", feature = \"rand-std\"))] {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":58669,"byte_end":58727,"line_start":182,"line_end":182,"column_start":9,"column_end":67}},{"value":"/ # use secp256k1::Secp256k1;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":58736,"byte_end":58767,"line_start":183,"line_end":183,"column_start":9,"column_end":40}},{"value":"/ # use secp256k1::rand::{thread_rng, RngCore};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":58776,"byte_end":58825,"line_start":184,"line_end":184,"column_start":9,"column_end":58}},{"value":"/ let mut ctx = Secp256k1::new();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":58834,"byte_end":58869,"line_start":185,"line_end":185,"column_start":9,"column_end":44}},{"value":"/ # let mut rng = thread_rng();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":58878,"byte_end":58911,"line_start":186,"line_end":186,"column_start":9,"column_end":42}},{"value":"/ # let mut seed = [0u8; 32];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":58920,"byte_end":58951,"line_start":187,"line_end":187,"column_start":9,"column_end":40}},{"value":"/ # rng.fill_bytes(&mut seed);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":58960,"byte_end":58992,"line_start":188,"line_end":188,"column_start":9,"column_end":41}},{"value":"/ // let seed = <32 bytes of random data>","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":59001,"byte_end":59044,"line_start":189,"line_end":189,"column_start":9,"column_end":52}},{"value":"/ ctx.seeded_randomize(&seed);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":59053,"byte_end":59085,"line_start":190,"line_end":190,"column_start":9,"column_end":41}},{"value":"/ # }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":59094,"byte_end":59101,"line_start":191,"line_end":191,"column_start":9,"column_end":16}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":59110,"byte_end":59117,"line_start":192,"line_end":192,"column_start":9,"column_end":16}},{"value":"allow(unused_mut)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":59126,"byte_end":59146,"line_start":193,"line_end":193,"column_start":9,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":60289,"byte_end":60292,"line_start":222,"line_end":222,"column_start":16,"column_end":19},"name":"new","qualname":"<Secp256k1<All>>::new","value":"fn new() -> Secp256k1<All>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Secp256k1 context with all capabilities.","sig":null,"attributes":[{"value":"/ Creates a new Secp256k1 context with all capabilities.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":59963,"byte_end":60021,"line_start":217,"line_end":217,"column_start":9,"column_end":67}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":60030,"byte_end":60033,"line_start":218,"line_end":218,"column_start":9,"column_end":12}},{"value":"/ If `rand-std` feature is enabled, context will have been randomized using `thread_rng`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":60042,"byte_end":60133,"line_start":219,"line_end":219,"column_start":9,"column_end":100}},{"value":"/ If `rand-std` feature is not enabled please consider randomizing the context (see docs","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":60142,"byte_end":60232,"line_start":220,"line_end":220,"column_start":9,"column_end":99}},{"value":"/ for `Secp256k1::gen_new()`).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":60241,"byte_end":60273,"line_start":221,"line_end":221,"column_start":9,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":60742,"byte_end":60754,"line_start":233,"line_end":233,"column_start":16,"column_end":28},"name":"signing_only","qualname":"<Secp256k1<SignOnly>>::signing_only","value":"fn signing_only() -> Secp256k1<SignOnly>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Secp256k1 context that can only be used for signing.","sig":null,"attributes":[{"value":"/ Creates a new Secp256k1 context that can only be used for signing.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":60404,"byte_end":60474,"line_start":228,"line_end":228,"column_start":9,"column_end":79}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":60483,"byte_end":60486,"line_start":229,"line_end":229,"column_start":9,"column_end":12}},{"value":"/ If `rand-std` feature is enabled, context will have been randomized using `thread_rng`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":60495,"byte_end":60586,"line_start":230,"line_end":230,"column_start":9,"column_end":100}},{"value":"/ If `rand-std` feature is not enabled please consider randomizing the context (see docs","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":60595,"byte_end":60685,"line_start":231,"line_end":231,"column_start":9,"column_end":99}},{"value":"/ for `Secp256k1::gen_new()`).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":60694,"byte_end":60726,"line_start":232,"line_end":232,"column_start":9,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":61216,"byte_end":61233,"line_start":244,"line_end":244,"column_start":16,"column_end":33},"name":"verification_only","qualname":"<Secp256k1<VerifyOnly>>::verification_only","value":"fn verification_only() -> Secp256k1<VerifyOnly>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Secp256k1 context that can only be used for verification.","sig":null,"attributes":[{"value":"/ Creates a new Secp256k1 context that can only be used for verification.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":60873,"byte_end":60948,"line_start":239,"line_end":239,"column_start":9,"column_end":84}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":60957,"byte_end":60960,"line_start":240,"line_end":240,"column_start":9,"column_end":12}},{"value":"/ If `rand-std` feature is enabled, context will have been randomized using `thread_rng`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":60969,"byte_end":61060,"line_start":241,"line_end":241,"column_start":9,"column_end":100}},{"value":"/ If `rand-std` feature is not enabled please consider randomizing the context (see docs","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":61069,"byte_end":61159,"line_start":242,"line_end":242,"column_start":9,"column_end":99}},{"value":"/ for `Secp256k1::gen_new()`).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":61168,"byte_end":61200,"line_start":243,"line_end":243,"column_start":9,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":61362,"byte_end":61369,"line_start":250,"line_end":250,"column_start":12,"column_end":19},"name":"default","qualname":"<Secp256k1<All> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":61480,"byte_end":61485,"line_start":256,"line_end":256,"column_start":12,"column_end":17},"name":"clone","qualname":"<Secp256k1<C> as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Secp256k1<C>","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":133},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":62248,"byte_end":62253,"line_start":276,"line_end":276,"column_start":11,"column_end":16},"name":"FLAGS","qualname":"::<context::SignOnlyPreallocated<'buf> as context::Context>::FLAGS","value":"c_uint","parent":{"krate":0,"index":131},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":134},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":62301,"byte_end":62312,"line_start":277,"line_end":277,"column_start":11,"column_end":22},"name":"DESCRIPTION","qualname":"::<context::SignOnlyPreallocated<'buf> as context::Context>::DESCRIPTION","value":"&'static str","parent":{"krate":0,"index":131},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":62360,"byte_end":62370,"line_start":279,"line_end":279,"column_start":15,"column_end":25},"name":"deallocate","qualname":"<SignOnlyPreallocated as context::Context>::deallocate","value":"unsafe fn deallocate(*mut u8, usize)","parent":{"krate":0,"index":69},"children":[],"decl_id":{"krate":0,"index":72},"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":138},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":62515,"byte_end":62520,"line_start":285,"line_end":285,"column_start":11,"column_end":16},"name":"FLAGS","qualname":"::<context::VerifyOnlyPreallocated<'buf> as context::Context>::FLAGS","value":"c_uint","parent":{"krate":0,"index":136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":139},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":62570,"byte_end":62581,"line_start":286,"line_end":286,"column_start":11,"column_end":22},"name":"DESCRIPTION","qualname":"::<context::VerifyOnlyPreallocated<'buf> as context::Context>::DESCRIPTION","value":"&'static str","parent":{"krate":0,"index":136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":62634,"byte_end":62644,"line_start":288,"line_end":288,"column_start":15,"column_end":25},"name":"deallocate","qualname":"<VerifyOnlyPreallocated as context::Context>::deallocate","value":"unsafe fn deallocate(*mut u8, usize)","parent":{"krate":0,"index":69},"children":[],"decl_id":{"krate":0,"index":72},"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":143},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":62783,"byte_end":62788,"line_start":294,"line_end":294,"column_start":11,"column_end":16},"name":"FLAGS","qualname":"::<context::AllPreallocated<'buf> as context::Context>::FLAGS","value":"c_uint","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":144},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":62870,"byte_end":62881,"line_start":295,"line_end":295,"column_start":11,"column_end":22},"name":"DESCRIPTION","qualname":"::<context::AllPreallocated<'buf> as context::Context>::DESCRIPTION","value":"&'static str","parent":{"krate":0,"index":141},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":62933,"byte_end":62943,"line_start":297,"line_end":297,"column_start":15,"column_end":25},"name":"deallocate","qualname":"<AllPreallocated as context::Context>::deallocate","value":"unsafe fn deallocate(*mut u8, usize)","parent":{"krate":0,"index":69},"children":[],"decl_id":{"krate":0,"index":72},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":63170,"byte_end":63190,"line_start":304,"line_end":304,"column_start":12,"column_end":32},"name":"preallocated_gen_new","qualname":"<Secp256k1<C>>::preallocated_gen_new","value":"fn preallocated_gen_new(&'buf mut [AlignedType])\n-> Result<Secp256k1<C>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Lets you create a context with preallocated buffer in a generic manner(sign/verify/all)\n","sig":null,"attributes":[{"value":"/ Lets you create a context with preallocated buffer in a generic manner(sign/verify/all)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":63067,"byte_end":63158,"line_start":303,"line_end":303,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":63941,"byte_end":63957,"line_start":325,"line_end":325,"column_start":12,"column_end":28},"name":"preallocated_new","qualname":"<Secp256k1<AllPreallocated>>::preallocated_new","value":"fn preallocated_new(&'buf mut [AlignedType])\n-> Result<Secp256k1<AllPreallocated>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Secp256k1 context with all capabilities\n","sig":null,"attributes":[{"value":"/ Creates a new Secp256k1 context with all capabilities","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":63872,"byte_end":63929,"line_start":324,"line_end":324,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":64209,"byte_end":64225,"line_start":329,"line_end":329,"column_start":12,"column_end":28},"name":"preallocate_size","qualname":"<Secp256k1<AllPreallocated>>::preallocate_size","value":"fn preallocate_size() -> usize","parent":null,"children":[],"decl_id":null,"docs":" Uses the ffi `secp256k1_context_preallocated_size` to check the memory size needed for a context.\n","sig":null,"attributes":[{"value":"/ Uses the ffi `secp256k1_context_preallocated_size` to check the memory size needed for a context.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":64096,"byte_end":64197,"line_start":328,"line_end":328,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":64931,"byte_end":64943,"line_start":344,"line_end":344,"column_start":19,"column_end":31},"name":"from_raw_all","qualname":"<Secp256k1<AllPreallocated>>::from_raw_all","value":"unsafe fn from_raw_all(*mut ffi::Context)\n-> ManuallyDrop<Secp256k1<AllPreallocated>>","parent":null,"children":[],"decl_id":null,"docs":" Create a context from a raw context.","sig":null,"attributes":[{"value":"/ Create a context from a raw context.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":64287,"byte_end":64327,"line_start":333,"line_end":333,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":64332,"byte_end":64335,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":64340,"byte_end":64352,"line_start":335,"line_end":335,"column_start":5,"column_end":17}},{"value":"/ This is highly unsafe, due to the number of conditions that aren't checked.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":64357,"byte_end":64436,"line_start":336,"line_end":336,"column_start":5,"column_end":84}},{"value":"/ * `raw_ctx` needs to be a valid Secp256k1 context pointer.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":64441,"byte_end":64503,"line_start":337,"line_end":337,"column_start":5,"column_end":67}},{"value":"/ that was generated by *exactly* the same code/version of the libsecp256k1 used here.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":64508,"byte_end":64596,"line_start":338,"line_end":338,"column_start":5,"column_end":93}},{"value":"/ * The capabilities (All/SignOnly/VerifyOnly) of the context *must* match the flags passed to libsecp256k1","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":64601,"byte_end":64710,"line_start":339,"line_end":339,"column_start":5,"column_end":114}},{"value":"/ when generating the context.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":64715,"byte_end":64747,"line_start":340,"line_end":340,"column_start":5,"column_end":37}},{"value":"/ * The user must handle the freeing of the context(using the correct functions) by himself.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":64752,"byte_end":64846,"line_start":341,"line_end":341,"column_start":5,"column_end":99}},{"value":"/ * Violating these may lead to Undefined Behavior.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":64851,"byte_end":64904,"line_start":342,"line_end":342,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":64909,"byte_end":64912,"line_start":343,"line_end":343,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":65386,"byte_end":65411,"line_start":355,"line_end":355,"column_start":12,"column_end":37},"name":"preallocated_signing_only","qualname":"<Secp256k1<SignOnlyPreallocated>>::preallocated_signing_only","value":"fn preallocated_signing_only(&'buf mut [AlignedType])\n-> Result<Secp256k1<SignOnlyPreallocated>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Secp256k1 context that can only be used for signing.\n","sig":null,"attributes":[{"value":"/ Creates a new Secp256k1 context that can only be used for signing.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":65304,"byte_end":65374,"line_start":354,"line_end":354,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":65685,"byte_end":65709,"line_start":361,"line_end":361,"column_start":12,"column_end":36},"name":"preallocate_signing_size","qualname":"<Secp256k1<SignOnlyPreallocated>>::preallocate_signing_size","value":"fn preallocate_signing_size() -> usize","parent":null,"children":[],"decl_id":null,"docs":" Uses the ffi `secp256k1_context_preallocated_size` to check the memory size needed for the context.\n","sig":null,"attributes":[{"value":"/ Uses the ffi `secp256k1_context_preallocated_size` to check the memory size needed for the context.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":65556,"byte_end":65659,"line_start":359,"line_end":359,"column_start":5,"column_end":108}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":65664,"byte_end":65673,"line_start":360,"line_end":360,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":66448,"byte_end":66471,"line_start":376,"line_end":376,"column_start":19,"column_end":42},"name":"from_raw_signining_only","qualname":"<Secp256k1<SignOnlyPreallocated>>::from_raw_signining_only","value":"unsafe fn from_raw_signining_only(*mut ffi::Context)\n-> ManuallyDrop<Secp256k1<SignOnlyPreallocated>>","parent":null,"children":[],"decl_id":null,"docs":" Create a context from a raw context.","sig":null,"attributes":[{"value":"/ Create a context from a raw context.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":65771,"byte_end":65811,"line_start":365,"line_end":365,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":65816,"byte_end":65819,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":65824,"byte_end":65836,"line_start":367,"line_end":367,"column_start":5,"column_end":17}},{"value":"/ This is highly unsafe, due to the number of conditions that aren't checked.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":65841,"byte_end":65920,"line_start":368,"line_end":368,"column_start":5,"column_end":84}},{"value":"/ * `raw_ctx` needs to be a valid Secp256k1 context pointer.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":65925,"byte_end":65987,"line_start":369,"line_end":369,"column_start":5,"column_end":67}},{"value":"/ that was generated by *exactly* the same code/version of the libsecp256k1 used here.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":65992,"byte_end":66080,"line_start":370,"line_end":370,"column_start":5,"column_end":93}},{"value":"/ * The capabilities (All/SignOnly/VerifyOnly) of the context *must* match the flags passed to libsecp256k1","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":66085,"byte_end":66194,"line_start":371,"line_end":371,"column_start":5,"column_end":114}},{"value":"/ when generating the context.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":66199,"byte_end":66231,"line_start":372,"line_end":372,"column_start":5,"column_end":37}},{"value":"/ * The user must handle the freeing of the context(using the correct functions) by himself.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":66236,"byte_end":66330,"line_start":373,"line_end":373,"column_start":5,"column_end":99}},{"value":"/ * This list *is not* exhaustive, and any violation may lead to Undefined Behavior.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":66335,"byte_end":66421,"line_start":374,"line_end":374,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":66426,"byte_end":66429,"line_start":375,"line_end":375,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":66925,"byte_end":66955,"line_start":387,"line_end":387,"column_start":12,"column_end":42},"name":"preallocated_verification_only","qualname":"<Secp256k1<VerifyOnlyPreallocated>>::preallocated_verification_only","value":"fn preallocated_verification_only(&'buf mut [AlignedType])\n-> Result<Secp256k1<VerifyOnlyPreallocated>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Secp256k1 context that can only be used for verification\n","sig":null,"attributes":[{"value":"/ Creates a new Secp256k1 context that can only be used for verification","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":66839,"byte_end":66913,"line_start":386,"line_end":386,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":67231,"byte_end":67260,"line_start":393,"line_end":393,"column_start":12,"column_end":41},"name":"preallocate_verification_size","qualname":"<Secp256k1<VerifyOnlyPreallocated>>::preallocate_verification_size","value":"fn preallocate_verification_size() -> usize","parent":null,"children":[],"decl_id":null,"docs":" Uses the ffi `secp256k1_context_preallocated_size` to check the memory size needed for the context.\n","sig":null,"attributes":[{"value":"/ Uses the ffi `secp256k1_context_preallocated_size` to check the memory size needed for the context.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":67102,"byte_end":67205,"line_start":391,"line_end":391,"column_start":5,"column_end":108}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":67210,"byte_end":67219,"line_start":392,"line_end":392,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":67999,"byte_end":68025,"line_start":408,"line_end":408,"column_start":19,"column_end":45},"name":"from_raw_verification_only","qualname":"<Secp256k1<VerifyOnlyPreallocated>>::from_raw_verification_only","value":"unsafe fn from_raw_verification_only(*mut ffi::Context)\n-> ManuallyDrop<Secp256k1<VerifyOnlyPreallocated>>","parent":null,"children":[],"decl_id":null,"docs":" Create a context from a raw context.","sig":null,"attributes":[{"value":"/ Create a context from a raw context.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":67322,"byte_end":67362,"line_start":397,"line_end":397,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":67367,"byte_end":67370,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":67375,"byte_end":67387,"line_start":399,"line_end":399,"column_start":5,"column_end":17}},{"value":"/ This is highly unsafe, due to the number of conditions that aren't checked.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":67392,"byte_end":67471,"line_start":400,"line_end":400,"column_start":5,"column_end":84}},{"value":"/ * `raw_ctx` needs to be a valid Secp256k1 context pointer.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":67476,"byte_end":67538,"line_start":401,"line_end":401,"column_start":5,"column_end":67}},{"value":"/ that was generated by *exactly* the same code/version of the libsecp256k1 used here.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":67543,"byte_end":67631,"line_start":402,"line_end":402,"column_start":5,"column_end":93}},{"value":"/ * The capabilities (All/SignOnly/VerifyOnly) of the context *must* match the flags passed to libsecp256k1","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":67636,"byte_end":67745,"line_start":403,"line_end":403,"column_start":5,"column_end":114}},{"value":"/ when generating the context.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":67750,"byte_end":67782,"line_start":404,"line_end":404,"column_start":5,"column_end":37}},{"value":"/ * The user must handle the freeing of the context(using the correct functions) by himself.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":67787,"byte_end":67881,"line_start":405,"line_end":405,"column_start":5,"column_end":99}},{"value":"/ * This list *is not* exhaustive, and any violation may lead to Undefined Behavior.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":67886,"byte_end":67972,"line_start":406,"line_end":406,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":67977,"byte_end":67980,"line_start":407,"line_end":407,"column_start":5,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":216},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":69657,"byte_end":69666,"line_start":50,"line_end":50,"column_start":12,"column_end":21},"name":"SecretKey","qualname":"::key::SecretKey","value":"","parent":null,"children":[],"decl_id":null,"docs":" Secret 256-bit key used as `x` in an ECDSA signature.","sig":null,"attributes":[{"value":"/ Secret 256-bit key used as `x` in an ECDSA signature.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":69312,"byte_end":69369,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":69370,"byte_end":69373,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":69374,"byte_end":69388,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":69389,"byte_end":69392,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":69393,"byte_end":69409,"line_start":40,"line_end":40,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":69410,"byte_end":69413,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":69414,"byte_end":69421,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(all(feature = \"std\", feature =  \"rand-std\"))] {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":69422,"byte_end":69481,"line_start":43,"line_end":43,"column_start":1,"column_end":60}},{"value":"/ use secp256k1::{rand, Secp256k1, SecretKey};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":69482,"byte_end":69530,"line_start":44,"line_end":44,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":69531,"byte_end":69534,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ let secp = Secp256k1::new();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":69535,"byte_end":69567,"line_start":46,"line_end":46,"column_start":1,"column_end":33}},{"value":"/ let secret_key = SecretKey::new(&mut rand::thread_rng());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":69568,"byte_end":69629,"line_start":47,"line_end":47,"column_start":1,"column_end":62}},{"value":"/ # }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":69630,"byte_end":69637,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":69638,"byte_end":69645,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":69863,"byte_end":69871,"line_start":56,"line_end":56,"column_start":8,"column_end":16},"name":"from_str","qualname":"<SecretKey as std::str::FromStr>::from_str","value":"fn from_str<'_>(&'_ str) -> Result<SecretKey, Error>","parent":{"krate":2,"index":12989},"children":[],"decl_id":{"krate":2,"index":12991},"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":224},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":70198,"byte_end":70205,"line_start":66,"line_end":66,"column_start":11,"column_end":18},"name":"ONE_KEY","qualname":"::key::ONE_KEY","value":"SecretKey","parent":null,"children":[],"decl_id":null,"docs":" The number 1 encoded as a secret key.\n","sig":null,"attributes":[{"value":"/ The number 1 encoded as a secret key.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":70146,"byte_end":70187,"line_start":65,"line_end":65,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":989},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":70984,"byte_end":70993,"line_start":88,"line_end":88,"column_start":12,"column_end":21},"name":"PublicKey","qualname":"::key::PublicKey","value":"","parent":null,"children":[],"decl_id":null,"docs":" A Secp256k1 public key, used for verification of signatures.","sig":null,"attributes":[{"value":"/ A Secp256k1 public key, used for verification of signatures.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":70455,"byte_end":70519,"line_start":71,"line_end":71,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":70520,"byte_end":70523,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":70524,"byte_end":70538,"line_start":73,"line_end":73,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":70539,"byte_end":70542,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":70543,"byte_end":70559,"line_start":75,"line_end":75,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":70560,"byte_end":70563,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":70564,"byte_end":70571,"line_start":77,"line_end":77,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(any(feature =  \"alloc\", feature = \"std\"))] {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":70572,"byte_end":70628,"line_start":78,"line_end":78,"column_start":1,"column_end":57}},{"value":"/ use secp256k1::{SecretKey, Secp256k1, PublicKey};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":70629,"byte_end":70682,"line_start":79,"line_end":79,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":70683,"byte_end":70686,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ let secp = Secp256k1::new();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":70687,"byte_end":70719,"line_start":81,"line_end":81,"column_start":1,"column_end":33}},{"value":"/ let secret_key = SecretKey::from_slice(&[0xcd; 32]).expect(\"32 bytes, within curve order\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":70720,"byte_end":70815,"line_start":82,"line_end":82,"column_start":1,"column_end":96}},{"value":"/ let public_key = PublicKey::from_secret_key(&secp, &secret_key);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":70816,"byte_end":70884,"line_start":83,"line_end":83,"column_start":1,"column_end":69}},{"value":"/ # }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":70885,"byte_end":70892,"line_start":84,"line_end":84,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":70893,"byte_end":70900,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"repr(transparent)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":70952,"byte_end":70972,"line_start":87,"line_end":87,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":71054,"byte_end":71057,"line_start":91,"line_end":91,"column_start":8,"column_end":11},"name":"fmt","qualname":"<PublicKey as std::fmt::LowerHex>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10301},"children":[],"decl_id":{"krate":2,"index":10302},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":71285,"byte_end":71288,"line_start":101,"line_end":101,"column_start":8,"column_end":11},"name":"fmt","qualname":"<PublicKey as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":71445,"byte_end":71453,"line_start":108,"line_end":108,"column_start":8,"column_end":16},"name":"from_str","qualname":"<PublicKey as std::str::FromStr>::from_str","value":"fn from_str<'_>(&'_ str) -> Result<PublicKey, Error>","parent":{"krate":2,"index":12989},"children":[],"decl_id":{"krate":2,"index":12991},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":73203,"byte_end":73213,"line_start":168,"line_end":168,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<SecretKey>::from_slice","value":"fn from_slice<'_>(&'_ [u8]) -> Result<SecretKey, Error>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `SECRET_KEY_SIZE`-byte slice to a secret key.","sig":null,"attributes":[{"value":"/ Converts a `SECRET_KEY_SIZE`-byte slice to a secret key.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":72932,"byte_end":72992,"line_start":159,"line_end":159,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":72997,"byte_end":73000,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":73005,"byte_end":73019,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":73024,"byte_end":73027,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":73032,"byte_end":73039,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ use secp256k1::SecretKey;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":73044,"byte_end":73073,"line_start":164,"line_end":164,"column_start":5,"column_end":34}},{"value":"/ let sk = SecretKey::from_slice(&[0xcd; 32]).expect(\"32 bytes, within curve order\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":73078,"byte_end":73165,"line_start":165,"line_end":165,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":73170,"byte_end":73177,"line_start":166,"line_end":166,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":73182,"byte_end":73191,"line_start":167,"line_end":167,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":74335,"byte_end":74347,"line_start":202,"line_end":202,"column_start":12,"column_end":24},"name":"from_keypair","qualname":"<SecretKey>::from_keypair","value":"fn from_keypair<'_>(&'_ KeyPair) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new secret key using data from BIP-340 [`KeyPair`].","sig":null,"attributes":[{"value":"/ Creates a new secret key using data from BIP-340 [`KeyPair`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":73872,"byte_end":73937,"line_start":188,"line_end":188,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":73942,"byte_end":73945,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":73950,"byte_end":73964,"line_start":190,"line_end":190,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":73969,"byte_end":73972,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":73977,"byte_end":73984,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"/ # #[cfg(all(feature = \"std\", feature =  \"rand-std\"))] {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":73989,"byte_end":74048,"line_start":193,"line_end":193,"column_start":5,"column_end":64}},{"value":"/ use secp256k1::{rand, Secp256k1, SecretKey, KeyPair};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":74053,"byte_end":74110,"line_start":194,"line_end":194,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":74115,"byte_end":74118,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ let secp = Secp256k1::new();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":74123,"byte_end":74155,"line_start":196,"line_end":196,"column_start":5,"column_end":37}},{"value":"/ let key_pair = KeyPair::new(&secp, &mut rand::thread_rng());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":74160,"byte_end":74224,"line_start":197,"line_end":197,"column_start":5,"column_end":69}},{"value":"/ let secret_key = SecretKey::from_keypair(&key_pair);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":74229,"byte_end":74285,"line_start":198,"line_end":198,"column_start":5,"column_end":61}},{"value":"/ # }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":74290,"byte_end":74297,"line_start":199,"line_end":199,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":74302,"byte_end":74309,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":74314,"byte_end":74323,"line_start":201,"line_end":201,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":74785,"byte_end":74801,"line_start":217,"line_end":217,"column_start":12,"column_end":28},"name":"serialize_secret","qualname":"<SecretKey>::serialize_secret","value":"fn serialize_secret<'_>(&'_ Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Serializes the secret key as byte value.\n","sig":null,"attributes":[{"value":"/ Serializes the secret key as byte value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":74715,"byte_end":74759,"line_start":215,"line_end":215,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":74764,"byte_end":74773,"line_start":216,"line_end":216,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":74926,"byte_end":74939,"line_start":223,"line_end":223,"column_start":12,"column_end":25},"name":"negate_assign","qualname":"<SecretKey>::negate_assign","value":"fn negate_assign<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Negates one secret key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":74873,"byte_end":74882,"line_start":221,"line_end":221,"column_start":5,"column_end":14}},{"value":"/ Negates one secret key.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":74887,"byte_end":74914,"line_start":222,"line_end":222,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":75437,"byte_end":75447,"line_start":242,"line_end":242,"column_start":12,"column_end":22},"name":"add_assign","qualname":"<SecretKey>::add_assign","value":"fn add_assign<'_, '_>(&'_ mut Self, &'_ [u8]) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Adds one secret key to another, modulo the curve order.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":75200,"byte_end":75209,"line_start":235,"line_end":235,"column_start":5,"column_end":14}},{"value":"/ Adds one secret key to another, modulo the curve order.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":75214,"byte_end":75273,"line_start":236,"line_end":236,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":75278,"byte_end":75281,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":75286,"byte_end":75298,"line_start":238,"line_end":238,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":75303,"byte_end":75306,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the resulting key would be invalid or if the tweak was not a 32-byte","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":75311,"byte_end":75403,"line_start":240,"line_end":240,"column_start":5,"column_end":97}},{"value":"/ length slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":75408,"byte_end":75425,"line_start":241,"line_end":241,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":76162,"byte_end":76172,"line_start":267,"line_end":267,"column_start":12,"column_end":22},"name":"mul_assign","qualname":"<SecretKey>::mul_assign","value":"fn mul_assign<'_, '_>(&'_ mut Self, &'_ [u8]) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Multiplies one secret key by another, modulo the curve order. Will\n return an error if the resulting key would be invalid or if\n the tweak was not a 32-byte length slice.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":75948,"byte_end":75957,"line_start":263,"line_end":263,"column_start":5,"column_end":14}},{"value":"/ Multiplies one secret key by another, modulo the curve order. Will","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":75962,"byte_end":76032,"line_start":264,"line_end":264,"column_start":5,"column_end":75}},{"value":"/ return an error if the resulting key would be invalid or if","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":76037,"byte_end":76100,"line_start":265,"line_end":265,"column_start":5,"column_end":68}},{"value":"/ the tweak was not a 32-byte length slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":76105,"byte_end":76150,"line_start":266,"line_end":266,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":78139,"byte_end":78145,"line_start":330,"line_end":330,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<PublicKey>::as_ptr","value":"fn as_ptr<'_>(&'_ Self) -> *const ffi::PublicKey","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw const pointer suitable for use with FFI functions.\n","sig":null,"attributes":[{"value":"/ Obtains a raw const pointer suitable for use with FFI functions.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":78045,"byte_end":78113,"line_start":328,"line_end":328,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":78118,"byte_end":78127,"line_start":329,"line_end":329,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":78303,"byte_end":78313,"line_start":336,"line_end":336,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<PublicKey>::as_mut_ptr","value":"fn as_mut_ptr<'_>(&'_ mut Self) -> *mut ffi::PublicKey","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw mutable pointer suitable for use with FFI functions.\n","sig":null,"attributes":[{"value":"/ Obtains a raw mutable pointer suitable for use with FFI functions.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":78207,"byte_end":78277,"line_start":334,"line_end":334,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":78282,"byte_end":78291,"line_start":335,"line_end":335,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":78840,"byte_end":78855,"line_start":354,"line_end":354,"column_start":12,"column_end":27},"name":"from_secret_key","qualname":"<PublicKey>::from_secret_key","value":"fn from_secret_key<C, '_, '_>(&'_ Secp256k1<C>, &'_ SecretKey) -> PublicKey\nwhere C: Signing","parent":null,"children":[],"decl_id":null,"docs":" Creates a new public key from a [`SecretKey`].","sig":null,"attributes":[{"value":"/ Creates a new public key from a [`SecretKey`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":78381,"byte_end":78431,"line_start":340,"line_end":340,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":78436,"byte_end":78439,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":78444,"byte_end":78458,"line_start":342,"line_end":342,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":78463,"byte_end":78466,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":78471,"byte_end":78478,"line_start":344,"line_end":344,"column_start":5,"column_end":12}},{"value":"/ # #[cfg(all(feature = \"std\", feature =  \"rand-std\"))] {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":78483,"byte_end":78542,"line_start":345,"line_end":345,"column_start":5,"column_end":64}},{"value":"/ use secp256k1::{rand, Secp256k1, SecretKey, PublicKey};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":78547,"byte_end":78606,"line_start":346,"line_end":346,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":78611,"byte_end":78614,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ let secp = Secp256k1::new();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":78619,"byte_end":78651,"line_start":348,"line_end":348,"column_start":5,"column_end":37}},{"value":"/ let secret_key = SecretKey::new(&mut rand::thread_rng());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":78656,"byte_end":78717,"line_start":349,"line_end":349,"column_start":5,"column_end":66}},{"value":"/ let public_key = PublicKey::from_secret_key(&secp, &secret_key);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":78722,"byte_end":78790,"line_start":350,"line_end":350,"column_start":5,"column_end":73}},{"value":"/ # }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":78795,"byte_end":78802,"line_start":351,"line_end":351,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":78807,"byte_end":78814,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":78819,"byte_end":78828,"line_start":353,"line_end":353,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":79725,"byte_end":79735,"line_start":375,"line_end":375,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<PublicKey>::from_slice","value":"fn from_slice<'_>(&'_ [u8]) -> Result<PublicKey, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a public key directly from a slice.\n","sig":null,"attributes":[{"value":"/ Creates a public key directly from a slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":79652,"byte_end":79699,"line_start":373,"line_end":373,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":79704,"byte_end":79713,"line_start":374,"line_end":374,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":80739,"byte_end":80751,"line_start":408,"line_end":408,"column_start":12,"column_end":24},"name":"from_keypair","qualname":"<PublicKey>::from_keypair","value":"fn from_keypair<'_>(&'_ KeyPair) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new compressed public key using data from BIP-340 [`KeyPair`].","sig":null,"attributes":[{"value":"/ Creates a new compressed public key using data from BIP-340 [`KeyPair`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":80265,"byte_end":80341,"line_start":394,"line_end":394,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":80346,"byte_end":80349,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":80354,"byte_end":80368,"line_start":396,"line_end":396,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":80373,"byte_end":80376,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":80381,"byte_end":80388,"line_start":398,"line_end":398,"column_start":5,"column_end":12}},{"value":"/ # #[cfg(all(feature = \"std\", feature =  \"rand-std\"))] {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":80393,"byte_end":80452,"line_start":399,"line_end":399,"column_start":5,"column_end":64}},{"value":"/ use secp256k1::{rand, Secp256k1, PublicKey, KeyPair};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":80457,"byte_end":80514,"line_start":400,"line_end":400,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":80519,"byte_end":80522,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ let secp = Secp256k1::new();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":80527,"byte_end":80559,"line_start":402,"line_end":402,"column_start":5,"column_end":37}},{"value":"/ let key_pair = KeyPair::new(&secp, &mut rand::thread_rng());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":80564,"byte_end":80628,"line_start":403,"line_end":403,"column_start":5,"column_end":69}},{"value":"/ let public_key = PublicKey::from_keypair(&key_pair);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":80633,"byte_end":80689,"line_start":404,"line_end":404,"column_start":5,"column_end":61}},{"value":"/ # }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":80694,"byte_end":80701,"line_start":405,"line_end":405,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":80706,"byte_end":80713,"line_start":406,"line_end":406,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":80718,"byte_end":80727,"line_start":407,"line_end":407,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":81302,"byte_end":81311,"line_start":424,"line_end":424,"column_start":12,"column_end":21},"name":"serialize","qualname":"<PublicKey>::serialize","value":"fn serialize<'_>(&'_ Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Serializes the key as a byte-encoded pair of values. In compressed form the y-coordinate is\n represented by only a single bit, as x determines it up to one bit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":81105,"byte_end":81114,"line_start":421,"line_end":421,"column_start":5,"column_end":14}},{"value":"/ Serializes the key as a byte-encoded pair of values. In compressed form the y-coordinate is","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":81119,"byte_end":81214,"line_start":422,"line_end":422,"column_start":5,"column_end":100}},{"value":"/ represented by only a single bit, as x determines it up to one bit.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":81219,"byte_end":81290,"line_start":423,"line_end":423,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":81980,"byte_end":82002,"line_start":443,"line_end":443,"column_start":12,"column_end":34},"name":"serialize_uncompressed","qualname":"<PublicKey>::serialize_uncompressed","value":"fn serialize_uncompressed<'_>(&'_ Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Serializes the key as a byte-encoded pair of values, in uncompressed form.\n","sig":null,"attributes":[{"value":"/ Serializes the key as a byte-encoded pair of values, in uncompressed form.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":81890,"byte_end":81968,"line_start":442,"line_end":442,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":82684,"byte_end":82697,"line_start":463,"line_end":463,"column_start":12,"column_end":25},"name":"negate_assign","qualname":"<PublicKey>::negate_assign","value":"fn negate_assign<C, '_, '_>(&'_ mut Self, &'_ Secp256k1<C>) where\nC: Verification","parent":null,"children":[],"decl_id":null,"docs":" Negates the public key in place.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":82622,"byte_end":82631,"line_start":461,"line_end":461,"column_start":5,"column_end":14}},{"value":"/ Negates the public key in place.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":82636,"byte_end":82672,"line_start":462,"line_end":462,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":83154,"byte_end":83168,"line_start":480,"line_end":480,"column_start":12,"column_end":26},"name":"add_exp_assign","qualname":"<PublicKey>::add_exp_assign","value":"fn add_exp_assign<C, '_, '_, '_>(&'_ mut Self, &'_ Secp256k1<C>, &'_ [u8])\n-> Result<(), Error> where C: Verification","parent":null,"children":[],"decl_id":null,"docs":" Adds the `other` public key to `self` in place.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":82925,"byte_end":82934,"line_start":473,"line_end":473,"column_start":5,"column_end":14}},{"value":"/ Adds the `other` public key to `self` in place.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":82939,"byte_end":82990,"line_start":474,"line_end":474,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":82995,"byte_end":82998,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":83003,"byte_end":83015,"line_start":476,"line_end":476,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":83020,"byte_end":83023,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the resulting key would be invalid or if the tweak was not a 32-byte","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":83028,"byte_end":83120,"line_start":478,"line_end":478,"column_start":5,"column_end":97}},{"value":"/ length slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":83125,"byte_end":83142,"line_start":479,"line_end":479,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":83844,"byte_end":83854,"line_start":504,"line_end":504,"column_start":12,"column_end":22},"name":"mul_assign","qualname":"<PublicKey>::mul_assign","value":"fn mul_assign<C, '_, '_, '_>(&'_ mut Self, &'_ Secp256k1<C>, &'_ [u8])\n-> Result<(), Error> where C: Verification","parent":null,"children":[],"decl_id":null,"docs":" Muliplies the public key in place by the scalar `other`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":83606,"byte_end":83615,"line_start":497,"line_end":497,"column_start":5,"column_end":14}},{"value":"/ Muliplies the public key in place by the scalar `other`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":83620,"byte_end":83680,"line_start":498,"line_end":498,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":83685,"byte_end":83688,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":83693,"byte_end":83705,"line_start":500,"line_end":500,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":83710,"byte_end":83713,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the resulting key would be invalid or if the tweak was not a 32-byte","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":83718,"byte_end":83810,"line_start":502,"line_end":502,"column_start":5,"column_end":97}},{"value":"/ length slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":83815,"byte_end":83832,"line_start":503,"line_end":503,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":84984,"byte_end":84991,"line_start":540,"line_end":540,"column_start":12,"column_end":19},"name":"combine","qualname":"<PublicKey>::combine","value":"fn combine<'_, '_>(&'_ Self, &'_ PublicKey) -> Result<PublicKey, Error>","parent":null,"children":[],"decl_id":null,"docs":" Adds a second key to this one, returning the sum.","sig":null,"attributes":[{"value":"/ Adds a second key to this one, returning the sum.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":84293,"byte_end":84346,"line_start":521,"line_end":521,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":84351,"byte_end":84354,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":84359,"byte_end":84371,"line_start":523,"line_end":523,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":84376,"byte_end":84379,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ If the result would be the point at infinity, i.e. adding this point to its own negation.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":84384,"byte_end":84477,"line_start":525,"line_end":525,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":84482,"byte_end":84485,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":84490,"byte_end":84504,"line_start":527,"line_end":527,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":84509,"byte_end":84512,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":84517,"byte_end":84524,"line_start":529,"line_end":529,"column_start":5,"column_end":12}},{"value":"/ # #[cfg(all(feature = \"rand-std\", any(feature =  \"alloc\", feature = \"std\")))] {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":84529,"byte_end":84612,"line_start":530,"line_end":530,"column_start":5,"column_end":88}},{"value":"/ use secp256k1::{rand, Secp256k1};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":84617,"byte_end":84654,"line_start":531,"line_end":531,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":84659,"byte_end":84662,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ let secp = Secp256k1::new();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":84667,"byte_end":84699,"line_start":533,"line_end":533,"column_start":5,"column_end":37}},{"value":"/ let mut rng = rand::thread_rng();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":84704,"byte_end":84741,"line_start":534,"line_end":534,"column_start":5,"column_end":42}},{"value":"/ let (_, pk1) = secp.generate_keypair(&mut rng);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":84746,"byte_end":84797,"line_start":535,"line_end":535,"column_start":5,"column_end":56}},{"value":"/ let (_, pk2) = secp.generate_keypair(&mut rng);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":84802,"byte_end":84853,"line_start":536,"line_end":536,"column_start":5,"column_end":56}},{"value":"/ let sum = pk1.combine(&pk2).expect(\"It's improbable to fail for 2 random public keys\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":84858,"byte_end":84949,"line_start":537,"line_end":537,"column_start":5,"column_end":96}},{"value":"/ # }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":84954,"byte_end":84961,"line_start":538,"line_end":538,"column_start":5,"column_end":12}},{"value":"/```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":84966,"byte_end":84972,"line_start":539,"line_end":539,"column_start":5,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":86056,"byte_end":86068,"line_start":567,"line_end":567,"column_start":12,"column_end":24},"name":"combine_keys","qualname":"<PublicKey>::combine_keys","value":"fn combine_keys<'_, '_>(&'_ [&'_ PublicKey]) -> Result<PublicKey, Error>","parent":null,"children":[],"decl_id":null,"docs":" Adds the keys in the provided slice together, returning the sum.","sig":null,"attributes":[{"value":"/ Adds the keys in the provided slice together, returning the sum.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":85107,"byte_end":85175,"line_start":544,"line_end":544,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":85180,"byte_end":85183,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":85188,"byte_end":85200,"line_start":546,"line_end":546,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":85205,"byte_end":85208,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ Errors under any of the following conditions:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":85213,"byte_end":85262,"line_start":548,"line_end":548,"column_start":5,"column_end":54}},{"value":"/ - The result would be the point at infinity, i.e. adding a point to its own negation.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":85267,"byte_end":85356,"line_start":549,"line_end":549,"column_start":5,"column_end":94}},{"value":"/ - The provided slice is empty.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":85361,"byte_end":85395,"line_start":550,"line_end":550,"column_start":5,"column_end":39}},{"value":"/ - The number of elements in the provided slice is greater than `i32::MAX`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":85400,"byte_end":85478,"line_start":551,"line_end":551,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":85483,"byte_end":85486,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":85491,"byte_end":85505,"line_start":553,"line_end":553,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":85510,"byte_end":85513,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":85518,"byte_end":85525,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"/ # #[cfg(all(feature = \"std\", feature =  \"rand-std\"))] {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":85530,"byte_end":85589,"line_start":556,"line_end":556,"column_start":5,"column_end":64}},{"value":"/ use secp256k1::{rand, Secp256k1, PublicKey};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":85594,"byte_end":85642,"line_start":557,"line_end":557,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":85647,"byte_end":85650,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ let secp = Secp256k1::new();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":85655,"byte_end":85687,"line_start":559,"line_end":559,"column_start":5,"column_end":37}},{"value":"/ let mut rng = rand::thread_rng();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":85692,"byte_end":85729,"line_start":560,"line_end":560,"column_start":5,"column_end":42}},{"value":"/ let (_, pk1) = secp.generate_keypair(&mut rng);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":85734,"byte_end":85785,"line_start":561,"line_end":561,"column_start":5,"column_end":56}},{"value":"/ let (_, pk2) = secp.generate_keypair(&mut rng);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":85790,"byte_end":85841,"line_start":562,"line_end":562,"column_start":5,"column_end":56}},{"value":"/ let (_, pk3) = secp.generate_keypair(&mut rng);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":85846,"byte_end":85897,"line_start":563,"line_end":563,"column_start":5,"column_end":56}},{"value":"/ let sum = PublicKey::combine_keys(&[&pk1, &pk2, &pk3]).expect(\"It's improbable to fail for 3 random public keys\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":85902,"byte_end":86020,"line_start":564,"line_end":564,"column_start":5,"column_end":123}},{"value":"/ # }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":86025,"byte_end":86032,"line_start":565,"line_end":565,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":86037,"byte_end":86044,"line_start":566,"line_end":566,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":86912,"byte_end":86920,"line_start":596,"line_end":596,"column_start":8,"column_end":16},"name":"as_c_ptr","qualname":"<PublicKey as secp256k1_sys::CPtr>::as_c_ptr","value":"fn as_c_ptr<'_>(&'_ Self) -> *const Self::Target","parent":{"krate":20,"index":194},"children":[],"decl_id":{"krate":20,"index":196},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":86989,"byte_end":87001,"line_start":600,"line_end":600,"column_start":8,"column_end":20},"name":"as_mut_c_ptr","qualname":"<PublicKey as secp256k1_sys::CPtr>::as_mut_c_ptr","value":"fn as_mut_c_ptr<'_>(&'_ mut Self) -> *mut Self::Target","parent":{"krate":20,"index":194},"children":[],"decl_id":{"krate":20,"index":197},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":87186,"byte_end":87190,"line_start":609,"line_end":609,"column_start":8,"column_end":12},"name":"from","qualname":"<PublicKey as std::convert::From>::from","value":"fn from(ffi::PublicKey) -> PublicKey","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":87169,"byte_end":87178,"line_start":608,"line_end":608,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":88263,"byte_end":88274,"line_start":644,"line_end":644,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<PublicKey as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ PublicKey)\n-> Option<::core::cmp::Ordering>","parent":{"krate":2,"index":2961},"children":[],"decl_id":{"krate":2,"index":2963},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":88434,"byte_end":88437,"line_start":650,"line_end":650,"column_start":8,"column_end":11},"name":"cmp","qualname":"<PublicKey as std::cmp::Ord>::cmp","value":"fn cmp<'_, '_>(&'_ Self, &'_ PublicKey) -> ::core::cmp::Ordering","parent":{"krate":2,"index":2951},"children":[],"decl_id":{"krate":2,"index":2952},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1007},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":89659,"byte_end":89666,"line_start":683,"line_end":683,"column_start":12,"column_end":19},"name":"KeyPair","qualname":"::key::KeyPair","value":"","parent":null,"children":[],"decl_id":null,"docs":" Opaque data structure that holds a keypair consisting of a secret and a public key.","sig":null,"attributes":[{"value":"/ Opaque data structure that holds a keypair consisting of a secret and a public key.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":88549,"byte_end":88636,"line_start":655,"line_end":655,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":88637,"byte_end":88640,"line_start":656,"line_end":656,"column_start":1,"column_end":4}},{"value":"/ # Serde support","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":88641,"byte_end":88660,"line_start":657,"line_end":657,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":88661,"byte_end":88664,"line_start":658,"line_end":658,"column_start":1,"column_end":4}},{"value":"/ [`Serialize`] and [`Deserialize`] are not implemented for this type, even with the `serde`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":88665,"byte_end":88759,"line_start":659,"line_end":659,"column_start":1,"column_end":95}},{"value":"/ feature active. This is due to security considerations, see the [`serde_keypair`] documentation","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":88760,"byte_end":88859,"line_start":660,"line_end":660,"column_start":1,"column_end":100}},{"value":"/ for details.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":88860,"byte_end":88876,"line_start":661,"line_end":661,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":88877,"byte_end":88880,"line_start":662,"line_end":662,"column_start":1,"column_end":4}},{"value":"/ If the `serde` and `global-context` features are active `KeyPair`s can be serialized and","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":88881,"byte_end":88973,"line_start":663,"line_end":663,"column_start":1,"column_end":93}},{"value":"/ deserialized by annotating them with `#[serde(with = \"secp256k1::serde_keypair\")]`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":88974,"byte_end":89060,"line_start":664,"line_end":664,"column_start":1,"column_end":87}},{"value":"/ inside structs or enums for which [`Serialize`] and [`Deserialize`] are being derived.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":89061,"byte_end":89151,"line_start":665,"line_end":665,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":89152,"byte_end":89155,"line_start":666,"line_end":666,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":89156,"byte_end":89170,"line_start":667,"line_end":667,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":89171,"byte_end":89174,"line_start":668,"line_end":668,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":89175,"byte_end":89191,"line_start":669,"line_end":669,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":89192,"byte_end":89195,"line_start":670,"line_end":670,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":89196,"byte_end":89203,"line_start":671,"line_end":671,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(all(feature = \"std\", feature =  \"rand-std\"))] {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":89204,"byte_end":89263,"line_start":672,"line_end":672,"column_start":1,"column_end":60}},{"value":"/ use secp256k1::{rand, KeyPair, Secp256k1};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":89264,"byte_end":89310,"line_start":673,"line_end":673,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":89311,"byte_end":89314,"line_start":674,"line_end":674,"column_start":1,"column_end":4}},{"value":"/ let secp = Secp256k1::new();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":89315,"byte_end":89347,"line_start":675,"line_end":675,"column_start":1,"column_end":33}},{"value":"/ let (secret_key, public_key) = secp.generate_keypair(&mut rand::thread_rng());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":89348,"byte_end":89430,"line_start":676,"line_end":676,"column_start":1,"column_end":83}},{"value":"/ let key_pair = KeyPair::from_secret_key(&secp, secret_key);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":89431,"byte_end":89494,"line_start":677,"line_end":677,"column_start":1,"column_end":64}},{"value":"/ # }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":89495,"byte_end":89502,"line_start":678,"line_end":678,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":89503,"byte_end":89510,"line_start":679,"line_end":679,"column_start":1,"column_end":8}},{"value":"/ [`Deserialize`]: serde::Deserialize","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":89511,"byte_end":89550,"line_start":680,"line_end":680,"column_start":1,"column_end":40}},{"value":"/ [`Serialize`]: serde::Serialize","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":89551,"byte_end":89586,"line_start":681,"line_end":681,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":89827,"byte_end":89833,"line_start":689,"line_end":689,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<KeyPair>::as_ptr","value":"fn as_ptr<'_>(&'_ Self) -> *const ffi::KeyPair","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw const pointer suitable for use with FFI functions.\n","sig":null,"attributes":[{"value":"/ Obtains a raw const pointer suitable for use with FFI functions.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":89733,"byte_end":89801,"line_start":687,"line_end":687,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":89806,"byte_end":89815,"line_start":688,"line_end":688,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":89989,"byte_end":89999,"line_start":695,"line_end":695,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<KeyPair>::as_mut_ptr","value":"fn as_mut_ptr<'_>(&'_ mut Self) -> *mut ffi::KeyPair","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw mutable pointer suitable for use with FFI functions.\n","sig":null,"attributes":[{"value":"/ Obtains a raw mutable pointer suitable for use with FFI functions.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":89893,"byte_end":89963,"line_start":693,"line_end":693,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":89968,"byte_end":89977,"line_start":694,"line_end":694,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":90460,"byte_end":90475,"line_start":707,"line_end":707,"column_start":12,"column_end":27},"name":"from_secret_key","qualname":"<KeyPair>::from_secret_key","value":"fn from_secret_key<C, '_>(&'_ Secp256k1<C>, SecretKey) -> KeyPair where\nC: Signing","parent":null,"children":[],"decl_id":null,"docs":" Creates a Schnorr [`KeyPair`] directly from generic Secp256k1 secret key.","sig":null,"attributes":[{"value":"/ Creates a Schnorr [`KeyPair`] directly from generic Secp256k1 secret key.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":90065,"byte_end":90142,"line_start":699,"line_end":699,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":90147,"byte_end":90150,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":90155,"byte_end":90167,"line_start":701,"line_end":701,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":90172,"byte_end":90175,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ Panics if internal representation of the provided [`SecretKey`] does not hold correct secret","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":90180,"byte_end":90276,"line_start":703,"line_end":703,"column_start":5,"column_end":101}},{"value":"/ key value obtained from Secp256k1 library previously, specifically when secret key value is","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":90281,"byte_end":90376,"line_start":704,"line_end":704,"column_start":5,"column_end":100}},{"value":"/ out-of-range (0 or in excess of the group order).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":90381,"byte_end":90434,"line_start":705,"line_end":705,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":90439,"byte_end":90448,"line_start":706,"line_end":706,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":91207,"byte_end":91224,"line_start":728,"line_end":728,"column_start":12,"column_end":29},"name":"from_seckey_slice","qualname":"<KeyPair>::from_seckey_slice","value":"fn from_seckey_slice<C, '_, '_>(&'_ Secp256k1<C>, &'_ [u8])\n-> Result<KeyPair, Error> where C: Signing","parent":null,"children":[],"decl_id":null,"docs":" Creates a Schnorr [`KeyPair`] directly from a secret key slice.","sig":null,"attributes":[{"value":"/ Creates a Schnorr [`KeyPair`] directly from a secret key slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":90912,"byte_end":90979,"line_start":721,"line_end":721,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":90984,"byte_end":90987,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":90992,"byte_end":91004,"line_start":723,"line_end":723,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":91009,"byte_end":91012,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ [`Error::InvalidSecretKey`] if the provided data has an incorrect length, exceeds Secp256k1","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":91017,"byte_end":91112,"line_start":725,"line_end":725,"column_start":5,"column_end":100}},{"value":"/ field `p` value or the corresponding public key is not even.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":91117,"byte_end":91181,"line_start":726,"line_end":726,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":91186,"byte_end":91195,"line_start":727,"line_end":727,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":91971,"byte_end":91986,"line_start":752,"line_end":752,"column_start":12,"column_end":27},"name":"from_seckey_str","qualname":"<KeyPair>::from_seckey_str","value":"fn from_seckey_str<C, '_, '_>(&'_ Secp256k1<C>, &'_ str)\n-> Result<KeyPair, Error> where C: Signing","parent":null,"children":[],"decl_id":null,"docs":" Creates a Schnorr [`KeyPair`] directly from a secret key string.","sig":null,"attributes":[{"value":"/ Creates a Schnorr [`KeyPair`] directly from a secret key string.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":91739,"byte_end":91807,"line_start":746,"line_end":746,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":91812,"byte_end":91815,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":91820,"byte_end":91832,"line_start":748,"line_end":748,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":91837,"byte_end":91840,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ [`Error::InvalidSecretKey`] if corresponding public key for the provided secret key is not even.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":91845,"byte_end":91945,"line_start":750,"line_end":750,"column_start":5,"column_end":105}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":91950,"byte_end":91959,"line_start":751,"line_end":751,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":94297,"byte_end":94313,"line_start":814,"line_end":814,"column_start":12,"column_end":28},"name":"serialize_secret","qualname":"<KeyPair>::serialize_secret","value":"fn serialize_secret<'_>(&'_ Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Serializes the key pair as a secret key byte value.\n","sig":null,"attributes":[{"value":"/ Serializes the key pair as a secret key byte value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":94216,"byte_end":94271,"line_start":812,"line_end":812,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":94276,"byte_end":94285,"line_start":813,"line_end":813,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":95426,"byte_end":95442,"line_start":846,"line_end":846,"column_start":12,"column_end":28},"name":"tweak_add_assign","qualname":"<KeyPair>::tweak_add_assign","value":"fn tweak_add_assign<C, '_, '_, '_>(&'_ mut Self, &'_ Secp256k1<C>, &'_ [u8])\n-> Result<(), Error> where C: Verification","parent":null,"children":[],"decl_id":null,"docs":" Tweaks a keypair by adding the given tweak to the secret key and updating the public key\n accordingly.","sig":null,"attributes":[{"value":"/ Tweaks a keypair by adding the given tweak to the secret key and updating the public key","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":94418,"byte_end":94510,"line_start":818,"line_end":818,"column_start":5,"column_end":97}},{"value":"/ accordingly.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":94515,"byte_end":94531,"line_start":819,"line_end":819,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":94536,"byte_end":94539,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":94544,"byte_end":94556,"line_start":821,"line_end":821,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":94561,"byte_end":94564,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the resulting key would be invalid or if the tweak was not a 32-byte","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":94569,"byte_end":94661,"line_start":823,"line_end":823,"column_start":5,"column_end":97}},{"value":"/ length slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":94666,"byte_end":94683,"line_start":824,"line_end":824,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":94688,"byte_end":94691,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ NB: Will not error if the tweaked public key has an odd value and can't be used for","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":94696,"byte_end":94783,"line_start":826,"line_end":826,"column_start":5,"column_end":92}},{"value":"/     BIP 340-342 purposes.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":94788,"byte_end":94817,"line_start":827,"line_end":827,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":94822,"byte_end":94825,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":94830,"byte_end":94844,"line_start":829,"line_end":829,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":94849,"byte_end":94852,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":94857,"byte_end":94864,"line_start":831,"line_end":831,"column_start":5,"column_end":12}},{"value":"/ # #[cfg(all(feature = \"std\", feature =  \"rand-std\"))] {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":94869,"byte_end":94928,"line_start":832,"line_end":832,"column_start":5,"column_end":64}},{"value":"/ use secp256k1::{Secp256k1, KeyPair};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":94933,"byte_end":94973,"line_start":833,"line_end":833,"column_start":5,"column_end":45}},{"value":"/ use secp256k1::rand::{RngCore, thread_rng};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":94978,"byte_end":95025,"line_start":834,"line_end":834,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":95030,"byte_end":95033,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ let secp = Secp256k1::new();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":95038,"byte_end":95070,"line_start":836,"line_end":836,"column_start":5,"column_end":37}},{"value":"/ let mut tweak = [0u8; 32];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":95075,"byte_end":95105,"line_start":837,"line_end":837,"column_start":5,"column_end":35}},{"value":"/ thread_rng().fill_bytes(&mut tweak);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":95110,"byte_end":95150,"line_start":838,"line_end":838,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":95155,"byte_end":95158,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ let mut key_pair = KeyPair::new(&secp, &mut thread_rng());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":95163,"byte_end":95225,"line_start":840,"line_end":840,"column_start":5,"column_end":67}},{"value":"/ key_pair.tweak_add_assign(&secp, &tweak).expect(\"Improbable to fail with a randomly generated tweak\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":95230,"byte_end":95336,"line_start":841,"line_end":841,"column_start":5,"column_end":111}},{"value":"/ # }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":95341,"byte_end":95348,"line_start":842,"line_end":842,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":95353,"byte_end":95360,"line_start":843,"line_end":843,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":95405,"byte_end":95414,"line_start":845,"line_end":845,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":96035,"byte_end":96045,"line_start":871,"line_end":871,"column_start":12,"column_end":22},"name":"public_key","qualname":"<KeyPair>::public_key","value":"fn public_key<'_>(&'_ Self) -> XOnlyPublicKey","parent":null,"children":[],"decl_id":null,"docs":" Gets the [XOnlyPublicKey] for this [KeyPair].\n","sig":null,"attributes":[{"value":"/ Gets the [XOnlyPublicKey] for this [KeyPair].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":95960,"byte_end":96009,"line_start":869,"line_end":869,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":96014,"byte_end":96023,"line_start":870,"line_end":870,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":96559,"byte_end":96563,"line_start":886,"line_end":886,"column_start":8,"column_end":12},"name":"from","qualname":"<SecretKey as std::convert::From>::from","value":"fn from(KeyPair) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":96542,"byte_end":96551,"line_start":885,"line_end":885,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":96701,"byte_end":96705,"line_start":893,"line_end":893,"column_start":8,"column_end":12},"name":"from","qualname":"<SecretKey as std::convert::From>::from","value":"fn from(&'a KeyPair) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":96684,"byte_end":96693,"line_start":892,"line_end":892,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":96838,"byte_end":96842,"line_start":900,"line_end":900,"column_start":8,"column_end":12},"name":"from","qualname":"<PublicKey as std::convert::From>::from","value":"fn from(KeyPair) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":96821,"byte_end":96830,"line_start":899,"line_end":899,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":96980,"byte_end":96984,"line_start":907,"line_end":907,"column_start":8,"column_end":12},"name":"from","qualname":"<PublicKey as std::convert::From>::from","value":"fn from(&'a KeyPair) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":96963,"byte_end":96972,"line_start":906,"line_end":906,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":97123,"byte_end":97131,"line_start":915,"line_end":915,"column_start":8,"column_end":16},"name":"from_str","qualname":"<KeyPair as std::str::FromStr>::from_str","value":"fn from_str<'_>(&'_ str) -> Result<Self, Self::Err>","parent":{"krate":2,"index":12989},"children":[],"decl_id":{"krate":2,"index":12991},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1033},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":99134,"byte_end":99148,"line_start":973,"line_end":973,"column_start":12,"column_end":26},"name":"XOnlyPublicKey","qualname":"::key::XOnlyPublicKey","value":"","parent":null,"children":[],"decl_id":null,"docs":" An x-only public key, used for verification of Schnorr signatures and serialized according to BIP-340.","sig":null,"attributes":[{"value":"/ An x-only public key, used for verification of Schnorr signatures and serialized according to BIP-340.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":98598,"byte_end":98704,"line_start":957,"line_end":957,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":98705,"byte_end":98708,"line_start":958,"line_end":958,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":98709,"byte_end":98723,"line_start":959,"line_end":959,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":98724,"byte_end":98727,"line_start":960,"line_end":960,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":98728,"byte_end":98744,"line_start":961,"line_end":961,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":98745,"byte_end":98748,"line_start":962,"line_end":962,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":98749,"byte_end":98756,"line_start":963,"line_end":963,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(all(feature = \"std\", feature =  \"rand-std\"))] {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":98757,"byte_end":98816,"line_start":964,"line_end":964,"column_start":1,"column_end":60}},{"value":"/ use secp256k1::{rand, Secp256k1, KeyPair, XOnlyPublicKey};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":98817,"byte_end":98879,"line_start":965,"line_end":965,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":98880,"byte_end":98883,"line_start":966,"line_end":966,"column_start":1,"column_end":4}},{"value":"/ let secp = Secp256k1::new();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":98884,"byte_end":98916,"line_start":967,"line_end":967,"column_start":1,"column_end":33}},{"value":"/ let key_pair = KeyPair::new(&secp, &mut rand::thread_rng());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":98917,"byte_end":98981,"line_start":968,"line_end":968,"column_start":1,"column_end":65}},{"value":"/ let xonly = XOnlyPublicKey::from_keypair(&key_pair);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":98982,"byte_end":99038,"line_start":969,"line_end":969,"column_start":1,"column_end":57}},{"value":"/ # }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":99039,"byte_end":99046,"line_start":970,"line_end":970,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":99047,"byte_end":99054,"line_start":971,"line_end":971,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":99219,"byte_end":99222,"line_start":976,"line_end":976,"column_start":8,"column_end":11},"name":"fmt","qualname":"<XOnlyPublicKey as std::fmt::LowerHex>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10301},"children":[],"decl_id":{"krate":2,"index":10302},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":99455,"byte_end":99458,"line_start":986,"line_end":986,"column_start":8,"column_end":11},"name":"fmt","qualname":"<XOnlyPublicKey as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":99620,"byte_end":99628,"line_start":993,"line_end":993,"column_start":8,"column_end":16},"name":"from_str","qualname":"<XOnlyPublicKey as std::str::FromStr>::from_str","value":"fn from_str<'_>(&'_ str) -> Result<XOnlyPublicKey, Error>","parent":{"krate":2,"index":12989},"children":[],"decl_id":{"krate":2,"index":12991},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":100129,"byte_end":100135,"line_start":1007,"line_end":1007,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<XOnlyPublicKey>::as_ptr","value":"fn as_ptr<'_>(&'_ Self) -> *const ffi::XOnlyPublicKey","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw const pointer suitable for use with FFI functions.\n","sig":null,"attributes":[{"value":"/ Obtains a raw const pointer suitable for use with FFI functions.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":100035,"byte_end":100103,"line_start":1005,"line_end":1005,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":100108,"byte_end":100117,"line_start":1006,"line_end":1006,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":100298,"byte_end":100308,"line_start":1013,"line_end":1013,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<XOnlyPublicKey>::as_mut_ptr","value":"fn as_mut_ptr<'_>(&'_ mut Self) -> *mut ffi::XOnlyPublicKey","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw mutable pointer suitable for use with FFI functions.\n","sig":null,"attributes":[{"value":"/ Obtains a raw mutable pointer suitable for use with FFI functions.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":100202,"byte_end":100272,"line_start":1011,"line_end":1011,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":100277,"byte_end":100286,"line_start":1012,"line_end":1012,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":100468,"byte_end":100480,"line_start":1019,"line_end":1019,"column_start":12,"column_end":24},"name":"from_keypair","qualname":"<XOnlyPublicKey>::from_keypair","value":"fn from_keypair<'_>(&'_ KeyPair) -> XOnlyPublicKey","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Schnorr public key from a Schnorr key pair.\n","sig":null,"attributes":[{"value":"/ Creates a new Schnorr public key from a Schnorr key pair.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":100381,"byte_end":100442,"line_start":1017,"line_end":1017,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":100447,"byte_end":100456,"line_start":1018,"line_end":1018,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":101226,"byte_end":101236,"line_start":1041,"line_end":1041,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<XOnlyPublicKey>::from_slice","value":"fn from_slice<'_>(&'_ [u8]) -> Result<XOnlyPublicKey, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Schnorr public key directly from a slice.","sig":null,"attributes":[{"value":"/ Creates a Schnorr public key directly from a slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":100942,"byte_end":100997,"line_start":1034,"line_end":1034,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":101002,"byte_end":101005,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":101010,"byte_end":101022,"line_start":1036,"line_end":1036,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":101027,"byte_end":101030,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ Returns [`Error::InvalidPublicKey`] if the length of the data slice is not 32 bytes or the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":101035,"byte_end":101129,"line_start":1038,"line_end":1038,"column_start":5,"column_end":99}},{"value":"/ slice does not represent a valid Secp256k1 point x coordinate.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":101134,"byte_end":101200,"line_start":1039,"line_end":1039,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":101205,"byte_end":101214,"line_start":1040,"line_end":1040,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":101928,"byte_end":101937,"line_start":1063,"line_end":1063,"column_start":12,"column_end":21},"name":"serialize","qualname":"<XOnlyPublicKey>::serialize","value":"fn serialize<'_>(&'_ Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Serializes the key as a byte-encoded x coordinate value (32 bytes).\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":101831,"byte_end":101840,"line_start":1061,"line_end":1061,"column_start":5,"column_end":14}},{"value":"/ Serializes the key as a byte-encoded x coordinate value (32 bytes).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":101845,"byte_end":101916,"line_start":1062,"line_end":1062,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":103435,"byte_end":103451,"line_start":1105,"line_end":1105,"column_start":12,"column_end":28},"name":"tweak_add_assign","qualname":"<XOnlyPublicKey>::tweak_add_assign","value":"fn tweak_add_assign<V, '_, '_, '_>(&'_ mut Self, &'_ Secp256k1<V>, &'_ [u8])\n-> Result<Parity, Error> where V: Verification","parent":null,"children":[],"decl_id":null,"docs":" Tweaks an x-only PublicKey by adding the generator multiplied with the given tweak to it.","sig":null,"attributes":[{"value":"/ Tweaks an x-only PublicKey by adding the generator multiplied with the given tweak to it.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":102347,"byte_end":102440,"line_start":1077,"line_end":1077,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":102445,"byte_end":102448,"line_start":1078,"line_end":1078,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":102453,"byte_end":102466,"line_start":1079,"line_end":1079,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":102471,"byte_end":102474,"line_start":1080,"line_end":1080,"column_start":5,"column_end":8}},{"value":"/ An opaque type representing the parity of the tweaked key, this should be provided to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":102479,"byte_end":102568,"line_start":1081,"line_end":1081,"column_start":5,"column_end":94}},{"value":"/ `tweak_add_check` which can be used to verify a tweak more efficiently than regenerating","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":102573,"byte_end":102665,"line_start":1082,"line_end":1082,"column_start":5,"column_end":97}},{"value":"/ it and checking equality.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":102670,"byte_end":102699,"line_start":1083,"line_end":1083,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":102704,"byte_end":102707,"line_start":1084,"line_end":1084,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":102712,"byte_end":102724,"line_start":1085,"line_end":1085,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":102729,"byte_end":102732,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/ If the resulting key would be invalid or if the tweak was not a 32-byte length slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":102737,"byte_end":102826,"line_start":1087,"line_end":1087,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":102831,"byte_end":102834,"line_start":1088,"line_end":1088,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":102839,"byte_end":102853,"line_start":1089,"line_end":1089,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":102858,"byte_end":102861,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":102866,"byte_end":102873,"line_start":1091,"line_end":1091,"column_start":5,"column_end":12}},{"value":"/ # #[cfg(all(feature = \"std\", feature =  \"rand-std\"))] {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":102878,"byte_end":102937,"line_start":1092,"line_end":1092,"column_start":5,"column_end":64}},{"value":"/ use secp256k1::{Secp256k1, KeyPair};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":102942,"byte_end":102982,"line_start":1093,"line_end":1093,"column_start":5,"column_end":45}},{"value":"/ use secp256k1::rand::{RngCore, thread_rng};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":102987,"byte_end":103034,"line_start":1094,"line_end":1094,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":103039,"byte_end":103042,"line_start":1095,"line_end":1095,"column_start":5,"column_end":8}},{"value":"/ let secp = Secp256k1::new();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":103047,"byte_end":103079,"line_start":1096,"line_end":1096,"column_start":5,"column_end":37}},{"value":"/ let mut tweak = [0u8; 32];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":103084,"byte_end":103114,"line_start":1097,"line_end":1097,"column_start":5,"column_end":35}},{"value":"/ thread_rng().fill_bytes(&mut tweak);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":103119,"byte_end":103159,"line_start":1098,"line_end":1098,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":103164,"byte_end":103167,"line_start":1099,"line_end":1099,"column_start":5,"column_end":8}},{"value":"/ let mut key_pair = KeyPair::new(&secp, &mut thread_rng());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":103172,"byte_end":103234,"line_start":1100,"line_end":1100,"column_start":5,"column_end":67}},{"value":"/ let mut public_key = key_pair.public_key();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":103239,"byte_end":103286,"line_start":1101,"line_end":1101,"column_start":5,"column_end":52}},{"value":"/ public_key.tweak_add_assign(&secp, &tweak).expect(\"Improbable to fail with a randomly generated tweak\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":103291,"byte_end":103399,"line_start":1102,"line_end":1102,"column_start":5,"column_end":113}},{"value":"/ # }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":103404,"byte_end":103411,"line_start":1103,"line_end":1103,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":103416,"byte_end":103423,"line_start":1104,"line_end":1104,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":105788,"byte_end":105803,"line_start":1172,"line_end":1172,"column_start":12,"column_end":27},"name":"tweak_add_check","qualname":"<XOnlyPublicKey>::tweak_add_check","value":"fn tweak_add_check<V, '_, '_,\n'_>(&'_ Self, &'_ Secp256k1<V>, &'_ Self, Parity, [u8; ]) -> bool where\nV: Verification","parent":null,"children":[],"decl_id":null,"docs":" Verifies that a tweak produced by [`XOnlyPublicKey::tweak_add_assign`] was computed correctly.","sig":null,"attributes":[{"value":"/ Verifies that a tweak produced by [`XOnlyPublicKey::tweak_add_assign`] was computed correctly.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":104419,"byte_end":104517,"line_start":1141,"line_end":1141,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":104522,"byte_end":104525,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ Should be called on the original untweaked key. Takes the tweaked key and output parity from","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":104530,"byte_end":104626,"line_start":1143,"line_end":1143,"column_start":5,"column_end":101}},{"value":"/ [`XOnlyPublicKey::tweak_add_assign`] as input.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":104631,"byte_end":104681,"line_start":1144,"line_end":1144,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":104686,"byte_end":104689,"line_start":1145,"line_end":1145,"column_start":5,"column_end":8}},{"value":"/ Currently this is not much more efficient than just recomputing the tweak and checking","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":104694,"byte_end":104784,"line_start":1146,"line_end":1146,"column_start":5,"column_end":95}},{"value":"/ equality. However, in future this API will support batch verification, which is","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":104789,"byte_end":104872,"line_start":1147,"line_end":1147,"column_start":5,"column_end":88}},{"value":"/ significantly faster, so it is wise to design protocols with this in mind.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":104877,"byte_end":104955,"line_start":1148,"line_end":1148,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":104960,"byte_end":104963,"line_start":1149,"line_end":1149,"column_start":5,"column_end":8}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":104968,"byte_end":104981,"line_start":1150,"line_end":1150,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":104986,"byte_end":104989,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ True if tweak and check is successful, false otherwise.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":104994,"byte_end":105053,"line_start":1152,"line_end":1152,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":105058,"byte_end":105061,"line_start":1153,"line_end":1153,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":105066,"byte_end":105080,"line_start":1154,"line_end":1154,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":105085,"byte_end":105088,"line_start":1155,"line_end":1155,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":105093,"byte_end":105100,"line_start":1156,"line_end":1156,"column_start":5,"column_end":12}},{"value":"/ # #[cfg(all(feature = \"std\", feature =  \"rand-std\"))] {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":105105,"byte_end":105164,"line_start":1157,"line_end":1157,"column_start":5,"column_end":64}},{"value":"/ use secp256k1::{Secp256k1, KeyPair};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":105169,"byte_end":105209,"line_start":1158,"line_end":1158,"column_start":5,"column_end":45}},{"value":"/ use secp256k1::rand::{thread_rng, RngCore};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":105214,"byte_end":105261,"line_start":1159,"line_end":1159,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":105266,"byte_end":105269,"line_start":1160,"line_end":1160,"column_start":5,"column_end":8}},{"value":"/ let secp = Secp256k1::new();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":105274,"byte_end":105306,"line_start":1161,"line_end":1161,"column_start":5,"column_end":37}},{"value":"/ let mut tweak = [0u8; 32];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":105311,"byte_end":105341,"line_start":1162,"line_end":1162,"column_start":5,"column_end":35}},{"value":"/ thread_rng().fill_bytes(&mut tweak);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":105346,"byte_end":105386,"line_start":1163,"line_end":1163,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":105391,"byte_end":105394,"line_start":1164,"line_end":1164,"column_start":5,"column_end":8}},{"value":"/ let mut key_pair = KeyPair::new(&secp, &mut thread_rng());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":105399,"byte_end":105461,"line_start":1165,"line_end":1165,"column_start":5,"column_end":67}},{"value":"/ let mut public_key = key_pair.public_key();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":105466,"byte_end":105513,"line_start":1166,"line_end":1166,"column_start":5,"column_end":52}},{"value":"/ let original = public_key;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":105518,"byte_end":105548,"line_start":1167,"line_end":1167,"column_start":5,"column_end":35}},{"value":"/ let parity = public_key.tweak_add_assign(&secp, &tweak).expect(\"Improbable to fail with a randomly generated tweak\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":105553,"byte_end":105674,"line_start":1168,"line_end":1168,"column_start":5,"column_end":126}},{"value":"/ assert!(original.tweak_add_check(&secp, &public_key, parity, tweak));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":105679,"byte_end":105752,"line_start":1169,"line_end":1169,"column_start":5,"column_end":78}},{"value":"/ # }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":105757,"byte_end":105764,"line_start":1170,"line_end":1170,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":105769,"byte_end":105776,"line_start":1171,"line_end":1171,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1056},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":106496,"byte_end":106500,"line_start":1198,"line_end":1198,"column_start":5,"column_end":9},"name":"Even","qualname":"::key::Parity::Even","value":"Parity::Even","parent":{"krate":0,"index":1055},"children":[],"decl_id":null,"docs":" Even parity.\n","sig":null,"attributes":[{"value":"/ Even parity.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":106475,"byte_end":106491,"line_start":1197,"line_end":1197,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1059},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":106530,"byte_end":106533,"line_start":1200,"line_end":1200,"column_start":5,"column_end":8},"name":"Odd","qualname":"::key::Parity::Odd","value":"Parity::Odd","parent":{"krate":0,"index":1055},"children":[],"decl_id":null,"docs":" Odd parity.\n","sig":null,"attributes":[{"value":"/ Odd parity.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":106510,"byte_end":106525,"line_start":1199,"line_end":1199,"column_start":5,"column_end":20}}]},{"kind":"Enum","id":{"krate":0,"index":1055},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":106462,"byte_end":106468,"line_start":1196,"line_end":1196,"column_start":10,"column_end":16},"name":"Parity","qualname":"::key::Parity","value":"enum Parity { Even = , Odd = , }","parent":null,"children":[{"krate":0,"index":1056},{"krate":0,"index":1059}],"decl_id":null,"docs":" Represents the parity passed between FFI function calls.\n","sig":null,"attributes":[{"value":"/ Represents the parity passed between FFI function calls.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":106324,"byte_end":106384,"line_start":1194,"line_end":1194,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":106694,"byte_end":106699,"line_start":1207,"line_end":1207,"column_start":12,"column_end":17},"name":"to_u8","qualname":"<Parity>::to_u8","value":"fn to_u8(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Converts parity into an integer (byte) value.","sig":null,"attributes":[{"value":"/ Converts parity into an integer (byte) value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":106560,"byte_end":106609,"line_start":1204,"line_end":1204,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":106614,"byte_end":106617,"line_start":1205,"line_end":1205,"column_start":5,"column_end":8}},{"value":"/ This returns `0` for even parity and `1` for odd parity.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":106622,"byte_end":106682,"line_start":1206,"line_end":1206,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":106871,"byte_end":106877,"line_start":1214,"line_end":1214,"column_start":12,"column_end":18},"name":"to_i32","qualname":"<Parity>::to_i32","value":"fn to_i32(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Converts parity into an integer value.","sig":null,"attributes":[{"value":"/ Converts parity into an integer value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":106744,"byte_end":106786,"line_start":1211,"line_end":1211,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":106791,"byte_end":106794,"line_start":1212,"line_end":1212,"column_start":5,"column_end":8}},{"value":"/ This returns `0` for even parity and `1` for odd parity.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":106799,"byte_end":106859,"line_start":1213,"line_end":1213,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":107118,"byte_end":107125,"line_start":1222,"line_end":1222,"column_start":12,"column_end":19},"name":"from_u8","qualname":"<Parity>::from_u8","value":"fn from_u8(u8) -> Result<Parity, Error>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a [`Parity`] from a byte.","sig":null,"attributes":[{"value":"/ Constructs a [`Parity`] from a byte.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":106924,"byte_end":106964,"line_start":1218,"line_end":1218,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":106969,"byte_end":106972,"line_start":1219,"line_end":1219,"column_start":5,"column_end":8}},{"value":"/ The only allowed values are `0` meaning even parity and `1` meaning odd.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":106977,"byte_end":107053,"line_start":1220,"line_end":1220,"column_start":5,"column_end":81}},{"value":"/ Other values result in error being returned.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":107058,"byte_end":107106,"line_start":1221,"line_end":1221,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":107420,"byte_end":107428,"line_start":1230,"line_end":1230,"column_start":12,"column_end":20},"name":"from_i32","qualname":"<Parity>::from_i32","value":"fn from_i32(i32) -> Result<Parity, Error>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a [`Parity`] from a signed integer.","sig":null,"attributes":[{"value":"/ Constructs a [`Parity`] from a signed integer.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":107216,"byte_end":107266,"line_start":1226,"line_end":1226,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":107271,"byte_end":107274,"line_start":1227,"line_end":1227,"column_start":5,"column_end":8}},{"value":"/ The only allowed values are `0` meaning even parity and `1` meaning odd.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":107279,"byte_end":107355,"line_start":1228,"line_end":1228,"column_start":5,"column_end":81}},{"value":"/ Other values result in error being returned.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":107360,"byte_end":107408,"line_start":1229,"line_end":1229,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":107925,"byte_end":107929,"line_start":1244,"line_end":1244,"column_start":8,"column_end":12},"name":"from","qualname":"<Parity as std::convert::From>::from","value":"fn from(i32) -> Parity","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":" Please note, this method is deprecated and will be removed in an upcoming release, it\n is **not** equivalent to `from_u32()`, it is better to use `Parity::from_u32`.","sig":null,"attributes":[{"value":"/ Please note, this method is deprecated and will be removed in an upcoming release, it","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":107661,"byte_end":107750,"line_start":1240,"line_end":1240,"column_start":5,"column_end":94}},{"value":"/ is **not** equivalent to `from_u32()`, it is better to use `Parity::from_u32`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":107755,"byte_end":107837,"line_start":1241,"line_end":1241,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":107842,"byte_end":107845,"line_start":1242,"line_end":1242,"column_start":5,"column_end":8}},{"value":"/ This method returns same parity as the parity of input integer.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":107850,"byte_end":107917,"line_start":1243,"line_end":1243,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":108168,"byte_end":108172,"line_start":1255,"line_end":1255,"column_start":8,"column_end":12},"name":"from","qualname":"<i32 as std::convert::From>::from","value":"fn from(Parity) -> i32","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":108356,"byte_end":108362,"line_start":1264,"line_end":1264,"column_start":8,"column_end":14},"name":"bitxor","qualname":"<Parity as std::ops::BitXor>::bitxor","value":"fn bitxor(Self, Parity) -> Self::Output","parent":{"krate":2,"index":3400},"children":[],"decl_id":{"krate":2,"index":3403},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":109991,"byte_end":109999,"line_start":1314,"line_end":1314,"column_start":8,"column_end":16},"name":"as_c_ptr","qualname":"<XOnlyPublicKey as secp256k1_sys::CPtr>::as_c_ptr","value":"fn as_c_ptr<'_>(&'_ Self) -> *const Self::Target","parent":{"krate":20,"index":194},"children":[],"decl_id":{"krate":20,"index":196},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":110068,"byte_end":110080,"line_start":1318,"line_end":1318,"column_start":8,"column_end":20},"name":"as_mut_c_ptr","qualname":"<XOnlyPublicKey as secp256k1_sys::CPtr>::as_mut_c_ptr","value":"fn as_mut_c_ptr<'_>(&'_ mut Self) -> *mut Self::Target","parent":{"krate":20,"index":194},"children":[],"decl_id":{"krate":20,"index":197},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":110290,"byte_end":110294,"line_start":1326,"line_end":1326,"column_start":8,"column_end":12},"name":"from","qualname":"<XOnlyPublicKey as std::convert::From>::from","value":"fn from(ffi::XOnlyPublicKey) -> XOnlyPublicKey","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":110273,"byte_end":110282,"line_start":1325,"line_end":1325,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":110432,"byte_end":110436,"line_start":1332,"line_end":1332,"column_start":8,"column_end":12},"name":"from","qualname":"<XOnlyPublicKey as std::convert::From>::from","value":"fn from(::key::PublicKey) -> XOnlyPublicKey","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":349},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/constants.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"constants","qualname":"::constants","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/constants.rs","parent":null,"children":[{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":361},{"krate":0,"index":363},{"krate":0,"index":365}],"decl_id":null,"docs":" Constants related to the API and the underlying curve.","sig":null,"attributes":[{"value":"/ Constants related to the API and the underlying curve.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/constants.rs","byte_start":137455,"byte_end":137513,"line_start":16,"line_end":16,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/constants.rs","byte_start":137514,"byte_end":137517,"line_start":17,"line_end":17,"column_start":1,"column_end":4}}]},{"kind":"Const","id":{"krate":0,"index":350},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/constants.rs","byte_start":137567,"byte_end":137579,"line_start":20,"line_end":20,"column_start":11,"column_end":23},"name":"MESSAGE_SIZE","qualname":"::constants::MESSAGE_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The size (in bytes) of a message.\n","sig":null,"attributes":[{"value":"/ The size (in bytes) of a message.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/constants.rs","byte_start":137519,"byte_end":137556,"line_start":19,"line_end":19,"column_start":1,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":351},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/constants.rs","byte_start":137645,"byte_end":137660,"line_start":23,"line_end":23,"column_start":11,"column_end":26},"name":"SECRET_KEY_SIZE","qualname":"::constants::SECRET_KEY_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The size (in bytes) of a secret key.\n","sig":null,"attributes":[{"value":"/ The size (in bytes) of a secret key.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/constants.rs","byte_start":137594,"byte_end":137634,"line_start":22,"line_end":22,"column_start":1,"column_end":41}}]},{"kind":"Const","id":{"krate":0,"index":352},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/constants.rs","byte_start":137737,"byte_end":137752,"line_start":26,"line_end":26,"column_start":11,"column_end":26},"name":"PUBLIC_KEY_SIZE","qualname":"::constants::PUBLIC_KEY_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The size (in bytes) of a serialized public key.\n","sig":null,"attributes":[{"value":"/ The size (in bytes) of a serialized public key.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/constants.rs","byte_start":137675,"byte_end":137726,"line_start":25,"line_end":25,"column_start":1,"column_end":52}}]},{"kind":"Const","id":{"krate":0,"index":353},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/constants.rs","byte_start":137843,"byte_end":137871,"line_start":29,"line_end":29,"column_start":11,"column_end":39},"name":"UNCOMPRESSED_PUBLIC_KEY_SIZE","qualname":"::constants::UNCOMPRESSED_PUBLIC_KEY_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The size (in bytes) of an serialized uncompressed public key.\n","sig":null,"attributes":[{"value":"/ The size (in bytes) of an serialized uncompressed public key.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/constants.rs","byte_start":137767,"byte_end":137832,"line_start":28,"line_end":28,"column_start":1,"column_end":66}}]},{"kind":"Const","id":{"krate":0,"index":354},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/constants.rs","byte_start":137933,"byte_end":137951,"line_start":32,"line_end":32,"column_start":11,"column_end":29},"name":"MAX_SIGNATURE_SIZE","qualname":"::constants::MAX_SIGNATURE_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The maximum size of a signature.\n","sig":null,"attributes":[{"value":"/ The maximum size of a signature.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/constants.rs","byte_start":137886,"byte_end":137922,"line_start":31,"line_end":31,"column_start":1,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":355},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/constants.rs","byte_start":138021,"byte_end":138043,"line_start":35,"line_end":35,"column_start":11,"column_end":33},"name":"COMPACT_SIGNATURE_SIZE","qualname":"::constants::COMPACT_SIGNATURE_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The maximum size of a compact signature.\n","sig":null,"attributes":[{"value":"/ The maximum size of a compact signature.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/constants.rs","byte_start":137966,"byte_end":138010,"line_start":34,"line_end":34,"column_start":1,"column_end":45}}]},{"kind":"Const","id":{"krate":0,"index":356},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/constants.rs","byte_start":138105,"byte_end":138130,"line_start":38,"line_end":38,"column_start":11,"column_end":36},"name":"SCHNORRSIG_SIGNATURE_SIZE","qualname":"::constants::SCHNORRSIG_SIGNATURE_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The size of a Schnorr signature.\n","sig":null,"attributes":[{"value":"/ The size of a Schnorr signature.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/constants.rs","byte_start":138058,"byte_end":138094,"line_start":37,"line_end":37,"column_start":1,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":357},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/constants.rs","byte_start":138193,"byte_end":138219,"line_start":41,"line_end":41,"column_start":11,"column_end":37},"name":"SCHNORRSIG_PUBLIC_KEY_SIZE","qualname":"::constants::SCHNORRSIG_PUBLIC_KEY_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The size of a Schnorr public key.\n","sig":null,"attributes":[{"value":"/ The size of a Schnorr public key.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/constants.rs","byte_start":138145,"byte_end":138182,"line_start":40,"line_end":40,"column_start":1,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":358},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/constants.rs","byte_start":138272,"byte_end":138285,"line_start":44,"line_end":44,"column_start":11,"column_end":24},"name":"KEY_PAIR_SIZE","qualname":"::constants::KEY_PAIR_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The size of a key pair.\n","sig":null,"attributes":[{"value":"/ The size of a key pair.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/constants.rs","byte_start":138234,"byte_end":138261,"line_start":43,"line_end":43,"column_start":1,"column_end":28}}]},{"kind":"Const","id":{"krate":0,"index":359},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/constants.rs","byte_start":138357,"byte_end":138367,"line_start":47,"line_end":47,"column_start":11,"column_end":21},"name":"FIELD_SIZE","qualname":"::constants::FIELD_SIZE","value":"[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" The Prime for the secp256k1 field element.\n","sig":null,"attributes":[{"value":"/ The Prime for the secp256k1 field element.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/constants.rs","byte_start":138300,"byte_end":138346,"line_start":46,"line_end":46,"column_start":1,"column_end":47}}]},{"kind":"Const","id":{"krate":0,"index":361},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/constants.rs","byte_start":138641,"byte_end":138652,"line_start":55,"line_end":55,"column_start":11,"column_end":22},"name":"CURVE_ORDER","qualname":"::constants::CURVE_ORDER","value":"[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" The order of the secp256k1 curve.\n","sig":null,"attributes":[{"value":"/ The order of the secp256k1 curve.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/constants.rs","byte_start":138593,"byte_end":138630,"line_start":54,"line_end":54,"column_start":1,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":363},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/constants.rs","byte_start":138927,"byte_end":138938,"line_start":63,"line_end":63,"column_start":11,"column_end":22},"name":"GENERATOR_X","qualname":"::constants::GENERATOR_X","value":"[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" The X coordinate of the generator.\n","sig":null,"attributes":[{"value":"/ The X coordinate of the generator.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/constants.rs","byte_start":138878,"byte_end":138916,"line_start":62,"line_end":62,"column_start":1,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":365},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/constants.rs","byte_start":139213,"byte_end":139224,"line_start":71,"line_end":71,"column_start":11,"column_end":22},"name":"GENERATOR_Y","qualname":"::constants::GENERATOR_Y","value":"[u8; ]","parent":null,"children":[],"decl_id":null,"docs":" The Y coordinate of the generator.\n","sig":null,"attributes":[{"value":"/ The Y coordinate of the generator.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/constants.rs","byte_start":139164,"byte_end":139202,"line_start":70,"line_end":70,"column_start":1,"column_end":39}}]},{"kind":"Mod","id":{"krate":0,"index":367},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ecdh","qualname":"::ecdh","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","parent":null,"children":[{"krate":0,"index":368},{"krate":0,"index":371},{"krate":0,"index":372},{"krate":0,"index":375},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":382},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":389},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":396},{"krate":0,"index":399},{"krate":0,"index":1080},{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1088},{"krate":0,"index":1090},{"krate":0,"index":1095},{"krate":0,"index":1100},{"krate":0,"index":1105},{"krate":0,"index":1110},{"krate":0,"index":1115},{"krate":0,"index":1120},{"krate":0,"index":1125},{"krate":0,"index":1130},{"krate":0,"index":402},{"krate":0,"index":410},{"krate":0,"index":412},{"krate":0,"index":414},{"krate":0,"index":417},{"krate":0,"index":418}],"decl_id":null,"docs":" Support for shared secret computations.","sig":null,"attributes":[{"value":"/ Support for shared secret computations.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":139927,"byte_end":139970,"line_start":15,"line_end":15,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":139971,"byte_end":139974,"line_start":16,"line_end":16,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":1080},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":140740,"byte_end":140752,"line_start":43,"line_end":43,"column_start":12,"column_end":24},"name":"SharedSecret","qualname":"::ecdh::SharedSecret","value":"SharedSecret {  }","parent":null,"children":[{"krate":0,"index":1081},{"krate":0,"index":1083}],"decl_id":null,"docs":" Enables two parties to create a shared secret without revealing their own secrets.","sig":null,"attributes":[{"value":"/ Enables two parties to create a shared secret without revealing their own secrets.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":140132,"byte_end":140218,"line_start":25,"line_end":25,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":140219,"byte_end":140222,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":140223,"byte_end":140237,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":140238,"byte_end":140241,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":140242,"byte_end":140249,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(all(feature = \"std\", feature = \"rand-std\"))] {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":140250,"byte_end":140308,"line_start":30,"line_end":30,"column_start":1,"column_end":59}},{"value":"/ # use secp256k1::Secp256k1;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":140309,"byte_end":140340,"line_start":31,"line_end":31,"column_start":1,"column_end":32}},{"value":"/ # use secp256k1::ecdh::SharedSecret;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":140341,"byte_end":140381,"line_start":32,"line_end":32,"column_start":1,"column_end":41}},{"value":"/ # use secp256k1::rand::thread_rng;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":140382,"byte_end":140420,"line_start":33,"line_end":33,"column_start":1,"column_end":39}},{"value":"/ let s = Secp256k1::new();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":140421,"byte_end":140450,"line_start":34,"line_end":34,"column_start":1,"column_end":30}},{"value":"/ let (sk1, pk1) = s.generate_keypair(&mut thread_rng());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":140451,"byte_end":140510,"line_start":35,"line_end":35,"column_start":1,"column_end":60}},{"value":"/ let (sk2, pk2) = s.generate_keypair(&mut thread_rng());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":140511,"byte_end":140570,"line_start":36,"line_end":36,"column_start":1,"column_end":60}},{"value":"/ let sec1 = SharedSecret::new(&pk1, &sk2);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":140571,"byte_end":140616,"line_start":37,"line_end":37,"column_start":1,"column_end":46}},{"value":"/ let sec2 = SharedSecret::new(&pk2, &sk1);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":140617,"byte_end":140662,"line_start":38,"line_end":38,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(sec1, sec2);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":140663,"byte_end":140690,"line_start":39,"line_end":39,"column_start":1,"column_end":28}},{"value":"/ # }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":140691,"byte_end":140698,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":141519,"byte_end":141527,"line_start":70,"line_end":70,"column_start":12,"column_end":20},"name":"capacity","qualname":"<SharedSecret>::capacity","value":"fn capacity<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Gets the capacity of the underlying data buffer.\n","sig":null,"attributes":[{"value":"/ Gets the capacity of the underlying data buffer.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":141455,"byte_end":141507,"line_start":69,"line_end":69,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":141627,"byte_end":141630,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"len","qualname":"<SharedSecret>::len","value":"fn len<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Gets the len of the used data.\n","sig":null,"attributes":[{"value":"/ Gets the len of the used data.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":141581,"byte_end":141615,"line_start":74,"line_end":74,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":141745,"byte_end":141753,"line_start":80,"line_end":80,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SharedSecret>::is_empty","value":"fn is_empty<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the underlying data buffer is empty.\n","sig":null,"attributes":[{"value":"/ Returns true if the underlying data buffer is empty.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":141677,"byte_end":141733,"line_start":79,"line_end":79,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":142018,"byte_end":142020,"line_start":92,"line_end":92,"column_start":8,"column_end":10},"name":"eq","qualname":"<SharedSecret as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ SharedSecret) -> bool","parent":{"krate":2,"index":2915},"children":[],"decl_id":{"krate":2,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":142152,"byte_end":142158,"line_start":98,"line_end":98,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<SharedSecret as std::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ [u8]","parent":{"krate":2,"index":3160},"children":[],"decl_id":{"krate":2,"index":3162},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":142278,"byte_end":142283,"line_start":105,"line_end":105,"column_start":8,"column_end":13},"name":"deref","qualname":"<SharedSecret as std::ops::Deref>::deref","value":"fn deref<'_>(&'_ Self) -> &'_ [u8]","parent":{"krate":2,"index":3486},"children":[],"decl_id":{"krate":2,"index":3488},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":142687,"byte_end":142690,"line_start":120,"line_end":120,"column_start":12,"column_end":15},"name":"new","qualname":"<SharedSecret>::new","value":"fn new<'_, '_>(&'_ PublicKey, &'_ SecretKey) -> SharedSecret","parent":null,"children":[],"decl_id":null,"docs":" Creates a new shared secret from a pubkey and secret key.\n","sig":null,"attributes":[{"value":"/ Creates a new shared secret from a pubkey and secret key.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":142600,"byte_end":142661,"line_start":118,"line_end":118,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":142666,"byte_end":142675,"line_start":119,"line_end":119,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":144468,"byte_end":144481,"line_start":160,"line_end":160,"column_start":12,"column_end":25},"name":"new_with_hash","qualname":"<SharedSecret>::new_with_hash","value":"fn new_with_hash<F, '_, '_>(&'_ PublicKey, &'_ SecretKey, F) -> SharedSecret\nwhere F: FnMut([u8; ], [u8; ]) -> SharedSecret","parent":null,"children":[],"decl_id":null,"docs":" Creates a new shared secret from a pubkey and secret key with applied custom hash function.\n The custom hash function must be in the form of `fn(x: [u8;32], y: [u8;32]) -> SharedSecret`\n `SharedSecret` can be easily created via the `From` impl from arrays.\n # Examples\n ```\n # #[cfg(any(feature = \"alloc\", features = \"std\"))] {\n # use secp256k1::ecdh::SharedSecret;\n # use secp256k1::{Secp256k1, PublicKey, SecretKey};\n # fn sha2(_a: &[u8], _b: &[u8]) -> [u8; 32] {[0u8; 32]}\n # let secp = Secp256k1::signing_only();\n # let secret_key = SecretKey::from_slice(&[3u8; 32]).unwrap();\n # let secret_key2 = SecretKey::from_slice(&[7u8; 32]).unwrap();\n # let public_key = PublicKey::from_secret_key(&secp, &secret_key2);","sig":null,"attributes":[{"value":"/ Creates a new shared secret from a pubkey and secret key with applied custom hash function.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":143457,"byte_end":143552,"line_start":140,"line_end":140,"column_start":5,"column_end":100}},{"value":"/ The custom hash function must be in the form of `fn(x: [u8;32], y: [u8;32]) -> SharedSecret`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":143557,"byte_end":143653,"line_start":141,"line_end":141,"column_start":5,"column_end":101}},{"value":"/ `SharedSecret` can be easily created via the `From` impl from arrays.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":143658,"byte_end":143731,"line_start":142,"line_end":142,"column_start":5,"column_end":78}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":143736,"byte_end":143750,"line_start":143,"line_end":143,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":143755,"byte_end":143762,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/ # #[cfg(any(feature = \"alloc\", features = \"std\"))] {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":143767,"byte_end":143823,"line_start":145,"line_end":145,"column_start":5,"column_end":61}},{"value":"/ # use secp256k1::ecdh::SharedSecret;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":143828,"byte_end":143868,"line_start":146,"line_end":146,"column_start":5,"column_end":45}},{"value":"/ # use secp256k1::{Secp256k1, PublicKey, SecretKey};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":143873,"byte_end":143928,"line_start":147,"line_end":147,"column_start":5,"column_end":60}},{"value":"/ # fn sha2(_a: &[u8], _b: &[u8]) -> [u8; 32] {[0u8; 32]}","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":143933,"byte_end":143992,"line_start":148,"line_end":148,"column_start":5,"column_end":64}},{"value":"/ # let secp = Secp256k1::signing_only();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":143997,"byte_end":144040,"line_start":149,"line_end":149,"column_start":5,"column_end":48}},{"value":"/ # let secret_key = SecretKey::from_slice(&[3u8; 32]).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":144045,"byte_end":144111,"line_start":150,"line_end":150,"column_start":5,"column_end":71}},{"value":"/ # let secret_key2 = SecretKey::from_slice(&[7u8; 32]).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":144116,"byte_end":144183,"line_start":151,"line_end":151,"column_start":5,"column_end":72}},{"value":"/ # let public_key = PublicKey::from_secret_key(&secp, &secret_key2);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":144188,"byte_end":144259,"line_start":152,"line_end":152,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":144264,"byte_end":144267,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ let secret = SharedSecret::new_with_hash(&public_key, &secret_key, |x,y| {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":144272,"byte_end":144350,"line_start":154,"line_end":154,"column_start":5,"column_end":83}},{"value":"/     let hash: [u8; 32] = sha2(&x,&y);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":144355,"byte_end":144396,"line_start":155,"line_end":155,"column_start":5,"column_end":46}},{"value":"/     hash.into()","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":144401,"byte_end":144420,"line_start":156,"line_end":156,"column_start":5,"column_end":24}},{"value":"/ });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":144425,"byte_end":144432,"line_start":157,"line_end":157,"column_start":5,"column_end":12}},{"value":"/ # }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":144437,"byte_end":144444,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":144449,"byte_end":144456,"line_start":159,"line_end":159,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":427},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ecdsa","qualname":"::ecdsa","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","parent":null,"children":[{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":432},{"krate":0,"index":435},{"krate":0,"index":438},{"krate":0,"index":441},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":448},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":454},{"krate":0,"index":457},{"krate":0,"index":460},{"krate":0,"index":463},{"krate":0,"index":466},{"krate":0,"index":469},{"krate":0,"index":472},{"krate":0,"index":475},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":534},{"krate":0,"index":1165},{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1171},{"krate":0,"index":1172},{"krate":0,"index":1175},{"krate":0,"index":1176},{"krate":0,"index":1178},{"krate":0,"index":1182},{"krate":0,"index":1183},{"krate":0,"index":537},{"krate":0,"index":539},{"krate":0,"index":541},{"krate":0,"index":543},{"krate":0,"index":545},{"krate":0,"index":549},{"krate":0,"index":552},{"krate":0,"index":554},{"krate":0,"index":556},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":568},{"krate":0,"index":579},{"krate":0,"index":583},{"krate":0,"index":585},{"krate":0,"index":598},{"krate":0,"index":602},{"krate":0,"index":604}],"decl_id":null,"docs":" Structs and functionality related to the ECDSA signature algorithm.\n","sig":null,"attributes":[{"value":"/ Structs and functionality related to the ECDSA signature algorithm.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":148182,"byte_end":148253,"line_start":1,"line_end":1,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":1135},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":168087,"byte_end":168097,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"RecoveryId","qualname":"::ecdsa::recovery::RecoveryId","value":"","parent":null,"children":[],"decl_id":null,"docs":" A tag used for recovering the public key from a compact signature.\n","sig":null,"attributes":[{"value":"/ A tag used for recovering the public key from a compact signature.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":167960,"byte_end":168030,"line_start":28,"line_end":28,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":1150},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":168224,"byte_end":168244,"line_start":34,"line_end":34,"column_start":12,"column_end":32},"name":"RecoverableSignature","qualname":"::ecdsa::recovery::RecoverableSignature","value":"","parent":null,"children":[],"decl_id":null,"docs":" An ECDSA signature with a recovery ID for pubkey recovery.\n","sig":null,"attributes":[{"value":"/ An ECDSA signature with a recovery ID for pubkey recovery.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":168105,"byte_end":168167,"line_start":32,"line_end":32,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":168373,"byte_end":168381,"line_start":39,"line_end":39,"column_start":8,"column_end":16},"name":"from_i32","qualname":"<RecoveryId>::from_i32","value":"fn from_i32(i32) -> Result<RecoveryId, Error>","parent":null,"children":[],"decl_id":null,"docs":" Allows library users to create valid recovery IDs from i32.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":168292,"byte_end":168301,"line_start":37,"line_end":37,"column_start":1,"column_end":10}},{"value":"/ Allows library users to create valid recovery IDs from i32.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":168302,"byte_end":168365,"line_start":38,"line_end":38,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":168608,"byte_end":168614,"line_start":48,"line_end":48,"column_start":8,"column_end":14},"name":"to_i32","qualname":"<RecoveryId>::to_i32","value":"fn to_i32(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Allows library users to convert recovery IDs to i32.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":168534,"byte_end":168543,"line_start":46,"line_end":46,"column_start":1,"column_end":10}},{"value":"/ Allows library users to convert recovery IDs to i32.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":168544,"byte_end":168600,"line_start":47,"line_end":47,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":168845,"byte_end":168857,"line_start":57,"line_end":57,"column_start":12,"column_end":24},"name":"from_compact","qualname":"<RecoverableSignature>::from_compact","value":"fn from_compact<'_>(&'_ [u8], RecoveryId)\n-> Result<RecoverableSignature, Error>","parent":null,"children":[],"decl_id":null,"docs":" Converts a compact-encoded byte slice to a signature. This\n representation is nonstandard and defined by the libsecp256k1 library.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":168678,"byte_end":168687,"line_start":54,"line_end":54,"column_start":5,"column_end":14}},{"value":"/ Converts a compact-encoded byte slice to a signature. This","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":168692,"byte_end":168754,"line_start":55,"line_end":55,"column_start":5,"column_end":67}},{"value":"/ representation is nonstandard and defined by the libsecp256k1 library.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":168759,"byte_end":168833,"line_start":56,"line_end":56,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":169640,"byte_end":169646,"line_start":81,"line_end":81,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<RecoverableSignature>::as_ptr","value":"fn as_ptr<'_>(&'_ Self) -> *const ffi::RecoverableSignature","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw pointer suitable for use with FFI functions.\n","sig":null,"attributes":[{"value":"/ Obtains a raw pointer suitable for use with FFI functions.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":169552,"byte_end":169614,"line_start":79,"line_end":79,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":169619,"byte_end":169628,"line_start":80,"line_end":80,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":169815,"byte_end":169825,"line_start":87,"line_end":87,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<RecoverableSignature>::as_mut_ptr","value":"fn as_mut_ptr<'_>(&'_ mut Self) -> *mut ffi::RecoverableSignature","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw mutable pointer suitable for use with FFI functions.\n","sig":null,"attributes":[{"value":"/ Obtains a raw mutable pointer suitable for use with FFI functions.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":169719,"byte_end":169789,"line_start":85,"line_end":85,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":169794,"byte_end":169803,"line_start":86,"line_end":86,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":169989,"byte_end":170006,"line_start":93,"line_end":93,"column_start":12,"column_end":29},"name":"serialize_compact","qualname":"<RecoverableSignature>::serialize_compact","value":"fn serialize_compact<'_>(&'_ Self) -> (RecoveryId, [u8; ])","parent":null,"children":[],"decl_id":null,"docs":" Serializes the recoverable signature in compact format.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":169904,"byte_end":169913,"line_start":91,"line_end":91,"column_start":5,"column_end":14}},{"value":"/ Serializes the recoverable signature in compact format.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":169918,"byte_end":169977,"line_start":92,"line_end":92,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":170590,"byte_end":170601,"line_start":111,"line_end":111,"column_start":12,"column_end":23},"name":"to_standard","qualname":"<RecoverableSignature>::to_standard","value":"fn to_standard<'_>(&'_ Self) -> Signature","parent":null,"children":[],"decl_id":null,"docs":" Converts a recoverable signature to a non-recoverable one (this is needed\n for verification).\n","sig":null,"attributes":[{"value":"/ Converts a recoverable signature to a non-recoverable one (this is needed","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":170460,"byte_end":170537,"line_start":108,"line_end":108,"column_start":5,"column_end":82}},{"value":"/ for verification).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":170542,"byte_end":170564,"line_start":109,"line_end":109,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":170569,"byte_end":170578,"line_start":110,"line_end":110,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":171435,"byte_end":171443,"line_start":137,"line_end":137,"column_start":8,"column_end":16},"name":"as_c_ptr","qualname":"<RecoverableSignature as secp256k1_sys::CPtr>::as_c_ptr","value":"fn as_c_ptr<'_>(&'_ Self) -> *const Self::Target","parent":{"krate":20,"index":194},"children":[],"decl_id":{"krate":20,"index":196},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":171512,"byte_end":171524,"line_start":141,"line_end":141,"column_start":8,"column_end":20},"name":"as_mut_c_ptr","qualname":"<RecoverableSignature as secp256k1_sys::CPtr>::as_mut_c_ptr","value":"fn as_mut_c_ptr<'_>(&'_ mut Self) -> *mut Self::Target","parent":{"krate":20,"index":194},"children":[],"decl_id":{"krate":20,"index":197},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":171735,"byte_end":171739,"line_start":149,"line_end":149,"column_start":8,"column_end":12},"name":"from","qualname":"<RecoverableSignature as std::convert::From>::from","value":"fn from(ffi::RecoverableSignature) -> RecoverableSignature","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":171718,"byte_end":171727,"line_start":148,"line_end":148,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":172096,"byte_end":172112,"line_start":158,"line_end":158,"column_start":12,"column_end":28},"name":"sign_recoverable","qualname":"<Secp256k1<C>>::sign_recoverable","value":"fn sign_recoverable<'_, '_, '_>(&'_ Self, &'_ Message, &'_ key::SecretKey)\n-> RecoverableSignature","parent":null,"children":[],"decl_id":null,"docs":" Constructs a signature for `msg` using the secret key `sk` and RFC6979 nonce.\n Requires a signing-capable context.\n","sig":null,"attributes":[{"value":"/ Constructs a signature for `msg` using the secret key `sk` and RFC6979 nonce.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":171877,"byte_end":171958,"line_start":155,"line_end":155,"column_start":5,"column_end":86}},{"value":"/ Requires a signing-capable context.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":171963,"byte_end":172002,"line_start":156,"line_end":156,"column_start":5,"column_end":44}},{"value":"deprecated(since = \"0.21.0\", note = \"Use sign_ecdsa_recoverable instead.\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":172007,"byte_end":172084,"line_start":157,"line_end":157,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":525},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":172374,"byte_end":172396,"line_start":164,"line_end":164,"column_start":12,"column_end":34},"name":"sign_ecdsa_recoverable","qualname":"<Secp256k1<C>>::sign_ecdsa_recoverable","value":"fn sign_ecdsa_recoverable<'_, '_,\n'_>(&'_ Self, &'_ Message, &'_ key::SecretKey) -> RecoverableSignature","parent":null,"children":[],"decl_id":null,"docs":" Constructs a signature for `msg` using the secret key `sk` and RFC6979 nonce\n Requires a signing-capable context.\n","sig":null,"attributes":[{"value":"/ Constructs a signature for `msg` using the secret key `sk` and RFC6979 nonce","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":172238,"byte_end":172318,"line_start":162,"line_end":162,"column_start":5,"column_end":85}},{"value":"/ Requires a signing-capable context.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":172323,"byte_end":172362,"line_start":163,"line_end":163,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":173364,"byte_end":173371,"line_start":190,"line_end":190,"column_start":12,"column_end":19},"name":"recover","qualname":"<Secp256k1<C>>::recover","value":"fn recover<'_, '_, '_>(&'_ Self, &'_ Message, &'_ RecoverableSignature)\n-> Result<key::PublicKey, Error>","parent":null,"children":[],"decl_id":null,"docs":" Determines the public key for which `sig` is a valid signature for\n `msg`. Requires a verify-capable context.\n","sig":null,"attributes":[{"value":"/ Determines the public key for which `sig` is a valid signature for","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":173159,"byte_end":173229,"line_start":187,"line_end":187,"column_start":5,"column_end":75}},{"value":"/ `msg`. Requires a verify-capable context.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":173234,"byte_end":173279,"line_start":188,"line_end":188,"column_start":5,"column_end":50}},{"value":"deprecated(since = \"0.21.0\", note = \"Use recover_ecdsa instead.\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":173284,"byte_end":173352,"line_start":189,"line_end":189,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":529},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":173637,"byte_end":173650,"line_start":196,"line_end":196,"column_start":12,"column_end":25},"name":"recover_ecdsa","qualname":"<Secp256k1<C>>::recover_ecdsa","value":"fn recover_ecdsa<'_, '_, '_>(&'_ Self, &'_ Message, &'_ RecoverableSignature)\n-> Result<key::PublicKey, Error>","parent":null,"children":[],"decl_id":null,"docs":" Determines the public key for which `sig` is a valid signature for\n `msg`. Requires a verify-capable context.\n","sig":null,"attributes":[{"value":"/ Determines the public key for which `sig` is a valid signature for","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":173505,"byte_end":173575,"line_start":194,"line_end":194,"column_start":5,"column_end":75}},{"value":"/ `msg`. Requires a verify-capable context.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":173580,"byte_end":173625,"line_start":195,"line_end":195,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":1165},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":148711,"byte_end":148720,"line_start":20,"line_end":20,"column_start":12,"column_end":21},"name":"Signature","qualname":"::ecdsa::Signature","value":"","parent":null,"children":[],"decl_id":null,"docs":" An ECDSA signature\n","sig":null,"attributes":[{"value":"/ An ECDSA signature","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":148639,"byte_end":148661,"line_start":18,"line_end":18,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":1178},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":148815,"byte_end":148834,"line_start":24,"line_end":24,"column_start":12,"column_end":31},"name":"SerializedSignature","qualname":"::ecdsa::SerializedSignature","value":"SerializedSignature {  }","parent":null,"children":[{"krate":0,"index":1179},{"krate":0,"index":1181}],"decl_id":null,"docs":" A DER serialized Signature\n","sig":null,"attributes":[{"value":"/ A DER serialized Signature","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":148750,"byte_end":148780,"line_start":22,"line_end":22,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":148915,"byte_end":148918,"line_start":30,"line_end":30,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Signature as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":149052,"byte_end":149055,"line_start":36,"line_end":36,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Signature as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":149221,"byte_end":149224,"line_start":43,"line_end":43,"column_start":8,"column_end":11},"name":"fmt","qualname":"<SerializedSignature as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":149368,"byte_end":149371,"line_start":49,"line_end":49,"column_start":8,"column_end":11},"name":"fmt","qualname":"<SerializedSignature as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":149605,"byte_end":149613,"line_start":59,"line_end":59,"column_start":8,"column_end":16},"name":"from_str","qualname":"<Signature as std::str::FromStr>::from_str","value":"fn from_str<'_>(&'_ str) -> Result<Signature, Error>","parent":{"krate":2,"index":12989},"children":[],"decl_id":{"krate":2,"index":12991},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":149890,"byte_end":149897,"line_start":69,"line_end":69,"column_start":8,"column_end":15},"name":"default","qualname":"<SerializedSignature as std::default::Default>::default","value":"fn default() -> SerializedSignature","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":150071,"byte_end":150073,"line_start":78,"line_end":78,"column_start":8,"column_end":10},"name":"eq","qualname":"<SerializedSignature as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ SerializedSignature) -> bool","parent":{"krate":2,"index":2915},"children":[],"decl_id":{"krate":2,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":150236,"byte_end":150242,"line_start":84,"line_end":84,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<SerializedSignature as std::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ [u8]","parent":{"krate":2,"index":3160},"children":[],"decl_id":{"krate":2,"index":3162},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":150375,"byte_end":150380,"line_start":92,"line_end":92,"column_start":8,"column_end":13},"name":"deref","qualname":"<SerializedSignature as std::ops::Deref>::deref","value":"fn deref<'_>(&'_ Self) -> &'_ [u8]","parent":{"krate":2,"index":3486},"children":[],"decl_id":{"krate":2,"index":3488},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":150740,"byte_end":150748,"line_start":106,"line_end":106,"column_start":12,"column_end":20},"name":"capacity","qualname":"<SerializedSignature>::capacity","value":"fn capacity<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the capacity of the underlying data buffer.\n","sig":null,"attributes":[{"value":"/ Get the capacity of the underlying data buffer.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":150677,"byte_end":150728,"line_start":105,"line_end":105,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":150847,"byte_end":150850,"line_start":111,"line_end":111,"column_start":12,"column_end":15},"name":"len","qualname":"<SerializedSignature>::len","value":"fn len<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the len of the used data.\n","sig":null,"attributes":[{"value":"/ Get the len of the used data.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":150802,"byte_end":150835,"line_start":110,"line_end":110,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":151127,"byte_end":151139,"line_start":122,"line_end":122,"column_start":12,"column_end":24},"name":"to_signature","qualname":"<SerializedSignature>::to_signature","value":"fn to_signature<'_>(&'_ Self) -> Result<Signature, Error>","parent":null,"children":[],"decl_id":null,"docs":" Convert the serialized signature into the Signature struct.\n (This DER deserializes it)\n","sig":null,"attributes":[{"value":"/ Convert the serialized signature into the Signature struct.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":151017,"byte_end":151080,"line_start":120,"line_end":120,"column_start":5,"column_end":68}},{"value":"/ (This DER deserializes it)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":151085,"byte_end":151115,"line_start":121,"line_end":121,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":151318,"byte_end":151332,"line_start":128,"line_end":128,"column_start":12,"column_end":26},"name":"from_signature","qualname":"<SerializedSignature>::from_signature","value":"fn from_signature<'_>(&'_ Signature) -> SerializedSignature","parent":null,"children":[],"decl_id":null,"docs":" Create a SerializedSignature from a Signature.\n (this DER serializes it)\n","sig":null,"attributes":[{"value":"/ Create a SerializedSignature from a Signature.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":151223,"byte_end":151273,"line_start":126,"line_end":126,"column_start":5,"column_end":55}},{"value":"/ (this DER serializes it)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":151278,"byte_end":151306,"line_start":127,"line_end":127,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":151457,"byte_end":151465,"line_start":133,"line_end":133,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SerializedSignature>::is_empty","value":"fn is_empty<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the space is zero.\n","sig":null,"attributes":[{"value":"/ Check if the space is zero.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":151414,"byte_end":151445,"line_start":132,"line_end":132,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":151603,"byte_end":151611,"line_start":139,"line_end":139,"column_start":12,"column_end":20},"name":"from_der","qualname":"<Signature>::from_der","value":"fn from_der<'_>(&'_ [u8]) -> Result<Signature, Error>","parent":null,"children":[],"decl_id":null,"docs":" Converts a DER-encoded byte slice to a signature\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":151525,"byte_end":151534,"line_start":137,"line_end":137,"column_start":5,"column_end":14}},{"value":"/ Converts a DER-encoded byte slice to a signature","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":151539,"byte_end":151591,"line_start":138,"line_end":138,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":152237,"byte_end":152249,"line_start":159,"line_end":159,"column_start":12,"column_end":24},"name":"from_compact","qualname":"<Signature>::from_compact","value":"fn from_compact<'_>(&'_ [u8]) -> Result<Signature, Error>","parent":null,"children":[],"decl_id":null,"docs":" Converts a 64-byte compact-encoded byte slice to a signature\n","sig":null,"attributes":[{"value":"/ Converts a 64-byte compact-encoded byte slice to a signature","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":152161,"byte_end":152225,"line_start":158,"line_end":158,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":153087,"byte_end":153099,"line_start":183,"line_end":183,"column_start":12,"column_end":24},"name":"from_der_lax","qualname":"<Signature>::from_der_lax","value":"fn from_der_lax<'_>(&'_ [u8]) -> Result<Signature, Error>","parent":null,"children":[],"decl_id":null,"docs":" Converts a \"lax DER\"-encoded byte slice to a signature. This is basically\n only useful for validating signatures in the Bitcoin blockchain from before\n 2016. It should never be used in new applications. This library does not\n support serializing to this \"format\"\n","sig":null,"attributes":[{"value":"/ Converts a \"lax DER\"-encoded byte slice to a signature. This is basically","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":152788,"byte_end":152865,"line_start":179,"line_end":179,"column_start":5,"column_end":82}},{"value":"/ only useful for validating signatures in the Bitcoin blockchain from before","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":152870,"byte_end":152949,"line_start":180,"line_end":180,"column_start":5,"column_end":84}},{"value":"/ 2016. It should never be used in new applications. This library does not","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":152954,"byte_end":153030,"line_start":181,"line_end":181,"column_start":5,"column_end":81}},{"value":"/ support serializing to this \"format\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":153035,"byte_end":153075,"line_start":182,"line_end":182,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":154828,"byte_end":154839,"line_start":219,"line_end":219,"column_start":12,"column_end":23},"name":"normalize_s","qualname":"<Signature>::normalize_s","value":"fn normalize_s<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Normalizes a signature to a \"low S\" form. In ECDSA, signatures are\n of the form (r, s) where r and s are numbers lying in some finite\n field. The verification equation will pass for (r, s) iff it passes\n for (r, -s), so it is possible to ``modify'' signatures in transit\n by flipping the sign of s. This does not constitute a forgery since\n the signed message still cannot be changed, but for some applications,\n changing even the signature itself can be a problem. Such applications\n require a \"strong signature\". It is believed that ECDSA is a strong\n signature except for this ambiguity in the sign of s, so to accommodate\n these applications libsecp256k1 will only accept signatures for which\n s is in the lower half of the field range. This eliminates the\n ambiguity.","sig":null,"attributes":[{"value":"/ Normalizes a signature to a \"low S\" form. In ECDSA, signatures are","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":153643,"byte_end":153713,"line_start":202,"line_end":202,"column_start":5,"column_end":75}},{"value":"/ of the form (r, s) where r and s are numbers lying in some finite","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":153718,"byte_end":153787,"line_start":203,"line_end":203,"column_start":5,"column_end":74}},{"value":"/ field. The verification equation will pass for (r, s) iff it passes","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":153792,"byte_end":153863,"line_start":204,"line_end":204,"column_start":5,"column_end":76}},{"value":"/ for (r, -s), so it is possible to ``modify'' signatures in transit","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":153868,"byte_end":153938,"line_start":205,"line_end":205,"column_start":5,"column_end":75}},{"value":"/ by flipping the sign of s. This does not constitute a forgery since","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":153943,"byte_end":154014,"line_start":206,"line_end":206,"column_start":5,"column_end":76}},{"value":"/ the signed message still cannot be changed, but for some applications,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":154019,"byte_end":154093,"line_start":207,"line_end":207,"column_start":5,"column_end":79}},{"value":"/ changing even the signature itself can be a problem. Such applications","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":154098,"byte_end":154172,"line_start":208,"line_end":208,"column_start":5,"column_end":79}},{"value":"/ require a \"strong signature\". It is believed that ECDSA is a strong","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":154177,"byte_end":154248,"line_start":209,"line_end":209,"column_start":5,"column_end":76}},{"value":"/ signature except for this ambiguity in the sign of s, so to accommodate","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":154253,"byte_end":154328,"line_start":210,"line_end":210,"column_start":5,"column_end":80}},{"value":"/ these applications libsecp256k1 will only accept signatures for which","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":154333,"byte_end":154406,"line_start":211,"line_end":211,"column_start":5,"column_end":78}},{"value":"/ s is in the lower half of the field range. This eliminates the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":154411,"byte_end":154477,"line_start":212,"line_end":212,"column_start":5,"column_end":71}},{"value":"/ ambiguity.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":154482,"byte_end":154496,"line_start":213,"line_end":213,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":154501,"byte_end":154504,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ However, for some systems, signatures with high s-values are considered","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":154509,"byte_end":154584,"line_start":215,"line_end":215,"column_start":5,"column_end":80}},{"value":"/ valid. (For example, parsing the historic Bitcoin blockchain requires","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":154589,"byte_end":154662,"line_start":216,"line_end":216,"column_start":5,"column_end":78}},{"value":"/ this.) For these applications we provide this normalization function,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":154667,"byte_end":154740,"line_start":217,"line_end":217,"column_start":5,"column_end":78}},{"value":"/ which ensures that the s value lies in the lower half of its range.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":154745,"byte_end":154816,"line_start":218,"line_end":218,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":155290,"byte_end":155296,"line_start":233,"line_end":233,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<Signature>::as_ptr","value":"fn as_ptr<'_>(&'_ Self) -> *const ffi::Signature","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw pointer suitable for use with FFI functions\n","sig":null,"attributes":[{"value":"/ Obtains a raw pointer suitable for use with FFI functions","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":155203,"byte_end":155264,"line_start":231,"line_end":231,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":155269,"byte_end":155278,"line_start":232,"line_end":232,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":155453,"byte_end":155463,"line_start":239,"line_end":239,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<Signature>::as_mut_ptr","value":"fn as_mut_ptr<'_>(&'_ mut Self) -> *mut ffi::Signature","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw mutable pointer suitable for use with FFI functions\n","sig":null,"attributes":[{"value":"/ Obtains a raw mutable pointer suitable for use with FFI functions","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":155358,"byte_end":155427,"line_start":237,"line_end":237,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":155432,"byte_end":155441,"line_start":238,"line_end":238,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":575},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":155599,"byte_end":155612,"line_start":245,"line_end":245,"column_start":12,"column_end":25},"name":"serialize_der","qualname":"<Signature>::serialize_der","value":"fn serialize_der<'_>(&'_ Self) -> SerializedSignature","parent":null,"children":[],"decl_id":null,"docs":" Serializes the signature in DER format\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":155531,"byte_end":155540,"line_start":243,"line_end":243,"column_start":5,"column_end":14}},{"value":"/ Serializes the signature in DER format","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":155545,"byte_end":155587,"line_start":244,"line_end":244,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":156166,"byte_end":156183,"line_start":263,"line_end":263,"column_start":12,"column_end":29},"name":"serialize_compact","qualname":"<Signature>::serialize_compact","value":"fn serialize_compact<'_>(&'_ Self) -> [u8; ]","parent":null,"children":[],"decl_id":null,"docs":" Serializes the signature in compact format\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":156094,"byte_end":156103,"line_start":261,"line_end":261,"column_start":5,"column_end":14}},{"value":"/ Serializes the signature in compact format","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":156108,"byte_end":156154,"line_start":262,"line_end":262,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":156940,"byte_end":156948,"line_start":288,"line_end":288,"column_start":8,"column_end":16},"name":"as_c_ptr","qualname":"<Signature as secp256k1_sys::CPtr>::as_c_ptr","value":"fn as_c_ptr<'_>(&'_ Self) -> *const Self::Target","parent":{"krate":20,"index":194},"children":[],"decl_id":{"krate":20,"index":196},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":157017,"byte_end":157029,"line_start":292,"line_end":292,"column_start":8,"column_end":20},"name":"as_mut_c_ptr","qualname":"<Signature as secp256k1_sys::CPtr>::as_mut_c_ptr","value":"fn as_mut_c_ptr<'_>(&'_ mut Self) -> *mut Self::Target","parent":{"krate":20,"index":194},"children":[],"decl_id":{"krate":20,"index":197},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":157211,"byte_end":157215,"line_start":300,"line_end":300,"column_start":8,"column_end":12},"name":"from","qualname":"<Signature as std::convert::From>::from","value":"fn from(ffi::Signature) -> Signature","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":157194,"byte_end":157203,"line_start":299,"line_end":299,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":158503,"byte_end":158507,"line_start":339,"line_end":339,"column_start":12,"column_end":16},"name":"sign","qualname":"<Secp256k1<C>>::sign","value":"fn sign<'_, '_, '_>(&'_ Self, &'_ Message, &'_ SecretKey) -> Signature","parent":null,"children":[],"decl_id":null,"docs":" Constructs a signature for `msg` using the secret key `sk` and RFC6979 nonce\n Requires a signing-capable context.\n","sig":null,"attributes":[{"value":"/ Constructs a signature for `msg` using the secret key `sk` and RFC6979 nonce","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":158297,"byte_end":158377,"line_start":336,"line_end":336,"column_start":5,"column_end":85}},{"value":"/ Requires a signing-capable context.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":158382,"byte_end":158421,"line_start":337,"line_end":337,"column_start":5,"column_end":44}},{"value":"deprecated(since = \"0.21.0\", note = \"Use sign_ecdsa instead.\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":158426,"byte_end":158491,"line_start":338,"line_end":338,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":158741,"byte_end":158751,"line_start":345,"line_end":345,"column_start":12,"column_end":22},"name":"sign_ecdsa","qualname":"<Secp256k1<C>>::sign_ecdsa","value":"fn sign_ecdsa<'_, '_, '_>(&'_ Self, &'_ Message, &'_ SecretKey) -> Signature","parent":null,"children":[],"decl_id":null,"docs":" Constructs a signature for `msg` using the secret key `sk` and RFC6979 nonce\n Requires a signing-capable context.\n","sig":null,"attributes":[{"value":"/ Constructs a signature for `msg` using the secret key `sk` and RFC6979 nonce","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":158605,"byte_end":158685,"line_start":343,"line_end":343,"column_start":5,"column_end":85}},{"value":"/ Requires a signing-capable context.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":158690,"byte_end":158729,"line_start":344,"line_end":344,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":161485,"byte_end":161497,"line_start":400,"line_end":400,"column_start":12,"column_end":24},"name":"sign_grind_r","qualname":"<Secp256k1<C>>::sign_grind_r","value":"fn sign_grind_r<'_, '_, '_>(&'_ Self, &'_ Message, &'_ SecretKey, usize)\n-> Signature","parent":null,"children":[],"decl_id":null,"docs":" Constructs a signature for `msg` using the secret key `sk`, RFC6979 nonce\n and \"grinds\" the nonce by passing extra entropy if necessary to produce\n a signature that is less than 71 - `bytes_to_grind` bytes. The number\n of signing operation performed by this function is exponential in the\n number of bytes grinded.\n Requires a signing capable context.\n","sig":null,"attributes":[{"value":"/ Constructs a signature for `msg` using the secret key `sk`, RFC6979 nonce","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":161005,"byte_end":161082,"line_start":393,"line_end":393,"column_start":5,"column_end":82}},{"value":"/ and \"grinds\" the nonce by passing extra entropy if necessary to produce","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":161087,"byte_end":161162,"line_start":394,"line_end":394,"column_start":5,"column_end":80}},{"value":"/ a signature that is less than 71 - `bytes_to_grind` bytes. The number","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":161167,"byte_end":161240,"line_start":395,"line_end":395,"column_start":5,"column_end":78}},{"value":"/ of signing operation performed by this function is exponential in the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":161245,"byte_end":161318,"line_start":396,"line_end":396,"column_start":5,"column_end":78}},{"value":"/ number of bytes grinded.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":161323,"byte_end":161351,"line_start":397,"line_end":397,"column_start":5,"column_end":33}},{"value":"/ Requires a signing capable context.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":161356,"byte_end":161395,"line_start":398,"line_end":398,"column_start":5,"column_end":44}},{"value":"deprecated(since = \"0.21.0\", note = \"Use sign_ecdsa_grind_r instead.\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":161400,"byte_end":161473,"line_start":399,"line_end":399,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":162044,"byte_end":162062,"line_start":410,"line_end":410,"column_start":12,"column_end":30},"name":"sign_ecdsa_grind_r","qualname":"<Secp256k1<C>>::sign_ecdsa_grind_r","value":"fn sign_ecdsa_grind_r<'_, '_, '_>(&'_ Self, &'_ Message, &'_ SecretKey, usize)\n-> Signature","parent":null,"children":[],"decl_id":null,"docs":" Constructs a signature for `msg` using the secret key `sk`, RFC6979 nonce\n and \"grinds\" the nonce by passing extra entropy if necessary to produce\n a signature that is less than 71 - `bytes_to_grind` bytes. The number\n of signing operation performed by this function is exponential in the\n number of bytes grinded.\n Requires a signing capable context.\n","sig":null,"attributes":[{"value":"/ Constructs a signature for `msg` using the secret key `sk`, RFC6979 nonce","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":161642,"byte_end":161719,"line_start":404,"line_end":404,"column_start":5,"column_end":82}},{"value":"/ and \"grinds\" the nonce by passing extra entropy if necessary to produce","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":161724,"byte_end":161799,"line_start":405,"line_end":405,"column_start":5,"column_end":80}},{"value":"/ a signature that is less than 71 - `bytes_to_grind` bytes. The number","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":161804,"byte_end":161877,"line_start":406,"line_end":406,"column_start":5,"column_end":78}},{"value":"/ of signing operation performed by this function is exponential in the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":161882,"byte_end":161955,"line_start":407,"line_end":407,"column_start":5,"column_end":78}},{"value":"/ number of bytes grinded.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":161960,"byte_end":161988,"line_start":408,"line_end":408,"column_start":5,"column_end":33}},{"value":"/ Requires a signing capable context.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":161993,"byte_end":162032,"line_start":409,"line_end":409,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":162782,"byte_end":162792,"line_start":422,"line_end":422,"column_start":12,"column_end":22},"name":"sign_low_r","qualname":"<Secp256k1<C>>::sign_low_r","value":"fn sign_low_r<'_, '_, '_>(&'_ Self, &'_ Message, &'_ SecretKey) -> Signature","parent":null,"children":[],"decl_id":null,"docs":" Constructs a signature for `msg` using the secret key `sk`, RFC6979 nonce\n and \"grinds\" the nonce by passing extra entropy if necessary to produce\n a signature that is less than 71 bytes and compatible with the low r\n signature implementation of bitcoin core. In average, this function\n will perform two signing operations.\n Requires a signing capable context.\n","sig":null,"attributes":[{"value":"/ Constructs a signature for `msg` using the secret key `sk`, RFC6979 nonce","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":162293,"byte_end":162370,"line_start":415,"line_end":415,"column_start":5,"column_end":82}},{"value":"/ and \"grinds\" the nonce by passing extra entropy if necessary to produce","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":162375,"byte_end":162450,"line_start":416,"line_end":416,"column_start":5,"column_end":80}},{"value":"/ a signature that is less than 71 bytes and compatible with the low r","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":162455,"byte_end":162527,"line_start":417,"line_end":417,"column_start":5,"column_end":77}},{"value":"/ signature implementation of bitcoin core. In average, this function","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":162532,"byte_end":162603,"line_start":418,"line_end":418,"column_start":5,"column_end":76}},{"value":"/ will perform two signing operations.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":162608,"byte_end":162648,"line_start":419,"line_end":419,"column_start":5,"column_end":45}},{"value":"/ Requires a signing capable context.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":162653,"byte_end":162692,"line_start":420,"line_end":420,"column_start":5,"column_end":44}},{"value":"deprecated(since = \"0.21.0\", note = \"Use sign_ecdsa_grind_r instead.\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":162697,"byte_end":162770,"line_start":421,"line_end":421,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":163344,"byte_end":163360,"line_start":432,"line_end":432,"column_start":12,"column_end":28},"name":"sign_ecdsa_low_r","qualname":"<Secp256k1<C>>::sign_ecdsa_low_r","value":"fn sign_ecdsa_low_r<'_, '_, '_>(&'_ Self, &'_ Message, &'_ SecretKey)\n-> Signature","parent":null,"children":[],"decl_id":null,"docs":" Constructs a signature for `msg` using the secret key `sk`, RFC6979 nonce\n and \"grinds\" the nonce by passing extra entropy if necessary to produce\n a signature that is less than 71 bytes and compatible with the low r\n signature implementation of bitcoin core. In average, this function\n will perform two signing operations.\n Requires a signing capable context.\n","sig":null,"attributes":[{"value":"/ Constructs a signature for `msg` using the secret key `sk`, RFC6979 nonce","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":162933,"byte_end":163010,"line_start":426,"line_end":426,"column_start":5,"column_end":82}},{"value":"/ and \"grinds\" the nonce by passing extra entropy if necessary to produce","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":163015,"byte_end":163090,"line_start":427,"line_end":427,"column_start":5,"column_end":80}},{"value":"/ a signature that is less than 71 bytes and compatible with the low r","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":163095,"byte_end":163167,"line_start":428,"line_end":428,"column_start":5,"column_end":77}},{"value":"/ signature implementation of bitcoin core. In average, this function","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":163172,"byte_end":163243,"line_start":429,"line_end":429,"column_start":5,"column_end":76}},{"value":"/ will perform two signing operations.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":163248,"byte_end":163288,"line_start":430,"line_end":430,"column_start":5,"column_end":45}},{"value":"/ Requires a signing capable context.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":163293,"byte_end":163332,"line_start":431,"line_end":431,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":164759,"byte_end":164765,"line_start":463,"line_end":463,"column_start":12,"column_end":18},"name":"verify","qualname":"<Secp256k1<C>>::verify","value":"fn verify<'_, '_, '_, '_>(&'_ Self, &'_ Message, &'_ Signature, &'_ PublicKey)\n-> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Checks that `sig` is a valid ECDSA signature for `msg` using the public\n key `pubkey`. Returns `Ok(())` on success. Note that this function cannot\n be used for Bitcoin consensus checking since there may exist signatures\n which OpenSSL would verify but not libsecp256k1, or vice-versa. Requires a\n verify-capable context.","sig":null,"attributes":[{"value":"/ Checks that `sig` is a valid ECDSA signature for `msg` using the public","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":163540,"byte_end":163615,"line_start":438,"line_end":438,"column_start":5,"column_end":80}},{"value":"/ key `pubkey`. Returns `Ok(())` on success. Note that this function cannot","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":163620,"byte_end":163697,"line_start":439,"line_end":439,"column_start":5,"column_end":82}},{"value":"/ be used for Bitcoin consensus checking since there may exist signatures","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":163702,"byte_end":163777,"line_start":440,"line_end":440,"column_start":5,"column_end":80}},{"value":"/ which OpenSSL would verify but not libsecp256k1, or vice-versa. Requires a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":163782,"byte_end":163860,"line_start":441,"line_end":441,"column_start":5,"column_end":83}},{"value":"/ verify-capable context.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":163865,"byte_end":163892,"line_start":442,"line_end":442,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":163897,"byte_end":163900,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":163905,"byte_end":163916,"line_start":444,"line_end":444,"column_start":5,"column_end":16}},{"value":"/ # #[cfg(all(feature = \"std\", feature = \"rand-std\"))] {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":163921,"byte_end":163979,"line_start":445,"line_end":445,"column_start":5,"column_end":63}},{"value":"/ # use secp256k1::rand::rngs::OsRng;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":163984,"byte_end":164023,"line_start":446,"line_end":446,"column_start":5,"column_end":44}},{"value":"/ # use secp256k1::{Secp256k1, Message, Error};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":164028,"byte_end":164077,"line_start":447,"line_end":447,"column_start":5,"column_end":54}},{"value":"/ #","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":164082,"byte_end":164087,"line_start":448,"line_end":448,"column_start":5,"column_end":10}},{"value":"/ # let secp = Secp256k1::new();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":164092,"byte_end":164126,"line_start":449,"line_end":449,"column_start":5,"column_end":39}},{"value":"/ # let mut rng = OsRng::new().expect(\"OsRng\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":164131,"byte_end":164180,"line_start":450,"line_end":450,"column_start":5,"column_end":54}},{"value":"/ # let (secret_key, public_key) = secp.generate_keypair(&mut rng);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":164185,"byte_end":164254,"line_start":451,"line_end":451,"column_start":5,"column_end":74}},{"value":"/ #","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":164259,"byte_end":164264,"line_start":452,"line_end":452,"column_start":5,"column_end":10}},{"value":"/ let message = Message::from_slice(&[0xab; 32]).expect(\"32 bytes\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":164269,"byte_end":164339,"line_start":453,"line_end":453,"column_start":5,"column_end":75}},{"value":"/ let sig = secp.sign(&message, &secret_key);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":164344,"byte_end":164391,"line_start":454,"line_end":454,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(secp.verify(&message, &sig, &public_key), Ok(()));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":164396,"byte_end":164461,"line_start":455,"line_end":455,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":164466,"byte_end":164469,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ let message = Message::from_slice(&[0xcd; 32]).expect(\"32 bytes\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":164474,"byte_end":164544,"line_start":457,"line_end":457,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(secp.verify(&message, &sig, &public_key), Err(Error::IncorrectSignature));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":164549,"byte_end":164638,"line_start":458,"line_end":458,"column_start":5,"column_end":94}},{"value":"/ # }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":164643,"byte_end":164650,"line_start":459,"line_end":459,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":164655,"byte_end":164662,"line_start":460,"line_end":460,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":164667,"byte_end":164676,"line_start":461,"line_end":461,"column_start":5,"column_end":14}},{"value":"deprecated(since = \"0.21.0\", note = \"Use verify_ecdsa instead\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":164681,"byte_end":164747,"line_start":462,"line_end":462,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":166061,"byte_end":166073,"line_start":491,"line_end":491,"column_start":12,"column_end":24},"name":"verify_ecdsa","qualname":"<Secp256k1<C>>::verify_ecdsa","value":"fn verify_ecdsa<'_, '_, '_,\n'_>(&'_ Self, &'_ Message, &'_ Signature, &'_ PublicKey) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Checks that `sig` is a valid ECDSA signature for `msg` using the public\n key `pubkey`. Returns `Ok(())` on success. Note that this function cannot\n be used for Bitcoin consensus checking since there may exist signatures\n which OpenSSL would verify but not libsecp256k1, or vice-versa. Requires a\n verify-capable context.","sig":null,"attributes":[{"value":"/ Checks that `sig` is a valid ECDSA signature for `msg` using the public","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":164895,"byte_end":164970,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ key `pubkey`. Returns `Ok(())` on success. Note that this function cannot","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":164975,"byte_end":165052,"line_start":468,"line_end":468,"column_start":5,"column_end":82}},{"value":"/ be used for Bitcoin consensus checking since there may exist signatures","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":165057,"byte_end":165132,"line_start":469,"line_end":469,"column_start":5,"column_end":80}},{"value":"/ which OpenSSL would verify but not libsecp256k1, or vice-versa. Requires a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":165137,"byte_end":165215,"line_start":470,"line_end":470,"column_start":5,"column_end":83}},{"value":"/ verify-capable context.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":165220,"byte_end":165247,"line_start":471,"line_end":471,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":165252,"byte_end":165255,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":165260,"byte_end":165271,"line_start":473,"line_end":473,"column_start":5,"column_end":16}},{"value":"/ # #[cfg(all(feature = \"std\", feature = \"rand-std\"))] {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":165276,"byte_end":165334,"line_start":474,"line_end":474,"column_start":5,"column_end":63}},{"value":"/ # use secp256k1::rand::rngs::OsRng;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":165339,"byte_end":165378,"line_start":475,"line_end":475,"column_start":5,"column_end":44}},{"value":"/ # use secp256k1::{Secp256k1, Message, Error};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":165383,"byte_end":165432,"line_start":476,"line_end":476,"column_start":5,"column_end":54}},{"value":"/ #","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":165437,"byte_end":165442,"line_start":477,"line_end":477,"column_start":5,"column_end":10}},{"value":"/ # let secp = Secp256k1::new();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":165447,"byte_end":165481,"line_start":478,"line_end":478,"column_start":5,"column_end":39}},{"value":"/ # let mut rng = OsRng::new().expect(\"OsRng\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":165486,"byte_end":165535,"line_start":479,"line_end":479,"column_start":5,"column_end":54}},{"value":"/ # let (secret_key, public_key) = secp.generate_keypair(&mut rng);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":165540,"byte_end":165609,"line_start":480,"line_end":480,"column_start":5,"column_end":74}},{"value":"/ #","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":165614,"byte_end":165619,"line_start":481,"line_end":481,"column_start":5,"column_end":10}},{"value":"/ let message = Message::from_slice(&[0xab; 32]).expect(\"32 bytes\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":165624,"byte_end":165694,"line_start":482,"line_end":482,"column_start":5,"column_end":75}},{"value":"/ let sig = secp.sign_ecdsa(&message, &secret_key);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":165699,"byte_end":165752,"line_start":483,"line_end":483,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(secp.verify_ecdsa(&message, &sig, &public_key), Ok(()));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":165757,"byte_end":165828,"line_start":484,"line_end":484,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":165833,"byte_end":165836,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ let message = Message::from_slice(&[0xcd; 32]).expect(\"32 bytes\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":165841,"byte_end":165911,"line_start":486,"line_end":486,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(secp.verify_ecdsa(&message, &sig, &public_key), Err(Error::IncorrectSignature));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":165916,"byte_end":166011,"line_start":487,"line_end":487,"column_start":5,"column_end":100}},{"value":"/ # }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":166016,"byte_end":166023,"line_start":488,"line_end":488,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":166028,"byte_end":166035,"line_start":489,"line_end":489,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":166040,"byte_end":166049,"line_start":490,"line_end":490,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":606},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/schnorr.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"schnorr","qualname":"::schnorr","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/schnorr.rs","parent":null,"children":[{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":611},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":618},{"krate":0,"index":621},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":628},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":635},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640},{"krate":0,"index":642},{"krate":0,"index":645},{"krate":0,"index":648},{"krate":0,"index":651},{"krate":0,"index":654},{"krate":0,"index":1186},{"krate":0,"index":1187},{"krate":0,"index":1192},{"krate":0,"index":1196},{"krate":0,"index":1198},{"krate":0,"index":1199},{"krate":0,"index":1202},{"krate":0,"index":1204},{"krate":0,"index":1206},{"krate":0,"index":1208},{"krate":0,"index":1211},{"krate":0,"index":1214},{"krate":0,"index":1217},{"krate":0,"index":1220},{"krate":0,"index":1223},{"krate":0,"index":1227},{"krate":0,"index":658},{"krate":0,"index":660},{"krate":0,"index":662},{"krate":0,"index":666},{"krate":0,"index":669},{"krate":0,"index":679},{"krate":0,"index":683}],"decl_id":null,"docs":" # schnorrsig\n Support for Schnorr signatures.","sig":null,"attributes":[{"value":"/ # schnorrsig","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/schnorr.rs","byte_start":181286,"byte_end":181302,"line_start":1,"line_end":1,"column_start":1,"column_end":17}},{"value":"/ Support for Schnorr signatures.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/schnorr.rs","byte_start":181303,"byte_end":181338,"line_start":2,"line_end":2,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/schnorr.rs","byte_start":181339,"byte_end":181342,"line_start":3,"line_end":3,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":654},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/schnorr.rs","byte_start":181769,"byte_end":181778,"line_start":20,"line_end":20,"column_start":12,"column_end":21},"name":"Signature","qualname":"::schnorr::Signature","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a Schnorr signature.\n","sig":null,"attributes":[{"value":"/ Represents a Schnorr signature.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/schnorr.rs","byte_start":181722,"byte_end":181757,"line_start":19,"line_end":19,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/schnorr.rs","byte_start":182924,"byte_end":182927,"line_start":54,"line_end":54,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Signature as std::fmt::LowerHex>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10301},"children":[],"decl_id":{"krate":2,"index":10302},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":661},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/schnorr.rs","byte_start":183121,"byte_end":183124,"line_start":63,"line_end":63,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Signature as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/schnorr.rs","byte_start":183281,"byte_end":183289,"line_start":70,"line_end":70,"column_start":8,"column_end":16},"name":"from_str","qualname":"<Signature as std::str::FromStr>::from_str","value":"fn from_str<'_>(&'_ str) -> Result<Signature, Error>","parent":{"krate":2,"index":12989},"children":[],"decl_id":{"krate":2,"index":12991},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/schnorr.rs","byte_start":183749,"byte_end":183759,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<Signature>::from_slice","value":"fn from_slice<'_>(&'_ [u8]) -> Result<Signature, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Signature directly from a slice\n","sig":null,"attributes":[{"value":"/ Creates a Signature directly from a slice","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/schnorr.rs","byte_start":183678,"byte_end":183723,"line_start":82,"line_end":82,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/schnorr.rs","byte_start":183728,"byte_end":183737,"line_start":83,"line_end":83,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":673},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/schnorr.rs","byte_start":186240,"byte_end":186267,"line_start":149,"line_end":149,"column_start":12,"column_end":39},"name":"schnorrsig_sign_no_aux_rand","qualname":"<Secp256k1<C>>::schnorrsig_sign_no_aux_rand","value":"fn schnorrsig_sign_no_aux_rand<'_, '_, '_>(&'_ Self, &'_ Message, &'_ KeyPair)\n-> Signature","parent":null,"children":[],"decl_id":null,"docs":" Create a schnorr signature without using any auxiliary random data.\n","sig":null,"attributes":[{"value":"/ Create a schnorr signature without using any auxiliary random data.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/schnorr.rs","byte_start":186073,"byte_end":186144,"line_start":147,"line_end":147,"column_start":5,"column_end":76}},{"value":"deprecated(since = \"0.21.0\", note =\n\"Use sign_schnorr_no_aux_rand instead.\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/schnorr.rs","byte_start":186149,"byte_end":186228,"line_start":148,"line_end":148,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/schnorr.rs","byte_start":186501,"byte_end":186525,"line_start":158,"line_end":158,"column_start":12,"column_end":36},"name":"sign_schnorr_no_aux_rand","qualname":"<Secp256k1<C>>::sign_schnorr_no_aux_rand","value":"fn sign_schnorr_no_aux_rand<'_, '_, '_>(&'_ Self, &'_ Message, &'_ KeyPair)\n-> Signature","parent":null,"children":[],"decl_id":null,"docs":" Create a schnorr signature without using any auxiliary random data.\n","sig":null,"attributes":[{"value":"/ Create a schnorr signature without using any auxiliary random data.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/schnorr.rs","byte_start":186418,"byte_end":186489,"line_start":157,"line_end":157,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/schnorr.rs","byte_start":186854,"byte_end":186883,"line_start":168,"line_end":168,"column_start":12,"column_end":41},"name":"schnorrsig_sign_with_aux_rand","qualname":"<Secp256k1<C>>::schnorrsig_sign_with_aux_rand","value":"fn schnorrsig_sign_with_aux_rand<'_, '_, '_,\n'_>(&'_ Self, &'_ Message, &'_ KeyPair, &'_ [u8; ]) -> Signature","parent":null,"children":[],"decl_id":null,"docs":" Create a Schnorr signature using the given auxiliary random data.\n","sig":null,"attributes":[{"value":"/ Create a Schnorr signature using the given auxiliary random data.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/schnorr.rs","byte_start":186687,"byte_end":186756,"line_start":166,"line_end":166,"column_start":5,"column_end":74}},{"value":"deprecated(since = \"0.21.0\", note =\n\"Use sign_schnorr_with_aux_rand instead.\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/schnorr.rs","byte_start":186761,"byte_end":186842,"line_start":167,"line_end":167,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":677},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/schnorr.rs","byte_start":187156,"byte_end":187182,"line_start":178,"line_end":178,"column_start":12,"column_end":38},"name":"sign_schnorr_with_aux_rand","qualname":"<Secp256k1<C>>::sign_schnorr_with_aux_rand","value":"fn sign_schnorr_with_aux_rand<'_, '_, '_,\n'_>(&'_ Self, &'_ Message, &'_ KeyPair, &'_ [u8; ]) -> Signature","parent":null,"children":[],"decl_id":null,"docs":" Create a Schnorr signature using the given auxiliary random data.\n","sig":null,"attributes":[{"value":"/ Create a Schnorr signature using the given auxiliary random data.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/schnorr.rs","byte_start":187075,"byte_end":187144,"line_start":177,"line_end":177,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/schnorr.rs","byte_start":188677,"byte_end":188694,"line_start":224,"line_end":224,"column_start":12,"column_end":29},"name":"schnorrsig_verify","qualname":"<Secp256k1<C>>::schnorrsig_verify","value":"fn schnorrsig_verify<'_, '_, '_,\n'_>(&'_ Self, &'_ Signature, &'_ Message, &'_ XOnlyPublicKey)\n-> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Verify a Schnorr signature.\n","sig":null,"attributes":[{"value":"/ Verify a Schnorr signature.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/schnorr.rs","byte_start":188560,"byte_end":188591,"line_start":222,"line_end":222,"column_start":5,"column_end":36}},{"value":"deprecated(since = \"0.21.0\", note = \"Use verify_schnorr instead.\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/schnorr.rs","byte_start":188596,"byte_end":188665,"line_start":223,"line_end":223,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/schnorr.rs","byte_start":188921,"byte_end":188935,"line_start":234,"line_end":234,"column_start":12,"column_end":26},"name":"verify_schnorr","qualname":"<Secp256k1<C>>::verify_schnorr","value":"fn verify_schnorr<'_, '_, '_,\n'_>(&'_ Self, &'_ Signature, &'_ Message, &'_ XOnlyPublicKey)\n-> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Verify a Schnorr signature.\n","sig":null,"attributes":[{"value":"/ Verify a Schnorr signature.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/schnorr.rs","byte_start":188878,"byte_end":188909,"line_start":233,"line_end":233,"column_start":5,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":707},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":9043,"byte_end":9053,"line_start":225,"line_end":225,"column_start":9,"column_end":19},"name":"schnorrsig","qualname":"::schnorrsig","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710}],"decl_id":null,"docs":" Schnorr Signature related methods.\n","sig":null,"attributes":[{"value":"/ Schnorr Signature related methods.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":8933,"byte_end":8971,"line_start":223,"line_end":223,"column_start":1,"column_end":39}},{"value":"deprecated(since = \"0.21.0\", note = \"Use schnorr instead.\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":8972,"byte_end":9034,"line_start":224,"line_end":224,"column_start":1,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":708},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":9202,"byte_end":9211,"line_start":228,"line_end":228,"column_start":14,"column_end":23},"name":"PublicKey","qualname":"::schnorrsig::PublicKey","value":"super::XOnlyPublicKey","parent":null,"children":[],"decl_id":null,"docs":" backwards compatible re-export of xonly key\n","sig":null,"attributes":[{"value":"deprecated(since = \"0.21.0\", note = \"Use crate::XOnlyPublicKey instead.\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":9060,"byte_end":9136,"line_start":226,"line_end":226,"column_start":5,"column_end":81}},{"value":"/ backwards compatible re-export of xonly key","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":9141,"byte_end":9188,"line_start":227,"line_end":227,"column_start":5,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":709},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":9374,"byte_end":9381,"line_start":231,"line_end":231,"column_start":14,"column_end":21},"name":"KeyPair","qualname":"::schnorrsig::KeyPair","value":"super::KeyPair","parent":null,"children":[],"decl_id":null,"docs":" backwards compatible re-export of keypair\n","sig":null,"attributes":[{"value":"/ backwards compatible re-export of keypair","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":9241,"byte_end":9286,"line_start":229,"line_end":229,"column_start":5,"column_end":50}},{"value":"deprecated(since = \"0.21.0\", note = \"Use crate::KeyPair instead.\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":9291,"byte_end":9360,"line_start":230,"line_end":230,"column_start":5,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":710},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":9552,"byte_end":9561,"line_start":234,"line_end":234,"column_start":14,"column_end":23},"name":"Signature","qualname":"::schnorrsig::Signature","value":"super::schnorr::Signature","parent":null,"children":[],"decl_id":null,"docs":" backwards compatible re-export of schnorr signatures\n","sig":null,"attributes":[{"value":"/ backwards compatible re-export of schnorr signatures","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":9404,"byte_end":9460,"line_start":232,"line_end":232,"column_start":5,"column_end":61}},{"value":"deprecated(since = \"0.21.0\", note = \"Use schnorr::Signature instead.\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":9465,"byte_end":9538,"line_start":233,"line_end":233,"column_start":5,"column_end":78}}]},{"kind":"Type","id":{"krate":0,"index":711},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":9730,"byte_end":9739,"line_start":239,"line_end":239,"column_start":10,"column_end":19},"name":"Signature","qualname":"::Signature","value":"ecdsa::Signature","parent":null,"children":[],"decl_id":null,"docs":" backwards compatible re-export of ecdsa signatures\n","sig":null,"attributes":[{"value":"deprecated(since = \"0.21.0\", note = \"Use ecdsa::Signature instead.\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":9594,"byte_end":9665,"line_start":237,"line_end":237,"column_start":1,"column_end":72}},{"value":"/ backwards compatible re-export of ecdsa signatures","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":9666,"byte_end":9720,"line_start":238,"line_end":238,"column_start":1,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":712},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":10015,"byte_end":10032,"line_start":244,"line_end":244,"column_start":11,"column_end":28},"name":"ThirtyTwoByteHash","qualname":"::ThirtyTwoByteHash","value":"ThirtyTwoByteHash","parent":null,"children":[{"krate":0,"index":713}],"decl_id":null,"docs":" Trait describing something that promises to be a 32-byte random number; in particular,\n it has negligible probability of being zero or overflowing the group order. Such objects\n may be converted to `Message`s without any error paths.\n","sig":null,"attributes":[{"value":"/ Trait describing something that promises to be a 32-byte random number; in particular,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":9761,"byte_end":9851,"line_start":241,"line_end":241,"column_start":1,"column_end":91}},{"value":"/ it has negligible probability of being zero or overflowing the group order. Such objects","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":9852,"byte_end":9944,"line_start":242,"line_end":242,"column_start":1,"column_end":93}},{"value":"/ may be converted to `Message`s without any error paths.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":9945,"byte_end":10004,"line_start":243,"line_end":243,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":10091,"byte_end":10098,"line_start":246,"line_end":246,"column_start":8,"column_end":15},"name":"into_32","qualname":"::ThirtyTwoByteHash::into_32","value":"fn into_32(Self) -> [u8; ]","parent":{"krate":0,"index":712},"children":[],"decl_id":null,"docs":" Converts the object into a 32-byte array\n","sig":null,"attributes":[{"value":"/ Converts the object into a 32-byte array","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":10039,"byte_end":10083,"line_start":245,"line_end":245,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":715},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":10853,"byte_end":10860,"line_start":274,"line_end":274,"column_start":12,"column_end":19},"name":"Message","qualname":"::Message","value":"","parent":null,"children":[],"decl_id":null,"docs":" A (hashed) message input to an ECDSA signature.\n","sig":null,"attributes":[{"value":"/ A (hashed) message input to an ECDSA signature.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":10790,"byte_end":10841,"line_start":273,"line_end":273,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":11449,"byte_end":11459,"line_start":286,"line_end":286,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<Message>::from_slice","value":"fn from_slice<'_>(&'_ [u8]) -> Result<Message, Error>","parent":null,"children":[],"decl_id":null,"docs":" **If you just want to sign an arbitrary message use `Message::from_hashed_data` instead.**","sig":null,"attributes":[{"value":"/ **If you just want to sign an arbitrary message use `Message::from_hashed_data` instead.**","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":11001,"byte_end":11095,"line_start":279,"line_end":279,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":11100,"byte_end":11103,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ Converts a `MESSAGE_SIZE`-byte slice to a message object. **WARNING:** the slice has to be a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":11108,"byte_end":11204,"line_start":281,"line_end":281,"column_start":5,"column_end":101}},{"value":"/ cryptographically secure hash of the actual message that's going to be signed. Otherwise","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":11209,"byte_end":11301,"line_start":282,"line_end":282,"column_start":5,"column_end":97}},{"value":"/ the result of signing isn't a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":11306,"byte_end":11339,"line_start":283,"line_end":283,"column_start":5,"column_end":38}},{"value":"/ [secure signature](https://twitter.com/pwuille/status/1063582706288586752).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":11344,"byte_end":11423,"line_start":284,"line_end":284,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":11428,"byte_end":11437,"line_start":285,"line_end":285,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":12741,"byte_end":12745,"line_start":321,"line_end":321,"column_start":8,"column_end":12},"name":"from","qualname":"<Message as std::convert::From>::from","value":"fn from(T) -> Message","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":" Converts a 32-byte hash directly to a message without error paths.\n","sig":null,"attributes":[{"value":"/ Converts a 32-byte hash directly to a message without error paths.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":12663,"byte_end":12733,"line_start":320,"line_end":320,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":12843,"byte_end":12846,"line_start":327,"line_end":327,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Message as std::fmt::LowerHex>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10301},"children":[],"decl_id":{"krate":2,"index":10302},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":13044,"byte_end":13047,"line_start":336,"line_end":336,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Message as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1273},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":13287,"byte_end":13305,"line_start":345,"line_end":345,"column_start":5,"column_end":23},"name":"IncorrectSignature","qualname":"::Error::IncorrectSignature","value":"Error::IncorrectSignature","parent":{"krate":0,"index":1272},"children":[],"decl_id":null,"docs":" Signature failed verification\n","sig":null,"attributes":[{"value":"/ Signature failed verification","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":13249,"byte_end":13282,"line_start":344,"line_end":344,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1275},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":13427,"byte_end":13441,"line_start":348,"line_end":348,"column_start":5,"column_end":19},"name":"InvalidMessage","qualname":"::Error::InvalidMessage","value":"Error::InvalidMessage","parent":{"krate":0,"index":1272},"children":[],"decl_id":null,"docs":" Badly sized message (\"messages\" are actually fixed-sized digests; see the `MESSAGE_SIZE`\n constant).\n","sig":null,"attributes":[{"value":"/ Badly sized message (\"messages\" are actually fixed-sized digests; see the `MESSAGE_SIZE`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":13311,"byte_end":13403,"line_start":346,"line_end":346,"column_start":5,"column_end":97}},{"value":"/ constant).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":13408,"byte_end":13422,"line_start":347,"line_end":347,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1277},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":13471,"byte_end":13487,"line_start":350,"line_end":350,"column_start":5,"column_end":21},"name":"InvalidPublicKey","qualname":"::Error::InvalidPublicKey","value":"Error::InvalidPublicKey","parent":{"krate":0,"index":1272},"children":[],"decl_id":null,"docs":" Bad public key.\n","sig":null,"attributes":[{"value":"/ Bad public key.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":13447,"byte_end":13466,"line_start":349,"line_end":349,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1279},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":13516,"byte_end":13532,"line_start":352,"line_end":352,"column_start":5,"column_end":21},"name":"InvalidSignature","qualname":"::Error::InvalidSignature","value":"Error::InvalidSignature","parent":{"krate":0,"index":1272},"children":[],"decl_id":null,"docs":" Bad signature.\n","sig":null,"attributes":[{"value":"/ Bad signature.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":13493,"byte_end":13511,"line_start":351,"line_end":351,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1281},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":13562,"byte_end":13578,"line_start":354,"line_end":354,"column_start":5,"column_end":21},"name":"InvalidSecretKey","qualname":"::Error::InvalidSecretKey","value":"Error::InvalidSecretKey","parent":{"krate":0,"index":1272},"children":[],"decl_id":null,"docs":" Bad secret key.\n","sig":null,"attributes":[{"value":"/ Bad secret key.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":13538,"byte_end":13557,"line_start":353,"line_end":353,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1283},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":13609,"byte_end":13626,"line_start":356,"line_end":356,"column_start":5,"column_end":22},"name":"InvalidRecoveryId","qualname":"::Error::InvalidRecoveryId","value":"Error::InvalidRecoveryId","parent":{"krate":0,"index":1272},"children":[],"decl_id":null,"docs":" Bad recovery id.\n","sig":null,"attributes":[{"value":"/ Bad recovery id.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":13584,"byte_end":13604,"line_start":355,"line_end":355,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1285},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":13692,"byte_end":13704,"line_start":358,"line_end":358,"column_start":5,"column_end":17},"name":"InvalidTweak","qualname":"::Error::InvalidTweak","value":"Error::InvalidTweak","parent":{"krate":0,"index":1272},"children":[],"decl_id":null,"docs":" Invalid tweak for `add_*_assign` or `mul_*_assign`.\n","sig":null,"attributes":[{"value":"/ Invalid tweak for `add_*_assign` or `mul_*_assign`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":13632,"byte_end":13687,"line_start":357,"line_end":357,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1287},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":13790,"byte_end":13805,"line_start":360,"line_end":360,"column_start":5,"column_end":20},"name":"NotEnoughMemory","qualname":"::Error::NotEnoughMemory","value":"Error::NotEnoughMemory","parent":{"krate":0,"index":1272},"children":[],"decl_id":null,"docs":" Didn't pass enough memory to context creation with preallocated memory.\n","sig":null,"attributes":[{"value":"/ Didn't pass enough memory to context creation with preallocated memory.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":13710,"byte_end":13785,"line_start":359,"line_end":359,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1289},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":13843,"byte_end":13862,"line_start":362,"line_end":362,"column_start":5,"column_end":24},"name":"InvalidPublicKeySum","qualname":"::Error::InvalidPublicKeySum","value":"Error::InvalidPublicKeySum","parent":{"krate":0,"index":1272},"children":[],"decl_id":null,"docs":" Bad set of public keys.\n","sig":null,"attributes":[{"value":"/ Bad set of public keys.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":13811,"byte_end":13838,"line_start":361,"line_end":361,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1291},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":13917,"byte_end":13935,"line_start":364,"line_end":364,"column_start":5,"column_end":23},"name":"InvalidParityValue","qualname":"::Error::InvalidParityValue","value":"Error::InvalidParityValue","parent":{"krate":0,"index":1272},"children":[],"decl_id":null,"docs":" The only valid parity values are 0 or 1.\n","sig":null,"attributes":[{"value":"/ The only valid parity values are 0 or 1.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":13868,"byte_end":13912,"line_start":363,"line_end":363,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":1272},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":13237,"byte_end":13242,"line_start":343,"line_end":343,"column_start":10,"column_end":15},"name":"Error","qualname":"::Error","value":"enum Error {\n    IncorrectSignature,\n    InvalidMessage,\n    InvalidPublicKey,\n    InvalidSignature,\n    InvalidSecretKey,\n    InvalidRecoveryId,\n    InvalidTweak,\n    NotEnoughMemory,\n    InvalidPublicKeySum,\n    InvalidParityValue,\n}","parent":null,"children":[{"krate":0,"index":1273},{"krate":0,"index":1275},{"krate":0,"index":1277},{"krate":0,"index":1279},{"krate":0,"index":1281},{"krate":0,"index":1283},{"krate":0,"index":1285},{"krate":0,"index":1287},{"krate":0,"index":1289},{"krate":0,"index":1291}],"decl_id":null,"docs":" An ECDSA error\n","sig":null,"attributes":[{"value":"/ An ECDSA error","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":13141,"byte_end":13159,"line_start":341,"line_end":341,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":732},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":14936,"byte_end":14939,"line_start":386,"line_end":386,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Error as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> Result<(), fmt::Error>","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":734},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":15231,"byte_end":15240,"line_start":397,"line_end":397,"column_start":12,"column_end":21},"name":"Secp256k1","qualname":"::Secp256k1","value":"Secp256k1 {  }","parent":null,"children":[{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":738}],"decl_id":null,"docs":" The secp256k1 engine, used to execute all signature operations.\n","sig":null,"attributes":[{"value":"/ The secp256k1 engine, used to execute all signature operations.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":15152,"byte_end":15219,"line_start":396,"line_end":396,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":15671,"byte_end":15673,"line_start":409,"line_end":409,"column_start":8,"column_end":10},"name":"eq","qualname":"<Secp256k1<C> as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ Secp256k1<C>) -> bool","parent":{"krate":2,"index":2915},"children":[],"decl_id":{"krate":2,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":15814,"byte_end":15818,"line_start":415,"line_end":415,"column_start":8,"column_end":12},"name":"drop","qualname":"<Secp256k1<C> as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":16042,"byte_end":16045,"line_start":424,"line_end":424,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Secp256k1<C> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":756},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":16471,"byte_end":16474,"line_start":435,"line_end":435,"column_start":12,"column_end":15},"name":"ctx","qualname":"<Secp256k1<C>>::ctx","value":"fn ctx<'_>(&'_ Self) -> &'_ *mut ffi::Context","parent":null,"children":[],"decl_id":null,"docs":" Getter for the raw pointer to the underlying secp256k1 context. This\n shouldn't be needed with normal usage of the library. It enables\n extending the Secp256k1 with more cryptographic algorithms outside of\n this crate.\n","sig":null,"attributes":[{"value":"/ Getter for the raw pointer to the underlying secp256k1 context. This","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":16216,"byte_end":16288,"line_start":431,"line_end":431,"column_start":5,"column_end":77}},{"value":"/ shouldn't be needed with normal usage of the library. It enables","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":16293,"byte_end":16361,"line_start":432,"line_end":432,"column_start":5,"column_end":73}},{"value":"/ extending the Secp256k1 with more cryptographic algorithms outside of","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":16366,"byte_end":16439,"line_start":433,"line_end":433,"column_start":5,"column_end":78}},{"value":"/ this crate.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":16444,"byte_end":16459,"line_start":434,"line_end":434,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":757},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":16650,"byte_end":16670,"line_start":440,"line_end":440,"column_start":12,"column_end":32},"name":"preallocate_size_gen","qualname":"<Secp256k1<C>>::preallocate_size_gen","value":"fn preallocate_size_gen() -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the required memory for a preallocated context buffer in a generic manner(sign/verify/all).\n","sig":null,"attributes":[{"value":"/ Returns the required memory for a preallocated context buffer in a generic manner(sign/verify/all).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":16535,"byte_end":16638,"line_start":439,"line_end":439,"column_start":5,"column_end":108}}]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":17656,"byte_end":17672,"line_start":462,"line_end":462,"column_start":12,"column_end":28},"name":"seeded_randomize","qualname":"<Secp256k1<C>>::seeded_randomize","value":"fn seeded_randomize<'_, '_>(&'_ mut Self, &'_ [u8; ])","parent":null,"children":[],"decl_id":null,"docs":" (Re)randomizes the Secp256k1 context for extra sidechannel resistance given 32 bytes of\n cryptographically-secure random data;\n see comment in libsecp256k1 commit d2275795f by Gregory Maxwell.\n","sig":null,"attributes":[{"value":"/ (Re)randomizes the Secp256k1 context for extra sidechannel resistance given 32 bytes of","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":17434,"byte_end":17525,"line_start":459,"line_end":459,"column_start":5,"column_end":96}},{"value":"/ cryptographically-secure random data;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":17530,"byte_end":17571,"line_start":460,"line_end":460,"column_start":5,"column_end":46}},{"value":"/ see comment in libsecp256k1 commit d2275795f by Gregory Maxwell.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":17576,"byte_end":17644,"line_start":461,"line_end":461,"column_start":5,"column_end":73}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":49135,"byte_end":49148,"line_start":91,"line_end":91,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":49475,"byte_end":49488,"line_start":102,"line_end":102,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":49662,"byte_end":49671,"line_start":111,"line_end":111,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":35}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":50852,"byte_end":50859,"line_start":146,"line_end":146,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":55773,"byte_end":55788,"line_start":102,"line_end":102,"column_start":27,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":55824,"byte_end":55846,"line_start":103,"line_end":103,"column_start":27,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":55882,"byte_end":55902,"line_start":104,"line_end":104,"column_start":27,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":56232,"byte_end":56240,"line_start":118,"line_end":118,"column_start":30,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":56273,"byte_end":56276,"line_start":119,"line_end":119,"column_start":30,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":56309,"byte_end":56319,"line_start":120,"line_end":120,"column_start":30,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":57127,"byte_end":57135,"line_start":140,"line_end":140,"column_start":22,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":57160,"byte_end":57163,"line_start":141,"line_end":141,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":57194,"byte_end":57204,"line_start":143,"line_end":143,"column_start":27,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":57234,"byte_end":57237,"line_start":144,"line_end":144,"column_start":27,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":57270,"byte_end":57278,"line_start":146,"line_end":146,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":57623,"byte_end":57633,"line_start":156,"line_end":156,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":57985,"byte_end":57988,"line_start":166,"line_end":166,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":58340,"byte_end":58349,"line_start":176,"line_end":176,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":59938,"byte_end":59947,"line_start":216,"line_end":216,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":60374,"byte_end":60383,"line_start":227,"line_end":227,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":60841,"byte_end":60850,"line_start":238,"line_end":238,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":61334,"byte_end":61343,"line_start":249,"line_end":249,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":61454,"byte_end":61463,"line_start":255,"line_end":255,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":61986,"byte_end":62006,"line_start":269,"line_end":269,"column_start":24,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":62039,"byte_end":62054,"line_start":270,"line_end":270,"column_start":24,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":62093,"byte_end":62115,"line_start":272,"line_end":272,"column_start":29,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":62153,"byte_end":62168,"line_start":273,"line_end":273,"column_start":29,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":62209,"byte_end":62229,"line_start":275,"line_end":275,"column_start":31,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":62474,"byte_end":62496,"line_start":284,"line_end":284,"column_start":31,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":62749,"byte_end":62764,"line_start":293,"line_end":293,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":63048,"byte_end":63057,"line_start":302,"line_end":302,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":63833,"byte_end":63842,"line_start":323,"line_end":323,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":65260,"byte_end":65269,"line_start":353,"line_end":353,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":66793,"byte_end":66802,"line_start":385,"line_end":385,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":69822,"byte_end":69831,"line_start":54,"line_end":54,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":71035,"byte_end":71044,"line_start":90,"line_end":90,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":71266,"byte_end":71275,"line_start":100,"line_end":100,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":71404,"byte_end":71413,"line_start":106,"line_end":106,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":231}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":72134,"byte_end":72143,"line_start":131,"line_end":131,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":236},{"krate":0,"index":238},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":78029,"byte_end":78038,"line_start":327,"line_end":327,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":253},{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":263}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":86859,"byte_end":86868,"line_start":594,"line_end":594,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":271},{"krate":0,"index":272},{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":87153,"byte_end":87162,"line_start":607,"line_end":607,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":88244,"byte_end":88253,"line_start":643,"line_end":643,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":88415,"byte_end":88424,"line_start":649,"line_end":649,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":89719,"byte_end":89726,"line_start":686,"line_end":686,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":285},{"krate":0,"index":287},{"krate":0,"index":290},{"krate":0,"index":292},{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":96526,"byte_end":96535,"line_start":884,"line_end":884,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":96668,"byte_end":96677,"line_start":891,"line_end":891,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":96805,"byte_end":96814,"line_start":898,"line_end":898,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":96947,"byte_end":96956,"line_start":905,"line_end":905,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":97083,"byte_end":97090,"line_start":912,"line_end":912,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":99195,"byte_end":99209,"line_start":975,"line_end":975,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":99431,"byte_end":99445,"line_start":985,"line_end":985,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":99574,"byte_end":99588,"line_start":991,"line_end":991,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":100014,"byte_end":100028,"line_start":1004,"line_end":1004,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":324},{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":106547,"byte_end":106553,"line_start":1203,"line_end":1203,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":107648,"byte_end":107654,"line_start":1239,"line_end":1239,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":108313,"byte_end":108319,"line_start":1261,"line_end":1261,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":339},{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":109928,"byte_end":109942,"line_start":1312,"line_end":1312,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":110252,"byte_end":110266,"line_start":1324,"line_end":1324,"column_start":36,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":110408,"byte_end":110422,"line_start":1331,"line_end":1331,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":141087,"byte_end":141099,"line_start":54,"line_end":54,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":141996,"byte_end":142008,"line_start":91,"line_end":91,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":142130,"byte_end":142142,"line_start":97,"line_end":97,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":142232,"byte_end":142244,"line_start":103,"line_end":103,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":415},{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":142581,"byte_end":142593,"line_start":117,"line_end":117,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":419},{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":168279,"byte_end":168289,"line_start":36,"line_end":36,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":506},{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":168651,"byte_end":168671,"line_start":53,"line_end":53,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":171360,"byte_end":171380,"line_start":135,"line_end":135,"column_start":15,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":171691,"byte_end":171711,"line_start":147,"line_end":147,"column_start":42,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":171858,"byte_end":171867,"line_start":154,"line_end":154,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":524},{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":173140,"byte_end":173149,"line_start":186,"line_end":186,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":528},{"krate":0,"index":529}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":148896,"byte_end":148905,"line_start":29,"line_end":29,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":538}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":149033,"byte_end":149042,"line_start":35,"line_end":35,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":149192,"byte_end":149211,"line_start":42,"line_end":42,"column_start":21,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":542}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":149339,"byte_end":149358,"line_start":48,"line_end":48,"column_start":23,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":149564,"byte_end":149573,"line_start":57,"line_end":57,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":546},{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":149861,"byte_end":149880,"line_start":68,"line_end":68,"column_start":18,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":150042,"byte_end":150061,"line_start":77,"line_end":77,"column_start":20,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":553}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":150207,"byte_end":150226,"line_start":83,"line_end":83,"column_start":22,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":150321,"byte_end":150340,"line_start":89,"line_end":89,"column_start":21,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":557},{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":150451,"byte_end":150470,"line_start":97,"line_end":97,"column_start":13,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":150480,"byte_end":150499,"line_start":99,"line_end":99,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":561},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":151509,"byte_end":151518,"line_start":136,"line_end":136,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":156886,"byte_end":156895,"line_start":285,"line_end":285,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":582}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":157178,"byte_end":157187,"line_start":298,"line_end":298,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":158277,"byte_end":158286,"line_start":334,"line_end":334,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":587},{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":596},{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":163521,"byte_end":163530,"line_start":437,"line_end":437,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":600},{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/schnorr.rs","byte_start":182905,"byte_end":182914,"line_start":53,"line_end":53,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/schnorr.rs","byte_start":183102,"byte_end":183111,"line_start":62,"line_end":62,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":661}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/schnorr.rs","byte_start":183240,"byte_end":183249,"line_start":68,"line_end":68,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":663},{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/schnorr.rs","byte_start":183662,"byte_end":183671,"line_start":81,"line_end":81,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":667}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/schnorr.rs","byte_start":184542,"byte_end":184551,"line_start":104,"line_end":104,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":671},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":677}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/schnorr.rs","byte_start":188541,"byte_end":188550,"line_start":221,"line_end":221,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":681},{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/schnorr.rs","byte_start":189442,"byte_end":189451,"line_start":257,"line_end":257,"column_start":19,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":10987,"byte_end":10994,"line_start":278,"line_end":278,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":720}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":12649,"byte_end":12656,"line_start":319,"line_end":319,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":724}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":12826,"byte_end":12833,"line_start":326,"line_end":326,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":726}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":13027,"byte_end":13034,"line_start":335,"line_end":335,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":728}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":13945,"byte_end":13950,"line_start":367,"line_end":367,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":730}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":14921,"byte_end":14926,"line_start":385,"line_end":385,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":732}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":15141,"byte_end":15146,"line_start":393,"line_end":393,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":15455,"byte_end":15464,"line_start":404,"line_end":404,"column_start":34,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":15601,"byte_end":15610,"line_start":406,"line_end":406,"column_start":34,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":15649,"byte_end":15658,"line_start":408,"line_end":408,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":745}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":15748,"byte_end":15757,"line_start":412,"line_end":412,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":15792,"byte_end":15801,"line_start":414,"line_end":414,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":750}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":16020,"byte_end":16029,"line_start":423,"line_end":423,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":753}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":16196,"byte_end":16205,"line_start":429,"line_end":429,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":756},{"krate":0,"index":757},{"krate":0,"index":758}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":18473,"byte_end":18482,"line_start":478,"line_end":478,"column_start":18,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":8485,"byte_end":8494,"line_start":202,"line_end":202,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":349}},{"kind":"Mod","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":8504,"byte_end":8508,"line_start":203,"line_end":203,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":367}},{"kind":"Mod","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":8518,"byte_end":8523,"line_start":204,"line_end":204,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":427}},{"kind":"Mod","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":8533,"byte_end":8540,"line_start":205,"line_end":205,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":606}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":49135,"byte_end":49148,"line_start":91,"line_end":91,"column_start":21,"column_end":34},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":767},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":49475,"byte_end":49488,"line_start":102,"line_end":102,"column_start":23,"column_end":36},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":767},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":49662,"byte_end":49671,"line_start":111,"line_end":111,"column_start":6,"column_end":15},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":216},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/secret.rs","byte_start":50852,"byte_end":50859,"line_start":146,"line_end":146,"column_start":6,"column_end":13},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1007},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":54465,"byte_end":54471,"line_start":65,"line_end":65,"column_start":37,"column_end":43},"kind":"SuperTrait","from":{"krate":0,"index":77},"to":{"krate":0,"index":69}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":54847,"byte_end":54854,"line_start":75,"line_end":75,"column_start":20,"column_end":27},"kind":"SuperTrait","from":{"krate":0,"index":69},"to":{"krate":0,"index":73}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":54977,"byte_end":54984,"line_start":78,"line_end":78,"column_start":25,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":69},"to":{"krate":0,"index":74}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":55773,"byte_end":55788,"line_start":102,"line_end":102,"column_start":27,"column_end":42},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":853},"to":{"krate":0,"index":77}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":55824,"byte_end":55846,"line_start":103,"line_end":103,"column_start":27,"column_end":49},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":821},"to":{"krate":0,"index":77}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":55882,"byte_end":55902,"line_start":104,"line_end":104,"column_start":27,"column_end":47},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":789},"to":{"krate":0,"index":77}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":56232,"byte_end":56240,"line_start":118,"line_end":118,"column_start":30,"column_end":38},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":885},"to":{"krate":0,"index":77}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":56273,"byte_end":56276,"line_start":119,"line_end":119,"column_start":30,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":923},"to":{"krate":0,"index":77}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":56309,"byte_end":56319,"line_start":120,"line_end":120,"column_start":30,"column_end":40},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":904},"to":{"krate":0,"index":77}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":57127,"byte_end":57135,"line_start":140,"line_end":140,"column_start":22,"column_end":30},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":885},"to":{"krate":0,"index":73}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":57160,"byte_end":57163,"line_start":141,"line_end":141,"column_start":22,"column_end":25},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":923},"to":{"krate":0,"index":73}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":57194,"byte_end":57204,"line_start":143,"line_end":143,"column_start":27,"column_end":37},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":904},"to":{"krate":0,"index":74}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":57234,"byte_end":57237,"line_start":144,"line_end":144,"column_start":27,"column_end":30},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":923},"to":{"krate":0,"index":74}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":57270,"byte_end":57278,"line_start":146,"line_end":146,"column_start":29,"column_end":37},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":885},"to":{"krate":0,"index":69}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":57623,"byte_end":57633,"line_start":156,"line_end":156,"column_start":29,"column_end":39},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":904},"to":{"krate":0,"index":69}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":57985,"byte_end":57988,"line_start":166,"line_end":166,"column_start":29,"column_end":32},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":923},"to":{"krate":0,"index":69}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":58340,"byte_end":58349,"line_start":176,"line_end":176,"column_start":22,"column_end":31},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":59938,"byte_end":59947,"line_start":216,"line_end":216,"column_start":10,"column_end":19},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":60374,"byte_end":60383,"line_start":227,"line_end":227,"column_start":10,"column_end":19},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":60841,"byte_end":60850,"line_start":238,"line_end":238,"column_start":10,"column_end":19},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":61334,"byte_end":61343,"line_start":249,"line_end":249,"column_start":22,"column_end":31},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":734},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":61454,"byte_end":61463,"line_start":255,"line_end":255,"column_start":32,"column_end":41},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":734},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":61986,"byte_end":62006,"line_start":269,"line_end":269,"column_start":24,"column_end":44},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":789},"to":{"krate":0,"index":73}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":62039,"byte_end":62054,"line_start":270,"line_end":270,"column_start":24,"column_end":39},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":853},"to":{"krate":0,"index":73}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":62093,"byte_end":62115,"line_start":272,"line_end":272,"column_start":29,"column_end":51},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":821},"to":{"krate":0,"index":74}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":62153,"byte_end":62168,"line_start":273,"line_end":273,"column_start":29,"column_end":44},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":853},"to":{"krate":0,"index":74}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":62209,"byte_end":62229,"line_start":275,"line_end":275,"column_start":31,"column_end":51},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":789},"to":{"krate":0,"index":69}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":62474,"byte_end":62496,"line_start":284,"line_end":284,"column_start":31,"column_end":53},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":821},"to":{"krate":0,"index":69}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":62749,"byte_end":62764,"line_start":293,"line_end":293,"column_start":31,"column_end":46},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":853},"to":{"krate":0,"index":69}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":63048,"byte_end":63057,"line_start":302,"line_end":302,"column_start":31,"column_end":40},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":63833,"byte_end":63842,"line_start":323,"line_end":323,"column_start":12,"column_end":21},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":65260,"byte_end":65269,"line_start":353,"line_end":353,"column_start":12,"column_end":21},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/context.rs","byte_start":66793,"byte_end":66802,"line_start":385,"line_end":385,"column_start":12,"column_end":21},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":69822,"byte_end":69831,"line_start":54,"line_end":54,"column_start":23,"column_end":32},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":216},"to":{"krate":2,"index":12989}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":71035,"byte_end":71044,"line_start":90,"line_end":90,"column_start":24,"column_end":33},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":989},"to":{"krate":2,"index":10301}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":71266,"byte_end":71275,"line_start":100,"line_end":100,"column_start":23,"column_end":32},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":989},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":71404,"byte_end":71413,"line_start":106,"line_end":106,"column_start":23,"column_end":32},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":989},"to":{"krate":2,"index":12989}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":72134,"byte_end":72143,"line_start":131,"line_end":131,"column_start":6,"column_end":15},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":216},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":78029,"byte_end":78038,"line_start":327,"line_end":327,"column_start":6,"column_end":15},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":989},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":86859,"byte_end":86868,"line_start":594,"line_end":594,"column_start":15,"column_end":24},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":989},"to":{"krate":20,"index":194}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":87153,"byte_end":87162,"line_start":607,"line_end":607,"column_start":31,"column_end":40},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":989},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":88244,"byte_end":88253,"line_start":643,"line_end":643,"column_start":21,"column_end":30},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":989},"to":{"krate":2,"index":2961}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":88415,"byte_end":88424,"line_start":649,"line_end":649,"column_start":14,"column_end":23},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":989},"to":{"krate":2,"index":2951}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":89719,"byte_end":89726,"line_start":686,"line_end":686,"column_start":6,"column_end":13},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1007},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":96526,"byte_end":96535,"line_start":884,"line_end":884,"column_start":24,"column_end":33},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":216},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":96668,"byte_end":96677,"line_start":891,"line_end":891,"column_start":32,"column_end":41},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":216},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":96805,"byte_end":96814,"line_start":898,"line_end":898,"column_start":24,"column_end":33},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":989},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":96947,"byte_end":96956,"line_start":905,"line_end":905,"column_start":32,"column_end":41},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":989},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":97083,"byte_end":97090,"line_start":912,"line_end":912,"column_start":23,"column_end":30},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1007},"to":{"krate":2,"index":12989}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":99195,"byte_end":99209,"line_start":975,"line_end":975,"column_start":24,"column_end":38},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1033},"to":{"krate":2,"index":10301}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":99431,"byte_end":99445,"line_start":985,"line_end":985,"column_start":23,"column_end":37},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1033},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":99574,"byte_end":99588,"line_start":991,"line_end":991,"column_start":23,"column_end":37},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1033},"to":{"krate":2,"index":12989}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":100014,"byte_end":100028,"line_start":1004,"line_end":1004,"column_start":6,"column_end":20},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1033},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":106547,"byte_end":106553,"line_start":1203,"line_end":1203,"column_start":6,"column_end":12},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1055},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":107648,"byte_end":107654,"line_start":1239,"line_end":1239,"column_start":20,"column_end":26},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1055},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":108313,"byte_end":108319,"line_start":1261,"line_end":1261,"column_start":17,"column_end":23},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1055},"to":{"krate":2,"index":3400}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":109928,"byte_end":109942,"line_start":1312,"line_end":1312,"column_start":15,"column_end":29},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1033},"to":{"krate":20,"index":194}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":110252,"byte_end":110266,"line_start":1324,"line_end":1324,"column_start":36,"column_end":50},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1033},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/key.rs","byte_start":110408,"byte_end":110422,"line_start":1331,"line_end":1331,"column_start":33,"column_end":47},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1033},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":141087,"byte_end":141099,"line_start":54,"line_end":54,"column_start":6,"column_end":18},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1080},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":141996,"byte_end":142008,"line_start":91,"line_end":91,"column_start":20,"column_end":32},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1080},"to":{"krate":2,"index":2915}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":142130,"byte_end":142142,"line_start":97,"line_end":97,"column_start":22,"column_end":34},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1080},"to":{"krate":2,"index":3160}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":142232,"byte_end":142244,"line_start":103,"line_end":103,"column_start":16,"column_end":28},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1080},"to":{"krate":2,"index":3486}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdh.rs","byte_start":142581,"byte_end":142593,"line_start":117,"line_end":117,"column_start":6,"column_end":18},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1080},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":168279,"byte_end":168289,"line_start":36,"line_end":36,"column_start":6,"column_end":16},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1135},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":168651,"byte_end":168671,"line_start":53,"line_end":53,"column_start":6,"column_end":26},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1150},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":171360,"byte_end":171380,"line_start":135,"line_end":135,"column_start":15,"column_end":35},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1150},"to":{"krate":20,"index":194}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":171691,"byte_end":171711,"line_start":147,"line_end":147,"column_start":42,"column_end":62},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1150},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":171858,"byte_end":171867,"line_start":154,"line_end":154,"column_start":18,"column_end":27},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/recovery.rs","byte_start":173140,"byte_end":173149,"line_start":186,"line_end":186,"column_start":23,"column_end":32},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":148896,"byte_end":148905,"line_start":29,"line_end":29,"column_start":21,"column_end":30},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1165},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":149033,"byte_end":149042,"line_start":35,"line_end":35,"column_start":23,"column_end":32},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1165},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":149192,"byte_end":149211,"line_start":42,"line_end":42,"column_start":21,"column_end":40},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1178},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":149339,"byte_end":149358,"line_start":48,"line_end":48,"column_start":23,"column_end":42},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1178},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":149564,"byte_end":149573,"line_start":57,"line_end":57,"column_start":23,"column_end":32},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1165},"to":{"krate":2,"index":12989}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":149861,"byte_end":149880,"line_start":68,"line_end":68,"column_start":18,"column_end":37},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1178},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":150042,"byte_end":150061,"line_start":77,"line_end":77,"column_start":20,"column_end":39},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1178},"to":{"krate":2,"index":2915}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":150207,"byte_end":150226,"line_start":83,"line_end":83,"column_start":22,"column_end":41},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1178},"to":{"krate":2,"index":3160}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":150321,"byte_end":150340,"line_start":89,"line_end":89,"column_start":21,"column_end":40},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1178},"to":{"krate":2,"index":3486}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":150451,"byte_end":150470,"line_start":97,"line_end":97,"column_start":13,"column_end":32},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1178},"to":{"krate":2,"index":2920}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":150480,"byte_end":150499,"line_start":99,"line_end":99,"column_start":6,"column_end":25},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1178},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":151509,"byte_end":151518,"line_start":136,"line_end":136,"column_start":6,"column_end":15},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1165},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":156886,"byte_end":156895,"line_start":285,"line_end":285,"column_start":15,"column_end":24},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1165},"to":{"krate":20,"index":194}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":157178,"byte_end":157187,"line_start":298,"line_end":298,"column_start":31,"column_end":40},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1165},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":158277,"byte_end":158286,"line_start":334,"line_end":334,"column_start":18,"column_end":27},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/ecdsa/mod.rs","byte_start":163521,"byte_end":163530,"line_start":437,"line_end":437,"column_start":23,"column_end":32},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/schnorr.rs","byte_start":182905,"byte_end":182914,"line_start":53,"line_end":53,"column_start":24,"column_end":33},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":654},"to":{"krate":2,"index":10301}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/schnorr.rs","byte_start":183102,"byte_end":183111,"line_start":62,"line_end":62,"column_start":23,"column_end":32},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":654},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/schnorr.rs","byte_start":183240,"byte_end":183249,"line_start":68,"line_end":68,"column_start":23,"column_end":32},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":654},"to":{"krate":2,"index":12989}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/schnorr.rs","byte_start":183662,"byte_end":183671,"line_start":81,"line_end":81,"column_start":6,"column_end":15},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":654},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/schnorr.rs","byte_start":184542,"byte_end":184551,"line_start":104,"line_end":104,"column_start":18,"column_end":27},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/schnorr.rs","byte_start":188541,"byte_end":188550,"line_start":221,"line_end":221,"column_start":23,"column_end":32},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/schnorr.rs","byte_start":189442,"byte_end":189451,"line_start":257,"line_end":257,"column_start":19,"column_end":28},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":10987,"byte_end":10994,"line_start":278,"line_end":278,"column_start":6,"column_end":13},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":715},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":12649,"byte_end":12656,"line_start":319,"line_end":319,"column_start":40,"column_end":47},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":715},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":12826,"byte_end":12833,"line_start":326,"line_end":326,"column_start":24,"column_end":31},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":715},"to":{"krate":2,"index":10301}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":13027,"byte_end":13034,"line_start":335,"line_end":335,"column_start":23,"column_end":30},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":715},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":13945,"byte_end":13950,"line_start":367,"line_end":367,"column_start":6,"column_end":11},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1272},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":14921,"byte_end":14926,"line_start":385,"line_end":385,"column_start":23,"column_end":28},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1272},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":15141,"byte_end":15146,"line_start":393,"line_end":393,"column_start":28,"column_end":33},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1272},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":15455,"byte_end":15464,"line_start":404,"line_end":404,"column_start":34,"column_end":43},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":734},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":15601,"byte_end":15610,"line_start":406,"line_end":406,"column_start":34,"column_end":43},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":734},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":15649,"byte_end":15658,"line_start":408,"line_end":408,"column_start":32,"column_end":41},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":734},"to":{"krate":2,"index":2915}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":15748,"byte_end":15757,"line_start":412,"line_end":412,"column_start":25,"column_end":34},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":734},"to":{"krate":2,"index":2920}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":15792,"byte_end":15801,"line_start":414,"line_end":414,"column_start":27,"column_end":36},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":734},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":16020,"byte_end":16029,"line_start":423,"line_end":423,"column_start":33,"column_end":42},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":734},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":16196,"byte_end":16205,"line_start":429,"line_end":429,"column_start":18,"column_end":27},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.21.3/src/lib.rs","byte_start":18473,"byte_end":18482,"line_start":478,"line_end":478,"column_start":18,"column_end":27},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":734},"to":{"krate":4294967295,"index":4294967295}}]}