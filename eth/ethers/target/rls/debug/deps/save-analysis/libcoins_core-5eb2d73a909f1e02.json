{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0","program":"/Users/turjachowdhury/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","coins_core","--edition=2018","/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=5eb2d73a909f1e02","-C","extra-filename=-5eb2d73a909f1e02","--out-dir","/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps","-L","dependency=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps","--extern","base58check=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libbase58check-7d7ae8d29b62738a.rmeta","--extern","base64=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libbase64-bf4fd8915761af38.rmeta","--extern","bech32=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libbech32-b91d811cd1f720b8.rmeta","--extern","blake2=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libblake2-b97d2ce1cd8470b8.rmeta","--extern","digest=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libdigest-6790c731462bec2a.rmeta","--extern","generic_array=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libgeneric_array-9930870c801d21d7.rmeta","--extern","hex=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libhex-22b2a681fb8a40a2.rmeta","--extern","ripemd=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libripemd-20e1daa3b93a2014.rmeta","--extern","serde=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libserde-b430e2d23c4773a7.rmeta","--extern","serde_derive=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libserde_derive-de97efd54a8887da.dylib","--extern","sha2=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libsha2-979fb30924b85adb.rmeta","--extern","sha3=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libsha3-e75b5729862fe720.rmeta","--extern","thiserror=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libthiserror-055430993d723470.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/turjachowdhury/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libcoins_core-5eb2d73a909f1e02.rmeta"},"prelude":{"crate_id":{"name":"coins_core","disambiguator":[6473014129610759203,0]},"crate_root":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src","external_crates":[{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3177202280525429736,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14771084576412554041,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2214913233095760658,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14062411168213242900,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12076482825092298057,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[14222321261015582298,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8777242437552039366,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17835652209006724865,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[8739993533421390330,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[14051958152740382928,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[10065303707608660519,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[11544620977869425193,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[6400271788769952154,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[15384311983005613458,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[18308402029100966730,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[6407954677654987270,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[15697432329694890830,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[8370702540642071065,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[13043233986326649044,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","num":20,"id":{"name":"bech32","disambiguator":[12852976960638360668,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","num":21,"id":{"name":"base58check","disambiguator":[2180227317540122433,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","num":22,"id":{"name":"base58","disambiguator":[8547361651327864097,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","num":23,"id":{"name":"sha2","disambiguator":[18296456581748694600,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","num":24,"id":{"name":"block_buffer","disambiguator":[1079129133940062477,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","num":25,"id":{"name":"byteorder","disambiguator":[17568044588112060419,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","num":26,"id":{"name":"block_padding","disambiguator":[4720979485732754645,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","num":27,"id":{"name":"byte_tools","disambiguator":[11056454329830916923,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","num":28,"id":{"name":"generic_array","disambiguator":[5803695100503718009,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","num":29,"id":{"name":"typenum","disambiguator":[7130954412725199219,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","num":30,"id":{"name":"fake_simd","disambiguator":[11133087650086500494,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","num":31,"id":{"name":"opaque_debug","disambiguator":[6793642314876383924,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","num":32,"id":{"name":"digest","disambiguator":[18332110016348129480,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","num":33,"id":{"name":"thiserror","disambiguator":[11500823736324019186,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","num":34,"id":{"name":"thiserror_impl","disambiguator":[3233667349052322716,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","num":35,"id":{"name":"digest","disambiguator":[14240980440409098146,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","num":36,"id":{"name":"crypto_common","disambiguator":[7165260881322399202,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","num":37,"id":{"name":"generic_array","disambiguator":[7919687574507098734,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","num":38,"id":{"name":"block_buffer","disambiguator":[15880394773317876748,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","num":39,"id":{"name":"subtle","disambiguator":[9509557527791595074,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","num":40,"id":{"name":"ripemd","disambiguator":[4252339665167377748,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","num":41,"id":{"name":"sha2","disambiguator":[11260328861617274237,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","num":42,"id":{"name":"cfg_if","disambiguator":[4590009807048894466,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","num":43,"id":{"name":"cpufeatures","disambiguator":[15642071456532895068,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","num":44,"id":{"name":"sha3","disambiguator":[307639903087831380,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","num":45,"id":{"name":"keccak","disambiguator":[13972235789689654713,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","num":46,"id":{"name":"base64","disambiguator":[8210767990307466714,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","num":47,"id":{"name":"hex","disambiguator":[12047499046875803168,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","num":48,"id":{"name":"blake2","disambiguator":[13282898882632307003,0]}}],"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","byte_start":0,"byte_end":1206,"line_start":1,"line_end":32,"column_start":1,"column_end":20}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/mod.rs","byte_start":13586,"byte_end":13587,"line_start":7,"line_end":7,"column_start":18,"column_end":19},"alias_span":null,"name":"*","value":"AddressEncoder","parent":{"krate":0,"index":50}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/mod.rs","byte_start":13604,"byte_end":13605,"line_start":8,"line_end":8,"column_start":16,"column_end":17},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":50}},{"kind":"Use","ref_id":{"krate":35,"index":520},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":23303,"byte_end":23309,"line_start":16,"line_end":16,"column_start":17,"column_end":23},"alias_span":null,"name":"Digest","value":"","parent":{"krate":0,"index":106}},{"kind":"Use","ref_id":{"krate":37,"index":497},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":23334,"byte_end":23346,"line_start":17,"line_end":17,"column_start":24,"column_end":36},"alias_span":null,"name":"GenericArray","value":"","parent":{"krate":0,"index":106}},{"kind":"Use","ref_id":{"krate":40,"index":198},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":23364,"byte_end":23373,"line_start":18,"line_end":18,"column_start":17,"column_end":26},"alias_span":null,"name":"Ripemd160","value":"","parent":{"krate":0,"index":106}},{"kind":"Use","ref_id":{"krate":41,"index":173},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":23389,"byte_end":23395,"line_start":19,"line_end":19,"column_start":15,"column_end":21},"alias_span":null,"name":"Sha256","value":"","parent":{"krate":0,"index":106}},{"kind":"Use","ref_id":{"krate":44,"index":291},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":23411,"byte_end":23419,"line_start":20,"line_end":20,"column_start":15,"column_end":23},"alias_span":null,"name":"Sha3_256","value":"","parent":{"krate":0,"index":106}},{"kind":"Use","ref_id":{"krate":0,"index":29},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/prelude.rs","byte_start":33270,"byte_end":33279,"line_start":4,"line_end":4,"column_start":14,"column_end":23},"alias_span":null,"name":"TxBuilder","value":"","parent":{"krate":0,"index":253}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/prelude.rs","byte_start":33290,"byte_end":33291,"line_start":5,"line_end":5,"column_start":10,"column_end":11},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":253}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/prelude.rs","byte_start":33305,"byte_end":33306,"line_start":6,"line_end":6,"column_start":13,"column_end":14},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":253}},{"kind":"Use","ref_id":{"krate":0,"index":237},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/prelude.rs","byte_start":33318,"byte_end":33325,"line_start":7,"line_end":7,"column_start":11,"column_end":18},"alias_span":null,"name":"Network","value":"","parent":{"krate":0,"index":253}},{"kind":"Use","ref_id":{"krate":0,"index":344},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/prelude.rs","byte_start":33337,"byte_end":33347,"line_start":8,"line_end":8,"column_start":11,"column_end":21},"alias_span":null,"name":"ByteFormat","value":"","parent":{"krate":0,"index":253}},{"kind":"Use","ref_id":{"krate":0,"index":306},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/prelude.rs","byte_start":33349,"byte_end":33360,"line_start":8,"line_end":8,"column_start":23,"column_end":34},"alias_span":null,"name":"ReadSeqMode","value":"","parent":{"krate":0,"index":253}},{"kind":"Use","ref_id":{"krate":0,"index":406},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/prelude.rs","byte_start":33374,"byte_end":33385,"line_start":9,"line_end":9,"column_start":12,"column_end":23},"alias_span":null,"name":"Transaction","value":"","parent":{"krate":0,"index":253}},{"kind":"Use","ref_id":{"krate":35,"index":520},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/prelude.rs","byte_start":33406,"byte_end":33412,"line_start":11,"line_end":11,"column_start":17,"column_end":23},"alias_span":null,"name":"Digest","value":"","parent":{"krate":0,"index":253}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/mod.rs","byte_start":49445,"byte_end":49446,"line_start":17,"line_end":17,"column_start":13,"column_end":14},"alias_span":null,"name":"*","value":"Transaction","parent":{"krate":0,"index":373}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","byte_start":1204,"byte_end":1205,"line_start":32,"line_end":32,"column_start":18,"column_end":19},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","byte_start":0,"byte_end":1206,"line_start":1,"line_end":32,"column_start":1,"column_end":20},"name":"","qualname":"::","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":8},{"krate":0,"index":50},{"krate":0,"index":106},{"krate":0,"index":213},{"krate":0,"index":253},{"krate":0,"index":276},{"krate":0,"index":373},{"krate":0,"index":425}],"decl_id":null,"docs":" `coins-core` is an abstract description of UTXO transactions. It provides a collection of\n traits that provide consistent interfaces to UTXO transaction construction. Coins's traits\n ensure that types are consistent across all steps in the tx construction process, and allow\n for code reuse when building transactions on multiple chains (e.g. Bitcoin Mainnet and Bitcoin\n Testnet).","sig":null,"attributes":[{"value":"/ `coins-core` is an abstract description of UTXO transactions. It provides a collection of","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","byte_start":0,"byte_end":93,"line_start":1,"line_end":1,"column_start":1,"column_end":94}},{"value":"/ traits that provide consistent interfaces to UTXO transaction construction. Coins's traits","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","byte_start":94,"byte_end":188,"line_start":2,"line_end":2,"column_start":1,"column_end":95}},{"value":"/ ensure that types are consistent across all steps in the tx construction process, and allow","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","byte_start":189,"byte_end":284,"line_start":3,"line_end":3,"column_start":1,"column_end":96}},{"value":"/ for code reuse when building transactions on multiple chains (e.g. Bitcoin Mainnet and Bitcoin","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","byte_start":285,"byte_end":383,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"/ Testnet).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","byte_start":384,"byte_end":397,"line_start":5,"line_end":5,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","byte_start":398,"byte_end":401,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Many concepts familiar to UTXO chain developers have been genericized. Transactions are","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","byte_start":402,"byte_end":493,"line_start":7,"line_end":7,"column_start":1,"column_end":92}},{"value":"/ modeled as a collection of `Input`s and `Output`s. Rather than addresses or scripts, the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","byte_start":494,"byte_end":586,"line_start":8,"line_end":8,"column_start":1,"column_end":93}},{"value":"/ `Output` trait has an associated `RecipientIdentifier`. Similarly, rather than an outpoint,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","byte_start":587,"byte_end":682,"line_start":9,"line_end":9,"column_start":1,"column_end":96}},{"value":"/ the `Input` trait has an associated `TXOIdentfier`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","byte_start":683,"byte_end":738,"line_start":10,"line_end":10,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","byte_start":739,"byte_end":742,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Support for other chains may be added by implementing these traits. We have provided an","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","byte_start":743,"byte_end":834,"line_start":12,"line_end":12,"column_start":1,"column_end":92}},{"value":"/ implementation suitable for Bitcoin chains (mainnet, testnet, and signet) in the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","byte_start":835,"byte_end":919,"line_start":13,"line_end":13,"column_start":1,"column_end":85}},{"value":"/ `bitcoins` crate.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","byte_start":920,"byte_end":941,"line_start":14,"line_end":14,"column_start":1,"column_end":22}},{"value":"forbid(unsafe_code)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","byte_start":943,"byte_end":966,"line_start":16,"line_end":16,"column_start":1,"column_end":24}},{"value":"warn(missing_docs)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","byte_start":967,"byte_end":989,"line_start":17,"line_end":17,"column_start":1,"column_end":23}},{"value":"warn(unused_extern_crates)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","byte_start":990,"byte_end":1020,"line_start":18,"line_end":18,"column_start":1,"column_end":31}}]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/macros.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/macros.rs","parent":null,"children":[{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7}],"decl_id":null,"docs":" Useful macros for implementing new chains\n","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","byte_start":1051,"byte_end":1063,"line_start":21,"line_end":21,"column_start":1,"column_end":13}},{"value":"/ Useful macros for implementing new chains","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/macros.rs","byte_start":1208,"byte_end":1253,"line_start":1,"line_end":1,"column_start":1,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":8},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"builder","qualname":"::builder","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","parent":null,"children":[{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":29}],"decl_id":null,"docs":" The `builder` module defines an abstract `TxBuilder` trait. A concrete implementation for\n Bitcoin can be found in the `bitcoin` crate\n","sig":null,"attributes":[{"value":"/ The `builder` module defines an abstract `TxBuilder` trait. A concrete implementation for","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":9607,"byte_end":9700,"line_start":1,"line_end":1,"column_start":1,"column_end":94}},{"value":"/ Bitcoin can be found in the `bitcoin` crate","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":9701,"byte_end":9748,"line_start":2,"line_end":2,"column_start":1,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":29},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":10106,"byte_end":10115,"line_start":14,"line_end":14,"column_start":11,"column_end":20},"name":"TxBuilder","qualname":"::builder::TxBuilder","value":"TxBuilder: std::marker::Sized","parent":null,"children":[{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":48},{"krate":0,"index":49}],"decl_id":null,"docs":" A builder-pattern interface for constructing transactions. Implementations should accumulate\n inputs, outputs, witnesses, and other TX data, and then `build()` a Transaction object from\n the accumulated data.\n","sig":null,"attributes":[{"value":"/ A builder-pattern interface for constructing transactions. Implementations should accumulate","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":9877,"byte_end":9973,"line_start":11,"line_end":11,"column_start":1,"column_end":97}},{"value":"/ inputs, outputs, witnesses, and other TX data, and then `build()` a Transaction object from","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":9974,"byte_end":10069,"line_start":12,"line_end":12,"column_start":1,"column_end":96}},{"value":"/ the accumulated data.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":10070,"byte_end":10095,"line_start":13,"line_end":13,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":30},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":10198,"byte_end":10209,"line_start":16,"line_end":16,"column_start":10,"column_end":21},"name":"Transaction","qualname":"::builder::TxBuilder::Transaction","value":"type Transaction: Transaction;","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" The Transaction type returned by `build()`\n","sig":null,"attributes":[{"value":"/ The Transaction type returned by `build()`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":10142,"byte_end":10188,"line_start":15,"line_end":15,"column_start":5,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":31},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":10417,"byte_end":10424,"line_start":20,"line_end":20,"column_start":10,"column_end":17},"name":"Encoder","qualname":"::builder::TxBuilder::Encoder","value":"type Encoder: AddressEncoder;","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" An AddressEncoder that handles encoding and decoding network addresses. This is used in\n the `pay` function to decode addresses into associated `RecipientIdentifier`s.\n","sig":null,"attributes":[{"value":"/ An AddressEncoder that handles encoding and decoding network addresses. This is used in","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":10229,"byte_end":10320,"line_start":18,"line_end":18,"column_start":5,"column_end":96}},{"value":"/ the `pay` function to decode addresses into associated `RecipientIdentifier`s.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":10325,"byte_end":10407,"line_start":19,"line_end":19,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":10484,"byte_end":10487,"line_start":23,"line_end":23,"column_start":8,"column_end":11},"name":"new","qualname":"::builder::TxBuilder::new","value":"fn new() -> Self","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" Instantiate a new builder\n","sig":null,"attributes":[{"value":"/ Instantiate a new builder","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":10447,"byte_end":10476,"line_start":22,"line_end":22,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":10596,"byte_end":10607,"line_start":26,"line_end":26,"column_start":8,"column_end":19},"name":"from_tx_ref","qualname":"::builder::TxBuilder::from_tx_ref","value":"fn from_tx_ref<'_>(&'_ Self::Transaction) -> Self","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" Instantiate a new builder from a transaction reference by cloning its properties\n","sig":null,"attributes":[{"value":"/ Instantiate a new builder from a transaction reference by cloning its properties","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":10504,"byte_end":10588,"line_start":25,"line_end":25,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":10740,"byte_end":10747,"line_start":29,"line_end":29,"column_start":8,"column_end":15},"name":"from_tx","qualname":"::builder::TxBuilder::from_tx","value":"fn from_tx(Self::Transaction) -> Self","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" Instantiate a new builder from a transaction by taking ownership of its properties\n","sig":null,"attributes":[{"value":"/ Instantiate a new builder from a transaction by taking ownership of its properties","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":10646,"byte_end":10732,"line_start":28,"line_end":28,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":10875,"byte_end":10887,"line_start":32,"line_end":32,"column_start":8,"column_end":20},"name":"read_from_tx","qualname":"::builder::TxBuilder::read_from_tx","value":"fn read_from_tx<R, '_>(&'_ mut R)\n-> Result<Self, <Self::Transaction as Transaction>::TxError> where R: Read","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" Instantiate a new builder from a `std::io::Read` that contains a serialized tx\n","sig":null,"attributes":[{"value":"/ Instantiate a new builder from a `std::io::Read` that contains a serialized tx","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":10785,"byte_end":10867,"line_start":31,"line_end":31,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":11156,"byte_end":11167,"line_start":41,"line_end":41,"column_start":8,"column_end":19},"name":"from_hex_tx","qualname":"::builder::TxBuilder::from_hex_tx","value":"fn from_hex_tx<'_>(&'_ str)\n-> Result<Self, <Self::Transaction as Transaction>::TxError>","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" Instantiate a new builder from transaction hex\n","sig":null,"attributes":[{"value":"/ Instantiate a new builder from transaction hex","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":11098,"byte_end":11148,"line_start":40,"line_end":40,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":11503,"byte_end":11510,"line_start":49,"line_end":49,"column_start":8,"column_end":15},"name":"version","qualname":"::builder::TxBuilder::version","value":"fn version(Self, u32) -> Self","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" Set or overwrite the transaction version.","sig":null,"attributes":[{"value":"/ Set or overwrite the transaction version.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":11350,"byte_end":11395,"line_start":46,"line_end":46,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":11400,"byte_end":11403,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ If implementing a network without a version field, feel free to leave this as a NOP","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":11408,"byte_end":11495,"line_start":48,"line_end":48,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":11675,"byte_end":11680,"line_start":53,"line_end":53,"column_start":8,"column_end":13},"name":"spend","qualname":"::builder::TxBuilder::spend","value":"fn spend<I>(Self, I, u32) -> Self where\nI: Into<<<Self::Transaction as Transaction>::TxIn as Input>::TxoIdentifier>","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" Spend an outpoint. Adds an unsigned input spending the associated outpoint with the\n specified sequence number.\n","sig":null,"attributes":[{"value":"/ Spend an outpoint. Adds an unsigned input spending the associated outpoint with the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":11545,"byte_end":11632,"line_start":51,"line_end":51,"column_start":5,"column_end":92}},{"value":"/ specified sequence number.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":11637,"byte_end":11667,"line_start":52,"line_end":52,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":11896,"byte_end":11899,"line_start":58,"line_end":58,"column_start":8,"column_end":11},"name":"pay","qualname":"::builder::TxBuilder::pay","value":"fn pay<'_>(Self, <<Self::Transaction as Transaction>::TxOut as Output>::Value,\n&'_ <Self::Encoder as AddressEncoder>::Address) -> Self","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" Pay an Address. Adds an output paying `value` to `address.`\n","sig":null,"attributes":[{"value":"/ Pay an Address. Adds an output paying `value` to `address.`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":11825,"byte_end":11888,"line_start":57,"line_end":57,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":12269,"byte_end":12281,"line_start":69,"line_end":69,"column_start":8,"column_end":20},"name":"insert_input","qualname":"::builder::TxBuilder::insert_input","value":"fn insert_input(Self, usize, <Self::Transaction as Transaction>::TxIn) -> Self","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" Insert an input at the specified index. Inputs after that are shifted to later indices.","sig":null,"attributes":[{"value":"/ Insert an input at the specified index. Inputs after that are shifted to later indices.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":12074,"byte_end":12165,"line_start":64,"line_end":64,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":12170,"byte_end":12173,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ ## Note","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":12178,"byte_end":12189,"line_start":66,"line_end":66,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":12194,"byte_end":12197,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This may invalidate signatures made using ANYONECANPAY.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":12202,"byte_end":12261,"line_start":68,"line_end":68,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":12416,"byte_end":12429,"line_start":72,"line_end":72,"column_start":8,"column_end":21},"name":"extend_inputs","qualname":"::builder::TxBuilder::extend_inputs","value":"fn extend_inputs<I>(Self, I) -> Self where I: IntoIterator<Item =\n<Self::Transaction as Transaction>::TxIn>","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" Add a set of inputs to the transaction.\n","sig":null,"attributes":[{"value":"/ Add a set of inputs to the transaction.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":12365,"byte_end":12408,"line_start":71,"line_end":71,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":12738,"byte_end":12751,"line_start":81,"line_end":81,"column_start":8,"column_end":21},"name":"insert_output","qualname":"::builder::TxBuilder::insert_output","value":"fn insert_output(Self, usize, <Self::Transaction as Transaction>::TxOut)\n-> Self","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" Insert an output at the specified index. Outputs after that are shifted to later indices.","sig":null,"attributes":[{"value":"/ Insert an output at the specified index. Outputs after that are shifted to later indices.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":12547,"byte_end":12640,"line_start":76,"line_end":76,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":12645,"byte_end":12648,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ## Note","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":12653,"byte_end":12664,"line_start":78,"line_end":78,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":12669,"byte_end":12672,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ This may invalidate signatures made using SINGLE.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":12677,"byte_end":12730,"line_start":80,"line_end":80,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":12897,"byte_end":12911,"line_start":85,"line_end":85,"column_start":8,"column_end":22},"name":"extend_outputs","qualname":"::builder::TxBuilder::extend_outputs","value":"fn extend_outputs<I>(Self, I) -> Self where I: IntoIterator<Item =\n<Self::Transaction as Transaction>::TxOut>","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" Add a set of outputs to the transaction.\n","sig":null,"attributes":[{"value":"/ Add a set of outputs to the transaction.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":12845,"byte_end":12889,"line_start":84,"line_end":84,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":13186,"byte_end":13194,"line_start":92,"line_end":92,"column_start":8,"column_end":16},"name":"locktime","qualname":"::builder::TxBuilder::locktime","value":"fn locktime(Self, u32) -> Self","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" Set or overwrite the transaction locktime.","sig":null,"attributes":[{"value":"/ Set or overwrite the transaction locktime.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":13031,"byte_end":13077,"line_start":89,"line_end":89,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":13082,"byte_end":13085,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ If implementing a network without a locktime field, feel free to leave this as a NOP","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":13090,"byte_end":13178,"line_start":91,"line_end":91,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":13321,"byte_end":13326,"line_start":95,"line_end":95,"column_start":8,"column_end":13},"name":"build","qualname":"::builder::TxBuilder::build","value":"fn build(Self)\n-> Result<Self::Transaction, <Self::Transaction as Transaction>::TxError>","parent":{"krate":0,"index":29},"children":[],"decl_id":null,"docs":" Consume the builder and produce a transaction from the builder's current state.\n","sig":null,"attributes":[{"value":"/ Consume the builder and produce a transaction from the builder's current state.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":13230,"byte_end":13313,"line_start":94,"line_end":94,"column_start":5,"column_end":88}}]},{"kind":"Mod","id":{"krate":0,"index":50},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"enc","qualname":"::enc","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/mod.rs","parent":null,"children":[{"krate":0,"index":51},{"krate":0,"index":62},{"krate":0,"index":104},{"krate":0,"index":105}],"decl_id":null,"docs":" Holds generalized encoding tools. This includes an `AddressEncoder` and bech32 encoding\n and decoding functionality.\n","sig":null,"attributes":[{"value":"/ Holds generalized encoding tools. This includes an `AddressEncoder` and bech32 encoding","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/mod.rs","byte_start":13411,"byte_end":13502,"line_start":1,"line_end":1,"column_start":1,"column_end":92}},{"value":"/ and decoding functionality.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/mod.rs","byte_start":13503,"byte_end":13534,"line_start":2,"line_end":2,"column_start":1,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":51},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/address.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"address","qualname":"::enc::address","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/address.rs","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":55}],"decl_id":null,"docs":" Specifies an abstract `AddressEncoder` that is used to convert `Address` to/from the in-memory\n representation of the associated spending constraint.\n","sig":null,"attributes":[{"value":"/ Specifies an abstract `AddressEncoder` that is used to convert `Address` to/from the in-memory","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/address.rs","byte_start":13608,"byte_end":13706,"line_start":1,"line_end":1,"column_start":1,"column_end":99}},{"value":"/ representation of the associated spending constraint.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/address.rs","byte_start":13707,"byte_end":13764,"line_start":2,"line_end":2,"column_start":1,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":55},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/address.rs","byte_start":14333,"byte_end":14347,"line_start":15,"line_end":15,"column_start":11,"column_end":25},"name":"AddressEncoder","qualname":"::enc::address::AddressEncoder","value":"AddressEncoder","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61}],"decl_id":null,"docs":" An AddressEncoder encodes and decodes addresses. This struct is used by the Builder to decode\n addresses, and is associated with a Network object. It handles converting addresses to\n recipients and vice versa. It also contains a function that wraps a string in the appropriate\n address type.","sig":null,"attributes":[{"value":"/ An AddressEncoder encodes and decodes addresses. This struct is used by the Builder to decode","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/address.rs","byte_start":13810,"byte_end":13907,"line_start":6,"line_end":6,"column_start":1,"column_end":98}},{"value":"/ addresses, and is associated with a Network object. It handles converting addresses to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/address.rs","byte_start":13908,"byte_end":13998,"line_start":7,"line_end":7,"column_start":1,"column_end":91}},{"value":"/ recipients and vice versa. It also contains a function that wraps a string in the appropriate","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/address.rs","byte_start":13999,"byte_end":14096,"line_start":8,"line_end":8,"column_start":1,"column_end":98}},{"value":"/ address type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/address.rs","byte_start":14097,"byte_end":14114,"line_start":9,"line_end":9,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/address.rs","byte_start":14115,"byte_end":14118,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This trait exists to maintain conceptual separation between the user-facing `Address` and the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/address.rs","byte_start":14119,"byte_end":14216,"line_start":11,"line_end":11,"column_start":1,"column_end":98}},{"value":"/ protocol-facing `RecipientIdentifier`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/address.rs","byte_start":14217,"byte_end":14259,"line_start":12,"line_end":12,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/address.rs","byte_start":14260,"byte_end":14263,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ A Bitcoin encoder can be found in the `bitcoin` crate.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/address.rs","byte_start":14264,"byte_end":14322,"line_start":14,"line_end":14,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":56},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/address.rs","byte_start":14449,"byte_end":14456,"line_start":17,"line_end":17,"column_start":10,"column_end":17},"name":"Address","qualname":"::enc::address::AddressEncoder::Address","value":"type Address;","parent":{"krate":0,"index":55},"children":[],"decl_id":null,"docs":" A type representing the user-facing address, with any disambiguating information.\n","sig":null,"attributes":[{"value":"/ A type representing the user-facing address, with any disambiguating information.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/address.rs","byte_start":14354,"byte_end":14439,"line_start":16,"line_end":16,"column_start":5,"column_end":90}}]},{"kind":"Type","id":{"krate":0,"index":57},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/address.rs","byte_start":14538,"byte_end":14543,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"name":"Error","qualname":"::enc::address::AddressEncoder::Error","value":"type Error;","parent":{"krate":0,"index":55},"children":[],"decl_id":null,"docs":" An error type that will be returned in case of encoding errors\n","sig":null,"attributes":[{"value":"/ An error type that will be returned in case of encoding errors","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/address.rs","byte_start":14462,"byte_end":14528,"line_start":18,"line_end":18,"column_start":5,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":58},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/address.rs","byte_start":14754,"byte_end":14773,"line_start":23,"line_end":23,"column_start":10,"column_end":29},"name":"RecipientIdentifier","qualname":"::enc::address::AddressEncoder::RecipientIdentifier","value":"type RecipientIdentifier: RecipientIdentifier;","parent":{"krate":0,"index":55},"children":[],"decl_id":null,"docs":" A type representing the in-protocol recipient. This is usually different from the\n Address type. The encoder converts between `Strings`, `Address`es, and\n `RecipientIdentifier`s\n","sig":null,"attributes":[{"value":"/ A type representing the in-protocol recipient. This is usually different from the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/address.rs","byte_start":14549,"byte_end":14634,"line_start":20,"line_end":20,"column_start":5,"column_end":90}},{"value":"/ Address type. The encoder converts between `Strings`, `Address`es, and","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/address.rs","byte_start":14639,"byte_end":14713,"line_start":21,"line_end":21,"column_start":5,"column_end":79}},{"value":"/ `RecipientIdentifier`s","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/address.rs","byte_start":14718,"byte_end":14744,"line_start":22,"line_end":22,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/address.rs","byte_start":14871,"byte_end":14885,"line_start":26,"line_end":26,"column_start":8,"column_end":22},"name":"encode_address","qualname":"::enc::address::AddressEncoder::encode_address","value":"fn encode_address<'_>(&'_ Self::RecipientIdentifier)\n-> Result<Self::Address, Self::Error>","parent":{"krate":0,"index":55},"children":[],"decl_id":null,"docs":" Attempt to encode a `RecipientIdentifier` as an `Address`.\n","sig":null,"attributes":[{"value":"/ Attempt to encode a `RecipientIdentifier` as an `Address`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/address.rs","byte_start":14801,"byte_end":14863,"line_start":25,"line_end":25,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/address.rs","byte_start":15086,"byte_end":15100,"line_start":30,"line_end":30,"column_start":8,"column_end":22},"name":"decode_address","qualname":"::enc::address::AddressEncoder::decode_address","value":"fn decode_address<'_>(&'_ Self::Address) -> Self::RecipientIdentifier","parent":{"krate":0,"index":55},"children":[],"decl_id":null,"docs":" Decode a `RecipientIdentifier` from an `Address`. Addresses should be defined such that\n this cannot fail.\n","sig":null,"attributes":[{"value":"/ Decode a `RecipientIdentifier` from an `Address`. Addresses should be defined such that","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/address.rs","byte_start":14961,"byte_end":15052,"line_start":28,"line_end":28,"column_start":5,"column_end":96}},{"value":"/ this cannot fail.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/address.rs","byte_start":15057,"byte_end":15078,"line_start":29,"line_end":29,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/address.rs","byte_start":15216,"byte_end":15233,"line_start":33,"line_end":33,"column_start":8,"column_end":25},"name":"string_to_address","qualname":"::enc::address::AddressEncoder::string_to_address","value":"fn string_to_address<'_>(&'_ str) -> Result<Self::Address, Self::Error>","parent":{"krate":0,"index":55},"children":[],"decl_id":null,"docs":" Attempt to convert a string into an `Address`.\n","sig":null,"attributes":[{"value":"/ Attempt to convert a string into an `Address`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/address.rs","byte_start":15158,"byte_end":15208,"line_start":32,"line_end":32,"column_start":5,"column_end":55}}]},{"kind":"Mod","id":{"krate":0,"index":62},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bases","qualname":"::enc::bases","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","parent":null,"children":[{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":86},{"krate":0,"index":89},{"krate":0,"index":92},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":429},{"krate":0,"index":434},{"krate":0,"index":443},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103}],"decl_id":null,"docs":" Contains simplified access to `bech32` and `base58check` encoder/decoder for Bitcoin\n addresses. Also defines common encoder errors.\n","sig":null,"attributes":[{"value":"/ Contains simplified access to `bech32` and `base58check` encoder/decoder for Bitcoin","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":15285,"byte_end":15373,"line_start":1,"line_end":1,"column_start":1,"column_end":89}},{"value":"/ addresses. Also defines common encoder errors.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":15374,"byte_end":15424,"line_start":2,"line_end":2,"column_start":1,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":445},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":15899,"byte_end":15916,"line_start":17,"line_end":17,"column_start":5,"column_end":22},"name":"UnknownScriptType","qualname":"::enc::bases::EncodingError::UnknownScriptType","value":"EncodingError::UnknownScriptType","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Returned when ScriptPubkey type is unknown. May be non-standard or newer than lib version.\n","sig":null,"attributes":[{"value":"/ Returned when ScriptPubkey type is unknown. May be non-standard or newer than lib version.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":15753,"byte_end":15847,"line_start":15,"line_end":15,"column_start":5,"column_end":99}},{"value":"error(\"Non-standard ScriptPubkey type\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":15852,"byte_end":15894,"line_start":16,"line_end":16,"column_start":5,"column_end":47}}]},{"kind":"StructVariant","id":{"krate":0,"index":447},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":16104,"byte_end":16112,"line_start":21,"line_end":21,"column_start":5,"column_end":13},"name":"WrongHrp","qualname":"::enc::bases::EncodingError::WrongHrp","value":"EncodingError::WrongHrp { got, expected }","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Bech32 HRP does not match the current network.\n","sig":null,"attributes":[{"value":"/ Bech32 HRP does not match the current network.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":15923,"byte_end":15973,"line_start":19,"line_end":19,"column_start":5,"column_end":55}},{"value":"error(\"Bech32 HRP does not match. \\nGot {:?} expected {:?} Hint: Is this address for another network?\",\ngot, expected)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":15978,"byte_end":16099,"line_start":20,"line_end":20,"column_start":5,"column_end":126}}]},{"kind":"Field","id":{"krate":0,"index":448},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":16151,"byte_end":16154,"line_start":23,"line_end":23,"column_start":9,"column_end":12},"name":"got","qualname":"::enc::bases::EncodingError::WrongHrp::got","value":"std::string::String","parent":{"krate":0,"index":447},"children":[],"decl_id":null,"docs":" The actual HRP.\n","sig":null,"attributes":[{"value":"/ The actual HRP.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":16123,"byte_end":16142,"line_start":22,"line_end":22,"column_start":9,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":449},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":16202,"byte_end":16210,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"name":"expected","qualname":"::enc::bases::EncodingError::WrongHrp::expected","value":"std::string::String","parent":{"krate":0,"index":447},"children":[],"decl_id":null,"docs":" The expected HRP.\n","sig":null,"attributes":[{"value":"/ The expected HRP.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":16172,"byte_end":16193,"line_start":24,"line_end":24,"column_start":9,"column_end":30}}]},{"kind":"StructVariant","id":{"krate":0,"index":450},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":16430,"byte_end":16442,"line_start":30,"line_end":30,"column_start":5,"column_end":17},"name":"WrongVersion","qualname":"::enc::bases::EncodingError::WrongVersion","value":"EncodingError::WrongVersion { got, expected }","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Base58Check version does not match the current network\n","sig":null,"attributes":[{"value":"/ Base58Check version does not match the current network","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":16232,"byte_end":16290,"line_start":28,"line_end":28,"column_start":5,"column_end":63}},{"value":"error(\"Base58Check version does not match. \\nGot {:?} expected {:?} Hint: Is this address for another network?\",\ngot, expected)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":16295,"byte_end":16425,"line_start":29,"line_end":29,"column_start":5,"column_end":135}}]},{"kind":"Field","id":{"krate":0,"index":451},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":16490,"byte_end":16493,"line_start":32,"line_end":32,"column_start":9,"column_end":12},"name":"got","qualname":"::enc::bases::EncodingError::WrongVersion::got","value":"u8","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" The actual version byte.\n","sig":null,"attributes":[{"value":"/ The actual version byte.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":16453,"byte_end":16481,"line_start":31,"line_end":31,"column_start":9,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":452},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":16546,"byte_end":16554,"line_start":34,"line_end":34,"column_start":9,"column_end":17},"name":"expected","qualname":"::enc::bases::EncodingError::WrongVersion::expected","value":"u8","parent":{"krate":0,"index":450},"children":[],"decl_id":null,"docs":" The expected version byte.\n","sig":null,"attributes":[{"value":"/ The expected version byte.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":16507,"byte_end":16537,"line_start":33,"line_end":33,"column_start":9,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":453},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":16666,"byte_end":16674,"line_start":39,"line_end":39,"column_start":5,"column_end":13},"name":"B58Error","qualname":"::enc::bases::EncodingError::B58Error","value":"EncodingError::B58Error(FromBase58CheckError)","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Bubbled up error from base58check library\n","sig":null,"attributes":[{"value":"/ Bubbled up error from base58check library","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":16572,"byte_end":16617,"line_start":37,"line_end":37,"column_start":5,"column_end":50}},{"value":"error(\"FromBase58CheckError: {0:?}\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":16622,"byte_end":16661,"line_start":38,"line_end":38,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":455},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":16675,"byte_end":16695,"line_start":39,"line_end":39,"column_start":14,"column_end":34},"name":"0","qualname":"::enc::bases::EncodingError::B58Error::0","value":"base58check::FromBase58CheckError","parent":{"krate":0,"index":453},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":456},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":16774,"byte_end":16783,"line_start":43,"line_end":43,"column_start":5,"column_end":14},"name":"BechError","qualname":"::enc::bases::EncodingError::BechError","value":"EncodingError::BechError(BechError)","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Bubbled up error from bech32 library\n","sig":null,"attributes":[{"value":"/ Bubbled up error from bech32 library","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":16703,"byte_end":16743,"line_start":41,"line_end":41,"column_start":5,"column_end":45}},{"value":"error(transparent)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":16748,"byte_end":16769,"line_start":42,"line_end":42,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":458},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":16792,"byte_end":16801,"line_start":43,"line_end":43,"column_start":23,"column_end":32},"name":"0","qualname":"::enc::bases::EncodingError::BechError::0","value":"bech32::Error","parent":{"krate":0,"index":456},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"from","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":16784,"byte_end":16791,"line_start":43,"line_end":43,"column_start":15,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":459},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":16922,"byte_end":16936,"line_start":47,"line_end":47,"column_start":5,"column_end":19},"name":"NullDataScript","qualname":"::enc::bases::EncodingError::NullDataScript","value":"EncodingError::NullDataScript","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Op Return ScriptPubkey was passed to encoder\n","sig":null,"attributes":[{"value":"/ Op Return ScriptPubkey was passed to encoder","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":16809,"byte_end":16857,"line_start":45,"line_end":45,"column_start":5,"column_end":53}},{"value":"error(\"Can't encode op return scripts as addresses\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":16862,"byte_end":16917,"line_start":46,"line_end":46,"column_start":5,"column_end":60}}]},{"kind":"TupleVariant","id":{"krate":0,"index":461},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":17018,"byte_end":17036,"line_start":51,"line_end":51,"column_start":5,"column_end":23},"name":"SegwitVersionError","qualname":"::enc::bases::EncodingError::SegwitVersionError","value":"EncodingError::SegwitVersionError(u8)","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Invalid Segwit Version\n","sig":null,"attributes":[{"value":"/ Invalid Segwit Version","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":16943,"byte_end":16969,"line_start":49,"line_end":49,"column_start":5,"column_end":31}},{"value":"error(\"Invalid Segwit Version: {0}\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":16974,"byte_end":17013,"line_start":50,"line_end":50,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":463},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":17037,"byte_end":17039,"line_start":51,"line_end":51,"column_start":24,"column_end":26},"name":"0","qualname":"::enc::bases::EncodingError::SegwitVersionError::0","value":"u8","parent":{"krate":0,"index":461},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":464},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":17113,"byte_end":17129,"line_start":55,"line_end":55,"column_start":5,"column_end":21},"name":"InvalidSizeError","qualname":"::enc::bases::EncodingError::InvalidSizeError","value":"EncodingError::InvalidSizeError","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":" Invalid Address Size\n","sig":null,"attributes":[{"value":"/ Invalid Address Size","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":17047,"byte_end":17071,"line_start":53,"line_end":53,"column_start":5,"column_end":29}},{"value":"error(\"Invalid Address Size\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":17076,"byte_end":17108,"line_start":54,"line_end":54,"column_start":5,"column_end":37}}]},{"kind":"Enum","id":{"krate":0,"index":426},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":15733,"byte_end":15746,"line_start":14,"line_end":14,"column_start":10,"column_end":23},"name":"EncodingError","qualname":"::enc::bases::EncodingError","value":"enum EncodingError {\n    UnknownScriptType,\n    WrongHrp {\n            got: String,\n            expected: String,\n        },\n    WrongVersion {\n            got: u8,\n            expected: u8,\n        },\n    B58Error(FromBase58CheckError),\n    BechError(BechError),\n    NullDataScript,\n    SegwitVersionError(u8),\n    InvalidSizeError,\n}","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":447},{"krate":0,"index":450},{"krate":0,"index":453},{"krate":0,"index":456},{"krate":0,"index":459},{"krate":0,"index":461},{"krate":0,"index":464}],"decl_id":null,"docs":" Errors that can be returned by the Bitcoin `AddressEncoder`.\n","sig":null,"attributes":[{"value":"/ Errors that can be returned by the Bitcoin `AddressEncoder`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":15635,"byte_end":15699,"line_start":12,"line_end":12,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":17281,"byte_end":17285,"line_start":60,"line_end":60,"column_start":8,"column_end":12},"name":"from","qualname":"<EncodingError as std::convert::From>::from","value":"fn from(FromBase58CheckError) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":97},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":17405,"byte_end":17419,"line_start":66,"line_end":66,"column_start":10,"column_end":24},"name":"EncodingResult","qualname":"::enc::bases::EncodingResult","value":"Result<T, EncodingError>","parent":null,"children":[],"decl_id":null,"docs":" A simple result type alias\n","sig":null,"attributes":[{"value":"/ A simple result type alias","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":17365,"byte_end":17395,"line_start":65,"line_end":65,"column_start":1,"column_end":31}}]},{"kind":"Function","id":{"krate":0,"index":99},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":17637,"byte_end":17650,"line_start":70,"line_end":70,"column_start":8,"column_end":21},"name":"encode_bech32","qualname":"::enc::bases::encode_bech32","value":"fn encode_bech32<'_, '_>(&'_ str, u8, &'_ [u8]) -> EncodingResult<String>","parent":null,"children":[],"decl_id":null,"docs":" Encode a byte vector to bech32. This function expects `v` to be a witness program, and will\n return an `UnknownScriptType` if it does not meet the witness program format.\n","sig":null,"attributes":[{"value":"/ Encode a byte vector to bech32. This function expects `v` to be a witness program, and will","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":17452,"byte_end":17547,"line_start":68,"line_end":68,"column_start":1,"column_end":96}},{"value":"/ return an `UnknownScriptType` if it does not meet the witness program format.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":17548,"byte_end":17629,"line_start":69,"line_end":69,"column_start":1,"column_end":82}}]},{"kind":"Function","id":{"krate":0,"index":101},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":17974,"byte_end":17987,"line_start":78,"line_end":78,"column_start":8,"column_end":21},"name":"decode_bech32","qualname":"::enc::bases::decode_bech32","value":"fn decode_bech32<'_, '_>(&'_ str, &'_ str) -> EncodingResult<(u8, Vec<u8>)>","parent":null,"children":[],"decl_id":null,"docs":" Decode a witness program from a bech32 string. Caller specifies an expected HRP. If a\n different HRP is found, returns `WrongHrp`.\n","sig":null,"attributes":[{"value":"/ Decode a witness program from a bech32 string. Caller specifies an expected HRP. If a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":17829,"byte_end":17918,"line_start":76,"line_end":76,"column_start":1,"column_end":90}},{"value":"/ different HRP is found, returns `WrongHrp`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":17919,"byte_end":17966,"line_start":77,"line_end":77,"column_start":1,"column_end":48}}]},{"kind":"Function","id":{"krate":0,"index":102},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":18490,"byte_end":18503,"line_start":95,"line_end":95,"column_start":8,"column_end":21},"name":"encode_base58","qualname":"::enc::bases::encode_base58","value":"fn encode_base58<'_>(u8, &'_ [u8]) -> String","parent":null,"children":[],"decl_id":null,"docs":" Encodes a byte slice to base58check with the specified version byte.\n","sig":null,"attributes":[{"value":"/ Encodes a byte slice to base58check with the specified version byte.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":18410,"byte_end":18482,"line_start":94,"line_end":94,"column_start":1,"column_end":73}}]},{"kind":"Function","id":{"krate":0,"index":103},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":18760,"byte_end":18773,"line_start":101,"line_end":101,"column_start":8,"column_end":21},"name":"decode_base58","qualname":"::enc::bases::decode_base58","value":"fn decode_base58<'_>(u8, &'_ str) -> EncodingResult<Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Decodes base58check into a byte string. Returns a `FromBase58CheckError` if the checksum or\n encoding is wrong. Returns a `WrongVersion` if it decodes an unexpected version.\n","sig":null,"attributes":[{"value":"/ Decodes base58check into a byte string. Returns a `FromBase58CheckError` if the checksum or","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":18572,"byte_end":18667,"line_start":99,"line_end":99,"column_start":1,"column_end":96}},{"value":"/ encoding is wrong. Returns a `WrongVersion` if it decodes an unexpected version.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":18668,"byte_end":18752,"line_start":100,"line_end":100,"column_start":1,"column_end":85}}]},{"kind":"Mod","id":{"krate":0,"index":106},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hashes","qualname":"::hashes","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":118},{"krate":0,"index":121},{"krate":0,"index":124},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":134},{"krate":0,"index":137},{"krate":0,"index":140},{"krate":0,"index":143},{"krate":0,"index":146},{"krate":0,"index":149},{"krate":0,"index":152},{"krate":0,"index":154},{"krate":0,"index":161},{"krate":0,"index":466},{"krate":0,"index":469},{"krate":0,"index":471},{"krate":0,"index":165},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":171},{"krate":0,"index":173},{"krate":0,"index":175},{"krate":0,"index":177},{"krate":0,"index":179},{"krate":0,"index":473},{"krate":0,"index":476},{"krate":0,"index":478},{"krate":0,"index":181},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":187},{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":193},{"krate":0,"index":195},{"krate":0,"index":480},{"krate":0,"index":483},{"krate":0,"index":197},{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":207},{"krate":0,"index":209},{"krate":0,"index":211},{"krate":0,"index":510},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":516},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":525},{"krate":0,"index":527},{"krate":0,"index":530},{"krate":0,"index":532},{"krate":0,"index":485},{"krate":0,"index":487},{"krate":0,"index":489},{"krate":0,"index":492},{"krate":0,"index":495},{"krate":0,"index":497},{"krate":0,"index":499},{"krate":0,"index":501},{"krate":0,"index":503},{"krate":0,"index":559},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":565},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":574},{"krate":0,"index":576},{"krate":0,"index":579},{"krate":0,"index":581},{"krate":0,"index":534},{"krate":0,"index":536},{"krate":0,"index":538},{"krate":0,"index":541},{"krate":0,"index":544},{"krate":0,"index":546},{"krate":0,"index":548},{"krate":0,"index":550},{"krate":0,"index":552}],"decl_id":null,"docs":" Holds utilites for working with cryptographic digests, and disambiguating digests via marker\n traits.","sig":null,"attributes":[{"value":"/ Holds utilites for working with cryptographic digests, and disambiguating digests via marker","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":22824,"byte_end":22920,"line_start":1,"line_end":1,"column_start":1,"column_end":97}},{"value":"/ traits.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":22921,"byte_end":22932,"line_start":2,"line_end":2,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":22933,"byte_end":22936,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ We want to wrap hashes in marked newtypes in order to prevent type-confusion between TXIDs,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":22937,"byte_end":23032,"line_start":4,"line_end":4,"column_start":1,"column_end":96}},{"value":"/ sighashes, and other digests with the same length.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":23033,"byte_end":23087,"line_start":5,"line_end":5,"column_start":1,"column_end":55}}]},{"kind":"Type","id":{"krate":0,"index":152},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":23463,"byte_end":23475,"line_start":23,"line_end":23,"column_start":10,"column_end":22},"name":"DigestOutput","qualname":"::hashes::DigestOutput","value":"GenericArray<u8, <D as OutputSizeUser>::OutputSize>","parent":null,"children":[],"decl_id":null,"docs":" Output of a Digest function\n","sig":null,"attributes":[{"value":"/ Output of a Digest function","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":23422,"byte_end":23453,"line_start":22,"line_end":22,"column_start":1,"column_end":32}}]},{"kind":"Trait","id":{"krate":0,"index":154},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":23633,"byte_end":23651,"line_start":26,"line_end":26,"column_start":11,"column_end":29},"name":"MarkedDigestOutput","qualname":"::hashes::MarkedDigestOutput","value":"MarkedDigestOutput: Default + Copy + AsRef<[u8]> + AsMut<[u8]> + ByteFormat<Error = SerError>","parent":null,"children":[{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160}],"decl_id":null,"docs":" Convenience interface for hash function outputs, particularly marked digest outputs\n","sig":null,"attributes":[{"value":"/ Convenience interface for hash function outputs, particularly marked digest outputs","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":23535,"byte_end":23622,"line_start":25,"line_end":25,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":23790,"byte_end":23794,"line_start":30,"line_end":30,"column_start":8,"column_end":12},"name":"size","qualname":"::hashes::MarkedDigestOutput::size","value":"fn size<'_>(&'_ Self) -> usize","parent":{"krate":0,"index":154},"children":[],"decl_id":null,"docs":" Returns the number of bytes in the digest\n","sig":null,"attributes":[{"value":"/ Returns the number of bytes in the digest","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":23737,"byte_end":23782,"line_start":29,"line_end":29,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":23866,"byte_end":23874,"line_start":33,"line_end":33,"column_start":8,"column_end":16},"name":"reversed","qualname":"::hashes::MarkedDigestOutput::reversed","value":"fn reversed<'_>(&'_ Self) -> Self","parent":{"krate":0,"index":154},"children":[],"decl_id":null,"docs":" Return a clone in opposite byte order\n","sig":null,"attributes":[{"value":"/ Return a clone in opposite byte order","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":23817,"byte_end":23858,"line_start":32,"line_end":32,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":24185,"byte_end":24196,"line_start":44,"line_end":44,"column_start":8,"column_end":19},"name":"from_be_hex","qualname":"::hashes::MarkedDigestOutput::from_be_hex","value":"fn from_be_hex<'_>(&'_ str) -> SerResult<Self>","parent":{"krate":0,"index":154},"children":[],"decl_id":null,"docs":" Deserialize to BE hex\n","sig":null,"attributes":[{"value":"/ Deserialize to BE hex","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":24152,"byte_end":24177,"line_start":43,"line_end":43,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":24318,"byte_end":24327,"line_start":49,"line_end":49,"column_start":8,"column_end":17},"name":"to_be_hex","qualname":"::hashes::MarkedDigestOutput::to_be_hex","value":"fn to_be_hex<'_>(&'_ Self) -> String","parent":{"krate":0,"index":154},"children":[],"decl_id":null,"docs":" Convert to BE hex\n","sig":null,"attributes":[{"value":"/ Convert to BE hex","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":24289,"byte_end":24310,"line_start":48,"line_end":48,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":24432,"byte_end":24444,"line_start":54,"line_end":54,"column_start":8,"column_end":20},"name":"as_mut_slice","qualname":"::hashes::MarkedDigestOutput::as_mut_slice","value":"fn as_mut_slice<'_>(&'_ mut Self) -> &'_ mut [u8]","parent":{"krate":0,"index":154},"children":[],"decl_id":null,"docs":" Use as a mutable slice\n","sig":null,"attributes":[{"value":"/ Use as a mutable slice","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":24398,"byte_end":24424,"line_start":53,"line_end":53,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":24530,"byte_end":24538,"line_start":59,"line_end":59,"column_start":8,"column_end":16},"name":"as_slice","qualname":"::hashes::MarkedDigestOutput::as_slice","value":"fn as_slice<'_>(&'_ Self) -> &'_ [u8]","parent":{"krate":0,"index":154},"children":[],"decl_id":null,"docs":" Use as a slice\n","sig":null,"attributes":[{"value":"/ Use as a slice","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":24504,"byte_end":24522,"line_start":58,"line_end":58,"column_start":5,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":161},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":24618,"byte_end":24630,"line_start":65,"line_end":65,"column_start":11,"column_end":23},"name":"MarkedDigest","qualname":"::hashes::MarkedDigest","value":"MarkedDigest<D>: Digest + Default + Write","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164}],"decl_id":null,"docs":" A marked digest\n","sig":null,"attributes":[{"value":"/ A marked digest","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":24588,"byte_end":24607,"line_start":64,"line_end":64,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":24750,"byte_end":24765,"line_start":70,"line_end":70,"column_start":8,"column_end":23},"name":"finalize_marked","qualname":"::hashes::MarkedDigest::finalize_marked","value":"fn finalize_marked(Self) -> D","parent":{"krate":0,"index":161},"children":[],"decl_id":null,"docs":" Produce a marked digest from the hasher\n","sig":null,"attributes":[{"value":"/ Produce a marked digest from the hasher","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":24699,"byte_end":24742,"line_start":69,"line_end":69,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":24830,"byte_end":24843,"line_start":73,"line_end":73,"column_start":8,"column_end":21},"name":"digest_marked","qualname":"::hashes::MarkedDigest::digest_marked","value":"fn digest_marked<'_>(&'_ [u8]) -> D","parent":{"krate":0,"index":161},"children":[],"decl_id":null,"docs":" Shortcut to produce a marked digest\n","sig":null,"attributes":[{"value":"/ Shortcut to produce a marked digest","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":24783,"byte_end":24822,"line_start":72,"line_end":72,"column_start":5,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":466},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":24975,"byte_end":24982,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"Hash256","qualname":"::hashes::Hash256","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `Digest` implementation that performs Bitcoin style double-sha256\n","sig":null,"attributes":[{"value":"/ A `Digest` implementation that performs Bitcoin style double-sha256","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":24892,"byte_end":24963,"line_start":77,"line_end":77,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":25040,"byte_end":25045,"line_start":81,"line_end":81,"column_start":8,"column_end":13},"name":"flush","qualname":"<Hash256 as std::io::Write>::flush","value":"fn flush<'_>(&'_ mut Self) -> std::io::Result<()>","parent":{"krate":1,"index":4724},"children":[],"decl_id":{"krate":1,"index":4729},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":25111,"byte_end":25116,"line_start":85,"line_end":85,"column_start":8,"column_end":13},"name":"write","qualname":"<Hash256 as std::io::Write>::write","value":"fn write<'_, '_>(&'_ mut Self, &'_ [u8]) -> std::io::Result<usize>","parent":{"krate":1,"index":4724},"children":[],"decl_id":{"krate":1,"index":4725},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":25505,"byte_end":25518,"line_start":102,"line_end":102,"column_start":8,"column_end":21},"name":"finalize_into","qualname":"<Hash256 as digest::FixedOutput>::finalize_into","value":"fn finalize_into<'_>(Self, &'_ mut GenericArray<u8, Self::OutputSize>)","parent":{"krate":35,"index":735},"children":[],"decl_id":{"krate":35,"index":736},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":25768,"byte_end":25787,"line_start":110,"line_end":110,"column_start":8,"column_end":27},"name":"finalize_into_reset","qualname":"<Hash256 as digest::FixedOutputReset>::finalize_into_reset","value":"fn finalize_into_reset<'_, '_>(&'_ mut Self, &'_ mut Output<Self>)","parent":{"krate":35,"index":738},"children":[],"decl_id":{"krate":35,"index":739},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":25966,"byte_end":25971,"line_start":118,"line_end":118,"column_start":8,"column_end":13},"name":"reset","qualname":"<Hash256 as digest::Reset>::reset","value":"fn reset<'_>(&'_ mut Self)","parent":{"krate":36,"index":56},"children":[],"decl_id":{"krate":36,"index":57},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":26071,"byte_end":26077,"line_start":124,"line_end":124,"column_start":8,"column_end":14},"name":"update","qualname":"<Hash256 as digest::Update>::update","value":"fn update<'_, '_>(&'_ mut Self, &'_ [u8])","parent":{"krate":35,"index":731},"children":[],"decl_id":{"krate":35,"index":732},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":473},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":26265,"byte_end":26272,"line_start":131,"line_end":131,"column_start":12,"column_end":19},"name":"Hash160","qualname":"::hashes::Hash160","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `Digest` implementation that performs Bitcoin style double-sha256\n","sig":null,"attributes":[{"value":"/ A `Digest` implementation that performs Bitcoin style double-sha256","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":26182,"byte_end":26253,"line_start":130,"line_end":130,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":26330,"byte_end":26335,"line_start":134,"line_end":134,"column_start":8,"column_end":13},"name":"flush","qualname":"<Hash160 as std::io::Write>::flush","value":"fn flush<'_>(&'_ mut Self) -> std::io::Result<()>","parent":{"krate":1,"index":4724},"children":[],"decl_id":{"krate":1,"index":4729},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":26401,"byte_end":26406,"line_start":138,"line_end":138,"column_start":8,"column_end":13},"name":"write","qualname":"<Hash160 as std::io::Write>::write","value":"fn write<'_, '_>(&'_ mut Self, &'_ [u8]) -> std::io::Result<usize>","parent":{"krate":1,"index":4724},"children":[],"decl_id":{"krate":1,"index":4725},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":26801,"byte_end":26814,"line_start":155,"line_end":155,"column_start":8,"column_end":21},"name":"finalize_into","qualname":"<Hash160 as digest::FixedOutput>::finalize_into","value":"fn finalize_into<'_>(Self, &'_ mut GenericArray<u8, Self::OutputSize>)","parent":{"krate":35,"index":735},"children":[],"decl_id":{"krate":35,"index":736},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":27069,"byte_end":27088,"line_start":163,"line_end":163,"column_start":8,"column_end":27},"name":"finalize_into_reset","qualname":"<Hash160 as digest::FixedOutputReset>::finalize_into_reset","value":"fn finalize_into_reset<'_, '_>(&'_ mut Self, &'_ mut Output<Self>)","parent":{"krate":35,"index":738},"children":[],"decl_id":{"krate":35,"index":739},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":27267,"byte_end":27272,"line_start":171,"line_end":171,"column_start":8,"column_end":13},"name":"reset","qualname":"<Hash160 as digest::Reset>::reset","value":"fn reset<'_>(&'_ mut Self)","parent":{"krate":36,"index":56},"children":[],"decl_id":{"krate":36,"index":57},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":27372,"byte_end":27378,"line_start":177,"line_end":177,"column_start":8,"column_end":14},"name":"update","qualname":"<Hash160 as digest::Update>::update","value":"fn update<'_, '_>(&'_ mut Self, &'_ [u8])","parent":{"krate":35,"index":731},"children":[],"decl_id":{"krate":35,"index":732},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":480},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":27557,"byte_end":27567,"line_start":184,"line_end":184,"column_start":12,"column_end":22},"name":"Blake2b256","qualname":"::hashes::Blake2b256","value":"","parent":null,"children":[],"decl_id":null,"docs":" A `Digest` implementation that performs Bitcoin style double-sha256\n","sig":null,"attributes":[{"value":"/ A `Digest` implementation that performs Bitcoin style double-sha256","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":27474,"byte_end":27545,"line_start":183,"line_end":183,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":27634,"byte_end":27639,"line_start":187,"line_end":187,"column_start":8,"column_end":13},"name":"flush","qualname":"<Blake2b256 as std::io::Write>::flush","value":"fn flush<'_>(&'_ mut Self) -> std::io::Result<()>","parent":{"krate":1,"index":4724},"children":[],"decl_id":{"krate":1,"index":4729},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":27705,"byte_end":27710,"line_start":191,"line_end":191,"column_start":8,"column_end":13},"name":"write","qualname":"<Blake2b256 as std::io::Write>::write","value":"fn write<'_, '_>(&'_ mut Self, &'_ [u8]) -> std::io::Result<usize>","parent":{"krate":1,"index":4724},"children":[],"decl_id":{"krate":1,"index":4725},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":27856,"byte_end":27863,"line_start":198,"line_end":198,"column_start":8,"column_end":15},"name":"default","qualname":"<Blake2b256 as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":28104,"byte_end":28110,"line_start":205,"line_end":205,"column_start":8,"column_end":14},"name":"update","qualname":"<Blake2b256 as digest::Update>::update","value":"fn update<'_, '_>(&'_ mut Self, &'_ [u8])","parent":{"krate":35,"index":731},"children":[],"decl_id":{"krate":35,"index":732},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":28387,"byte_end":28400,"line_start":217,"line_end":217,"column_start":8,"column_end":21},"name":"finalize_into","qualname":"<Blake2b256 as digest::FixedOutput>::finalize_into","value":"fn finalize_into<'_>(Self, &'_ mut DigestOutput<Self>)","parent":{"krate":35,"index":735},"children":[],"decl_id":{"krate":35,"index":736},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":28719,"byte_end":28738,"line_start":227,"line_end":227,"column_start":8,"column_end":27},"name":"finalize_into_reset","qualname":"<Blake2b256 as digest::FixedOutputReset>::finalize_into_reset","value":"fn finalize_into_reset<'_, '_>(&'_ mut Self, &'_ mut Output<Self>)","parent":{"krate":35,"index":738},"children":[],"decl_id":{"krate":35,"index":739},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":28975,"byte_end":28980,"line_start":237,"line_end":237,"column_start":8,"column_end":13},"name":"reset","qualname":"<Blake2b256 as digest::Reset>::reset","value":"fn reset<'_>(&'_ mut Self)","parent":{"krate":36,"index":56},"children":[],"decl_id":{"krate":36,"index":57},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":510},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":29078,"byte_end":29091,"line_start":244,"line_end":244,"column_start":5,"column_end":18},"name":"Hash160Digest","qualname":"::hashes::Hash160Digest","value":"","parent":null,"children":[],"decl_id":null,"docs":" A bitcoin-style Hash160\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":559},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":29161,"byte_end":29174,"line_start":250,"line_end":250,"column_start":5,"column_end":18},"name":"Hash256Digest","qualname":"::hashes::Hash256Digest","value":"","parent":null,"children":[],"decl_id":null,"docs":" A bitcoin-style Hash256\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":213},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"nets","qualname":"::nets","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":218},{"krate":0,"index":221},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":228},{"krate":0,"index":231},{"krate":0,"index":234},{"krate":0,"index":237}],"decl_id":null,"docs":" The `nets` module defines an abstract `Network.` The `Network` trait is a highly-abstracted\n representation of the relationships between types in a UTXO network. Concrete implementations\n for various Bitcoin networks are found in the `bitcoin` crate.\n","sig":null,"attributes":[{"value":"/ The `nets` module defines an abstract `Network.` The `Network` trait is a highly-abstracted","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":29192,"byte_end":29287,"line_start":1,"line_end":1,"column_start":1,"column_end":96}},{"value":"/ representation of the relationships between types in a UTXO network. Concrete implementations","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":29288,"byte_end":29385,"line_start":2,"line_end":2,"column_start":1,"column_end":98}},{"value":"/ for various Bitcoin networks are found in the `bitcoin` crate.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":29386,"byte_end":29452,"line_start":3,"line_end":3,"column_start":1,"column_end":67}}]},{"kind":"Trait","id":{"krate":0,"index":237},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":30208,"byte_end":30215,"line_start":20,"line_end":20,"column_start":11,"column_end":18},"name":"Network","qualname":"::nets::Network","value":"Network","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252}],"decl_id":null,"docs":" A Network describes a possible UTXO network. It is primarily a collection of types with\n enforced relationships, but also provides convenient access the the transaction builder,\n the address encoder, and other network-associated functionality.","sig":null,"attributes":[{"value":"/ A Network describes a possible UTXO network. It is primarily a collection of types with","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":29607,"byte_end":29698,"line_start":12,"line_end":12,"column_start":1,"column_end":92}},{"value":"/ enforced relationships, but also provides convenient access the the transaction builder,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":29699,"byte_end":29791,"line_start":13,"line_end":13,"column_start":1,"column_end":93}},{"value":"/ the address encoder, and other network-associated functionality.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":29792,"byte_end":29860,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":29861,"byte_end":29864,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Because we separate some commonly conflated functionality (e.g. output scripts and addresses)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":29865,"byte_end":29962,"line_start":16,"line_end":16,"column_start":1,"column_end":98}},{"value":"/ we provide Networks to enforce relationships between them. This is why the `Network` trait's","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":29963,"byte_end":30059,"line_start":17,"line_end":17,"column_start":1,"column_end":97}},{"value":"/ associated types are complex. It exists to guarantee consistency of associated types across a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":30060,"byte_end":30157,"line_start":18,"line_end":18,"column_start":1,"column_end":98}},{"value":"/ large number of disparate elements.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":30158,"byte_end":30197,"line_start":19,"line_end":19,"column_start":1,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":238},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":30409,"byte_end":30416,"line_start":23,"line_end":23,"column_start":10,"column_end":17},"name":"Address","qualname":"::nets::Network::Address","value":"type Address;","parent":{"krate":0,"index":237},"children":[],"decl_id":null,"docs":" A type handling the network's address semantics. This will typically represent some\n predicate on the transaction. It is used by both the `Encoder` and the `Builder`.\n","sig":null,"attributes":[{"value":"/ A type handling the network's address semantics. This will typically represent some","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":30222,"byte_end":30309,"line_start":21,"line_end":21,"column_start":5,"column_end":92}},{"value":"/ predicate on the transaction. It is used by both the `Encoder` and the `Builder`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":30314,"byte_end":30399,"line_start":22,"line_end":22,"column_start":5,"column_end":90}}]},{"kind":"Type","id":{"krate":0,"index":239},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":30540,"byte_end":30559,"line_start":27,"line_end":27,"column_start":10,"column_end":29},"name":"RecipientIdentifier","qualname":"::nets::Network::RecipientIdentifier","value":"type RecipientIdentifier: RecipientIdentifier;","parent":{"krate":0,"index":237},"children":[],"decl_id":null,"docs":" A type representing the in-protocol recipient. This is usually different from the\n Address type.\n","sig":null,"attributes":[{"value":"/ A type representing the in-protocol recipient. This is usually different from the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":30423,"byte_end":30508,"line_start":25,"line_end":25,"column_start":5,"column_end":90}},{"value":"/ Address type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":30513,"byte_end":30530,"line_start":26,"line_end":26,"column_start":5,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":240},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":30738,"byte_end":30743,"line_start":31,"line_end":31,"column_start":10,"column_end":15},"name":"Error","qualname":"::nets::Network::Error","value":"type Error;","parent":{"krate":0,"index":237},"children":[],"decl_id":null,"docs":" An error type that will be used by the `Encoder`, and returned by the passthrough\n `encode_address` and `decode_address` functions\n","sig":null,"attributes":[{"value":"/ An error type that will be used by the `Encoder`, and returned by the passthrough","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":30587,"byte_end":30672,"line_start":29,"line_end":29,"column_start":5,"column_end":90}},{"value":"/ `encode_address` and `decode_address` functions","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":30677,"byte_end":30728,"line_start":30,"line_end":30,"column_start":5,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":241},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":30975,"byte_end":30982,"line_start":36,"line_end":36,"column_start":10,"column_end":17},"name":"Encoder","qualname":"::nets::Network::Encoder","value":"type Encoder: AddressEncoder<\n        Address = Self::Address,\n        Error = Self::Error,\n        RecipientIdentifier = Self::RecipientIdentifier,\n    >;","parent":{"krate":0,"index":237},"children":[],"decl_id":null,"docs":" An `Encoder` that uses the `Address` and `Error` types above. This `Encoder` must\n implement `AddressEncoder`. It handles translating the `Address` type to the networks\n `RecipientIdentifier` type.\n","sig":null,"attributes":[{"value":"/ An `Encoder` that uses the `Address` and `Error` types above. This `Encoder` must","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":30750,"byte_end":30835,"line_start":33,"line_end":33,"column_start":5,"column_end":90}},{"value":"/ implement `AddressEncoder`. It handles translating the `Address` type to the networks","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":30840,"byte_end":30929,"line_start":34,"line_end":34,"column_start":5,"column_end":94}},{"value":"/ `RecipientIdentifier` type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":30934,"byte_end":30965,"line_start":35,"line_end":35,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":242},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":31275,"byte_end":31279,"line_start":44,"line_end":44,"column_start":10,"column_end":14},"name":"TxIn","qualname":"::nets::Network::TxIn","value":"type TxIn: Input + ByteFormat;","parent":{"krate":0,"index":237},"children":[],"decl_id":null,"docs":" A transaction Input type. This type is used within the `Transaction` and specificies UTXOs\n being spent by the transaction.\n","sig":null,"attributes":[{"value":"/ A transaction Input type. This type is used within the `Transaction` and specificies UTXOs","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":31131,"byte_end":31225,"line_start":42,"line_end":42,"column_start":5,"column_end":99}},{"value":"/ being spent by the transaction.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":31230,"byte_end":31265,"line_start":43,"line_end":43,"column_start":5,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":243},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":31453,"byte_end":31458,"line_start":47,"line_end":47,"column_start":10,"column_end":15},"name":"TxOut","qualname":"::nets::Network::TxOut","value":"type TxOut: Output<RecipientIdentifier = Self::RecipientIdentifier> + ByteFormat;","parent":{"krate":0,"index":237},"children":[],"decl_id":null,"docs":" A transaction Output type. This type is used within the `Transaction` and specificies\n UTXOs being consumed by the transaction.\n","sig":null,"attributes":[{"value":"/ A transaction Output type. This type is used within the `Transaction` and specificies","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":31305,"byte_end":31394,"line_start":45,"line_end":45,"column_start":5,"column_end":94}},{"value":"/ UTXOs being consumed by the transaction.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":31399,"byte_end":31443,"line_start":46,"line_end":46,"column_start":5,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":244},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":31601,"byte_end":31603,"line_start":50,"line_end":50,"column_start":10,"column_end":12},"name":"Tx","qualname":"::nets::Network::Tx","value":"type Tx: Transaction<TxIn = Self::TxIn, TxOut = Self::TxOut>;","parent":{"krate":0,"index":237},"children":[],"decl_id":null,"docs":" A Transaction type that uses the `TxIn` and `TxOut`.\n","sig":null,"attributes":[{"value":"/ A Transaction type that uses the `TxIn` and `TxOut`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":31535,"byte_end":31591,"line_start":49,"line_end":49,"column_start":5,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":245},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":31897,"byte_end":31904,"line_start":55,"line_end":55,"column_start":10,"column_end":17},"name":"Builder","qualname":"::nets::Network::Builder","value":"type Builder: TxBuilder<Encoder = Self::Encoder, Transaction = Self::Tx>;","parent":{"krate":0,"index":237},"children":[],"decl_id":null,"docs":" A transaction Builder that uses the `Encoder` and `Transaction` types defined earlier.\n The builder is returned by `Network::tx_builder()`, and provides a convenient interface\n for transaction construction.\n","sig":null,"attributes":[{"value":"/ A transaction Builder that uses the `Encoder` and `Transaction` types defined earlier.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":31663,"byte_end":31753,"line_start":52,"line_end":52,"column_start":5,"column_end":95}},{"value":"/ The builder is returned by `Network::tx_builder()`, and provides a convenient interface","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":31758,"byte_end":31849,"line_start":53,"line_end":53,"column_start":5,"column_end":96}},{"value":"/ for transaction construction.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":31854,"byte_end":31887,"line_start":54,"line_end":54,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":32044,"byte_end":32054,"line_start":58,"line_end":58,"column_start":8,"column_end":18},"name":"tx_builder","qualname":"::nets::Network::tx_builder","value":"fn tx_builder() -> Self::Builder","parent":{"krate":0,"index":237},"children":[],"decl_id":null,"docs":" Returns a new instance of the associated transaction builder.\n","sig":null,"attributes":[{"value":"/ Returns a new instance of the associated transaction builder.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":31971,"byte_end":32036,"line_start":57,"line_end":57,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":32166,"byte_end":32185,"line_start":63,"line_end":63,"column_start":8,"column_end":27},"name":"builder_from_tx_ref","qualname":"::nets::Network::builder_from_tx_ref","value":"fn builder_from_tx_ref<'_>(&'_ Self::Tx) -> Self::Builder","parent":{"krate":0,"index":237},"children":[],"decl_id":null,"docs":" Instantiate a builder from a tx object\n","sig":null,"attributes":[{"value":"/ Instantiate a builder from a tx object","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":32116,"byte_end":32158,"line_start":62,"line_end":62,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":32320,"byte_end":32335,"line_start":68,"line_end":68,"column_start":8,"column_end":23},"name":"builder_from_tx","qualname":"::nets::Network::builder_from_tx","value":"fn builder_from_tx(Self::Tx) -> Self::Builder","parent":{"krate":0,"index":237},"children":[],"decl_id":null,"docs":" Instantiate a builder from a tx object\n","sig":null,"attributes":[{"value":"/ Instantiate a builder from a tx object","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":32270,"byte_end":32312,"line_start":67,"line_end":67,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":32482,"byte_end":32498,"line_start":73,"line_end":73,"column_start":8,"column_end":24},"name":"builder_from_hex","qualname":"::nets::Network::builder_from_hex","value":"fn builder_from_hex<'_>(&'_ str)\n-> Result<Self::Builder, <Self::Tx as Transaction>::TxError>","parent":{"krate":0,"index":237},"children":[],"decl_id":null,"docs":" Instantiate a builder from a hex-serialized transaction\n","sig":null,"attributes":[{"value":"/ Instantiate a builder from a hex-serialized transaction","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":32415,"byte_end":32474,"line_start":72,"line_end":72,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":32699,"byte_end":32713,"line_start":78,"line_end":78,"column_start":8,"column_end":22},"name":"encode_address","qualname":"::nets::Network::encode_address","value":"fn encode_address<'_>(&'_ Self::RecipientIdentifier)\n-> Result<Self::Address, Self::Error>","parent":{"krate":0,"index":237},"children":[],"decl_id":null,"docs":" Encode an address using the network's `Address` semantics\n","sig":null,"attributes":[{"value":"/ Encode an address using the network's `Address` semantics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":32630,"byte_end":32691,"line_start":77,"line_end":77,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":32906,"byte_end":32920,"line_start":83,"line_end":83,"column_start":8,"column_end":22},"name":"decode_address","qualname":"::nets::Network::decode_address","value":"fn decode_address<'_>(&'_ Self::Address) -> Self::RecipientIdentifier","parent":{"krate":0,"index":237},"children":[],"decl_id":null,"docs":" Decode an address using the network's `Address` semantics\n","sig":null,"attributes":[{"value":"/ Decode an address using the network's `Address` semantics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":32837,"byte_end":32898,"line_start":82,"line_end":82,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":33087,"byte_end":33104,"line_start":88,"line_end":88,"column_start":8,"column_end":25},"name":"string_to_address","qualname":"::nets::Network::string_to_address","value":"fn string_to_address<'_>(&'_ str) -> Result<Self::Address, Self::Error>","parent":{"krate":0,"index":237},"children":[],"decl_id":null,"docs":" Attempt to convert a string into an `Address`.\n","sig":null,"attributes":[{"value":"/ Attempt to convert a string into an `Address`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/nets.rs","byte_start":33029,"byte_end":33079,"line_start":87,"line_end":87,"column_start":5,"column_end":55}}]},{"kind":"Mod","id":{"krate":0,"index":253},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/prelude.rs","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":267},{"krate":0,"index":270},{"krate":0,"index":273}],"decl_id":null,"docs":" Re-exports of common types.\n","sig":null,"attributes":[{"value":"/ Re-exports of common types.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/prelude.rs","byte_start":33207,"byte_end":33238,"line_start":1,"line_end":1,"column_start":1,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":276},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ser","qualname":"::ser","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","parent":null,"children":[{"krate":0,"index":277},{"krate":0,"index":280},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":294},{"krate":0,"index":297},{"krate":0,"index":300},{"krate":0,"index":303},{"krate":0,"index":583},{"krate":0,"index":584},{"krate":0,"index":586},{"krate":0,"index":591},{"krate":0,"index":600},{"krate":0,"index":602},{"krate":0,"index":604},{"krate":0,"index":306},{"krate":0,"index":315},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":322},{"krate":0,"index":326},{"krate":0,"index":329},{"krate":0,"index":331},{"krate":0,"index":334},{"krate":0,"index":336},{"krate":0,"index":340},{"krate":0,"index":344},{"krate":0,"index":363}],"decl_id":null,"docs":" A simple trait for binary (de)Serialization using std `Read` and `Write` traits.\n","sig":null,"attributes":[{"value":"/ A simple trait for binary (de)Serialization using std `Read` and `Write` traits.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":33415,"byte_end":33499,"line_start":1,"line_end":1,"column_start":1,"column_end":85}}]},{"kind":"TupleVariant","id":{"krate":0,"index":606},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":33893,"byte_end":33909,"line_start":17,"line_end":17,"column_start":5,"column_end":21},"name":"NonMinimalVarInt","qualname":"::ser::SerError::NonMinimalVarInt","value":"SerError::NonMinimalVarInt","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":" VarInts must be minimal.\n","sig":null,"attributes":[{"value":"/ VarInts must be minimal.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":33766,"byte_end":33794,"line_start":15,"line_end":15,"column_start":5,"column_end":33}},{"value":"error(\"Attempted to deserialize non-minmal VarInt. Someone is doing something fishy.\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":33799,"byte_end":33888,"line_start":16,"line_end":16,"column_start":5,"column_end":94}}]},{"kind":"TupleVariant","id":{"krate":0,"index":608},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":34035,"byte_end":34042,"line_start":21,"line_end":21,"column_start":5,"column_end":12},"name":"IoError","qualname":"::ser::SerError::IoError","value":"SerError::IoError(IOError)","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":" IoError bubbled up from a `Write` passed to a `ByteFormat::write_to` implementation.\n","sig":null,"attributes":[{"value":"/ IoError bubbled up from a `Write` passed to a `ByteFormat::write_to` implementation.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":33916,"byte_end":34004,"line_start":19,"line_end":19,"column_start":5,"column_end":93}},{"value":"error(transparent)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":34009,"byte_end":34030,"line_start":20,"line_end":20,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":610},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":34051,"byte_end":34058,"line_start":21,"line_end":21,"column_start":21,"column_end":28},"name":"0","qualname":"::ser::SerError::IoError::0","value":"std::io::Error","parent":{"krate":0,"index":608},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"from","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":34043,"byte_end":34050,"line_start":21,"line_end":21,"column_start":13,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":611},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":34153,"byte_end":34165,"line_start":25,"line_end":25,"column_start":5,"column_end":17},"name":"FromHexError","qualname":"::ser::SerError::FromHexError","value":"SerError::FromHexError(FromHexError)","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":" `deserialize_hex` encountered an error on its input.\n","sig":null,"attributes":[{"value":"/ `deserialize_hex` encountered an error on its input.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":34066,"byte_end":34122,"line_start":23,"line_end":23,"column_start":5,"column_end":61}},{"value":"error(transparent)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":34127,"byte_end":34148,"line_start":24,"line_end":24,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":613},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":34174,"byte_end":34186,"line_start":25,"line_end":25,"column_start":26,"column_end":38},"name":"0","qualname":"::ser::SerError::FromHexError::0","value":"hex::FromHexError","parent":{"krate":0,"index":611},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"from","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":34166,"byte_end":34173,"line_start":25,"line_end":25,"column_start":18,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":614},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":34284,"byte_end":34295,"line_start":29,"line_end":29,"column_start":5,"column_end":16},"name":"DecodeError","qualname":"::ser::SerError::DecodeError","value":"SerError::DecodeError(DecodeError)","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":" `deserialize_base64` encountered an error on its input.\n","sig":null,"attributes":[{"value":"/ `deserialize_base64` encountered an error on its input.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":34194,"byte_end":34253,"line_start":27,"line_end":27,"column_start":5,"column_end":64}},{"value":"error(transparent)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":34258,"byte_end":34279,"line_start":28,"line_end":28,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":616},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":34304,"byte_end":34315,"line_start":29,"line_end":29,"column_start":25,"column_end":36},"name":"0","qualname":"::ser::SerError::DecodeError::0","value":"base64::DecodeError","parent":{"krate":0,"index":614},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"from","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":34296,"byte_end":34303,"line_start":29,"line_end":29,"column_start":17,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":617},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":34454,"byte_end":34468,"line_start":33,"line_end":33,"column_start":5,"column_end":19},"name":"ComponentError","qualname":"::ser::SerError::ComponentError","value":"SerError::ComponentError(String)","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":" An error by a component call in data structure (de)serialization\n","sig":null,"attributes":[{"value":"/ An error by a component call in data structure (de)serialization","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":34323,"byte_end":34391,"line_start":31,"line_end":31,"column_start":5,"column_end":73}},{"value":"error(\"Error in component (de)serialization: {0}\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":34396,"byte_end":34449,"line_start":32,"line_end":32,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":619},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":34469,"byte_end":34475,"line_start":33,"line_end":33,"column_start":20,"column_end":26},"name":"0","qualname":"::ser::SerError::ComponentError::0","value":"std::string::String","parent":{"krate":0,"index":617},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":620},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":34645,"byte_end":34665,"line_start":37,"line_end":37,"column_start":5,"column_end":25},"name":"InsufficientSeqItems","qualname":"::ser::SerError::InsufficientSeqItems","value":"SerError::InsufficientSeqItems { expected, got }","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":" Thrown when `ReadSeqMode::Exactly` reads fewer items than expected.\n","sig":null,"attributes":[{"value":"/ Thrown when `ReadSeqMode::Exactly` reads fewer items than expected.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":34483,"byte_end":34554,"line_start":35,"line_end":35,"column_start":5,"column_end":76}},{"value":"error(\"Expected a sequence of exaclty {expected} items. Got only {got} items\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":34559,"byte_end":34640,"line_start":36,"line_end":36,"column_start":5,"column_end":86}}]},{"kind":"Field","id":{"krate":0,"index":621},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":34717,"byte_end":34725,"line_start":39,"line_end":39,"column_start":9,"column_end":17},"name":"expected","qualname":"::ser::SerError::InsufficientSeqItems::expected","value":"usize","parent":{"krate":0,"index":620},"children":[],"decl_id":null,"docs":" The number of items expected\n","sig":null,"attributes":[{"value":"/ The number of items expected","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":34676,"byte_end":34708,"line_start":38,"line_end":38,"column_start":9,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":622},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":34799,"byte_end":34802,"line_start":41,"line_end":41,"column_start":9,"column_end":12},"name":"got","qualname":"::ser::SerError::InsufficientSeqItems::got","value":"usize","parent":{"krate":0,"index":620},"children":[],"decl_id":null,"docs":" The number of items succesfully deserialized\n","sig":null,"attributes":[{"value":"/ The number of items succesfully deserialized","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":34742,"byte_end":34790,"line_start":40,"line_end":40,"column_start":9,"column_end":57}}]},{"kind":"Enum","id":{"krate":0,"index":583},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":33751,"byte_end":33759,"line_start":14,"line_end":14,"column_start":10,"column_end":18},"name":"SerError","qualname":"::ser::SerError","value":"enum SerError {\n    NonMinimalVarInt,\n    IoError(IOError),\n    FromHexError(FromHexError),\n    DecodeError(DecodeError),\n    ComponentError(String),\n    InsufficientSeqItems {\n            expected: usize,\n            got: usize,\n        },\n}","parent":null,"children":[{"krate":0,"index":606},{"krate":0,"index":608},{"krate":0,"index":611},{"krate":0,"index":614},{"krate":0,"index":617},{"krate":0,"index":620}],"decl_id":null,"docs":" Erros related to serialization of types.\n","sig":null,"attributes":[{"value":"/ Erros related to serialization of types.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":33673,"byte_end":33717,"line_start":12,"line_end":12,"column_start":1,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":307},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":34965,"byte_end":34972,"line_start":48,"line_end":48,"column_start":5,"column_end":12},"name":"Exactly","qualname":"::ser::ReadSeqMode::Exactly","value":"ReadSeqMode::Exactly(usize)","parent":{"krate":0,"index":306},"children":[],"decl_id":null,"docs":" Specify `Exactly` to deserialize an exact number, or return an error\n","sig":null,"attributes":[{"value":"/ Specify `Exactly` to deserialize an exact number, or return an error","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":34888,"byte_end":34960,"line_start":47,"line_end":47,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":309},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":34973,"byte_end":34978,"line_start":48,"line_end":48,"column_start":13,"column_end":18},"name":"0","qualname":"::ser::ReadSeqMode::Exactly::0","value":"usize","parent":{"krate":0,"index":307},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":310},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":35054,"byte_end":35060,"line_start":50,"line_end":50,"column_start":5,"column_end":11},"name":"AtMost","qualname":"::ser::ReadSeqMode::AtMost","value":"ReadSeqMode::AtMost(usize)","parent":{"krate":0,"index":306},"children":[],"decl_id":null,"docs":" Specify `AtMost` to stop deserializing at a specific number.\n","sig":null,"attributes":[{"value":"/ Specify `AtMost` to stop deserializing at a specific number.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":34985,"byte_end":35049,"line_start":49,"line_end":49,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":312},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":35061,"byte_end":35066,"line_start":50,"line_end":50,"column_start":12,"column_end":17},"name":"0","qualname":"::ser::ReadSeqMode::AtMost::0","value":"usize","parent":{"krate":0,"index":310},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":313},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":35134,"byte_end":35142,"line_start":52,"line_end":52,"column_start":5,"column_end":13},"name":"UntilEnd","qualname":"::ser::ReadSeqMode::UntilEnd","value":"ReadSeqMode::UntilEnd","parent":{"krate":0,"index":306},"children":[],"decl_id":null,"docs":" Specify `UntilEnd` to read to the end of the reader.\n","sig":null,"attributes":[{"value":"/ Specify `UntilEnd` to read to the end of the reader.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":35073,"byte_end":35129,"line_start":51,"line_end":51,"column_start":5,"column_end":61}}]},{"kind":"Enum","id":{"krate":0,"index":306},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":34870,"byte_end":34881,"line_start":46,"line_end":46,"column_start":10,"column_end":21},"name":"ReadSeqMode","qualname":"::ser::ReadSeqMode","value":"enum ReadSeqMode { Exactly(usize), AtMost(usize), UntilEnd, }","parent":null,"children":[{"krate":0,"index":307},{"krate":0,"index":310},{"krate":0,"index":313}],"decl_id":null,"docs":" Operation mode for `read_seq_from`.\n","sig":null,"attributes":[{"value":"/ Operation mode for `read_seq_from`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":34821,"byte_end":34860,"line_start":45,"line_end":45,"column_start":1,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":315},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":35196,"byte_end":35205,"line_start":56,"line_end":56,"column_start":10,"column_end":19},"name":"SerResult","qualname":"::ser::SerResult","value":"Result<T, SerError>","parent":null,"children":[],"decl_id":null,"docs":" Type alias for serialization errors\n","sig":null,"attributes":[{"value":"/ Type alias for serialization errors","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":35147,"byte_end":35186,"line_start":55,"line_end":55,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":317},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":35312,"byte_end":35327,"line_start":59,"line_end":59,"column_start":8,"column_end":23},"name":"prefix_byte_len","qualname":"::ser::prefix_byte_len","value":"fn prefix_byte_len(u64) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Calculates the minimum prefix length for a VarInt encoding `number`\n","sig":null,"attributes":[{"value":"/ Calculates the minimum prefix length for a VarInt encoding `number`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":35233,"byte_end":35304,"line_start":58,"line_end":58,"column_start":1,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":318},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":35543,"byte_end":35562,"line_start":69,"line_end":69,"column_start":8,"column_end":27},"name":"first_byte_from_len","qualname":"::ser::first_byte_from_len","value":"fn first_byte_from_len(u8) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Matches the length of the VarInt to the 1-byte flag\n","sig":null,"attributes":[{"value":"/ Matches the length of the VarInt to the 1-byte flag","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":35480,"byte_end":35535,"line_start":68,"line_end":68,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":319},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":35780,"byte_end":35806,"line_start":79,"line_end":79,"column_start":8,"column_end":34},"name":"prefix_len_from_first_byte","qualname":"::ser::prefix_len_from_first_byte","value":"fn prefix_len_from_first_byte(u8) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Matches the VarInt prefix flag to the serialized length\n","sig":null,"attributes":[{"value":"/ Matches the VarInt prefix flag to the serialized length","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":35713,"byte_end":35772,"line_start":78,"line_end":78,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":320},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":36002,"byte_end":36019,"line_start":89,"line_end":89,"column_start":8,"column_end":25},"name":"write_compact_int","qualname":"::ser::write_compact_int","value":"fn write_compact_int<W, '_>(&'_ mut W, u64) -> SerResult<usize> where W: Write","parent":null,"children":[],"decl_id":null,"docs":" Convenience function for writing a Bitcoin-style VarInt\n","sig":null,"attributes":[{"value":"/ Convenience function for writing a Bitcoin-style VarInt","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":35935,"byte_end":35994,"line_start":88,"line_end":88,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":322},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":36584,"byte_end":36600,"line_start":107,"line_end":107,"column_start":8,"column_end":24},"name":"read_compact_int","qualname":"::ser::read_compact_int","value":"fn read_compact_int<R, '_>(&'_ mut R) -> SerResult<u64> where R: Read","parent":null,"children":[],"decl_id":null,"docs":" Convenience function for reading a Bitcoin-style VarInt\n","sig":null,"attributes":[{"value":"/ Convenience function for reading a Bitcoin-style VarInt","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":36517,"byte_end":36576,"line_start":106,"line_end":106,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":326},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":37376,"byte_end":37387,"line_start":134,"line_end":134,"column_start":8,"column_end":19},"name":"read_u32_le","qualname":"::ser::read_u32_le","value":"fn read_u32_le<R, '_>(&'_ mut R) -> SerResult<u32> where R: Read","parent":null,"children":[],"decl_id":null,"docs":" Convenience function for reading a LE u32\n","sig":null,"attributes":[{"value":"/ Convenience function for reading a LE u32","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":37323,"byte_end":37368,"line_start":133,"line_end":133,"column_start":1,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":329},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":37596,"byte_end":37608,"line_start":144,"line_end":144,"column_start":8,"column_end":20},"name":"write_u32_le","qualname":"::ser::write_u32_le","value":"fn write_u32_le<W, '_>(&'_ mut W, u32) -> SerResult<usize> where W: Write","parent":null,"children":[],"decl_id":null,"docs":" Convenience function for writing a LE u32\n","sig":null,"attributes":[{"value":"/ Convenience function for writing a LE u32","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":37543,"byte_end":37588,"line_start":143,"line_end":143,"column_start":1,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":331},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":37784,"byte_end":37795,"line_start":152,"line_end":152,"column_start":8,"column_end":19},"name":"read_u64_le","qualname":"::ser::read_u64_le","value":"fn read_u64_le<R, '_>(&'_ mut R) -> SerResult<u64> where R: Read","parent":null,"children":[],"decl_id":null,"docs":" Convenience function for reading a LE u64\n","sig":null,"attributes":[{"value":"/ Convenience function for reading a LE u64","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":37731,"byte_end":37776,"line_start":151,"line_end":151,"column_start":1,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":334},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":38004,"byte_end":38016,"line_start":162,"line_end":162,"column_start":8,"column_end":20},"name":"write_u64_le","qualname":"::ser::write_u64_le","value":"fn write_u64_le<W, '_>(&'_ mut W, u64) -> SerResult<usize> where W: Write","parent":null,"children":[],"decl_id":null,"docs":" Convenience function for writing a LE u64\n","sig":null,"attributes":[{"value":"/ Convenience function for writing a LE u64","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":37951,"byte_end":37996,"line_start":161,"line_end":161,"column_start":1,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":336},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":38201,"byte_end":38216,"line_start":170,"line_end":170,"column_start":8,"column_end":23},"name":"read_prefix_vec","qualname":"::ser::read_prefix_vec","value":"fn read_prefix_vec<R, E, I, '_>(&'_ mut R) -> Result<Vec<I>, E> where R: Read,\nE: From<SerError> + From<IOError> + std::error::Error, I: ByteFormat<Error =\nE>","parent":null,"children":[],"decl_id":null,"docs":" Convenience function for reading a prefixed vector\n","sig":null,"attributes":[{"value":"/ Convenience function for reading a prefixed vector","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":38139,"byte_end":38193,"line_start":169,"line_end":169,"column_start":1,"column_end":55}}]},{"kind":"Function","id":{"krate":0,"index":340},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":38598,"byte_end":38614,"line_start":181,"line_end":181,"column_start":8,"column_end":24},"name":"write_prefix_vec","qualname":"::ser::write_prefix_vec","value":"fn write_prefix_vec<W, E, I, '_, '_>(&'_ mut W, &'_ [I]) -> Result<usize, E>\nwhere W: Write, E: From<SerError> + From<IOError> + std::error::Error,\nI: ByteFormat<Error = E>","parent":null,"children":[],"decl_id":null,"docs":" Convenience function to write a Bitcoin-style length-prefixed vector.\n","sig":null,"attributes":[{"value":"/ Convenience function to write a Bitcoin-style length-prefixed vector.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":38517,"byte_end":38590,"line_start":180,"line_end":180,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":344},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":39175,"byte_end":39185,"line_start":196,"line_end":196,"column_start":11,"column_end":21},"name":"ByteFormat","qualname":"::ser::ByteFormat","value":"ByteFormat","parent":null,"children":[{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":349},{"krate":0,"index":351},{"krate":0,"index":353},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362}],"decl_id":null,"docs":" A simple trait for deserializing from `std::io::Read` and serializing to `std::io::Write`.","sig":null,"attributes":[{"value":"/ A simple trait for deserializing from `std::io::Read` and serializing to `std::io::Write`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":38931,"byte_end":39025,"line_start":192,"line_end":192,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":39026,"byte_end":39029,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ `ByteFormat` is used extensively in Sighash calculation, txid calculations, and transaction","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":39030,"byte_end":39125,"line_start":194,"line_end":194,"column_start":1,"column_end":96}},{"value":"/ serialization and deserialization.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":39126,"byte_end":39164,"line_start":195,"line_end":195,"column_start":1,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":345},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":39230,"byte_end":39235,"line_start":198,"line_end":198,"column_start":10,"column_end":15},"name":"Error","qualname":"::ser::ByteFormat::Error","value":"type Error: From<SerError> + From<IOError> + std::error::Error;","parent":{"krate":0,"index":344},"children":[],"decl_id":null,"docs":" An associated error type\n","sig":null,"attributes":[{"value":"/ An associated error type","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":39192,"byte_end":39220,"line_start":197,"line_end":197,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":39363,"byte_end":39380,"line_start":201,"line_end":201,"column_start":8,"column_end":25},"name":"serialized_length","qualname":"::ser::ByteFormat::serialized_length","value":"fn serialized_length<'_>(&'_ Self) -> usize","parent":{"krate":0,"index":344},"children":[],"decl_id":null,"docs":" Returns the byte-length of the serialized data structure.\n","sig":null,"attributes":[{"value":"/ Returns the byte-length of the serialized data structure.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":39294,"byte_end":39355,"line_start":200,"line_end":200,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":39922,"byte_end":39931,"line_start":216,"line_end":216,"column_start":8,"column_end":17},"name":"read_from","qualname":"::ser::ByteFormat::read_from","value":"fn read_from<R, '_>(&'_ mut R) -> Result<Self, Self::Error> where R: Read,\nSelf: std::marker::Sized","parent":{"krate":0,"index":344},"children":[],"decl_id":null,"docs":" Deserializes an instance of `Self` from a `std::io::Read`.\n The `limit` argument is used only when deserializing collections, and  specifies a maximum\n number of instances of the underlying type to read.","sig":null,"attributes":[{"value":"/ Deserializes an instance of `Self` from a `std::io::Read`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":39403,"byte_end":39465,"line_start":203,"line_end":203,"column_start":5,"column_end":67}},{"value":"/ The `limit` argument is used only when deserializing collections, and  specifies a maximum","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":39470,"byte_end":39564,"line_start":204,"line_end":204,"column_start":5,"column_end":99}},{"value":"/ number of instances of the underlying type to read.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":39569,"byte_end":39624,"line_start":205,"line_end":205,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":39629,"byte_end":39632,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":39637,"byte_end":39644,"line_start":207,"line_end":207,"column_start":5,"column_end":12}},{"value":"/ use std::io::Read;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":39649,"byte_end":39671,"line_start":208,"line_end":208,"column_start":5,"column_end":27}},{"value":"/ use coins_core::{hashes::Hash256Digest, ser::*};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":39676,"byte_end":39728,"line_start":209,"line_end":209,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":39733,"byte_end":39736,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ let mut a = [0u8; 32];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":39741,"byte_end":39767,"line_start":211,"line_end":211,"column_start":5,"column_end":31}},{"value":"/ let result = Hash256Digest::read_from(&mut a.as_ref()).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":39772,"byte_end":39840,"line_start":212,"line_end":212,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":39845,"byte_end":39848,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, Hash256Digest::default());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":39853,"byte_end":39902,"line_start":214,"line_end":214,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":39907,"byte_end":39914,"line_start":215,"line_end":215,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":40533,"byte_end":40541,"line_start":236,"line_end":236,"column_start":8,"column_end":16},"name":"write_to","qualname":"::ser::ByteFormat::write_to","value":"fn write_to<W, '_, '_>(&'_ Self, &'_ mut W)\n-> Result<usize, <Self as ByteFormat>::Error> where W: Write","parent":{"krate":0,"index":344},"children":[],"decl_id":null,"docs":" Serializes `self` to a `std::io::Write`. Following `Write` trait conventions, its `Ok`\n type must be a `usize` denoting the number of bytes written.","sig":null,"attributes":[{"value":"/ Serializes `self` to a `std::io::Write`. Following `Write` trait conventions, its `Ok`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":40046,"byte_end":40136,"line_start":221,"line_end":221,"column_start":5,"column_end":95}},{"value":"/ type must be a `usize` denoting the number of bytes written.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":40141,"byte_end":40205,"line_start":222,"line_end":222,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":40210,"byte_end":40213,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":40218,"byte_end":40225,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"/ use std::io::Write;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":40230,"byte_end":40253,"line_start":225,"line_end":225,"column_start":5,"column_end":28}},{"value":"/ use coins_core::{hashes::Hash256Digest, ser::*};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":40258,"byte_end":40310,"line_start":226,"line_end":226,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":40315,"byte_end":40318,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ let mut buf: Vec<u8> = vec![];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":40323,"byte_end":40357,"line_start":228,"line_end":228,"column_start":5,"column_end":39}},{"value":"/ let written = Hash256Digest::default().write_to(&mut buf).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":40362,"byte_end":40433,"line_start":229,"line_end":229,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":40438,"byte_end":40441,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":40446,"byte_end":40461,"line_start":231,"line_end":231,"column_start":5,"column_end":20}},{"value":"/    buf,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":40466,"byte_end":40477,"line_start":232,"line_end":232,"column_start":5,"column_end":16}},{"value":"/    vec![0u8; 32]","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":40482,"byte_end":40502,"line_start":233,"line_end":233,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":40507,"byte_end":40513,"line_start":234,"line_end":234,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":40518,"byte_end":40525,"line_start":235,"line_end":235,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":40718,"byte_end":40731,"line_start":241,"line_end":241,"column_start":8,"column_end":21},"name":"read_seq_from","qualname":"::ser::ByteFormat::read_seq_from","value":"fn read_seq_from<R, '_>(&'_ mut R, ReadSeqMode)\n-> Result<Vec<Self>, Self::Error> where R: Read, Self: std::marker::Sized","parent":{"krate":0,"index":344},"children":[],"decl_id":null,"docs":" Read a sequence of exactly `limit` objects from the reader.\n","sig":null,"attributes":[{"value":"/ Read a sequence of exactly `limit` objects from the reader.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":40647,"byte_end":40710,"line_start":240,"line_end":240,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":42691,"byte_end":42703,"line_start":303,"line_end":303,"column_start":8,"column_end":20},"name":"write_seq_to","qualname":"::ser::ByteFormat::write_seq_to","value":"fn write_seq_to<'a, W, E, Iter, Item, '_>(&'_ mut W, Iter)\n-> Result<usize, <Self as ByteFormat>::Error> where W: Write,\nE: Into<Self::Error> + From<SerError> + From<IOError> + std::error::Error,\nItem: 'a + ByteFormat<Error = E>, Iter: IntoIterator<Item = &'a Item>","parent":{"krate":0,"index":344},"children":[],"decl_id":null,"docs":" Write a sequence of `ByteFormat` objects to a writer. The `iter`\n argument may be any object that implements\n `IntoIterator<Item = &Item>`. This means we can seamlessly use vectors,\n slices, etc.","sig":null,"attributes":[{"value":"/ Write a sequence of `ByteFormat` objects to a writer. The `iter`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":41709,"byte_end":41777,"line_start":274,"line_end":274,"column_start":5,"column_end":73}},{"value":"/ argument may be any object that implements","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":41782,"byte_end":41828,"line_start":275,"line_end":275,"column_start":5,"column_end":51}},{"value":"/ `IntoIterator<Item = &Item>`. This means we can seamlessly use vectors,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":41833,"byte_end":41908,"line_start":276,"line_end":276,"column_start":5,"column_end":80}},{"value":"/ slices, etc.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":41913,"byte_end":41929,"line_start":277,"line_end":277,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":41934,"byte_end":41937,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":41942,"byte_end":41949,"line_start":279,"line_end":279,"column_start":5,"column_end":12}},{"value":"/ use std::io::Write;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":41954,"byte_end":41977,"line_start":280,"line_end":280,"column_start":5,"column_end":28}},{"value":"/ use coins_core::{hashes::Hash256Digest, ser::*};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":41982,"byte_end":42034,"line_start":281,"line_end":281,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":42039,"byte_end":42042,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ let mut buf: Vec<u8> = vec![];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":42047,"byte_end":42081,"line_start":283,"line_end":283,"column_start":5,"column_end":39}},{"value":"/ let mut digests = vec![Hash256Digest::default(), Hash256Digest::default()];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":42086,"byte_end":42165,"line_start":284,"line_end":284,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":42170,"byte_end":42173,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ // Works with iterators","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":42178,"byte_end":42205,"line_start":286,"line_end":286,"column_start":5,"column_end":32}},{"value":"/ let written = Hash256Digest::write_seq_to(&mut buf, digests.iter()).expect(\"Write succesful\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":42210,"byte_end":42308,"line_start":287,"line_end":287,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":42313,"byte_end":42316,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":42321,"byte_end":42336,"line_start":289,"line_end":289,"column_start":5,"column_end":20}},{"value":"/    buf,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":42341,"byte_end":42352,"line_start":290,"line_end":290,"column_start":5,"column_end":16}},{"value":"/    vec![0u8; 64]","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":42357,"byte_end":42377,"line_start":291,"line_end":291,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":42382,"byte_end":42388,"line_start":292,"line_end":292,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":42393,"byte_end":42396,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ // And with vectors","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":42401,"byte_end":42424,"line_start":294,"line_end":294,"column_start":5,"column_end":28}},{"value":"/ let written = Hash256Digest::write_seq_to(&mut buf, &digests).expect(\"Write succesful\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":42429,"byte_end":42521,"line_start":295,"line_end":295,"column_start":5,"column_end":97}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":42526,"byte_end":42541,"line_start":296,"line_end":296,"column_start":5,"column_end":20}},{"value":"/    buf,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":42546,"byte_end":42557,"line_start":297,"line_end":297,"column_start":5,"column_end":16}},{"value":"/    vec![0u8; 128]","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":42562,"byte_end":42583,"line_start":298,"line_end":298,"column_start":5,"column_end":26}},{"value":"/ );","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":42588,"byte_end":42594,"line_start":299,"line_end":299,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":42599,"byte_end":42602,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":42607,"byte_end":42614,"line_start":301,"line_end":301,"column_start":5,"column_end":12}},{"value":"/ This should be invoked as `Item::write_seq_to(writer, iter)`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":42619,"byte_end":42683,"line_start":302,"line_end":302,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":43292,"byte_end":43307,"line_start":321,"line_end":321,"column_start":8,"column_end":23},"name":"deserialize_hex","qualname":"::ser::ByteFormat::deserialize_hex","value":"fn deserialize_hex<'_>(&'_ str) -> Result<Self, Self::Error> where\nSelf: std::marker::Sized","parent":{"krate":0,"index":344},"children":[],"decl_id":null,"docs":" Decodes a hex string to a `Vec<u8>`, deserializes an instance of `Self` from that vector.\n","sig":null,"attributes":[{"value":"/ Decodes a hex string to a `Vec<u8>`, deserializes an instance of `Self` from that vector.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":43191,"byte_end":43284,"line_start":320,"line_end":320,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":43646,"byte_end":43664,"line_start":331,"line_end":331,"column_start":8,"column_end":26},"name":"deserialize_base64","qualname":"::ser::ByteFormat::deserialize_base64","value":"fn deserialize_base64<'_>(&'_ str) -> Result<Self, Self::Error> where\nSelf: std::marker::Sized","parent":{"krate":0,"index":344},"children":[],"decl_id":null,"docs":" Serialize `self` to a base64 string, using standard RFC4648 non-url safe characters\n","sig":null,"attributes":[{"value":"/ Serialize `self` to a base64 string, using standard RFC4648 non-url safe characters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":43551,"byte_end":43638,"line_start":330,"line_end":330,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":43984,"byte_end":43997,"line_start":341,"line_end":341,"column_start":8,"column_end":21},"name":"serialize_hex","qualname":"::ser::ByteFormat::serialize_hex","value":"fn serialize_hex<'_>(&'_ Self) -> String","parent":{"krate":0,"index":344},"children":[],"decl_id":null,"docs":" Serializes `self` to a vector, returns the hex-encoded vector\n","sig":null,"attributes":[{"value":"/ Serializes `self` to a vector, returns the hex-encoded vector","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":43911,"byte_end":43976,"line_start":340,"line_end":340,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":44247,"byte_end":44263,"line_start":348,"line_end":348,"column_start":8,"column_end":24},"name":"serialize_base64","qualname":"::ser::ByteFormat::serialize_base64","value":"fn serialize_base64<'_>(&'_ Self) -> String","parent":{"krate":0,"index":344},"children":[],"decl_id":null,"docs":" Serialize `self` to a base64 string, using standard RFC4648 non-url safe characters\n","sig":null,"attributes":[{"value":"/ Serialize `self` to a base64 string, using standard RFC4648 non-url safe characters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":44152,"byte_end":44239,"line_start":347,"line_end":347,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":44479,"byte_end":44496,"line_start":358,"line_end":358,"column_start":8,"column_end":25},"name":"serialized_length","qualname":"<u8 as ser::ByteFormat>::serialized_length","value":"fn serialized_length<'_>(&'_ Self) -> usize","parent":{"krate":0,"index":344},"children":[],"decl_id":{"krate":0,"index":346},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":44539,"byte_end":44552,"line_start":362,"line_end":362,"column_start":8,"column_end":21},"name":"read_seq_from","qualname":"<u8 as ser::ByteFormat>::read_seq_from","value":"fn read_seq_from<R, '_>(&'_ mut R, ReadSeqMode) -> SerResult<Vec<u8>> where\nR: Read, Self: std::marker::Sized","parent":{"krate":0,"index":344},"children":[],"decl_id":{"krate":0,"index":351},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":45211,"byte_end":45220,"line_start":383,"line_end":383,"column_start":8,"column_end":17},"name":"read_from","qualname":"<u8 as ser::ByteFormat>::read_from","value":"fn read_from<R, '_>(&'_ mut R) -> SerResult<Self> where R: Read,\nSelf: std::marker::Sized","parent":{"krate":0,"index":344},"children":[],"decl_id":{"krate":0,"index":347},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/ser.rs","byte_start":45445,"byte_end":45453,"line_start":393,"line_end":393,"column_start":8,"column_end":16},"name":"write_to","qualname":"<u8 as ser::ByteFormat>::write_to","value":"fn write_to<W, '_, '_>(&'_ Self, &'_ mut W) -> SerResult<usize> where W: Write","parent":{"krate":0,"index":344},"children":[],"decl_id":{"krate":0,"index":349},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":373},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"types","qualname":"::types","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/mod.rs","parent":null,"children":[{"krate":0,"index":374},{"krate":0,"index":424}],"decl_id":null,"docs":" Holds generic types useful describing transactions. The `Transaction` trait conceptualizes\n UTXO transactions as a list of inputs and outputs, and allows implementations to define what\n those are precisely.","sig":null,"attributes":[{"value":"/ Holds generic types useful describing transactions. The `Transaction` trait conceptualizes","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/mod.rs","byte_start":48735,"byte_end":48829,"line_start":1,"line_end":1,"column_start":1,"column_end":95}},{"value":"/ UTXO transactions as a list of inputs and outputs, and allows implementations to define what","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/mod.rs","byte_start":48830,"byte_end":48926,"line_start":2,"line_end":2,"column_start":1,"column_end":97}},{"value":"/ those are precisely.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/mod.rs","byte_start":48927,"byte_end":48951,"line_start":3,"line_end":3,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/mod.rs","byte_start":48952,"byte_end":48955,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ The `Ser` trait describes a simple `Read'/'Write`-based interface for binary serialization. We","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/mod.rs","byte_start":48956,"byte_end":49054,"line_start":5,"line_end":5,"column_start":1,"column_end":99}},{"value":"/ provide implementations for several primitives (i.e `Vec<T: Ser>` and `u8`, `u32`, and 'u64`).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/mod.rs","byte_start":49055,"byte_end":49153,"line_start":6,"line_end":6,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/mod.rs","byte_start":49154,"byte_end":49157,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ A Bitcoin implementation of all types is provided in the `bitcoin` crate.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/mod.rs","byte_start":49158,"byte_end":49235,"line_start":8,"line_end":8,"column_start":1,"column_end":78}}]},{"kind":"Mod","id":{"krate":0,"index":374},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tx","qualname":"::types::tx","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","parent":null,"children":[{"krate":0,"index":375},{"krate":0,"index":378},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":386},{"krate":0,"index":389},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":396},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":406}],"decl_id":null,"docs":" Contains the abstract `Transaction` trait.\n","sig":null,"attributes":[{"value":"/ Contains the abstract `Transaction` trait.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/mod.rs","byte_start":49347,"byte_end":49393,"line_start":13,"line_end":13,"column_start":1,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":399},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":49725,"byte_end":49738,"line_start":12,"line_end":12,"column_start":11,"column_end":24},"name":"TxoIdentifier","qualname":"::types::tx::TxoIdentifier","value":"TxoIdentifier","parent":null,"children":[],"decl_id":null,"docs":" A `TxoIdentifier` represents the network's unique identifier an output. In Bitcoin this is an\n outpoint.\n","sig":null,"attributes":[{"value":"/ A `TxoIdentifier` represents the network's unique identifier an output. In Bitcoin this is an","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":49603,"byte_end":49700,"line_start":10,"line_end":10,"column_start":1,"column_end":98}},{"value":"/ outpoint.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":49701,"byte_end":49714,"line_start":11,"line_end":11,"column_start":1,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":400},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":49846,"byte_end":49851,"line_start":15,"line_end":15,"column_start":11,"column_end":16},"name":"Input","qualname":"::types::tx::Input","value":"Input","parent":null,"children":[{"krate":0,"index":401}],"decl_id":null,"docs":" An `Input` spends a specific TXO, and typically contains a `TxoIdentifier` for that TXO.\n","sig":null,"attributes":[{"value":"/ An `Input` spends a specific TXO, and typically contains a `TxoIdentifier` for that TXO.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":49743,"byte_end":49835,"line_start":14,"line_end":14,"column_start":1,"column_end":93}}]},{"kind":"Type","id":{"krate":0,"index":401},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":49938,"byte_end":49951,"line_start":17,"line_end":17,"column_start":10,"column_end":23},"name":"TxoIdentifier","qualname":"::types::tx::Input::TxoIdentifier","value":"type TxoIdentifier: TxoIdentifier;","parent":{"krate":0,"index":400},"children":[],"decl_id":null,"docs":" An input must define what type contains the TXO ID it is spending.\n","sig":null,"attributes":[{"value":"/ An input must define what type contains the TXO ID it is spending.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":49858,"byte_end":49928,"line_start":16,"line_end":16,"column_start":5,"column_end":75}}]},{"kind":"Trait","id":{"krate":0,"index":402},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":50101,"byte_end":50120,"line_start":22,"line_end":22,"column_start":11,"column_end":30},"name":"RecipientIdentifier","qualname":"::types::tx::RecipientIdentifier","value":"RecipientIdentifier","parent":null,"children":[],"decl_id":null,"docs":" A RecipientIdentifier represents the network's identifier for a recipient. In Bitcoin this is\n a `ScriptPubkey`.\n","sig":null,"attributes":[{"value":"/ A RecipientIdentifier represents the network's identifier for a recipient. In Bitcoin this is","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":49971,"byte_end":50068,"line_start":20,"line_end":20,"column_start":1,"column_end":98}},{"value":"/ a `ScriptPubkey`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":50069,"byte_end":50090,"line_start":21,"line_end":21,"column_start":1,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":403},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":50229,"byte_end":50235,"line_start":25,"line_end":25,"column_start":11,"column_end":17},"name":"Output","qualname":"::types::tx::Output","value":"Output","parent":null,"children":[{"krate":0,"index":404},{"krate":0,"index":405}],"decl_id":null,"docs":" An Output represents a new TXO being created. It has an associated `RecipientIdentifier`.\n","sig":null,"attributes":[{"value":"/ An Output represents a new TXO being created. It has an associated `RecipientIdentifier`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":50125,"byte_end":50218,"line_start":24,"line_end":24,"column_start":1,"column_end":94}}]},{"kind":"Type","id":{"krate":0,"index":404},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":50323,"byte_end":50328,"line_start":27,"line_end":27,"column_start":10,"column_end":15},"name":"Value","qualname":"::types::tx::Output::Value","value":"type Value;","parent":{"krate":0,"index":403},"children":[],"decl_id":null,"docs":" How is value represented in this Output? For Bitcoin this is a u64.\n","sig":null,"attributes":[{"value":"/ How is value represented in this Output? For Bitcoin this is a u64.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":50242,"byte_end":50313,"line_start":26,"line_end":26,"column_start":5,"column_end":76}}]},{"kind":"Type","id":{"krate":0,"index":405},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":50478,"byte_end":50497,"line_start":30,"line_end":30,"column_start":10,"column_end":29},"name":"RecipientIdentifier","qualname":"::types::tx::Output::RecipientIdentifier","value":"type RecipientIdentifier: RecipientIdentifier;","parent":{"krate":0,"index":403},"children":[],"decl_id":null,"docs":" The associated `RecipientIdentifier` type that describes to whom the output is paid.\n For Bitcoin, this is a `ScriptPubkey`\n","sig":null,"attributes":[{"value":"/ The associated `RecipientIdentifier` type that describes to whom the output is paid.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":50334,"byte_end":50422,"line_start":28,"line_end":28,"column_start":5,"column_end":93}},{"value":"/ For Bitcoin, this is a `ScriptPubkey`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":50427,"byte_end":50468,"line_start":29,"line_end":29,"column_start":5,"column_end":46}}]},{"kind":"Trait","id":{"krate":0,"index":406},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":50888,"byte_end":50899,"line_start":39,"line_end":39,"column_start":11,"column_end":22},"name":"Transaction","qualname":"::types::tx::Transaction","value":"Transaction: ByteFormat","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":423}],"decl_id":null,"docs":" Basic functionality for a Transaction","sig":null,"attributes":[{"value":"/ Basic functionality for a Transaction","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":50523,"byte_end":50564,"line_start":33,"line_end":33,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":50565,"byte_end":50568,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This trait has been generalized to support transactions from Non-Bitcoin networks. The","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":50569,"byte_end":50659,"line_start":35,"line_end":35,"column_start":1,"column_end":91}},{"value":"/ transaction specificies which types it considers to be inputs and outputs, and a struct that","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":50660,"byte_end":50756,"line_start":36,"line_end":36,"column_start":1,"column_end":97}},{"value":"/ contains its Sighash arguments. This allows others to define custom transaction types with","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":50757,"byte_end":50851,"line_start":37,"line_end":37,"column_start":1,"column_end":95}},{"value":"/ unique functionality.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":50852,"byte_end":50877,"line_start":38,"line_end":38,"column_start":1,"column_end":26}}]},{"kind":"Type","id":{"krate":0,"index":407},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":51002,"byte_end":51009,"line_start":41,"line_end":41,"column_start":10,"column_end":17},"name":"TxError","qualname":"::types::tx::Transaction::TxError","value":"type TxError: From<SerError> + From<<Self as ByteFormat>::Error>;","parent":{"krate":0,"index":406},"children":[],"decl_id":null,"docs":" An associated error type, used in Results returned by the Transaction.\n","sig":null,"attributes":[{"value":"/ An associated error type, used in Results returned by the Transaction.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":50918,"byte_end":50992,"line_start":40,"line_end":40,"column_start":5,"column_end":79}}]},{"kind":"Type","id":{"krate":0,"index":408},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":51115,"byte_end":51119,"line_start":43,"line_end":43,"column_start":10,"column_end":14},"name":"TxIn","qualname":"::types::tx::Transaction::TxIn","value":"type TxIn: Input;","parent":{"krate":0,"index":406},"children":[],"decl_id":null,"docs":" The Input type for the transaction\n","sig":null,"attributes":[{"value":"/ The Input type for the transaction","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":51067,"byte_end":51105,"line_start":42,"line_end":42,"column_start":5,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":409},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":51181,"byte_end":51186,"line_start":45,"line_end":45,"column_start":10,"column_end":15},"name":"TxOut","qualname":"::types::tx::Transaction::TxOut","value":"type TxOut: Output;","parent":{"krate":0,"index":406},"children":[],"decl_id":null,"docs":" The Output type for the transaction\n","sig":null,"attributes":[{"value":"/ The Output type for the transaction","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":51132,"byte_end":51171,"line_start":44,"line_end":44,"column_start":5,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":410},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":51288,"byte_end":51299,"line_start":47,"line_end":47,"column_start":10,"column_end":21},"name":"SighashArgs","qualname":"::types::tx::Transaction::SighashArgs","value":"type SighashArgs;","parent":{"krate":0,"index":406},"children":[],"decl_id":null,"docs":" A type describing arguments for the sighash function for this transaction.\n","sig":null,"attributes":[{"value":"/ A type describing arguments for the sighash function for this transaction.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":51200,"byte_end":51278,"line_start":46,"line_end":46,"column_start":5,"column_end":83}}]},{"kind":"Type","id":{"krate":0,"index":411},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":51399,"byte_end":51403,"line_start":49,"line_end":49,"column_start":10,"column_end":14},"name":"TXID","qualname":"::types::tx::Transaction::TXID","value":"type TXID: MarkedDigestOutput;","parent":{"krate":0,"index":406},"children":[],"decl_id":null,"docs":" A marked hash (see crate::hashes::marked) to be used as the transaction ID type.\n","sig":null,"attributes":[{"value":"/ A marked hash (see crate::hashes::marked) to be used as the transaction ID type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":51305,"byte_end":51389,"line_start":48,"line_end":48,"column_start":5,"column_end":89}}]},{"kind":"Type","id":{"krate":0,"index":412},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":51522,"byte_end":51532,"line_start":51,"line_end":51,"column_start":10,"column_end":20},"name":"HashWriter","qualname":"::types::tx::Transaction::HashWriter","value":"type HashWriter: MarkedDigest<Self::TXID>;","parent":{"krate":0,"index":406},"children":[],"decl_id":null,"docs":" A type that implements `HashWriter`. Used to generate the `TXID` and `Sighash`.\n","sig":null,"attributes":[{"value":"/ A type that implements `HashWriter`. Used to generate the `TXID` and `Sighash`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":51429,"byte_end":51512,"line_start":50,"line_end":50,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":51640,"byte_end":51643,"line_start":54,"line_end":54,"column_start":8,"column_end":11},"name":"new","qualname":"::types::tx::Transaction::new","value":"fn new<I, O>(u32, I, O, u32) -> Result<Self, Self::TxError> where\nI: Into<Vec<Self::TxIn>>, O: Into<Vec<Self::TxOut>>, Self: Sized","parent":{"krate":0,"index":406},"children":[],"decl_id":null,"docs":" Instantiate a new Transaction by specifying inputs and outputs.\n","sig":null,"attributes":[{"value":"/ Instantiate a new Transaction by specifying inputs and outputs.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":51565,"byte_end":51632,"line_start":53,"line_end":53,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":51882,"byte_end":51889,"line_start":61,"line_end":61,"column_start":8,"column_end":15},"name":"version","qualname":"::types::tx::Transaction::version","value":"fn version<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":406},"children":[],"decl_id":null,"docs":" Returns the transaction version number\n","sig":null,"attributes":[{"value":"/ Returns the transaction version number","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":51832,"byte_end":51874,"line_start":60,"line_end":60,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":51973,"byte_end":51979,"line_start":64,"line_end":64,"column_start":8,"column_end":14},"name":"inputs","qualname":"::types::tx::Transaction::inputs","value":"fn inputs<'_>(&'_ Self) -> &'_ [Self::TxIn]","parent":{"krate":0,"index":406},"children":[],"decl_id":null,"docs":" Returns a reference to the transaction input vector\n","sig":null,"attributes":[{"value":"/ Returns a reference to the transaction input vector","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":51910,"byte_end":51965,"line_start":63,"line_end":63,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":52075,"byte_end":52082,"line_start":67,"line_end":67,"column_start":8,"column_end":15},"name":"outputs","qualname":"::types::tx::Transaction::outputs","value":"fn outputs<'_>(&'_ Self) -> &'_ [Self::TxOut]","parent":{"krate":0,"index":406},"children":[],"decl_id":null,"docs":" Returns a reference the the transaction output vector\n","sig":null,"attributes":[{"value":"/ Returns a reference the the transaction output vector","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":52010,"byte_end":52067,"line_start":66,"line_end":66,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":52167,"byte_end":52175,"line_start":70,"line_end":70,"column_start":8,"column_end":16},"name":"locktime","qualname":"::types::tx::Transaction::locktime","value":"fn locktime<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":406},"children":[],"decl_id":null,"docs":" Returns the transaction's nLocktime field\n","sig":null,"attributes":[{"value":"/ Returns the transaction's nLocktime field","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":52114,"byte_end":52159,"line_start":69,"line_end":69,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":52329,"byte_end":52333,"line_start":74,"line_end":74,"column_start":8,"column_end":12},"name":"txid","qualname":"::types::tx::Transaction::txid","value":"fn txid<'_>(&'_ Self) -> Self::TXID","parent":{"krate":0,"index":406},"children":[],"decl_id":null,"docs":" Calculates and returns the transaction's ID. The default TXID is simply the digest of the\n serialized transaction.\n","sig":null,"attributes":[{"value":"/ Calculates and returns the transaction's ID. The default TXID is simply the digest of the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":52196,"byte_end":52289,"line_start":72,"line_end":72,"column_start":5,"column_end":98}},{"value":"/ serialized transaction.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":52294,"byte_end":52321,"line_start":73,"line_end":73,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":52999,"byte_end":53021,"line_start":89,"line_end":89,"column_start":8,"column_end":30},"name":"write_sighash_preimage","qualname":"::types::tx::Transaction::write_sighash_preimage","value":"fn write_sighash_preimage<W, '_, '_,\n'_>(&'_ Self, &'_ mut W, &'_ Self::SighashArgs) -> Result<(), Self::TxError>\nwhere W: Write","parent":{"krate":0,"index":406},"children":[],"decl_id":null,"docs":" Generate the digest that must be signed to authorize inputs. For Bitcoin transactions\n this is a function of the transaction, and the input's prevout.","sig":null,"attributes":[{"value":"/ Generate the digest that must be signed to authorize inputs. For Bitcoin transactions","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":52530,"byte_end":52619,"line_start":81,"line_end":81,"column_start":5,"column_end":94}},{"value":"/ this is a function of the transaction, and the input's prevout.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":52624,"byte_end":52691,"line_start":82,"line_end":82,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":52696,"byte_end":52699,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Note:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":52704,"byte_end":52715,"line_start":84,"line_end":84,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":52720,"byte_end":52723,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ For Bitcoin, this will write the DEFAULT sighash for the current transaction type. For","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":52728,"byte_end":52818,"line_start":86,"line_end":86,"column_start":5,"column_end":95}},{"value":"/ witness transactions, that is the BIP143 sighash. When signing Legacy inputs included in a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":52823,"byte_end":52917,"line_start":87,"line_end":87,"column_start":5,"column_end":99}},{"value":"/ witness transaction, use `write_legacy_sighash_preimage` instead.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":52922,"byte_end":52991,"line_start":88,"line_end":88,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":53299,"byte_end":53306,"line_start":97,"line_end":97,"column_start":8,"column_end":15},"name":"sighash","qualname":"::types::tx::Transaction::sighash","value":"fn sighash<'_, '_>(&'_ Self, &'_ Self::SighashArgs)\n-> Result<DigestOutput<Self::HashWriter>, Self::TxError>","parent":{"krate":0,"index":406},"children":[],"decl_id":null,"docs":" Calls `write_sighash_preimage` with the provided arguments and a new HashWriter.\n Returns the sighash digest which should be signed.\n","sig":null,"attributes":[{"value":"/ Calls `write_sighash_preimage` with the provided arguments and a new HashWriter.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":53148,"byte_end":53232,"line_start":95,"line_end":95,"column_start":5,"column_end":89}},{"value":"/ Returns the sighash digest which should be signed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":53237,"byte_end":53291,"line_start":96,"line_end":96,"column_start":5,"column_end":59}}]}],"impls":[{"id":3,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":17258,"byte_end":17271,"line_start":59,"line_end":59,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":25023,"byte_end":25030,"line_start":80,"line_end":80,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":25245,"byte_end":25252,"line_start":91,"line_end":91,"column_start":21,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":25280,"byte_end":25287,"line_start":93,"line_end":93,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":25376,"byte_end":25383,"line_start":97,"line_end":97,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":25488,"byte_end":25495,"line_start":101,"line_end":101,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":25751,"byte_end":25758,"line_start":109,"line_end":109,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":25949,"byte_end":25956,"line_start":117,"line_end":117,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":26054,"byte_end":26061,"line_start":123,"line_end":123,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":26313,"byte_end":26320,"line_start":133,"line_end":133,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":26535,"byte_end":26542,"line_start":144,"line_end":144,"column_start":21,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":26570,"byte_end":26577,"line_start":146,"line_end":146,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":26669,"byte_end":26676,"line_start":150,"line_end":150,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":26784,"byte_end":26791,"line_start":154,"line_end":154,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":27052,"byte_end":27059,"line_start":162,"line_end":162,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":27250,"byte_end":27257,"line_start":170,"line_end":170,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":27355,"byte_end":27362,"line_start":176,"line_end":176,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":27614,"byte_end":27624,"line_start":186,"line_end":186,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":27836,"byte_end":27846,"line_start":197,"line_end":197,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":28084,"byte_end":28094,"line_start":204,"line_end":204,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":28203,"byte_end":28213,"line_start":210,"line_end":210,"column_start":21,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":28242,"byte_end":28252,"line_start":212,"line_end":212,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":28367,"byte_end":28377,"line_start":216,"line_end":216,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":28644,"byte_end":28654,"line_start":225,"line_end":225,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":28955,"byte_end":28965,"line_start":236,"line_end":236,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","byte_start":1072,"byte_end":1078,"line_start":22,"line_end":22,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3}},{"kind":"Mod","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","byte_start":1089,"byte_end":1096,"line_start":24,"line_end":24,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":8}},{"kind":"Mod","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","byte_start":1106,"byte_end":1109,"line_start":25,"line_end":25,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":50}},{"kind":"Mod","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/mod.rs","byte_start":13544,"byte_end":13551,"line_start":4,"line_end":4,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":51}},{"kind":"Mod","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/mod.rs","byte_start":13561,"byte_end":13566,"line_start":5,"line_end":5,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":62}},{"kind":"Mod","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","byte_start":1119,"byte_end":1125,"line_start":26,"line_end":26,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":106}},{"kind":"Mod","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","byte_start":1135,"byte_end":1139,"line_start":27,"line_end":27,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":213}},{"kind":"Mod","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","byte_start":1149,"byte_end":1156,"line_start":28,"line_end":28,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":253}},{"kind":"Mod","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","byte_start":1166,"byte_end":1169,"line_start":29,"line_end":29,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":276}},{"kind":"Mod","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/lib.rs","byte_start":1179,"byte_end":1184,"line_start":30,"line_end":30,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":373}},{"kind":"Mod","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/mod.rs","byte_start":49402,"byte_end":49404,"line_start":14,"line_end":14,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":374}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/builder.rs","byte_start":10130,"byte_end":10135,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":3268},"to":{"krate":0,"index":29}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/enc/bases.rs","byte_start":17258,"byte_end":17271,"line_start":59,"line_end":59,"column_start":37,"column_end":50},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":426},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":23657,"byte_end":23664,"line_start":27,"line_end":27,"column_start":5,"column_end":12},"kind":"SuperTrait","from":{"krate":2,"index":3241},"to":{"krate":0,"index":154}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":23667,"byte_end":23671,"line_start":27,"line_end":27,"column_start":15,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":3273},"to":{"krate":0,"index":154}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":23674,"byte_end":23679,"line_start":27,"line_end":27,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":3160},"to":{"krate":0,"index":154}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":23688,"byte_end":23693,"line_start":27,"line_end":27,"column_start":36,"column_end":41},"kind":"SuperTrait","from":{"krate":2,"index":3163},"to":{"krate":0,"index":154}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":23702,"byte_end":23712,"line_start":27,"line_end":27,"column_start":50,"column_end":60},"kind":"SuperTrait","from":{"krate":0,"index":344},"to":{"krate":0,"index":154}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":24635,"byte_end":24641,"line_start":65,"line_end":65,"column_start":28,"column_end":34},"kind":"SuperTrait","from":{"krate":35,"index":520},"to":{"krate":0,"index":161}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":24644,"byte_end":24651,"line_start":65,"line_end":65,"column_start":37,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":3241},"to":{"krate":0,"index":161}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":24654,"byte_end":24659,"line_start":65,"line_end":65,"column_start":47,"column_end":52},"kind":"SuperTrait","from":{"krate":1,"index":4724},"to":{"krate":0,"index":161}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":25023,"byte_end":25030,"line_start":80,"line_end":80,"column_start":25,"column_end":32},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":466},"to":{"krate":1,"index":4724}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":25245,"byte_end":25252,"line_start":91,"line_end":91,"column_start":21,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":466},"to":{"krate":35,"index":519}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":25280,"byte_end":25287,"line_start":93,"line_end":93,"column_start":24,"column_end":31},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":466},"to":{"krate":36,"index":34}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":25376,"byte_end":25383,"line_start":97,"line_end":97,"column_start":25,"column_end":32},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":466},"to":{"krate":36,"index":45}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":25488,"byte_end":25495,"line_start":101,"line_end":101,"column_start":30,"column_end":37},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":466},"to":{"krate":35,"index":735}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":25751,"byte_end":25758,"line_start":109,"line_end":109,"column_start":35,"column_end":42},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":466},"to":{"krate":35,"index":738}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":25949,"byte_end":25956,"line_start":117,"line_end":117,"column_start":24,"column_end":31},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":466},"to":{"krate":36,"index":56}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":26054,"byte_end":26061,"line_start":123,"line_end":123,"column_start":25,"column_end":32},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":466},"to":{"krate":35,"index":731}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":26313,"byte_end":26320,"line_start":133,"line_end":133,"column_start":25,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":473},"to":{"krate":1,"index":4724}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":26535,"byte_end":26542,"line_start":144,"line_end":144,"column_start":21,"column_end":28},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":473},"to":{"krate":35,"index":519}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":26570,"byte_end":26577,"line_start":146,"line_end":146,"column_start":24,"column_end":31},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":473},"to":{"krate":36,"index":34}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":26669,"byte_end":26676,"line_start":150,"line_end":150,"column_start":25,"column_end":32},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":473},"to":{"krate":36,"index":45}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":26784,"byte_end":26791,"line_start":154,"line_end":154,"column_start":30,"column_end":37},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":473},"to":{"krate":35,"index":735}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":27052,"byte_end":27059,"line_start":162,"line_end":162,"column_start":35,"column_end":42},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":473},"to":{"krate":35,"index":738}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":27250,"byte_end":27257,"line_start":170,"line_end":170,"column_start":24,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":473},"to":{"krate":36,"index":56}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":27355,"byte_end":27362,"line_start":176,"line_end":176,"column_start":25,"column_end":32},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":473},"to":{"krate":35,"index":731}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":27614,"byte_end":27624,"line_start":186,"line_end":186,"column_start":25,"column_end":35},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":480},"to":{"krate":1,"index":4724}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":27836,"byte_end":27846,"line_start":197,"line_end":197,"column_start":18,"column_end":28},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":480},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":28084,"byte_end":28094,"line_start":204,"line_end":204,"column_start":25,"column_end":35},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":480},"to":{"krate":35,"index":731}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":28203,"byte_end":28213,"line_start":210,"line_end":210,"column_start":21,"column_end":31},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":480},"to":{"krate":35,"index":519}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":28242,"byte_end":28252,"line_start":212,"line_end":212,"column_start":25,"column_end":35},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":480},"to":{"krate":36,"index":45}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":28367,"byte_end":28377,"line_start":216,"line_end":216,"column_start":30,"column_end":40},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":480},"to":{"krate":35,"index":735}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":28644,"byte_end":28654,"line_start":225,"line_end":225,"column_start":35,"column_end":45},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":480},"to":{"krate":35,"index":738}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/hashes/mod.rs","byte_start":28955,"byte_end":28965,"line_start":236,"line_end":236,"column_start":24,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":480},"to":{"krate":36,"index":56}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/coins-core-0.7.0/src/types/tx.rs","byte_start":50901,"byte_end":50911,"line_start":39,"line_end":39,"column_start":24,"column_end":34},"kind":"SuperTrait","from":{"krate":0,"index":344},"to":{"krate":0,"index":406}}]}