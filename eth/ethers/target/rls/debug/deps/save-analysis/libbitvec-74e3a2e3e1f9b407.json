{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4","program":"/Users/turjachowdhury/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","bitvec","--edition=2018","/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"atomic\"","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=74e3a2e3e1f9b407","-C","extra-filename=-74e3a2e3e1f9b407","--out-dir","/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps","-L","dependency=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps","--extern","either=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libeither-cc68f74944557560.rmeta","--extern","radium=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libradium-51914a56e654b448.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/turjachowdhury/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libbitvec-74e3a2e3e1f9b407.rmeta"},"prelude":{"crate_id":{"name":"bitvec","disambiguator":[15410949840094666901,0]},"crate_root":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src","external_crates":[{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3177202280525429736,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14771084576412554041,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2214913233095760658,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14062411168213242900,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12076482825092298057,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[14222321261015582298,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8777242437552039366,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17835652209006724865,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[8739993533421390330,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[14051958152740382928,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[10065303707608660519,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[11544620977869425193,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[6400271788769952154,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[15384311983005613458,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[18308402029100966730,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[6407954677654987270,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[15697432329694890830,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[8370702540642071065,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[13043233986326649044,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/access.rs","num":20,"id":{"name":"radium","disambiguator":[5147848745904799245,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/domain.rs","num":21,"id":{"name":"either","disambiguator":[4209905629063462519,0]}}],"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","byte_start":0,"byte_end":3882,"line_start":1,"line_end":125,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":15},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/macros/internal.rs","byte_start":25737,"byte_end":25752,"line_start":475,"line_end":475,"column_start":15,"column_end":30},"alias_span":null,"name":"u8_from_ne_bits","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":22},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/macros/internal.rs","byte_start":28200,"byte_end":28216,"line_start":571,"line_end":571,"column_start":9,"column_end":25},"alias_span":null,"name":"u8_from_ne_bytes","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":26},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/macros/internal.rs","byte_start":28295,"byte_end":28312,"line_start":575,"line_end":575,"column_start":9,"column_end":26},"alias_span":null,"name":"u16_from_ne_bytes","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":30},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/macros/internal.rs","byte_start":28392,"byte_end":28409,"line_start":579,"line_end":579,"column_start":9,"column_end":26},"alias_span":null,"name":"u32_from_ne_bytes","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":34},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/macros/internal.rs","byte_start":28489,"byte_end":28506,"line_start":583,"line_end":583,"column_start":9,"column_end":26},"alias_span":null,"name":"u64_from_ne_bytes","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":38},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/macros/internal.rs","byte_start":28586,"byte_end":28605,"line_start":587,"line_end":587,"column_start":9,"column_end":28},"alias_span":null,"name":"usize_from_ne_bytes","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":55},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/prelude.rs","byte_start":143351,"byte_end":143355,"line_start":8,"line_end":8,"column_start":2,"column_end":6},"alias_span":null,"name":"bits","value":"","parent":{"krate":0,"index":480}},{"kind":"Use","ref_id":{"krate":0,"index":234},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/prelude.rs","byte_start":143366,"byte_end":143374,"line_start":9,"line_end":9,"column_start":10,"column_end":18},"alias_span":null,"name":"BitField","value":"","parent":{"krate":0,"index":480}},{"kind":"Use","ref_id":{"krate":0,"index":312},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/prelude.rs","byte_start":143388,"byte_end":143396,"line_start":11,"line_end":11,"column_start":3,"column_end":11},"alias_span":null,"name":"BitOrder","value":"","parent":{"krate":0,"index":480}},{"kind":"Use","ref_id":{"krate":0,"index":330},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/prelude.rs","byte_start":143400,"byte_end":143405,"line_start":12,"line_end":12,"column_start":3,"column_end":8},"alias_span":null,"name":"Local","value":"","parent":{"krate":0,"index":480}},{"kind":"Use","ref_id":{"krate":0,"index":3522},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/prelude.rs","byte_start":143409,"byte_end":143413,"line_start":13,"line_end":13,"column_start":3,"column_end":7},"alias_span":null,"name":"Lsb0","value":"","parent":{"krate":0,"index":480}},{"kind":"Use","ref_id":{"krate":0,"index":3523},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/prelude.rs","byte_start":143409,"byte_end":143413,"line_start":13,"line_end":13,"column_start":3,"column_end":7},"alias_span":null,"name":"Lsb0","value":"","parent":{"krate":0,"index":480}},{"kind":"Use","ref_id":{"krate":0,"index":3509},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/prelude.rs","byte_start":143417,"byte_end":143421,"line_start":14,"line_end":14,"column_start":3,"column_end":7},"alias_span":null,"name":"Msb0","value":"","parent":{"krate":0,"index":480}},{"kind":"Use","ref_id":{"krate":0,"index":3510},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/prelude.rs","byte_start":143417,"byte_end":143421,"line_start":14,"line_end":14,"column_start":3,"column_end":7},"alias_span":null,"name":"Msb0","value":"","parent":{"krate":0,"index":480}},{"kind":"Use","ref_id":{"krate":0,"index":609},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/prelude.rs","byte_start":143439,"byte_end":143445,"line_start":17,"line_end":17,"column_start":3,"column_end":9},"alias_span":null,"name":"AsBits","value":"","parent":{"krate":0,"index":480}},{"kind":"Use","ref_id":{"krate":0,"index":553},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/prelude.rs","byte_start":143449,"byte_end":143457,"line_start":18,"line_end":18,"column_start":3,"column_end":11},"alias_span":null,"name":"BitSlice","value":"","parent":{"krate":0,"index":480}},{"kind":"Use","ref_id":{"krate":0,"index":1903},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/prelude.rs","byte_start":143471,"byte_end":143479,"line_start":20,"line_end":20,"column_start":9,"column_end":17},"alias_span":null,"name":"BitStore","value":"","parent":{"krate":0,"index":480}},{"kind":"Use","ref_id":{"krate":0,"index":57},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/prelude.rs","byte_start":143529,"byte_end":143535,"line_start":25,"line_end":25,"column_start":2,"column_end":8},"alias_span":null,"name":"bitbox","value":"","parent":{"krate":0,"index":480}},{"kind":"Use","ref_id":{"krate":0,"index":56},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/prelude.rs","byte_start":143538,"byte_end":143544,"line_start":26,"line_end":26,"column_start":2,"column_end":8},"alias_span":null,"name":"bitvec","value":"","parent":{"krate":0,"index":480}},{"kind":"Use","ref_id":{"krate":0,"index":1958},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/prelude.rs","byte_start":143554,"byte_end":143560,"line_start":27,"line_end":27,"column_start":9,"column_end":15},"alias_span":null,"name":"BitBox","value":"","parent":{"krate":0,"index":480}},{"kind":"Use","ref_id":{"krate":0,"index":2578},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/prelude.rs","byte_start":143568,"byte_end":143574,"line_start":28,"line_end":28,"column_start":7,"column_end":13},"alias_span":null,"name":"BitVec","value":"","parent":{"krate":0,"index":480}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/prelude.rs","byte_start":143624,"byte_end":143625,"line_start":32,"line_end":32,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":480}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":174396,"byte_end":174397,"line_start":1210,"line_end":1210,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"BitSliceIndex","parent":{"krate":0,"index":525}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":174419,"byte_end":174420,"line_start":1211,"line_end":1211,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"Chunks, ChunksExactMut, ChunksExact, ChunksMut, Windows","parent":{"krate":0,"index":525}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":174443,"byte_end":174444,"line_start":1212,"line_end":1212,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"BitMut","parent":{"krate":0,"index":525}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":347447,"byte_end":347448,"line_start":382,"line_end":382,"column_start":14,"column_end":15},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1923}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":347464,"byte_end":347465,"line_start":383,"line_end":383,"column_start":15,"column_end":16},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1923}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":392590,"byte_end":392591,"line_start":842,"line_end":842,"column_start":14,"column_end":15},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":2537}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":392607,"byte_end":392608,"line_start":843,"line_end":843,"column_start":15,"column_end":16},"alias_span":null,"name":"*","value":"Drain, Splice","parent":{"krate":0,"index":2537}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","byte_start":0,"byte_end":3882,"line_start":1,"line_end":125,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":58},{"krate":0,"index":103},{"krate":0,"index":134},{"krate":0,"index":193},{"krate":0,"index":294},{"krate":0,"index":331},{"krate":0,"index":480},{"krate":0,"index":525},{"krate":0,"index":1835},{"krate":0,"index":1923},{"krate":0,"index":2537},{"krate":0,"index":3327},{"krate":0,"index":3328}],"decl_id":null,"docs":" `bitvec` – `[bool]` in overdrive.","sig":null,"attributes":[{"value":"* `bitvec` – `[bool]` in overdrive.\n\nThis crate provides views into slices of bits that are truly `[u1]`. Each bit in\nthe data segment is used, unlike `[bool]` which ignores seven bits out of every\nbyte.\n\n`bitvec`’s data structures provide strong guarantees about, and fine-grained\ncontrol of, the bit-level representation of a sequence of memory. The user is\nempowered to choose the fundamental type underlying the store – `u8`, `u16`,\n`u32`, or `u64` – and the order in which each primitive is traversed – `Msb0`,\nfrom the most significant bit to the least, or `Lsb0`, from the least\nsignificant bit to the most.\n\nThis level of control is not necessary for most use cases where users just want\nto put bits in a sequence, but it is critically important for users making\npackets that leave main memory and hit some external device like a peripheral\ncontroller or a network socket. In order to provide convenience to users for\nwhom the storage details do not matter, `bitvec` types default to using the\nlocal C bitfield ordering and CPU word size.\n\nIn addition to providing compact, efficient, and powerful storage and\nmanipulation of bits in memory, the `bitvec` structures are capable of acting as\na queue, set, or stream of bits. They implement the bit-wise operators for\nBoolean arithmetic, arithmetic operators for 2’s-complement numeric arithmetic,\nread indexing, bit shifts, and access to the underlying storage fundamental\nelements as a slice.\n\n(Write indexing is impossible in Rust semantics.)\n!*/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","byte_start":0,"byte_end":1519,"line_start":1,"line_end":29,"column_start":1,"column_end":4}},{"value":"warn(missing_docs)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","byte_start":1594,"byte_end":1612,"line_start":32,"line_end":32,"column_start":31,"column_end":49}},{"value":"deny(unconditional_recursion)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","byte_start":1671,"byte_end":1704,"line_start":34,"line_end":34,"column_start":1,"column_end":34}}]},{"kind":"Mod","id":{"krate":0,"index":5},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/macros.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/macros.rs","parent":null,"children":[{"krate":0,"index":6},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57}],"decl_id":null,"docs":" Utility macros for constructing data structures and implementing bulk types.","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","byte_start":1907,"byte_end":1919,"line_start":48,"line_end":48,"column_start":1,"column_end":13}},{"value":"* Utility macros for constructing data structures and implementing bulk types.\n\nThe public macros are `bits!`, `bitvec!`, and `bitbox!`.\n!*/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/macros.rs","byte_start":3884,"byte_end":4026,"line_start":1,"line_end":4,"column_start":1,"column_end":4}}]},{"kind":"Mod","id":{"krate":0,"index":6},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/macros/internal.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"internal","qualname":"::macros::internal","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/macros/internal.rs","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":26},{"krate":0,"index":28},{"krate":0,"index":30},{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":52}],"decl_id":null,"docs":" Internal implementation macros for the public exports.","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/macros.rs","byte_start":4028,"byte_end":4040,"line_start":6,"line_end":6,"column_start":1,"column_end":13}},{"value":"* Internal implementation macros for the public exports.\n\nThe macros in this module are required to be exported from the crate, as the\npublic macros will call them from client contexts (`macro_rules!` expansion\nbodies are not in source crate scope, as they are token expansion rather than\nsymbolic calls). However, they are not part of the public *API* of the crate,\nand are not intended for use anywhere but in the expansion bodies of the\npublic-API constructor macros.\n!*/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/macros/internal.rs","byte_start":11897,"byte_end":12373,"line_start":1,"line_end":9,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":15},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/macros/internal.rs","byte_start":24994,"byte_end":25009,"line_start":430,"line_end":430,"column_start":14,"column_end":29},"name":"u8_from_le_bits","qualname":"::macros::internal::u8_from_le_bits","value":"const fn u8_from_le_bits(bool, bool, bool, bool, bool, bool, bool, bool) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Construct a `u8` from bits applied in Lsb0-order.\n","sig":null,"attributes":[{"value":"/ Construct a `u8` from bits applied in Lsb0-order.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/macros/internal.rs","byte_start":24849,"byte_end":24902,"line_start":427,"line_end":427,"column_start":1,"column_end":54}},{"value":"allow(clippy :: many_single_char_names)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/macros/internal.rs","byte_start":24903,"byte_end":24943,"line_start":428,"line_end":428,"column_start":1,"column_end":41}},{"value":"allow(clippy :: too_many_arguments)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/macros/internal.rs","byte_start":24944,"byte_end":24980,"line_start":429,"line_end":429,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":16},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/macros/internal.rs","byte_start":25407,"byte_end":25422,"line_start":453,"line_end":453,"column_start":14,"column_end":29},"name":"u8_from_be_bits","qualname":"::macros::internal::u8_from_be_bits","value":"const fn u8_from_be_bits(bool, bool, bool, bool, bool, bool, bool, bool) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Construct a `u8` from bits applied in Msb0-order.\n","sig":null,"attributes":[{"value":"/ Construct a `u8` from bits applied in Msb0-order.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/macros/internal.rs","byte_start":25262,"byte_end":25315,"line_start":450,"line_end":450,"column_start":1,"column_end":54}},{"value":"allow(clippy :: many_single_char_names)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/macros/internal.rs","byte_start":25316,"byte_end":25356,"line_start":451,"line_end":451,"column_start":1,"column_end":41}},{"value":"allow(clippy :: too_many_arguments)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/macros/internal.rs","byte_start":25357,"byte_end":25393,"line_start":452,"line_end":452,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":20},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/macros/internal.rs","byte_start":25898,"byte_end":25914,"line_start":482,"line_end":482,"column_start":14,"column_end":30},"name":"u8_from_be_bytes","qualname":"::macros::internal::u8_from_be_bytes","value":"const fn u8_from_be_bytes([u8; ]) -> u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":22},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/macros/internal.rs","byte_start":25980,"byte_end":25996,"line_start":487,"line_end":487,"column_start":14,"column_end":30},"name":"u8_from_le_bytes","qualname":"::macros::internal::u8_from_le_bytes","value":"const fn u8_from_le_bytes([u8; ]) -> u8","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":24},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/macros/internal.rs","byte_start":26062,"byte_end":26079,"line_start":492,"line_end":492,"column_start":14,"column_end":31},"name":"u16_from_be_bytes","qualname":"::macros::internal::u16_from_be_bytes","value":"const fn u16_from_be_bytes([u8; ]) -> u16","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":26},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/macros/internal.rs","byte_start":26180,"byte_end":26197,"line_start":497,"line_end":497,"column_start":14,"column_end":31},"name":"u16_from_le_bytes","qualname":"::macros::internal::u16_from_le_bytes","value":"const fn u16_from_le_bytes([u8; ]) -> u16","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":28},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/macros/internal.rs","byte_start":26298,"byte_end":26315,"line_start":502,"line_end":502,"column_start":14,"column_end":31},"name":"u32_from_be_bytes","qualname":"::macros::internal::u32_from_be_bytes","value":"const fn u32_from_be_bytes([u8; ]) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":30},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/macros/internal.rs","byte_start":26479,"byte_end":26496,"line_start":508,"line_end":508,"column_start":14,"column_end":31},"name":"u32_from_le_bytes","qualname":"::macros::internal::u32_from_le_bytes","value":"const fn u32_from_le_bytes([u8; ]) -> u32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":32},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/macros/internal.rs","byte_start":26660,"byte_end":26677,"line_start":514,"line_end":514,"column_start":14,"column_end":31},"name":"u64_from_be_bytes","qualname":"::macros::internal::u64_from_be_bytes","value":"const fn u64_from_be_bytes([u8; ]) -> u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":34},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/macros/internal.rs","byte_start":26883,"byte_end":26900,"line_start":520,"line_end":520,"column_start":14,"column_end":31},"name":"u64_from_le_bytes","qualname":"::macros::internal::u64_from_le_bytes","value":"const fn u64_from_le_bytes([u8; ]) -> u64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":36},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/macros/internal.rs","byte_start":27438,"byte_end":27457,"line_start":539,"line_end":539,"column_start":14,"column_end":33},"name":"usize_from_be_bytes","qualname":"::macros::internal::usize_from_be_bytes","value":"const fn usize_from_be_bytes([u8; ]) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(target_pointer_width = \"64\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/macros/internal.rs","byte_start":27389,"byte_end":27424,"line_start":538,"line_end":538,"column_start":1,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":38},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/macros/internal.rs","byte_start":27587,"byte_end":27606,"line_start":545,"line_end":545,"column_start":14,"column_end":33},"name":"usize_from_le_bytes","qualname":"::macros::internal::usize_from_le_bytes","value":"const fn usize_from_le_bytes([u8; ]) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(target_pointer_width = \"64\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/macros/internal.rs","byte_start":27538,"byte_end":27573,"line_start":544,"line_end":544,"column_start":1,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":134},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"indices","qualname":"::indices","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":3366},{"krate":0,"index":3370},{"krate":0,"index":3373},{"krate":0,"index":3375},{"krate":0,"index":3378},{"krate":0,"index":3381},{"krate":0,"index":3383},{"krate":0,"index":3386},{"krate":0,"index":3390},{"krate":0,"index":3393},{"krate":0,"index":3395},{"krate":0,"index":3399},{"krate":0,"index":145},{"krate":0,"index":151},{"krate":0,"index":3402},{"krate":0,"index":3406},{"krate":0,"index":3409},{"krate":0,"index":3411},{"krate":0,"index":3414},{"krate":0,"index":3417},{"krate":0,"index":3419},{"krate":0,"index":3422},{"krate":0,"index":3426},{"krate":0,"index":3429},{"krate":0,"index":3431},{"krate":0,"index":3435},{"krate":0,"index":155},{"krate":0,"index":159},{"krate":0,"index":3438},{"krate":0,"index":3442},{"krate":0,"index":3445},{"krate":0,"index":3447},{"krate":0,"index":3450},{"krate":0,"index":3453},{"krate":0,"index":3455},{"krate":0,"index":3458},{"krate":0,"index":3462},{"krate":0,"index":3465},{"krate":0,"index":3467},{"krate":0,"index":3471},{"krate":0,"index":163},{"krate":0,"index":167},{"krate":0,"index":3474},{"krate":0,"index":3477},{"krate":0,"index":3480},{"krate":0,"index":3482},{"krate":0,"index":3485},{"krate":0,"index":3488},{"krate":0,"index":3490},{"krate":0,"index":3493},{"krate":0,"index":3497},{"krate":0,"index":3500},{"krate":0,"index":3502},{"krate":0,"index":3506},{"krate":0,"index":171},{"krate":0,"index":175},{"krate":0,"index":179},{"krate":0,"index":186}],"decl_id":null,"docs":" Element bit indexing.","sig":null,"attributes":[{"value":"* Element bit indexing.\n\nThis module provides strong indexing types to manage the concept of addressing\nbits inside spans of memory elements. The crate needs to have a concept of bit\npositions that exist in memory (`BitIdx`), abstract “dead” bits that mark the\nfirst bit past the end of a memory region and are not required to exist in\nhardware (`BitTail`), specific bit positions that may be accessed by machine\ninstructions (`BitPos`), and element values that mask one or more bits of\ninterest (`BitMask`).\n!*/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":43065,"byte_end":43583,"line_start":1,"line_end":10,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":3366},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":44584,"byte_end":44590,"line_start":41,"line_end":41,"column_start":12,"column_end":18},"name":"BitIdx","qualname":"::indices::BitIdx","value":"BitIdx {  }","parent":null,"children":[{"krate":0,"index":3368},{"krate":0,"index":3369}],"decl_id":null,"docs":" Indicates a semantic index of a bit within a memory element.","sig":null,"attributes":[{"value":"* Indicates a semantic index of a bit within a memory element.\n\nThis type is consumed by [`BitOrder`] implementors, which use it to produce a\nconcrete bit position inside an element.\n\n`BitIdx` is a semantic counter which has a defined, constant, and predictable\nordering. Values of `BitIdx` refer strictly to an abstract ordering, and not to\nany actual bit positions within a memory element, so `BitIdx::<T>(0)` is always\nthe first bit counted within an element, but is not required to be the most or\nleast significant bits, or any other particular bits. Which specific bit is\nreferred by a `BitIdx` value is governed by implementors of `BitOrder`.\n\n# Type Parameters\n\n- `T`: The memory element type controlled by this index.\n\n[`BitOrder`]: ../order/trait.BitOrder.html\n**/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":43720,"byte_end":44495,"line_start":22,"line_end":39,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":45162,"byte_end":45165,"line_start":62,"line_end":62,"column_start":9,"column_end":12},"name":"new","qualname":"<BitIdx<T>>::new","value":"fn new(u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a counter value as a known-good index of the `T` element type.","sig":null,"attributes":[{"value":"/ Wraps a counter value as a known-good index of the `T` element type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":44792,"byte_end":44864,"line_start":51,"line_end":51,"column_start":2,"column_end":74}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":44866,"byte_end":44869,"line_start":52,"line_end":52,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":44871,"byte_end":44887,"line_start":53,"line_end":53,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":44889,"byte_end":44892,"line_start":54,"line_end":54,"column_start":2,"column_end":5}},{"value":"/ - `idx`: A semantic index within a `T` memory element.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":44894,"byte_end":44952,"line_start":55,"line_end":55,"column_start":2,"column_end":60}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":44954,"byte_end":44957,"line_start":56,"line_end":56,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":44959,"byte_end":44972,"line_start":57,"line_end":57,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":44974,"byte_end":44977,"line_start":58,"line_end":58,"column_start":2,"column_end":5}},{"value":"/ If `idx` is within the range `0 .. T::BITS`, then this returns the index","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":44979,"byte_end":45055,"line_start":59,"line_end":59,"column_start":2,"column_end":78}},{"value":"/ value wrapped in the index type; if `idx` exceeds this range, then this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":45057,"byte_end":45132,"line_start":60,"line_end":60,"column_start":2,"column_end":77}},{"value":"/ returns `None`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":45134,"byte_end":45153,"line_start":61,"line_end":61,"column_start":2,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":45534,"byte_end":45547,"line_start":77,"line_end":77,"column_start":16,"column_end":29},"name":"new_unchecked","qualname":"<BitIdx<T>>::new_unchecked","value":"unsafe fn new_unchecked(u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps a counter value as a known-good index of the `T` element type.","sig":null,"attributes":[{"value":"/ Wraps a counter value as a known-good index of the `T` element type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":45284,"byte_end":45356,"line_start":69,"line_end":69,"column_start":2,"column_end":74}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":45358,"byte_end":45361,"line_start":70,"line_end":70,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":45363,"byte_end":45379,"line_start":71,"line_end":71,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":45381,"byte_end":45384,"line_start":72,"line_end":72,"column_start":2,"column_end":5}},{"value":"/ - `idx`: A semantic index within a `T` memory element. It must be in the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":45386,"byte_end":45462,"line_start":73,"line_end":73,"column_start":2,"column_end":78}},{"value":"/   range `0 .. T::BITS`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":45464,"byte_end":45491,"line_start":74,"line_end":74,"column_start":2,"column_end":29}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":45509,"byte_end":45518,"line_start":76,"line_end":76,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":50215,"byte_end":50220,"line_start":194,"line_end":194,"column_start":5,"column_end":10},"name":"deref","qualname":"<BitIdx<T> as std::ops::Deref>::deref","value":"fn deref<'_>(&'_ Self) -> &'_ Self::Target","parent":{"krate":2,"index":3486},"children":[],"decl_id":{"krate":2,"index":3488},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3438},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":53373,"byte_end":53379,"line_start":321,"line_end":321,"column_start":12,"column_end":18},"name":"BitPos","qualname":"::indices::BitPos","value":"BitPos {  }","parent":null,"children":[{"krate":0,"index":3440},{"krate":0,"index":3441}],"decl_id":null,"docs":" Indicates a real electrical index within an element.","sig":null,"attributes":[{"value":"* Indicates a real electrical index within an element.\n\nThis type is produced by [`BitOrder`] implementors, and marks a specific\nelectrical bit within a memory element, rather than `BitIdx`’s semantic bit.\n\n# Type Parameters\n\n- `T`: A `BitStore` element which provides bounds-checking information. The\n  [`new`] constructor uses [`T::BITS`] to ensure that constructed `BitPos`\n  instances are always valid to use within `T` elements.\n\n[`BitOrder`]: ../order/trait.BitOrder.html\n[`T::BITS`]: ../store/trait.BitStore.html#associatedconstant.BITS\n[`new`]: #method.new\n**/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":52712,"byte_end":53284,"line_start":305,"line_end":319,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":54113,"byte_end":54116,"line_start":348,"line_end":348,"column_start":9,"column_end":12},"name":"new","qualname":"<BitPos<T>>::new","value":"fn new(u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Produce a new bit position marker at a valid position value.","sig":null,"attributes":[{"value":"/ Produce a new bit position marker at a valid position value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":53589,"byte_end":53653,"line_start":331,"line_end":331,"column_start":2,"column_end":66}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":53655,"byte_end":53658,"line_start":332,"line_end":332,"column_start":2,"column_end":5}},{"value":"/ `BitOrder` implementations should prefer this method, but *may* use","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":53660,"byte_end":53731,"line_start":333,"line_end":333,"column_start":2,"column_end":73}},{"value":"/ [`::new_unchecked`] if they can guarantee that the range invariant is","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":53733,"byte_end":53806,"line_start":334,"line_end":334,"column_start":2,"column_end":75}},{"value":"/ upheld.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":53808,"byte_end":53819,"line_start":335,"line_end":335,"column_start":2,"column_end":13}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":53821,"byte_end":53824,"line_start":336,"line_end":336,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":53826,"byte_end":53842,"line_start":337,"line_end":337,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":53844,"byte_end":53847,"line_start":338,"line_end":338,"column_start":2,"column_end":5}},{"value":"/ - `pos`: The bit position value to encode. It must be in the range","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":53849,"byte_end":53919,"line_start":339,"line_end":339,"column_start":2,"column_end":72}},{"value":"/   `0 .. T::BITS`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":53921,"byte_end":53942,"line_start":340,"line_end":340,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":53944,"byte_end":53947,"line_start":341,"line_end":341,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":53949,"byte_end":53961,"line_start":342,"line_end":342,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":53963,"byte_end":53966,"line_start":343,"line_end":343,"column_start":2,"column_end":5}},{"value":"/ This function panics if `pos` is greater than or equal to `T::BITS`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":53968,"byte_end":54040,"line_start":344,"line_end":344,"column_start":2,"column_end":74}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":54042,"byte_end":54045,"line_start":345,"line_end":345,"column_start":2,"column_end":5}},{"value":"/ [`::new_unchecked`]: #method.new_unchecked","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":54047,"byte_end":54093,"line_start":346,"line_end":346,"column_start":2,"column_end":48}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":54095,"byte_end":54104,"line_start":347,"line_end":347,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":55027,"byte_end":55040,"line_start":382,"line_end":382,"column_start":16,"column_end":29},"name":"new_unchecked","qualname":"<BitPos<T>>::new_unchecked","value":"unsafe fn new_unchecked(u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Produce a new bit position marker at any position value.","sig":null,"attributes":[{"value":"/ Produce a new bit position marker at any position value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":54278,"byte_end":54338,"line_start":358,"line_end":358,"column_start":2,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":54340,"byte_end":54343,"line_start":359,"line_end":359,"column_start":2,"column_end":5}},{"value":"/ # Safety","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":54345,"byte_end":54357,"line_start":360,"line_end":360,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":54359,"byte_end":54362,"line_start":361,"line_end":361,"column_start":2,"column_end":5}},{"value":"/ The caller *must* ensure that `pos` is less than `T::BITS`. `BitOrder`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":54364,"byte_end":54438,"line_start":362,"line_end":362,"column_start":2,"column_end":76}},{"value":"/ implementations should prefer [`::new`], which panics on range failure.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":54440,"byte_end":54515,"line_start":363,"line_end":363,"column_start":2,"column_end":77}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":54517,"byte_end":54520,"line_start":364,"line_end":364,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":54522,"byte_end":54538,"line_start":365,"line_end":365,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":54540,"byte_end":54543,"line_start":366,"line_end":366,"column_start":2,"column_end":5}},{"value":"/ - `pos`: The bit position value to encode. This must be in the range","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":54545,"byte_end":54617,"line_start":367,"line_end":367,"column_start":2,"column_end":74}},{"value":"/   `0 .. T::BITS`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":54619,"byte_end":54640,"line_start":368,"line_end":368,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":54642,"byte_end":54645,"line_start":369,"line_end":369,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":54647,"byte_end":54660,"line_start":370,"line_end":370,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":54662,"byte_end":54665,"line_start":371,"line_end":371,"column_start":2,"column_end":5}},{"value":"/ `pos` wrapped in the `BitPos` marker type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":54667,"byte_end":54713,"line_start":372,"line_end":372,"column_start":2,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":54715,"byte_end":54718,"line_start":373,"line_end":373,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":54720,"byte_end":54732,"line_start":374,"line_end":374,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":54734,"byte_end":54737,"line_start":375,"line_end":375,"column_start":2,"column_end":5}},{"value":"/ This function panics if `pos` is greater than or equal to `T::BITS`, but","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":54739,"byte_end":54815,"line_start":376,"line_end":376,"column_start":2,"column_end":78}},{"value":"/ only in debug builds. It does not inspect `pos` in release builds.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":54817,"byte_end":54887,"line_start":377,"line_end":377,"column_start":2,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":54889,"byte_end":54892,"line_start":378,"line_end":378,"column_start":2,"column_end":5}},{"value":"/ [`::new`]: #method.new","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":54894,"byte_end":54920,"line_start":379,"line_end":379,"column_start":2,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":54951,"byte_end":54957,"line_start":380,"line_end":380,"column_start":31,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":55281,"byte_end":55286,"line_start":397,"line_end":397,"column_start":5,"column_end":10},"name":"deref","qualname":"<BitPos<T> as std::ops::Deref>::deref","value":"fn deref<'_>(&'_ Self) -> &'_ Self::Target","parent":{"krate":2,"index":3486},"children":[],"decl_id":{"krate":2,"index":3488},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3474},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":55816,"byte_end":55823,"line_start":415,"line_end":415,"column_start":12,"column_end":19},"name":"BitMask","qualname":"::indices::BitMask","value":"BitMask {  }","parent":null,"children":[{"krate":0,"index":3476}],"decl_id":null,"docs":" Wrapper type indicating a one-hot encoding of a bit mask for an element.","sig":null,"attributes":[{"value":"* Wrapper type indicating a one-hot encoding of a bit mask for an element.\n\nThis type is produced by [`BitOrder`] implementations to speed up access to the\nunderlying memory. It ensures that masks have exactly one set bit, and can\nsafely be used as a mask for read/write access to memory.\n\n# Type Parameters\n\n- `T`: The storage type being masked.\n\n[`BitOrder`]: ../order/trait.BitOrder.html\n**/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":55331,"byte_end":55727,"line_start":402,"line_end":413,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":56558,"byte_end":56561,"line_start":445,"line_end":445,"column_start":9,"column_end":12},"name":"new","qualname":"<BitMask<T>>::new","value":"fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Produce a new bit-mask wrapper around a one-hot mask value.","sig":null,"attributes":[{"value":"/ Produce a new bit-mask wrapper around a one-hot mask value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":55917,"byte_end":55980,"line_start":423,"line_end":423,"column_start":2,"column_end":65}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":55982,"byte_end":55985,"line_start":424,"line_end":424,"column_start":2,"column_end":5}},{"value":"/ `BitOrder` implementations should prefer this method, but *may* use","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":55987,"byte_end":56058,"line_start":425,"line_end":425,"column_start":2,"column_end":73}},{"value":"/ [`::new_unchecked`] if they can guarantee that the one-hot invariant is","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":56060,"byte_end":56135,"line_start":426,"line_end":426,"column_start":2,"column_end":77}},{"value":"/ upheld.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":56137,"byte_end":56148,"line_start":427,"line_end":427,"column_start":2,"column_end":13}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":56150,"byte_end":56153,"line_start":428,"line_end":428,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":56155,"byte_end":56171,"line_start":429,"line_end":429,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":56173,"byte_end":56176,"line_start":430,"line_end":430,"column_start":2,"column_end":5}},{"value":"/ - `mask`: The mask value to encode. This **must** have exactly one bit","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":56178,"byte_end":56252,"line_start":431,"line_end":431,"column_start":2,"column_end":76}},{"value":"/   set high, and all others set low.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":56254,"byte_end":56293,"line_start":432,"line_end":432,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":56295,"byte_end":56298,"line_start":433,"line_end":433,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":56300,"byte_end":56313,"line_start":434,"line_end":434,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":56315,"byte_end":56318,"line_start":435,"line_end":435,"column_start":2,"column_end":5}},{"value":"/ `mask` wrapped in the `BitMask` marker type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":56320,"byte_end":56368,"line_start":436,"line_end":436,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":56370,"byte_end":56373,"line_start":437,"line_end":437,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":56375,"byte_end":56387,"line_start":438,"line_end":438,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":56389,"byte_end":56392,"line_start":439,"line_end":439,"column_start":2,"column_end":5}},{"value":"/ This function unconditionally panics if `mask` has zero or multiple bits","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":56394,"byte_end":56470,"line_start":440,"line_end":440,"column_start":2,"column_end":78}},{"value":"/ set high.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":56472,"byte_end":56485,"line_start":441,"line_end":441,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":56487,"byte_end":56490,"line_start":442,"line_end":442,"column_start":2,"column_end":5}},{"value":"/ [`::new_unchecked`]: #method.new_unchecked","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":56492,"byte_end":56538,"line_start":443,"line_end":443,"column_start":2,"column_end":48}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":56540,"byte_end":56549,"line_start":444,"line_end":444,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":57552,"byte_end":57565,"line_start":480,"line_end":480,"column_start":16,"column_end":29},"name":"new_unchecked","qualname":"<BitMask<T>>::new_unchecked","value":"unsafe fn new_unchecked(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Produce a new bit-mask wrapper around any value.","sig":null,"attributes":[{"value":"/ Produce a new bit-mask wrapper around any value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":56738,"byte_end":56790,"line_start":455,"line_end":455,"column_start":2,"column_end":54}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":56792,"byte_end":56795,"line_start":456,"line_end":456,"column_start":2,"column_end":5}},{"value":"/ # Safety","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":56797,"byte_end":56809,"line_start":457,"line_end":457,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":56811,"byte_end":56814,"line_start":458,"line_end":458,"column_start":2,"column_end":5}},{"value":"/ The caller *must* ensure that `mask` has exactly one bit set. `BitOrder`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":56816,"byte_end":56892,"line_start":459,"line_end":459,"column_start":2,"column_end":78}},{"value":"/ implementations should prefer [`::new`], which always panics on failure.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":56894,"byte_end":56970,"line_start":460,"line_end":460,"column_start":2,"column_end":78}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":56972,"byte_end":56975,"line_start":461,"line_end":461,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":56977,"byte_end":56993,"line_start":462,"line_end":462,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":56995,"byte_end":56998,"line_start":463,"line_end":463,"column_start":2,"column_end":5}},{"value":"/ - `mask`: The mask value to encode. This must have exactly one bit set.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":57000,"byte_end":57075,"line_start":464,"line_end":464,"column_start":2,"column_end":77}},{"value":"/   Failure to uphold this requirement will introduce uncontrolled state","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":57077,"byte_end":57151,"line_start":465,"line_end":465,"column_start":2,"column_end":76}},{"value":"/   contamination.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":57153,"byte_end":57173,"line_start":466,"line_end":466,"column_start":2,"column_end":22}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":57175,"byte_end":57178,"line_start":467,"line_end":467,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":57180,"byte_end":57193,"line_start":468,"line_end":468,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":57195,"byte_end":57198,"line_start":469,"line_end":469,"column_start":2,"column_end":5}},{"value":"/ `mask` wrapped in the `BitMask` marker type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":57200,"byte_end":57248,"line_start":470,"line_end":470,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":57250,"byte_end":57253,"line_start":471,"line_end":471,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":57255,"byte_end":57267,"line_start":472,"line_end":472,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":57269,"byte_end":57272,"line_start":473,"line_end":473,"column_start":2,"column_end":5}},{"value":"/ This function panics if `mask` has zero or multiple bits set, only in","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":57274,"byte_end":57347,"line_start":474,"line_end":474,"column_start":2,"column_end":75}},{"value":"/ debug builds. It does not inspect `mask` in release builds.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":57349,"byte_end":57412,"line_start":475,"line_end":475,"column_start":2,"column_end":65}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":57414,"byte_end":57417,"line_start":476,"line_end":476,"column_start":2,"column_end":5}},{"value":"/ [`::new`]: #method.new","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":57419,"byte_end":57445,"line_start":477,"line_end":477,"column_start":2,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":57476,"byte_end":57482,"line_start":478,"line_end":478,"column_start":31,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":57821,"byte_end":57826,"line_start":495,"line_end":495,"column_start":5,"column_end":10},"name":"deref","qualname":"<BitMask<T> as std::ops::Deref>::deref","value":"fn deref<'_>(&'_ Self) -> &'_ Self::Target","parent":{"krate":2,"index":3486},"children":[],"decl_id":{"krate":2,"index":3488},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":193},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fields","qualname":"::fields","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","parent":null,"children":[{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":205},{"krate":0,"index":208},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":215},{"krate":0,"index":218},{"krate":0,"index":221},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":228},{"krate":0,"index":231},{"krate":0,"index":234},{"krate":0,"index":247},{"krate":0,"index":257},{"krate":0,"index":267},{"krate":0,"index":278},{"krate":0,"index":289},{"krate":0,"index":291}],"decl_id":null,"docs":" Parallel bitfield access.","sig":null,"attributes":[{"value":"* Parallel bitfield access.\n\nThis module provides parallel, multiple-bit, access to a `BitSlice`. This\nfunctionality permits the use of `BitSlice` as a library-level implementation of\nthe bitfield language feature found in C and C++.\n\nThe `BitField` trait is not sealed against client implementation, as there is no\nuseful way to automatically use a `Cursor` implementation to provide a universal\nbehavior. As such, the trait has some requirements that the compiler cannot\nenforce for client implementations.\n\n# Batch Behavior\n\nThe purpose of this trait is to provide access to arbitrary bit regions as if\nthey were an ordinary memory location. As such, it is important for\nimplementations of this trait to provide shift/mask register transfer behavior\nwhere possible, for as wide a span as possible in each action. Implementations\nof this trait should *not* use bit-by-bit iteration.\n\n# Register Bit Order Preservation\n\nAs a default assumption – user orderings *may* violate this, but *should* not –\neach element of slice memory used to store part of a value should not reorder\nthe value bits. Transfer between slice memory and a CPU register should solely\nbe an ordinary value load or store between memory and the register, and a\nshift/mask operation to select the part of the value that is live.\n\n# Endianness\n\nThe `_le` and `_be` methods of `BitField` refer to the order in which\n`T: BitStore` elements of the slice are assigned significance when containing\nfragments of a stored data value. Within any `T` element, the order of its\nconstituent bytes is *not* governed by the `BitField` trait method.\n\nThe provided `BitOrder` implementors `Lsb0` and `Msb0` use the local machine’s\nbyte ordering. Other cursors *may* implement ordering of bytes within `T`\nelements differently, for instance by calling `.to_be_bytes` before store and\n`from_be_bytes` after load,\n!*/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":59587,"byte_end":61463,"line_start":1,"line_end":39,"column_start":1,"column_end":4}}]},{"kind":"Trait","id":{"krate":0,"index":234},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":62667,"byte_end":62675,"line_start":84,"line_end":84,"column_start":11,"column_end":19},"name":"BitField","qualname":"::fields::BitField","value":"BitField","parent":null,"children":[{"krate":0,"index":235},{"krate":0,"index":237},{"krate":0,"index":239},{"krate":0,"index":241},{"krate":0,"index":243},{"krate":0,"index":245}],"decl_id":null,"docs":" Permit a specific `BitSlice` to be used for C-style bitfield access.","sig":null,"attributes":[{"value":"* Permit a specific `BitSlice` to be used for C-style bitfield access.\n\nOrders that permit batched access to regions of memory are enabled to load data\nfrom a `BitSlice` and store data to a `BitSlice` with faster behavior than the\ndefault bit-by-bit traversal.\n\nThis trait transfers data between a `BitSlice` and an element. The trait\nfunctions always place the live bit region against the least significant bit\nedge of the transfer element (return value for `load`, argument for `store`).\n\nImplementations are encouraged to preserve in-memory bit ordering, so that call\nsites can provide a value pattern that the user can clearly see matches what\nthey expect for memory ordering. These methods merely move data from a fixed\nlocation in an element to a variable location in the slice.\n\nMethods should be called as `bits[start .. end].load_or_store()`, where the\nrange subslice selects up to but no more than the `U::BITS` element width.\n**/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":61714,"byte_end":62656,"line_start":66,"line_end":83,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":63697,"byte_end":63701,"line_start":114,"line_end":114,"column_start":5,"column_end":9},"name":"load","qualname":"::fields::BitField::load","value":"fn load<U, '_>(&'_ Self) -> U where U: BitStore","parent":{"krate":0,"index":234},"children":[],"decl_id":null,"docs":" Load the sequence of bits from `self` into the least-significant bits of\n an element.","sig":null,"attributes":[{"value":"/ Load the sequence of bits from `self` into the least-significant bits of","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":62679,"byte_end":62755,"line_start":85,"line_end":85,"column_start":2,"column_end":78}},{"value":"/ an element.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":62757,"byte_end":62772,"line_start":86,"line_end":86,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":62774,"byte_end":62777,"line_start":87,"line_end":87,"column_start":2,"column_end":5}},{"value":"/ This can load any fundamental type which implements `BitStore`. Other","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":62779,"byte_end":62852,"line_start":88,"line_end":88,"column_start":2,"column_end":75}},{"value":"/ Rust fundamental types which do not implement it must be recast","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":62854,"byte_end":62921,"line_start":89,"line_end":89,"column_start":2,"column_end":69}},{"value":"/ appropriately by the user.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":62923,"byte_end":62953,"line_start":90,"line_end":90,"column_start":2,"column_end":32}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":62955,"byte_end":62958,"line_start":91,"line_end":91,"column_start":2,"column_end":5}},{"value":"/ The default implementation of this function calls [`load_le`] on","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":62960,"byte_end":63028,"line_start":92,"line_end":92,"column_start":2,"column_end":70}},{"value":"/ little-endian byte-ordered CPUs, and [`load_be`] on big-endian","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":63030,"byte_end":63096,"line_start":93,"line_end":93,"column_start":2,"column_end":68}},{"value":"/ byte-ordered CPUs.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":63098,"byte_end":63120,"line_start":94,"line_end":94,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":63122,"byte_end":63125,"line_start":95,"line_end":95,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":63127,"byte_end":63143,"line_start":96,"line_end":96,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":63145,"byte_end":63148,"line_start":97,"line_end":97,"column_start":2,"column_end":5}},{"value":"/ - `&self`: A read reference to some bits in memory. This slice must be","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":63150,"byte_end":63224,"line_start":98,"line_end":98,"column_start":2,"column_end":76}},{"value":"/   trimmed to have a width no more than the `U::BITS` width of the type","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":63226,"byte_end":63300,"line_start":99,"line_end":99,"column_start":2,"column_end":76}},{"value":"/   being loaded. This can be accomplished with range indexing on a larger","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":63302,"byte_end":63378,"line_start":100,"line_end":100,"column_start":2,"column_end":78}},{"value":"/   slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":63380,"byte_end":63392,"line_start":101,"line_end":101,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":63394,"byte_end":63397,"line_start":102,"line_end":102,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":63399,"byte_end":63412,"line_start":103,"line_end":103,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":63414,"byte_end":63417,"line_start":104,"line_end":104,"column_start":2,"column_end":5}},{"value":"/ A `U` value whose least `self.len()` significant bits are filled with","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":63419,"byte_end":63492,"line_start":105,"line_end":105,"column_start":2,"column_end":75}},{"value":"/ the bits of `self`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":63494,"byte_end":63517,"line_start":106,"line_end":106,"column_start":2,"column_end":25}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":63519,"byte_end":63522,"line_start":107,"line_end":107,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":63524,"byte_end":63536,"line_start":108,"line_end":108,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":63538,"byte_end":63541,"line_start":109,"line_end":109,"column_start":2,"column_end":5}},{"value":"/ If `self` is empty, or wider than a single `U` element, this panics.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":63543,"byte_end":63615,"line_start":110,"line_end":110,"column_start":2,"column_end":74}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":63617,"byte_end":63620,"line_start":111,"line_end":111,"column_start":2,"column_end":5}},{"value":"/ [`load_be`]: #tymethod.load_be","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":63622,"byte_end":63656,"line_start":112,"line_end":112,"column_start":2,"column_end":36}},{"value":"/ [`load_le`]: #tymethod.load_le","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":63658,"byte_end":63692,"line_start":113,"line_end":113,"column_start":2,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":64960,"byte_end":64967,"line_start":148,"line_end":148,"column_start":5,"column_end":12},"name":"load_le","qualname":"::fields::BitField::load_le","value":"fn load_le<U, '_>(&'_ Self) -> U where U: BitStore","parent":{"krate":0,"index":234},"children":[],"decl_id":null,"docs":" Load from `self`, using little-endian element ordering.","sig":null,"attributes":[{"value":"/ Load from `self`, using little-endian element ordering.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":63861,"byte_end":63920,"line_start":123,"line_end":123,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":63922,"byte_end":63925,"line_start":124,"line_end":124,"column_start":2,"column_end":5}},{"value":"/ This function interprets a multi-element slice as having its least","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":63927,"byte_end":63997,"line_start":125,"line_end":125,"column_start":2,"column_end":72}},{"value":"/ significant chunk in the low memory address, and its most significant","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":63999,"byte_end":64072,"line_start":126,"line_end":126,"column_start":2,"column_end":75}},{"value":"/ chunk in the high memory address. Each element `T` is still interpreted","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":64074,"byte_end":64149,"line_start":127,"line_end":127,"column_start":2,"column_end":77}},{"value":"/ from individual bytes according to the local CPU ordering.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":64151,"byte_end":64213,"line_start":128,"line_end":128,"column_start":2,"column_end":64}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":64215,"byte_end":64218,"line_start":129,"line_end":129,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":64220,"byte_end":64236,"line_start":130,"line_end":130,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":64238,"byte_end":64241,"line_start":131,"line_end":131,"column_start":2,"column_end":5}},{"value":"/ - `&self`: A read reference to some bits in memory. This slice must be","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":64243,"byte_end":64317,"line_start":132,"line_end":132,"column_start":2,"column_end":76}},{"value":"/   trimmed to have a width no more than the `U::BITS` width of the type","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":64319,"byte_end":64393,"line_start":133,"line_end":133,"column_start":2,"column_end":76}},{"value":"/   being loaded. This can be accomplished with range indexing on a larger","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":64395,"byte_end":64471,"line_start":134,"line_end":134,"column_start":2,"column_end":78}},{"value":"/   slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":64473,"byte_end":64485,"line_start":135,"line_end":135,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":64487,"byte_end":64490,"line_start":136,"line_end":136,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":64492,"byte_end":64505,"line_start":137,"line_end":137,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":64507,"byte_end":64510,"line_start":138,"line_end":138,"column_start":2,"column_end":5}},{"value":"/ A `U` value whose least `self.len()` significant bits are filled with","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":64512,"byte_end":64585,"line_start":139,"line_end":139,"column_start":2,"column_end":75}},{"value":"/ the bits of `self`. If `self` spans multiple `T` elements, then the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":64587,"byte_end":64658,"line_start":140,"line_end":140,"column_start":2,"column_end":73}},{"value":"/ lowest-address `T` is interpreted as containing the least significant","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":64660,"byte_end":64733,"line_start":141,"line_end":141,"column_start":2,"column_end":75}},{"value":"/ bits of the `U` return value, and the highest-address `T` is interpreted","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":64735,"byte_end":64811,"line_start":142,"line_end":142,"column_start":2,"column_end":78}},{"value":"/ as containing its most significant bits.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":64813,"byte_end":64857,"line_start":143,"line_end":143,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":64859,"byte_end":64862,"line_start":144,"line_end":144,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":64864,"byte_end":64876,"line_start":145,"line_end":145,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":64878,"byte_end":64881,"line_start":146,"line_end":146,"column_start":2,"column_end":5}},{"value":"/ If `self` is empty, or wider than a single `U` element, this panics.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":64883,"byte_end":64955,"line_start":147,"line_end":147,"column_start":2,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":66003,"byte_end":66010,"line_start":172,"line_end":172,"column_start":5,"column_end":12},"name":"load_be","qualname":"::fields::BitField::load_be","value":"fn load_be<U, '_>(&'_ Self) -> U where U: BitStore","parent":{"krate":0,"index":234},"children":[],"decl_id":null,"docs":" Load from `self`, using big-endian element ordering.","sig":null,"attributes":[{"value":"/ Load from `self`, using big-endian element ordering.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":65005,"byte_end":65061,"line_start":151,"line_end":151,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":65063,"byte_end":65066,"line_start":152,"line_end":152,"column_start":2,"column_end":5}},{"value":"/ This function interprets a multi-element slice as having its most","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":65068,"byte_end":65137,"line_start":153,"line_end":153,"column_start":2,"column_end":71}},{"value":"/ significant chunk in the low memory address, and its least significant","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":65139,"byte_end":65213,"line_start":154,"line_end":154,"column_start":2,"column_end":76}},{"value":"/ chunk in the high memory address. Each element `T` is still interpreted","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":65215,"byte_end":65290,"line_start":155,"line_end":155,"column_start":2,"column_end":77}},{"value":"/ from individual bytes according to the local CPU ordering.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":65292,"byte_end":65354,"line_start":156,"line_end":156,"column_start":2,"column_end":64}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":65356,"byte_end":65359,"line_start":157,"line_end":157,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":65361,"byte_end":65377,"line_start":158,"line_end":158,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":65379,"byte_end":65382,"line_start":159,"line_end":159,"column_start":2,"column_end":5}},{"value":"/ - `&self`: A read reference to some bits in memory. This slice must be","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":65384,"byte_end":65458,"line_start":160,"line_end":160,"column_start":2,"column_end":76}},{"value":"/   trimmed to have a width no more than the `U::BITS` width of the type","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":65460,"byte_end":65534,"line_start":161,"line_end":161,"column_start":2,"column_end":76}},{"value":"/   being loaded. This can be accomplished with range indexing on a larger","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":65536,"byte_end":65612,"line_start":162,"line_end":162,"column_start":2,"column_end":78}},{"value":"/   slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":65614,"byte_end":65626,"line_start":163,"line_end":163,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":65628,"byte_end":65631,"line_start":164,"line_end":164,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":65633,"byte_end":65646,"line_start":165,"line_end":165,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":65648,"byte_end":65651,"line_start":166,"line_end":166,"column_start":2,"column_end":5}},{"value":"/ A `U` value whose least `self.len()` significant bits are filled with","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":65653,"byte_end":65726,"line_start":167,"line_end":167,"column_start":2,"column_end":75}},{"value":"/ the bits of `self`. If `self` spans multiple `T` elements, then the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":65728,"byte_end":65799,"line_start":168,"line_end":168,"column_start":2,"column_end":73}},{"value":"/ lowest-address `T` is interpreted as containing the most significant","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":65801,"byte_end":65873,"line_start":169,"line_end":169,"column_start":2,"column_end":74}},{"value":"/ bits of the `U` return value, and the highest-address `T` is interpreted","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":65875,"byte_end":65951,"line_start":170,"line_end":170,"column_start":2,"column_end":78}},{"value":"/ as containing its least significant bits.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":65953,"byte_end":65998,"line_start":171,"line_end":171,"column_start":2,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":67158,"byte_end":67163,"line_start":205,"line_end":205,"column_start":5,"column_end":10},"name":"store","qualname":"::fields::BitField::store","value":"fn store<U, '_>(&'_ mut Self, U) where U: BitStore","parent":{"krate":0,"index":234},"children":[],"decl_id":null,"docs":" Stores a sequence of bits from the user into the domain of `self`.","sig":null,"attributes":[{"value":"/ Stores a sequence of bits from the user into the domain of `self`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":66048,"byte_end":66118,"line_start":175,"line_end":175,"column_start":2,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":66120,"byte_end":66123,"line_start":176,"line_end":176,"column_start":2,"column_end":5}},{"value":"/ This can store any fundamental type which implements `BitStore`. Other","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":66125,"byte_end":66199,"line_start":177,"line_end":177,"column_start":2,"column_end":76}},{"value":"/ Rust fundamental types which do not implement it must be recast","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":66201,"byte_end":66268,"line_start":178,"line_end":178,"column_start":2,"column_end":69}},{"value":"/ appropriately by the user.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":66270,"byte_end":66300,"line_start":179,"line_end":179,"column_start":2,"column_end":32}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":66302,"byte_end":66305,"line_start":180,"line_end":180,"column_start":2,"column_end":5}},{"value":"/ The default implementation of this function calls [`store_le`] on","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":66307,"byte_end":66376,"line_start":181,"line_end":181,"column_start":2,"column_end":71}},{"value":"/ little-endian byte-ordered CPUs, and [`store_be`] on big-endian","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":66378,"byte_end":66445,"line_start":182,"line_end":182,"column_start":2,"column_end":69}},{"value":"/ byte-ordered CPUs.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":66447,"byte_end":66469,"line_start":183,"line_end":183,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":66471,"byte_end":66474,"line_start":184,"line_end":184,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":66476,"byte_end":66492,"line_start":185,"line_end":185,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":66494,"byte_end":66497,"line_start":186,"line_end":186,"column_start":2,"column_end":5}},{"value":"/ - `&mut self`: A write reference to some bits in memory. This slice must","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":66499,"byte_end":66575,"line_start":187,"line_end":187,"column_start":2,"column_end":78}},{"value":"/   be trimmed to have a width no more than the `U::BITS` width of the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":66577,"byte_end":66649,"line_start":188,"line_end":188,"column_start":2,"column_end":74}},{"value":"/   type being stored. This can be accomplished with range indexing on a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":66651,"byte_end":66725,"line_start":189,"line_end":189,"column_start":2,"column_end":76}},{"value":"/   larger slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":66727,"byte_end":66746,"line_start":190,"line_end":190,"column_start":2,"column_end":21}},{"value":"/ - `value`: A value, whose `self.len()` least significant bits will be","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":66748,"byte_end":66821,"line_start":191,"line_end":191,"column_start":2,"column_end":75}},{"value":"/   stored into `self`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":66823,"byte_end":66848,"line_start":192,"line_end":192,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":66850,"byte_end":66853,"line_start":193,"line_end":193,"column_start":2,"column_end":5}},{"value":"/ # Behavior","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":66855,"byte_end":66869,"line_start":194,"line_end":194,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":66871,"byte_end":66874,"line_start":195,"line_end":195,"column_start":2,"column_end":5}},{"value":"/ The `self.len()` least significant bits of `value` are written into the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":66876,"byte_end":66951,"line_start":196,"line_end":196,"column_start":2,"column_end":77}},{"value":"/ domain of `self`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":66953,"byte_end":66974,"line_start":197,"line_end":197,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":66976,"byte_end":66979,"line_start":198,"line_end":198,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":66981,"byte_end":66993,"line_start":199,"line_end":199,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":66995,"byte_end":66998,"line_start":200,"line_end":200,"column_start":2,"column_end":5}},{"value":"/ If `self` is empty, or wider than a single `U` element, this panics.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":67000,"byte_end":67072,"line_start":201,"line_end":201,"column_start":2,"column_end":74}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":67074,"byte_end":67077,"line_start":202,"line_end":202,"column_start":2,"column_end":5}},{"value":"/ [`store_be`]: #tymethod.store_be","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":67079,"byte_end":67115,"line_start":203,"line_end":203,"column_start":2,"column_end":38}},{"value":"/ [`store_le`]: #tymethod.store_le","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":67117,"byte_end":67153,"line_start":204,"line_end":204,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":68538,"byte_end":68546,"line_start":241,"line_end":241,"column_start":5,"column_end":13},"name":"store_le","qualname":"::fields::BitField::store_le","value":"fn store_le<U, '_>(&'_ mut Self, U) where U: BitStore","parent":{"krate":0,"index":234},"children":[],"decl_id":null,"docs":" Store into `self`, using little-endian element ordering.","sig":null,"attributes":[{"value":"/ Store into `self`, using little-endian element ordering.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":67330,"byte_end":67390,"line_start":214,"line_end":214,"column_start":2,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":67392,"byte_end":67395,"line_start":215,"line_end":215,"column_start":2,"column_end":5}},{"value":"/ This function interprets a multi-element slice as having its least","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":67397,"byte_end":67467,"line_start":216,"line_end":216,"column_start":2,"column_end":72}},{"value":"/ significant chunk in the low memory address, and its most significant","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":67469,"byte_end":67542,"line_start":217,"line_end":217,"column_start":2,"column_end":75}},{"value":"/ chunk in the high memory address. Each element `T` is still interpreted","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":67544,"byte_end":67619,"line_start":218,"line_end":218,"column_start":2,"column_end":77}},{"value":"/ from individual bytes according to the local CPU ordering.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":67621,"byte_end":67683,"line_start":219,"line_end":219,"column_start":2,"column_end":64}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":67685,"byte_end":67688,"line_start":220,"line_end":220,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":67690,"byte_end":67706,"line_start":221,"line_end":221,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":67708,"byte_end":67711,"line_start":222,"line_end":222,"column_start":2,"column_end":5}},{"value":"/ - `&mut self`: A write reference to some bits in memory. This slice must","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":67713,"byte_end":67789,"line_start":223,"line_end":223,"column_start":2,"column_end":78}},{"value":"/   be trimmed to have a width no more than the `U::BITS` width of the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":67791,"byte_end":67863,"line_start":224,"line_end":224,"column_start":2,"column_end":74}},{"value":"/   type being stored. This can be accomplished with range indexing on a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":67865,"byte_end":67939,"line_start":225,"line_end":225,"column_start":2,"column_end":76}},{"value":"/   larger slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":67941,"byte_end":67960,"line_start":226,"line_end":226,"column_start":2,"column_end":21}},{"value":"/ - `value`: A value, whose `self.len()` least significant bits will be","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":67962,"byte_end":68035,"line_start":227,"line_end":227,"column_start":2,"column_end":75}},{"value":"/   stored into `self`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":68037,"byte_end":68062,"line_start":228,"line_end":228,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":68064,"byte_end":68067,"line_start":229,"line_end":229,"column_start":2,"column_end":5}},{"value":"/ # Behavior","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":68069,"byte_end":68083,"line_start":230,"line_end":230,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":68085,"byte_end":68088,"line_start":231,"line_end":231,"column_start":2,"column_end":5}},{"value":"/ The `self.len()` least significant bits of `value` are written into the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":68090,"byte_end":68165,"line_start":232,"line_end":232,"column_start":2,"column_end":77}},{"value":"/ domain of `self`. If `self` spans multiple `T` elements, then the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":68167,"byte_end":68236,"line_start":233,"line_end":233,"column_start":2,"column_end":71}},{"value":"/ lowest-address `T` is interpreted as containing the least significant","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":68238,"byte_end":68311,"line_start":234,"line_end":234,"column_start":2,"column_end":75}},{"value":"/ bits of the `U` return value, and the highest-address `T` is interpreted","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":68313,"byte_end":68389,"line_start":235,"line_end":235,"column_start":2,"column_end":78}},{"value":"/ as containing its most significant bits.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":68391,"byte_end":68435,"line_start":236,"line_end":236,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":68437,"byte_end":68440,"line_start":237,"line_end":237,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":68442,"byte_end":68454,"line_start":238,"line_end":238,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":68456,"byte_end":68459,"line_start":239,"line_end":239,"column_start":2,"column_end":5}},{"value":"/ If `self` is empty, or wider than a single `U` element, this panics.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":68461,"byte_end":68533,"line_start":240,"line_end":240,"column_start":2,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":69798,"byte_end":69806,"line_start":271,"line_end":271,"column_start":5,"column_end":13},"name":"store_be","qualname":"::fields::BitField::store_be","value":"fn store_be<U, '_>(&'_ mut Self, U) where U: BitStore","parent":{"krate":0,"index":234},"children":[],"decl_id":null,"docs":" Store into `self`, using big-endian element ordering.","sig":null,"attributes":[{"value":"/ Store into `self`, using big-endian element ordering.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":68593,"byte_end":68650,"line_start":244,"line_end":244,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":68652,"byte_end":68655,"line_start":245,"line_end":245,"column_start":2,"column_end":5}},{"value":"/ This function interprets a multi-element slice as having its most","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":68657,"byte_end":68726,"line_start":246,"line_end":246,"column_start":2,"column_end":71}},{"value":"/ significant chunk in the low memory address, and its least significant","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":68728,"byte_end":68802,"line_start":247,"line_end":247,"column_start":2,"column_end":76}},{"value":"/ chunk in the high memory address. Each element `T` is still interpreted","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":68804,"byte_end":68879,"line_start":248,"line_end":248,"column_start":2,"column_end":77}},{"value":"/ from individual bytes according to the local CPU ordering.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":68881,"byte_end":68943,"line_start":249,"line_end":249,"column_start":2,"column_end":64}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":68945,"byte_end":68948,"line_start":250,"line_end":250,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":68950,"byte_end":68966,"line_start":251,"line_end":251,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":68968,"byte_end":68971,"line_start":252,"line_end":252,"column_start":2,"column_end":5}},{"value":"/ - `&mut self`: A write reference to some bits in memory. This slice must","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":68973,"byte_end":69049,"line_start":253,"line_end":253,"column_start":2,"column_end":78}},{"value":"/   be trimmed to have a width no more than the `U::BITS` width of the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":69051,"byte_end":69123,"line_start":254,"line_end":254,"column_start":2,"column_end":74}},{"value":"/   type being stored. This can be accomplished with range indexing on a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":69125,"byte_end":69199,"line_start":255,"line_end":255,"column_start":2,"column_end":76}},{"value":"/   larger slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":69201,"byte_end":69220,"line_start":256,"line_end":256,"column_start":2,"column_end":21}},{"value":"/ - `value`: A value, whose `self.len()` least significant bits will be","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":69222,"byte_end":69295,"line_start":257,"line_end":257,"column_start":2,"column_end":75}},{"value":"/   stored into `self`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":69297,"byte_end":69322,"line_start":258,"line_end":258,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":69324,"byte_end":69327,"line_start":259,"line_end":259,"column_start":2,"column_end":5}},{"value":"/ # Behavior","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":69329,"byte_end":69343,"line_start":260,"line_end":260,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":69345,"byte_end":69348,"line_start":261,"line_end":261,"column_start":2,"column_end":5}},{"value":"/ The `self.len()` least significant bits of `value` are written into the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":69350,"byte_end":69425,"line_start":262,"line_end":262,"column_start":2,"column_end":77}},{"value":"/ domain of `self`. If `self` spans multiple `T` elements, then the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":69427,"byte_end":69496,"line_start":263,"line_end":263,"column_start":2,"column_end":71}},{"value":"/ lowest-address `T` is interpreted as containing the most significant","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":69498,"byte_end":69570,"line_start":264,"line_end":264,"column_start":2,"column_end":74}},{"value":"/ bits of the `U` return value, and the highest-address `T` is interpreted","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":69572,"byte_end":69648,"line_start":265,"line_end":265,"column_start":2,"column_end":78}},{"value":"/ as containing its least significant bits.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":69650,"byte_end":69695,"line_start":266,"line_end":266,"column_start":2,"column_end":47}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":69697,"byte_end":69700,"line_start":267,"line_end":267,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":69702,"byte_end":69714,"line_start":268,"line_end":268,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":69716,"byte_end":69719,"line_start":269,"line_end":269,"column_start":2,"column_end":5}},{"value":"/ If `self` is empty, or wider than a single `U` element, this panics.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":69721,"byte_end":69793,"line_start":270,"line_end":270,"column_start":2,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":69917,"byte_end":69924,"line_start":277,"line_end":277,"column_start":5,"column_end":12},"name":"load_le","qualname":"<BitSlice<Lsb0, T> as fields::BitField>::load_le","value":"fn load_le<U, '_>(&'_ Self) -> U where U: BitStore","parent":{"krate":0,"index":234},"children":[],"decl_id":{"krate":0,"index":237},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":72004,"byte_end":72011,"line_start":338,"line_end":338,"column_start":5,"column_end":12},"name":"load_be","qualname":"<BitSlice<Lsb0, T> as fields::BitField>::load_be","value":"fn load_be<U, '_>(&'_ Self) -> U where U: BitStore","parent":{"krate":0,"index":234},"children":[],"decl_id":{"krate":0,"index":239},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":74009,"byte_end":74017,"line_start":398,"line_end":398,"column_start":5,"column_end":13},"name":"store_le","qualname":"<BitSlice<Lsb0, T> as fields::BitField>::store_le","value":"fn store_le<U, '_>(&'_ mut Self, U) where U: BitStore","parent":{"krate":0,"index":234},"children":[],"decl_id":{"krate":0,"index":243},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":76565,"byte_end":76573,"line_start":470,"line_end":470,"column_start":5,"column_end":13},"name":"store_be","qualname":"<BitSlice<Lsb0, T> as fields::BitField>::store_be","value":"fn store_be<U, '_>(&'_ mut Self, U) where U: BitStore","parent":{"krate":0,"index":234},"children":[],"decl_id":{"krate":0,"index":245},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":78861,"byte_end":78868,"line_start":538,"line_end":538,"column_start":5,"column_end":12},"name":"load_le","qualname":"<BitSlice<Msb0, T> as fields::BitField>::load_le","value":"fn load_le<U, '_>(&'_ Self) -> U where U: BitStore","parent":{"krate":0,"index":234},"children":[],"decl_id":{"krate":0,"index":237},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":80956,"byte_end":80963,"line_start":599,"line_end":599,"column_start":5,"column_end":12},"name":"load_be","qualname":"<BitSlice<Msb0, T> as fields::BitField>::load_be","value":"fn load_be<U, '_>(&'_ Self) -> U where U: BitStore","parent":{"krate":0,"index":234},"children":[],"decl_id":{"krate":0,"index":239},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":83052,"byte_end":83060,"line_start":660,"line_end":660,"column_start":5,"column_end":13},"name":"store_le","qualname":"<BitSlice<Msb0, T> as fields::BitField>::store_le","value":"fn store_le<U, '_>(&'_ mut Self, U) where U: BitStore","parent":{"krate":0,"index":234},"children":[],"decl_id":{"krate":0,"index":243},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":85627,"byte_end":85635,"line_start":732,"line_end":732,"column_start":5,"column_end":13},"name":"store_be","qualname":"<BitSlice<Msb0, T> as fields::BitField>::store_be","value":"fn store_be<U, '_>(&'_ mut Self, U) where U: BitStore","parent":{"krate":0,"index":234},"children":[],"decl_id":{"krate":0,"index":245},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":88333,"byte_end":88340,"line_start":808,"line_end":808,"column_start":5,"column_end":12},"name":"load_le","qualname":"<BitBox<O, T> as fields::BitField>::load_le","value":"fn load_le<U, '_>(&'_ Self) -> U where U: BitStore","parent":{"krate":0,"index":234},"children":[],"decl_id":{"krate":0,"index":237},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":88416,"byte_end":88423,"line_start":813,"line_end":813,"column_start":5,"column_end":12},"name":"load_be","qualname":"<BitBox<O, T> as fields::BitField>::load_be","value":"fn load_be<U, '_>(&'_ Self) -> U where U: BitStore","parent":{"krate":0,"index":234},"children":[],"decl_id":{"krate":0,"index":239},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":88499,"byte_end":88507,"line_start":818,"line_end":818,"column_start":5,"column_end":13},"name":"store_le","qualname":"<BitBox<O, T> as fields::BitField>::store_le","value":"fn store_le<U, '_>(&'_ mut Self, U) where U: BitStore","parent":{"krate":0,"index":234},"children":[],"decl_id":{"krate":0,"index":243},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":88602,"byte_end":88610,"line_start":823,"line_end":823,"column_start":5,"column_end":13},"name":"store_be","qualname":"<BitBox<O, T> as fields::BitField>::store_be","value":"fn store_be<U, '_>(&'_ mut Self, U) where U: BitStore","parent":{"krate":0,"index":234},"children":[],"decl_id":{"krate":0,"index":245},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":88829,"byte_end":88836,"line_start":832,"line_end":832,"column_start":5,"column_end":12},"name":"load_le","qualname":"<BitVec<O, T> as fields::BitField>::load_le","value":"fn load_le<U, '_>(&'_ Self) -> U where U: BitStore","parent":{"krate":0,"index":234},"children":[],"decl_id":{"krate":0,"index":237},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":88912,"byte_end":88919,"line_start":837,"line_end":837,"column_start":5,"column_end":12},"name":"load_be","qualname":"<BitVec<O, T> as fields::BitField>::load_be","value":"fn load_be<U, '_>(&'_ Self) -> U where U: BitStore","parent":{"krate":0,"index":234},"children":[],"decl_id":{"krate":0,"index":239},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":88995,"byte_end":89003,"line_start":842,"line_end":842,"column_start":5,"column_end":13},"name":"store_le","qualname":"<BitVec<O, T> as fields::BitField>::store_le","value":"fn store_le<U, '_>(&'_ mut Self, U) where U: BitStore","parent":{"krate":0,"index":234},"children":[],"decl_id":{"krate":0,"index":243},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":89098,"byte_end":89106,"line_start":847,"line_end":847,"column_start":5,"column_end":13},"name":"store_be","qualname":"<BitVec<O, T> as fields::BitField>::store_be","value":"fn store_be<U, '_>(&'_ mut Self, U) where U: BitStore","parent":{"krate":0,"index":234},"children":[],"decl_id":{"krate":0,"index":245},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":294},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"order","qualname":"::order","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","parent":null,"children":[{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":300},{"krate":0,"index":303},{"krate":0,"index":306},{"krate":0,"index":309},{"krate":0,"index":3509},{"krate":0,"index":3511},{"krate":0,"index":3513},{"krate":0,"index":3514},{"krate":0,"index":3516},{"krate":0,"index":3517},{"krate":0,"index":3519},{"krate":0,"index":3520},{"krate":0,"index":3522},{"krate":0,"index":3524},{"krate":0,"index":3526},{"krate":0,"index":3527},{"krate":0,"index":3529},{"krate":0,"index":3530},{"krate":0,"index":3532},{"krate":0,"index":3533},{"krate":0,"index":312},{"krate":0,"index":318},{"krate":0,"index":324},{"krate":0,"index":330}],"decl_id":null,"docs":" Bit Ordering","sig":null,"attributes":[{"value":"* Bit Ordering\n\n`bitvec` structures are parametric over any ordering of bits within an element.\nThe `BitOrder` trait maps a cursor position (indicated by the `BitIdx` type) to an\nelectrical position (indicated by the `BitPos` type) within that element, and\nalso defines the order of traversal over an element.\n\nThe only requirement on implementors of `BitOrder` is that the transform function\nfrom cursor (`BitIdx`) to position (`BitPos`) is *total* (every integer in the\ndomain `0 .. T::BITS` is used) and *unique* (each cursor maps to one and only\none position, and each position is mapped by one and only one cursor).\nContiguity is not required.\n\n`BitOrder` is a stateless trait, and implementors should be zero-sized types.\n!*/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":96631,"byte_end":97364,"line_start":1,"line_end":15,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":3509},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":97567,"byte_end":97571,"line_start":29,"line_end":29,"column_start":12,"column_end":16},"name":"Msb0","qualname":"::order::Msb0","value":"","parent":null,"children":[],"decl_id":null,"docs":" Traverses an element from `MSbit` to `LSbit`.\n","sig":null,"attributes":[{"value":"/ Traverses an element from `MSbit` to `LSbit`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":97461,"byte_end":97510,"line_start":27,"line_end":27,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":3522},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":97680,"byte_end":97684,"line_start":33,"line_end":33,"column_start":12,"column_end":16},"name":"Lsb0","qualname":"::order::Lsb0","value":"","parent":null,"children":[],"decl_id":null,"docs":" Traverses an element from `LSbit` to `MSbit`.\n","sig":null,"attributes":[{"value":"/ Traverses an element from `LSbit` to `MSbit`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":97574,"byte_end":97623,"line_start":31,"line_end":31,"column_start":1,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":312},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":97933,"byte_end":97941,"line_start":43,"line_end":43,"column_start":11,"column_end":19},"name":"BitOrder","qualname":"::order::BitOrder","value":"BitOrder","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":316}],"decl_id":null,"docs":" An ordering over an element.","sig":null,"attributes":[{"value":"* An ordering over an element.\n\n# Usage\n\n`bitvec` structures store and operate on semantic counts, not bit positions. The\n`BitOrder::at` function takes a semantic ordering, `BitIdx`, and produces an\nelectrical position, `BitPos`.\n**/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":97687,"byte_end":97922,"line_start":35,"line_end":42,"column_start":1,"column_end":4}}]},{"kind":"Const","id":{"krate":0,"index":313},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":98008,"byte_end":98016,"line_start":45,"line_end":45,"column_start":8,"column_end":16},"name":"TYPENAME","qualname":"::order::BitOrder::TYPENAME","value":"&'static str","parent":{"krate":0,"index":312},"children":[],"decl_id":null,"docs":" Name of the ordering type, for use in text display.\n","sig":null,"attributes":[{"value":"/ Name of the ordering type, for use in text display.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":97945,"byte_end":98000,"line_start":44,"line_end":44,"column_start":2,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":100196,"byte_end":100198,"line_start":99,"line_end":99,"column_start":5,"column_end":7},"name":"at","qualname":"::order::BitOrder::at","value":"fn at<T>(BitIdx<T>) -> BitPos<T> where T: BitStore","parent":{"krate":0,"index":312},"children":[],"decl_id":null,"docs":" Translate a semantic bit index into an electrical bit position.","sig":null,"attributes":[{"value":"/ Translate a semantic bit index into an electrical bit position.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":98034,"byte_end":98101,"line_start":47,"line_end":47,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":98103,"byte_end":98106,"line_start":48,"line_end":48,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":98108,"byte_end":98124,"line_start":49,"line_end":49,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":98126,"byte_end":98129,"line_start":50,"line_end":50,"column_start":2,"column_end":5}},{"value":"/ - `place`: The semantic bit value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":98131,"byte_end":98169,"line_start":51,"line_end":51,"column_start":2,"column_end":40}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":98171,"byte_end":98174,"line_start":52,"line_end":52,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":98176,"byte_end":98189,"line_start":53,"line_end":53,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":98191,"byte_end":98194,"line_start":54,"line_end":54,"column_start":2,"column_end":5}},{"value":"/ - A concrete position. This value can be used for shifting and masking","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":98196,"byte_end":98270,"line_start":55,"line_end":55,"column_start":2,"column_end":76}},{"value":"/   to extract a bit from an element. This must be in the domain","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":98272,"byte_end":98338,"line_start":56,"line_end":56,"column_start":2,"column_end":68}},{"value":"/   `0 .. T::BITS`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":98340,"byte_end":98361,"line_start":57,"line_end":57,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":98363,"byte_end":98366,"line_start":58,"line_end":58,"column_start":2,"column_end":5}},{"value":"/ # Type Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":98368,"byte_end":98389,"line_start":59,"line_end":59,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":98391,"byte_end":98394,"line_start":60,"line_end":60,"column_start":2,"column_end":5}},{"value":"/ - `T: BitStore`: The storage type for which the position will be","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":98396,"byte_end":98464,"line_start":61,"line_end":61,"column_start":2,"column_end":70}},{"value":"/   calculated.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":98466,"byte_end":98483,"line_start":62,"line_end":62,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":98485,"byte_end":98488,"line_start":63,"line_end":63,"column_start":2,"column_end":5}},{"value":"/ # Invariants","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":98490,"byte_end":98506,"line_start":64,"line_end":64,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":98508,"byte_end":98511,"line_start":65,"line_end":65,"column_start":2,"column_end":5}},{"value":"/ The function **must** be *total* for the domain `.. T::BITS`. All values","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":98513,"byte_end":98589,"line_start":66,"line_end":66,"column_start":2,"column_end":78}},{"value":"/ in this domain are valid indices that the library will pass to it, and","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":98591,"byte_end":98665,"line_start":67,"line_end":67,"column_start":2,"column_end":76}},{"value":"/ which this function must satisfy.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":98667,"byte_end":98704,"line_start":68,"line_end":68,"column_start":2,"column_end":39}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":98706,"byte_end":98709,"line_start":69,"line_end":69,"column_start":2,"column_end":5}},{"value":"/ The function **must** be *bijective* over the domain `.. T::BITS`. All","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":98711,"byte_end":98785,"line_start":70,"line_end":70,"column_start":2,"column_end":76}},{"value":"/ input values in this domain must have one and only one correpsonding","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":98787,"byte_end":98859,"line_start":71,"line_end":71,"column_start":2,"column_end":74}},{"value":"/ output, which must also be in this domain.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":98861,"byte_end":98907,"line_start":72,"line_end":72,"column_start":2,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":98909,"byte_end":98912,"line_start":73,"line_end":73,"column_start":2,"column_end":5}},{"value":"/ The function *may* support input in the domain `T::BITS ..`. The library","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":98914,"byte_end":98990,"line_start":74,"line_end":74,"column_start":2,"column_end":78}},{"value":"/ will not produce any values in this domain as input indices. The","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":98992,"byte_end":99060,"line_start":75,"line_end":75,"column_start":2,"column_end":70}},{"value":"/ function **must not** produce output in the domain `T::BITS ..`. It must","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":99062,"byte_end":99138,"line_start":76,"line_end":76,"column_start":2,"column_end":78}},{"value":"/ choose between panicking, or producing an output in `.. T::BITS`. The","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":99140,"byte_end":99213,"line_start":77,"line_end":77,"column_start":2,"column_end":75}},{"value":"/ reduction in domain from `T::BITS ..` to `.. T::BITS` removes the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":99215,"byte_end":99284,"line_start":78,"line_end":78,"column_start":2,"column_end":71}},{"value":"/ requirement for inputs in `T::BITS ..` to have unique outputs in","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":99286,"byte_end":99354,"line_start":79,"line_end":79,"column_start":2,"column_end":70}},{"value":"/ `.. T::BITS`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":99356,"byte_end":99373,"line_start":80,"line_end":80,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":99375,"byte_end":99378,"line_start":81,"line_end":81,"column_start":2,"column_end":5}},{"value":"/ This function **must** be *pure*. Calls which have the same input must","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":99380,"byte_end":99454,"line_start":82,"line_end":82,"column_start":2,"column_end":76}},{"value":"/ produce the same output. This invariant is only required to be upheld","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":99456,"byte_end":99529,"line_start":83,"line_end":83,"column_start":2,"column_end":75}},{"value":"/ for the lifetime of all data structures which use an implementor. The","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":99531,"byte_end":99604,"line_start":84,"line_end":84,"column_start":2,"column_end":75}},{"value":"/ behavior of the function *may* be modified after all existing dependent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":99606,"byte_end":99681,"line_start":85,"line_end":85,"column_start":2,"column_end":77}},{"value":"/ data structures are destroyed and before any new dependent data","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":99683,"byte_end":99750,"line_start":86,"line_end":86,"column_start":2,"column_end":69}},{"value":"/ structures are created.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":99752,"byte_end":99779,"line_start":87,"line_end":87,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":99781,"byte_end":99784,"line_start":88,"line_end":88,"column_start":2,"column_end":5}},{"value":"/ # Non-Invariants","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":99786,"byte_end":99806,"line_start":89,"line_end":89,"column_start":2,"column_end":22}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":99808,"byte_end":99811,"line_start":90,"line_end":90,"column_start":2,"column_end":5}},{"value":"/ This function is *not* required to be stateless. It *may* refer to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":99813,"byte_end":99883,"line_start":91,"line_end":91,"column_start":2,"column_end":72}},{"value":"/ immutable global state, subject to the purity requirement on lifetimes.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":99885,"byte_end":99960,"line_start":92,"line_end":92,"column_start":2,"column_end":77}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":99962,"byte_end":99965,"line_start":93,"line_end":93,"column_start":2,"column_end":5}},{"value":"/ # Safety","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":99967,"byte_end":99979,"line_start":94,"line_end":94,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":99981,"byte_end":99984,"line_start":95,"line_end":95,"column_start":2,"column_end":5}},{"value":"/ This function requires that the output be in the domain `.. T::BITS`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":99986,"byte_end":100059,"line_start":96,"line_end":96,"column_start":2,"column_end":75}},{"value":"/ Implementors must uphold this themselves. Outputs in the domain","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":100061,"byte_end":100128,"line_start":97,"line_end":97,"column_start":2,"column_end":69}},{"value":"/ `T::BITS ..` will induce panics elsewhere in the library.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":100130,"byte_end":100191,"line_start":98,"line_end":98,"column_start":2,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":101768,"byte_end":101772,"line_start":141,"line_end":141,"column_start":5,"column_end":9},"name":"mask","qualname":"::order::BitOrder::mask","value":"fn mask<T>(BitIdx<T>) -> BitMask<T> where T: BitStore","parent":{"krate":0,"index":312},"children":[],"decl_id":null,"docs":" Translate a semantic bit index into an electrical bit mask.","sig":null,"attributes":[{"value":"/ Translate a semantic bit index into an electrical bit mask.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":100255,"byte_end":100318,"line_start":102,"line_end":102,"column_start":2,"column_end":65}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":100320,"byte_end":100323,"line_start":103,"line_end":103,"column_start":2,"column_end":5}},{"value":"/ This is an optional function; a default implementation is provided for","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":100325,"byte_end":100399,"line_start":104,"line_end":104,"column_start":2,"column_end":76}},{"value":"/ you.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":100401,"byte_end":100409,"line_start":105,"line_end":105,"column_start":2,"column_end":10}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":100411,"byte_end":100414,"line_start":106,"line_end":106,"column_start":2,"column_end":5}},{"value":"/ The default implementation of this function calls `Self::at` to produce","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":100416,"byte_end":100491,"line_start":107,"line_end":107,"column_start":2,"column_end":77}},{"value":"/ an electrical position, then turns that into a bitmask by setting the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":100493,"byte_end":100566,"line_start":108,"line_end":108,"column_start":2,"column_end":75}},{"value":"/ `n`th bit more significant than the least significant bit of the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":100568,"byte_end":100636,"line_start":109,"line_end":109,"column_start":2,"column_end":70}},{"value":"/ element. `BitOrder` implementations may choose to provide a faster mask","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":100638,"byte_end":100713,"line_start":110,"line_end":110,"column_start":2,"column_end":77}},{"value":"/ production here, but they must satisfy the invariants listed below.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":100715,"byte_end":100786,"line_start":111,"line_end":111,"column_start":2,"column_end":73}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":100788,"byte_end":100791,"line_start":112,"line_end":112,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":100793,"byte_end":100809,"line_start":113,"line_end":113,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":100811,"byte_end":100814,"line_start":114,"line_end":114,"column_start":2,"column_end":5}},{"value":"/ - `place`: A semantic bit index into a memory element.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":100816,"byte_end":100874,"line_start":115,"line_end":115,"column_start":2,"column_end":60}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":100876,"byte_end":100879,"line_start":116,"line_end":116,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":100881,"byte_end":100894,"line_start":117,"line_end":117,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":100896,"byte_end":100899,"line_start":118,"line_end":118,"column_start":2,"column_end":5}},{"value":"/ A one-hot encoding of the provided `BitOrder`’s electrical position in the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":100901,"byte_end":100981,"line_start":119,"line_end":119,"column_start":2,"column_end":80}},{"value":"/ `T` element.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":100983,"byte_end":100999,"line_start":120,"line_end":120,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":101001,"byte_end":101004,"line_start":121,"line_end":121,"column_start":2,"column_end":5}},{"value":"/ # Type Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":101006,"byte_end":101027,"line_start":122,"line_end":122,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":101029,"byte_end":101032,"line_start":123,"line_end":123,"column_start":2,"column_end":5}},{"value":"/ - `T`: The storage type for which the mask will be calculated. The mask","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":101034,"byte_end":101109,"line_start":124,"line_end":124,"column_start":2,"column_end":77}},{"value":"/   must also be this type, as it will be applied to an element of `T` in","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":101111,"byte_end":101186,"line_start":125,"line_end":125,"column_start":2,"column_end":77}},{"value":"/   order to set, clear, or test a single bit.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":101188,"byte_end":101236,"line_start":126,"line_end":126,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":101238,"byte_end":101241,"line_start":127,"line_end":127,"column_start":2,"column_end":5}},{"value":"/ # Invariants","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":101243,"byte_end":101259,"line_start":128,"line_end":128,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":101261,"byte_end":101264,"line_start":129,"line_end":129,"column_start":2,"column_end":5}},{"value":"/ A one-hot encoding means that there is exactly one bit set in the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":101266,"byte_end":101335,"line_start":130,"line_end":130,"column_start":2,"column_end":71}},{"value":"/ produced value. It must be equivalent to `1 << *Self::at(place)`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":101337,"byte_end":101406,"line_start":131,"line_end":131,"column_start":2,"column_end":71}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":101408,"byte_end":101411,"line_start":132,"line_end":132,"column_start":2,"column_end":5}},{"value":"/ As with `at`, this function must produce a unique mapping from each","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":101413,"byte_end":101484,"line_start":133,"line_end":133,"column_start":2,"column_end":73}},{"value":"/ legal index in the `T` domain to a one-hot value of `T`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":101486,"byte_end":101546,"line_start":134,"line_end":134,"column_start":2,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":101548,"byte_end":101551,"line_start":135,"line_end":135,"column_start":2,"column_end":5}},{"value":"/ # Safety","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":101553,"byte_end":101565,"line_start":136,"line_end":136,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":101567,"byte_end":101570,"line_start":137,"line_end":137,"column_start":2,"column_end":5}},{"value":"/ This function requires that the output is always a one-hot value. It is","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":101572,"byte_end":101647,"line_start":138,"line_end":138,"column_start":2,"column_end":77}},{"value":"/ illegal to produce a value with more than one bit set, and doing so will","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":101649,"byte_end":101725,"line_start":139,"line_end":139,"column_start":2,"column_end":78}},{"value":"/ cause uncontrolled side effects.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":101727,"byte_end":101763,"line_start":140,"line_end":140,"column_start":2,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":319},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":102083,"byte_end":102091,"line_start":155,"line_end":155,"column_start":8,"column_end":16},"name":"TYPENAME","qualname":"::<order::Msb0 as order::BitOrder>::TYPENAME","value":"&'static str","parent":{"krate":0,"index":318},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":102237,"byte_end":102239,"line_start":160,"line_end":160,"column_start":5,"column_end":7},"name":"at","qualname":"<Msb0 as order::BitOrder>::at","value":"fn at<T>(BitIdx<T>) -> BitPos<T> where T: BitStore","parent":{"krate":0,"index":312},"children":[],"decl_id":{"krate":0,"index":314},"docs":" Maps a semantic count to a concrete position.","sig":null,"attributes":[{"value":"/ Maps a semantic count to a concrete position.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":102118,"byte_end":102167,"line_start":157,"line_end":157,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":102169,"byte_end":102172,"line_start":158,"line_end":158,"column_start":2,"column_end":5}},{"value":"/ `Msb0` order moves from `MSbit` first to `LSbit` last.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":102174,"byte_end":102232,"line_start":159,"line_end":159,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":102330,"byte_end":102334,"line_start":165,"line_end":165,"column_start":5,"column_end":9},"name":"mask","qualname":"<Msb0 as order::BitOrder>::mask","value":"fn mask<T>(BitIdx<T>) -> BitMask<T> where T: BitStore","parent":{"krate":0,"index":312},"children":[],"decl_id":{"krate":0,"index":316},"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":325},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":102748,"byte_end":102756,"line_start":176,"line_end":176,"column_start":8,"column_end":16},"name":"TYPENAME","qualname":"::<order::Lsb0 as order::BitOrder>::TYPENAME","value":"&'static str","parent":{"krate":0,"index":324},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":102902,"byte_end":102904,"line_start":181,"line_end":181,"column_start":5,"column_end":7},"name":"at","qualname":"<Lsb0 as order::BitOrder>::at","value":"fn at<T>(BitIdx<T>) -> BitPos<T> where T: BitStore","parent":{"krate":0,"index":312},"children":[],"decl_id":{"krate":0,"index":314},"docs":" Maps a semantic count to a concrete position.","sig":null,"attributes":[{"value":"/ Maps a semantic count to a concrete position.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":102783,"byte_end":102832,"line_start":178,"line_end":178,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":102834,"byte_end":102837,"line_start":179,"line_end":179,"column_start":2,"column_end":5}},{"value":"/ `Lsb0` order moves from `LSbit` first to `MSbit` last.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":102839,"byte_end":102897,"line_start":180,"line_end":180,"column_start":2,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":102985,"byte_end":102989,"line_start":186,"line_end":186,"column_start":5,"column_end":9},"name":"mask","qualname":"<Lsb0 as order::BitOrder>::mask","value":"fn mask<T>(BitIdx<T>) -> BitMask<T> where T: BitStore","parent":{"krate":0,"index":312},"children":[],"decl_id":{"krate":0,"index":316},"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":330},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":103625,"byte_end":103630,"line_start":207,"line_end":207,"column_start":10,"column_end":15},"name":"Local","qualname":"::order::Local","value":"Lsb0","parent":null,"children":[],"decl_id":null,"docs":" A default bit ordering.","sig":null,"attributes":[{"value":"* A default bit ordering.\n\nThe target has little-endian byte ordering, so the default bit ordering is set\nto little-endian as well, as a convenience. These two orderings are not related.\n**/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":103390,"byte_end":103582,"line_start":201,"line_end":205,"column_start":1,"column_end":4}},{"value":"cfg(target_endian = \"little\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":103583,"byte_end":103615,"line_start":206,"line_end":206,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":3546},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":123998,"byte_end":124004,"line_start":266,"line_end":266,"column_start":12,"column_end":18},"name":"BitPtr","qualname":"::pointer::BitPtr","value":"BitPtr {  }","parent":null,"children":[{"krate":0,"index":3548},{"krate":0,"index":3549},{"krate":0,"index":3550}],"decl_id":null,"docs":" In-memory representation of `&BitSlice` handles.","sig":null,"attributes":[{"value":"* In-memory representation of `&BitSlice` handles.\n\n# Layout\n\nThis structure is a more complex version of the `*const T`/`usize` tuple that\nRust uses to represent slices throughout the language. It breaks the pointer and\ncounter fundamentals into sub-field components. Rust does not have bitfield\nsyntax, so the below description of the element layout is in C++.\n\n```cpp\ntemplate <typename T>\nstruct BitPtr {\n  size_t ptr_head : __builtin_ctzll(alignof(T));\n  size_t ptr_data : sizeof(uintptr_t) * 8\n                  - __builtin_ctzll(alignof(T));\n\n  size_t len_head : 3;\n  size_t len_bits : sizeof(size_t) * 8 - 3;\n};\n```\n\nThis means that the `BitPtr<T>` structure has three *logical* fields, stored in\nfour segments across the two *structural* fields of the type. The widths and\nplacements of each segment are functions of the size of `*const T` and `usize`,\nand the alignment of `T`.\n\n# Fields\n\nThis section describes the purpose, meaning, and layout of the four logical\nfields.\n\n## Data Pointer\n\nAligned pointers to `T` always have low bits available for use to refine the\naddress of a `T` to the address of a `u8`. It is stored in the high bits of the\n`ptr` field, running from MSb down to (inclusive)\n`core::mem::align_of::<T>().trailing_zeros()`.\n\n## Bit Counter\n\nThe memory representation stores a counter of the live bits contained in the\nslice, starting at the head index. This counter occupies all but the lowest\nthree bits of the `len` structural field.\n\n## Head Bit Index\n\nFor any fundamental type `T`, `core::mem::align_of::<T>().trailing_zeros() + 3`\nbits are required to count the bit positions inside it.\n\n|Type |Alignment|Trailing Zeros|Count Bits|\n|:----|--------:|-------------:|---------:|\n|`u8` |        1|             0|         3|\n|`u16`|        2|             1|         4|\n|`u32`|        4|             2|         5|\n|`u64`|        8|             3|         6|\n\nThe head bit counter is split such that its bottom three bits are stored in the\nlow bits of the `len` field and the remaining high bits are stored in the low\nbits of `ptr`.\n\nThe counter is a value in the range `0 .. (1 << Count)` that serves as a cursor\ninto the zeroth storage element to find the first live bit.\n\n# Edge Cases\n\nThe following value sets are edge cases of valid `BitPtr` structures.\n\n## Null Slice\n\nThe fully zeroed slot is not a valid member of the `BitPtr<T>` type; it is the\nsentinel for `Option::<BitPtr<T>>::None`.\n\n## Empty Slice\n\nAll empty slices have `0` in their `bits` logical field, and do not constrain\ntheir `data` or `head` logical fields. The canonical empty slice structure uses\n`NonNull::<T>::dangling()` as its `data` pointer, and `0` as its `head` index,\nbut any slice structure with `0` as `bits` is considered to be empty, and all\nempty slices are equivalent to each other.\n\n## Uninhabited Slice\n\nThe subset of empty slices with non-dangling pointers are considered\nuninhabited. All `BitPtr` structures preserve their pointer information, even\nwhen empty, because they may be the owners of the memory region at the pointer.\nUninhabited slices are also unconstrained in their `head` index value.\n\n# Type Parameters\n\n- `T: BitStore` is the storage type over which the pointer governs.\n\n# Safety\n\nA `BitPtr` must never be constructed such that the element addressed by\n`self.pointer().offset(self.elements())` causes an addition overflow. This will\nbe checked in `new()`.\n\n# Undefined Behavior\n\nUsing values of this type directly as pointers or counters will result in\nundefined behavior. The pointer value will be invalid for the type, and both the\npointer and length values will be invalid for the memory model and allocation\nregime.\n**/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":120250,"byte_end":123914,"line_start":160,"line_end":263,"column_start":1,"column_end":4}},{"value":"repr(C)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":123915,"byte_end":123925,"line_start":264,"line_end":264,"column_start":1,"column_end":11}}]},{"kind":"Const","id":{"krate":0,"index":400},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":125192,"byte_end":125205,"line_start":297,"line_end":297,"column_start":12,"column_end":25},"name":"PTR_DATA_MASK","qualname":"::pointer::BitPtr::<T>::PTR_DATA_MASK","value":"usize","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":" Marks the bits of `self.ptr` that are the `data` section.\n","sig":null,"attributes":[{"value":"/ Marks the bits of `self.ptr` that are the `data` section.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":125119,"byte_end":125180,"line_start":296,"line_end":296,"column_start":2,"column_end":63}}]},{"kind":"Const","id":{"krate":0,"index":401},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":125348,"byte_end":125361,"line_start":301,"line_end":301,"column_start":12,"column_end":25},"name":"PTR_HEAD_BITS","qualname":"::pointer::BitPtr::<T>::PTR_HEAD_BITS","value":"usize","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":" The number of low bits in `self.ptr` that are the high bits of the head\n `BitIdx` cursor.\n","sig":null,"attributes":[{"value":"/ The number of low bits in `self.ptr` that are the high bits of the head","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":125239,"byte_end":125314,"line_start":299,"line_end":299,"column_start":2,"column_end":77}},{"value":"/ `BitIdx` cursor.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":125316,"byte_end":125336,"line_start":300,"line_end":300,"column_start":2,"column_end":22}}]},{"kind":"Const","id":{"krate":0,"index":402},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":125486,"byte_end":125499,"line_start":304,"line_end":304,"column_start":12,"column_end":25},"name":"PTR_HEAD_MASK","qualname":"::pointer::BitPtr::<T>::PTR_HEAD_MASK","value":"usize","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":" Marks the bits of `self.ptr` that are the `head` section.\n","sig":null,"attributes":[{"value":"/ Marks the bits of `self.ptr` that are the `head` section.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":125413,"byte_end":125474,"line_start":303,"line_end":303,"column_start":2,"column_end":63}}]},{"kind":"Const","id":{"krate":0,"index":403},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":125769,"byte_end":125782,"line_start":311,"line_end":311,"column_start":12,"column_end":25},"name":"LEN_HEAD_BITS","qualname":"::pointer::BitPtr::<T>::LEN_HEAD_BITS","value":"usize","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":" The number of low bits in `self.len` that are the low bits of the head\n `BitIdx` cursor.","sig":null,"attributes":[{"value":"/ The number of low bits in `self.len` that are the low bits of the head","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":125552,"byte_end":125626,"line_start":306,"line_end":306,"column_start":2,"column_end":76}},{"value":"/ `BitIdx` cursor.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":125628,"byte_end":125648,"line_start":307,"line_end":307,"column_start":2,"column_end":22}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":125650,"byte_end":125653,"line_start":308,"line_end":308,"column_start":2,"column_end":5}},{"value":"/ This is always `3`, until Rust tries to target a machine whose bytes are","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":125655,"byte_end":125731,"line_start":309,"line_end":309,"column_start":2,"column_end":78}},{"value":"/ not eight bits wide.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":125733,"byte_end":125757,"line_start":310,"line_end":310,"column_start":2,"column_end":26}}]},{"kind":"Const","id":{"krate":0,"index":404},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":125870,"byte_end":125883,"line_start":314,"line_end":314,"column_start":12,"column_end":25},"name":"LEN_HEAD_MASK","qualname":"::pointer::BitPtr::<T>::LEN_HEAD_MASK","value":"usize","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":" Marks the bits of `self.len` that are the `head` section.\n","sig":null,"attributes":[{"value":"/ Marks the bits of `self.len` that are the `head` section.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":125797,"byte_end":125858,"line_start":313,"line_end":313,"column_start":2,"column_end":63}}]},{"kind":"Const","id":{"krate":0,"index":405},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":126005,"byte_end":126013,"line_start":318,"line_end":318,"column_start":12,"column_end":20},"name":"MAX_ELTS","qualname":"::pointer::BitPtr::<T>::MAX_ELTS","value":"usize","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":" The inclusive maximum number of elements that can be stored in a\n `BitPtr` domain.\n","sig":null,"attributes":[{"value":"/ The inclusive maximum number of elements that can be stored in a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":125903,"byte_end":125971,"line_start":316,"line_end":316,"column_start":2,"column_end":70}},{"value":"/ `BitPtr` domain.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":125973,"byte_end":125993,"line_start":317,"line_end":317,"column_start":2,"column_end":22}}]},{"kind":"Const","id":{"krate":0,"index":406},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":126100,"byte_end":126108,"line_start":321,"line_end":321,"column_start":12,"column_end":20},"name":"MAX_BITS","qualname":"::pointer::BitPtr::<T>::MAX_BITS","value":"usize","parent":{"krate":0,"index":398},"children":[],"decl_id":null,"docs":" The inclusive maximum bit index.\n","sig":null,"attributes":[{"value":"/ The inclusive maximum bit index.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":126052,"byte_end":126088,"line_start":320,"line_end":320,"column_start":2,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":126548,"byte_end":126553,"line_start":336,"line_end":336,"column_start":9,"column_end":14},"name":"empty","qualname":"<BitPtr<T>>::empty","value":"fn empty() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Produces an empty-slice representation.","sig":null,"attributes":[{"value":"/ Produces an empty-slice representation.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":126147,"byte_end":126190,"line_start":323,"line_end":323,"column_start":2,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":126192,"byte_end":126195,"line_start":324,"line_end":324,"column_start":2,"column_end":5}},{"value":"/ This has no live bits, and has a dangling pointer. It is useful as a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":126197,"byte_end":126269,"line_start":325,"line_end":325,"column_start":2,"column_end":74}},{"value":"/ default value (and is the function used by `Default`) to indicate","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":126271,"byte_end":126340,"line_start":326,"line_end":326,"column_start":2,"column_end":71}},{"value":"/ arbitrary empty slices.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":126342,"byte_end":126369,"line_start":327,"line_end":327,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":126371,"byte_end":126374,"line_start":328,"line_end":328,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":126376,"byte_end":126389,"line_start":329,"line_end":329,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":126391,"byte_end":126394,"line_start":330,"line_end":330,"column_start":2,"column_end":5}},{"value":"/ An uninhabited, uninhabitable, empty slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":126396,"byte_end":126443,"line_start":331,"line_end":331,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":126445,"byte_end":126448,"line_start":332,"line_end":332,"column_start":2,"column_end":5}},{"value":"/ # Safety","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":126450,"byte_end":126462,"line_start":333,"line_end":333,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":126464,"byte_end":126467,"line_start":334,"line_end":334,"column_start":2,"column_end":5}},{"value":"/ The `BitPtr` returned by this function must never be dereferenced.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":126469,"byte_end":126539,"line_start":335,"line_end":335,"column_start":2,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":132472,"byte_end":132476,"line_start":554,"line_end":554,"column_start":9,"column_end":13},"name":"head","qualname":"<BitPtr<T>>::head","value":"fn head<'_>(&'_ Self) -> BitIdx<T>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the element cursor of the head bit.","sig":null,"attributes":[{"value":"/ Extracts the element cursor of the head bit.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":132210,"byte_end":132258,"line_start":543,"line_end":543,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":132260,"byte_end":132263,"line_start":544,"line_end":544,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":132265,"byte_end":132281,"line_start":545,"line_end":545,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":132283,"byte_end":132286,"line_start":546,"line_end":546,"column_start":2,"column_end":5}},{"value":"/ - `&self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":132288,"byte_end":132301,"line_start":547,"line_end":547,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":132303,"byte_end":132306,"line_start":548,"line_end":548,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":132308,"byte_end":132321,"line_start":549,"line_end":549,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":132323,"byte_end":132326,"line_start":550,"line_end":550,"column_start":2,"column_end":5}},{"value":"/ A `BitIdx` that is the index of the first live bit in the first element.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":132328,"byte_end":132404,"line_start":551,"line_end":551,"column_start":2,"column_end":78}},{"value":"/ This will be in the domain `0 .. T::BITS`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":132406,"byte_end":132452,"line_start":552,"line_end":552,"column_start":2,"column_end":48}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":132454,"byte_end":132463,"line_start":553,"line_end":553,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":132741,"byte_end":132749,"line_start":562,"line_end":562,"column_start":16,"column_end":24},"name":"set_head","qualname":"<BitPtr<T>>::set_head","value":"unsafe fn set_head<'_>(&'_ mut Self, BitIdx<T>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":132700,"byte_end":132725,"line_start":561,"line_end":561,"column_start":2,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":133501,"byte_end":133504,"line_start":588,"line_end":588,"column_start":9,"column_end":12},"name":"len","qualname":"<BitPtr<T>>::len","value":"fn len<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Counts how many bits are in the domain of a `BitPtr` slice.","sig":null,"attributes":[{"value":"/ Counts how many bits are in the domain of a `BitPtr` slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":133306,"byte_end":133369,"line_start":578,"line_end":578,"column_start":2,"column_end":65}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":133371,"byte_end":133374,"line_start":579,"line_end":579,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":133376,"byte_end":133392,"line_start":580,"line_end":580,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":133394,"byte_end":133397,"line_start":581,"line_end":581,"column_start":2,"column_end":5}},{"value":"/ - `&self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":133399,"byte_end":133412,"line_start":582,"line_end":582,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":133414,"byte_end":133417,"line_start":583,"line_end":583,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":133419,"byte_end":133432,"line_start":584,"line_end":584,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":133434,"byte_end":133437,"line_start":585,"line_end":585,"column_start":2,"column_end":5}},{"value":"/ A count of the live bits in the slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":133439,"byte_end":133481,"line_start":586,"line_end":586,"column_start":2,"column_end":44}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":133483,"byte_end":133492,"line_start":587,"line_end":587,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":133901,"byte_end":133908,"line_start":604,"line_end":604,"column_start":16,"column_end":23},"name":"set_len","qualname":"<BitPtr<T>>::set_len","value":"unsafe fn set_len<'_>(&'_ mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Overwrites the bit count with a new counter. This does not perform any\n safety checks.","sig":null,"attributes":[{"value":"/ Overwrites the bit count with a new counter. This does not perform any","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":133562,"byte_end":133636,"line_start":592,"line_end":592,"column_start":2,"column_end":76}},{"value":"/ safety checks.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":133638,"byte_end":133656,"line_start":593,"line_end":593,"column_start":2,"column_end":20}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":133658,"byte_end":133661,"line_start":594,"line_end":594,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":133663,"byte_end":133679,"line_start":595,"line_end":595,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":133681,"byte_end":133684,"line_start":596,"line_end":596,"column_start":2,"column_end":5}},{"value":"/ - `&mut self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":133686,"byte_end":133703,"line_start":597,"line_end":597,"column_start":2,"column_end":19}},{"value":"/ - `len: usize`: A new bit length for the `BitPtr<T>`’s domain.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":133705,"byte_end":133773,"line_start":598,"line_end":598,"column_start":2,"column_end":68}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":133775,"byte_end":133778,"line_start":599,"line_end":599,"column_start":2,"column_end":5}},{"value":"/ # Safety","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":133780,"byte_end":133792,"line_start":600,"line_end":600,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":133794,"byte_end":133797,"line_start":601,"line_end":601,"column_start":2,"column_end":5}},{"value":"/ None. The caller must ensure that the invariants of `::new` are upheld.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":133799,"byte_end":133874,"line_start":602,"line_end":602,"column_start":2,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":133876,"byte_end":133885,"line_start":603,"line_end":603,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":134806,"byte_end":134814,"line_start":640,"line_end":640,"column_start":9,"column_end":17},"name":"elements","qualname":"<BitPtr<T>>::elements","value":"fn elements<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Produces the count of all elements in the slice domain.","sig":null,"attributes":[{"value":"/ Produces the count of all elements in the slice domain.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":134507,"byte_end":134566,"line_start":626,"line_end":626,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":134568,"byte_end":134571,"line_start":627,"line_end":627,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":134573,"byte_end":134589,"line_start":628,"line_end":628,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":134591,"byte_end":134594,"line_start":629,"line_end":629,"column_start":2,"column_end":5}},{"value":"/ - `&self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":134596,"byte_end":134609,"line_start":630,"line_end":630,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":134611,"byte_end":134614,"line_start":631,"line_end":631,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":134616,"byte_end":134629,"line_start":632,"line_end":632,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":134631,"byte_end":134634,"line_start":633,"line_end":633,"column_start":2,"column_end":5}},{"value":"/ The number of `T` elements in the slice domain.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":134636,"byte_end":134687,"line_start":634,"line_end":634,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":134689,"byte_end":134692,"line_start":635,"line_end":635,"column_start":2,"column_end":5}},{"value":"/ # Safety","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":134694,"byte_end":134706,"line_start":636,"line_end":636,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":134708,"byte_end":134711,"line_start":637,"line_end":637,"column_start":2,"column_end":5}},{"value":"/ This size must be valid in the user’s memory model and allocation","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":134713,"byte_end":134784,"line_start":638,"line_end":638,"column_start":2,"column_end":71}},{"value":"/ regime.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":134786,"byte_end":134797,"line_start":639,"line_end":639,"column_start":2,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":136170,"byte_end":136178,"line_start":688,"line_end":688,"column_start":9,"column_end":17},"name":"as_slice","qualname":"<BitPtr<T>>::as_slice","value":"fn as_slice<'a, '_>(&'_ Self) -> &'a [T]","parent":null,"children":[],"decl_id":null,"docs":" Accesses the element slice behind the pointer as a Rust slice.","sig":null,"attributes":[{"value":"/ Accesses the element slice behind the pointer as a Rust slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":135848,"byte_end":135914,"line_start":674,"line_end":674,"column_start":2,"column_end":68}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":135916,"byte_end":135919,"line_start":675,"line_end":675,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":135921,"byte_end":135937,"line_start":676,"line_end":676,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":135939,"byte_end":135942,"line_start":677,"line_end":677,"column_start":2,"column_end":5}},{"value":"/ - `&self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":135944,"byte_end":135957,"line_start":678,"line_end":678,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":135959,"byte_end":135962,"line_start":679,"line_end":679,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":135964,"byte_end":135977,"line_start":680,"line_end":680,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":135979,"byte_end":135982,"line_start":681,"line_end":681,"column_start":2,"column_end":5}},{"value":"/ Standard Rust slice handle over the data governed by this pointer.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":135984,"byte_end":136054,"line_start":682,"line_end":682,"column_start":2,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":136056,"byte_end":136059,"line_start":683,"line_end":683,"column_start":2,"column_end":5}},{"value":"/ # Lifetimes","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":136061,"byte_end":136076,"line_start":684,"line_end":684,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":136078,"byte_end":136081,"line_start":685,"line_end":685,"column_start":2,"column_end":5}},{"value":"/ - `'a`: Lifetime for which the data behind the pointer is live.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":136083,"byte_end":136150,"line_start":686,"line_end":686,"column_start":2,"column_end":69}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":136152,"byte_end":136161,"line_start":687,"line_end":687,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":136608,"byte_end":136620,"line_start":706,"line_end":706,"column_start":9,"column_end":21},"name":"as_mut_slice","qualname":"<BitPtr<T>>::as_mut_slice","value":"fn as_mut_slice<'a, '_>(&'_ Self) -> &'a mut [T]","parent":null,"children":[],"decl_id":null,"docs":" Accesses the element slice behind the pointer as a Rust mutable slice.","sig":null,"attributes":[{"value":"/ Accesses the element slice behind the pointer as a Rust mutable slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":136278,"byte_end":136352,"line_start":692,"line_end":692,"column_start":2,"column_end":76}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":136354,"byte_end":136357,"line_start":693,"line_end":693,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":136359,"byte_end":136375,"line_start":694,"line_end":694,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":136377,"byte_end":136380,"line_start":695,"line_end":695,"column_start":2,"column_end":5}},{"value":"/ - `&self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":136382,"byte_end":136395,"line_start":696,"line_end":696,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":136397,"byte_end":136400,"line_start":697,"line_end":697,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":136402,"byte_end":136415,"line_start":698,"line_end":698,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":136417,"byte_end":136420,"line_start":699,"line_end":699,"column_start":2,"column_end":5}},{"value":"/ Standard Rust slice handle over the data governed by this pointer.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":136422,"byte_end":136492,"line_start":700,"line_end":700,"column_start":2,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":136494,"byte_end":136497,"line_start":701,"line_end":701,"column_start":2,"column_end":5}},{"value":"/ # Lifetimes","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":136499,"byte_end":136514,"line_start":702,"line_end":702,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":136516,"byte_end":136519,"line_start":703,"line_end":703,"column_start":2,"column_end":5}},{"value":"/ - `'a`: Lifetime for which the data behind the pointer is live.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":136521,"byte_end":136588,"line_start":704,"line_end":704,"column_start":2,"column_end":69}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":136590,"byte_end":136599,"line_start":705,"line_end":705,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":137060,"byte_end":137075,"line_start":724,"line_end":724,"column_start":9,"column_end":24},"name":"as_access_slice","qualname":"<BitPtr<T>>::as_access_slice","value":"fn as_access_slice<'a, '_>(&'_ Self) -> &'a [T::Access]","parent":null,"children":[],"decl_id":null,"docs":" Accesses the element slice behind the pointer as a shared-mutable slice.","sig":null,"attributes":[{"value":"/ Accesses the element slice behind the pointer as a shared-mutable slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":136728,"byte_end":136804,"line_start":710,"line_end":710,"column_start":2,"column_end":78}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":136806,"byte_end":136809,"line_start":711,"line_end":711,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":136811,"byte_end":136827,"line_start":712,"line_end":712,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":136829,"byte_end":136832,"line_start":713,"line_end":713,"column_start":2,"column_end":5}},{"value":"/ - `&self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":136834,"byte_end":136847,"line_start":714,"line_end":714,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":136849,"byte_end":136852,"line_start":715,"line_end":715,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":136854,"byte_end":136867,"line_start":716,"line_end":716,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":136869,"byte_end":136872,"line_start":717,"line_end":717,"column_start":2,"column_end":5}},{"value":"/ Standard Rust slice handle over the data governed by this pointer.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":136874,"byte_end":136944,"line_start":718,"line_end":718,"column_start":2,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":136946,"byte_end":136949,"line_start":719,"line_end":719,"column_start":2,"column_end":5}},{"value":"/ # Lifetimes","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":136951,"byte_end":136966,"line_start":720,"line_end":720,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":136968,"byte_end":136971,"line_start":721,"line_end":721,"column_start":2,"column_end":5}},{"value":"/ - `'a`: Lifetime for which the data behind the pointer is live.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":136973,"byte_end":137040,"line_start":722,"line_end":722,"column_start":2,"column_end":69}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":137042,"byte_end":137051,"line_start":723,"line_end":723,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":139890,"byte_end":139896,"line_start":828,"line_end":828,"column_start":5,"column_end":11},"name":"as_mut","qualname":"<BitPtr<T> as std::convert::AsMut>::as_mut","value":"fn as_mut<'_>(&'_ mut Self) -> &'_ mut [T]","parent":{"krate":2,"index":3163},"children":[],"decl_id":{"krate":2,"index":3165},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":140121,"byte_end":140127,"line_start":837,"line_end":837,"column_start":5,"column_end":11},"name":"as_ref","qualname":"<BitPtr<T> as std::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ [T]","parent":{"krate":2,"index":3160},"children":[],"decl_id":{"krate":2,"index":3162},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":140265,"byte_end":140269,"line_start":844,"line_end":844,"column_start":5,"column_end":9},"name":"from","qualname":"<BitPtr<T> as std::convert::From>::from","value":"fn from(&'a BitSlice<O, T>) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":140438,"byte_end":140442,"line_start":851,"line_end":851,"column_start":5,"column_end":9},"name":"from","qualname":"<BitPtr<T> as std::convert::From>::from","value":"fn from(&'a mut BitSlice<O, T>) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":140836,"byte_end":140843,"line_start":864,"line_end":864,"column_start":5,"column_end":12},"name":"default","qualname":"<BitPtr<T> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":" Produces an empty-slice representation.","sig":null,"attributes":[{"value":"/ Produces an empty-slice representation.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":140611,"byte_end":140654,"line_start":859,"line_end":859,"column_start":2,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":140656,"byte_end":140659,"line_start":860,"line_end":860,"column_start":2,"column_end":5}},{"value":"/ The empty slice has no size or cursors, and its pointer is the alignment","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":140661,"byte_end":140737,"line_start":861,"line_end":861,"column_start":2,"column_end":78}},{"value":"/ of the type. The non-null pointer allows this structure to be null-value","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":140739,"byte_end":140815,"line_start":862,"line_end":862,"column_start":2,"column_end":78}},{"value":"/ optimized.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":140817,"byte_end":140831,"line_start":863,"line_end":863,"column_start":2,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":140984,"byte_end":140987,"line_start":872,"line_end":872,"column_start":5,"column_end":8},"name":"fmt","qualname":"<BitPtr<T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":480},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/prelude.rs","parent":null,"children":[{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":485},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":492},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":498},{"krate":0,"index":499},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":505},{"krate":0,"index":508},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":515},{"krate":0,"index":518},{"krate":0,"index":521},{"krate":0,"index":524}],"decl_id":null,"docs":" `bitvec` Prelude","sig":null,"attributes":[{"value":"* `bitvec` Prelude\n\nThis collects the general public API into a single spot for inclusion, as\n`use bitvec::prelude::*;`, without polluting the root namespace of the crate.\n!*/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/prelude.rs","byte_start":143154,"byte_end":143331,"line_start":1,"line_end":5,"column_start":1,"column_end":4}}]},{"kind":"Mod","id":{"krate":0,"index":525},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"slice","qualname":"::slice","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","parent":null,"children":[{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":538},{"krate":0,"index":541},{"krate":0,"index":544},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":550},{"krate":0,"index":553},{"krate":0,"index":559},{"krate":0,"index":609},{"krate":0,"index":615},{"krate":0,"index":622},{"krate":0,"index":629},{"krate":0,"index":3577},{"krate":0,"index":3585},{"krate":0,"index":3593},{"krate":0,"index":3601},{"krate":0,"index":3609},{"krate":0,"index":3617},{"krate":0,"index":3625},{"krate":0,"index":3633},{"krate":0,"index":3641},{"krate":0,"index":3649},{"krate":0,"index":3657},{"krate":0,"index":3665},{"krate":0,"index":3673},{"krate":0,"index":3681},{"krate":0,"index":3689},{"krate":0,"index":3697},{"krate":0,"index":3705},{"krate":0,"index":3713},{"krate":0,"index":3721},{"krate":0,"index":3729},{"krate":0,"index":3737},{"krate":0,"index":3745},{"krate":0,"index":3753},{"krate":0,"index":3761},{"krate":0,"index":3769},{"krate":0,"index":3777},{"krate":0,"index":3785},{"krate":0,"index":3793},{"krate":0,"index":3801},{"krate":0,"index":3809},{"krate":0,"index":3817},{"krate":0,"index":3825},{"krate":0,"index":3833},{"krate":0,"index":630},{"krate":0,"index":894},{"krate":0,"index":1416},{"krate":0,"index":1600},{"krate":0,"index":1652},{"krate":0,"index":1832},{"krate":0,"index":1833},{"krate":0,"index":1834}],"decl_id":null,"docs":" `BitSlice` Wide Reference","sig":null,"attributes":[{"value":"* `BitSlice` Wide Reference\n\nThis module defines semantic operations on `[u1]`, in contrast to the mechanical\noperations defined in `BitPtr`.\n\nThe `&BitSlice` handle has the same size and general layout as the standard Rust\nslice handle `&[T]`. Its binary layout is wholly incompatible with the layout of\nRust slices, and must never be interchanged except through the provided APIs.\n!*/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":143628,"byte_end":144016,"line_start":1,"line_end":9,"column_start":1,"column_end":4}}]},{"kind":"Struct","id":{"krate":0,"index":553},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":146780,"byte_end":146788,"line_start":98,"line_end":98,"column_start":12,"column_end":20},"name":"BitSlice","qualname":"::slice::BitSlice","value":"BitSlice {  }","parent":null,"children":[{"krate":0,"index":556},{"krate":0,"index":557},{"krate":0,"index":558}],"decl_id":null,"docs":" A compact slice of bits, whose order and storage types can be customized.","sig":null,"attributes":[{"value":"* A compact slice of bits, whose order and storage types can be customized.\n\n`BitSlice` is a specialized slice type, which can only ever be held by\nreference or specialized owning pointers provided by this crate. The value\npatterns of its handles are opaque binary structures, which cannot be\nmeaningfully inspected by user code.\n\n`BitSlice` can only be dynamically allocated by this library. Creation of any\nother `BitSlice` collections will result in severely incorrect behavior.\n\nA `BitSlice` reference can be created through the [`bitvec!`] macro, from a\n[`BitVec`] collection, or from most common Rust types (fundamentals, slices of\nthem, and small arrays) using the [`Bits`] and [`BitsMut`] traits.\n\n`BitSlice`s are a view into a block of memory at bit-level resolution. They are\nrepresented by a crate-internal pointer structure that ***cannot*** be used with\nother Rust code except through the provided conversion APIs.\n\n```rust\nuse bitvec::prelude::*;\n\n# #[cfg(feature = \"alloc\")] {\nlet bv = bitvec![0, 1, 0, 1];\n//  slicing a bitvec\nlet bslice: &BitSlice = &bv[..];\n# }\n\n//  coercing an array to a bitslice\nlet bslice: &BitSlice<_, _> = [1u8, 254u8].bits::<Msb0>();\n```\n\nBit slices are either mutable or shared. The shared slice type is\n`&BitSlice<O, T>`, while the mutable slice type is `&mut BitSlice<O, T>`. For\nexample, you can mutate bits in the memory to which a mutable `BitSlice` points:\n\n```rust\nuse bitvec::prelude::*;\n\nlet mut base = [0u8, 0, 0, 0];\n{\n let bs: &mut BitSlice<_, _> = base.bits_mut::<Msb0>();\n bs.set(13, true);\n eprintln!(\"{:?}\", bs.as_ref());\n assert!(bs[13]);\n}\nassert_eq!(base[1], 4);\n```\n\n# Type Parameters\n\n- `O`: An implementor of the `BitOrder` trait. This type is used to convert\n  semantic indices into concrete bit positions in elements, and store or\n  retrieve bit values from the storage type.\n- `T`: An implementor of the `BitStore` trait: `u8`, `u16`, `u32`, or `u64`\n  (64-bit systems only). This is the actual type in memory that the slice will\n  use to store data.\n\n# Safety\n\nThe `&BitSlice` reference handle has the same *size* as standard Rust slice\nhandles, but it is ***extremely value-incompatible*** with them. Attempting to\ntreat `&BitSlice<_, T>` as `&[T]` in any manner except through the provided APIs\nis ***catastrophically*** unsafe and unsound.\n\n[`BitVec`]: ../vec/struct.BitVec.html\n[`Bits`]: ../bits/trait.Bits.html\n[`BitsMut`]: ../bits/trait.BitsMut.html\n[`From`]: https://doc.rust-lang.org/stable/std/convert/trait.From.html\n[`bitvec!`]: ../macro.bitvec.html\n**/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":144212,"byte_end":146747,"line_start":27,"line_end":96,"column_start":1,"column_end":4}},{"value":"repr(transparent)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":146748,"byte_end":146768,"line_start":97,"line_end":97,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":147493,"byte_end":147498,"line_start":127,"line_end":127,"column_start":9,"column_end":14},"name":"empty","qualname":"<BitSlice<O, T>>::empty","value":"fn empty<'a>() -> &'a Self","parent":null,"children":[],"decl_id":null,"docs":" Produces the empty slice. This is equivalent to `&[]` for Rust slices.","sig":null,"attributes":[{"value":"/ Produces the empty slice. This is equivalent to `&[]` for Rust slices.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":147212,"byte_end":147286,"line_start":113,"line_end":113,"column_start":2,"column_end":76}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":147288,"byte_end":147291,"line_start":114,"line_end":114,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":147293,"byte_end":147306,"line_start":115,"line_end":115,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":147308,"byte_end":147311,"line_start":116,"line_end":116,"column_start":2,"column_end":5}},{"value":"/ An empty `&BitSlice` handle.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":147313,"byte_end":147345,"line_start":117,"line_end":117,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":147347,"byte_end":147350,"line_start":118,"line_end":118,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":147352,"byte_end":147366,"line_start":119,"line_end":119,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":147368,"byte_end":147371,"line_start":120,"line_end":120,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":147373,"byte_end":147384,"line_start":121,"line_end":121,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":147386,"byte_end":147413,"line_start":122,"line_end":122,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":147415,"byte_end":147418,"line_start":123,"line_end":123,"column_start":2,"column_end":5}},{"value":"/ let bits: &BitSlice = BitSlice::empty();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":147420,"byte_end":147464,"line_start":124,"line_end":124,"column_start":2,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":147466,"byte_end":147473,"line_start":125,"line_end":125,"column_start":2,"column_end":9}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":147475,"byte_end":147484,"line_start":126,"line_end":126,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":147868,"byte_end":147877,"line_start":146,"line_end":146,"column_start":9,"column_end":18},"name":"empty_mut","qualname":"<BitSlice<O, T>>::empty_mut","value":"fn empty_mut<'a>() -> &'a mut Self","parent":null,"children":[],"decl_id":null,"docs":" Produces the empty mutable slice. This is equivalent to `&mut []` for\n Rust slices.","sig":null,"attributes":[{"value":"/ Produces the empty mutable slice. This is equivalent to `&mut []` for","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":147558,"byte_end":147631,"line_start":131,"line_end":131,"column_start":2,"column_end":75}},{"value":"/ Rust slices.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":147633,"byte_end":147649,"line_start":132,"line_end":132,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":147651,"byte_end":147654,"line_start":133,"line_end":133,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":147656,"byte_end":147669,"line_start":134,"line_end":134,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":147671,"byte_end":147674,"line_start":135,"line_end":135,"column_start":2,"column_end":5}},{"value":"/ An empty `&mut BitSlice` handle.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":147676,"byte_end":147712,"line_start":136,"line_end":136,"column_start":2,"column_end":38}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":147714,"byte_end":147717,"line_start":137,"line_end":137,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":147719,"byte_end":147733,"line_start":138,"line_end":138,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":147735,"byte_end":147738,"line_start":139,"line_end":139,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":147740,"byte_end":147751,"line_start":140,"line_end":140,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":147753,"byte_end":147780,"line_start":141,"line_end":141,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":147782,"byte_end":147785,"line_start":142,"line_end":142,"column_start":2,"column_end":5}},{"value":"/ let bits: &mut BitSlice = BitSlice::empty_mut();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":147787,"byte_end":147839,"line_start":143,"line_end":143,"column_start":2,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":147841,"byte_end":147848,"line_start":144,"line_end":144,"column_start":2,"column_end":9}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":147850,"byte_end":147859,"line_start":145,"line_end":145,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":148406,"byte_end":148418,"line_start":171,"line_end":171,"column_start":9,"column_end":21},"name":"from_element","qualname":"<BitSlice<O, T>>::from_element","value":"fn from_element<'_>(&'_ T) -> &'_ Self","parent":null,"children":[],"decl_id":null,"docs":" Produces an immutable `BitSlice` over a single element.","sig":null,"attributes":[{"value":"/ Produces an immutable `BitSlice` over a single element.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":147945,"byte_end":148004,"line_start":150,"line_end":150,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":148006,"byte_end":148009,"line_start":151,"line_end":151,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":148011,"byte_end":148027,"line_start":152,"line_end":152,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":148029,"byte_end":148032,"line_start":153,"line_end":153,"column_start":2,"column_end":5}},{"value":"/ - `elt`: A reference to an element over which the `BitSlice` will be","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":148034,"byte_end":148106,"line_start":154,"line_end":154,"column_start":2,"column_end":74}},{"value":"/   created.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":148108,"byte_end":148122,"line_start":155,"line_end":155,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":148124,"byte_end":148127,"line_start":156,"line_end":156,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":148129,"byte_end":148142,"line_start":157,"line_end":157,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":148144,"byte_end":148147,"line_start":158,"line_end":158,"column_start":2,"column_end":5}},{"value":"/ A `BitSlice` over the provided element.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":148149,"byte_end":148192,"line_start":159,"line_end":159,"column_start":2,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":148194,"byte_end":148197,"line_start":160,"line_end":160,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":148199,"byte_end":148213,"line_start":161,"line_end":161,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":148215,"byte_end":148218,"line_start":162,"line_end":162,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":148220,"byte_end":148231,"line_start":163,"line_end":163,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":148233,"byte_end":148260,"line_start":164,"line_end":164,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":148262,"byte_end":148265,"line_start":165,"line_end":165,"column_start":2,"column_end":5}},{"value":"/ let elt: u8 = !0;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":148267,"byte_end":148288,"line_start":166,"line_end":166,"column_start":2,"column_end":23}},{"value":"/ let bs: &BitSlice<Local, _> = BitSlice::from_element(&elt);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":148290,"byte_end":148353,"line_start":167,"line_end":167,"column_start":2,"column_end":65}},{"value":"/ assert!(bs.all());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":148355,"byte_end":148377,"line_start":168,"line_end":168,"column_start":2,"column_end":24}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":148379,"byte_end":148386,"line_start":169,"line_end":169,"column_start":2,"column_end":9}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":148388,"byte_end":148397,"line_start":170,"line_end":170,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":149032,"byte_end":149048,"line_start":199,"line_end":199,"column_start":9,"column_end":25},"name":"from_element_mut","qualname":"<BitSlice<O, T>>::from_element_mut","value":"fn from_element_mut<'_>(&'_ mut T) -> &'_ mut Self","parent":null,"children":[],"decl_id":null,"docs":" Produces a mutable `BitSlice` over a single element.","sig":null,"attributes":[{"value":"/ Produces a mutable `BitSlice` over a single element.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":148534,"byte_end":148590,"line_start":177,"line_end":177,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":148592,"byte_end":148595,"line_start":178,"line_end":178,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":148597,"byte_end":148613,"line_start":179,"line_end":179,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":148615,"byte_end":148618,"line_start":180,"line_end":180,"column_start":2,"column_end":5}},{"value":"/ - `elt`: A reference to an element over which the `BitSlice` will be","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":148620,"byte_end":148692,"line_start":181,"line_end":181,"column_start":2,"column_end":74}},{"value":"/   created.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":148694,"byte_end":148708,"line_start":182,"line_end":182,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":148710,"byte_end":148713,"line_start":183,"line_end":183,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":148715,"byte_end":148728,"line_start":184,"line_end":184,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":148730,"byte_end":148733,"line_start":185,"line_end":185,"column_start":2,"column_end":5}},{"value":"/ A `BitSlice` over the provided element.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":148735,"byte_end":148778,"line_start":186,"line_end":186,"column_start":2,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":148780,"byte_end":148783,"line_start":187,"line_end":187,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":148785,"byte_end":148799,"line_start":188,"line_end":188,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":148801,"byte_end":148804,"line_start":189,"line_end":189,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":148806,"byte_end":148817,"line_start":190,"line_end":190,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":148819,"byte_end":148846,"line_start":191,"line_end":191,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":148848,"byte_end":148851,"line_start":192,"line_end":192,"column_start":2,"column_end":5}},{"value":"/ let mut elt: u8 = !0;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":148853,"byte_end":148878,"line_start":193,"line_end":193,"column_start":2,"column_end":27}},{"value":"/ let bs: &mut BitSlice<Local, _> = BitSlice::from_element_mut(&mut elt);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":148880,"byte_end":148955,"line_start":194,"line_end":194,"column_start":2,"column_end":77}},{"value":"/ bs.set(0, false);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":148957,"byte_end":148978,"line_start":195,"line_end":195,"column_start":2,"column_end":23}},{"value":"/ assert!(!bs.all());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":148980,"byte_end":149003,"line_start":196,"line_end":196,"column_start":2,"column_end":25}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":149005,"byte_end":149012,"line_start":197,"line_end":197,"column_start":2,"column_end":9}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":149014,"byte_end":149023,"line_start":198,"line_end":198,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":150151,"byte_end":150161,"line_start":237,"line_end":237,"column_start":9,"column_end":19},"name":"from_slice","qualname":"<BitSlice<O, T>>::from_slice","value":"fn from_slice<'_>(&'_ [T]) -> &'_ Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps a `&[T: BitStore]` in a `&BitSlice<O: BitOrder, T>`. The order must\n be specified at the call site. The element type cannot be changed.","sig":null,"attributes":[{"value":"/ Wraps a `&[T: BitStore]` in a `&BitSlice<O: BitOrder, T>`. The order must","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":149176,"byte_end":149253,"line_start":205,"line_end":205,"column_start":2,"column_end":79}},{"value":"/ be specified at the call site. The element type cannot be changed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":149255,"byte_end":149325,"line_start":206,"line_end":206,"column_start":2,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":149327,"byte_end":149330,"line_start":207,"line_end":207,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":149332,"byte_end":149348,"line_start":208,"line_end":208,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":149350,"byte_end":149353,"line_start":209,"line_end":209,"column_start":2,"column_end":5}},{"value":"/ - `src`: The elements over which the new `BitSlice` will operate.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":149355,"byte_end":149424,"line_start":210,"line_end":210,"column_start":2,"column_end":71}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":149426,"byte_end":149429,"line_start":211,"line_end":211,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":149431,"byte_end":149444,"line_start":212,"line_end":212,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":149446,"byte_end":149449,"line_start":213,"line_end":213,"column_start":2,"column_end":5}},{"value":"/ A `BitSlice` representing the original element slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":149451,"byte_end":149508,"line_start":214,"line_end":214,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":149510,"byte_end":149513,"line_start":215,"line_end":215,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":149515,"byte_end":149527,"line_start":216,"line_end":216,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":149529,"byte_end":149532,"line_start":217,"line_end":217,"column_start":2,"column_end":5}},{"value":"/ The source slice must not exceed the maximum number of elements that a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":149534,"byte_end":149608,"line_start":218,"line_end":218,"column_start":2,"column_end":76}},{"value":"/ `BitSlice` can contain. This value is documented in [`BitPtr`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":149610,"byte_end":149677,"line_start":219,"line_end":219,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":149679,"byte_end":149682,"line_start":220,"line_end":220,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":149684,"byte_end":149698,"line_start":221,"line_end":221,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":149700,"byte_end":149703,"line_start":222,"line_end":222,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":149705,"byte_end":149716,"line_start":223,"line_end":223,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":149718,"byte_end":149745,"line_start":224,"line_end":224,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":149747,"byte_end":149750,"line_start":225,"line_end":225,"column_start":2,"column_end":5}},{"value":"/ let src = [1, 2, 3];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":149752,"byte_end":149776,"line_start":226,"line_end":226,"column_start":2,"column_end":26}},{"value":"/ let bits = BitSlice::<Msb0, u8>::from_slice(&src[..]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":149778,"byte_end":149836,"line_start":227,"line_end":227,"column_start":2,"column_end":60}},{"value":"/ assert_eq!(bits.len(), 24);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":149838,"byte_end":149869,"line_start":228,"line_end":228,"column_start":2,"column_end":33}},{"value":"/ assert_eq!(bits.as_ref().len(), 3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":149871,"byte_end":149910,"line_start":229,"line_end":229,"column_start":2,"column_end":41}},{"value":"/ assert!(bits[7]);  // src[0] == 0b0000_0001","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":149912,"byte_end":149959,"line_start":230,"line_end":230,"column_start":2,"column_end":49}},{"value":"/ assert!(bits[14]); // src[1] == 0b0000_0010","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":149961,"byte_end":150008,"line_start":231,"line_end":231,"column_start":2,"column_end":49}},{"value":"/ assert!(bits[22]); // src[2] == 0b0000_0011","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":150010,"byte_end":150057,"line_start":232,"line_end":232,"column_start":2,"column_end":49}},{"value":"/ assert!(bits[23]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":150059,"byte_end":150081,"line_start":233,"line_end":233,"column_start":2,"column_end":24}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":150083,"byte_end":150090,"line_start":234,"line_end":234,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":150092,"byte_end":150095,"line_start":235,"line_end":235,"column_start":2,"column_end":5}},{"value":"/ [`BitPtr`]: ../pointer/struct.BitPtr.html","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":150097,"byte_end":150142,"line_start":236,"line_end":236,"column_start":2,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":151402,"byte_end":151416,"line_start":282,"line_end":282,"column_start":9,"column_end":23},"name":"from_slice_mut","qualname":"<BitSlice<O, T>>::from_slice_mut","value":"fn from_slice_mut<'_>(&'_ mut [T]) -> &'_ mut Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps a `&mut [T: BitStore]` in a `&mut BitSlice<O: BitOrder, T>`. The\n order must be specified by the call site. The element type cannot\n be changed.","sig":null,"attributes":[{"value":"/ Wraps a `&mut [T: BitStore]` in a `&mut BitSlice<O: BitOrder, T>`. The","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":150464,"byte_end":150538,"line_start":249,"line_end":249,"column_start":2,"column_end":76}},{"value":"/ order must be specified by the call site. The element type cannot","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":150540,"byte_end":150609,"line_start":250,"line_end":250,"column_start":2,"column_end":71}},{"value":"/ be changed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":150611,"byte_end":150626,"line_start":251,"line_end":251,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":150628,"byte_end":150631,"line_start":252,"line_end":252,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":150633,"byte_end":150649,"line_start":253,"line_end":253,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":150651,"byte_end":150654,"line_start":254,"line_end":254,"column_start":2,"column_end":5}},{"value":"/ - `src`: The elements over which the new `BitSlice` will operate.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":150656,"byte_end":150725,"line_start":255,"line_end":255,"column_start":2,"column_end":71}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":150727,"byte_end":150730,"line_start":256,"line_end":256,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":150732,"byte_end":150745,"line_start":257,"line_end":257,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":150747,"byte_end":150750,"line_start":258,"line_end":258,"column_start":2,"column_end":5}},{"value":"/ A `BitSlice` representing the original element slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":150752,"byte_end":150809,"line_start":259,"line_end":259,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":150811,"byte_end":150814,"line_start":260,"line_end":260,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":150816,"byte_end":150828,"line_start":261,"line_end":261,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":150830,"byte_end":150833,"line_start":262,"line_end":262,"column_start":2,"column_end":5}},{"value":"/ The source slice must not exceed the maximum number of elements that a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":150835,"byte_end":150909,"line_start":263,"line_end":263,"column_start":2,"column_end":76}},{"value":"/ `BitSlice` can contain. This value is documented in [`BitPtr`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":150911,"byte_end":150978,"line_start":264,"line_end":264,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":150980,"byte_end":150983,"line_start":265,"line_end":265,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":150985,"byte_end":150999,"line_start":266,"line_end":266,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":151001,"byte_end":151004,"line_start":267,"line_end":267,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":151006,"byte_end":151017,"line_start":268,"line_end":268,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":151019,"byte_end":151046,"line_start":269,"line_end":269,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":151048,"byte_end":151051,"line_start":270,"line_end":270,"column_start":2,"column_end":5}},{"value":"/ let mut src = [1, 2, 3];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":151053,"byte_end":151081,"line_start":271,"line_end":271,"column_start":2,"column_end":30}},{"value":"/ let bits = BitSlice::<Lsb0, u8>::from_slice_mut(&mut src[..]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":151083,"byte_end":151149,"line_start":272,"line_end":272,"column_start":2,"column_end":68}},{"value":"/ //  The first bit is the LSb of the first element.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":151151,"byte_end":151205,"line_start":273,"line_end":273,"column_start":2,"column_end":56}},{"value":"/ assert!(bits[0]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":151207,"byte_end":151228,"line_start":274,"line_end":274,"column_start":2,"column_end":23}},{"value":"/ bits.set(0, false);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":151230,"byte_end":151253,"line_start":275,"line_end":275,"column_start":2,"column_end":25}},{"value":"/ assert!(!bits[0]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":151255,"byte_end":151277,"line_start":276,"line_end":276,"column_start":2,"column_end":24}},{"value":"/ assert_eq!(bits.as_ref(), &[0, 2, 3]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":151279,"byte_end":151321,"line_start":277,"line_end":277,"column_start":2,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":151323,"byte_end":151330,"line_start":278,"line_end":278,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":151332,"byte_end":151335,"line_start":279,"line_end":279,"column_start":2,"column_end":5}},{"value":"/ [`BitPtr`]: ../pointer/struct.BitPtr.html","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":151337,"byte_end":151382,"line_start":280,"line_end":280,"column_start":2,"column_end":47}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":151384,"byte_end":151393,"line_start":281,"line_end":281,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":152081,"byte_end":152084,"line_start":310,"line_end":310,"column_start":9,"column_end":12},"name":"set","qualname":"<BitSlice<O, T>>::set","value":"fn set<'_>(&'_ mut Self, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets the bit value at the given position.","sig":null,"attributes":[{"value":"/ Sets the bit value at the given position.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":151509,"byte_end":151554,"line_start":286,"line_end":286,"column_start":2,"column_end":47}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":151556,"byte_end":151559,"line_start":287,"line_end":287,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":151561,"byte_end":151577,"line_start":288,"line_end":288,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":151579,"byte_end":151582,"line_start":289,"line_end":289,"column_start":2,"column_end":5}},{"value":"/ - `&mut self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":151584,"byte_end":151601,"line_start":290,"line_end":290,"column_start":2,"column_end":19}},{"value":"/ - `index`: The bit index to set. It must be in the domain","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":151603,"byte_end":151664,"line_start":291,"line_end":291,"column_start":2,"column_end":63}},{"value":"/   `0 .. self.len()`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":151666,"byte_end":151690,"line_start":292,"line_end":292,"column_start":2,"column_end":26}},{"value":"/ - `value`: The value to be set, `true` for `1` and `false` for `0`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":151692,"byte_end":151763,"line_start":293,"line_end":293,"column_start":2,"column_end":73}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":151765,"byte_end":151768,"line_start":294,"line_end":294,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":151770,"byte_end":151782,"line_start":295,"line_end":295,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":151784,"byte_end":151787,"line_start":296,"line_end":296,"column_start":2,"column_end":5}},{"value":"/ This method panics if `index` is outside the slice domain.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":151789,"byte_end":151851,"line_start":297,"line_end":297,"column_start":2,"column_end":64}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":151853,"byte_end":151856,"line_start":298,"line_end":298,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":151858,"byte_end":151872,"line_start":299,"line_end":299,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":151874,"byte_end":151877,"line_start":300,"line_end":300,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":151879,"byte_end":151890,"line_start":301,"line_end":301,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":151892,"byte_end":151919,"line_start":302,"line_end":302,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":151921,"byte_end":151924,"line_start":303,"line_end":303,"column_start":2,"column_end":5}},{"value":"/ let mut store = 8u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":151926,"byte_end":151950,"line_start":304,"line_end":304,"column_start":2,"column_end":26}},{"value":"/ let bits = store.bits_mut::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":151952,"byte_end":151992,"line_start":305,"line_end":305,"column_start":2,"column_end":42}},{"value":"/ assert!(!bits[3]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":151994,"byte_end":152016,"line_start":306,"line_end":306,"column_start":2,"column_end":24}},{"value":"/ bits.set(3, true);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":152018,"byte_end":152040,"line_start":307,"line_end":307,"column_start":2,"column_end":24}},{"value":"/ assert!(bits[3]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":152042,"byte_end":152063,"line_start":308,"line_end":308,"column_start":2,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":152065,"byte_end":152072,"line_start":309,"line_end":309,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":153569,"byte_end":153582,"line_start":360,"line_end":360,"column_start":16,"column_end":29},"name":"set_unchecked","qualname":"<BitSlice<O, T>>::set_unchecked","value":"unsafe fn set_unchecked<'_>(&'_ mut Self, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets a bit at an index, without doing bounds checking.","sig":null,"attributes":[{"value":"/ Sets a bit at an index, without doing bounds checking.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":152269,"byte_end":152327,"line_start":316,"line_end":316,"column_start":2,"column_end":60}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":152329,"byte_end":152332,"line_start":317,"line_end":317,"column_start":2,"column_end":5}},{"value":"/ This is generally not recommended; use with caution! For a safe","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":152334,"byte_end":152401,"line_start":318,"line_end":318,"column_start":2,"column_end":69}},{"value":"/ alternative, see [`set`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":152403,"byte_end":152432,"line_start":319,"line_end":319,"column_start":2,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":152434,"byte_end":152437,"line_start":320,"line_end":320,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":152439,"byte_end":152455,"line_start":321,"line_end":321,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":152457,"byte_end":152460,"line_start":322,"line_end":322,"column_start":2,"column_end":5}},{"value":"/ - `&mut self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":152462,"byte_end":152479,"line_start":323,"line_end":323,"column_start":2,"column_end":19}},{"value":"/ - `index`: The bit index to retrieve. This index is *not* checked","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":152481,"byte_end":152550,"line_start":324,"line_end":324,"column_start":2,"column_end":71}},{"value":"/   against the length of `self`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":152552,"byte_end":152587,"line_start":325,"line_end":325,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":152589,"byte_end":152592,"line_start":326,"line_end":326,"column_start":2,"column_end":5}},{"value":"/ # Effects","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":152594,"byte_end":152607,"line_start":327,"line_end":327,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":152609,"byte_end":152612,"line_start":328,"line_end":328,"column_start":2,"column_end":5}},{"value":"/ The bit at `index` is set to `value`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":152614,"byte_end":152655,"line_start":329,"line_end":329,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":152657,"byte_end":152660,"line_start":330,"line_end":330,"column_start":2,"column_end":5}},{"value":"/ # Safety","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":152662,"byte_end":152674,"line_start":331,"line_end":331,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":152676,"byte_end":152679,"line_start":332,"line_end":332,"column_start":2,"column_end":5}},{"value":"/ This method is **not** safe. It performs raw pointer arithmetic to seek","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":152681,"byte_end":152756,"line_start":333,"line_end":333,"column_start":2,"column_end":77}},{"value":"/ from the start of the slice to the requested index, and set the bit","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":152758,"byte_end":152829,"line_start":334,"line_end":334,"column_start":2,"column_end":73}},{"value":"/ there. It does not inspect the length of `self`, and it is free to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":152831,"byte_end":152901,"line_start":335,"line_end":335,"column_start":2,"column_end":72}},{"value":"/ perform out-of-bounds memory *write* access.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":152903,"byte_end":152951,"line_start":336,"line_end":336,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":152953,"byte_end":152956,"line_start":337,"line_end":337,"column_start":2,"column_end":5}},{"value":"/ Use this method **only** when you have already performed the bounds","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":152958,"byte_end":153029,"line_start":338,"line_end":338,"column_start":2,"column_end":73}},{"value":"/ check, and can guarantee that the call occurs with a safely in-bounds","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":153031,"byte_end":153104,"line_start":339,"line_end":339,"column_start":2,"column_end":75}},{"value":"/ index.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":153106,"byte_end":153116,"line_start":340,"line_end":340,"column_start":2,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":153118,"byte_end":153121,"line_start":341,"line_end":341,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":153123,"byte_end":153137,"line_start":342,"line_end":342,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":153139,"byte_end":153142,"line_start":343,"line_end":343,"column_start":2,"column_end":5}},{"value":"/ This example uses a bit slice of length 2, and demonstrates","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":153144,"byte_end":153207,"line_start":344,"line_end":344,"column_start":2,"column_end":65}},{"value":"/ out-of-bounds access to the last bit in the element.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":153209,"byte_end":153265,"line_start":345,"line_end":345,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":153267,"byte_end":153270,"line_start":346,"line_end":346,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":153272,"byte_end":153283,"line_start":347,"line_end":347,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":153285,"byte_end":153312,"line_start":348,"line_end":348,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":153314,"byte_end":153317,"line_start":349,"line_end":349,"column_start":2,"column_end":5}},{"value":"/ let mut src = 0u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":153319,"byte_end":153341,"line_start":350,"line_end":350,"column_start":2,"column_end":24}},{"value":"/ {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":153343,"byte_end":153348,"line_start":351,"line_end":351,"column_start":2,"column_end":7}},{"value":"/  let bits = &mut src.bits_mut::<Msb0>()[2 .. 4];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":153350,"byte_end":153402,"line_start":352,"line_end":352,"column_start":2,"column_end":54}},{"value":"/  assert_eq!(bits.len(), 2);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":153404,"byte_end":153435,"line_start":353,"line_end":353,"column_start":2,"column_end":33}},{"value":"/  unsafe { bits.set_unchecked(5, true); }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":153437,"byte_end":153481,"line_start":354,"line_end":354,"column_start":2,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":153483,"byte_end":153488,"line_start":355,"line_end":355,"column_start":2,"column_end":7}},{"value":"/ assert_eq!(src, 1);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":153490,"byte_end":153513,"line_start":356,"line_end":356,"column_start":2,"column_end":25}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":153515,"byte_end":153522,"line_start":357,"line_end":357,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":153524,"byte_end":153527,"line_start":358,"line_end":358,"column_start":2,"column_end":5}},{"value":"/ [`set`]: #method.set","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":153529,"byte_end":153553,"line_start":359,"line_end":359,"column_start":2,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":156140,"byte_end":156142,"line_start":442,"line_end":442,"column_start":9,"column_end":11},"name":"at","qualname":"<BitSlice<O, T>>::at","value":"fn at<'a, I>(&'a mut Self, I) -> I::Mut where I: BitSliceIndex","parent":null,"children":[],"decl_id":null,"docs":" Produces a write reference to a region of the slice.","sig":null,"attributes":[{"value":"/ Produces a write reference to a region of the slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":153802,"byte_end":153858,"line_start":367,"line_end":367,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":153860,"byte_end":153863,"line_start":368,"line_end":368,"column_start":2,"column_end":5}},{"value":"/ This method corresponds to [`Index::index`], except that it produces a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":153865,"byte_end":153939,"line_start":369,"line_end":369,"column_start":2,"column_end":76}},{"value":"/ writable reference rather than a read-only reference. See","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":153941,"byte_end":154002,"line_start":370,"line_end":370,"column_start":2,"column_end":63}},{"value":"/ [`BitSliceIndex`] for the possible types of the produced reference.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":154004,"byte_end":154075,"line_start":371,"line_end":371,"column_start":2,"column_end":73}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":154077,"byte_end":154080,"line_start":372,"line_end":372,"column_start":2,"column_end":5}},{"value":"/ Use of this method locks the `&mut BitSlice` for the duration of the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":154082,"byte_end":154154,"line_start":373,"line_end":373,"column_start":2,"column_end":74}},{"value":"/ produced reference’s lifetime. If you need multiple **non-overlapping**","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":154156,"byte_end":154233,"line_start":374,"line_end":374,"column_start":2,"column_end":77}},{"value":"/ write references into a single source `&mut BitSlice`, see the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":154235,"byte_end":154301,"line_start":375,"line_end":375,"column_start":2,"column_end":68}},{"value":"/ [`::split_at_mut`] method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":154303,"byte_end":154333,"line_start":376,"line_end":376,"column_start":2,"column_end":32}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":154335,"byte_end":154338,"line_start":377,"line_end":377,"column_start":2,"column_end":5}},{"value":"/ # Lifetimes","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":154340,"byte_end":154355,"line_start":378,"line_end":378,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":154357,"byte_end":154360,"line_start":379,"line_end":379,"column_start":2,"column_end":5}},{"value":"/ - `'a`: Propagates the lifetime of the referent slice to the interior","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":154362,"byte_end":154435,"line_start":380,"line_end":380,"column_start":2,"column_end":75}},{"value":"/   reference produced.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":154437,"byte_end":154462,"line_start":381,"line_end":381,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":154464,"byte_end":154467,"line_start":382,"line_end":382,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":154469,"byte_end":154485,"line_start":383,"line_end":383,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":154487,"byte_end":154490,"line_start":384,"line_end":384,"column_start":2,"column_end":5}},{"value":"/ - `&mut self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":154492,"byte_end":154509,"line_start":385,"line_end":385,"column_start":2,"column_end":19}},{"value":"/ - `index`: Some value whose type can be used to index `BitSlice`s.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":154511,"byte_end":154581,"line_start":386,"line_end":386,"column_start":2,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":154583,"byte_end":154586,"line_start":387,"line_end":387,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":154588,"byte_end":154601,"line_start":388,"line_end":388,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":154603,"byte_end":154606,"line_start":389,"line_end":389,"column_start":2,"column_end":5}},{"value":"/ A writable reference into `self`, whose exact type is determined by","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":154608,"byte_end":154679,"line_start":390,"line_end":390,"column_start":2,"column_end":73}},{"value":"/ `index`’s implementation of [`BitSliceIndex`]. This may be either a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":154681,"byte_end":154754,"line_start":391,"line_end":391,"column_start":2,"column_end":73}},{"value":"/ smaller `&mut BitSlice` when `index` is a range, or a [`BitMut`] proxy","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":154756,"byte_end":154830,"line_start":392,"line_end":392,"column_start":2,"column_end":76}},{"value":"/ type when `index` is a `usize`. See the [`BitMut`] documentation for","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":154832,"byte_end":154904,"line_start":393,"line_end":393,"column_start":2,"column_end":74}},{"value":"/ information on how to use it.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":154906,"byte_end":154939,"line_start":394,"line_end":394,"column_start":2,"column_end":35}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":154941,"byte_end":154944,"line_start":395,"line_end":395,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":154946,"byte_end":154958,"line_start":396,"line_end":396,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":154960,"byte_end":154963,"line_start":397,"line_end":397,"column_start":2,"column_end":5}},{"value":"/ This panics if `index` is out of bounds of `self`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":154965,"byte_end":155019,"line_start":398,"line_end":398,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":155021,"byte_end":155024,"line_start":399,"line_end":399,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":155026,"byte_end":155040,"line_start":400,"line_end":400,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":155042,"byte_end":155045,"line_start":401,"line_end":401,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":155047,"byte_end":155058,"line_start":402,"line_end":402,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":155060,"byte_end":155087,"line_start":403,"line_end":403,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":155089,"byte_end":155092,"line_start":404,"line_end":404,"column_start":2,"column_end":5}},{"value":"/ let mut src = 0u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":155094,"byte_end":155116,"line_start":405,"line_end":405,"column_start":2,"column_end":24}},{"value":"/ let bits = src.bits_mut::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":155118,"byte_end":155156,"line_start":406,"line_end":406,"column_start":2,"column_end":40}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":155158,"byte_end":155161,"line_start":407,"line_end":407,"column_start":2,"column_end":5}},{"value":"/ assert!(!bits[0]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":155163,"byte_end":155185,"line_start":408,"line_end":408,"column_start":2,"column_end":24}},{"value":"/ *bits.at(0) = true;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":155187,"byte_end":155210,"line_start":409,"line_end":409,"column_start":2,"column_end":25}},{"value":"/ //  note the leading dereference.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":155212,"byte_end":155249,"line_start":410,"line_end":410,"column_start":2,"column_end":39}},{"value":"/ assert!(bits[0]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":155251,"byte_end":155272,"line_start":411,"line_end":411,"column_start":2,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":155274,"byte_end":155281,"line_start":412,"line_end":412,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":155283,"byte_end":155286,"line_start":413,"line_end":413,"column_start":2,"column_end":5}},{"value":"/ This example shows multiple usage by using `split_at_mut`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":155288,"byte_end":155350,"line_start":414,"line_end":414,"column_start":2,"column_end":64}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":155352,"byte_end":155355,"line_start":415,"line_end":415,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":155357,"byte_end":155368,"line_start":416,"line_end":416,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":155370,"byte_end":155397,"line_start":417,"line_end":417,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":155399,"byte_end":155402,"line_start":418,"line_end":418,"column_start":2,"column_end":5}},{"value":"/ let mut src = 0u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":155404,"byte_end":155426,"line_start":419,"line_end":419,"column_start":2,"column_end":24}},{"value":"/ let bits = src.bits_mut::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":155428,"byte_end":155466,"line_start":420,"line_end":420,"column_start":2,"column_end":40}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":155468,"byte_end":155471,"line_start":421,"line_end":421,"column_start":2,"column_end":5}},{"value":"/ {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":155473,"byte_end":155478,"line_start":422,"line_end":422,"column_start":2,"column_end":7}},{"value":"/  let (mut a, rest) = bits.split_at_mut(2);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":155480,"byte_end":155526,"line_start":423,"line_end":423,"column_start":2,"column_end":48}},{"value":"/  let (mut b, rest) = rest.split_at_mut(3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":155528,"byte_end":155574,"line_start":424,"line_end":424,"column_start":2,"column_end":48}},{"value":"/  *a.at(0) = true;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":155576,"byte_end":155597,"line_start":425,"line_end":425,"column_start":2,"column_end":23}},{"value":"/  *b.at(0) = true;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":155599,"byte_end":155620,"line_start":426,"line_end":426,"column_start":2,"column_end":23}},{"value":"/  *rest.at(0) = true;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":155622,"byte_end":155646,"line_start":427,"line_end":427,"column_start":2,"column_end":26}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":155648,"byte_end":155653,"line_start":428,"line_end":428,"column_start":2,"column_end":7}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":155655,"byte_end":155658,"line_start":429,"line_end":429,"column_start":2,"column_end":5}},{"value":"/ assert_eq!(bits.as_slice()[0], 0b1010_0100);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":155660,"byte_end":155708,"line_start":430,"line_end":430,"column_start":2,"column_end":50}},{"value":"/ //                               a b   rest","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":155710,"byte_end":155757,"line_start":431,"line_end":431,"column_start":2,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":155759,"byte_end":155766,"line_start":432,"line_end":432,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":155768,"byte_end":155771,"line_start":433,"line_end":433,"column_start":2,"column_end":5}},{"value":"/ The above example splits the slice into three (the first, the second,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":155773,"byte_end":155846,"line_start":434,"line_end":434,"column_start":2,"column_end":75}},{"value":"/ and the rest) in order to hold multiple write references into the slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":155848,"byte_end":155924,"line_start":435,"line_end":435,"column_start":2,"column_end":78}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":155926,"byte_end":155929,"line_start":436,"line_end":436,"column_start":2,"column_end":5}},{"value":"/ [`BitSliceIndex`]: trait.BitSliceIndex.html","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":155931,"byte_end":155978,"line_start":437,"line_end":437,"column_start":2,"column_end":49}},{"value":"/ [`::get`]: #method.get","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":155980,"byte_end":156006,"line_start":438,"line_end":438,"column_start":2,"column_end":28}},{"value":"/ [`::split_at_mut`]: #method.split_at_mut","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":156008,"byte_end":156052,"line_start":439,"line_end":439,"column_start":2,"column_end":46}},{"value":"deprecated(since = \"0.18.0\", note = \"Use `.get_mut()` instead\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":156054,"byte_end":156120,"line_start":440,"line_end":440,"column_start":2,"column_end":68}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":156122,"byte_end":156131,"line_start":441,"line_end":441,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":575},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":156652,"byte_end":156664,"line_start":456,"line_end":456,"column_start":16,"column_end":28},"name":"at_unchecked","qualname":"<BitSlice<O, T>>::at_unchecked","value":"unsafe fn at_unchecked<'a, I>(&'a mut Self, I) -> I::Mut where\nI: BitSliceIndex","parent":null,"children":[],"decl_id":null,"docs":" Version of [`at`](#method.at) that does not perform boundary checking.","sig":null,"attributes":[{"value":"/ Version of [`at`](#method.at) that does not perform boundary checking.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":156249,"byte_end":156323,"line_start":447,"line_end":447,"column_start":2,"column_end":76}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":156325,"byte_end":156328,"line_start":448,"line_end":448,"column_start":2,"column_end":5}},{"value":"/ # Safety","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":156330,"byte_end":156342,"line_start":449,"line_end":449,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":156344,"byte_end":156347,"line_start":450,"line_end":450,"column_start":2,"column_end":5}},{"value":"/ If `index` is outside the boundaries of `self`, then this function will","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":156349,"byte_end":156424,"line_start":451,"line_end":451,"column_start":2,"column_end":77}},{"value":"/ induce safety violations. The caller must ensure that `index` is within","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":156426,"byte_end":156501,"line_start":452,"line_end":452,"column_start":2,"column_end":77}},{"value":"/ the boundaries of `self` before calling.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":156503,"byte_end":156547,"line_start":453,"line_end":453,"column_start":2,"column_end":46}},{"value":"deprecated(since = \"0.18.0\", note = \"Use `.get_unchecked_mut()` instead\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":156549,"byte_end":156625,"line_start":454,"line_end":454,"column_start":2,"column_end":78}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":156627,"byte_end":156636,"line_start":455,"line_end":455,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":157106,"byte_end":157124,"line_start":469,"line_end":469,"column_start":16,"column_end":34},"name":"split_at_unchecked","qualname":"<BitSlice<O, T>>::split_at_unchecked","value":"unsafe fn split_at_unchecked<'_>(&'_ Self, usize) -> (&'_ Self, &'_ Self)","parent":null,"children":[],"decl_id":null,"docs":" Version of [`split_at`](#method.split_at) that does not perform boundary\n checking.","sig":null,"attributes":[{"value":"/ Version of [`split_at`](#method.split_at) that does not perform boundary","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":156779,"byte_end":156855,"line_start":461,"line_end":461,"column_start":2,"column_end":78}},{"value":"/ checking.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":156857,"byte_end":156870,"line_start":462,"line_end":462,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":156872,"byte_end":156875,"line_start":463,"line_end":463,"column_start":2,"column_end":5}},{"value":"/ # Safety","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":156877,"byte_end":156889,"line_start":464,"line_end":464,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":156891,"byte_end":156894,"line_start":465,"line_end":465,"column_start":2,"column_end":5}},{"value":"/ If `mid` is outside the boundaries of `self`, then this function will","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":156896,"byte_end":156969,"line_start":466,"line_end":466,"column_start":2,"column_end":75}},{"value":"/ induce safety violations. The caller must ensure that `mid` is within","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":156971,"byte_end":157044,"line_start":467,"line_end":467,"column_start":2,"column_end":75}},{"value":"/ the boundaries of `self` before calling.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":157046,"byte_end":157090,"line_start":468,"line_end":468,"column_start":2,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":157688,"byte_end":157710,"line_start":486,"line_end":486,"column_start":16,"column_end":38},"name":"split_at_mut_unchecked","qualname":"<BitSlice<O, T>>::split_at_mut_unchecked","value":"unsafe fn split_at_mut_unchecked<'_>(&'_ mut Self, usize)\n-> (&'_ mut Self, &'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Version of [`split_at_mut`](#method.split_at_mut) that does not perform\n boundary checking.","sig":null,"attributes":[{"value":"/ Version of [`split_at_mut`](#method.split_at_mut) that does not perform","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":157342,"byte_end":157417,"line_start":477,"line_end":477,"column_start":2,"column_end":77}},{"value":"/ boundary checking.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":157419,"byte_end":157441,"line_start":478,"line_end":478,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":157443,"byte_end":157446,"line_start":479,"line_end":479,"column_start":2,"column_end":5}},{"value":"/ # Safety","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":157448,"byte_end":157460,"line_start":480,"line_end":480,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":157462,"byte_end":157465,"line_start":481,"line_end":481,"column_start":2,"column_end":5}},{"value":"/ If `mid` is outside the boundaries of `self`, then this function will","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":157467,"byte_end":157540,"line_start":482,"line_end":482,"column_start":2,"column_end":75}},{"value":"/ induce safety violations. The caller must ensure that `mid` is within","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":157542,"byte_end":157615,"line_start":483,"line_end":483,"column_start":2,"column_end":75}},{"value":"/ the boundaries of `self` before calling.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":157617,"byte_end":157661,"line_start":484,"line_end":484,"column_start":2,"column_end":46}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":157663,"byte_end":157672,"line_start":485,"line_end":485,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":158160,"byte_end":158174,"line_start":501,"line_end":501,"column_start":16,"column_end":30},"name":"swap_unchecked","qualname":"<BitSlice<O, T>>::swap_unchecked","value":"unsafe fn swap_unchecked<'_>(&'_ mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Version of [`swap`](#method.swap) that does not perform boundary checks.","sig":null,"attributes":[{"value":"/ Version of [`swap`](#method.swap) that does not perform boundary checks.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":157899,"byte_end":157975,"line_start":494,"line_end":494,"column_start":2,"column_end":78}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":157977,"byte_end":157980,"line_start":495,"line_end":495,"column_start":2,"column_end":5}},{"value":"/ # Safety","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":157982,"byte_end":157994,"line_start":496,"line_end":496,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":157996,"byte_end":157999,"line_start":497,"line_end":497,"column_start":2,"column_end":5}},{"value":"/ `a` and `b` must be within the bounds of `self`, otherwise, the memory","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":158001,"byte_end":158075,"line_start":498,"line_end":498,"column_start":2,"column_end":76}},{"value":"/ access is unsound and may induce undefined behavior.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":158077,"byte_end":158133,"line_start":499,"line_end":499,"column_start":2,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":158135,"byte_end":158144,"line_start":500,"line_end":500,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":158879,"byte_end":158882,"line_start":537,"line_end":537,"column_start":9,"column_end":12},"name":"all","qualname":"<BitSlice<O, T>>::all","value":"fn all<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if *all* bits in the slice domain are set (logical `∧`).","sig":null,"attributes":[{"value":"/ Tests if *all* bits in the slice domain are set (logical `∧`).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":158353,"byte_end":158421,"line_start":508,"line_end":508,"column_start":2,"column_end":68}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":158423,"byte_end":158426,"line_start":509,"line_end":509,"column_start":2,"column_end":5}},{"value":"/ # Truth Table","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":158428,"byte_end":158445,"line_start":510,"line_end":510,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":158447,"byte_end":158450,"line_start":511,"line_end":511,"column_start":2,"column_end":5}},{"value":"/ ```text","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":158452,"byte_end":158463,"line_start":512,"line_end":512,"column_start":2,"column_end":13}},{"value":"/ 0 0 => 0","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":158465,"byte_end":158477,"line_start":513,"line_end":513,"column_start":2,"column_end":14}},{"value":"/ 0 1 => 0","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":158479,"byte_end":158491,"line_start":514,"line_end":514,"column_start":2,"column_end":14}},{"value":"/ 1 0 => 0","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":158493,"byte_end":158505,"line_start":515,"line_end":515,"column_start":2,"column_end":14}},{"value":"/ 1 1 => 1","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":158507,"byte_end":158519,"line_start":516,"line_end":516,"column_start":2,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":158521,"byte_end":158528,"line_start":517,"line_end":517,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":158530,"byte_end":158533,"line_start":518,"line_end":518,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":158535,"byte_end":158551,"line_start":519,"line_end":519,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":158553,"byte_end":158556,"line_start":520,"line_end":520,"column_start":2,"column_end":5}},{"value":"/ - `&self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":158558,"byte_end":158571,"line_start":521,"line_end":521,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":158573,"byte_end":158576,"line_start":522,"line_end":522,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":158578,"byte_end":158591,"line_start":523,"line_end":523,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":158593,"byte_end":158596,"line_start":524,"line_end":524,"column_start":2,"column_end":5}},{"value":"/ Whether all bits in the slice domain are set. The empty slice returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":158598,"byte_end":158671,"line_start":525,"line_end":525,"column_start":2,"column_end":75}},{"value":"/ `true`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":158673,"byte_end":158684,"line_start":526,"line_end":526,"column_start":2,"column_end":13}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":158686,"byte_end":158689,"line_start":527,"line_end":527,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":158691,"byte_end":158705,"line_start":528,"line_end":528,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":158707,"byte_end":158710,"line_start":529,"line_end":529,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":158712,"byte_end":158723,"line_start":530,"line_end":530,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":158725,"byte_end":158752,"line_start":531,"line_end":531,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":158754,"byte_end":158757,"line_start":532,"line_end":532,"column_start":2,"column_end":5}},{"value":"/ let bits = 0xFDu8.bits::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":158759,"byte_end":158796,"line_start":533,"line_end":533,"column_start":2,"column_end":39}},{"value":"/ assert!(bits[.. 4].all());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":158798,"byte_end":158828,"line_start":534,"line_end":534,"column_start":2,"column_end":32}},{"value":"/ assert!(!bits[4 ..].all());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":158830,"byte_end":158861,"line_start":535,"line_end":535,"column_start":2,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":158863,"byte_end":158870,"line_start":536,"line_end":536,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":160033,"byte_end":160036,"line_start":595,"line_end":595,"column_start":9,"column_end":12},"name":"any","qualname":"<BitSlice<O, T>>::any","value":"fn any<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if *any* bit in the slice is set (logical `∨`).","sig":null,"attributes":[{"value":"/ Tests if *any* bit in the slice is set (logical `∨`).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":159517,"byte_end":159576,"line_start":566,"line_end":566,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":159578,"byte_end":159581,"line_start":567,"line_end":567,"column_start":2,"column_end":5}},{"value":"/ # Truth Table","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":159583,"byte_end":159600,"line_start":568,"line_end":568,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":159602,"byte_end":159605,"line_start":569,"line_end":569,"column_start":2,"column_end":5}},{"value":"/ ```text","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":159607,"byte_end":159618,"line_start":570,"line_end":570,"column_start":2,"column_end":13}},{"value":"/ 0 0 => 0","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":159620,"byte_end":159632,"line_start":571,"line_end":571,"column_start":2,"column_end":14}},{"value":"/ 0 1 => 1","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":159634,"byte_end":159646,"line_start":572,"line_end":572,"column_start":2,"column_end":14}},{"value":"/ 1 0 => 1","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":159648,"byte_end":159660,"line_start":573,"line_end":573,"column_start":2,"column_end":14}},{"value":"/ 1 1 => 1","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":159662,"byte_end":159674,"line_start":574,"line_end":574,"column_start":2,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":159676,"byte_end":159683,"line_start":575,"line_end":575,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":159685,"byte_end":159688,"line_start":576,"line_end":576,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":159690,"byte_end":159706,"line_start":577,"line_end":577,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":159708,"byte_end":159711,"line_start":578,"line_end":578,"column_start":2,"column_end":5}},{"value":"/ - `&self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":159713,"byte_end":159726,"line_start":579,"line_end":579,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":159728,"byte_end":159731,"line_start":580,"line_end":580,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":159733,"byte_end":159746,"line_start":581,"line_end":581,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":159748,"byte_end":159751,"line_start":582,"line_end":582,"column_start":2,"column_end":5}},{"value":"/ Whether any bit in the slice domain is set. The empty slice returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":159753,"byte_end":159824,"line_start":583,"line_end":583,"column_start":2,"column_end":73}},{"value":"/ `false`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":159826,"byte_end":159838,"line_start":584,"line_end":584,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":159840,"byte_end":159843,"line_start":585,"line_end":585,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":159845,"byte_end":159859,"line_start":586,"line_end":586,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":159861,"byte_end":159864,"line_start":587,"line_end":587,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":159866,"byte_end":159877,"line_start":588,"line_end":588,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":159879,"byte_end":159906,"line_start":589,"line_end":589,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":159908,"byte_end":159911,"line_start":590,"line_end":590,"column_start":2,"column_end":5}},{"value":"/ let bits = 0x40u8.bits::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":159913,"byte_end":159950,"line_start":591,"line_end":591,"column_start":2,"column_end":39}},{"value":"/ assert!(bits[.. 4].any());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":159952,"byte_end":159982,"line_start":592,"line_end":592,"column_start":2,"column_end":32}},{"value":"/ assert!(!bits[4 ..].any());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":159984,"byte_end":160015,"line_start":593,"line_end":593,"column_start":2,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":160017,"byte_end":160024,"line_start":594,"line_end":594,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":161173,"byte_end":161180,"line_start":653,"line_end":653,"column_start":9,"column_end":16},"name":"not_all","qualname":"<BitSlice<O, T>>::not_all","value":"fn not_all<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if *any* bit in the slice is unset (logical `¬∧`).","sig":null,"attributes":[{"value":"/ Tests if *any* bit in the slice is unset (logical `¬∧`).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":160671,"byte_end":160734,"line_start":624,"line_end":624,"column_start":2,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":160736,"byte_end":160739,"line_start":625,"line_end":625,"column_start":2,"column_end":5}},{"value":"/ # Truth Table","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":160741,"byte_end":160758,"line_start":626,"line_end":626,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":160760,"byte_end":160763,"line_start":627,"line_end":627,"column_start":2,"column_end":5}},{"value":"/ ```text","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":160765,"byte_end":160776,"line_start":628,"line_end":628,"column_start":2,"column_end":13}},{"value":"/ 0 0 => 1","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":160778,"byte_end":160790,"line_start":629,"line_end":629,"column_start":2,"column_end":14}},{"value":"/ 0 1 => 1","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":160792,"byte_end":160804,"line_start":630,"line_end":630,"column_start":2,"column_end":14}},{"value":"/ 1 0 => 1","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":160806,"byte_end":160818,"line_start":631,"line_end":631,"column_start":2,"column_end":14}},{"value":"/ 1 1 => 0","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":160820,"byte_end":160832,"line_start":632,"line_end":632,"column_start":2,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":160834,"byte_end":160841,"line_start":633,"line_end":633,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":160843,"byte_end":160846,"line_start":634,"line_end":634,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":160848,"byte_end":160864,"line_start":635,"line_end":635,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":160866,"byte_end":160869,"line_start":636,"line_end":636,"column_start":2,"column_end":5}},{"value":"/ - `&self","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":160871,"byte_end":160883,"line_start":637,"line_end":637,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":160885,"byte_end":160888,"line_start":638,"line_end":638,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":160890,"byte_end":160903,"line_start":639,"line_end":639,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":160905,"byte_end":160908,"line_start":640,"line_end":640,"column_start":2,"column_end":5}},{"value":"/ Whether any bit in the slice domain is unset.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":160910,"byte_end":160959,"line_start":641,"line_end":641,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":160961,"byte_end":160964,"line_start":642,"line_end":642,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":160966,"byte_end":160980,"line_start":643,"line_end":643,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":160982,"byte_end":160985,"line_start":644,"line_end":644,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":160987,"byte_end":160998,"line_start":645,"line_end":645,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":161000,"byte_end":161027,"line_start":646,"line_end":646,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":161029,"byte_end":161032,"line_start":647,"line_end":647,"column_start":2,"column_end":5}},{"value":"/ let bits = 0xFDu8.bits::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":161034,"byte_end":161071,"line_start":648,"line_end":648,"column_start":2,"column_end":39}},{"value":"/ assert!(!bits[.. 4].not_all());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":161073,"byte_end":161108,"line_start":649,"line_end":649,"column_start":2,"column_end":37}},{"value":"/ assert!(bits[4 ..].not_all());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":161110,"byte_end":161144,"line_start":650,"line_end":650,"column_start":2,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":161146,"byte_end":161153,"line_start":651,"line_end":651,"column_start":2,"column_end":9}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":161155,"byte_end":161164,"line_start":652,"line_end":652,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":161724,"byte_end":161731,"line_start":686,"line_end":686,"column_start":9,"column_end":16},"name":"not_any","qualname":"<BitSlice<O, T>>::not_any","value":"fn not_any<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests if *all* bits in the slice are unset (logical `¬∨`).","sig":null,"attributes":[{"value":"/ Tests if *all* bits in the slice are unset (logical `¬∨`).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":161217,"byte_end":161282,"line_start":657,"line_end":657,"column_start":2,"column_end":64}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":161284,"byte_end":161287,"line_start":658,"line_end":658,"column_start":2,"column_end":5}},{"value":"/ # Truth Table","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":161289,"byte_end":161306,"line_start":659,"line_end":659,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":161308,"byte_end":161311,"line_start":660,"line_end":660,"column_start":2,"column_end":5}},{"value":"/ ```text","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":161313,"byte_end":161324,"line_start":661,"line_end":661,"column_start":2,"column_end":13}},{"value":"/ 0 0 => 1","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":161326,"byte_end":161338,"line_start":662,"line_end":662,"column_start":2,"column_end":14}},{"value":"/ 0 1 => 0","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":161340,"byte_end":161352,"line_start":663,"line_end":663,"column_start":2,"column_end":14}},{"value":"/ 1 0 => 0","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":161354,"byte_end":161366,"line_start":664,"line_end":664,"column_start":2,"column_end":14}},{"value":"/ 1 1 => 0","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":161368,"byte_end":161380,"line_start":665,"line_end":665,"column_start":2,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":161382,"byte_end":161389,"line_start":666,"line_end":666,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":161391,"byte_end":161394,"line_start":667,"line_end":667,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":161396,"byte_end":161412,"line_start":668,"line_end":668,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":161414,"byte_end":161417,"line_start":669,"line_end":669,"column_start":2,"column_end":5}},{"value":"/ - `&self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":161419,"byte_end":161432,"line_start":670,"line_end":670,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":161434,"byte_end":161437,"line_start":671,"line_end":671,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":161439,"byte_end":161452,"line_start":672,"line_end":672,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":161454,"byte_end":161457,"line_start":673,"line_end":673,"column_start":2,"column_end":5}},{"value":"/ Whether all bits in the slice domain are unset.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":161459,"byte_end":161510,"line_start":674,"line_end":674,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":161512,"byte_end":161515,"line_start":675,"line_end":675,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":161517,"byte_end":161531,"line_start":676,"line_end":676,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":161533,"byte_end":161536,"line_start":677,"line_end":677,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":161538,"byte_end":161549,"line_start":678,"line_end":678,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":161551,"byte_end":161578,"line_start":679,"line_end":679,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":161580,"byte_end":161583,"line_start":680,"line_end":680,"column_start":2,"column_end":5}},{"value":"/ let bits = 0x40u8.bits::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":161585,"byte_end":161622,"line_start":681,"line_end":681,"column_start":2,"column_end":39}},{"value":"/ assert!(!bits[.. 4].not_any());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":161624,"byte_end":161659,"line_start":682,"line_end":682,"column_start":2,"column_end":37}},{"value":"/ assert!(bits[4 ..].not_any());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":161661,"byte_end":161695,"line_start":683,"line_end":683,"column_start":2,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":161697,"byte_end":161704,"line_start":684,"line_end":684,"column_start":2,"column_end":9}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":161706,"byte_end":161715,"line_start":685,"line_end":685,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":162454,"byte_end":162458,"line_start":724,"line_end":724,"column_start":9,"column_end":13},"name":"some","qualname":"<BitSlice<O, T>>::some","value":"fn some<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Tests whether the slice has some, but not all, bits set and some, but\n not all, bits unset.","sig":null,"attributes":[{"value":"/ Tests whether the slice has some, but not all, bits set and some, but","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":161768,"byte_end":161841,"line_start":690,"line_end":690,"column_start":2,"column_end":75}},{"value":"/ not all, bits unset.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":161843,"byte_end":161867,"line_start":691,"line_end":691,"column_start":2,"column_end":26}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":161869,"byte_end":161872,"line_start":692,"line_end":692,"column_start":2,"column_end":5}},{"value":"/ This is `false` if either `all()` or `not_any()` are `true`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":161874,"byte_end":161938,"line_start":693,"line_end":693,"column_start":2,"column_end":66}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":161940,"byte_end":161943,"line_start":694,"line_end":694,"column_start":2,"column_end":5}},{"value":"/ # Truth Table","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":161945,"byte_end":161962,"line_start":695,"line_end":695,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":161964,"byte_end":161967,"line_start":696,"line_end":696,"column_start":2,"column_end":5}},{"value":"/ ```text","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":161969,"byte_end":161980,"line_start":697,"line_end":697,"column_start":2,"column_end":13}},{"value":"/ 0 0 => 0","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":161982,"byte_end":161994,"line_start":698,"line_end":698,"column_start":2,"column_end":14}},{"value":"/ 0 1 => 1","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":161996,"byte_end":162008,"line_start":699,"line_end":699,"column_start":2,"column_end":14}},{"value":"/ 1 0 => 1","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":162010,"byte_end":162022,"line_start":700,"line_end":700,"column_start":2,"column_end":14}},{"value":"/ 1 1 => 0","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":162024,"byte_end":162036,"line_start":701,"line_end":701,"column_start":2,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":162038,"byte_end":162045,"line_start":702,"line_end":702,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":162047,"byte_end":162050,"line_start":703,"line_end":703,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":162052,"byte_end":162068,"line_start":704,"line_end":704,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":162070,"byte_end":162073,"line_start":705,"line_end":705,"column_start":2,"column_end":5}},{"value":"/ - `&self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":162075,"byte_end":162088,"line_start":706,"line_end":706,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":162090,"byte_end":162093,"line_start":707,"line_end":707,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":162095,"byte_end":162108,"line_start":708,"line_end":708,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":162110,"byte_end":162113,"line_start":709,"line_end":709,"column_start":2,"column_end":5}},{"value":"/ Whether the slice domain has mixed content. The empty slice returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":162115,"byte_end":162186,"line_start":710,"line_end":710,"column_start":2,"column_end":73}},{"value":"/ `false`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":162188,"byte_end":162200,"line_start":711,"line_end":711,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":162202,"byte_end":162205,"line_start":712,"line_end":712,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":162207,"byte_end":162221,"line_start":713,"line_end":713,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":162223,"byte_end":162226,"line_start":714,"line_end":714,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":162228,"byte_end":162239,"line_start":715,"line_end":715,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":162241,"byte_end":162268,"line_start":716,"line_end":716,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":162270,"byte_end":162273,"line_start":717,"line_end":717,"column_start":2,"column_end":5}},{"value":"/ let bits = 0b111_000_10u8.bits::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":162275,"byte_end":162320,"line_start":718,"line_end":718,"column_start":2,"column_end":47}},{"value":"/ assert!(!bits[0 .. 3].some());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":162322,"byte_end":162356,"line_start":719,"line_end":719,"column_start":2,"column_end":36}},{"value":"/ assert!(!bits[3 .. 6].some());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":162358,"byte_end":162392,"line_start":720,"line_end":720,"column_start":2,"column_end":36}},{"value":"/ assert!(bits[6 ..].some());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":162394,"byte_end":162425,"line_start":721,"line_end":721,"column_start":2,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":162427,"byte_end":162434,"line_start":722,"line_end":722,"column_start":2,"column_end":9}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":162436,"byte_end":162445,"line_start":723,"line_end":723,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":162846,"byte_end":162856,"line_start":746,"line_end":746,"column_start":9,"column_end":19},"name":"count_ones","qualname":"<BitSlice<O, T>>::count_ones","value":"fn count_ones<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Counts how many bits are set high.","sig":null,"attributes":[{"value":"/ Counts how many bits are set high.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":162512,"byte_end":162550,"line_start":728,"line_end":728,"column_start":2,"column_end":40}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":162552,"byte_end":162555,"line_start":729,"line_end":729,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":162557,"byte_end":162573,"line_start":730,"line_end":730,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":162575,"byte_end":162578,"line_start":731,"line_end":731,"column_start":2,"column_end":5}},{"value":"/ - `&self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":162580,"byte_end":162593,"line_start":732,"line_end":732,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":162595,"byte_end":162598,"line_start":733,"line_end":733,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":162600,"byte_end":162613,"line_start":734,"line_end":734,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":162615,"byte_end":162618,"line_start":735,"line_end":735,"column_start":2,"column_end":5}},{"value":"/ The number of high bits in the slice domain.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":162620,"byte_end":162668,"line_start":736,"line_end":736,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":162670,"byte_end":162673,"line_start":737,"line_end":737,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":162675,"byte_end":162689,"line_start":738,"line_end":738,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":162691,"byte_end":162694,"line_start":739,"line_end":739,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":162696,"byte_end":162707,"line_start":740,"line_end":740,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":162709,"byte_end":162736,"line_start":741,"line_end":741,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":162738,"byte_end":162741,"line_start":742,"line_end":742,"column_start":2,"column_end":5}},{"value":"/ let bits = [0xFDu8, 0x25].bits::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":162743,"byte_end":162788,"line_start":743,"line_end":743,"column_start":2,"column_end":47}},{"value":"/ assert_eq!(bits.count_ones(), 10);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":162790,"byte_end":162828,"line_start":744,"line_end":744,"column_start":2,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":162830,"byte_end":162837,"line_start":745,"line_end":745,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":163882,"byte_end":163893,"line_start":795,"line_end":795,"column_start":9,"column_end":20},"name":"count_zeros","qualname":"<BitSlice<O, T>>::count_zeros","value":"fn count_zeros<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Counts how many bits are set low.","sig":null,"attributes":[{"value":"/ Counts how many bits are set low.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":163550,"byte_end":163587,"line_start":777,"line_end":777,"column_start":2,"column_end":39}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":163589,"byte_end":163592,"line_start":778,"line_end":778,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":163594,"byte_end":163610,"line_start":779,"line_end":779,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":163612,"byte_end":163615,"line_start":780,"line_end":780,"column_start":2,"column_end":5}},{"value":"/ - `&self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":163617,"byte_end":163630,"line_start":781,"line_end":781,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":163632,"byte_end":163635,"line_start":782,"line_end":782,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":163637,"byte_end":163650,"line_start":783,"line_end":783,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":163652,"byte_end":163655,"line_start":784,"line_end":784,"column_start":2,"column_end":5}},{"value":"/ The number of low bits in the slice domain.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":163657,"byte_end":163704,"line_start":785,"line_end":785,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":163706,"byte_end":163709,"line_start":786,"line_end":786,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":163711,"byte_end":163725,"line_start":787,"line_end":787,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":163727,"byte_end":163730,"line_start":788,"line_end":788,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":163732,"byte_end":163743,"line_start":789,"line_end":789,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":163745,"byte_end":163772,"line_start":790,"line_end":790,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":163774,"byte_end":163777,"line_start":791,"line_end":791,"column_start":2,"column_end":5}},{"value":"/ let bits = [0xFDu8, 0x25].bits::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":163779,"byte_end":163824,"line_start":792,"line_end":792,"column_start":2,"column_end":47}},{"value":"/ assert_eq!(bits.count_zeros(), 6);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":163826,"byte_end":163864,"line_start":793,"line_end":793,"column_start":2,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":163866,"byte_end":163873,"line_start":794,"line_end":794,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":164509,"byte_end":164516,"line_start":820,"line_end":820,"column_start":9,"column_end":16},"name":"set_all","qualname":"<BitSlice<O, T>>::set_all","value":"fn set_all<'_>(&'_ mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Set all bits in the slice to a value.","sig":null,"attributes":[{"value":"/ Set all bits in the slice to a value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":163950,"byte_end":163991,"line_start":799,"line_end":799,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":163993,"byte_end":163996,"line_start":800,"line_end":800,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":163998,"byte_end":164014,"line_start":801,"line_end":801,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":164016,"byte_end":164019,"line_start":802,"line_end":802,"column_start":2,"column_end":5}},{"value":"/ - `&mut self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":164021,"byte_end":164038,"line_start":803,"line_end":803,"column_start":2,"column_end":19}},{"value":"/ - `value`: The bit value to which all bits in the slice will be set.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":164040,"byte_end":164112,"line_start":804,"line_end":804,"column_start":2,"column_end":74}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":164114,"byte_end":164117,"line_start":805,"line_end":805,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":164119,"byte_end":164133,"line_start":806,"line_end":806,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":164135,"byte_end":164138,"line_start":807,"line_end":807,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":164140,"byte_end":164151,"line_start":808,"line_end":808,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":164153,"byte_end":164180,"line_start":809,"line_end":809,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":164182,"byte_end":164185,"line_start":810,"line_end":810,"column_start":2,"column_end":5}},{"value":"/ let mut src = 0u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":164187,"byte_end":164209,"line_start":811,"line_end":811,"column_start":2,"column_end":24}},{"value":"/ let bits = src.bits_mut::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":164211,"byte_end":164249,"line_start":812,"line_end":812,"column_start":2,"column_end":40}},{"value":"/ bits[2 .. 6].set_all(true);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":164251,"byte_end":164282,"line_start":813,"line_end":813,"column_start":2,"column_end":33}},{"value":"/ assert_eq!(bits.as_ref(), &[0b0011_1100]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":164284,"byte_end":164330,"line_start":814,"line_end":814,"column_start":2,"column_end":48}},{"value":"/ bits[3 .. 5].set_all(false);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":164332,"byte_end":164364,"line_start":815,"line_end":815,"column_start":2,"column_end":34}},{"value":"/ assert_eq!(bits.as_ref(), &[0b0010_0100]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":164366,"byte_end":164412,"line_start":816,"line_end":816,"column_start":2,"column_end":48}},{"value":"/ bits[.. 1].set_all(true);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":164414,"byte_end":164443,"line_start":817,"line_end":817,"column_start":2,"column_end":31}},{"value":"/ assert_eq!(bits.as_ref(), &[0b1010_0100]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":164445,"byte_end":164491,"line_start":818,"line_end":818,"column_start":2,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":164493,"byte_end":164500,"line_start":819,"line_end":819,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":165884,"byte_end":165892,"line_start":873,"line_end":873,"column_start":9,"column_end":17},"name":"for_each","qualname":"<BitSlice<O, T>>::for_each","value":"fn for_each<F, '_>(&'_ mut Self, F) where F: Fn(usize, bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Provides mutable traversal of the collection.","sig":null,"attributes":[{"value":"/ Provides mutable traversal of the collection.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":165074,"byte_end":165123,"line_start":847,"line_end":847,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":165125,"byte_end":165128,"line_start":848,"line_end":848,"column_start":2,"column_end":5}},{"value":"/ It is impossible to implement `IndexMut` on `BitSlice`, because bits do","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":165130,"byte_end":165205,"line_start":849,"line_end":849,"column_start":2,"column_end":77}},{"value":"/ not have addresses, so there can be no `&mut u1`. This method allows the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":165207,"byte_end":165283,"line_start":850,"line_end":850,"column_start":2,"column_end":78}},{"value":"/ client to receive an enumerated bit, and provide a new bit to set at","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":165285,"byte_end":165357,"line_start":851,"line_end":851,"column_start":2,"column_end":74}},{"value":"/ each index.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":165359,"byte_end":165374,"line_start":852,"line_end":852,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":165376,"byte_end":165379,"line_start":853,"line_end":853,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":165381,"byte_end":165397,"line_start":854,"line_end":854,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":165399,"byte_end":165402,"line_start":855,"line_end":855,"column_start":2,"column_end":5}},{"value":"/ - `&mut self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":165404,"byte_end":165421,"line_start":856,"line_end":856,"column_start":2,"column_end":19}},{"value":"/ - `func`: A function which receives a `(usize, bool)` pair of index and","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":165423,"byte_end":165498,"line_start":857,"line_end":857,"column_start":2,"column_end":77}},{"value":"/   value, and returns a bool. It receives the bit at each position, and","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":165500,"byte_end":165574,"line_start":858,"line_end":858,"column_start":2,"column_end":76}},{"value":"/   the return value is written back at that position.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":165576,"byte_end":165632,"line_start":859,"line_end":859,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":165634,"byte_end":165637,"line_start":860,"line_end":860,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":165639,"byte_end":165653,"line_start":861,"line_end":861,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":165655,"byte_end":165658,"line_start":862,"line_end":862,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":165660,"byte_end":165671,"line_start":863,"line_end":863,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":165673,"byte_end":165700,"line_start":864,"line_end":864,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":165702,"byte_end":165705,"line_start":865,"line_end":865,"column_start":2,"column_end":5}},{"value":"/ let mut src = 0u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":165707,"byte_end":165729,"line_start":866,"line_end":866,"column_start":2,"column_end":24}},{"value":"/ {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":165731,"byte_end":165736,"line_start":867,"line_end":867,"column_start":2,"column_end":7}},{"value":"/  let bits = src.bits_mut::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":165738,"byte_end":165777,"line_start":868,"line_end":868,"column_start":2,"column_end":41}},{"value":"/  bits.for_each(|idx, _bit| idx % 3 == 0);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":165779,"byte_end":165824,"line_start":869,"line_end":869,"column_start":2,"column_end":47}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":165826,"byte_end":165831,"line_start":870,"line_end":870,"column_start":2,"column_end":7}},{"value":"/ assert_eq!(src, 0b1001_0010);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":165833,"byte_end":165866,"line_start":871,"line_end":871,"column_start":2,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":165868,"byte_end":165875,"line_start":872,"line_end":872,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":168104,"byte_end":168122,"line_start":942,"line_end":942,"column_start":9,"column_end":27},"name":"add_assign_reverse","qualname":"<BitSlice<O, T>>::add_assign_reverse","value":"fn add_assign_reverse<I, '_>(&'_ mut Self, I) -> bool where\nI: IntoIterator<Item = bool>","parent":null,"children":[],"decl_id":null,"docs":" Performs “reverse” addition (left to right instead of right to left).","sig":null,"attributes":[{"value":"/ Performs “reverse” addition (left to right instead of right to left).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":166113,"byte_end":166190,"line_start":884,"line_end":884,"column_start":2,"column_end":75}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":166192,"byte_end":166195,"line_start":885,"line_end":885,"column_start":2,"column_end":5}},{"value":"/ This addition interprets the slice, and the other addend, as having its","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":166197,"byte_end":166272,"line_start":886,"line_end":886,"column_start":2,"column_end":77}},{"value":"/ least significant bits first in the order and its most significant bits","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":166274,"byte_end":166349,"line_start":887,"line_end":887,"column_start":2,"column_end":77}},{"value":"/ last. This is most likely to be numerically useful under a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":166351,"byte_end":166413,"line_start":888,"line_end":888,"column_start":2,"column_end":64}},{"value":"/ `Lsb0` `BitOrder` type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":166415,"byte_end":166442,"line_start":889,"line_end":889,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":166444,"byte_end":166447,"line_start":890,"line_end":890,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":166449,"byte_end":166465,"line_start":891,"line_end":891,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":166467,"byte_end":166470,"line_start":892,"line_end":892,"column_start":2,"column_end":5}},{"value":"/ - `&mut self`: The addition uses `self` as one addend, and writes the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":166472,"byte_end":166545,"line_start":893,"line_end":893,"column_start":2,"column_end":75}},{"value":"/   sum back into `self`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":166547,"byte_end":166574,"line_start":894,"line_end":894,"column_start":2,"column_end":29}},{"value":"/ - `addend: impl IntoIterator<Item=bool>`: A stream of bits. When this is","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":166576,"byte_end":166652,"line_start":895,"line_end":895,"column_start":2,"column_end":78}},{"value":"/   another `BitSlice`, iteration proceeds from left to right.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":166654,"byte_end":166718,"line_start":896,"line_end":896,"column_start":2,"column_end":66}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":166720,"byte_end":166723,"line_start":897,"line_end":897,"column_start":2,"column_end":5}},{"value":"/ # Return","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":166725,"byte_end":166737,"line_start":898,"line_end":898,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":166739,"byte_end":166742,"line_start":899,"line_end":899,"column_start":2,"column_end":5}},{"value":"/ The final carry bit is returned","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":166744,"byte_end":166779,"line_start":900,"line_end":900,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":166781,"byte_end":166784,"line_start":901,"line_end":901,"column_start":2,"column_end":5}},{"value":"/ # Effects","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":166786,"byte_end":166799,"line_start":902,"line_end":902,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":166801,"byte_end":166804,"line_start":903,"line_end":903,"column_start":2,"column_end":5}},{"value":"/ Starting from index `0` and proceeding upwards until either `self` or","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":166806,"byte_end":166879,"line_start":904,"line_end":904,"column_start":2,"column_end":75}},{"value":"/ `addend` expires, the carry-propagated addition of `self[i]` and","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":166881,"byte_end":166949,"line_start":905,"line_end":905,"column_start":2,"column_end":70}},{"value":"/ `addend[i]` is written to `self[i]`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":166951,"byte_end":166991,"line_start":906,"line_end":906,"column_start":2,"column_end":42}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":166993,"byte_end":166996,"line_start":907,"line_end":907,"column_start":2,"column_end":5}},{"value":"/ ```text","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":166998,"byte_end":167009,"line_start":908,"line_end":908,"column_start":2,"column_end":13}},{"value":"/   101111","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":167011,"byte_end":167023,"line_start":909,"line_end":909,"column_start":2,"column_end":14}},{"value":"/ + 0010__ (the two missing bits are logically zero)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":167025,"byte_end":167079,"line_start":910,"line_end":910,"column_start":2,"column_end":56}},{"value":"/ --------","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":167081,"byte_end":167093,"line_start":911,"line_end":911,"column_start":2,"column_end":14}},{"value":"/   100000 1 (the carry-out is returned)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":167095,"byte_end":167137,"line_start":912,"line_end":912,"column_start":2,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":167139,"byte_end":167146,"line_start":913,"line_end":913,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":167148,"byte_end":167151,"line_start":914,"line_end":914,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":167153,"byte_end":167167,"line_start":915,"line_end":915,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":167169,"byte_end":167172,"line_start":916,"line_end":916,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":167174,"byte_end":167185,"line_start":917,"line_end":917,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":167187,"byte_end":167214,"line_start":918,"line_end":918,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":167216,"byte_end":167219,"line_start":919,"line_end":919,"column_start":2,"column_end":5}},{"value":"/ let mut a = 0b0000_1010u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":167221,"byte_end":167251,"line_start":920,"line_end":920,"column_start":2,"column_end":32}},{"value":"/ let     b = 0b0000_1100u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":167253,"byte_end":167283,"line_start":921,"line_end":921,"column_start":2,"column_end":32}},{"value":"/ //      s =      1 0110","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":167285,"byte_end":167312,"line_start":922,"line_end":922,"column_start":2,"column_end":29}},{"value":"/ let ab = &mut a.bits_mut::<Lsb0>()[.. 4];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":167314,"byte_end":167359,"line_start":923,"line_end":923,"column_start":2,"column_end":47}},{"value":"/ let bb = &    b.bits::<Lsb0>()[.. 4];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":167361,"byte_end":167402,"line_start":924,"line_end":924,"column_start":2,"column_end":43}},{"value":"/ let c = ab.add_assign_reverse(bb.iter().copied());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":167404,"byte_end":167458,"line_start":925,"line_end":925,"column_start":2,"column_end":56}},{"value":"/ assert!(c);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":167460,"byte_end":167475,"line_start":926,"line_end":926,"column_start":2,"column_end":17}},{"value":"/ assert_eq!(a, 0b0000_0110u8);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":167477,"byte_end":167510,"line_start":927,"line_end":927,"column_start":2,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":167512,"byte_end":167519,"line_start":928,"line_end":928,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":167521,"byte_end":167524,"line_start":929,"line_end":929,"column_start":2,"column_end":5}},{"value":"/ # Performance Notes","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":167526,"byte_end":167549,"line_start":930,"line_end":930,"column_start":2,"column_end":25}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":167551,"byte_end":167554,"line_start":931,"line_end":931,"column_start":2,"column_end":5}},{"value":"/ When using `Lsb0` `BitOrder` types, this can be accelerated by","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":167556,"byte_end":167622,"line_start":932,"line_end":932,"column_start":2,"column_end":68}},{"value":"/ delegating the addition to the underlying types. This is a software","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":167624,"byte_end":167695,"line_start":933,"line_end":933,"column_start":2,"column_end":73}},{"value":"/ implementation of the [ripple-carry adder], which has `O(n)` runtime in","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":167697,"byte_end":167772,"line_start":934,"line_end":934,"column_start":2,"column_end":77}},{"value":"/ the number of bits. The CPU is much faster, as it has access to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":167774,"byte_end":167841,"line_start":935,"line_end":935,"column_start":2,"column_end":69}},{"value":"/ element-wise or vectorized addition operations.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":167843,"byte_end":167894,"line_start":936,"line_end":936,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":167896,"byte_end":167899,"line_start":937,"line_end":937,"column_start":2,"column_end":5}},{"value":"/ If your use case sincerely needs binary-integer arithmetic operations on","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":167901,"byte_end":167977,"line_start":938,"line_end":938,"column_start":2,"column_end":78}},{"value":"/ bit sets, please file an issue.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":167979,"byte_end":168014,"line_start":939,"line_end":939,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":168016,"byte_end":168019,"line_start":940,"line_end":940,"column_start":2,"column_end":5}},{"value":"/ [ripple-carry adder]: https://en.wikipedia.org/wiki/Ripple-carry_adder","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":168021,"byte_end":168095,"line_start":941,"line_end":941,"column_start":2,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":169301,"byte_end":169309,"line_start":990,"line_end":990,"column_start":9,"column_end":17},"name":"as_slice","qualname":"<BitSlice<O, T>>::as_slice","value":"fn as_slice<'_>(&'_ Self) -> &'_ [T]","parent":null,"children":[],"decl_id":null,"docs":" Accesses the backing storage of the `BitSlice` as a slice of its\n elements.","sig":null,"attributes":[{"value":"/ Accesses the backing storage of the `BitSlice` as a slice of its","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":168671,"byte_end":168739,"line_start":962,"line_end":962,"column_start":2,"column_end":70}},{"value":"/ elements.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":168741,"byte_end":168754,"line_start":963,"line_end":963,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":168756,"byte_end":168759,"line_start":964,"line_end":964,"column_start":2,"column_end":5}},{"value":"/ This will not include partially-owned edge elements, as they may be","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":168761,"byte_end":168832,"line_start":965,"line_end":965,"column_start":2,"column_end":73}},{"value":"/ contended by other slice handles.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":168834,"byte_end":168871,"line_start":966,"line_end":966,"column_start":2,"column_end":39}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":168873,"byte_end":168876,"line_start":967,"line_end":967,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":168878,"byte_end":168894,"line_start":968,"line_end":968,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":168896,"byte_end":168899,"line_start":969,"line_end":969,"column_start":2,"column_end":5}},{"value":"/ - `&self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":168901,"byte_end":168914,"line_start":970,"line_end":970,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":168916,"byte_end":168919,"line_start":971,"line_end":971,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":168921,"byte_end":168934,"line_start":972,"line_end":972,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":168936,"byte_end":168939,"line_start":973,"line_end":973,"column_start":2,"column_end":5}},{"value":"/ A slice of all the elements that the `BitSlice` uses for storage.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":168941,"byte_end":169010,"line_start":974,"line_end":974,"column_start":2,"column_end":71}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":169012,"byte_end":169015,"line_start":975,"line_end":975,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":169017,"byte_end":169031,"line_start":976,"line_end":976,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":169033,"byte_end":169036,"line_start":977,"line_end":977,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":169038,"byte_end":169049,"line_start":978,"line_end":978,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":169051,"byte_end":169078,"line_start":979,"line_end":979,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":169080,"byte_end":169083,"line_start":980,"line_end":980,"column_start":2,"column_end":5}},{"value":"/ let src = [1u8, 66];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":169085,"byte_end":169109,"line_start":981,"line_end":981,"column_start":2,"column_end":26}},{"value":"/ let bits = src.bits::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":169111,"byte_end":169145,"line_start":982,"line_end":982,"column_start":2,"column_end":36}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":169147,"byte_end":169150,"line_start":983,"line_end":983,"column_start":2,"column_end":5}},{"value":"/ let accum = bits.as_slice()","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":169152,"byte_end":169183,"line_start":984,"line_end":984,"column_start":2,"column_end":33}},{"value":"/   .iter()","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":169185,"byte_end":169198,"line_start":985,"line_end":985,"column_start":2,"column_end":15}},{"value":"/   .map(|elt| elt.count_ones())","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":169200,"byte_end":169234,"line_start":986,"line_end":986,"column_start":2,"column_end":36}},{"value":"/   .sum::<u32>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":169236,"byte_end":169256,"line_start":987,"line_end":987,"column_start":2,"column_end":22}},{"value":"/ assert_eq!(accum, 3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":169258,"byte_end":169283,"line_start":988,"line_end":988,"column_start":2,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":169285,"byte_end":169292,"line_start":989,"line_end":989,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":605},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":170048,"byte_end":170060,"line_start":1018,"line_end":1018,"column_start":9,"column_end":21},"name":"as_mut_slice","qualname":"<BitSlice<O, T>>::as_mut_slice","value":"fn as_mut_slice<'_>(&'_ mut Self) -> &'_ mut [T]","parent":null,"children":[],"decl_id":null,"docs":" Accesses the underlying store.","sig":null,"attributes":[{"value":"/ Accesses the underlying store.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":169629,"byte_end":169663,"line_start":1001,"line_end":1001,"column_start":2,"column_end":36}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":169665,"byte_end":169668,"line_start":1002,"line_end":1002,"column_start":2,"column_end":5}},{"value":"/ This will not include partially-owned edge elements, as they may be","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":169670,"byte_end":169741,"line_start":1003,"line_end":1003,"column_start":2,"column_end":73}},{"value":"/ contended by other slice handles.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":169743,"byte_end":169780,"line_start":1004,"line_end":1004,"column_start":2,"column_end":39}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":169782,"byte_end":169785,"line_start":1005,"line_end":1005,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":169787,"byte_end":169801,"line_start":1006,"line_end":1006,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":169803,"byte_end":169806,"line_start":1007,"line_end":1007,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":169808,"byte_end":169819,"line_start":1008,"line_end":1008,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":169821,"byte_end":169848,"line_start":1009,"line_end":1009,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":169850,"byte_end":169853,"line_start":1010,"line_end":1010,"column_start":2,"column_end":5}},{"value":"/ let mut src = [1u8, 64];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":169855,"byte_end":169883,"line_start":1011,"line_end":1011,"column_start":2,"column_end":30}},{"value":"/ let bits = src.bits_mut::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":169885,"byte_end":169923,"line_start":1012,"line_end":1012,"column_start":2,"column_end":40}},{"value":"/ for elt in bits.as_mut_slice() {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":169925,"byte_end":169961,"line_start":1013,"line_end":1013,"column_start":2,"column_end":38}},{"value":"/   *elt |= 2;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":169963,"byte_end":169979,"line_start":1014,"line_end":1014,"column_start":2,"column_end":18}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":169981,"byte_end":169986,"line_start":1015,"line_end":1015,"column_start":2,"column_end":7}},{"value":"/ assert_eq!(&[3, 66], bits.as_slice());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":169988,"byte_end":170030,"line_start":1016,"line_end":1016,"column_start":2,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":170032,"byte_end":170039,"line_start":1017,"line_end":1017,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":170819,"byte_end":170833,"line_start":1043,"line_end":1043,"column_start":9,"column_end":23},"name":"as_total_slice","qualname":"<BitSlice<O, T>>::as_total_slice","value":"fn as_total_slice<'_>(&'_ Self) -> &'_ [T::Access]","parent":null,"children":[],"decl_id":null,"docs":" Accesses the underlying store, including contended partial elements.","sig":null,"attributes":[{"value":"/ Accesses the underlying store, including contended partial elements.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":170385,"byte_end":170457,"line_start":1029,"line_end":1029,"column_start":2,"column_end":74}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":170459,"byte_end":170462,"line_start":1030,"line_end":1030,"column_start":2,"column_end":5}},{"value":"/ This produces a slice of element wrappers that permit shared mutation,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":170464,"byte_end":170538,"line_start":1031,"line_end":1031,"column_start":2,"column_end":76}},{"value":"/ rather than a slice of the bare `T` fundamentals.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":170540,"byte_end":170593,"line_start":1032,"line_end":1032,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":170595,"byte_end":170598,"line_start":1033,"line_end":1033,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":170600,"byte_end":170616,"line_start":1034,"line_end":1034,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":170618,"byte_end":170621,"line_start":1035,"line_end":1035,"column_start":2,"column_end":5}},{"value":"/ - `&self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":170623,"byte_end":170636,"line_start":1036,"line_end":1036,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":170638,"byte_end":170641,"line_start":1037,"line_end":1037,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":170643,"byte_end":170656,"line_start":1038,"line_end":1038,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":170658,"byte_end":170661,"line_start":1039,"line_end":1039,"column_start":2,"column_end":5}},{"value":"/ A slice of all elements under the bit span, including any","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":170663,"byte_end":170724,"line_start":1040,"line_end":1040,"column_start":2,"column_end":63}},{"value":"/ partially-owned edge elements, wrapped in safe shared-mutation types.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":170726,"byte_end":170799,"line_start":1041,"line_end":1041,"column_start":2,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":170801,"byte_end":170810,"line_start":1042,"line_end":1042,"column_start":2,"column_end":11}}]},{"kind":"Trait","id":{"krate":0,"index":609},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":171896,"byte_end":171902,"line_start":1088,"line_end":1088,"column_start":11,"column_end":17},"name":"AsBits","qualname":"::slice::AsBits","value":"AsBits","parent":null,"children":[{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":613}],"decl_id":null,"docs":" Allows a type to be used as a sequence of immutable bits.","sig":null,"attributes":[{"value":"* Allows a type to be used as a sequence of immutable bits.\n\n# Requirements\n\nThis trait can only be implemented by contiguous structures: individual\nfundamentals, and sequences (arrays or slices) of them.\n**/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":171675,"byte_end":171885,"line_start":1081,"line_end":1087,"column_start":1,"column_end":4}}]},{"kind":"Type","id":{"krate":0,"index":610},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":171968,"byte_end":171973,"line_start":1090,"line_end":1090,"column_start":7,"column_end":12},"name":"Store","qualname":"::slice::AsBits::Store","value":"type Store: BitStore;","parent":{"krate":0,"index":609},"children":[],"decl_id":null,"docs":" The underlying fundamental type of the implementor.\n","sig":null,"attributes":[{"value":"/ The underlying fundamental type of the implementor.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":171906,"byte_end":171961,"line_start":1089,"line_end":1089,"column_start":2,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":172505,"byte_end":172509,"line_start":1116,"line_end":1116,"column_start":5,"column_end":9},"name":"bits","qualname":"::slice::AsBits::bits","value":"fn bits<O, '_>(&'_ Self) -> &'_ BitSlice<O, Self::Store> where O: BitOrder","parent":{"krate":0,"index":609},"children":[],"decl_id":null,"docs":" Constructs a `BitSlice` reference over data.","sig":null,"attributes":[{"value":"/ Constructs a `BitSlice` reference over data.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":171987,"byte_end":172035,"line_start":1092,"line_end":1092,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":172037,"byte_end":172040,"line_start":1093,"line_end":1093,"column_start":2,"column_end":5}},{"value":"/ # Type Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":172042,"byte_end":172063,"line_start":1094,"line_end":1094,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":172065,"byte_end":172068,"line_start":1095,"line_end":1095,"column_start":2,"column_end":5}},{"value":"/ - `O: BitOrder`: The `BitOrder` type used to index within the slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":172070,"byte_end":172142,"line_start":1096,"line_end":1096,"column_start":2,"column_end":74}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":172144,"byte_end":172147,"line_start":1097,"line_end":1097,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":172149,"byte_end":172165,"line_start":1098,"line_end":1098,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":172167,"byte_end":172170,"line_start":1099,"line_end":1099,"column_start":2,"column_end":5}},{"value":"/ - `&self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":172172,"byte_end":172185,"line_start":1100,"line_end":1100,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":172187,"byte_end":172190,"line_start":1101,"line_end":1101,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":172192,"byte_end":172205,"line_start":1102,"line_end":1102,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":172207,"byte_end":172210,"line_start":1103,"line_end":1103,"column_start":2,"column_end":5}},{"value":"/ A `BitSlice` handle over `self`’s data, using the provided `BitOrder`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":172212,"byte_end":172287,"line_start":1104,"line_end":1104,"column_start":2,"column_end":75}},{"value":"/ type and using `Self::Store` as the data type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":172289,"byte_end":172339,"line_start":1105,"line_end":1105,"column_start":2,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":172341,"byte_end":172344,"line_start":1106,"line_end":1106,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":172346,"byte_end":172360,"line_start":1107,"line_end":1107,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":172362,"byte_end":172365,"line_start":1108,"line_end":1108,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":172367,"byte_end":172378,"line_start":1109,"line_end":1109,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":172380,"byte_end":172407,"line_start":1110,"line_end":1110,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":172409,"byte_end":172412,"line_start":1111,"line_end":1111,"column_start":2,"column_end":5}},{"value":"/ let src = 8u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":172414,"byte_end":172432,"line_start":1112,"line_end":1112,"column_start":2,"column_end":20}},{"value":"/ let bits = src.bits::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":172434,"byte_end":172468,"line_start":1113,"line_end":1113,"column_start":2,"column_end":36}},{"value":"/ assert!(bits[4]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":172470,"byte_end":172491,"line_start":1114,"line_end":1114,"column_start":2,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":172493,"byte_end":172500,"line_start":1115,"line_end":1115,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":173159,"byte_end":173167,"line_start":1145,"line_end":1145,"column_start":5,"column_end":13},"name":"bits_mut","qualname":"::slice::AsBits::bits_mut","value":"fn bits_mut<O, '_>(&'_ mut Self) -> &'_ mut BitSlice<O, Self::Store> where\nO: BitOrder","parent":{"krate":0,"index":609},"children":[],"decl_id":null,"docs":" Constructs a mutable `BitSlice` reference over data.","sig":null,"attributes":[{"value":"/ Constructs a mutable `BitSlice` reference over data.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":172571,"byte_end":172627,"line_start":1119,"line_end":1119,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":172629,"byte_end":172632,"line_start":1120,"line_end":1120,"column_start":2,"column_end":5}},{"value":"/ # Type Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":172634,"byte_end":172655,"line_start":1121,"line_end":1121,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":172657,"byte_end":172660,"line_start":1122,"line_end":1122,"column_start":2,"column_end":5}},{"value":"/ - `O: BitOrder`: The `BitOrder` type used to index within the slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":172662,"byte_end":172734,"line_start":1123,"line_end":1123,"column_start":2,"column_end":74}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":172736,"byte_end":172739,"line_start":1124,"line_end":1124,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":172741,"byte_end":172757,"line_start":1125,"line_end":1125,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":172759,"byte_end":172762,"line_start":1126,"line_end":1126,"column_start":2,"column_end":5}},{"value":"/ - `&mut self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":172764,"byte_end":172781,"line_start":1127,"line_end":1127,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":172783,"byte_end":172786,"line_start":1128,"line_end":1128,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":172788,"byte_end":172801,"line_start":1129,"line_end":1129,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":172803,"byte_end":172806,"line_start":1130,"line_end":1130,"column_start":2,"column_end":5}},{"value":"/ A `BitSlice` handle over `self`’s data, using the provided `BitOrder`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":172808,"byte_end":172883,"line_start":1131,"line_end":1131,"column_start":2,"column_end":75}},{"value":"/ type and using `Self::Store` as the data type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":172885,"byte_end":172935,"line_start":1132,"line_end":1132,"column_start":2,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":172937,"byte_end":172940,"line_start":1133,"line_end":1133,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":172942,"byte_end":172956,"line_start":1134,"line_end":1134,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":172958,"byte_end":172961,"line_start":1135,"line_end":1135,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":172963,"byte_end":172974,"line_start":1136,"line_end":1136,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":172976,"byte_end":173003,"line_start":1137,"line_end":1137,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":173005,"byte_end":173008,"line_start":1138,"line_end":1138,"column_start":2,"column_end":5}},{"value":"/ let mut src = 8u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":173010,"byte_end":173032,"line_start":1139,"line_end":1139,"column_start":2,"column_end":24}},{"value":"/ let bits = src.bits_mut::<Lsb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":173034,"byte_end":173072,"line_start":1140,"line_end":1140,"column_start":2,"column_end":40}},{"value":"/ assert!(bits[3]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":173074,"byte_end":173095,"line_start":1141,"line_end":1141,"column_start":2,"column_end":23}},{"value":"/ *bits.at(3) = false;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":173097,"byte_end":173121,"line_start":1142,"line_end":1142,"column_start":2,"column_end":26}},{"value":"/ assert!(!bits[3]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":173123,"byte_end":173145,"line_start":1143,"line_end":1143,"column_start":2,"column_end":24}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":173147,"byte_end":173154,"line_start":1144,"line_end":1144,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":173300,"byte_end":173304,"line_start":1152,"line_end":1152,"column_start":5,"column_end":9},"name":"bits","qualname":"<T as slice::AsBits>::bits","value":"fn bits<O, '_>(&'_ Self) -> &'_ BitSlice<O, T> where O: BitOrder","parent":{"krate":0,"index":609},"children":[],"decl_id":{"krate":0,"index":611},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":173394,"byte_end":173402,"line_start":1157,"line_end":1157,"column_start":5,"column_end":13},"name":"bits_mut","qualname":"<T as slice::AsBits>::bits_mut","value":"fn bits_mut<O, '_>(&'_ mut Self) -> &'_ mut BitSlice<O, T> where O: BitOrder","parent":{"krate":0,"index":609},"children":[],"decl_id":{"krate":0,"index":613},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":173566,"byte_end":173570,"line_start":1166,"line_end":1166,"column_start":5,"column_end":9},"name":"bits","qualname":"<[T] as slice::AsBits>::bits","value":"fn bits<O, '_>(&'_ Self) -> &'_ BitSlice<O, T> where O: BitOrder","parent":{"krate":0,"index":609},"children":[],"decl_id":{"krate":0,"index":611},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":173658,"byte_end":173666,"line_start":1171,"line_end":1171,"column_start":5,"column_end":13},"name":"bits_mut","qualname":"<[T] as slice::AsBits>::bits_mut","value":"fn bits_mut<O, '_>(&'_ mut Self) -> &'_ mut BitSlice<O, T> where O: BitOrder","parent":{"krate":0,"index":609},"children":[],"decl_id":{"krate":0,"index":613},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":750},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":177351,"byte_end":177370,"line_start":116,"line_end":116,"column_start":15,"column_end":34},"name":"bits_from_raw_parts","qualname":"::slice::api::bits_from_raw_parts","value":"unsafe fn bits_from_raw_parts<'a, O, T>(*const T, BitIdx<T>, usize)\n-> &'a BitSlice<O, T> where O: BitOrder, T: 'a + BitStore","parent":null,"children":[],"decl_id":null,"docs":" Forms a `BitSlice` from a pointer, starting position, and length.","sig":null,"attributes":[{"value":"* Forms a `BitSlice` from a pointer, starting position, and length.\n\nThe `head` argument is the starting *index*, not the starting *bit position*.\nThe `bits` argumnent is the number of **bits**, not the number of elements `T`.\n\nThis function is the semantic equivalent to `[T]::from_raw_parts`, in contrast\nto [`from_raw_parts`] which is the API equivalent.\n\n# Safety\n\nThis function is unsafe as there is no guarantee that the given pointer is valid\nfor the elements required to hold `head + bits` bits, nor whether the lifetime\ninferred is a suitable lifetime for the returned slice.\n\n`data` must be non-null and aligned, even for zero-length slices. This is due to\nrequirements in the `bitvec` data structure operations. You can obtain a pointer\nthat is usable as `data` for zero-length slices from [`NonNull::dangling()`].\n\nThe total size of the bit slice must be no larger than `BitPtr::<T>::MAX_BITS`\n**bits** in memory. See the safety documentation of `BitPtr` (if available).\n\n# Caveat\n\nThe lifetime for the returned slice is inferred from its usage. To prevent\naccidental misuse, it’s suggested to tie the lifetime to whichever source\nlifetime is safe in the context, such as by providing a helper function taking\nthe lifetime of a host value for the slice, or by explicit annotation.\n\n# Examples\n\n```rust\nuse bitvec::{\n    indices::BitIdx,\n    order::Local,\n    slice,\n    slice::BitSlice,\n};\n\n// manifest a slice for a single element\nlet x = 42u8;\nlet ptr = &x as *const u8;\nlet bits: &BitSlice<Local, u8> = unsafe { slice::bits_from_raw_parts(\n    ptr,\n    BitIdx::new(2).unwrap(),\n    5\n) };\nassert_eq!(bits.len(), 5);\n```\n\n[`from_raw_parts`]: #fn.from_raw_parts\n**/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":175654,"byte_end":177336,"line_start":65,"line_end":115,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":754},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":178493,"byte_end":178516,"line_start":146,"line_end":146,"column_start":15,"column_end":38},"name":"bits_from_raw_parts_mut","qualname":"::slice::api::bits_from_raw_parts_mut","value":"unsafe fn bits_from_raw_parts_mut<'a, O, T>(*mut T, BitIdx<T>, usize)\n-> &'a mut BitSlice<O, T> where O: BitOrder, T: 'a + BitStore","parent":null,"children":[],"decl_id":null,"docs":" Performs the same functionality as [`bits_from_raw_parts`], except that a\nmutable slice is returned.","sig":null,"attributes":[{"value":"* Performs the same functionality as [`bits_from_raw_parts`], except that a\nmutable slice is returned.\n\nThis function is unsafe for the same reasons as [`bits_from_raw_parts`], as well\nas not being able to provide a non-aliasing guarantee of the returned mutable\nslice. `data` must be non-null and aligned even for zero-length slices as with\n[`bits_from_raw_parts`]. The total size of the slice must be no larger than\n`BitPtr::<T>::MAX_ELTS` **elements** `T` in memory.\n\nSee the documentation of [`bits_from_raw_parts`] for more details.\n\n# Safety\n\nBeyond the ordinary Rust requirements for aliasing, this function *also*\nrequires that the described region, when combined with the `O` [`BitOrder`]\ntype parameter, not cause aliasing with another `BitSlice` whose head and `O`\narguments cause aliasing in the underlying memory positions.\n\n[`BitOrder`]: ../order/trait.BitOrder.html\n[`bits_from_raw_parts`]: #fn.bits_from_raw_parts\n**/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":177543,"byte_end":178478,"line_start":125,"line_end":145,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":758},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":178885,"byte_end":178893,"line_start":162,"line_end":162,"column_start":8,"column_end":16},"name":"from_mut","qualname":"::slice::api::from_mut","value":"fn from_mut<O, T, '_>(&'_ mut T) -> &'_ mut BitSlice<O, T> where O: BitOrder,\nT: BitStore","parent":null,"children":[],"decl_id":null,"docs":" Converts a reference to `T` into a `BitSlice` of that element (without\ncopying).","sig":null,"attributes":[{"value":"* Converts a reference to `T` into a `BitSlice` of that element (without\ncopying).\n\n# Original\n\n[`core::slice::from_mut`](https://doc.rust-lang.org/core/slice/fn.from_mut.html)\n**/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":178695,"byte_end":178877,"line_start":155,"line_end":161,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":761},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":180431,"byte_end":180445,"line_start":208,"line_end":208,"column_start":15,"column_end":29},"name":"from_raw_parts","qualname":"::slice::api::from_raw_parts","value":"unsafe fn from_raw_parts<'a, O, T>(*const T, usize) -> &'a BitSlice<O, T>\nwhere O: BitOrder, T: 'a + BitStore","parent":null,"children":[],"decl_id":null,"docs":" Forms a bit slice from a pointer and a length.","sig":null,"attributes":[{"value":"* Forms a bit slice from a pointer and a length.\n\nThe `len` argument is the number of **elements**, not the number of bits.\n\n# Safety\n\nThis function is unsafe as there is no guarantee that the given pointer is valid\nfor `len` elements, nor whether the lifetime inferred is a suitable lifetime for\nthe returned slice.\n\n`data` must be non-null and aligned, even for zero-length slices. This is due to\nrequirements in the `bitvec` data structure operations. You can obtain a pointer\nthat is usable as `data` for zero-length slices from [`NonNull::dangling()`].\n\nThe total size of the bit slice must be no larger than `BitPtr::<T>::MAX_BITS`\n**bits** in memory. See the safety documentation of `BitPtr` (if available).\n\n# Caveat\n\nThe lifetime for the returned slice is inferred from its usage. To prevent\naccidental misuse, it’s suggested to tie the lifetime to whichever source\nlifetime is safe in the context, such as by providing a helper function taking\nthe lifetime of a host value for the slice, or by explicit annotation.\n\n# Original\n\n[`core::slice::from_raw_parts`](https://doc.rust-lang.org/core/slice/fn.from_raw_parts.html)\n\n# Examples\n\n```rust\n# use bitvec::prelude::*;\nuse bitvec::slice as bitslice;\n\n//  manifest a slice for a single element\nlet x = 42u8; // 0b0010_1010\nlet ptr = &x as *const _;\nlet bitslice = unsafe { bitslice::from_raw_parts::<Msb0, _>(ptr, 1) };\nassert!(bitslice[2]);\n```\n**/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":179005,"byte_end":180416,"line_start":167,"line_end":207,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":765},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":181328,"byte_end":181346,"line_start":237,"line_end":237,"column_start":15,"column_end":33},"name":"from_raw_parts_mut","qualname":"::slice::api::from_raw_parts_mut","value":"unsafe fn from_raw_parts_mut<'a, O, T>(*mut T, usize)\n-> &'a mut BitSlice<O, T> where O: BitOrder, T: 'a + BitStore","parent":null,"children":[],"decl_id":null,"docs":" Performs the same functionality as [`from_raw_parts`], except that a mutable\nslice is returned.","sig":null,"attributes":[{"value":"* Performs the same functionality as [`from_raw_parts`], except that a mutable\nslice is returned.\n\nThis function is unsafe for the same reason as [`from_raw_parts`], as well as\nnot being able to provide a non-aliasing guarantee of the returned mutable\nslice. `data` must be non-null and aligned even for zero-length slices as with\n[`from_raw_parts`]. The total size of the slice must be no larger than\n`BitPtr::<T>::MAX_ELTS` **elements** in memory.\n\nSee the documentation of [`from_raw_parts`] for more details.\n\n# Safety\n\nSee `from_raw_parts`.\n\n# Original\n\n[`core::slice::from_raw_parts_mut`](https://doc.rust-lang.org/core/slice/fn.from_raw_parts_mut.html)\n\n[`from_raw_parts`]: #fn.from_raw_parts\n**/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":180608,"byte_end":181313,"line_start":216,"line_end":236,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":769},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":181709,"byte_end":181717,"line_start":252,"line_end":252,"column_start":8,"column_end":16},"name":"from_ref","qualname":"::slice::api::from_ref","value":"fn from_ref<O, T, '_>(&'_ T) -> &'_ BitSlice<O, T> where O: BitOrder,\nT: BitStore","parent":null,"children":[],"decl_id":null,"docs":" Converts a reference to `T` into a bit slice one element long (without\ncopying).","sig":null,"attributes":[{"value":"* Converts a reference to `T` into a bit slice one element long (without\ncopying).\n\n# Original\n\n[`core::slice::from_ref`](https://doc.rust-lang.org/core/slice/fn.from_ref.html)\n**/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":181519,"byte_end":181701,"line_start":245,"line_end":251,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":775},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":182242,"byte_end":182245,"line_start":273,"line_end":273,"column_start":9,"column_end":12},"name":"len","qualname":"<BitSlice<O, T>>::len","value":"fn len<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bits in the slice.","sig":null,"attributes":[{"value":"/ Returns the number of bits in the slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":181932,"byte_end":181976,"line_start":260,"line_end":260,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":181978,"byte_end":181981,"line_start":261,"line_end":261,"column_start":2,"column_end":5}},{"value":"/ # Original","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":181983,"byte_end":181997,"line_start":262,"line_end":262,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":181999,"byte_end":182002,"line_start":263,"line_end":263,"column_start":2,"column_end":5}},{"value":"/ [`slice::len`](https://doc.rust-lang.org/std/primitive.slice.html#method.len)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":182004,"byte_end":182085,"line_start":264,"line_end":264,"column_start":2,"column_end":83}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":182087,"byte_end":182090,"line_start":265,"line_end":265,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":182092,"byte_end":182106,"line_start":266,"line_end":266,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":182108,"byte_end":182111,"line_start":267,"line_end":267,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":182113,"byte_end":182124,"line_start":268,"line_end":268,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":182126,"byte_end":182155,"line_start":269,"line_end":269,"column_start":2,"column_end":31}},{"value":"/ let bits = 0u8.bits::<Local>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":182157,"byte_end":182192,"line_start":270,"line_end":270,"column_start":2,"column_end":37}},{"value":"/ assert_eq!(bits.len(), 8);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":182194,"byte_end":182224,"line_start":271,"line_end":271,"column_start":2,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":182226,"byte_end":182233,"line_start":272,"line_end":272,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":776},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":182681,"byte_end":182689,"line_start":292,"line_end":292,"column_start":9,"column_end":17},"name":"is_empty","qualname":"<BitSlice<O, T>>::is_empty","value":"fn is_empty<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the slice has a length of 0.","sig":null,"attributes":[{"value":"/ Returns `true` if the slice has a length of 0.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":182291,"byte_end":182341,"line_start":277,"line_end":277,"column_start":2,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":182343,"byte_end":182346,"line_start":278,"line_end":278,"column_start":2,"column_end":5}},{"value":"/ # Original","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":182348,"byte_end":182362,"line_start":279,"line_end":279,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":182364,"byte_end":182367,"line_start":280,"line_end":280,"column_start":2,"column_end":5}},{"value":"/ [`slice::is_empty`](https://doc.rust-lang.org/std/primitive.slice.html#method.is_empty)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":182369,"byte_end":182460,"line_start":281,"line_end":281,"column_start":2,"column_end":93}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":182462,"byte_end":182465,"line_start":282,"line_end":282,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":182467,"byte_end":182481,"line_start":283,"line_end":283,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":182483,"byte_end":182486,"line_start":284,"line_end":284,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":182488,"byte_end":182499,"line_start":285,"line_end":285,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":182501,"byte_end":182530,"line_start":286,"line_end":286,"column_start":2,"column_end":31}},{"value":"/ let bits = 0u8.bits::<Local>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":182532,"byte_end":182567,"line_start":287,"line_end":287,"column_start":2,"column_end":37}},{"value":"/ assert!(!bits.is_empty());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":182569,"byte_end":182599,"line_start":288,"line_end":288,"column_start":2,"column_end":32}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":182601,"byte_end":182604,"line_start":289,"line_end":289,"column_start":2,"column_end":5}},{"value":"/ assert!(BitSlice::<Local, usize>::empty().is_empty())","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":182606,"byte_end":182663,"line_start":290,"line_end":290,"column_start":2,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":182665,"byte_end":182672,"line_start":291,"line_end":291,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":777},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":183168,"byte_end":183173,"line_start":312,"line_end":312,"column_start":9,"column_end":14},"name":"first","qualname":"<BitSlice<O, T>>::first","value":"fn first<'_>(&'_ Self) -> Option<&'_ bool>","parent":null,"children":[],"decl_id":null,"docs":" Returns the first bit of the slice, or `None` if it is empty.","sig":null,"attributes":[{"value":"/ Returns the first bit of the slice, or `None` if it is empty.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":182739,"byte_end":182804,"line_start":296,"line_end":296,"column_start":2,"column_end":67}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":182806,"byte_end":182809,"line_start":297,"line_end":297,"column_start":2,"column_end":5}},{"value":"/ # Original","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":182811,"byte_end":182825,"line_start":298,"line_end":298,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":182827,"byte_end":182830,"line_start":299,"line_end":299,"column_start":2,"column_end":5}},{"value":"/ [`slice::first`](https://doc.rust-lang.org/std/primitive.slice.html#method.first)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":182832,"byte_end":182917,"line_start":300,"line_end":300,"column_start":2,"column_end":87}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":182919,"byte_end":182922,"line_start":301,"line_end":301,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":182924,"byte_end":182938,"line_start":302,"line_end":302,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":182940,"byte_end":182943,"line_start":303,"line_end":303,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":182945,"byte_end":182956,"line_start":304,"line_end":304,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":182958,"byte_end":182987,"line_start":305,"line_end":305,"column_start":2,"column_end":31}},{"value":"/ let bits = 1u8.bits::<Lsb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":182989,"byte_end":183023,"line_start":306,"line_end":306,"column_start":2,"column_end":36}},{"value":"/ assert_eq!(bits.first(), Some(&true));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":183025,"byte_end":183067,"line_start":307,"line_end":307,"column_start":2,"column_end":44}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":183069,"byte_end":183072,"line_start":308,"line_end":308,"column_start":2,"column_end":5}},{"value":"/ assert!(BitSlice::<Local, usize>::empty().first().is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":183074,"byte_end":183139,"line_start":309,"line_end":309,"column_start":2,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":183141,"byte_end":183148,"line_start":310,"line_end":310,"column_start":2,"column_end":9}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":183150,"byte_end":183159,"line_start":311,"line_end":311,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":778},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":183704,"byte_end":183713,"line_start":335,"line_end":335,"column_start":9,"column_end":18},"name":"first_mut","qualname":"<BitSlice<O, T>>::first_mut","value":"fn first_mut<'_>(&'_ mut Self) -> Option<BitMut>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable pointer to the first bit of the slice, or `None` if it\n is empty.","sig":null,"attributes":[{"value":"/ Returns a mutable pointer to the first bit of the slice, or `None` if it","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":183219,"byte_end":183295,"line_start":316,"line_end":316,"column_start":2,"column_end":78}},{"value":"/ is empty.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":183297,"byte_end":183310,"line_start":317,"line_end":317,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":183312,"byte_end":183315,"line_start":318,"line_end":318,"column_start":2,"column_end":5}},{"value":"/ # Original","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":183317,"byte_end":183331,"line_start":319,"line_end":319,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":183333,"byte_end":183336,"line_start":320,"line_end":320,"column_start":2,"column_end":5}},{"value":"/ [`slice::first_mut`](https://doc.rust-lang.org/std/primitive.slice.html#method.first_mut)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":183338,"byte_end":183431,"line_start":321,"line_end":321,"column_start":2,"column_end":95}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":183433,"byte_end":183436,"line_start":322,"line_end":322,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":183438,"byte_end":183452,"line_start":323,"line_end":323,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":183454,"byte_end":183457,"line_start":324,"line_end":324,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":183459,"byte_end":183470,"line_start":325,"line_end":325,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":183472,"byte_end":183501,"line_start":326,"line_end":326,"column_start":2,"column_end":31}},{"value":"/ let mut data = 0u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":183503,"byte_end":183526,"line_start":327,"line_end":327,"column_start":2,"column_end":25}},{"value":"/ let bits = data.bits_mut::<Lsb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":183528,"byte_end":183567,"line_start":328,"line_end":328,"column_start":2,"column_end":41}},{"value":"/ if let Some(mut first) = bits.first_mut() {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":183569,"byte_end":183616,"line_start":329,"line_end":329,"column_start":2,"column_end":49}},{"value":"/     *first = true;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":183618,"byte_end":183640,"line_start":330,"line_end":330,"column_start":2,"column_end":24}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":183642,"byte_end":183647,"line_start":331,"line_end":331,"column_start":2,"column_end":7}},{"value":"/ assert_eq!(data, 1u8);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":183649,"byte_end":183675,"line_start":332,"line_end":332,"column_start":2,"column_end":28}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":183677,"byte_end":183684,"line_start":333,"line_end":333,"column_start":2,"column_end":9}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":183686,"byte_end":183695,"line_start":334,"line_end":334,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":779},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":184141,"byte_end":184152,"line_start":353,"line_end":353,"column_start":9,"column_end":20},"name":"split_first","qualname":"<BitSlice<O, T>>::split_first","value":"fn split_first<'_>(&'_ Self) -> Option<(&'_ bool, &'_ Self)>","parent":null,"children":[],"decl_id":null,"docs":" Returns the first and all the rest of the bits of the slice, or `None`\n if it is empty.","sig":null,"attributes":[{"value":"/ Returns the first and all the rest of the bits of the slice, or `None`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":183774,"byte_end":183848,"line_start":339,"line_end":339,"column_start":2,"column_end":76}},{"value":"/ if it is empty.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":183850,"byte_end":183869,"line_start":340,"line_end":340,"column_start":2,"column_end":21}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":183871,"byte_end":183874,"line_start":341,"line_end":341,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":183876,"byte_end":183890,"line_start":342,"line_end":342,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":183892,"byte_end":183895,"line_start":343,"line_end":343,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":183897,"byte_end":183908,"line_start":344,"line_end":344,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":183910,"byte_end":183939,"line_start":345,"line_end":345,"column_start":2,"column_end":31}},{"value":"/ let bits = 1u8.bits::<Lsb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":183941,"byte_end":183975,"line_start":346,"line_end":346,"column_start":2,"column_end":36}},{"value":"/ if let Some((first, rest)) = bits.split_first() {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":183977,"byte_end":184030,"line_start":347,"line_end":347,"column_start":2,"column_end":55}},{"value":"/     assert_eq!(first, &true);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":184032,"byte_end":184065,"line_start":348,"line_end":348,"column_start":2,"column_end":35}},{"value":"/     assert_eq!(rest, &bits[1 ..]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":184067,"byte_end":184105,"line_start":349,"line_end":349,"column_start":2,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":184107,"byte_end":184112,"line_start":350,"line_end":350,"column_start":2,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":184114,"byte_end":184121,"line_start":351,"line_end":351,"column_start":2,"column_end":9}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":184123,"byte_end":184132,"line_start":352,"line_end":352,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":780},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":184769,"byte_end":184784,"line_start":380,"line_end":380,"column_start":9,"column_end":24},"name":"split_first_mut","qualname":"<BitSlice<O, T>>::split_first_mut","value":"fn split_first_mut<'_>(&'_ mut Self) -> Option<(BitMut, &'_ mut Self)>","parent":null,"children":[],"decl_id":null,"docs":" Returns the first and all the rest of the bits of the slice, or `None`\n if it is empty.","sig":null,"attributes":[{"value":"/ Returns the first and all the rest of the bits of the slice, or `None`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":184331,"byte_end":184405,"line_start":363,"line_end":363,"column_start":2,"column_end":76}},{"value":"/ if it is empty.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":184407,"byte_end":184426,"line_start":364,"line_end":364,"column_start":2,"column_end":21}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":184428,"byte_end":184431,"line_start":365,"line_end":365,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":184433,"byte_end":184447,"line_start":366,"line_end":366,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":184449,"byte_end":184452,"line_start":367,"line_end":367,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":184454,"byte_end":184465,"line_start":368,"line_end":368,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":184467,"byte_end":184496,"line_start":369,"line_end":369,"column_start":2,"column_end":31}},{"value":"/ let mut data = 0u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":184498,"byte_end":184521,"line_start":370,"line_end":370,"column_start":2,"column_end":25}},{"value":"/ let bits = data.bits_mut::<Lsb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":184523,"byte_end":184562,"line_start":371,"line_end":371,"column_start":2,"column_end":41}},{"value":"/ if let Some((mut first, rest)) = bits.split_first_mut() {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":184564,"byte_end":184625,"line_start":372,"line_end":372,"column_start":2,"column_end":63}},{"value":"/     *first = true;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":184627,"byte_end":184649,"line_start":373,"line_end":373,"column_start":2,"column_end":24}},{"value":"/     *rest.at(0) = true;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":184651,"byte_end":184678,"line_start":374,"line_end":374,"column_start":2,"column_end":29}},{"value":"/     *rest.at(1) = true;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":184680,"byte_end":184707,"line_start":375,"line_end":375,"column_start":2,"column_end":29}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":184709,"byte_end":184714,"line_start":376,"line_end":376,"column_start":2,"column_end":7}},{"value":"/ assert_eq!(data, 7);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":184716,"byte_end":184740,"line_start":377,"line_end":377,"column_start":2,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":184742,"byte_end":184749,"line_start":378,"line_end":378,"column_start":2,"column_end":9}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":184751,"byte_end":184760,"line_start":379,"line_end":379,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":781},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":185349,"byte_end":185359,"line_start":404,"line_end":404,"column_start":9,"column_end":19},"name":"split_last","qualname":"<BitSlice<O, T>>::split_last","value":"fn split_last<'_>(&'_ Self) -> Option<(&'_ bool, &'_ Self)>","parent":null,"children":[],"decl_id":null,"docs":" Returns the last and all the rest of the bits of the slice, or `None` if\n it is empty.","sig":null,"attributes":[{"value":"/ Returns the last and all the rest of the bits of the slice, or `None` if","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":184986,"byte_end":185062,"line_start":390,"line_end":390,"column_start":2,"column_end":78}},{"value":"/ it is empty.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":185064,"byte_end":185080,"line_start":391,"line_end":391,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":185082,"byte_end":185085,"line_start":392,"line_end":392,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":185087,"byte_end":185101,"line_start":393,"line_end":393,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":185103,"byte_end":185106,"line_start":394,"line_end":394,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":185108,"byte_end":185119,"line_start":395,"line_end":395,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":185121,"byte_end":185150,"line_start":396,"line_end":396,"column_start":2,"column_end":31}},{"value":"/ let bits = 1u8.bits::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":185152,"byte_end":185186,"line_start":397,"line_end":397,"column_start":2,"column_end":36}},{"value":"/ if let Some((last, rest)) = bits.split_last() {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":185188,"byte_end":185239,"line_start":398,"line_end":398,"column_start":2,"column_end":53}},{"value":"/     assert_eq!(last, &true);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":185241,"byte_end":185273,"line_start":399,"line_end":399,"column_start":2,"column_end":34}},{"value":"/     assert_eq!(rest, &bits[.. 7]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":185275,"byte_end":185313,"line_start":400,"line_end":400,"column_start":2,"column_end":40}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":185315,"byte_end":185320,"line_start":401,"line_end":401,"column_start":2,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":185322,"byte_end":185329,"line_start":402,"line_end":402,"column_start":2,"column_end":9}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":185331,"byte_end":185340,"line_start":403,"line_end":403,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":782},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":186000,"byte_end":186014,"line_start":431,"line_end":431,"column_start":9,"column_end":23},"name":"split_last_mut","qualname":"<BitSlice<O, T>>::split_last_mut","value":"fn split_last_mut<'_>(&'_ mut Self) -> Option<(BitMut, &'_ mut Self)>","parent":null,"children":[],"decl_id":null,"docs":" Returns the last and all the rest of the bits of the slice, or `None` if\n it is empty.","sig":null,"attributes":[{"value":"/ Returns the last and all the rest of the bits of the slice, or `None` if","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":185555,"byte_end":185631,"line_start":414,"line_end":414,"column_start":2,"column_end":78}},{"value":"/ it is empty.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":185633,"byte_end":185649,"line_start":415,"line_end":415,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":185651,"byte_end":185654,"line_start":416,"line_end":416,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":185656,"byte_end":185670,"line_start":417,"line_end":417,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":185672,"byte_end":185675,"line_start":418,"line_end":418,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":185677,"byte_end":185688,"line_start":419,"line_end":419,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":185690,"byte_end":185719,"line_start":420,"line_end":420,"column_start":2,"column_end":31}},{"value":"/ let mut data = 0u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":185721,"byte_end":185744,"line_start":421,"line_end":421,"column_start":2,"column_end":25}},{"value":"/ let bits = data.bits_mut::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":185746,"byte_end":185785,"line_start":422,"line_end":422,"column_start":2,"column_end":41}},{"value":"/ if let Some((mut last, rest)) = bits.split_last_mut() {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":185787,"byte_end":185846,"line_start":423,"line_end":423,"column_start":2,"column_end":61}},{"value":"/     *last = true;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":185848,"byte_end":185869,"line_start":424,"line_end":424,"column_start":2,"column_end":23}},{"value":"/     *rest.at(0) = true;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":185871,"byte_end":185898,"line_start":425,"line_end":425,"column_start":2,"column_end":29}},{"value":"/     *rest.at(1) = true;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":185900,"byte_end":185927,"line_start":426,"line_end":426,"column_start":2,"column_end":29}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":185929,"byte_end":185934,"line_start":427,"line_end":427,"column_start":2,"column_end":7}},{"value":"/ assert_eq!(data, 128 | 64 | 1);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":185936,"byte_end":185971,"line_start":428,"line_end":428,"column_start":2,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":185973,"byte_end":185980,"line_start":429,"line_end":429,"column_start":2,"column_end":9}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":185982,"byte_end":185991,"line_start":430,"line_end":430,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":783},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":186541,"byte_end":186545,"line_start":452,"line_end":452,"column_start":9,"column_end":13},"name":"last","qualname":"<BitSlice<O, T>>::last","value":"fn last<'_>(&'_ Self) -> Option<&'_ bool>","parent":null,"children":[],"decl_id":null,"docs":" Returns the last bit of the slice, or `None` if it is empty.","sig":null,"attributes":[{"value":"/ Returns the last bit of the slice, or `None` if it is empty.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":186233,"byte_end":186297,"line_start":441,"line_end":441,"column_start":2,"column_end":66}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":186299,"byte_end":186302,"line_start":442,"line_end":442,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":186304,"byte_end":186318,"line_start":443,"line_end":443,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":186320,"byte_end":186323,"line_start":444,"line_end":444,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":186325,"byte_end":186336,"line_start":445,"line_end":445,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":186338,"byte_end":186367,"line_start":446,"line_end":446,"column_start":2,"column_end":31}},{"value":"/ let bits = 1u8.bits::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":186369,"byte_end":186403,"line_start":447,"line_end":447,"column_start":2,"column_end":36}},{"value":"/ assert_eq!(Some(&true), bits.last());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":186405,"byte_end":186446,"line_start":448,"line_end":448,"column_start":2,"column_end":43}},{"value":"/ assert!(BitSlice::<Local, usize>::empty().last().is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":186448,"byte_end":186512,"line_start":449,"line_end":449,"column_start":2,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":186514,"byte_end":186521,"line_start":450,"line_end":450,"column_start":2,"column_end":9}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":186523,"byte_end":186532,"line_start":451,"line_end":451,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":186989,"byte_end":186997,"line_start":472,"line_end":472,"column_start":9,"column_end":17},"name":"last_mut","qualname":"<BitSlice<O, T>>::last_mut","value":"fn last_mut<'_>(&'_ mut Self) -> Option<BitMut>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable pointer to the last bit in the slice.","sig":null,"attributes":[{"value":"/ Returns a mutable pointer to the last bit in the slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":186674,"byte_end":186733,"line_start":459,"line_end":459,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":186735,"byte_end":186738,"line_start":460,"line_end":460,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":186740,"byte_end":186754,"line_start":461,"line_end":461,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":186756,"byte_end":186759,"line_start":462,"line_end":462,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":186761,"byte_end":186772,"line_start":463,"line_end":463,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":186774,"byte_end":186803,"line_start":464,"line_end":464,"column_start":2,"column_end":31}},{"value":"/ let mut data = 0u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":186805,"byte_end":186828,"line_start":465,"line_end":465,"column_start":2,"column_end":25}},{"value":"/ let bits = data.bits_mut::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":186830,"byte_end":186869,"line_start":466,"line_end":466,"column_start":2,"column_end":41}},{"value":"/ if let Some(mut last) = bits.last_mut() {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":186871,"byte_end":186916,"line_start":467,"line_end":467,"column_start":2,"column_end":47}},{"value":"/     *last = true;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":186918,"byte_end":186939,"line_start":468,"line_end":468,"column_start":2,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":186941,"byte_end":186946,"line_start":469,"line_end":469,"column_start":2,"column_end":7}},{"value":"/ assert!(bits[7]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":186948,"byte_end":186969,"line_start":470,"line_end":470,"column_start":2,"column_end":23}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":186971,"byte_end":186980,"line_start":471,"line_end":471,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":785},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":187788,"byte_end":187791,"line_start":499,"line_end":499,"column_start":9,"column_end":12},"name":"get","qualname":"<BitSlice<O, T>>::get","value":"fn get<'a, I>(&'a Self, I) -> Option<I::Immut> where I: BitSliceIndex","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a bit or subslice depending on the type of\n `index`.","sig":null,"attributes":[{"value":"/ Returns a reference to a bit or subslice depending on the type of","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":187141,"byte_end":187210,"line_start":479,"line_end":479,"column_start":2,"column_end":71}},{"value":"/ `index`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":187212,"byte_end":187224,"line_start":480,"line_end":480,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":187226,"byte_end":187229,"line_start":481,"line_end":481,"column_start":2,"column_end":5}},{"value":"/ - If given a position, returns a reference to the bit at that position","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":187231,"byte_end":187305,"line_start":482,"line_end":482,"column_start":2,"column_end":76}},{"value":"/   or `None` if out of bounds.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":187307,"byte_end":187340,"line_start":483,"line_end":483,"column_start":2,"column_end":35}},{"value":"/ - If given a range, returns the subslice corresponding to that range, or","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":187342,"byte_end":187418,"line_start":484,"line_end":484,"column_start":2,"column_end":78}},{"value":"/   `None` if out of bounds.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":187420,"byte_end":187450,"line_start":485,"line_end":485,"column_start":2,"column_end":32}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":187452,"byte_end":187455,"line_start":486,"line_end":486,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":187457,"byte_end":187471,"line_start":487,"line_end":487,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":187473,"byte_end":187476,"line_start":488,"line_end":488,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":187478,"byte_end":187489,"line_start":489,"line_end":489,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":187491,"byte_end":187520,"line_start":490,"line_end":490,"column_start":2,"column_end":31}},{"value":"/ let data = 1u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":187522,"byte_end":187541,"line_start":491,"line_end":491,"column_start":2,"column_end":21}},{"value":"/ let bits = data.bits::<Lsb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":187543,"byte_end":187578,"line_start":492,"line_end":492,"column_start":2,"column_end":37}},{"value":"/ assert_eq!(Some(&true), bits.get(0));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":187580,"byte_end":187621,"line_start":493,"line_end":493,"column_start":2,"column_end":43}},{"value":"/ assert!(bits.get(8).is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":187623,"byte_end":187658,"line_start":494,"line_end":494,"column_start":2,"column_end":37}},{"value":"/ assert!(bits.get(1 ..).expect(\"in bounds\").not_any());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":187660,"byte_end":187718,"line_start":495,"line_end":495,"column_start":2,"column_end":60}},{"value":"/ assert!(bits.get(.. 12).is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":187720,"byte_end":187759,"line_start":496,"line_end":496,"column_start":2,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":187761,"byte_end":187768,"line_start":497,"line_end":497,"column_start":2,"column_end":9}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":187770,"byte_end":187779,"line_start":498,"line_end":498,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":188434,"byte_end":188441,"line_start":524,"line_end":524,"column_start":9,"column_end":16},"name":"get_mut","qualname":"<BitSlice<O, T>>::get_mut","value":"fn get_mut<'a, I>(&'a mut Self, I) -> Option<I::Mut> where I: BitSliceIndex","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to a bit or subslice depending on the type\n of `index` (see [`get`]) or `None` if the index is out of bounds.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to a bit or subslice depending on the type","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":187898,"byte_end":187972,"line_start":504,"line_end":504,"column_start":2,"column_end":76}},{"value":"/ of `index` (see [`get`]) or `None` if the index is out of bounds.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":187974,"byte_end":188043,"line_start":505,"line_end":505,"column_start":2,"column_end":71}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":188045,"byte_end":188048,"line_start":506,"line_end":506,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":188050,"byte_end":188064,"line_start":507,"line_end":507,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":188066,"byte_end":188069,"line_start":508,"line_end":508,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":188071,"byte_end":188082,"line_start":509,"line_end":509,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":188084,"byte_end":188113,"line_start":510,"line_end":510,"column_start":2,"column_end":31}},{"value":"/ let mut data = 0u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":188115,"byte_end":188138,"line_start":511,"line_end":511,"column_start":2,"column_end":25}},{"value":"/ let bits = data.bits_mut::<Lsb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":188140,"byte_end":188179,"line_start":512,"line_end":512,"column_start":2,"column_end":41}},{"value":"/ if let Some(mut bit) = bits.get_mut(1) {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":188181,"byte_end":188225,"line_start":513,"line_end":513,"column_start":2,"column_end":46}},{"value":"/     *bit = true;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":188227,"byte_end":188247,"line_start":514,"line_end":514,"column_start":2,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":188249,"byte_end":188254,"line_start":515,"line_end":515,"column_start":2,"column_end":7}},{"value":"/ if let Some(bits) = bits.get_mut(5 .. 7) {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":188256,"byte_end":188302,"line_start":516,"line_end":516,"column_start":2,"column_end":48}},{"value":"/     bits.set_all(true);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":188304,"byte_end":188331,"line_start":517,"line_end":517,"column_start":2,"column_end":29}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":188333,"byte_end":188338,"line_start":518,"line_end":518,"column_start":2,"column_end":7}},{"value":"/ assert_eq!(data, 64 | 32 | 2);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":188340,"byte_end":188374,"line_start":519,"line_end":519,"column_start":2,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":188376,"byte_end":188383,"line_start":520,"line_end":520,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":188385,"byte_end":188388,"line_start":521,"line_end":521,"column_start":2,"column_end":5}},{"value":"/ [`get`]: #method.get","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":188390,"byte_end":188414,"line_start":522,"line_end":522,"column_start":2,"column_end":26}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":188416,"byte_end":188425,"line_start":523,"line_end":523,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":189292,"byte_end":189305,"line_start":555,"line_end":555,"column_start":16,"column_end":29},"name":"get_unchecked","qualname":"<BitSlice<O, T>>::get_unchecked","value":"unsafe fn get_unchecked<'a, I>(&'a Self, I) -> I::Immut where I: BitSliceIndex","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a bit or subslice, without doing bounds checking.","sig":null,"attributes":[{"value":"/ Returns a reference to a bit or subslice, without doing bounds checking.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":188554,"byte_end":188630,"line_start":529,"line_end":529,"column_start":2,"column_end":78}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":188632,"byte_end":188635,"line_start":530,"line_end":530,"column_start":2,"column_end":5}},{"value":"/ This is generally not recommended; use with caution! For a safe","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":188637,"byte_end":188704,"line_start":531,"line_end":531,"column_start":2,"column_end":69}},{"value":"/ alternative, see [`get`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":188706,"byte_end":188735,"line_start":532,"line_end":532,"column_start":2,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":188737,"byte_end":188740,"line_start":533,"line_end":533,"column_start":2,"column_end":5}},{"value":"/ # Safety","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":188742,"byte_end":188754,"line_start":534,"line_end":534,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":188756,"byte_end":188759,"line_start":535,"line_end":535,"column_start":2,"column_end":5}},{"value":"/ As this function does not perform boundary checking, the caller must","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":188761,"byte_end":188833,"line_start":536,"line_end":536,"column_start":2,"column_end":74}},{"value":"/ ensure that `self` is an index within the boundaries of `slice` before","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":188835,"byte_end":188909,"line_start":537,"line_end":537,"column_start":2,"column_end":76}},{"value":"/ calling in order to avoid boundary escapes and ensuing safety","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":188911,"byte_end":188976,"line_start":538,"line_end":538,"column_start":2,"column_end":67}},{"value":"/ violations.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":188978,"byte_end":188993,"line_start":539,"line_end":539,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":188995,"byte_end":188998,"line_start":540,"line_end":540,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":189000,"byte_end":189014,"line_start":541,"line_end":541,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":189016,"byte_end":189019,"line_start":542,"line_end":542,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":189021,"byte_end":189032,"line_start":543,"line_end":543,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":189034,"byte_end":189063,"line_start":544,"line_end":544,"column_start":2,"column_end":31}},{"value":"/ let data = 4u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":189065,"byte_end":189084,"line_start":545,"line_end":545,"column_start":2,"column_end":21}},{"value":"/ let bits = data.bits::<Lsb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":189086,"byte_end":189121,"line_start":546,"line_end":546,"column_start":2,"column_end":37}},{"value":"/ unsafe {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":189123,"byte_end":189135,"line_start":547,"line_end":547,"column_start":2,"column_end":14}},{"value":"/     assert!(bits.get_unchecked(2));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":189137,"byte_end":189176,"line_start":548,"line_end":548,"column_start":2,"column_end":41}},{"value":"/     assert!(!bits.get_unchecked(1));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":189178,"byte_end":189218,"line_start":549,"line_end":549,"column_start":2,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":189220,"byte_end":189225,"line_start":550,"line_end":550,"column_start":2,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":189227,"byte_end":189234,"line_start":551,"line_end":551,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":189236,"byte_end":189239,"line_start":552,"line_end":552,"column_start":2,"column_end":5}},{"value":"/ [`get`]: #method.get","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":189241,"byte_end":189265,"line_start":553,"line_end":553,"column_start":2,"column_end":26}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":189267,"byte_end":189276,"line_start":554,"line_end":554,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":794},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":190343,"byte_end":190360,"line_start":591,"line_end":591,"column_start":16,"column_end":33},"name":"get_unchecked_mut","qualname":"<BitSlice<O, T>>::get_unchecked_mut","value":"unsafe fn get_unchecked_mut<'a, I>(&'a mut Self, I) -> I::Mut where\nI: BitSliceIndex","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to a bit or subslice, without doing bounds\n checking.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to a bit or subslice, without doing bounds","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":189414,"byte_end":189488,"line_start":560,"line_end":560,"column_start":2,"column_end":76}},{"value":"/ checking.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":189490,"byte_end":189503,"line_start":561,"line_end":561,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":189505,"byte_end":189508,"line_start":562,"line_end":562,"column_start":2,"column_end":5}},{"value":"/ This is generally not recommended; use with caution! For a safe","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":189510,"byte_end":189577,"line_start":563,"line_end":563,"column_start":2,"column_end":69}},{"value":"/ alternative, see [`get_mut`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":189579,"byte_end":189612,"line_start":564,"line_end":564,"column_start":2,"column_end":35}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":189614,"byte_end":189617,"line_start":565,"line_end":565,"column_start":2,"column_end":5}},{"value":"/ # Safety","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":189619,"byte_end":189631,"line_start":566,"line_end":566,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":189633,"byte_end":189636,"line_start":567,"line_end":567,"column_start":2,"column_end":5}},{"value":"/ As this function does not perform boundary checking, the caller must","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":189638,"byte_end":189710,"line_start":568,"line_end":568,"column_start":2,"column_end":74}},{"value":"/ ensure that `self` is an index within the boundaries of `slice` before","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":189712,"byte_end":189786,"line_start":569,"line_end":569,"column_start":2,"column_end":76}},{"value":"/ calling in order to avoid boundary escapes and ensuing safety","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":189788,"byte_end":189853,"line_start":570,"line_end":570,"column_start":2,"column_end":67}},{"value":"/ violations.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":189855,"byte_end":189870,"line_start":571,"line_end":571,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":189872,"byte_end":189875,"line_start":572,"line_end":572,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":189877,"byte_end":189891,"line_start":573,"line_end":573,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":189893,"byte_end":189896,"line_start":574,"line_end":574,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":189898,"byte_end":189909,"line_start":575,"line_end":575,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":189911,"byte_end":189940,"line_start":576,"line_end":576,"column_start":2,"column_end":31}},{"value":"/ let mut data = 0u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":189942,"byte_end":189965,"line_start":577,"line_end":577,"column_start":2,"column_end":25}},{"value":"/ let bits = data.bits_mut::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":189967,"byte_end":190006,"line_start":578,"line_end":578,"column_start":2,"column_end":41}},{"value":"/ unsafe {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":190008,"byte_end":190020,"line_start":579,"line_end":579,"column_start":2,"column_end":14}},{"value":"/     let mut bit = bits.get_unchecked_mut(0);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":190022,"byte_end":190070,"line_start":580,"line_end":580,"column_start":2,"column_end":50}},{"value":"/     *bit = true;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":190072,"byte_end":190092,"line_start":581,"line_end":581,"column_start":2,"column_end":22}},{"value":"/     drop(bit); // release the borrow immediately","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":190094,"byte_end":190146,"line_start":582,"line_end":582,"column_start":2,"column_end":54}},{"value":"/     let bits = bits.get_unchecked_mut(6 ..);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":190148,"byte_end":190196,"line_start":583,"line_end":583,"column_start":2,"column_end":50}},{"value":"/     bits.set_all(true);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":190198,"byte_end":190225,"line_start":584,"line_end":584,"column_start":2,"column_end":29}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":190227,"byte_end":190232,"line_start":585,"line_end":585,"column_start":2,"column_end":7}},{"value":"/ assert_eq!(data, 1 | 2 | 128);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":190234,"byte_end":190268,"line_start":586,"line_end":586,"column_start":2,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":190270,"byte_end":190277,"line_start":587,"line_end":587,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":190279,"byte_end":190282,"line_start":588,"line_end":588,"column_start":2,"column_end":5}},{"value":"/ [`get_mut`]: #method.get_mut","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":190284,"byte_end":190316,"line_start":589,"line_end":589,"column_start":2,"column_end":34}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":190318,"byte_end":190327,"line_start":590,"line_end":590,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":191733,"byte_end":191739,"line_start":629,"line_end":629,"column_start":21,"column_end":27},"name":"as_ptr","qualname":"<BitSlice<O, T>>::as_ptr","value":"fn as_ptr<'_>(&'_ Self) -> *const T","parent":null,"children":[],"decl_id":null,"docs":" Returns a raw pointer to the slice’s buffer.","sig":null,"attributes":[{"value":"/ Returns a raw pointer to the slice’s buffer.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":190475,"byte_end":190525,"line_start":596,"line_end":596,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":190527,"byte_end":190530,"line_start":597,"line_end":597,"column_start":2,"column_end":5}},{"value":"/ The caller must ensure that the slice outlives the pointer this function","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":190532,"byte_end":190608,"line_start":598,"line_end":598,"column_start":2,"column_end":78}},{"value":"/ returns, or else it will end up pointing to garbage.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":190610,"byte_end":190666,"line_start":599,"line_end":599,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":190668,"byte_end":190671,"line_start":600,"line_end":600,"column_start":2,"column_end":5}},{"value":"/ The caller must also ensure that the memory the pointer","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":190673,"byte_end":190732,"line_start":601,"line_end":601,"column_start":2,"column_end":61}},{"value":"/ (non-transitively) points to is never written to (except inside an","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":190734,"byte_end":190804,"line_start":602,"line_end":602,"column_start":2,"column_end":72}},{"value":"/ `UnsafeCell`) using this pointer or any pointer derived from it. If you","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":190806,"byte_end":190881,"line_start":603,"line_end":603,"column_start":2,"column_end":77}},{"value":"/ need to mutate the contents of the buffer, use [`as_mut_ptr`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":190883,"byte_end":190949,"line_start":604,"line_end":604,"column_start":2,"column_end":68}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":190951,"byte_end":190954,"line_start":605,"line_end":605,"column_start":2,"column_end":5}},{"value":"/ Modifying the container referenced by this slice may cause its buffer to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":190956,"byte_end":191032,"line_start":606,"line_end":606,"column_start":2,"column_end":78}},{"value":"/ be reallocated, which would also make any pointers to it invalid.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":191034,"byte_end":191103,"line_start":607,"line_end":607,"column_start":2,"column_end":71}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":191105,"byte_end":191108,"line_start":608,"line_end":608,"column_start":2,"column_end":5}},{"value":"/ # Notes","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":191110,"byte_end":191121,"line_start":609,"line_end":609,"column_start":2,"column_end":13}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":191123,"byte_end":191126,"line_start":610,"line_end":610,"column_start":2,"column_end":5}},{"value":"/ This pointer is always to the first `T` element in the backing storage,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":191128,"byte_end":191203,"line_start":611,"line_end":611,"column_start":2,"column_end":77}},{"value":"/ even if that element is only partially used by the `self` slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":191205,"byte_end":191273,"line_start":612,"line_end":612,"column_start":2,"column_end":70}},{"value":"/ Multiple separate `BitSlice` handles may produce the same pointer with","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":191275,"byte_end":191349,"line_start":613,"line_end":613,"column_start":2,"column_end":76}},{"value":"/ this method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":191351,"byte_end":191367,"line_start":614,"line_end":614,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":191369,"byte_end":191372,"line_start":615,"line_end":615,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":191374,"byte_end":191388,"line_start":616,"line_end":616,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":191390,"byte_end":191393,"line_start":617,"line_end":617,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":191395,"byte_end":191406,"line_start":618,"line_end":618,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":191408,"byte_end":191437,"line_start":619,"line_end":619,"column_start":2,"column_end":31}},{"value":"/ let data = [0u8; 2];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":191439,"byte_end":191463,"line_start":620,"line_end":620,"column_start":2,"column_end":26}},{"value":"/ let bits = data.bits::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":191465,"byte_end":191500,"line_start":621,"line_end":621,"column_start":2,"column_end":37}},{"value":"/ let (head, rest) = bits.split_at(4);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":191502,"byte_end":191542,"line_start":622,"line_end":622,"column_start":2,"column_end":42}},{"value":"/ assert_eq!(head.as_ptr(), rest.as_ptr());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":191544,"byte_end":191589,"line_start":623,"line_end":623,"column_start":2,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":191591,"byte_end":191598,"line_start":624,"line_end":624,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":191600,"byte_end":191603,"line_start":625,"line_end":625,"column_start":2,"column_end":5}},{"value":"/ [`as_mut_ptr`]: #method.as_mut_ptr","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":191605,"byte_end":191643,"line_start":626,"line_end":626,"column_start":2,"column_end":40}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":191703,"byte_end":191712,"line_start":628,"line_end":628,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":798},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":192752,"byte_end":192762,"line_start":660,"line_end":660,"column_start":9,"column_end":19},"name":"as_mut_ptr","qualname":"<BitSlice<O, T>>::as_mut_ptr","value":"fn as_mut_ptr<'_>(&'_ mut Self) -> *mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns an unsafe mutable pointer to the slice’s buffer.","sig":null,"attributes":[{"value":"/ Returns an unsafe mutable pointer to the slice’s buffer.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":191796,"byte_end":191858,"line_start":633,"line_end":633,"column_start":2,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":191860,"byte_end":191863,"line_start":634,"line_end":634,"column_start":2,"column_end":5}},{"value":"/ The caller must ensure thath the slice outlives the pointer this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":191865,"byte_end":191933,"line_start":635,"line_end":635,"column_start":2,"column_end":70}},{"value":"/ function returns, or else it will end up pointing to garbage.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":191935,"byte_end":192000,"line_start":636,"line_end":636,"column_start":2,"column_end":67}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":192002,"byte_end":192005,"line_start":637,"line_end":637,"column_start":2,"column_end":5}},{"value":"/ Modifying the container referenced by this slice may couse its buffer to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":192007,"byte_end":192083,"line_start":638,"line_end":638,"column_start":2,"column_end":78}},{"value":"/ be reallocated, which would also make any pointers to it invalid.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":192085,"byte_end":192154,"line_start":639,"line_end":639,"column_start":2,"column_end":71}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":192156,"byte_end":192159,"line_start":640,"line_end":640,"column_start":2,"column_end":5}},{"value":"/ # Notes","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":192161,"byte_end":192172,"line_start":641,"line_end":641,"column_start":2,"column_end":13}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":192174,"byte_end":192177,"line_start":642,"line_end":642,"column_start":2,"column_end":5}},{"value":"/ This pointer is always to the first `T` element in the backing storage,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":192179,"byte_end":192254,"line_start":643,"line_end":643,"column_start":2,"column_end":77}},{"value":"/ even if that element is only partially used by the `self` slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":192256,"byte_end":192324,"line_start":644,"line_end":644,"column_start":2,"column_end":70}},{"value":"/ Multiple separate `BitSlice` handles may produce the same pointer with","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":192326,"byte_end":192400,"line_start":645,"line_end":645,"column_start":2,"column_end":76}},{"value":"/ this method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":192402,"byte_end":192418,"line_start":646,"line_end":646,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":192420,"byte_end":192423,"line_start":647,"line_end":647,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":192425,"byte_end":192439,"line_start":648,"line_end":648,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":192441,"byte_end":192444,"line_start":649,"line_end":649,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":192446,"byte_end":192457,"line_start":650,"line_end":650,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":192459,"byte_end":192488,"line_start":651,"line_end":651,"column_start":2,"column_end":31}},{"value":"/ let mut data = [0u8; 2];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":192490,"byte_end":192518,"line_start":652,"line_end":652,"column_start":2,"column_end":30}},{"value":"/ let bits = data.bits_mut::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":192520,"byte_end":192559,"line_start":653,"line_end":653,"column_start":2,"column_end":41}},{"value":"/ let (head, rest) = bits.split_at_mut(4);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":192561,"byte_end":192605,"line_start":654,"line_end":654,"column_start":2,"column_end":46}},{"value":"/ assert_eq!(head.as_mut_ptr(), rest.as_mut_ptr());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":192607,"byte_end":192660,"line_start":655,"line_end":655,"column_start":2,"column_end":55}},{"value":"/ unsafe { *head.as_mut_ptr() = 2; }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":192662,"byte_end":192700,"line_start":656,"line_end":656,"column_start":2,"column_end":40}},{"value":"/ assert!(rest[2]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":192702,"byte_end":192723,"line_start":657,"line_end":657,"column_start":2,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":192725,"byte_end":192732,"line_start":658,"line_end":658,"column_start":2,"column_end":9}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":192734,"byte_end":192743,"line_start":659,"line_end":659,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":799},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":193230,"byte_end":193234,"line_start":684,"line_end":684,"column_start":9,"column_end":13},"name":"swap","qualname":"<BitSlice<O, T>>::swap","value":"fn swap<'_>(&'_ mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Swaps two bits in the slice.","sig":null,"attributes":[{"value":"/ Swaps two bits in the slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":192821,"byte_end":192853,"line_start":664,"line_end":664,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":192855,"byte_end":192858,"line_start":665,"line_end":665,"column_start":2,"column_end":5}},{"value":"/ # Arguments","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":192860,"byte_end":192875,"line_start":666,"line_end":666,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":192877,"byte_end":192880,"line_start":667,"line_end":667,"column_start":2,"column_end":5}},{"value":"/ - `a`: The index of the first bit","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":192882,"byte_end":192919,"line_start":668,"line_end":668,"column_start":2,"column_end":39}},{"value":"/ - `b`: The index of the second bit","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":192921,"byte_end":192959,"line_start":669,"line_end":669,"column_start":2,"column_end":40}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":192961,"byte_end":192964,"line_start":670,"line_end":670,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":192966,"byte_end":192978,"line_start":671,"line_end":671,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":192980,"byte_end":192983,"line_start":672,"line_end":672,"column_start":2,"column_end":5}},{"value":"/ Panics if `a` or `b` are out of bounds.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":192985,"byte_end":193028,"line_start":673,"line_end":673,"column_start":2,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":193030,"byte_end":193033,"line_start":674,"line_end":674,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":193035,"byte_end":193049,"line_start":675,"line_end":675,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":193051,"byte_end":193054,"line_start":676,"line_end":676,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":193056,"byte_end":193067,"line_start":677,"line_end":677,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":193069,"byte_end":193098,"line_start":678,"line_end":678,"column_start":2,"column_end":31}},{"value":"/ let mut data = 2u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":193100,"byte_end":193123,"line_start":679,"line_end":679,"column_start":2,"column_end":25}},{"value":"/ let bits = data.bits_mut::<Lsb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":193125,"byte_end":193164,"line_start":680,"line_end":680,"column_start":2,"column_end":41}},{"value":"/ bits.swap(0, 1);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":193166,"byte_end":193186,"line_start":681,"line_end":681,"column_start":2,"column_end":22}},{"value":"/ assert_eq!(data, 1);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":193188,"byte_end":193212,"line_start":682,"line_end":682,"column_start":2,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":193214,"byte_end":193221,"line_start":683,"line_end":683,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":800},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":193732,"byte_end":193739,"line_start":702,"line_end":702,"column_start":9,"column_end":16},"name":"reverse","qualname":"<BitSlice<O, T>>::reverse","value":"fn reverse<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reverses the order of bits in the slice, in place.","sig":null,"attributes":[{"value":"/ Reverses the order of bits in the slice, in place.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":193453,"byte_end":193507,"line_start":691,"line_end":691,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":193509,"byte_end":193512,"line_start":692,"line_end":692,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":193514,"byte_end":193528,"line_start":693,"line_end":693,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":193530,"byte_end":193533,"line_start":694,"line_end":694,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":193535,"byte_end":193546,"line_start":695,"line_end":695,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":193548,"byte_end":193575,"line_start":696,"line_end":696,"column_start":2,"column_end":29}},{"value":"/ let mut data = 0b1_1001100u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":193577,"byte_end":193610,"line_start":697,"line_end":697,"column_start":2,"column_end":35}},{"value":"/ let bits = data.bits_mut::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":193612,"byte_end":193651,"line_start":698,"line_end":698,"column_start":2,"column_end":41}},{"value":"/ bits[1 ..].reverse();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":193653,"byte_end":193678,"line_start":699,"line_end":699,"column_start":2,"column_end":27}},{"value":"/ assert_eq!(data, 0b1_0011001);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":193680,"byte_end":193714,"line_start":700,"line_end":700,"column_start":2,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":193716,"byte_end":193723,"line_start":701,"line_end":701,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":194647,"byte_end":194651,"line_start":738,"line_end":738,"column_start":9,"column_end":13},"name":"iter","qualname":"<BitSlice<O, T>>::iter","value":"fn iter<'_>(&'_ Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the slice.","sig":null,"attributes":[{"value":"/ Returns an iterator over the slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":194201,"byte_end":194240,"line_start":722,"line_end":722,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":194242,"byte_end":194245,"line_start":723,"line_end":723,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":194247,"byte_end":194261,"line_start":724,"line_end":724,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":194263,"byte_end":194266,"line_start":725,"line_end":725,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":194268,"byte_end":194279,"line_start":726,"line_end":726,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":194281,"byte_end":194310,"line_start":727,"line_end":727,"column_start":2,"column_end":31}},{"value":"/ let data = 3u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":194312,"byte_end":194331,"line_start":728,"line_end":728,"column_start":2,"column_end":21}},{"value":"/ let bits = data.bits::<Lsb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":194333,"byte_end":194368,"line_start":729,"line_end":729,"column_start":2,"column_end":37}},{"value":"/ let mut iter = bits[.. 4].iter();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":194370,"byte_end":194407,"line_start":730,"line_end":730,"column_start":2,"column_end":39}},{"value":"/ assert_eq!(iter.next(), Some(&true));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":194409,"byte_end":194450,"line_start":731,"line_end":731,"column_start":2,"column_end":43}},{"value":"/ assert_eq!(iter.next(), Some(&true));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":194452,"byte_end":194493,"line_start":732,"line_end":732,"column_start":2,"column_end":43}},{"value":"/ assert_eq!(iter.next(), Some(&false));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":194495,"byte_end":194537,"line_start":733,"line_end":733,"column_start":2,"column_end":44}},{"value":"/ assert_eq!(iter.next(), Some(&false));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":194539,"byte_end":194581,"line_start":734,"line_end":734,"column_start":2,"column_end":44}},{"value":"/ assert!(iter.next().is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":194583,"byte_end":194618,"line_start":735,"line_end":735,"column_start":2,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":194620,"byte_end":194627,"line_start":736,"line_end":736,"column_start":2,"column_end":9}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":194629,"byte_end":194638,"line_start":737,"line_end":737,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":195023,"byte_end":195031,"line_start":756,"line_end":756,"column_start":9,"column_end":17},"name":"iter_mut","qualname":"<BitSlice<O, T>>::iter_mut","value":"fn iter_mut<'_>(&'_ mut Self) -> IterMut","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each bit.","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each bit.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":194699,"byte_end":194754,"line_start":742,"line_end":742,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":194756,"byte_end":194759,"line_start":743,"line_end":743,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":194761,"byte_end":194775,"line_start":744,"line_end":744,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":194777,"byte_end":194780,"line_start":745,"line_end":745,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":194782,"byte_end":194793,"line_start":746,"line_end":746,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":194795,"byte_end":194824,"line_start":747,"line_end":747,"column_start":2,"column_end":31}},{"value":"/ let mut data = 0u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":194826,"byte_end":194849,"line_start":748,"line_end":748,"column_start":2,"column_end":25}},{"value":"/ let bits = &mut data.bits_mut::<Lsb0>()[.. 2];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":194851,"byte_end":194901,"line_start":749,"line_end":749,"column_start":2,"column_end":52}},{"value":"/ for mut bit in bits.iter_mut() {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":194903,"byte_end":194939,"line_start":750,"line_end":750,"column_start":2,"column_end":38}},{"value":"/     *bit = true;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":194941,"byte_end":194961,"line_start":751,"line_end":751,"column_start":2,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":194963,"byte_end":194968,"line_start":752,"line_end":752,"column_start":2,"column_end":7}},{"value":"/ assert_eq!(data, 3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":194970,"byte_end":194994,"line_start":753,"line_end":753,"column_start":2,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":194996,"byte_end":195003,"line_start":754,"line_end":754,"column_start":2,"column_end":9}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":195005,"byte_end":195014,"line_start":755,"line_end":755,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":195949,"byte_end":195956,"line_start":790,"line_end":790,"column_start":9,"column_end":16},"name":"windows","qualname":"<BitSlice<O, T>>::windows","value":"fn windows<'_>(&'_ Self, usize) -> Windows","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over all contiguous windows of width `width`.","sig":null,"attributes":[{"value":"/ Returns an iterator over all contiguous windows of width `width`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":195086,"byte_end":195155,"line_start":760,"line_end":760,"column_start":2,"column_end":71}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":195157,"byte_end":195160,"line_start":761,"line_end":761,"column_start":2,"column_end":5}},{"value":"/ The windows overlap. If the slice is shorter than `width`, the iterator","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":195162,"byte_end":195237,"line_start":762,"line_end":762,"column_start":2,"column_end":77}},{"value":"/ returns no values.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":195239,"byte_end":195261,"line_start":763,"line_end":763,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":195263,"byte_end":195266,"line_start":764,"line_end":764,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":195268,"byte_end":195280,"line_start":765,"line_end":765,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":195282,"byte_end":195285,"line_start":766,"line_end":766,"column_start":2,"column_end":5}},{"value":"/ Panics if `width` is 0.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":195287,"byte_end":195314,"line_start":767,"line_end":767,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":195316,"byte_end":195319,"line_start":768,"line_end":768,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":195321,"byte_end":195335,"line_start":769,"line_end":769,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":195337,"byte_end":195340,"line_start":770,"line_end":770,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":195342,"byte_end":195353,"line_start":771,"line_end":771,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":195355,"byte_end":195384,"line_start":772,"line_end":772,"column_start":2,"column_end":31}},{"value":"/ let data = 0b100_010_01u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":195386,"byte_end":195416,"line_start":773,"line_end":773,"column_start":2,"column_end":32}},{"value":"/ let bits = data.bits::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":195418,"byte_end":195453,"line_start":774,"line_end":774,"column_start":2,"column_end":37}},{"value":"/ let mut iter = bits[.. 5].windows(3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":195455,"byte_end":195496,"line_start":775,"line_end":775,"column_start":2,"column_end":43}},{"value":"/ assert_eq!(iter.next().unwrap(), &bits[0 .. 3]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":195498,"byte_end":195550,"line_start":776,"line_end":776,"column_start":2,"column_end":54}},{"value":"/ assert_eq!(iter.next().unwrap(), &bits[1 .. 4]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":195552,"byte_end":195604,"line_start":777,"line_end":777,"column_start":2,"column_end":54}},{"value":"/ assert_eq!(iter.next().unwrap(), &bits[2 .. 5]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":195606,"byte_end":195658,"line_start":778,"line_end":778,"column_start":2,"column_end":54}},{"value":"/ assert!(iter.next().is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":195660,"byte_end":195695,"line_start":779,"line_end":779,"column_start":2,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":195697,"byte_end":195704,"line_start":780,"line_end":780,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":195706,"byte_end":195709,"line_start":781,"line_end":781,"column_start":2,"column_end":5}},{"value":"/ If the slice is shorter than `width`:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":195711,"byte_end":195752,"line_start":782,"line_end":782,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":195754,"byte_end":195757,"line_start":783,"line_end":783,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":195759,"byte_end":195770,"line_start":784,"line_end":784,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":195772,"byte_end":195801,"line_start":785,"line_end":785,"column_start":2,"column_end":31}},{"value":"/ let data = 0u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":195803,"byte_end":195822,"line_start":786,"line_end":786,"column_start":2,"column_end":21}},{"value":"/ let bits = data.bits::<Local>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":195824,"byte_end":195860,"line_start":787,"line_end":787,"column_start":2,"column_end":38}},{"value":"/ let mut iter = bits[.. 3].windows(4);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":195862,"byte_end":195903,"line_start":788,"line_end":788,"column_start":2,"column_end":43}},{"value":"/ assert!(iter.next().is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":195905,"byte_end":195940,"line_start":789,"line_end":789,"column_start":2,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":197137,"byte_end":197143,"line_start":828,"line_end":828,"column_start":9,"column_end":15},"name":"chunks","qualname":"<BitSlice<O, T>>::chunks","value":"fn chunks<'_>(&'_ Self, usize) -> Chunks","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over `chunk_size` bits of the slice at a time,\n starting at the beginning of the slice.","sig":null,"attributes":[{"value":"/ Returns an iterator over `chunk_size` bits of the slice at a time,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":196106,"byte_end":196176,"line_start":798,"line_end":798,"column_start":2,"column_end":72}},{"value":"/ starting at the beginning of the slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":196178,"byte_end":196221,"line_start":799,"line_end":799,"column_start":2,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":196223,"byte_end":196226,"line_start":800,"line_end":800,"column_start":2,"column_end":5}},{"value":"/ The chunks are slices and do not overlap. If `chunk_size` does not","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":196228,"byte_end":196298,"line_start":801,"line_end":801,"column_start":2,"column_end":72}},{"value":"/ divide the length of the slice, then the last chunk will not have length","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":196300,"byte_end":196376,"line_start":802,"line_end":802,"column_start":2,"column_end":78}},{"value":"/ `chunk_size`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":196378,"byte_end":196395,"line_start":803,"line_end":803,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":196397,"byte_end":196400,"line_start":804,"line_end":804,"column_start":2,"column_end":5}},{"value":"/ See [`chunks_exact`] for a variant of this iterator that returns chunks","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":196402,"byte_end":196477,"line_start":805,"line_end":805,"column_start":2,"column_end":77}},{"value":"/ of always exactly `chunk_size` elements, and [`rchunks`] for the same","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":196479,"byte_end":196552,"line_start":806,"line_end":806,"column_start":2,"column_end":75}},{"value":"/ iterator but starting at the end of the slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":196554,"byte_end":196604,"line_start":807,"line_end":807,"column_start":2,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":196606,"byte_end":196609,"line_start":808,"line_end":808,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":196611,"byte_end":196623,"line_start":809,"line_end":809,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":196625,"byte_end":196628,"line_start":810,"line_end":810,"column_start":2,"column_end":5}},{"value":"/ Panics if `chunk_size` is 0.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":196630,"byte_end":196662,"line_start":811,"line_end":811,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":196664,"byte_end":196667,"line_start":812,"line_end":812,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":196669,"byte_end":196683,"line_start":813,"line_end":813,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":196685,"byte_end":196688,"line_start":814,"line_end":814,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":196690,"byte_end":196701,"line_start":815,"line_end":815,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":196703,"byte_end":196732,"line_start":816,"line_end":816,"column_start":2,"column_end":31}},{"value":"/ let data = 0b001_010_10u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":196734,"byte_end":196764,"line_start":817,"line_end":817,"column_start":2,"column_end":32}},{"value":"/ let bits = data.bits::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":196766,"byte_end":196801,"line_start":818,"line_end":818,"column_start":2,"column_end":37}},{"value":"/ let mut iter = bits.chunks(3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":196803,"byte_end":196837,"line_start":819,"line_end":819,"column_start":2,"column_end":36}},{"value":"/ assert_eq!(iter.next().unwrap(), &bits[0 .. 3]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":196839,"byte_end":196891,"line_start":820,"line_end":820,"column_start":2,"column_end":54}},{"value":"/ assert_eq!(iter.next().unwrap(), &bits[3 .. 6]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":196893,"byte_end":196945,"line_start":821,"line_end":821,"column_start":2,"column_end":54}},{"value":"/ assert_eq!(iter.next().unwrap(), &bits[6 .. 8]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":196947,"byte_end":196999,"line_start":822,"line_end":822,"column_start":2,"column_end":54}},{"value":"/ assert!(iter.next().is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":197001,"byte_end":197036,"line_start":823,"line_end":823,"column_start":2,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":197038,"byte_end":197045,"line_start":824,"line_end":824,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":197047,"byte_end":197050,"line_start":825,"line_end":825,"column_start":2,"column_end":5}},{"value":"/ [`chunks_exact`]: #method.chunks_exact","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":197052,"byte_end":197094,"line_start":826,"line_end":826,"column_start":2,"column_end":44}},{"value":"/ [`rchunks`]: #method.rchunks","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":197096,"byte_end":197128,"line_start":827,"line_end":827,"column_start":2,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":805},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":198330,"byte_end":198340,"line_start":869,"line_end":869,"column_start":9,"column_end":19},"name":"chunks_mut","qualname":"<BitSlice<O, T>>::chunks_mut","value":"fn chunks_mut<'_>(&'_ mut Self, usize) -> ChunksMut","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over `chunk_size` bits of the slice at a time,\n starting at the beginning of the slice.","sig":null,"attributes":[{"value":"/ Returns an iterator over `chunk_size` bits of the slice at a time,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":197312,"byte_end":197382,"line_start":836,"line_end":836,"column_start":2,"column_end":72}},{"value":"/ starting at the beginning of the slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":197384,"byte_end":197427,"line_start":837,"line_end":837,"column_start":2,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":197429,"byte_end":197432,"line_start":838,"line_end":838,"column_start":2,"column_end":5}},{"value":"/ The chunks are mutable slices, and do not overlap. If `chunk_size` does","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":197434,"byte_end":197509,"line_start":839,"line_end":839,"column_start":2,"column_end":77}},{"value":"/ not divide the length of the slice, then the last chunk will not have","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":197511,"byte_end":197584,"line_start":840,"line_end":840,"column_start":2,"column_end":75}},{"value":"/ length `chunk_size`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":197586,"byte_end":197610,"line_start":841,"line_end":841,"column_start":2,"column_end":26}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":197612,"byte_end":197615,"line_start":842,"line_end":842,"column_start":2,"column_end":5}},{"value":"/ See [`chunks_exact_mut`] for a variant of this iterator that returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":197617,"byte_end":197689,"line_start":843,"line_end":843,"column_start":2,"column_end":74}},{"value":"/ chunks of always exactly `chunk_size` bits, and [`rchunks_mut`] for the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":197691,"byte_end":197766,"line_start":844,"line_end":844,"column_start":2,"column_end":77}},{"value":"/ same iterator but starting at the end of the slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":197768,"byte_end":197823,"line_start":845,"line_end":845,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":197825,"byte_end":197828,"line_start":846,"line_end":846,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":197830,"byte_end":197842,"line_start":847,"line_end":847,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":197844,"byte_end":197847,"line_start":848,"line_end":848,"column_start":2,"column_end":5}},{"value":"/ Panics if `chunk_size` is 0.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":197849,"byte_end":197881,"line_start":849,"line_end":849,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":197883,"byte_end":197886,"line_start":850,"line_end":850,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":197888,"byte_end":197902,"line_start":851,"line_end":851,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":197904,"byte_end":197907,"line_start":852,"line_end":852,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":197909,"byte_end":197920,"line_start":853,"line_end":853,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":197922,"byte_end":197951,"line_start":854,"line_end":854,"column_start":2,"column_end":31}},{"value":"/ let mut data = 0u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":197953,"byte_end":197976,"line_start":855,"line_end":855,"column_start":2,"column_end":25}},{"value":"/ let bits = data.bits_mut::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":197978,"byte_end":198017,"line_start":856,"line_end":856,"column_start":2,"column_end":41}},{"value":"/ let mut count = 0;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":198019,"byte_end":198041,"line_start":857,"line_end":857,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":198043,"byte_end":198046,"line_start":858,"line_end":858,"column_start":2,"column_end":5}},{"value":"/ for chunk in bits.chunks_mut(3) {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":198048,"byte_end":198085,"line_start":859,"line_end":859,"column_start":2,"column_end":39}},{"value":"/     chunk.store(4u8 >> count);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":198087,"byte_end":198121,"line_start":860,"line_end":860,"column_start":2,"column_end":36}},{"value":"/     count += 1;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":198123,"byte_end":198142,"line_start":861,"line_end":861,"column_start":2,"column_end":21}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":198144,"byte_end":198149,"line_start":862,"line_end":862,"column_start":2,"column_end":7}},{"value":"/ assert_eq!(count, 3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":198151,"byte_end":198176,"line_start":863,"line_end":863,"column_start":2,"column_end":27}},{"value":"/ assert_eq!(data, 0b100_010_01);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":198178,"byte_end":198213,"line_start":864,"line_end":864,"column_start":2,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":198215,"byte_end":198222,"line_start":865,"line_end":865,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":198224,"byte_end":198227,"line_start":866,"line_end":866,"column_start":2,"column_end":5}},{"value":"/ [`chunks_exact_mut`]: #method.chunks_exact_mut","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":198229,"byte_end":198279,"line_start":867,"line_end":867,"column_start":2,"column_end":52}},{"value":"/ [`rchunks_mut`]: #method.rchunks_mut","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":198281,"byte_end":198321,"line_start":868,"line_end":868,"column_start":2,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":199788,"byte_end":199800,"line_start":911,"line_end":911,"column_start":9,"column_end":21},"name":"chunks_exact","qualname":"<BitSlice<O, T>>::chunks_exact","value":"fn chunks_exact<'_>(&'_ Self, usize) -> ChunksExact","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over `chunk_size` elements of the slice at a time,\n starting at the beginning of the slice.","sig":null,"attributes":[{"value":"/ Returns an iterator over `chunk_size` elements of the slice at a time,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":198519,"byte_end":198593,"line_start":877,"line_end":877,"column_start":2,"column_end":76}},{"value":"/ starting at the beginning of the slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":198595,"byte_end":198638,"line_start":878,"line_end":878,"column_start":2,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":198640,"byte_end":198643,"line_start":879,"line_end":879,"column_start":2,"column_end":5}},{"value":"/ The chunks are slices and do not overlap. If `chunk_size` does not","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":198645,"byte_end":198715,"line_start":880,"line_end":880,"column_start":2,"column_end":72}},{"value":"/ divide the length of the slice, then the last up to `chunk_size - 1`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":198717,"byte_end":198789,"line_start":881,"line_end":881,"column_start":2,"column_end":74}},{"value":"/ elements will be omitted and can be retrieved from the `remainder`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":198791,"byte_end":198861,"line_start":882,"line_end":882,"column_start":2,"column_end":72}},{"value":"/ function of the iterator.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":198863,"byte_end":198892,"line_start":883,"line_end":883,"column_start":2,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":198894,"byte_end":198897,"line_start":884,"line_end":884,"column_start":2,"column_end":5}},{"value":"/ Due to each chunk having exactly `chunk_size` elements, the compiler can","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":198899,"byte_end":198975,"line_start":885,"line_end":885,"column_start":2,"column_end":78}},{"value":"/ often optimize the resulting code better than in the case of [`chunks`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":198977,"byte_end":199053,"line_start":886,"line_end":886,"column_start":2,"column_end":78}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":199055,"byte_end":199058,"line_start":887,"line_end":887,"column_start":2,"column_end":5}},{"value":"/ See [`chunks`] for a variant of this iterator that also returns the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":199060,"byte_end":199131,"line_start":888,"line_end":888,"column_start":2,"column_end":73}},{"value":"/ remainder as a smaller chunk, and [`rchunks_exact`] for the same","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":199133,"byte_end":199201,"line_start":889,"line_end":889,"column_start":2,"column_end":70}},{"value":"/ iterator but starting at the end of the slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":199203,"byte_end":199253,"line_start":890,"line_end":890,"column_start":2,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":199255,"byte_end":199258,"line_start":891,"line_end":891,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":199260,"byte_end":199272,"line_start":892,"line_end":892,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":199274,"byte_end":199277,"line_start":893,"line_end":893,"column_start":2,"column_end":5}},{"value":"/ Panics if `chunk_size` is 0.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":199279,"byte_end":199311,"line_start":894,"line_end":894,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":199313,"byte_end":199316,"line_start":895,"line_end":895,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":199318,"byte_end":199332,"line_start":896,"line_end":896,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":199334,"byte_end":199337,"line_start":897,"line_end":897,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":199339,"byte_end":199350,"line_start":898,"line_end":898,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":199352,"byte_end":199381,"line_start":899,"line_end":899,"column_start":2,"column_end":31}},{"value":"/ let data = 0b100_010_01u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":199383,"byte_end":199413,"line_start":900,"line_end":900,"column_start":2,"column_end":32}},{"value":"/ let bits = data.bits::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":199415,"byte_end":199450,"line_start":901,"line_end":901,"column_start":2,"column_end":37}},{"value":"/ let mut iter = bits.chunks_exact(3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":199452,"byte_end":199492,"line_start":902,"line_end":902,"column_start":2,"column_end":42}},{"value":"/ assert_eq!(iter.next().unwrap(), &bits[0 .. 3]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":199494,"byte_end":199546,"line_start":903,"line_end":903,"column_start":2,"column_end":54}},{"value":"/ assert_eq!(iter.next().unwrap(), &bits[3 .. 6]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":199548,"byte_end":199600,"line_start":904,"line_end":904,"column_start":2,"column_end":54}},{"value":"/ assert!(iter.next().is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":199602,"byte_end":199637,"line_start":905,"line_end":905,"column_start":2,"column_end":37}},{"value":"/ assert_eq!(iter.remainder(), &bits[6 .. 8]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":199639,"byte_end":199687,"line_start":906,"line_end":906,"column_start":2,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":199689,"byte_end":199696,"line_start":907,"line_end":907,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":199698,"byte_end":199701,"line_start":908,"line_end":908,"column_start":2,"column_end":5}},{"value":"/ [`chunks`]: #method.chunks","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":199703,"byte_end":199733,"line_start":909,"line_end":909,"column_start":2,"column_end":32}},{"value":"/ [`rchunks_exact`]: #method.rchunks_exact","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":199735,"byte_end":199779,"line_start":910,"line_end":910,"column_start":2,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":201466,"byte_end":201482,"line_start":964,"line_end":964,"column_start":9,"column_end":25},"name":"chunks_exact_mut","qualname":"<BitSlice<O, T>>::chunks_exact_mut","value":"fn chunks_exact_mut<'_>(&'_ mut Self, usize) -> ChunksExactMut","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over `chunk_size` elements of the slice at a time,\n starting at the beginning of the slice.","sig":null,"attributes":[{"value":"/ Returns an iterator over `chunk_size` elements of the slice at a time,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":200103,"byte_end":200177,"line_start":924,"line_end":924,"column_start":2,"column_end":76}},{"value":"/ starting at the beginning of the slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":200179,"byte_end":200222,"line_start":925,"line_end":925,"column_start":2,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":200224,"byte_end":200227,"line_start":926,"line_end":926,"column_start":2,"column_end":5}},{"value":"/ The chunks are mutable slices, and do not overlap. If `chunk_size` does","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":200229,"byte_end":200304,"line_start":927,"line_end":927,"column_start":2,"column_end":77}},{"value":"/ not divide the length of the slice, then the last up to `chunk_size - 1`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":200306,"byte_end":200382,"line_start":928,"line_end":928,"column_start":2,"column_end":78}},{"value":"/ elements will be omitted and can be retrieved from the `into_remainder`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":200384,"byte_end":200459,"line_start":929,"line_end":929,"column_start":2,"column_end":77}},{"value":"/ function of the iterator.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":200461,"byte_end":200490,"line_start":930,"line_end":930,"column_start":2,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":200492,"byte_end":200495,"line_start":931,"line_end":931,"column_start":2,"column_end":5}},{"value":"/ Due to each chunk having exactly `chunk_size` elements, the compiler can","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":200497,"byte_end":200573,"line_start":932,"line_end":932,"column_start":2,"column_end":78}},{"value":"/ often optimize the resulting code better than in the case of","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":200575,"byte_end":200639,"line_start":933,"line_end":933,"column_start":2,"column_end":66}},{"value":"/ [`chunks_mut`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":200641,"byte_end":200660,"line_start":934,"line_end":934,"column_start":2,"column_end":21}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":200662,"byte_end":200665,"line_start":935,"line_end":935,"column_start":2,"column_end":5}},{"value":"/ See [`chunks_mut`] for a variant of this iterator that also returns the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":200667,"byte_end":200742,"line_start":936,"line_end":936,"column_start":2,"column_end":77}},{"value":"/ remainder as a smaller chunk, and [`rchunks_exact_mut`] for the same","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":200744,"byte_end":200816,"line_start":937,"line_end":937,"column_start":2,"column_end":74}},{"value":"/ iterator but starting at the end of the slice of the slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":200818,"byte_end":200881,"line_start":938,"line_end":938,"column_start":2,"column_end":65}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":200883,"byte_end":200886,"line_start":939,"line_end":939,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":200888,"byte_end":200900,"line_start":940,"line_end":940,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":200902,"byte_end":200905,"line_start":941,"line_end":941,"column_start":2,"column_end":5}},{"value":"/ Panics if `chunk_size` is 0.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":200907,"byte_end":200939,"line_start":942,"line_end":942,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":200941,"byte_end":200944,"line_start":943,"line_end":943,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":200946,"byte_end":200960,"line_start":944,"line_end":944,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":200962,"byte_end":200965,"line_start":945,"line_end":945,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":200967,"byte_end":200978,"line_start":946,"line_end":946,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":200980,"byte_end":201009,"line_start":947,"line_end":947,"column_start":2,"column_end":31}},{"value":"/ let mut data = 0u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":201011,"byte_end":201034,"line_start":948,"line_end":948,"column_start":2,"column_end":25}},{"value":"/ let bits = data.bits_mut::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":201036,"byte_end":201075,"line_start":949,"line_end":949,"column_start":2,"column_end":41}},{"value":"/ let mut count = 0u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":201077,"byte_end":201101,"line_start":950,"line_end":950,"column_start":2,"column_end":26}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":201103,"byte_end":201106,"line_start":951,"line_end":951,"column_start":2,"column_end":5}},{"value":"/ let mut iter = bits.chunks_exact_mut(3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":201108,"byte_end":201152,"line_start":952,"line_end":952,"column_start":2,"column_end":46}},{"value":"/ for chunk in &mut iter {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":201154,"byte_end":201182,"line_start":953,"line_end":953,"column_start":2,"column_end":30}},{"value":"/     chunk.store(4u8 >> count);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":201184,"byte_end":201218,"line_start":954,"line_end":954,"column_start":2,"column_end":36}},{"value":"/     count += 1;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":201220,"byte_end":201239,"line_start":955,"line_end":955,"column_start":2,"column_end":21}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":201241,"byte_end":201246,"line_start":956,"line_end":956,"column_start":2,"column_end":7}},{"value":"/ iter.into_remainder().store(1u8);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":201248,"byte_end":201285,"line_start":957,"line_end":957,"column_start":2,"column_end":39}},{"value":"/ assert_eq!(count, 2);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":201287,"byte_end":201312,"line_start":958,"line_end":958,"column_start":2,"column_end":27}},{"value":"/ assert_eq!(data, 0b100_010_01);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":201314,"byte_end":201349,"line_start":959,"line_end":959,"column_start":2,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":201351,"byte_end":201358,"line_start":960,"line_end":960,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":201360,"byte_end":201363,"line_start":961,"line_end":961,"column_start":2,"column_end":5}},{"value":"/ [`chunks_mut`]: #method.chunks_mut","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":201365,"byte_end":201403,"line_start":962,"line_end":962,"column_start":2,"column_end":40}},{"value":"/ [`rchunks_exact_mut`]: #method.rchunks_exact_mut","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":201405,"byte_end":201457,"line_start":963,"line_end":963,"column_start":2,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":808},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":202882,"byte_end":202889,"line_start":1007,"line_end":1007,"column_start":9,"column_end":16},"name":"rchunks","qualname":"<BitSlice<O, T>>::rchunks","value":"fn rchunks<'_>(&'_ Self, usize) -> RChunks","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over `chunk_size` bits of the slice at a time,\n starting at the end of the slice.","sig":null,"attributes":[{"value":"/ Returns an iterator over `chunk_size` bits of the slice at a time,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":201799,"byte_end":201869,"line_start":977,"line_end":977,"column_start":2,"column_end":72}},{"value":"/ starting at the end of the slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":201871,"byte_end":201908,"line_start":978,"line_end":978,"column_start":2,"column_end":39}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":201910,"byte_end":201913,"line_start":979,"line_end":979,"column_start":2,"column_end":5}},{"value":"/ The chunks are slices and do not overlap. If `chunk_size` does not","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":201915,"byte_end":201985,"line_start":980,"line_end":980,"column_start":2,"column_end":72}},{"value":"/ divide the length of the slice, then the last chunk will not have length","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":201987,"byte_end":202063,"line_start":981,"line_end":981,"column_start":2,"column_end":78}},{"value":"/ of the slice, then the last chunk will not have length `chunk_size`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":202065,"byte_end":202137,"line_start":982,"line_end":982,"column_start":2,"column_end":74}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":202139,"byte_end":202142,"line_start":983,"line_end":983,"column_start":2,"column_end":5}},{"value":"/ See [`rchunks_exact`] for a variant of this iterator that returns chunks","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":202144,"byte_end":202220,"line_start":984,"line_end":984,"column_start":2,"column_end":78}},{"value":"/ of always exactly `chunk_size` bits, and [`chunks`] for the same","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":202222,"byte_end":202290,"line_start":985,"line_end":985,"column_start":2,"column_end":70}},{"value":"/ iterator but starting at the beginning of the slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":202292,"byte_end":202348,"line_start":986,"line_end":986,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":202350,"byte_end":202353,"line_start":987,"line_end":987,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":202355,"byte_end":202367,"line_start":988,"line_end":988,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":202369,"byte_end":202372,"line_start":989,"line_end":989,"column_start":2,"column_end":5}},{"value":"/ Panics if `chunk_size` is 0.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":202374,"byte_end":202406,"line_start":990,"line_end":990,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":202408,"byte_end":202411,"line_start":991,"line_end":991,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":202413,"byte_end":202427,"line_start":992,"line_end":992,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":202429,"byte_end":202432,"line_start":993,"line_end":993,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":202434,"byte_end":202445,"line_start":994,"line_end":994,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":202447,"byte_end":202476,"line_start":995,"line_end":995,"column_start":2,"column_end":31}},{"value":"/ let data = 0b01_010_100u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":202478,"byte_end":202508,"line_start":996,"line_end":996,"column_start":2,"column_end":32}},{"value":"/ let bits = data.bits::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":202510,"byte_end":202545,"line_start":997,"line_end":997,"column_start":2,"column_end":37}},{"value":"/ let mut iter = bits.rchunks(3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":202547,"byte_end":202582,"line_start":998,"line_end":998,"column_start":2,"column_end":37}},{"value":"/ assert_eq!(iter.next().unwrap(), &bits[5 .. 8]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":202584,"byte_end":202636,"line_start":999,"line_end":999,"column_start":2,"column_end":54}},{"value":"/ assert_eq!(iter.next().unwrap(), &bits[2 .. 5]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":202638,"byte_end":202690,"line_start":1000,"line_end":1000,"column_start":2,"column_end":54}},{"value":"/ assert_eq!(iter.next().unwrap(), &bits[0 .. 2]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":202692,"byte_end":202744,"line_start":1001,"line_end":1001,"column_start":2,"column_end":54}},{"value":"/ assert!(iter.next().is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":202746,"byte_end":202781,"line_start":1002,"line_end":1002,"column_start":2,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":202783,"byte_end":202790,"line_start":1003,"line_end":1003,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":202792,"byte_end":202795,"line_start":1004,"line_end":1004,"column_start":2,"column_end":5}},{"value":"/ [`chunks`]: #method.chunks","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":202797,"byte_end":202827,"line_start":1005,"line_end":1005,"column_start":2,"column_end":32}},{"value":"/ [`rchunks_exact`]: #method.rchunks_exact","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":202829,"byte_end":202873,"line_start":1006,"line_end":1006,"column_start":2,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":809},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":204131,"byte_end":204142,"line_start":1049,"line_end":1049,"column_start":9,"column_end":20},"name":"rchunks_mut","qualname":"<BitSlice<O, T>>::rchunks_mut","value":"fn rchunks_mut<'_>(&'_ mut Self, usize) -> RChunksMut","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over `chunk_size` bits of the slice at a time,\n starting at the end of the slice.","sig":null,"attributes":[{"value":"/ Returns an iterator over `chunk_size` bits of the slice at a time,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":203053,"byte_end":203123,"line_start":1015,"line_end":1015,"column_start":2,"column_end":72}},{"value":"/ starting at the end of the slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":203125,"byte_end":203162,"line_start":1016,"line_end":1016,"column_start":2,"column_end":39}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":203164,"byte_end":203167,"line_start":1017,"line_end":1017,"column_start":2,"column_end":5}},{"value":"/ The chunks are mutable slices and do not overlap. If `chunk_size` does","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":203169,"byte_end":203243,"line_start":1018,"line_end":1018,"column_start":2,"column_end":76}},{"value":"/ not divide the length of the slice, then the last chunk will not have","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":203245,"byte_end":203318,"line_start":1019,"line_end":1019,"column_start":2,"column_end":75}},{"value":"/ length of the slice, then the last chunk will not have length","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":203320,"byte_end":203385,"line_start":1020,"line_end":1020,"column_start":2,"column_end":67}},{"value":"/ `chunk_size`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":203387,"byte_end":203404,"line_start":1021,"line_end":1021,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":203406,"byte_end":203409,"line_start":1022,"line_end":1022,"column_start":2,"column_end":5}},{"value":"/ See [`rchunks_exact_mut`] for a variant of this iterator that returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":203411,"byte_end":203484,"line_start":1023,"line_end":1023,"column_start":2,"column_end":75}},{"value":"/ chunks of always exactly `chunk_size` bits, and [`chunks_mut`] for the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":203486,"byte_end":203560,"line_start":1024,"line_end":1024,"column_start":2,"column_end":76}},{"value":"/ same iterator but starting at the beginning of the slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":203562,"byte_end":203623,"line_start":1025,"line_end":1025,"column_start":2,"column_end":63}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":203625,"byte_end":203628,"line_start":1026,"line_end":1026,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":203630,"byte_end":203642,"line_start":1027,"line_end":1027,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":203644,"byte_end":203647,"line_start":1028,"line_end":1028,"column_start":2,"column_end":5}},{"value":"/ Panics if `chunk_size` is 0.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":203649,"byte_end":203681,"line_start":1029,"line_end":1029,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":203683,"byte_end":203686,"line_start":1030,"line_end":1030,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":203688,"byte_end":203702,"line_start":1031,"line_end":1031,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":203704,"byte_end":203707,"line_start":1032,"line_end":1032,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":203709,"byte_end":203720,"line_start":1033,"line_end":1033,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":203722,"byte_end":203751,"line_start":1034,"line_end":1034,"column_start":2,"column_end":31}},{"value":"/ let mut data = 0u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":203753,"byte_end":203776,"line_start":1035,"line_end":1035,"column_start":2,"column_end":25}},{"value":"/ let bits = data.bits_mut::<Lsb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":203778,"byte_end":203817,"line_start":1036,"line_end":1036,"column_start":2,"column_end":41}},{"value":"/ let mut count = 0;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":203819,"byte_end":203841,"line_start":1037,"line_end":1037,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":203843,"byte_end":203846,"line_start":1038,"line_end":1038,"column_start":2,"column_end":5}},{"value":"/ for chunk in bits.rchunks_mut(3) {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":203848,"byte_end":203886,"line_start":1039,"line_end":1039,"column_start":2,"column_end":40}},{"value":"/     chunk.store(4u8 >> count);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":203888,"byte_end":203922,"line_start":1040,"line_end":1040,"column_start":2,"column_end":36}},{"value":"/     count += 1;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":203924,"byte_end":203943,"line_start":1041,"line_end":1041,"column_start":2,"column_end":21}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":203945,"byte_end":203950,"line_start":1042,"line_end":1042,"column_start":2,"column_end":7}},{"value":"/ assert_eq!(count, 3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":203952,"byte_end":203977,"line_start":1043,"line_end":1043,"column_start":2,"column_end":27}},{"value":"/ assert_eq!(data, 0b100_010_01);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":203979,"byte_end":204014,"line_start":1044,"line_end":1044,"column_start":2,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":204016,"byte_end":204023,"line_start":1045,"line_end":1045,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":204025,"byte_end":204028,"line_start":1046,"line_end":1046,"column_start":2,"column_end":5}},{"value":"/ [`chunks_mut`]: #method.chunks_mut","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":204030,"byte_end":204068,"line_start":1047,"line_end":1047,"column_start":2,"column_end":40}},{"value":"/ [`rchunks_exact_mut`]: #method.rchunks_exact_mut","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":204070,"byte_end":204122,"line_start":1048,"line_end":1048,"column_start":2,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":205605,"byte_end":205618,"line_start":1092,"line_end":1092,"column_start":9,"column_end":22},"name":"rchunks_exact","qualname":"<BitSlice<O, T>>::rchunks_exact","value":"fn rchunks_exact<'_>(&'_ Self, usize) -> RChunksExact","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over `chunk_size` bits of the slice at a time,\n starting at the end of the slice.","sig":null,"attributes":[{"value":"/ Returns an iterator over `chunk_size` bits of the slice at a time,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":204316,"byte_end":204386,"line_start":1057,"line_end":1057,"column_start":2,"column_end":72}},{"value":"/ starting at the end of the slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":204388,"byte_end":204425,"line_start":1058,"line_end":1058,"column_start":2,"column_end":39}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":204427,"byte_end":204430,"line_start":1059,"line_end":1059,"column_start":2,"column_end":5}},{"value":"/ The chunks are slices and do not overlap. If `chunk_size` does not","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":204432,"byte_end":204502,"line_start":1060,"line_end":1060,"column_start":2,"column_end":72}},{"value":"/ divide the length of the slice, then the last up to `chunk_size - 1`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":204504,"byte_end":204576,"line_start":1061,"line_end":1061,"column_start":2,"column_end":74}},{"value":"/ bits will be omitted and can be retrieved from the `remainder` function","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":204578,"byte_end":204653,"line_start":1062,"line_end":1062,"column_start":2,"column_end":77}},{"value":"/ of the iterator.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":204655,"byte_end":204675,"line_start":1063,"line_end":1063,"column_start":2,"column_end":22}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":204677,"byte_end":204680,"line_start":1064,"line_end":1064,"column_start":2,"column_end":5}},{"value":"/ Due to each chunk having exactly `chunk_size` bits, the compiler can","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":204682,"byte_end":204754,"line_start":1065,"line_end":1065,"column_start":2,"column_end":74}},{"value":"/ often optimize the resulting code better than in the case of [`chunks`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":204756,"byte_end":204832,"line_start":1066,"line_end":1066,"column_start":2,"column_end":78}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":204834,"byte_end":204837,"line_start":1067,"line_end":1067,"column_start":2,"column_end":5}},{"value":"/ See [`rchunks`] for a variant of this iterator that also returns the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":204839,"byte_end":204911,"line_start":1068,"line_end":1068,"column_start":2,"column_end":74}},{"value":"/ remainder as a smaller chunk, and [`chunks_exact`] for the same iterator","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":204913,"byte_end":204989,"line_start":1069,"line_end":1069,"column_start":2,"column_end":78}},{"value":"/ but starting at the beginning of the slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":204991,"byte_end":205038,"line_start":1070,"line_end":1070,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":205040,"byte_end":205043,"line_start":1071,"line_end":1071,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":205045,"byte_end":205057,"line_start":1072,"line_end":1072,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":205059,"byte_end":205062,"line_start":1073,"line_end":1073,"column_start":2,"column_end":5}},{"value":"/ Panics if `chunk_size` is 0.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":205064,"byte_end":205096,"line_start":1074,"line_end":1074,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":205098,"byte_end":205101,"line_start":1075,"line_end":1075,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":205103,"byte_end":205117,"line_start":1076,"line_end":1076,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":205119,"byte_end":205122,"line_start":1077,"line_end":1077,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":205124,"byte_end":205135,"line_start":1078,"line_end":1078,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":205137,"byte_end":205166,"line_start":1079,"line_end":1079,"column_start":2,"column_end":31}},{"value":"/ let data = 0b100_010_01u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":205168,"byte_end":205198,"line_start":1080,"line_end":1080,"column_start":2,"column_end":32}},{"value":"/ let bits = data.bits::<Lsb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":205200,"byte_end":205235,"line_start":1081,"line_end":1081,"column_start":2,"column_end":37}},{"value":"/ let mut iter = bits.rchunks_exact(3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":205237,"byte_end":205278,"line_start":1082,"line_end":1082,"column_start":2,"column_end":43}},{"value":"/ assert_eq!(iter.next().unwrap(), &bits[5 .. 8]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":205280,"byte_end":205332,"line_start":1083,"line_end":1083,"column_start":2,"column_end":54}},{"value":"/ assert_eq!(iter.next().unwrap(), &bits[2 .. 5]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":205334,"byte_end":205386,"line_start":1084,"line_end":1084,"column_start":2,"column_end":54}},{"value":"/ assert!(iter.next().is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":205388,"byte_end":205423,"line_start":1085,"line_end":1085,"column_start":2,"column_end":37}},{"value":"/ assert_eq!(iter.remainder(), &bits[0 ..2]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":205425,"byte_end":205472,"line_start":1086,"line_end":1086,"column_start":2,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":205474,"byte_end":205481,"line_start":1087,"line_end":1087,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":205483,"byte_end":205486,"line_start":1088,"line_end":1088,"column_start":2,"column_end":5}},{"value":"/ [`chunks`]: #method.chunks","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":205488,"byte_end":205518,"line_start":1089,"line_end":1089,"column_start":2,"column_end":32}},{"value":"/ [`rchunks`]: #method.rchunks","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":205520,"byte_end":205552,"line_start":1090,"line_end":1090,"column_start":2,"column_end":34}},{"value":"/ [`chunks_exact`]: #method.chunks_exact","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":205554,"byte_end":205596,"line_start":1091,"line_end":1091,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":207236,"byte_end":207253,"line_start":1143,"line_end":1143,"column_start":9,"column_end":26},"name":"rchunks_exact_mut","qualname":"<BitSlice<O, T>>::rchunks_exact_mut","value":"fn rchunks_exact_mut<'_>(&'_ mut Self, usize) -> RChunksExactMut","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over `chunk_size` bits of the slice at a time,\n starting at the end of the slice.","sig":null,"attributes":[{"value":"/ Returns an iterator over `chunk_size` bits of the slice at a time,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":205859,"byte_end":205929,"line_start":1102,"line_end":1102,"column_start":2,"column_end":72}},{"value":"/ starting at the end of the slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":205931,"byte_end":205968,"line_start":1103,"line_end":1103,"column_start":2,"column_end":39}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":205970,"byte_end":205973,"line_start":1104,"line_end":1104,"column_start":2,"column_end":5}},{"value":"/ The chunks are mutable slices, and do not overlap. If `chunk_size` does","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":205975,"byte_end":206050,"line_start":1105,"line_end":1105,"column_start":2,"column_end":77}},{"value":"/ not divide the length of the slice, then the last up to `chunk_size - 1`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":206052,"byte_end":206128,"line_start":1106,"line_end":1106,"column_start":2,"column_end":78}},{"value":"/ bits will be omitted and can be retrieved from the `into_remainder`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":206130,"byte_end":206201,"line_start":1107,"line_end":1107,"column_start":2,"column_end":73}},{"value":"/ function of the iterator.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":206203,"byte_end":206232,"line_start":1108,"line_end":1108,"column_start":2,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":206234,"byte_end":206237,"line_start":1109,"line_end":1109,"column_start":2,"column_end":5}},{"value":"/ Due to each chunk having exactly `chunk_size` bits, the compiler can","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":206239,"byte_end":206311,"line_start":1110,"line_end":1110,"column_start":2,"column_end":74}},{"value":"/ often optimize the resulting code better than in the case of","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":206313,"byte_end":206377,"line_start":1111,"line_end":1111,"column_start":2,"column_end":66}},{"value":"/ [`chunks_mut`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":206379,"byte_end":206398,"line_start":1112,"line_end":1112,"column_start":2,"column_end":21}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":206400,"byte_end":206403,"line_start":1113,"line_end":1113,"column_start":2,"column_end":5}},{"value":"/ See [`rchunks_mut`] for a variant of this iterator that also returns the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":206405,"byte_end":206481,"line_start":1114,"line_end":1114,"column_start":2,"column_end":78}},{"value":"/ remainder as a smaller chunk, and [`chunks_exact_mut`] for the same","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":206483,"byte_end":206554,"line_start":1115,"line_end":1115,"column_start":2,"column_end":73}},{"value":"/ iterator but starting at the beginning of the slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":206556,"byte_end":206612,"line_start":1116,"line_end":1116,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":206614,"byte_end":206617,"line_start":1117,"line_end":1117,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":206619,"byte_end":206631,"line_start":1118,"line_end":1118,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":206633,"byte_end":206636,"line_start":1119,"line_end":1119,"column_start":2,"column_end":5}},{"value":"/ Panics if `chunk_size` is 0.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":206638,"byte_end":206670,"line_start":1120,"line_end":1120,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":206672,"byte_end":206675,"line_start":1121,"line_end":1121,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":206677,"byte_end":206691,"line_start":1122,"line_end":1122,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":206693,"byte_end":206696,"line_start":1123,"line_end":1123,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":206698,"byte_end":206709,"line_start":1124,"line_end":1124,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":206711,"byte_end":206740,"line_start":1125,"line_end":1125,"column_start":2,"column_end":31}},{"value":"/ let mut data = 0u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":206742,"byte_end":206765,"line_start":1126,"line_end":1126,"column_start":2,"column_end":25}},{"value":"/ let bits = data.bits_mut::<Lsb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":206767,"byte_end":206806,"line_start":1127,"line_end":1127,"column_start":2,"column_end":41}},{"value":"/ let mut count = 0;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":206808,"byte_end":206830,"line_start":1128,"line_end":1128,"column_start":2,"column_end":24}},{"value":"/ let mut iter = bits.rchunks_exact_mut(3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":206832,"byte_end":206877,"line_start":1129,"line_end":1129,"column_start":2,"column_end":47}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":206879,"byte_end":206882,"line_start":1130,"line_end":1130,"column_start":2,"column_end":5}},{"value":"/ for chunk in &mut iter {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":206884,"byte_end":206912,"line_start":1131,"line_end":1131,"column_start":2,"column_end":30}},{"value":"/     chunk.store(4u8 >> count);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":206914,"byte_end":206948,"line_start":1132,"line_end":1132,"column_start":2,"column_end":36}},{"value":"/     count += 1;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":206950,"byte_end":206969,"line_start":1133,"line_end":1133,"column_start":2,"column_end":21}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":206971,"byte_end":206976,"line_start":1134,"line_end":1134,"column_start":2,"column_end":7}},{"value":"/ iter.into_remainder().store(1u8);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":206978,"byte_end":207015,"line_start":1135,"line_end":1135,"column_start":2,"column_end":39}},{"value":"/ assert_eq!(data, 0b100_010_01);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":207017,"byte_end":207052,"line_start":1136,"line_end":1136,"column_start":2,"column_end":37}},{"value":"/ assert_eq!(count, 2);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":207054,"byte_end":207079,"line_start":1137,"line_end":1137,"column_start":2,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":207081,"byte_end":207088,"line_start":1138,"line_end":1138,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":207090,"byte_end":207093,"line_start":1139,"line_end":1139,"column_start":2,"column_end":5}},{"value":"/ [`chunks_mut`]: #method.chunks_mut","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":207095,"byte_end":207133,"line_start":1140,"line_end":1140,"column_start":2,"column_end":40}},{"value":"/ [`rchunks_mut`]: #method.rchunks_mut","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":207135,"byte_end":207175,"line_start":1141,"line_end":1141,"column_start":2,"column_end":42}},{"value":"/ [`chunks_exact_mut`]: #method.chunks_exact_mut","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":207177,"byte_end":207227,"line_start":1142,"line_end":1142,"column_start":2,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":208353,"byte_end":208361,"line_start":1188,"line_end":1188,"column_start":9,"column_end":17},"name":"split_at","qualname":"<BitSlice<O, T>>::split_at","value":"fn split_at<'_>(&'_ Self, usize) -> (&'_ Self, &'_ Self)","parent":null,"children":[],"decl_id":null,"docs":" Divides one slice into two at an index.","sig":null,"attributes":[{"value":"/ Divides one slice into two at an index.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":207508,"byte_end":207551,"line_start":1153,"line_end":1153,"column_start":2,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":207553,"byte_end":207556,"line_start":1154,"line_end":1154,"column_start":2,"column_end":5}},{"value":"/ The first will contain all indices from `[0, mid)` (excluding the index","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":207558,"byte_end":207633,"line_start":1155,"line_end":1155,"column_start":2,"column_end":77}},{"value":"/ `mid` itself) and the second will contain all indices from `[mid, len)`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":207635,"byte_end":207710,"line_start":1156,"line_end":1156,"column_start":2,"column_end":77}},{"value":"/ (excluding the index `len` itself).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":207712,"byte_end":207751,"line_start":1157,"line_end":1157,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":207753,"byte_end":207756,"line_start":1158,"line_end":1158,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":207758,"byte_end":207770,"line_start":1159,"line_end":1159,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":207772,"byte_end":207775,"line_start":1160,"line_end":1160,"column_start":2,"column_end":5}},{"value":"/ Panics if `mid > len`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":207777,"byte_end":207803,"line_start":1161,"line_end":1161,"column_start":2,"column_end":28}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":207805,"byte_end":207808,"line_start":1162,"line_end":1162,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":207810,"byte_end":207824,"line_start":1163,"line_end":1163,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":207826,"byte_end":207829,"line_start":1164,"line_end":1164,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":207831,"byte_end":207842,"line_start":1165,"line_end":1165,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":207844,"byte_end":207873,"line_start":1166,"line_end":1166,"column_start":2,"column_end":31}},{"value":"/ let data = 0x0Fu8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":207875,"byte_end":207897,"line_start":1167,"line_end":1167,"column_start":2,"column_end":24}},{"value":"/ let bits = data.bits::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":207899,"byte_end":207934,"line_start":1168,"line_end":1168,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":207936,"byte_end":207939,"line_start":1169,"line_end":1169,"column_start":2,"column_end":5}},{"value":"/ {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":207941,"byte_end":207946,"line_start":1170,"line_end":1170,"column_start":2,"column_end":7}},{"value":"/     let (left, right) = bits.split_at(0);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":207948,"byte_end":207993,"line_start":1171,"line_end":1171,"column_start":2,"column_end":47}},{"value":"/     assert!(left.is_empty());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":207995,"byte_end":208028,"line_start":1172,"line_end":1172,"column_start":2,"column_end":35}},{"value":"/     assert_eq!(right, bits);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":208030,"byte_end":208062,"line_start":1173,"line_end":1173,"column_start":2,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":208064,"byte_end":208069,"line_start":1174,"line_end":1174,"column_start":2,"column_end":7}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":208071,"byte_end":208074,"line_start":1175,"line_end":1175,"column_start":2,"column_end":5}},{"value":"/ {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":208076,"byte_end":208081,"line_start":1176,"line_end":1176,"column_start":2,"column_end":7}},{"value":"/     let (left, right) = bits.split_at(4);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":208083,"byte_end":208128,"line_start":1177,"line_end":1177,"column_start":2,"column_end":47}},{"value":"/     assert!(left.not_any());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":208130,"byte_end":208162,"line_start":1178,"line_end":1178,"column_start":2,"column_end":34}},{"value":"/     assert!(right.all());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":208164,"byte_end":208193,"line_start":1179,"line_end":1179,"column_start":2,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":208195,"byte_end":208200,"line_start":1180,"line_end":1180,"column_start":2,"column_end":7}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":208202,"byte_end":208205,"line_start":1181,"line_end":1181,"column_start":2,"column_end":5}},{"value":"/ {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":208207,"byte_end":208212,"line_start":1182,"line_end":1182,"column_start":2,"column_end":7}},{"value":"/     let (left, right) = bits.split_at(8);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":208214,"byte_end":208259,"line_start":1183,"line_end":1183,"column_start":2,"column_end":47}},{"value":"/     assert_eq!(left, bits);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":208261,"byte_end":208292,"line_start":1184,"line_end":1184,"column_start":2,"column_end":33}},{"value":"/     assert!(right.is_empty());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":208294,"byte_end":208328,"line_start":1185,"line_end":1185,"column_start":2,"column_end":36}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":208330,"byte_end":208335,"line_start":1186,"line_end":1186,"column_start":2,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":208337,"byte_end":208344,"line_start":1187,"line_end":1187,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":813},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":209208,"byte_end":209220,"line_start":1220,"line_end":1220,"column_start":9,"column_end":21},"name":"split_at_mut","qualname":"<BitSlice<O, T>>::split_at_mut","value":"fn split_at_mut<'_>(&'_ mut Self, usize) -> (&'_ mut Self, &'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Divides one mutable slice into two at an index.","sig":null,"attributes":[{"value":"/ Divides one mutable slice into two at an index.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":208535,"byte_end":208586,"line_start":1194,"line_end":1194,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":208588,"byte_end":208591,"line_start":1195,"line_end":1195,"column_start":2,"column_end":5}},{"value":"/ The first will contain all indices from `[0, mid)` (excluding the index","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":208593,"byte_end":208668,"line_start":1196,"line_end":1196,"column_start":2,"column_end":77}},{"value":"/ `mid` itself) and the second will contain all indices from `[mid, len)`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":208670,"byte_end":208745,"line_start":1197,"line_end":1197,"column_start":2,"column_end":77}},{"value":"/ (excluding the index `len` itself).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":208747,"byte_end":208786,"line_start":1198,"line_end":1198,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":208788,"byte_end":208791,"line_start":1199,"line_end":1199,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":208793,"byte_end":208805,"line_start":1200,"line_end":1200,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":208807,"byte_end":208810,"line_start":1201,"line_end":1201,"column_start":2,"column_end":5}},{"value":"/ Panics if `mid > len`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":208812,"byte_end":208838,"line_start":1202,"line_end":1202,"column_start":2,"column_end":28}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":208840,"byte_end":208843,"line_start":1203,"line_end":1203,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":208845,"byte_end":208859,"line_start":1204,"line_end":1204,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":208861,"byte_end":208864,"line_start":1205,"line_end":1205,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":208866,"byte_end":208877,"line_start":1206,"line_end":1206,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":208879,"byte_end":208908,"line_start":1207,"line_end":1207,"column_start":2,"column_end":31}},{"value":"/ let mut data = 0x0Fu8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":208910,"byte_end":208936,"line_start":1208,"line_end":1208,"column_start":2,"column_end":28}},{"value":"/ let bits = data.bits_mut::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":208938,"byte_end":208977,"line_start":1209,"line_end":1209,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":208979,"byte_end":208982,"line_start":1210,"line_end":1210,"column_start":2,"column_end":5}},{"value":"/ let (left, right) = bits.split_at_mut(4);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":208984,"byte_end":209029,"line_start":1211,"line_end":1211,"column_start":2,"column_end":47}},{"value":"/ assert!(left.not_any());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":209031,"byte_end":209059,"line_start":1212,"line_end":1212,"column_start":2,"column_end":30}},{"value":"/ assert!(right.all());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":209061,"byte_end":209086,"line_start":1213,"line_end":1213,"column_start":2,"column_end":27}},{"value":"/ *left.at(1) = true;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":209088,"byte_end":209111,"line_start":1214,"line_end":1214,"column_start":2,"column_end":25}},{"value":"/ *right.at(2) = false;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":209113,"byte_end":209138,"line_start":1215,"line_end":1215,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":209140,"byte_end":209143,"line_start":1216,"line_end":1216,"column_start":2,"column_end":5}},{"value":"/ assert_eq!(data, 0b0100_1101);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":209145,"byte_end":209179,"line_start":1217,"line_end":1217,"column_start":2,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":209181,"byte_end":209188,"line_start":1218,"line_end":1218,"column_start":2,"column_end":9}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":209190,"byte_end":209199,"line_start":1219,"line_end":1219,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":814},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":211583,"byte_end":211588,"line_start":1284,"line_end":1284,"column_start":9,"column_end":14},"name":"split","qualname":"<BitSlice<O, T>>::split","value":"fn split<F, '_>(&'_ Self, F) -> Split where F: for<'_> FnMut(usize, &'_ bool)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over subslices separated by indexed bits that\n satisfy the predicate `func`tion. The matched position is not contained\n in the subslices.","sig":null,"attributes":[{"value":"/ Returns an iterator over subslices separated by indexed bits that","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":209391,"byte_end":209460,"line_start":1225,"line_end":1225,"column_start":2,"column_end":71}},{"value":"/ satisfy the predicate `func`tion. The matched position is not contained","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":209462,"byte_end":209537,"line_start":1226,"line_end":1226,"column_start":2,"column_end":77}},{"value":"/ in the subslices.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":209539,"byte_end":209560,"line_start":1227,"line_end":1227,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":209562,"byte_end":209565,"line_start":1228,"line_end":1228,"column_start":2,"column_end":5}},{"value":"/ # API Differences","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":209567,"byte_end":209588,"line_start":1229,"line_end":1229,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":209590,"byte_end":209593,"line_start":1230,"line_end":1230,"column_start":2,"column_end":5}},{"value":"/ The [`slice::split`] method takes a predicate function with signature","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":209595,"byte_end":209668,"line_start":1231,"line_end":1231,"column_start":2,"column_end":75}},{"value":"/ `(&T) -> bool`, whereas this method’s predicate function has signature","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":209670,"byte_end":209746,"line_start":1232,"line_end":1232,"column_start":2,"column_end":76}},{"value":"/ `(usize, &T) -> bool`. This difference is in place because `BitSlice` by","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":209748,"byte_end":209824,"line_start":1233,"line_end":1233,"column_start":2,"column_end":78}},{"value":"/ definition has only one bit of information per slice item, and including","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":209826,"byte_end":209902,"line_start":1234,"line_end":1234,"column_start":2,"column_end":78}},{"value":"/ the index allows the callback function to make more informed choices.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":209904,"byte_end":209977,"line_start":1235,"line_end":1235,"column_start":2,"column_end":75}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":209979,"byte_end":209982,"line_start":1236,"line_end":1236,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":209984,"byte_end":209998,"line_start":1237,"line_end":1237,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":210000,"byte_end":210003,"line_start":1238,"line_end":1238,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":210005,"byte_end":210016,"line_start":1239,"line_end":1239,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":210018,"byte_end":210047,"line_start":1240,"line_end":1240,"column_start":2,"column_end":31}},{"value":"/ let data = 0b01_001_000u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":210049,"byte_end":210079,"line_start":1241,"line_end":1241,"column_start":2,"column_end":32}},{"value":"/ let bits = data.bits::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":210081,"byte_end":210116,"line_start":1242,"line_end":1242,"column_start":2,"column_end":37}},{"value":"/ let mut iter = bits.split(|pos, bit| *bit);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":210118,"byte_end":210165,"line_start":1243,"line_end":1243,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":210167,"byte_end":210170,"line_start":1244,"line_end":1244,"column_start":2,"column_end":5}},{"value":"/ assert_eq!(iter.next().unwrap(), &bits[0 .. 1]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":210172,"byte_end":210224,"line_start":1245,"line_end":1245,"column_start":2,"column_end":54}},{"value":"/ assert_eq!(iter.next().unwrap(), &bits[2 .. 4]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":210226,"byte_end":210278,"line_start":1246,"line_end":1246,"column_start":2,"column_end":54}},{"value":"/ assert_eq!(iter.next().unwrap(), &bits[5 .. 8]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":210280,"byte_end":210332,"line_start":1247,"line_end":1247,"column_start":2,"column_end":54}},{"value":"/ assert!(iter.next().is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":210334,"byte_end":210369,"line_start":1248,"line_end":1248,"column_start":2,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":210371,"byte_end":210378,"line_start":1249,"line_end":1249,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":210380,"byte_end":210383,"line_start":1250,"line_end":1250,"column_start":2,"column_end":5}},{"value":"/ If the first position is matched, an empty slice will be the first item","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":210385,"byte_end":210460,"line_start":1251,"line_end":1251,"column_start":2,"column_end":77}},{"value":"/ returned by the iterator. Similarly, if the last position in the slice","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":210462,"byte_end":210536,"line_start":1252,"line_end":1252,"column_start":2,"column_end":76}},{"value":"/ is matched, an empty slice will be the last item returned by the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":210538,"byte_end":210606,"line_start":1253,"line_end":1253,"column_start":2,"column_end":70}},{"value":"/ iterator:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":210608,"byte_end":210621,"line_start":1254,"line_end":1254,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":210623,"byte_end":210626,"line_start":1255,"line_end":1255,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":210628,"byte_end":210639,"line_start":1256,"line_end":1256,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":210641,"byte_end":210670,"line_start":1257,"line_end":1257,"column_start":2,"column_end":31}},{"value":"/ let data = 1u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":210672,"byte_end":210691,"line_start":1258,"line_end":1258,"column_start":2,"column_end":21}},{"value":"/ let bits = data.bits::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":210693,"byte_end":210728,"line_start":1259,"line_end":1259,"column_start":2,"column_end":37}},{"value":"/ let mut iter = bits.split(|pos, bit| *bit);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":210730,"byte_end":210777,"line_start":1260,"line_end":1260,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":210779,"byte_end":210782,"line_start":1261,"line_end":1261,"column_start":2,"column_end":5}},{"value":"/ assert_eq!(iter.next().unwrap(), &bits[0 .. 7]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":210784,"byte_end":210836,"line_start":1262,"line_end":1262,"column_start":2,"column_end":54}},{"value":"/ assert_eq!(iter.next().unwrap(), BitSlice::<Local, usize>::empty());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":210838,"byte_end":210910,"line_start":1263,"line_end":1263,"column_start":2,"column_end":74}},{"value":"/ assert!(iter.next().is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":210912,"byte_end":210947,"line_start":1264,"line_end":1264,"column_start":2,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":210949,"byte_end":210956,"line_start":1265,"line_end":1265,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":210958,"byte_end":210961,"line_start":1266,"line_end":1266,"column_start":2,"column_end":5}},{"value":"/ If two matched positions are directly adjacent, an empty slice will be","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":210963,"byte_end":211037,"line_start":1267,"line_end":1267,"column_start":2,"column_end":76}},{"value":"/ present between them.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":211039,"byte_end":211064,"line_start":1268,"line_end":1268,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":211066,"byte_end":211069,"line_start":1269,"line_end":1269,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":211071,"byte_end":211082,"line_start":1270,"line_end":1270,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":211084,"byte_end":211113,"line_start":1271,"line_end":1271,"column_start":2,"column_end":31}},{"value":"/ let data = 0b001_100_00u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":211115,"byte_end":211145,"line_start":1272,"line_end":1272,"column_start":2,"column_end":32}},{"value":"/ let bits = data.bits::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":211147,"byte_end":211182,"line_start":1273,"line_end":1273,"column_start":2,"column_end":37}},{"value":"/ let mut iter = bits.split(|pos, bit| *bit);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":211184,"byte_end":211231,"line_start":1274,"line_end":1274,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":211233,"byte_end":211236,"line_start":1275,"line_end":1275,"column_start":2,"column_end":5}},{"value":"/ assert_eq!(iter.next().unwrap(), &bits[0 .. 2]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":211238,"byte_end":211290,"line_start":1276,"line_end":1276,"column_start":2,"column_end":54}},{"value":"/ assert_eq!(iter.next().unwrap(), BitSlice::<Local, usize>::empty());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":211292,"byte_end":211364,"line_start":1277,"line_end":1277,"column_start":2,"column_end":74}},{"value":"/ assert_eq!(iter.next().unwrap(), &bits[4 .. 8]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":211366,"byte_end":211418,"line_start":1278,"line_end":1278,"column_start":2,"column_end":54}},{"value":"/ assert!(iter.next().is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":211420,"byte_end":211455,"line_start":1279,"line_end":1279,"column_start":2,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":211457,"byte_end":211464,"line_start":1280,"line_end":1280,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":211466,"byte_end":211469,"line_start":1281,"line_end":1281,"column_start":2,"column_end":5}},{"value":"/ [`slice::split`]: https://doc.rust-lang.org/stable/std/primitive.slice.html#method.split","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":211471,"byte_end":211563,"line_start":1282,"line_end":1282,"column_start":2,"column_end":94}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":211565,"byte_end":211574,"line_start":1283,"line_end":1283,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":816},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":212752,"byte_end":212761,"line_start":1321,"line_end":1321,"column_start":9,"column_end":18},"name":"split_mut","qualname":"<BitSlice<O, T>>::split_mut","value":"fn split_mut<F, '_>(&'_ mut Self, F) -> SplitMut where\nF: for<'_> FnMut(usize, &'_ bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over mutable subslices separated by indexed bits\n that satisfy the predicate `func`tion. The matched position is not\n contained in the subslices.","sig":null,"attributes":[{"value":"/ Returns an iterator over mutable subslices separated by indexed bits","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":211733,"byte_end":211805,"line_start":1293,"line_end":1293,"column_start":2,"column_end":74}},{"value":"/ that satisfy the predicate `func`tion. The matched position is not","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":211807,"byte_end":211877,"line_start":1294,"line_end":1294,"column_start":2,"column_end":72}},{"value":"/ contained in the subslices.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":211879,"byte_end":211910,"line_start":1295,"line_end":1295,"column_start":2,"column_end":33}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":211912,"byte_end":211915,"line_start":1296,"line_end":1296,"column_start":2,"column_end":5}},{"value":"/ # API Differences","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":211917,"byte_end":211938,"line_start":1297,"line_end":1297,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":211940,"byte_end":211943,"line_start":1298,"line_end":1298,"column_start":2,"column_end":5}},{"value":"/ The [`slice::split_mut`] method takes a predicate function with","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":211945,"byte_end":212012,"line_start":1299,"line_end":1299,"column_start":2,"column_end":69}},{"value":"/ signature `(&T) -> bool`, whereas this method’s predicate function has","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":212014,"byte_end":212090,"line_start":1300,"line_end":1300,"column_start":2,"column_end":76}},{"value":"/ signature `(usize, &T) -> bool`. This difference is in place because","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":212092,"byte_end":212164,"line_start":1301,"line_end":1301,"column_start":2,"column_end":74}},{"value":"/ `BitSlice` by definition has only one bit of information per slice item,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":212166,"byte_end":212242,"line_start":1302,"line_end":1302,"column_start":2,"column_end":78}},{"value":"/ and including the index allows the callback function to make more","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":212244,"byte_end":212313,"line_start":1303,"line_end":1303,"column_start":2,"column_end":71}},{"value":"/ informed choices.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":212315,"byte_end":212336,"line_start":1304,"line_end":1304,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":212338,"byte_end":212341,"line_start":1305,"line_end":1305,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":212343,"byte_end":212357,"line_start":1306,"line_end":1306,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":212359,"byte_end":212362,"line_start":1307,"line_end":1307,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":212364,"byte_end":212375,"line_start":1308,"line_end":1308,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":212377,"byte_end":212406,"line_start":1309,"line_end":1309,"column_start":2,"column_end":31}},{"value":"/ let mut data = 0b001_000_10u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":212408,"byte_end":212442,"line_start":1310,"line_end":1310,"column_start":2,"column_end":36}},{"value":"/ let bits = data.bits_mut::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":212444,"byte_end":212483,"line_start":1311,"line_end":1311,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":212485,"byte_end":212488,"line_start":1312,"line_end":1312,"column_start":2,"column_end":5}},{"value":"/ for group in bits.split_mut(|pos, bit| *bit) {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":212490,"byte_end":212540,"line_start":1313,"line_end":1313,"column_start":2,"column_end":52}},{"value":"/     *group.at(0) = true;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":212542,"byte_end":212570,"line_start":1314,"line_end":1314,"column_start":2,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":212572,"byte_end":212577,"line_start":1315,"line_end":1315,"column_start":2,"column_end":7}},{"value":"/ assert_eq!(data, 0b101_1001_1u8);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":212579,"byte_end":212616,"line_start":1316,"line_end":1316,"column_start":2,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":212618,"byte_end":212625,"line_start":1317,"line_end":1317,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":212627,"byte_end":212630,"line_start":1318,"line_end":1318,"column_start":2,"column_end":5}},{"value":"/ [`slice::split_mut`]: https://doc.rust-lang.org/stable/std/primitive.slice.html#method.split_mut","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":212632,"byte_end":212732,"line_start":1319,"line_end":1319,"column_start":2,"column_end":102}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":212734,"byte_end":212743,"line_start":1320,"line_end":1320,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":818},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":214600,"byte_end":214606,"line_start":1374,"line_end":1374,"column_start":9,"column_end":15},"name":"rsplit","qualname":"<BitSlice<O, T>>::rsplit","value":"fn rsplit<F, '_>(&'_ Self, F) -> RSplit where\nF: for<'_> FnMut(usize, &'_ bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over subslices separated by indexed bits that\n satisfy a predicate `func`tion, starting at the end of the slice and\n working backwards. The matched position is not contained in the\n subslices.","sig":null,"attributes":[{"value":"/ Returns an iterator over subslices separated by indexed bits that","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":212916,"byte_end":212985,"line_start":1330,"line_end":1330,"column_start":2,"column_end":71}},{"value":"/ satisfy a predicate `func`tion, starting at the end of the slice and","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":212987,"byte_end":213059,"line_start":1331,"line_end":1331,"column_start":2,"column_end":74}},{"value":"/ working backwards. The matched position is not contained in the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":213061,"byte_end":213128,"line_start":1332,"line_end":1332,"column_start":2,"column_end":69}},{"value":"/ subslices.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":213130,"byte_end":213144,"line_start":1333,"line_end":1333,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":213146,"byte_end":213149,"line_start":1334,"line_end":1334,"column_start":2,"column_end":5}},{"value":"/ # API Differences","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":213151,"byte_end":213172,"line_start":1335,"line_end":1335,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":213174,"byte_end":213177,"line_start":1336,"line_end":1336,"column_start":2,"column_end":5}},{"value":"/ The [`slice::rsplit`] method takes a predicate function with","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":213179,"byte_end":213243,"line_start":1337,"line_end":1337,"column_start":2,"column_end":66}},{"value":"/ signature `(&T) -> bool`, whereas this method’s predicate function has","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":213245,"byte_end":213321,"line_start":1338,"line_end":1338,"column_start":2,"column_end":76}},{"value":"/ signature `(usize, &T) -> bool`. This difference is in place because","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":213323,"byte_end":213395,"line_start":1339,"line_end":1339,"column_start":2,"column_end":74}},{"value":"/ `BitSlice` by definition has only one bit of information per slice item,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":213397,"byte_end":213473,"line_start":1340,"line_end":1340,"column_start":2,"column_end":78}},{"value":"/ and including the index allows the callback function to make more","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":213475,"byte_end":213544,"line_start":1341,"line_end":1341,"column_start":2,"column_end":71}},{"value":"/ informed choices.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":213546,"byte_end":213567,"line_start":1342,"line_end":1342,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":213569,"byte_end":213572,"line_start":1343,"line_end":1343,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":213574,"byte_end":213588,"line_start":1344,"line_end":1344,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":213590,"byte_end":213593,"line_start":1345,"line_end":1345,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":213595,"byte_end":213606,"line_start":1346,"line_end":1346,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":213608,"byte_end":213637,"line_start":1347,"line_end":1347,"column_start":2,"column_end":31}},{"value":"/ let data = 0b0001_0000u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":213639,"byte_end":213668,"line_start":1348,"line_end":1348,"column_start":2,"column_end":31}},{"value":"/ let bits = data.bits::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":213670,"byte_end":213705,"line_start":1349,"line_end":1349,"column_start":2,"column_end":37}},{"value":"/ let mut iter = bits.rsplit(|pos, bit| *bit);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":213707,"byte_end":213755,"line_start":1350,"line_end":1350,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":213757,"byte_end":213760,"line_start":1351,"line_end":1351,"column_start":2,"column_end":5}},{"value":"/ assert_eq!(iter.next().unwrap(), &bits[4 .. 8]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":213762,"byte_end":213814,"line_start":1352,"line_end":1352,"column_start":2,"column_end":54}},{"value":"/ assert_eq!(iter.next().unwrap(), &bits[0 .. 3]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":213816,"byte_end":213868,"line_start":1353,"line_end":1353,"column_start":2,"column_end":54}},{"value":"/ assert!(iter.next().is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":213870,"byte_end":213905,"line_start":1354,"line_end":1354,"column_start":2,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":213907,"byte_end":213914,"line_start":1355,"line_end":1355,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":213916,"byte_end":213919,"line_start":1356,"line_end":1356,"column_start":2,"column_end":5}},{"value":"/ As with `split()`, if the first or last position is matched, an empty","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":213921,"byte_end":213994,"line_start":1357,"line_end":1357,"column_start":2,"column_end":75}},{"value":"/ slice will be the first (or last) item returned by the iterator.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":213996,"byte_end":214064,"line_start":1358,"line_end":1358,"column_start":2,"column_end":70}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":214066,"byte_end":214069,"line_start":1359,"line_end":1359,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":214071,"byte_end":214082,"line_start":1360,"line_end":1360,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":214084,"byte_end":214113,"line_start":1361,"line_end":1361,"column_start":2,"column_end":31}},{"value":"/ let data = 0b1001_0001u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":214115,"byte_end":214144,"line_start":1362,"line_end":1362,"column_start":2,"column_end":31}},{"value":"/ let bits = data.bits::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":214146,"byte_end":214181,"line_start":1363,"line_end":1363,"column_start":2,"column_end":37}},{"value":"/ let mut iter = bits.rsplit(|pos, bit| *bit);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":214183,"byte_end":214231,"line_start":1364,"line_end":1364,"column_start":2,"column_end":50}},{"value":"/ assert!(iter.next().unwrap().is_empty());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":214233,"byte_end":214278,"line_start":1365,"line_end":1365,"column_start":2,"column_end":47}},{"value":"/ assert_eq!(iter.next().unwrap(), &bits[4 .. 7]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":214280,"byte_end":214332,"line_start":1366,"line_end":1366,"column_start":2,"column_end":54}},{"value":"/ assert_eq!(iter.next().unwrap(), &bits[1 .. 3]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":214334,"byte_end":214386,"line_start":1367,"line_end":1367,"column_start":2,"column_end":54}},{"value":"/ assert!(iter.next().unwrap().is_empty());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":214388,"byte_end":214433,"line_start":1368,"line_end":1368,"column_start":2,"column_end":47}},{"value":"/ assert!(iter.next().is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":214435,"byte_end":214470,"line_start":1369,"line_end":1369,"column_start":2,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":214472,"byte_end":214479,"line_start":1370,"line_end":1370,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":214481,"byte_end":214484,"line_start":1371,"line_end":1371,"column_start":2,"column_end":5}},{"value":"/ [`slice::rsplit`]: https://doc.rust-lang.org/stable/std/primitive.slice.html#method.rsplit","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":214486,"byte_end":214580,"line_start":1372,"line_end":1372,"column_start":2,"column_end":96}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":214582,"byte_end":214591,"line_start":1373,"line_end":1373,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":820},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":215862,"byte_end":215872,"line_start":1412,"line_end":1412,"column_start":9,"column_end":19},"name":"rsplit_mut","qualname":"<BitSlice<O, T>>::rsplit_mut","value":"fn rsplit_mut<F, '_>(&'_ mut Self, F) -> RSplitMut where\nF: for<'_> FnMut(usize, &'_ bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over mutable subslices separated by indexed bits\n that satisfy a predicate `func`tion, starting at the end of the slice\n and working backwards. The matched position is not contained in the\n subslices.","sig":null,"attributes":[{"value":"/ Returns an iterator over mutable subslices separated by indexed bits","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":214737,"byte_end":214809,"line_start":1381,"line_end":1381,"column_start":2,"column_end":74}},{"value":"/ that satisfy a predicate `func`tion, starting at the end of the slice","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":214811,"byte_end":214884,"line_start":1382,"line_end":1382,"column_start":2,"column_end":75}},{"value":"/ and working backwards. The matched position is not contained in the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":214886,"byte_end":214957,"line_start":1383,"line_end":1383,"column_start":2,"column_end":73}},{"value":"/ subslices.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":214959,"byte_end":214973,"line_start":1384,"line_end":1384,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":214975,"byte_end":214978,"line_start":1385,"line_end":1385,"column_start":2,"column_end":5}},{"value":"/ # API Differences","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":214980,"byte_end":215001,"line_start":1386,"line_end":1386,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":215003,"byte_end":215006,"line_start":1387,"line_end":1387,"column_start":2,"column_end":5}},{"value":"/ The [`slice::rsplit_mut`] method takes a predicate function with","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":215008,"byte_end":215076,"line_start":1388,"line_end":1388,"column_start":2,"column_end":70}},{"value":"/ signature `(&T) -> bool`, whereas this method’s predicate function has","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":215078,"byte_end":215154,"line_start":1389,"line_end":1389,"column_start":2,"column_end":76}},{"value":"/ signature `(usize, &T) -> bool`. This difference is in place because","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":215156,"byte_end":215228,"line_start":1390,"line_end":1390,"column_start":2,"column_end":74}},{"value":"/ `BitSlice` by definition has only one bit of information per slice item,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":215230,"byte_end":215306,"line_start":1391,"line_end":1391,"column_start":2,"column_end":78}},{"value":"/ and including the index allows the callback function to make more","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":215308,"byte_end":215377,"line_start":1392,"line_end":1392,"column_start":2,"column_end":71}},{"value":"/ informed choices.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":215379,"byte_end":215400,"line_start":1393,"line_end":1393,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":215402,"byte_end":215405,"line_start":1394,"line_end":1394,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":215407,"byte_end":215421,"line_start":1395,"line_end":1395,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":215423,"byte_end":215426,"line_start":1396,"line_end":1396,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":215428,"byte_end":215439,"line_start":1397,"line_end":1397,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":215441,"byte_end":215470,"line_start":1398,"line_end":1398,"column_start":2,"column_end":31}},{"value":"/ let mut data = 0u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":215472,"byte_end":215495,"line_start":1399,"line_end":1399,"column_start":2,"column_end":25}},{"value":"/ let bits = data.bits_mut::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":215497,"byte_end":215536,"line_start":1400,"line_end":1400,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":215538,"byte_end":215541,"line_start":1401,"line_end":1401,"column_start":2,"column_end":5}},{"value":"/ let mut count = 0u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":215543,"byte_end":215567,"line_start":1402,"line_end":1402,"column_start":2,"column_end":26}},{"value":"/ for group in bits.rsplit_mut(|pos, bit| pos % 3 == 2) {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":215569,"byte_end":215628,"line_start":1403,"line_end":1403,"column_start":2,"column_end":61}},{"value":"/     count += 1;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":215630,"byte_end":215649,"line_start":1404,"line_end":1404,"column_start":2,"column_end":21}},{"value":"/     group.store(count);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":215651,"byte_end":215678,"line_start":1405,"line_end":1405,"column_start":2,"column_end":29}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":215680,"byte_end":215685,"line_start":1406,"line_end":1406,"column_start":2,"column_end":7}},{"value":"/ assert_eq!(data, 0b11_0_10_0_01);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":215687,"byte_end":215724,"line_start":1407,"line_end":1407,"column_start":2,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":215726,"byte_end":215733,"line_start":1408,"line_end":1408,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":215735,"byte_end":215738,"line_start":1409,"line_end":1409,"column_start":2,"column_end":5}},{"value":"/ [`slice::rsplit_mut`]: https://doc.rust-lang.org/stable/std/primitive.slice.html#method.rsplit_mut","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":215740,"byte_end":215842,"line_start":1410,"line_end":1410,"column_start":2,"column_end":104}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":215844,"byte_end":215853,"line_start":1411,"line_end":1411,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":822},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":217200,"byte_end":217206,"line_start":1453,"line_end":1453,"column_start":9,"column_end":15},"name":"splitn","qualname":"<BitSlice<O, T>>::splitn","value":"fn splitn<F, '_>(&'_ Self, usize, F) -> SplitN where\nF: for<'_> FnMut(usize, &'_ bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over subslices separated by indexed bits that\n satisfy the predicate `func`tion, limited to returning at most `n`\n items. The matched position is not contained in the subslices.","sig":null,"attributes":[{"value":"/ Returns an iterator over subslices separated by indexed bits that","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":216017,"byte_end":216086,"line_start":1419,"line_end":1419,"column_start":2,"column_end":71}},{"value":"/ satisfy the predicate `func`tion, limited to returning at most `n`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":216088,"byte_end":216158,"line_start":1420,"line_end":1420,"column_start":2,"column_end":72}},{"value":"/ items. The matched position is not contained in the subslices.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":216160,"byte_end":216226,"line_start":1421,"line_end":1421,"column_start":2,"column_end":68}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":216228,"byte_end":216231,"line_start":1422,"line_end":1422,"column_start":2,"column_end":5}},{"value":"/ The last element returned, if any, will contain the remainder of the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":216233,"byte_end":216305,"line_start":1423,"line_end":1423,"column_start":2,"column_end":74}},{"value":"/ slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":216307,"byte_end":216317,"line_start":1424,"line_end":1424,"column_start":2,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":216319,"byte_end":216322,"line_start":1425,"line_end":1425,"column_start":2,"column_end":5}},{"value":"/ # API Differences","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":216324,"byte_end":216345,"line_start":1426,"line_end":1426,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":216347,"byte_end":216350,"line_start":1427,"line_end":1427,"column_start":2,"column_end":5}},{"value":"/ The [`slice::splitn`] method takes a predicate function with","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":216352,"byte_end":216416,"line_start":1428,"line_end":1428,"column_start":2,"column_end":66}},{"value":"/ signature `(&T) -> bool`, whereas this method’s predicate function has","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":216418,"byte_end":216494,"line_start":1429,"line_end":1429,"column_start":2,"column_end":76}},{"value":"/ signature `(usize, &T) -> bool`. This difference is in place because","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":216496,"byte_end":216568,"line_start":1430,"line_end":1430,"column_start":2,"column_end":74}},{"value":"/ `BitSlice` by definition has only one bit of information per slice item,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":216570,"byte_end":216646,"line_start":1431,"line_end":1431,"column_start":2,"column_end":78}},{"value":"/ and including the index allows the callback function to make more","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":216648,"byte_end":216717,"line_start":1432,"line_end":1432,"column_start":2,"column_end":71}},{"value":"/ informed choices.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":216719,"byte_end":216740,"line_start":1433,"line_end":1433,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":216742,"byte_end":216745,"line_start":1434,"line_end":1434,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":216747,"byte_end":216761,"line_start":1435,"line_end":1435,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":216763,"byte_end":216766,"line_start":1436,"line_end":1436,"column_start":2,"column_end":5}},{"value":"/ Print the slice split once by indices divisible by 3:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":216768,"byte_end":216825,"line_start":1437,"line_end":1437,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":216827,"byte_end":216830,"line_start":1438,"line_end":1438,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":216832,"byte_end":216843,"line_start":1439,"line_end":1439,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":216845,"byte_end":216874,"line_start":1440,"line_end":1440,"column_start":2,"column_end":31}},{"value":"/ let data = 0xA5u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":216876,"byte_end":216898,"line_start":1441,"line_end":1441,"column_start":2,"column_end":24}},{"value":"/ let bits = data.bits::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":216900,"byte_end":216935,"line_start":1442,"line_end":1442,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":216937,"byte_end":216940,"line_start":1443,"line_end":1443,"column_start":2,"column_end":5}},{"value":"/ for group in bits.splitn(2, |pos, bit| pos % 3 == 2) {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":216942,"byte_end":217000,"line_start":1444,"line_end":1444,"column_start":2,"column_end":60}},{"value":"/     println!(\"{}\", group);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":217002,"byte_end":217032,"line_start":1445,"line_end":1445,"column_start":2,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":217034,"byte_end":217039,"line_start":1446,"line_end":1446,"column_start":2,"column_end":7}},{"value":"/ //  [10]","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":217041,"byte_end":217053,"line_start":1447,"line_end":1447,"column_start":2,"column_end":14}},{"value":"/ //  [00101]","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":217055,"byte_end":217070,"line_start":1448,"line_end":1448,"column_start":2,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":217072,"byte_end":217079,"line_start":1449,"line_end":1449,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":217081,"byte_end":217084,"line_start":1450,"line_end":1450,"column_start":2,"column_end":5}},{"value":"/ [`slice::splitn`]: https://doc.rust-lang.org/stable/std/primitive.slice.html#method.splitn","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":217086,"byte_end":217180,"line_start":1451,"line_end":1451,"column_start":2,"column_end":96}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":217182,"byte_end":217191,"line_start":1452,"line_end":1452,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":824},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":218597,"byte_end":218607,"line_start":1496,"line_end":1496,"column_start":9,"column_end":19},"name":"splitn_mut","qualname":"<BitSlice<O, T>>::splitn_mut","value":"fn splitn_mut<F, '_>(&'_ mut Self, usize, F) -> SplitNMut where\nF: for<'_> FnMut(usize, &'_ bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over mutable subslices separated by indexed bits\n that satisfy the predicate `func`tion, limited to returning at most `n`\n items. The matched position is not contained in the subslices.","sig":null,"attributes":[{"value":"/ Returns an iterator over mutable subslices separated by indexed bits","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":217393,"byte_end":217465,"line_start":1463,"line_end":1463,"column_start":2,"column_end":74}},{"value":"/ that satisfy the predicate `func`tion, limited to returning at most `n`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":217467,"byte_end":217542,"line_start":1464,"line_end":1464,"column_start":2,"column_end":77}},{"value":"/ items. The matched position is not contained in the subslices.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":217544,"byte_end":217610,"line_start":1465,"line_end":1465,"column_start":2,"column_end":68}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":217612,"byte_end":217615,"line_start":1466,"line_end":1466,"column_start":2,"column_end":5}},{"value":"/ The last element returned, if any, will contain the remainder of the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":217617,"byte_end":217689,"line_start":1467,"line_end":1467,"column_start":2,"column_end":74}},{"value":"/ slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":217691,"byte_end":217701,"line_start":1468,"line_end":1468,"column_start":2,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":217703,"byte_end":217706,"line_start":1469,"line_end":1469,"column_start":2,"column_end":5}},{"value":"/ # API Differences","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":217708,"byte_end":217729,"line_start":1470,"line_end":1470,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":217731,"byte_end":217734,"line_start":1471,"line_end":1471,"column_start":2,"column_end":5}},{"value":"/ The [`slice::splitn_mut`] method takes a predicate function with","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":217736,"byte_end":217804,"line_start":1472,"line_end":1472,"column_start":2,"column_end":70}},{"value":"/ signature `(&T) -> bool`, whereas this method’s predicate function has","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":217806,"byte_end":217882,"line_start":1473,"line_end":1473,"column_start":2,"column_end":76}},{"value":"/ signature `(usize, &T) -> bool`. This difference is in place because","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":217884,"byte_end":217956,"line_start":1474,"line_end":1474,"column_start":2,"column_end":74}},{"value":"/ `BitSlice` by definition has only one bit of information per slice item,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":217958,"byte_end":218034,"line_start":1475,"line_end":1475,"column_start":2,"column_end":78}},{"value":"/ and including the index allows the callback function to make more","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":218036,"byte_end":218105,"line_start":1476,"line_end":1476,"column_start":2,"column_end":71}},{"value":"/ informed choices.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":218107,"byte_end":218128,"line_start":1477,"line_end":1477,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":218130,"byte_end":218133,"line_start":1478,"line_end":1478,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":218135,"byte_end":218149,"line_start":1479,"line_end":1479,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":218151,"byte_end":218154,"line_start":1480,"line_end":1480,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":218156,"byte_end":218167,"line_start":1481,"line_end":1481,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":218169,"byte_end":218198,"line_start":1482,"line_end":1482,"column_start":2,"column_end":31}},{"value":"/ let mut data = 0u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":218200,"byte_end":218223,"line_start":1483,"line_end":1483,"column_start":2,"column_end":25}},{"value":"/ let bits = data.bits_mut::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":218225,"byte_end":218264,"line_start":1484,"line_end":1484,"column_start":2,"column_end":41}},{"value":"/ let mut counter = 0u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":218266,"byte_end":218292,"line_start":1485,"line_end":1485,"column_start":2,"column_end":28}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":218294,"byte_end":218297,"line_start":1486,"line_end":1486,"column_start":2,"column_end":5}},{"value":"/ for group in bits.splitn_mut(2, |pos, bit| pos % 4 == 3) {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":218299,"byte_end":218361,"line_start":1487,"line_end":1487,"column_start":2,"column_end":64}},{"value":"/     counter += 1;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":218363,"byte_end":218384,"line_start":1488,"line_end":1488,"column_start":2,"column_end":23}},{"value":"/     group.store(counter);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":218386,"byte_end":218415,"line_start":1489,"line_end":1489,"column_start":2,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":218417,"byte_end":218422,"line_start":1490,"line_end":1490,"column_start":2,"column_end":7}},{"value":"/ assert_eq!(data, 0b001_0_0010);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":218424,"byte_end":218459,"line_start":1491,"line_end":1491,"column_start":2,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":218461,"byte_end":218468,"line_start":1492,"line_end":1492,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":218470,"byte_end":218473,"line_start":1493,"line_end":1493,"column_start":2,"column_end":5}},{"value":"/ [`slice::splitn_mut`]: https://doc.rust-lang.org/stable/std/primitive.slice.html#method.splitn_mut","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":218475,"byte_end":218577,"line_start":1494,"line_end":1494,"column_start":2,"column_end":104}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":218579,"byte_end":218588,"line_start":1495,"line_end":1495,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":220084,"byte_end":220091,"line_start":1542,"line_end":1542,"column_start":9,"column_end":16},"name":"rsplitn","qualname":"<BitSlice<O, T>>::rsplitn","value":"fn rsplitn<F, '_>(&'_ Self, usize, F) -> RSplitN where\nF: for<'_> FnMut(usize, &'_ bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over subslices separated by indexed bits that\n satisfy a predicate `func`tion, limited to returning at most `n` items.\n This starts at the end of the slice and works backwards. The matched\n position is not contained in the subslices.","sig":null,"attributes":[{"value":"/ Returns an iterator over subslices separated by indexed bits that","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":218808,"byte_end":218877,"line_start":1506,"line_end":1506,"column_start":2,"column_end":71}},{"value":"/ satisfy a predicate `func`tion, limited to returning at most `n` items.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":218879,"byte_end":218954,"line_start":1507,"line_end":1507,"column_start":2,"column_end":77}},{"value":"/ This starts at the end of the slice and works backwards. The matched","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":218956,"byte_end":219028,"line_start":1508,"line_end":1508,"column_start":2,"column_end":74}},{"value":"/ position is not contained in the subslices.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":219030,"byte_end":219077,"line_start":1509,"line_end":1509,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":219079,"byte_end":219082,"line_start":1510,"line_end":1510,"column_start":2,"column_end":5}},{"value":"/ The last element returned, if any, will contain the remainder of the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":219084,"byte_end":219156,"line_start":1511,"line_end":1511,"column_start":2,"column_end":74}},{"value":"/ slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":219158,"byte_end":219168,"line_start":1512,"line_end":1512,"column_start":2,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":219170,"byte_end":219173,"line_start":1513,"line_end":1513,"column_start":2,"column_end":5}},{"value":"/ # API Differences","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":219175,"byte_end":219196,"line_start":1514,"line_end":1514,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":219198,"byte_end":219201,"line_start":1515,"line_end":1515,"column_start":2,"column_end":5}},{"value":"/ The [`slice::rsplitn`] method takes a predicate function with","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":219203,"byte_end":219268,"line_start":1516,"line_end":1516,"column_start":2,"column_end":67}},{"value":"/ signature `(&T) -> bool`, whereas this method’s predicate function has","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":219270,"byte_end":219346,"line_start":1517,"line_end":1517,"column_start":2,"column_end":76}},{"value":"/ signature `(usize, &T) -> bool`. This difference is in place because","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":219348,"byte_end":219420,"line_start":1518,"line_end":1518,"column_start":2,"column_end":74}},{"value":"/ `BitSlice` by definition has only one bit of information per slice item,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":219422,"byte_end":219498,"line_start":1519,"line_end":1519,"column_start":2,"column_end":78}},{"value":"/ and including the index allows the callback function to make more","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":219500,"byte_end":219569,"line_start":1520,"line_end":1520,"column_start":2,"column_end":71}},{"value":"/ informed choices.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":219571,"byte_end":219592,"line_start":1521,"line_end":1521,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":219594,"byte_end":219597,"line_start":1522,"line_end":1522,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":219599,"byte_end":219613,"line_start":1523,"line_end":1523,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":219615,"byte_end":219618,"line_start":1524,"line_end":1524,"column_start":2,"column_end":5}},{"value":"/ Print the slice split once, starting from the end, by indices divisible","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":219620,"byte_end":219695,"line_start":1525,"line_end":1525,"column_start":2,"column_end":77}},{"value":"/ by 3:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":219697,"byte_end":219706,"line_start":1526,"line_end":1526,"column_start":2,"column_end":11}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":219708,"byte_end":219711,"line_start":1527,"line_end":1527,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":219713,"byte_end":219724,"line_start":1528,"line_end":1528,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":219726,"byte_end":219755,"line_start":1529,"line_end":1529,"column_start":2,"column_end":31}},{"value":"/ let data = 0xA5u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":219757,"byte_end":219779,"line_start":1530,"line_end":1530,"column_start":2,"column_end":24}},{"value":"/ let bits = data.bits::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":219781,"byte_end":219816,"line_start":1531,"line_end":1531,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":219818,"byte_end":219821,"line_start":1532,"line_end":1532,"column_start":2,"column_end":5}},{"value":"/ for group in bits.rsplitn(2, |pos, bit| pos % 3 == 2) {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":219823,"byte_end":219882,"line_start":1533,"line_end":1533,"column_start":2,"column_end":61}},{"value":"/     println!(\"{}\", group);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":219884,"byte_end":219914,"line_start":1534,"line_end":1534,"column_start":2,"column_end":32}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":219916,"byte_end":219921,"line_start":1535,"line_end":1535,"column_start":2,"column_end":7}},{"value":"/ //  [01]","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":219923,"byte_end":219935,"line_start":1536,"line_end":1536,"column_start":2,"column_end":14}},{"value":"/ //  [10100]","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":219937,"byte_end":219952,"line_start":1537,"line_end":1537,"column_start":2,"column_end":17}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":219954,"byte_end":219961,"line_start":1538,"line_end":1538,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":219963,"byte_end":219966,"line_start":1539,"line_end":1539,"column_start":2,"column_end":5}},{"value":"/ [`slice::rsplitn`]: https://doc.rust-lang.org/stable/std/primitive.slice.html#method.rsplitn","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":219968,"byte_end":220064,"line_start":1540,"line_end":1540,"column_start":2,"column_end":98}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":220066,"byte_end":220075,"line_start":1541,"line_end":1541,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":828},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":221549,"byte_end":221560,"line_start":1586,"line_end":1586,"column_start":9,"column_end":20},"name":"rsplitn_mut","qualname":"<BitSlice<O, T>>::rsplitn_mut","value":"fn rsplitn_mut<F, '_>(&'_ mut Self, usize, F) -> RSplitNMut where\nF: for<'_> FnMut(usize, &'_ bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over mutable subslices separated by indexed bits\n that satisfy a predicate `func`tion, limited to returning at most `n`\n items. This starts at the end of the slice and works backwards. The\n matched position is not contained in the subslices.","sig":null,"attributes":[{"value":"/ Returns an iterator over mutable subslices separated by indexed bits","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":220281,"byte_end":220353,"line_start":1552,"line_end":1552,"column_start":2,"column_end":74}},{"value":"/ that satisfy a predicate `func`tion, limited to returning at most `n`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":220355,"byte_end":220428,"line_start":1553,"line_end":1553,"column_start":2,"column_end":75}},{"value":"/ items. This starts at the end of the slice and works backwards. The","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":220430,"byte_end":220501,"line_start":1554,"line_end":1554,"column_start":2,"column_end":73}},{"value":"/ matched position is not contained in the subslices.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":220503,"byte_end":220558,"line_start":1555,"line_end":1555,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":220560,"byte_end":220563,"line_start":1556,"line_end":1556,"column_start":2,"column_end":5}},{"value":"/ The last element returned, if any, will contain the remainder of the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":220565,"byte_end":220637,"line_start":1557,"line_end":1557,"column_start":2,"column_end":74}},{"value":"/ slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":220639,"byte_end":220649,"line_start":1558,"line_end":1558,"column_start":2,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":220651,"byte_end":220654,"line_start":1559,"line_end":1559,"column_start":2,"column_end":5}},{"value":"/ # API Differences","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":220656,"byte_end":220677,"line_start":1560,"line_end":1560,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":220679,"byte_end":220682,"line_start":1561,"line_end":1561,"column_start":2,"column_end":5}},{"value":"/ The [`slice::rsplitn_mut`] method takes a predicate function with","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":220684,"byte_end":220753,"line_start":1562,"line_end":1562,"column_start":2,"column_end":71}},{"value":"/ signature `(&T) -> bool`, whereas this method’s predicate function has","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":220755,"byte_end":220831,"line_start":1563,"line_end":1563,"column_start":2,"column_end":76}},{"value":"/ signature `(usize, &T) -> bool`. This difference is in place because","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":220833,"byte_end":220905,"line_start":1564,"line_end":1564,"column_start":2,"column_end":74}},{"value":"/ `BitSlice` by definition has only one bit of information per slice item,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":220907,"byte_end":220983,"line_start":1565,"line_end":1565,"column_start":2,"column_end":78}},{"value":"/ and including the index allows the callback function to make more","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":220985,"byte_end":221054,"line_start":1566,"line_end":1566,"column_start":2,"column_end":71}},{"value":"/ informed choices.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":221056,"byte_end":221077,"line_start":1567,"line_end":1567,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":221079,"byte_end":221082,"line_start":1568,"line_end":1568,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":221084,"byte_end":221098,"line_start":1569,"line_end":1569,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":221100,"byte_end":221103,"line_start":1570,"line_end":1570,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":221105,"byte_end":221116,"line_start":1571,"line_end":1571,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":221118,"byte_end":221147,"line_start":1572,"line_end":1572,"column_start":2,"column_end":31}},{"value":"/ let mut data = 0u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":221149,"byte_end":221172,"line_start":1573,"line_end":1573,"column_start":2,"column_end":25}},{"value":"/ let bits = data.bits_mut::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":221174,"byte_end":221213,"line_start":1574,"line_end":1574,"column_start":2,"column_end":41}},{"value":"/ let mut counter = 0u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":221215,"byte_end":221241,"line_start":1575,"line_end":1575,"column_start":2,"column_end":28}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":221243,"byte_end":221246,"line_start":1576,"line_end":1576,"column_start":2,"column_end":5}},{"value":"/ for group in bits.rsplitn_mut(2, |pos, bit| pos % 3 == 2) {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":221248,"byte_end":221311,"line_start":1577,"line_end":1577,"column_start":2,"column_end":65}},{"value":"/     counter += 1;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":221313,"byte_end":221334,"line_start":1578,"line_end":1578,"column_start":2,"column_end":23}},{"value":"/     group.store(counter);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":221336,"byte_end":221365,"line_start":1579,"line_end":1579,"column_start":2,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":221367,"byte_end":221372,"line_start":1580,"line_end":1580,"column_start":2,"column_end":7}},{"value":"/ assert_eq!(data, 0b00010_0_01);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":221374,"byte_end":221409,"line_start":1581,"line_end":1581,"column_start":2,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":221411,"byte_end":221418,"line_start":1582,"line_end":1582,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":221420,"byte_end":221423,"line_start":1583,"line_end":1583,"column_start":2,"column_end":5}},{"value":"/ [`slice::rsplitn_mut`]: https://doc.rust-lang.org/stable/std/primitive.slice.html#method.rsplitn_mut","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":221425,"byte_end":221529,"line_start":1584,"line_end":1584,"column_start":2,"column_end":106}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":221531,"byte_end":221540,"line_start":1585,"line_end":1585,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":830},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":222652,"byte_end":222660,"line_start":1620,"line_end":1620,"column_start":9,"column_end":17},"name":"contains","qualname":"<BitSlice<O, T>>::contains","value":"fn contains<P, U, '_, '_>(&'_ Self, &'_ BitSlice<P, U>) -> bool where\nP: BitOrder, U: BitStore","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the slice contains a region that matches the given\n span.","sig":null,"attributes":[{"value":"/ Returns `true` if the slice contains a region that matches the given","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":221764,"byte_end":221836,"line_start":1596,"line_end":1596,"column_start":2,"column_end":74}},{"value":"/ span.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":221838,"byte_end":221847,"line_start":1597,"line_end":1597,"column_start":2,"column_end":11}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":221849,"byte_end":221852,"line_start":1598,"line_end":1598,"column_start":2,"column_end":5}},{"value":"/ # API Differences","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":221854,"byte_end":221875,"line_start":1599,"line_end":1599,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":221877,"byte_end":221880,"line_start":1600,"line_end":1600,"column_start":2,"column_end":5}},{"value":"/ The [`slice::contains`] method tests for a single slice element.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":221882,"byte_end":221950,"line_start":1601,"line_end":1601,"column_start":2,"column_end":70}},{"value":"/ Because this is a slice of single bits, testing for the presence of one","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":221952,"byte_end":222027,"line_start":1602,"line_end":1602,"column_start":2,"column_end":77}},{"value":"/ `bool` value is not very informative. This instead searches for a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":222029,"byte_end":222098,"line_start":1603,"line_end":1603,"column_start":2,"column_end":71}},{"value":"/ subslice, which may be one or more bits.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":222100,"byte_end":222144,"line_start":1604,"line_end":1604,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":222146,"byte_end":222149,"line_start":1605,"line_end":1605,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":222151,"byte_end":222165,"line_start":1606,"line_end":1606,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":222167,"byte_end":222170,"line_start":1607,"line_end":1607,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":222172,"byte_end":222183,"line_start":1608,"line_end":1608,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":222185,"byte_end":222214,"line_start":1609,"line_end":1609,"column_start":2,"column_end":31}},{"value":"/ let data = 0b0101_1010u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":222216,"byte_end":222245,"line_start":1610,"line_end":1610,"column_start":2,"column_end":31}},{"value":"/ let bits_be = data.bits::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":222247,"byte_end":222285,"line_start":1611,"line_end":1611,"column_start":2,"column_end":40}},{"value":"/ let bits_le = data.bits::<Lsb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":222287,"byte_end":222325,"line_start":1612,"line_end":1612,"column_start":2,"column_end":40}},{"value":"/ assert!(bits_be.contains(&bits_le[1 .. 5]));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":222327,"byte_end":222375,"line_start":1613,"line_end":1613,"column_start":2,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":222377,"byte_end":222384,"line_start":1614,"line_end":1614,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":222386,"byte_end":222389,"line_start":1615,"line_end":1615,"column_start":2,"column_end":5}},{"value":"/ This example uses a palindrome pattern to demonstrate that the query","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":222391,"byte_end":222463,"line_start":1616,"line_end":1616,"column_start":2,"column_end":74}},{"value":"/ does not need to have the same type parameters as the searched slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":222465,"byte_end":222538,"line_start":1617,"line_end":1617,"column_start":2,"column_end":75}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":222540,"byte_end":222543,"line_start":1618,"line_end":1618,"column_start":2,"column_end":5}},{"value":"/ [`slice::contains`]: https://doc.rust-lang.org/stable/std/primitive.slice.html#method.contains","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":222545,"byte_end":222643,"line_start":1619,"line_end":1619,"column_start":2,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":834},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":223127,"byte_end":223138,"line_start":1639,"line_end":1639,"column_start":9,"column_end":20},"name":"starts_with","qualname":"<BitSlice<O, T>>::starts_with","value":"fn starts_with<P, U, '_, '_>(&'_ Self, &'_ BitSlice<P, U>) -> bool where\nP: BitOrder, U: BitStore","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `prefix` is a prefix of the slice.","sig":null,"attributes":[{"value":"/ Returns `true` if `prefix` is a prefix of the slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":222855,"byte_end":222911,"line_start":1629,"line_end":1629,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":222913,"byte_end":222916,"line_start":1630,"line_end":1630,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":222918,"byte_end":222932,"line_start":1631,"line_end":1631,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":222934,"byte_end":222937,"line_start":1632,"line_end":1632,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":222939,"byte_end":222950,"line_start":1633,"line_end":1633,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":222952,"byte_end":222981,"line_start":1634,"line_end":1634,"column_start":2,"column_end":31}},{"value":"/ let data = 0b0110_1110u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":222983,"byte_end":223012,"line_start":1635,"line_end":1635,"column_start":2,"column_end":31}},{"value":"/ let bits = data.bits::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":223014,"byte_end":223049,"line_start":1636,"line_end":1636,"column_start":2,"column_end":37}},{"value":"/ assert!(bits.starts_with(&data.bits::<Lsb0>()[.. 2]));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":223051,"byte_end":223109,"line_start":1637,"line_end":1637,"column_start":2,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":223111,"byte_end":223118,"line_start":1638,"line_end":1638,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":837},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":223594,"byte_end":223603,"line_start":1655,"line_end":1655,"column_start":9,"column_end":18},"name":"ends_with","qualname":"<BitSlice<O, T>>::ends_with","value":"fn ends_with<P, U, '_, '_>(&'_ Self, &'_ BitSlice<P, U>) -> bool where\nP: BitOrder, U: BitStore","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if `suffix` is a suffix of the slice.","sig":null,"attributes":[{"value":"/ Returns `true` if `suffix` is a suffix of the slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":223324,"byte_end":223380,"line_start":1645,"line_end":1645,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":223382,"byte_end":223385,"line_start":1646,"line_end":1646,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":223387,"byte_end":223401,"line_start":1647,"line_end":1647,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":223403,"byte_end":223406,"line_start":1648,"line_end":1648,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":223408,"byte_end":223419,"line_start":1649,"line_end":1649,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":223421,"byte_end":223450,"line_start":1650,"line_end":1650,"column_start":2,"column_end":31}},{"value":"/ let data = 0b0111_1010u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":223452,"byte_end":223481,"line_start":1651,"line_end":1651,"column_start":2,"column_end":31}},{"value":"/ let bits = data.bits::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":223483,"byte_end":223518,"line_start":1652,"line_end":1652,"column_start":2,"column_end":37}},{"value":"/ assert!(bits.ends_with(&data.bits::<Lsb0>()[6 ..]));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":223520,"byte_end":223576,"line_start":1653,"line_end":1653,"column_start":2,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":223578,"byte_end":223585,"line_start":1654,"line_end":1654,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":224771,"byte_end":224782,"line_start":1696,"line_end":1696,"column_start":9,"column_end":20},"name":"rotate_left","qualname":"<BitSlice<O, T>>::rotate_left","value":"fn rotate_left<'_>(&'_ mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Rotates the slice in-place such that the first `by` bits of the slice\n move to the end while the last `self.len() - by` bits move to the\n front. After calling `rotate_left`, the bit previously at index `by`\n will become the first bit in the slice.","sig":null,"attributes":[{"value":"/ Rotates the slice in-place such that the first `by` bits of the slice","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":223813,"byte_end":223886,"line_start":1662,"line_end":1662,"column_start":2,"column_end":75}},{"value":"/ move to the end while the last `self.len() - by` bits move to the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":223888,"byte_end":223957,"line_start":1663,"line_end":1663,"column_start":2,"column_end":71}},{"value":"/ front. After calling `rotate_left`, the bit previously at index `by`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":223959,"byte_end":224031,"line_start":1664,"line_end":1664,"column_start":2,"column_end":74}},{"value":"/ will become the first bit in the slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":224033,"byte_end":224076,"line_start":1665,"line_end":1665,"column_start":2,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":224078,"byte_end":224081,"line_start":1666,"line_end":1666,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":224083,"byte_end":224095,"line_start":1667,"line_end":1667,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":224097,"byte_end":224100,"line_start":1668,"line_end":1668,"column_start":2,"column_end":5}},{"value":"/ This function will panic if `by` is greater than the length of the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":224102,"byte_end":224172,"line_start":1669,"line_end":1669,"column_start":2,"column_end":72}},{"value":"/ slice. Note that `by == self.len()` does *not* panic and is a noöp","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":224174,"byte_end":224245,"line_start":1670,"line_end":1670,"column_start":2,"column_end":72}},{"value":"/ rotation.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":224247,"byte_end":224260,"line_start":1671,"line_end":1671,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":224262,"byte_end":224265,"line_start":1672,"line_end":1672,"column_start":2,"column_end":5}},{"value":"/ # Complexity","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":224267,"byte_end":224283,"line_start":1673,"line_end":1673,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":224285,"byte_end":224288,"line_start":1674,"line_end":1674,"column_start":2,"column_end":5}},{"value":"/ Takes linear (in `self.len()`) time.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":224290,"byte_end":224330,"line_start":1675,"line_end":1675,"column_start":2,"column_end":42}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":224332,"byte_end":224335,"line_start":1676,"line_end":1676,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":224337,"byte_end":224351,"line_start":1677,"line_end":1677,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":224353,"byte_end":224356,"line_start":1678,"line_end":1678,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":224358,"byte_end":224369,"line_start":1679,"line_end":1679,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":224371,"byte_end":224400,"line_start":1680,"line_end":1680,"column_start":2,"column_end":31}},{"value":"/ let mut data = 0xF0u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":224402,"byte_end":224428,"line_start":1681,"line_end":1681,"column_start":2,"column_end":28}},{"value":"/ let bits = data.bits_mut::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":224430,"byte_end":224469,"line_start":1682,"line_end":1682,"column_start":2,"column_end":41}},{"value":"/ bits.rotate_left(2);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":224471,"byte_end":224495,"line_start":1683,"line_end":1683,"column_start":2,"column_end":26}},{"value":"/ assert_eq!(data, 0xC3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":224497,"byte_end":224524,"line_start":1684,"line_end":1684,"column_start":2,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":224526,"byte_end":224533,"line_start":1685,"line_end":1685,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":224535,"byte_end":224538,"line_start":1686,"line_end":1686,"column_start":2,"column_end":5}},{"value":"/ Rotating a subslice:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":224540,"byte_end":224564,"line_start":1687,"line_end":1687,"column_start":2,"column_end":26}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":224566,"byte_end":224569,"line_start":1688,"line_end":1688,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":224571,"byte_end":224582,"line_start":1689,"line_end":1689,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":224584,"byte_end":224613,"line_start":1690,"line_end":1690,"column_start":2,"column_end":31}},{"value":"/ let mut data = 0xF0u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":224615,"byte_end":224641,"line_start":1691,"line_end":1691,"column_start":2,"column_end":28}},{"value":"/ let bits = data.bits_mut::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":224643,"byte_end":224682,"line_start":1692,"line_end":1692,"column_start":2,"column_end":41}},{"value":"/ bits[1 .. 5].rotate_left(1);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":224684,"byte_end":224716,"line_start":1693,"line_end":1693,"column_start":2,"column_end":34}},{"value":"/ assert_eq!(data, 0b1_1101_000);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":224718,"byte_end":224753,"line_start":1694,"line_end":1694,"column_start":2,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":224755,"byte_end":224762,"line_start":1695,"line_end":1695,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":841},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":227265,"byte_end":227277,"line_start":1769,"line_end":1769,"column_start":9,"column_end":21},"name":"rotate_right","qualname":"<BitSlice<O, T>>::rotate_right","value":"fn rotate_right<'_>(&'_ mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Rotates the slice in-place such that the first `self.len() - by` bits of\n the slice move to the end while the last `by` bits move to the front.\n After calling `rotate_right`, the bit previously at index\n `self.len() - by` will become the first bit in the slice.","sig":null,"attributes":[{"value":"/ Rotates the slice in-place such that the first `self.len() - by` bits of","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":226293,"byte_end":226369,"line_start":1735,"line_end":1735,"column_start":2,"column_end":78}},{"value":"/ the slice move to the end while the last `by` bits move to the front.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":226371,"byte_end":226444,"line_start":1736,"line_end":1736,"column_start":2,"column_end":75}},{"value":"/ After calling `rotate_right`, the bit previously at index","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":226446,"byte_end":226507,"line_start":1737,"line_end":1737,"column_start":2,"column_end":63}},{"value":"/ `self.len() - by` will become the first bit in the slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":226509,"byte_end":226570,"line_start":1738,"line_end":1738,"column_start":2,"column_end":63}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":226572,"byte_end":226575,"line_start":1739,"line_end":1739,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":226577,"byte_end":226589,"line_start":1740,"line_end":1740,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":226591,"byte_end":226594,"line_start":1741,"line_end":1741,"column_start":2,"column_end":5}},{"value":"/ This function will panic if `by` is greater than the length of the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":226596,"byte_end":226666,"line_start":1742,"line_end":1742,"column_start":2,"column_end":72}},{"value":"/ slice. Note that `by == self.len()` does *not* panic and is a noöp","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":226668,"byte_end":226739,"line_start":1743,"line_end":1743,"column_start":2,"column_end":72}},{"value":"/ rotation.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":226741,"byte_end":226754,"line_start":1744,"line_end":1744,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":226756,"byte_end":226759,"line_start":1745,"line_end":1745,"column_start":2,"column_end":5}},{"value":"/ # Complexity","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":226761,"byte_end":226777,"line_start":1746,"line_end":1746,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":226779,"byte_end":226782,"line_start":1747,"line_end":1747,"column_start":2,"column_end":5}},{"value":"/ Takes linear (in `self.len()`) time.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":226784,"byte_end":226824,"line_start":1748,"line_end":1748,"column_start":2,"column_end":42}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":226826,"byte_end":226829,"line_start":1749,"line_end":1749,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":226831,"byte_end":226845,"line_start":1750,"line_end":1750,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":226847,"byte_end":226850,"line_start":1751,"line_end":1751,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":226852,"byte_end":226863,"line_start":1752,"line_end":1752,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":226865,"byte_end":226894,"line_start":1753,"line_end":1753,"column_start":2,"column_end":31}},{"value":"/ let mut data = 0xF0u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":226896,"byte_end":226922,"line_start":1754,"line_end":1754,"column_start":2,"column_end":28}},{"value":"/ let bits = data.bits_mut::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":226924,"byte_end":226963,"line_start":1755,"line_end":1755,"column_start":2,"column_end":41}},{"value":"/ bits.rotate_right(2);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":226965,"byte_end":226990,"line_start":1756,"line_end":1756,"column_start":2,"column_end":27}},{"value":"/ assert_eq!(data, 0x3C);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":226992,"byte_end":227019,"line_start":1757,"line_end":1757,"column_start":2,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":227021,"byte_end":227028,"line_start":1758,"line_end":1758,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":227030,"byte_end":227033,"line_start":1759,"line_end":1759,"column_start":2,"column_end":5}},{"value":"/ Rotate a subslice:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":227035,"byte_end":227057,"line_start":1760,"line_end":1760,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":227059,"byte_end":227062,"line_start":1761,"line_end":1761,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":227064,"byte_end":227075,"line_start":1762,"line_end":1762,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":227077,"byte_end":227106,"line_start":1763,"line_end":1763,"column_start":2,"column_end":31}},{"value":"/ let mut data = 0xF0u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":227108,"byte_end":227134,"line_start":1764,"line_end":1764,"column_start":2,"column_end":28}},{"value":"/ let bits = data.bits_mut::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":227136,"byte_end":227175,"line_start":1765,"line_end":1765,"column_start":2,"column_end":41}},{"value":"/ bits[1 .. 5].rotate_right(1);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":227177,"byte_end":227210,"line_start":1766,"line_end":1766,"column_start":2,"column_end":35}},{"value":"/ assert_eq!(data, 0b1_0111_000);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":227212,"byte_end":227247,"line_start":1767,"line_end":1767,"column_start":2,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":227249,"byte_end":227256,"line_start":1768,"line_end":1768,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":230168,"byte_end":230184,"line_start":1853,"line_end":1853,"column_start":9,"column_end":25},"name":"clone_from_slice","qualname":"<BitSlice<O, T>>::clone_from_slice","value":"fn clone_from_slice<P, U, '_, '_>(&'_ mut Self, &'_ BitSlice<P, U>) where\nP: BitOrder, U: BitStore","parent":null,"children":[],"decl_id":null,"docs":" Copies the elements from `src` into `self`.","sig":null,"attributes":[{"value":"/ Copies the elements from `src` into `self`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":228788,"byte_end":228835,"line_start":1808,"line_end":1808,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":228837,"byte_end":228840,"line_start":1809,"line_end":1809,"column_start":2,"column_end":5}},{"value":"/ The length of `src` must be the same as `self`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":228842,"byte_end":228893,"line_start":1810,"line_end":1810,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":228895,"byte_end":228898,"line_start":1811,"line_end":1811,"column_start":2,"column_end":5}},{"value":"/ This is equivalent to `copy_from_slice`; this function is only included","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":228900,"byte_end":228975,"line_start":1812,"line_end":1812,"column_start":2,"column_end":77}},{"value":"/ for API surface equivalence.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":228977,"byte_end":229009,"line_start":1813,"line_end":1813,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":229011,"byte_end":229014,"line_start":1814,"line_end":1814,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":229016,"byte_end":229028,"line_start":1815,"line_end":1815,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":229030,"byte_end":229033,"line_start":1816,"line_end":1816,"column_start":2,"column_end":5}},{"value":"/ This function will panic if the two slices have different lengths.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":229035,"byte_end":229105,"line_start":1817,"line_end":1817,"column_start":2,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":229107,"byte_end":229110,"line_start":1818,"line_end":1818,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":229112,"byte_end":229126,"line_start":1819,"line_end":1819,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":229128,"byte_end":229131,"line_start":1820,"line_end":1820,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":229133,"byte_end":229144,"line_start":1821,"line_end":1821,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":229146,"byte_end":229175,"line_start":1822,"line_end":1822,"column_start":2,"column_end":31}},{"value":"/ let mut data = 0u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":229177,"byte_end":229200,"line_start":1823,"line_end":1823,"column_start":2,"column_end":25}},{"value":"/ let bits = data.bits_mut::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":229202,"byte_end":229241,"line_start":1824,"line_end":1824,"column_start":2,"column_end":41}},{"value":"/ let src = 0x0Fu16.bits::<Lsb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":229243,"byte_end":229280,"line_start":1825,"line_end":1825,"column_start":2,"column_end":39}},{"value":"/ bits.clone_from_slice(&src[.. 8]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":229282,"byte_end":229320,"line_start":1826,"line_end":1826,"column_start":2,"column_end":40}},{"value":"/ assert_eq!(data, 0xF0);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":229322,"byte_end":229349,"line_start":1827,"line_end":1827,"column_start":2,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":229351,"byte_end":229358,"line_start":1828,"line_end":1828,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":229360,"byte_end":229363,"line_start":1829,"line_end":1829,"column_start":2,"column_end":5}},{"value":"/ Rust enforces that there can only be one mutable reference with no","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":229365,"byte_end":229435,"line_start":1830,"line_end":1830,"column_start":2,"column_end":72}},{"value":"/ immutable references to a particular piece of data in a particular","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":229437,"byte_end":229507,"line_start":1831,"line_end":1831,"column_start":2,"column_end":72}},{"value":"/ scope. Because of this, attempting to use `clone_from_slice` on a single","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":229509,"byte_end":229585,"line_start":1832,"line_end":1832,"column_start":2,"column_end":78}},{"value":"/ slice will result in a compile failure:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":229587,"byte_end":229630,"line_start":1833,"line_end":1833,"column_start":2,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":229632,"byte_end":229635,"line_start":1834,"line_end":1834,"column_start":2,"column_end":5}},{"value":"/ ```rust,compile_fail","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":229637,"byte_end":229661,"line_start":1835,"line_end":1835,"column_start":2,"column_end":26}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":229663,"byte_end":229692,"line_start":1836,"line_end":1836,"column_start":2,"column_end":31}},{"value":"/ let mut data = 3u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":229694,"byte_end":229717,"line_start":1837,"line_end":1837,"column_start":2,"column_end":25}},{"value":"/ let bits = data.bits_mut::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":229719,"byte_end":229758,"line_start":1838,"line_end":1838,"column_start":2,"column_end":41}},{"value":"/ bits[.. 2].clone_from_slice(&bits[6 ..]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":229760,"byte_end":229805,"line_start":1839,"line_end":1839,"column_start":2,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":229807,"byte_end":229814,"line_start":1840,"line_end":1840,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":229816,"byte_end":229819,"line_start":1841,"line_end":1841,"column_start":2,"column_end":5}},{"value":"/ To work around this, we can use [`split_at_mut`] to create two distinct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":229821,"byte_end":229896,"line_start":1842,"line_end":1842,"column_start":2,"column_end":77}},{"value":"/ sub-slices from a slice:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":229898,"byte_end":229926,"line_start":1843,"line_end":1843,"column_start":2,"column_end":30}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":229928,"byte_end":229931,"line_start":1844,"line_end":1844,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":229933,"byte_end":229944,"line_start":1845,"line_end":1845,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":229946,"byte_end":229975,"line_start":1846,"line_end":1846,"column_start":2,"column_end":31}},{"value":"/ let mut data = 3u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":229977,"byte_end":230000,"line_start":1847,"line_end":1847,"column_start":2,"column_end":25}},{"value":"/ let bits = data.bits_mut::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":230002,"byte_end":230041,"line_start":1848,"line_end":1848,"column_start":2,"column_end":41}},{"value":"/ let (head, tail) = bits.split_at_mut(4);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":230043,"byte_end":230087,"line_start":1849,"line_end":1849,"column_start":2,"column_end":46}},{"value":"/ head.clone_from_slice(tail);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":230089,"byte_end":230121,"line_start":1850,"line_end":1850,"column_start":2,"column_end":34}},{"value":"/ assert_eq!(data, 0x33);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":230123,"byte_end":230150,"line_start":1851,"line_end":1851,"column_start":2,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":230152,"byte_end":230159,"line_start":1852,"line_end":1852,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":231897,"byte_end":231912,"line_start":1913,"line_end":1913,"column_start":9,"column_end":24},"name":"copy_from_slice","qualname":"<BitSlice<O, T>>::copy_from_slice","value":"fn copy_from_slice<'_, '_>(&'_ mut Self, &'_ Self)","parent":null,"children":[],"decl_id":null,"docs":" Copies the elements from `src` into `self`.","sig":null,"attributes":[{"value":"/ Copies the elements from `src` into `self`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":230465,"byte_end":230512,"line_start":1867,"line_end":1867,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":230514,"byte_end":230517,"line_start":1868,"line_end":1868,"column_start":2,"column_end":5}},{"value":"/ The length of `src` must be the same as `self`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":230519,"byte_end":230570,"line_start":1869,"line_end":1869,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":230572,"byte_end":230575,"line_start":1870,"line_end":1870,"column_start":2,"column_end":5}},{"value":"/ This is restricted to take exactly the same type of bit slice as the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":230577,"byte_end":230649,"line_start":1871,"line_end":1871,"column_start":2,"column_end":74}},{"value":"/ source slice, so that the implementation has the chace to use faster","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":230651,"byte_end":230723,"line_start":1872,"line_end":1872,"column_start":2,"column_end":74}},{"value":"/ `memcpy` if possible.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":230725,"byte_end":230750,"line_start":1873,"line_end":1873,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":230752,"byte_end":230755,"line_start":1874,"line_end":1874,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":230757,"byte_end":230769,"line_start":1875,"line_end":1875,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":230771,"byte_end":230774,"line_start":1876,"line_end":1876,"column_start":2,"column_end":5}},{"value":"/ This function will panic if the two slices have different lengths.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":230776,"byte_end":230846,"line_start":1877,"line_end":1877,"column_start":2,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":230848,"byte_end":230851,"line_start":1878,"line_end":1878,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":230853,"byte_end":230867,"line_start":1879,"line_end":1879,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":230869,"byte_end":230872,"line_start":1880,"line_end":1880,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":230874,"byte_end":230885,"line_start":1881,"line_end":1881,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":230887,"byte_end":230916,"line_start":1882,"line_end":1882,"column_start":2,"column_end":31}},{"value":"/ let mut data = 0u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":230918,"byte_end":230941,"line_start":1883,"line_end":1883,"column_start":2,"column_end":25}},{"value":"/ let bits = data.bits_mut::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":230943,"byte_end":230982,"line_start":1884,"line_end":1884,"column_start":2,"column_end":41}},{"value":"/ let src = 0x0Fu8.bits::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":230984,"byte_end":231020,"line_start":1885,"line_end":1885,"column_start":2,"column_end":38}},{"value":"/ bits.copy_from_slice(src);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":231022,"byte_end":231052,"line_start":1886,"line_end":1886,"column_start":2,"column_end":32}},{"value":"/ assert_eq!(data, 0x0F);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":231054,"byte_end":231081,"line_start":1887,"line_end":1887,"column_start":2,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":231083,"byte_end":231090,"line_start":1888,"line_end":1888,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":231092,"byte_end":231095,"line_start":1889,"line_end":1889,"column_start":2,"column_end":5}},{"value":"/ Rust enforces that there can only be one mutable reference with no","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":231097,"byte_end":231167,"line_start":1890,"line_end":1890,"column_start":2,"column_end":72}},{"value":"/ immutable references to a particular piece of data in a particular","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":231169,"byte_end":231239,"line_start":1891,"line_end":1891,"column_start":2,"column_end":72}},{"value":"/ scope. Because of this, attempting to use `copy_from_slice` on a single","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":231241,"byte_end":231316,"line_start":1892,"line_end":1892,"column_start":2,"column_end":77}},{"value":"/ slice will result in a compile failure:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":231318,"byte_end":231361,"line_start":1893,"line_end":1893,"column_start":2,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":231363,"byte_end":231366,"line_start":1894,"line_end":1894,"column_start":2,"column_end":5}},{"value":"/ ```rust,compile_fail","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":231368,"byte_end":231392,"line_start":1895,"line_end":1895,"column_start":2,"column_end":26}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":231394,"byte_end":231423,"line_start":1896,"line_end":1896,"column_start":2,"column_end":31}},{"value":"/ let mut data = 3u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":231425,"byte_end":231448,"line_start":1897,"line_end":1897,"column_start":2,"column_end":25}},{"value":"/ let bits = data.bits_mut::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":231450,"byte_end":231489,"line_start":1898,"line_end":1898,"column_start":2,"column_end":41}},{"value":"/ bits[.. 2].copy_from_slice(&bits[6 ..]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":231491,"byte_end":231535,"line_start":1899,"line_end":1899,"column_start":2,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":231537,"byte_end":231544,"line_start":1900,"line_end":1900,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":231546,"byte_end":231549,"line_start":1901,"line_end":1901,"column_start":2,"column_end":5}},{"value":"/ To work around this, we can use [`split_at_mut`] to create two distinct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":231551,"byte_end":231626,"line_start":1902,"line_end":1902,"column_start":2,"column_end":77}},{"value":"/ sub-slices from a slice:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":231628,"byte_end":231656,"line_start":1903,"line_end":1903,"column_start":2,"column_end":30}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":231658,"byte_end":231661,"line_start":1904,"line_end":1904,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":231663,"byte_end":231674,"line_start":1905,"line_end":1905,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":231676,"byte_end":231705,"line_start":1906,"line_end":1906,"column_start":2,"column_end":31}},{"value":"/ let mut data = 3u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":231707,"byte_end":231730,"line_start":1907,"line_end":1907,"column_start":2,"column_end":25}},{"value":"/ let bits = data.bits_mut::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":231732,"byte_end":231771,"line_start":1908,"line_end":1908,"column_start":2,"column_end":41}},{"value":"/ let (head, tail) = bits.split_at_mut(4);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":231773,"byte_end":231817,"line_start":1909,"line_end":1909,"column_start":2,"column_end":46}},{"value":"/ head.copy_from_slice(tail);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":231819,"byte_end":231850,"line_start":1910,"line_end":1910,"column_start":2,"column_end":33}},{"value":"/ assert_eq!(data, 0x33);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":231852,"byte_end":231879,"line_start":1911,"line_end":1911,"column_start":2,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":231881,"byte_end":231888,"line_start":1912,"line_end":1912,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":846},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":233391,"byte_end":233406,"line_start":1969,"line_end":1969,"column_start":9,"column_end":24},"name":"swap_with_slice","qualname":"<BitSlice<O, T>>::swap_with_slice","value":"fn swap_with_slice<P, U, '_, '_>(&'_ mut Self, &'_ mut BitSlice<P, U>) where\nP: BitOrder, U: BitStore","parent":null,"children":[],"decl_id":null,"docs":" Swaps all bits in `self` with those in `other`.","sig":null,"attributes":[{"value":"/ Swaps all bits in `self` with those in `other`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":231972,"byte_end":232023,"line_start":1917,"line_end":1917,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":232025,"byte_end":232028,"line_start":1918,"line_end":1918,"column_start":2,"column_end":5}},{"value":"/ The length of `other` must be the same as `self`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":232030,"byte_end":232083,"line_start":1919,"line_end":1919,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":232085,"byte_end":232088,"line_start":1920,"line_end":1920,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":232090,"byte_end":232102,"line_start":1921,"line_end":1921,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":232104,"byte_end":232107,"line_start":1922,"line_end":1922,"column_start":2,"column_end":5}},{"value":"/ This function will panic if the two slices hav different lengths.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":232109,"byte_end":232178,"line_start":1923,"line_end":1923,"column_start":2,"column_end":71}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":232180,"byte_end":232183,"line_start":1924,"line_end":1924,"column_start":2,"column_end":5}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":232185,"byte_end":232198,"line_start":1925,"line_end":1925,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":232200,"byte_end":232203,"line_start":1926,"line_end":1926,"column_start":2,"column_end":5}},{"value":"/ Swapping two elements across slices:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":232205,"byte_end":232245,"line_start":1927,"line_end":1927,"column_start":2,"column_end":42}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":232247,"byte_end":232250,"line_start":1928,"line_end":1928,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":232252,"byte_end":232263,"line_start":1929,"line_end":1929,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":232265,"byte_end":232294,"line_start":1930,"line_end":1930,"column_start":2,"column_end":31}},{"value":"/ let mut a = 0u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":232296,"byte_end":232316,"line_start":1931,"line_end":1931,"column_start":2,"column_end":22}},{"value":"/ let mut b = 0x96A5u16;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":232318,"byte_end":232344,"line_start":1932,"line_end":1932,"column_start":2,"column_end":28}},{"value":"/ let bits_a = a.bits_mut::<Lsb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":232346,"byte_end":232384,"line_start":1933,"line_end":1933,"column_start":2,"column_end":40}},{"value":"/ let bits_b = b.bits_mut::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":232386,"byte_end":232424,"line_start":1934,"line_end":1934,"column_start":2,"column_end":40}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":232426,"byte_end":232429,"line_start":1935,"line_end":1935,"column_start":2,"column_end":5}},{"value":"/ bits_a.swap_with_slice(&mut bits_b[4 .. 12]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":232431,"byte_end":232480,"line_start":1936,"line_end":1936,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":232482,"byte_end":232485,"line_start":1937,"line_end":1937,"column_start":2,"column_end":5}},{"value":"/ assert_eq!(a, 0x56);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":232487,"byte_end":232511,"line_start":1938,"line_end":1938,"column_start":2,"column_end":26}},{"value":"/ assert_eq!(b, 0x9005);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":232513,"byte_end":232539,"line_start":1939,"line_end":1939,"column_start":2,"column_end":28}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":232541,"byte_end":232548,"line_start":1940,"line_end":1940,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":232550,"byte_end":232553,"line_start":1941,"line_end":1941,"column_start":2,"column_end":5}},{"value":"/ Rust enforces that there can only be one mutable reference to a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":232555,"byte_end":232622,"line_start":1942,"line_end":1942,"column_start":2,"column_end":69}},{"value":"/ particular piece of data in a particular scope. Because of this,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":232624,"byte_end":232692,"line_start":1943,"line_end":1943,"column_start":2,"column_end":70}},{"value":"/ attempting to use `swap_with_slice` on a single slice will result in a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":232694,"byte_end":232768,"line_start":1944,"line_end":1944,"column_start":2,"column_end":76}},{"value":"/ compile failure:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":232770,"byte_end":232790,"line_start":1945,"line_end":1945,"column_start":2,"column_end":22}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":232792,"byte_end":232795,"line_start":1946,"line_end":1946,"column_start":2,"column_end":5}},{"value":"/ ```rust,compile_fail","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":232797,"byte_end":232821,"line_start":1947,"line_end":1947,"column_start":2,"column_end":26}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":232823,"byte_end":232852,"line_start":1948,"line_end":1948,"column_start":2,"column_end":31}},{"value":"/ let mut data = 15u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":232854,"byte_end":232878,"line_start":1949,"line_end":1949,"column_start":2,"column_end":26}},{"value":"/ let bits = data.bits_mut::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":232880,"byte_end":232919,"line_start":1950,"line_end":1950,"column_start":2,"column_end":41}},{"value":"/ bits[.. 3].swap_with_slice(&mut bits[5 ..]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":232921,"byte_end":232969,"line_start":1951,"line_end":1951,"column_start":2,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":232971,"byte_end":232978,"line_start":1952,"line_end":1952,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":232980,"byte_end":232983,"line_start":1953,"line_end":1953,"column_start":2,"column_end":5}},{"value":"/ To work around this, we can use [`split_at_mut`] to create two distinct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":232985,"byte_end":233060,"line_start":1954,"line_end":1954,"column_start":2,"column_end":77}},{"value":"/ mutable sub-slices from a slice:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":233062,"byte_end":233098,"line_start":1955,"line_end":1955,"column_start":2,"column_end":38}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":233100,"byte_end":233103,"line_start":1956,"line_end":1956,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":233105,"byte_end":233116,"line_start":1957,"line_end":1957,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":233118,"byte_end":233147,"line_start":1958,"line_end":1958,"column_start":2,"column_end":31}},{"value":"/ let mut data = 15u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":233149,"byte_end":233173,"line_start":1959,"line_end":1959,"column_start":2,"column_end":26}},{"value":"/ let bits = data.bits_mut::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":233175,"byte_end":233214,"line_start":1960,"line_end":1960,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":233216,"byte_end":233219,"line_start":1961,"line_end":1961,"column_start":2,"column_end":5}},{"value":"/ {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":233221,"byte_end":233226,"line_start":1962,"line_end":1962,"column_start":2,"column_end":7}},{"value":"/     let (left, right) = bits.split_at_mut(4);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":233228,"byte_end":233277,"line_start":1963,"line_end":1963,"column_start":2,"column_end":51}},{"value":"/     left[.. 2].swap_with_slice(&mut right[2 ..]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":233279,"byte_end":233332,"line_start":1964,"line_end":1964,"column_start":2,"column_end":55}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":233334,"byte_end":233339,"line_start":1965,"line_end":1965,"column_start":2,"column_end":7}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":233341,"byte_end":233344,"line_start":1966,"line_end":1966,"column_start":2,"column_end":5}},{"value":"/ assert_eq!(data, 0xCC);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":233346,"byte_end":233373,"line_start":1967,"line_end":1967,"column_start":2,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":233375,"byte_end":233382,"line_start":1968,"line_end":1968,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":235108,"byte_end":235116,"line_start":2021,"line_end":2021,"column_start":16,"column_end":24},"name":"align_to","qualname":"<BitSlice<O, T>>::align_to","value":"unsafe fn align_to<U, '_>(&'_ Self)\n-> (&'_ Self, &'_ BitSlice<O, U>, &'_ Self) where U: BitStore","parent":null,"children":[],"decl_id":null,"docs":" Transmute the slice to a slice with a different backing store, ensuring\n alignment of the types is maintained.","sig":null,"attributes":[{"value":"/ Transmute the slice to a slice with a different backing store, ensuring","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":233733,"byte_end":233808,"line_start":1983,"line_end":1983,"column_start":2,"column_end":77}},{"value":"/ alignment of the types is maintained.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":233810,"byte_end":233851,"line_start":1984,"line_end":1984,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":233853,"byte_end":233856,"line_start":1985,"line_end":1985,"column_start":2,"column_end":5}},{"value":"/ This method splits the slice into three distinct slices: prefix,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":233858,"byte_end":233926,"line_start":1986,"line_end":1986,"column_start":2,"column_end":70}},{"value":"/ correctly aligned middle slice of a new backing type, and the suffix","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":233928,"byte_end":234000,"line_start":1987,"line_end":1987,"column_start":2,"column_end":74}},{"value":"/ slice. The method does a best effort to make the middle slice the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":234002,"byte_end":234071,"line_start":1988,"line_end":1988,"column_start":2,"column_end":71}},{"value":"/ greatest length possible for a given type and input slice, but only your","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":234073,"byte_end":234149,"line_start":1989,"line_end":1989,"column_start":2,"column_end":78}},{"value":"/ algorithm’s performance should depend on that, not its correctness.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":234151,"byte_end":234224,"line_start":1990,"line_end":1990,"column_start":2,"column_end":73}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":234226,"byte_end":234229,"line_start":1991,"line_end":1991,"column_start":2,"column_end":5}},{"value":"/ # Safety","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":234231,"byte_end":234243,"line_start":1992,"line_end":1992,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":234245,"byte_end":234248,"line_start":1993,"line_end":1993,"column_start":2,"column_end":5}},{"value":"/ This method is essentially a `transmute` with respect to the elements in","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":234250,"byte_end":234326,"line_start":1994,"line_end":1994,"column_start":2,"column_end":78}},{"value":"/ the returned middle slice, so all the usual caveats pertaining to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":234328,"byte_end":234397,"line_start":1995,"line_end":1995,"column_start":2,"column_end":71}},{"value":"/ `transmute::<T, U>` also apply here.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":234399,"byte_end":234439,"line_start":1996,"line_end":1996,"column_start":2,"column_end":42}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":234441,"byte_end":234444,"line_start":1997,"line_end":1997,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":234446,"byte_end":234460,"line_start":1998,"line_end":1998,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":234462,"byte_end":234465,"line_start":1999,"line_end":1999,"column_start":2,"column_end":5}},{"value":"/ Basic usage:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":234467,"byte_end":234483,"line_start":2000,"line_end":2000,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":234485,"byte_end":234488,"line_start":2001,"line_end":2001,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":234490,"byte_end":234501,"line_start":2002,"line_end":2002,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":234503,"byte_end":234532,"line_start":2003,"line_end":2003,"column_start":2,"column_end":31}},{"value":"/ unsafe {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":234534,"byte_end":234546,"line_start":2004,"line_end":2004,"column_start":2,"column_end":14}},{"value":"/     let bytes: [u8; 7] = [1, 2, 3, 4, 5, 6, 7];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":234548,"byte_end":234599,"line_start":2005,"line_end":2005,"column_start":2,"column_end":53}},{"value":"/     let bits = bytes.bits::<Local>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":234601,"byte_end":234642,"line_start":2006,"line_end":2006,"column_start":2,"column_end":43}},{"value":"/     let (prefix, shorts, suffix) = bits.align_to::<u16>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":234644,"byte_end":234706,"line_start":2007,"line_end":2007,"column_start":2,"column_end":64}},{"value":"/     match prefix.len() {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":234708,"byte_end":234736,"line_start":2008,"line_end":2008,"column_start":2,"column_end":30}},{"value":"/         0 => {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":234738,"byte_end":234756,"line_start":2009,"line_end":2009,"column_start":2,"column_end":20}},{"value":"/             assert_eq!(shorts, bits[.. 48]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":234758,"byte_end":234806,"line_start":2010,"line_end":2010,"column_start":2,"column_end":50}},{"value":"/             assert_eq!(suffix, bits[48 ..]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":234808,"byte_end":234856,"line_start":2011,"line_end":2011,"column_start":2,"column_end":50}},{"value":"/         },","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":234858,"byte_end":234872,"line_start":2012,"line_end":2012,"column_start":2,"column_end":16}},{"value":"/         8 => {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":234874,"byte_end":234892,"line_start":2013,"line_end":2013,"column_start":2,"column_end":20}},{"value":"/             assert_eq!(prefix, bits[.. 8]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":234894,"byte_end":234941,"line_start":2014,"line_end":2014,"column_start":2,"column_end":49}},{"value":"/             assert_eq!(shorts, bits[8 ..]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":234943,"byte_end":234990,"line_start":2015,"line_end":2015,"column_start":2,"column_end":49}},{"value":"/         },","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":234992,"byte_end":235006,"line_start":2016,"line_end":2016,"column_start":2,"column_end":16}},{"value":"/         _ => unreachable!(\"This case will not occur\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":235008,"byte_end":235065,"line_start":2017,"line_end":2017,"column_start":2,"column_end":59}},{"value":"/     }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":235067,"byte_end":235076,"line_start":2018,"line_end":2018,"column_start":2,"column_end":11}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":235078,"byte_end":235083,"line_start":2019,"line_end":2019,"column_start":2,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":235085,"byte_end":235092,"line_start":2020,"line_end":2020,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":236555,"byte_end":236567,"line_start":2061,"line_end":2061,"column_start":16,"column_end":28},"name":"align_to_mut","qualname":"<BitSlice<O, T>>::align_to_mut","value":"unsafe fn align_to_mut<U, '_>(&'_ mut Self)\n-> (&'_ mut Self, &'_ mut BitSlice<O, U>, &'_ mut Self) where U: BitStore","parent":null,"children":[],"decl_id":null,"docs":" Transmute the slice to a slice with a different backing store, ensuring\n alignment of the types is maintained.","sig":null,"attributes":[{"value":"/ Transmute the slice to a slice with a different backing store, ensuring","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":235472,"byte_end":235547,"line_start":2032,"line_end":2032,"column_start":2,"column_end":77}},{"value":"/ alignment of the types is maintained.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":235549,"byte_end":235590,"line_start":2033,"line_end":2033,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":235592,"byte_end":235595,"line_start":2034,"line_end":2034,"column_start":2,"column_end":5}},{"value":"/ This method splits the slice into three distinct slices: prefix,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":235597,"byte_end":235665,"line_start":2035,"line_end":2035,"column_start":2,"column_end":70}},{"value":"/ correctly aligned middle slice of a new backing type, and the suffix","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":235667,"byte_end":235739,"line_start":2036,"line_end":2036,"column_start":2,"column_end":74}},{"value":"/ slice. The method does a best effort to make the middle slice the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":235741,"byte_end":235810,"line_start":2037,"line_end":2037,"column_start":2,"column_end":71}},{"value":"/ greatest length possible for a given type and input slice, but only your","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":235812,"byte_end":235888,"line_start":2038,"line_end":2038,"column_start":2,"column_end":78}},{"value":"/ algorithm’s performance should depend on that, not its correctness.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":235890,"byte_end":235963,"line_start":2039,"line_end":2039,"column_start":2,"column_end":73}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":235965,"byte_end":235968,"line_start":2040,"line_end":2040,"column_start":2,"column_end":5}},{"value":"/ # Safety","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":235970,"byte_end":235982,"line_start":2041,"line_end":2041,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":235984,"byte_end":235987,"line_start":2042,"line_end":2042,"column_start":2,"column_end":5}},{"value":"/ This method is essentially a `transmute` with respect to the elements in","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":235989,"byte_end":236065,"line_start":2043,"line_end":2043,"column_start":2,"column_end":78}},{"value":"/ the returned middle slice, so all the usual caveats pertaining to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":236067,"byte_end":236136,"line_start":2044,"line_end":2044,"column_start":2,"column_end":71}},{"value":"/ `transmute::<T, U>` also apply here.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":236138,"byte_end":236178,"line_start":2045,"line_end":2045,"column_start":2,"column_end":42}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":236180,"byte_end":236183,"line_start":2046,"line_end":2046,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":236185,"byte_end":236199,"line_start":2047,"line_end":2047,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":236201,"byte_end":236204,"line_start":2048,"line_end":2048,"column_start":2,"column_end":5}},{"value":"/ Basic usage:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":236206,"byte_end":236222,"line_start":2049,"line_end":2049,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":236224,"byte_end":236227,"line_start":2050,"line_end":2050,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":236229,"byte_end":236240,"line_start":2051,"line_end":2051,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":236242,"byte_end":236271,"line_start":2052,"line_end":2052,"column_start":2,"column_end":31}},{"value":"/ unsafe {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":236273,"byte_end":236285,"line_start":2053,"line_end":2053,"column_start":2,"column_end":14}},{"value":"/     let mut bytes: [u8; 7] = [1, 2, 3, 4, 5, 6, 7];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":236287,"byte_end":236342,"line_start":2054,"line_end":2054,"column_start":2,"column_end":57}},{"value":"/     let bits = bytes.bits_mut::<Local>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":236344,"byte_end":236389,"line_start":2055,"line_end":2055,"column_start":2,"column_end":47}},{"value":"/     let (prefix, shorts, suffix) = bits.align_to_mut::<u16>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":236391,"byte_end":236457,"line_start":2056,"line_end":2056,"column_start":2,"column_end":68}},{"value":"/     //  same access and behavior as in `align_to`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":236459,"byte_end":236512,"line_start":2057,"line_end":2057,"column_start":2,"column_end":55}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":236514,"byte_end":236519,"line_start":2058,"line_end":2058,"column_start":2,"column_end":7}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":236521,"byte_end":236528,"line_start":2059,"line_end":2059,"column_start":2,"column_end":9}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":236530,"byte_end":236539,"line_start":2060,"line_end":2060,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":237107,"byte_end":237113,"line_start":2088,"line_end":2088,"column_start":9,"column_end":15},"name":"to_vec","qualname":"<BitSlice<O, T>>::to_vec","value":"fn to_vec<'_>(&'_ Self) -> BitVec<O, T>","parent":null,"children":[],"decl_id":null,"docs":" Copies `self` into a new `BitVec`.","sig":null,"attributes":[{"value":"/ Copies `self` into a new `BitVec`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":236818,"byte_end":236856,"line_start":2075,"line_end":2075,"column_start":2,"column_end":40}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":236858,"byte_end":236861,"line_start":2076,"line_end":2076,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":236863,"byte_end":236877,"line_start":2077,"line_end":2077,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":236879,"byte_end":236882,"line_start":2078,"line_end":2078,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":236884,"byte_end":236895,"line_start":2079,"line_end":2079,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":236897,"byte_end":236926,"line_start":2080,"line_end":2080,"column_start":2,"column_end":31}},{"value":"/ let data = [0u8, !0u8];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":236928,"byte_end":236955,"line_start":2081,"line_end":2081,"column_start":2,"column_end":29}},{"value":"/ let bits = data.bits::<Local>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":236957,"byte_end":236993,"line_start":2082,"line_end":2082,"column_start":2,"column_end":38}},{"value":"/ let vec = bits.to_vec();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":236995,"byte_end":237023,"line_start":2083,"line_end":2083,"column_start":2,"column_end":30}},{"value":"/ assert_eq!(bits, vec);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":237025,"byte_end":237051,"line_start":2084,"line_end":2084,"column_start":2,"column_end":28}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":237053,"byte_end":237060,"line_start":2085,"line_end":2085,"column_start":2,"column_end":9}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":237062,"byte_end":237087,"line_start":2086,"line_end":2086,"column_start":2,"column_end":27}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":237089,"byte_end":237098,"line_start":2087,"line_end":2087,"column_start":2,"column_end":11}}]},{"kind":"Trait","id":{"krate":0,"index":855},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":237571,"byte_end":237584,"line_start":2103,"line_end":2103,"column_start":11,"column_end":24},"name":"BitSliceIndex","qualname":"::slice::api::BitSliceIndex","value":"BitSliceIndex<'a, O, T>","parent":null,"children":[{"krate":0,"index":859},{"krate":0,"index":860},{"krate":0,"index":861},{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866}],"decl_id":null,"docs":" Replacement for [`slice::SliceIndex`].","sig":null,"attributes":[{"value":"* Replacement for [`slice::SliceIndex`].\n\nThis trait is stabilized in definition and `type Output` only, but all methods\nare unstable. This makes it unusable in non-`libstd` slice libraries, and so it\nmust be duplicated here.\n\nThere is no tracking issue for `feature(slice_index_methods)`.\n\n[`slice::SliceIndex`]: https://doc.rust-lang.org/stable/core/slice/trait.SliceIndex.html\n**/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":237175,"byte_end":237560,"line_start":2093,"line_end":2102,"column_start":1,"column_end":4}}]},{"kind":"Type","id":{"krate":0,"index":859},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":237672,"byte_end":237677,"line_start":2106,"line_end":2106,"column_start":7,"column_end":12},"name":"Immut","qualname":"::slice::api::BitSliceIndex::Immut","value":"type Immut;","parent":{"krate":0,"index":855},"children":[],"decl_id":null,"docs":" Immutable output type.\n","sig":null,"attributes":[{"value":"/ Immutable output type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":237639,"byte_end":237665,"line_start":2105,"line_end":2105,"column_start":2,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":860},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":237852,"byte_end":237855,"line_start":2111,"line_end":2111,"column_start":7,"column_end":10},"name":"Mut","qualname":"::slice::api::BitSliceIndex::Mut","value":"type Mut;","parent":{"krate":0,"index":855},"children":[],"decl_id":null,"docs":" Mutable output type. This is necessary because `&mut BitSlice` is\n producible for range indices, but `&mut bool` is not producable for\n `usize` indices.\n","sig":null,"attributes":[{"value":"/ Mutable output type. This is necessary because `&mut BitSlice` is","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":237681,"byte_end":237750,"line_start":2108,"line_end":2108,"column_start":2,"column_end":71}},{"value":"/ producible for range indices, but `&mut bool` is not producable for","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":237752,"byte_end":237823,"line_start":2109,"line_end":2109,"column_start":2,"column_end":73}},{"value":"/ `usize` indices.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":237825,"byte_end":237845,"line_start":2110,"line_end":2110,"column_start":2,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":861},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":238132,"byte_end":238135,"line_start":2123,"line_end":2123,"column_start":5,"column_end":8},"name":"get","qualname":"::slice::api::BitSliceIndex::get","value":"fn get(Self, &'a BitSlice<O, T>) -> Option<Self::Immut>","parent":{"krate":0,"index":855},"children":[],"decl_id":null,"docs":" Returns a shared reference to the output at this location, if in bounds.","sig":null,"attributes":[{"value":"/ Returns a shared reference to the output at this location, if in bounds.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":237859,"byte_end":237935,"line_start":2113,"line_end":2113,"column_start":2,"column_end":78}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":237937,"byte_end":237940,"line_start":2114,"line_end":2114,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":237942,"byte_end":237958,"line_start":2115,"line_end":2115,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":237960,"byte_end":237963,"line_start":2116,"line_end":2116,"column_start":2,"column_end":5}},{"value":"/ - `self`: The index value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":237965,"byte_end":237995,"line_start":2117,"line_end":2117,"column_start":2,"column_end":32}},{"value":"/ - `slice`: The slice under index.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":237997,"byte_end":238034,"line_start":2118,"line_end":2118,"column_start":2,"column_end":39}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":238036,"byte_end":238039,"line_start":2119,"line_end":2119,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":238041,"byte_end":238054,"line_start":2120,"line_end":2120,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":238056,"byte_end":238059,"line_start":2121,"line_end":2121,"column_start":2,"column_end":5}},{"value":"/ An immutable output, if `self` is in bounds; otherwise `None`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":238061,"byte_end":238127,"line_start":2122,"line_end":2122,"column_start":2,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":862},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":238471,"byte_end":238478,"line_start":2136,"line_end":2136,"column_start":5,"column_end":12},"name":"get_mut","qualname":"::slice::api::BitSliceIndex::get_mut","value":"fn get_mut(Self, &'a mut BitSlice<O, T>) -> Option<Self::Mut>","parent":{"krate":0,"index":855},"children":[],"decl_id":null,"docs":" Returns a mutable reference to the output at this location, if in\n bounds.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the output at this location, if in","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":238195,"byte_end":238264,"line_start":2125,"line_end":2125,"column_start":2,"column_end":71}},{"value":"/ bounds.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":238266,"byte_end":238277,"line_start":2126,"line_end":2126,"column_start":2,"column_end":13}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":238279,"byte_end":238282,"line_start":2127,"line_end":2127,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":238284,"byte_end":238300,"line_start":2128,"line_end":2128,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":238302,"byte_end":238305,"line_start":2129,"line_end":2129,"column_start":2,"column_end":5}},{"value":"/ - `self`: The index value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":238307,"byte_end":238337,"line_start":2130,"line_end":2130,"column_start":2,"column_end":32}},{"value":"/ - `slice`: The slice under index.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":238339,"byte_end":238376,"line_start":2131,"line_end":2131,"column_start":2,"column_end":39}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":238378,"byte_end":238381,"line_start":2132,"line_end":2132,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":238383,"byte_end":238396,"line_start":2133,"line_end":2133,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":238398,"byte_end":238401,"line_start":2134,"line_end":2134,"column_start":2,"column_end":5}},{"value":"/ A mutable output, if `self` is in bounds; otherwise `None`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":238403,"byte_end":238466,"line_start":2135,"line_end":2135,"column_start":2,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":863},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":239067,"byte_end":239080,"line_start":2156,"line_end":2156,"column_start":12,"column_end":25},"name":"get_unchecked","qualname":"::slice::api::BitSliceIndex::get_unchecked","value":"unsafe fn get_unchecked(Self, &'a BitSlice<O, T>) -> Self::Immut","parent":{"krate":0,"index":855},"children":[],"decl_id":null,"docs":" Returns a shared reference to the output at this location, without\n performing any bounds checking.","sig":null,"attributes":[{"value":"/ Returns a shared reference to the output at this location, without","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":238540,"byte_end":238610,"line_start":2138,"line_end":2138,"column_start":2,"column_end":72}},{"value":"/ performing any bounds checking.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":238612,"byte_end":238647,"line_start":2139,"line_end":2139,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":238649,"byte_end":238652,"line_start":2140,"line_end":2140,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":238654,"byte_end":238670,"line_start":2141,"line_end":2141,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":238672,"byte_end":238675,"line_start":2142,"line_end":2142,"column_start":2,"column_end":5}},{"value":"/ - `self`: The index value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":238677,"byte_end":238707,"line_start":2143,"line_end":2143,"column_start":2,"column_end":32}},{"value":"/ - `slice`: The slice under index.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":238709,"byte_end":238746,"line_start":2144,"line_end":2144,"column_start":2,"column_end":39}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":238748,"byte_end":238751,"line_start":2145,"line_end":2145,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":238753,"byte_end":238766,"line_start":2146,"line_end":2146,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":238768,"byte_end":238771,"line_start":2147,"line_end":2147,"column_start":2,"column_end":5}},{"value":"/ An immutable output.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":238773,"byte_end":238797,"line_start":2148,"line_end":2148,"column_start":2,"column_end":26}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":238799,"byte_end":238802,"line_start":2149,"line_end":2149,"column_start":2,"column_end":5}},{"value":"/ # Safety","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":238804,"byte_end":238816,"line_start":2150,"line_end":2150,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":238818,"byte_end":238821,"line_start":2151,"line_end":2151,"column_start":2,"column_end":5}},{"value":"/ As this function does not perform boundary checking, the caller must","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":238823,"byte_end":238895,"line_start":2152,"line_end":2152,"column_start":2,"column_end":74}},{"value":"/ ensure that `self` is an index within the boundaries of `slice` before","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":238897,"byte_end":238971,"line_start":2153,"line_end":2153,"column_start":2,"column_end":76}},{"value":"/ calling in order to avoid boundary escapes and ensuing safety","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":238973,"byte_end":239038,"line_start":2154,"line_end":2154,"column_start":2,"column_end":67}},{"value":"/ violations.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":239040,"byte_end":239055,"line_start":2155,"line_end":2155,"column_start":2,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":239657,"byte_end":239674,"line_start":2176,"line_end":2176,"column_start":12,"column_end":29},"name":"get_unchecked_mut","qualname":"::slice::api::BitSliceIndex::get_unchecked_mut","value":"unsafe fn get_unchecked_mut(Self, &'a mut BitSlice<O, T>) -> Self::Mut","parent":{"krate":0,"index":855},"children":[],"decl_id":null,"docs":" Returns a mutable reference to the output at this location, without\n performing any bounds checking.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the output at this location, without","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":239132,"byte_end":239203,"line_start":2158,"line_end":2158,"column_start":2,"column_end":73}},{"value":"/ performing any bounds checking.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":239205,"byte_end":239240,"line_start":2159,"line_end":2159,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":239242,"byte_end":239245,"line_start":2160,"line_end":2160,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":239247,"byte_end":239263,"line_start":2161,"line_end":2161,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":239265,"byte_end":239268,"line_start":2162,"line_end":2162,"column_start":2,"column_end":5}},{"value":"/ - `self`: The index value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":239270,"byte_end":239300,"line_start":2163,"line_end":2163,"column_start":2,"column_end":32}},{"value":"/ - `slice`: The slice under index.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":239302,"byte_end":239339,"line_start":2164,"line_end":2164,"column_start":2,"column_end":39}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":239341,"byte_end":239344,"line_start":2165,"line_end":2165,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":239346,"byte_end":239359,"line_start":2166,"line_end":2166,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":239361,"byte_end":239364,"line_start":2167,"line_end":2167,"column_start":2,"column_end":5}},{"value":"/ A mutable output.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":239366,"byte_end":239387,"line_start":2168,"line_end":2168,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":239389,"byte_end":239392,"line_start":2169,"line_end":2169,"column_start":2,"column_end":5}},{"value":"/ # Safety","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":239394,"byte_end":239406,"line_start":2170,"line_end":2170,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":239408,"byte_end":239411,"line_start":2171,"line_end":2171,"column_start":2,"column_end":5}},{"value":"/ As this function does not perform boundary checking, the caller must","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":239413,"byte_end":239485,"line_start":2172,"line_end":2172,"column_start":2,"column_end":74}},{"value":"/ ensure that `self` is an index within the boundaries of `slice` before","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":239487,"byte_end":239561,"line_start":2173,"line_end":2173,"column_start":2,"column_end":76}},{"value":"/ calling in order to avoid boundary escapes and ensuing safety","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":239563,"byte_end":239628,"line_start":2174,"line_end":2174,"column_start":2,"column_end":67}},{"value":"/ violations.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":239630,"byte_end":239645,"line_start":2175,"line_end":2175,"column_start":2,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":865},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":240066,"byte_end":240071,"line_start":2196,"line_end":2196,"column_start":5,"column_end":10},"name":"index","qualname":"::slice::api::BitSliceIndex::index","value":"fn index(Self, &'a BitSlice<O, T>) -> Self::Immut","parent":{"krate":0,"index":855},"children":[],"decl_id":null,"docs":" Returns a shared reference to the output at this location, panicking if\n out of bounds.","sig":null,"attributes":[{"value":"/ Returns a shared reference to the output at this location, panicking if","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":239736,"byte_end":239811,"line_start":2181,"line_end":2181,"column_start":2,"column_end":77}},{"value":"/ out of bounds.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":239813,"byte_end":239831,"line_start":2182,"line_end":2182,"column_start":2,"column_end":20}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":239833,"byte_end":239836,"line_start":2183,"line_end":2183,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":239838,"byte_end":239854,"line_start":2184,"line_end":2184,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":239856,"byte_end":239859,"line_start":2185,"line_end":2185,"column_start":2,"column_end":5}},{"value":"/ - `self`: The index value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":239861,"byte_end":239891,"line_start":2186,"line_end":2186,"column_start":2,"column_end":32}},{"value":"/ - `slice`: The slice under index.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":239893,"byte_end":239930,"line_start":2187,"line_end":2187,"column_start":2,"column_end":39}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":239932,"byte_end":239935,"line_start":2188,"line_end":2188,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":239937,"byte_end":239950,"line_start":2189,"line_end":2189,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":239952,"byte_end":239955,"line_start":2190,"line_end":2190,"column_start":2,"column_end":5}},{"value":"/ An immutable output.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":239957,"byte_end":239981,"line_start":2191,"line_end":2191,"column_start":2,"column_end":26}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":239983,"byte_end":239986,"line_start":2192,"line_end":2192,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":239988,"byte_end":240000,"line_start":2193,"line_end":2193,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":240002,"byte_end":240005,"line_start":2194,"line_end":2194,"column_start":2,"column_end":5}},{"value":"/ This panics if `self` is out of bounds of `slice`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":240007,"byte_end":240061,"line_start":2195,"line_end":2195,"column_start":2,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":240451,"byte_end":240460,"line_start":2213,"line_end":2213,"column_start":5,"column_end":14},"name":"index_mut","qualname":"::slice::api::BitSliceIndex::index_mut","value":"fn index_mut(Self, &'a mut BitSlice<O, T>) -> Self::Mut","parent":{"krate":0,"index":855},"children":[],"decl_id":null,"docs":" Returns a mutable reference to the output at this location, panicking if\n out of bounds.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the output at this location, panicking if","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":240123,"byte_end":240199,"line_start":2198,"line_end":2198,"column_start":2,"column_end":78}},{"value":"/ out of bounds.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":240201,"byte_end":240219,"line_start":2199,"line_end":2199,"column_start":2,"column_end":20}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":240221,"byte_end":240224,"line_start":2200,"line_end":2200,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":240226,"byte_end":240242,"line_start":2201,"line_end":2201,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":240244,"byte_end":240247,"line_start":2202,"line_end":2202,"column_start":2,"column_end":5}},{"value":"/ - `self`: The index value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":240249,"byte_end":240279,"line_start":2203,"line_end":2203,"column_start":2,"column_end":32}},{"value":"/ - `slice`: The slice under index.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":240281,"byte_end":240318,"line_start":2204,"line_end":2204,"column_start":2,"column_end":39}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":240320,"byte_end":240323,"line_start":2205,"line_end":2205,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":240325,"byte_end":240338,"line_start":2206,"line_end":2206,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":240340,"byte_end":240343,"line_start":2207,"line_end":2207,"column_start":2,"column_end":5}},{"value":"/ A mutable output.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":240345,"byte_end":240366,"line_start":2208,"line_end":2208,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":240368,"byte_end":240371,"line_start":2209,"line_end":2209,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":240373,"byte_end":240385,"line_start":2210,"line_end":2210,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":240387,"byte_end":240390,"line_start":2211,"line_end":2211,"column_start":2,"column_end":5}},{"value":"/ This panics if `self` is out of bounds of `slice`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":240392,"byte_end":240446,"line_start":2212,"line_end":2212,"column_start":2,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":873},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":240666,"byte_end":240669,"line_start":2221,"line_end":2221,"column_start":5,"column_end":8},"name":"get","qualname":"<usize as slice::api::BitSliceIndex>::get","value":"fn get(Self, &'a BitSlice<O, T>) -> Option<Self::Immut>","parent":{"krate":0,"index":855},"children":[],"decl_id":{"krate":0,"index":861},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":874},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":240833,"byte_end":240840,"line_start":2230,"line_end":2230,"column_start":5,"column_end":12},"name":"get_mut","qualname":"<usize as slice::api::BitSliceIndex>::get_mut","value":"fn get_mut(Self, &'a mut BitSlice<O, T>) -> Option<Self::Mut>","parent":{"krate":0,"index":855},"children":[],"decl_id":{"krate":0,"index":862},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":875},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":241017,"byte_end":241030,"line_start":2239,"line_end":2239,"column_start":12,"column_end":25},"name":"get_unchecked","qualname":"<usize as slice::api::BitSliceIndex>::get_unchecked","value":"unsafe fn get_unchecked(Self, &'a BitSlice<O, T>) -> Self::Immut","parent":{"krate":0,"index":855},"children":[],"decl_id":{"krate":0,"index":863},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":876},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":241316,"byte_end":241333,"line_start":2253,"line_end":2253,"column_start":12,"column_end":29},"name":"get_unchecked_mut","qualname":"<usize as slice::api::BitSliceIndex>::get_unchecked_mut","value":"unsafe fn get_unchecked_mut(Self, &'a mut BitSlice<O, T>) -> Self::Mut","parent":{"krate":0,"index":855},"children":[],"decl_id":{"krate":0,"index":864},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":241295,"byte_end":241304,"line_start":2252,"line_end":2252,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":877},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":241665,"byte_end":241670,"line_start":2268,"line_end":2268,"column_start":5,"column_end":10},"name":"index","qualname":"<usize as slice::api::BitSliceIndex>::index","value":"fn index(Self, &'a BitSlice<O, T>) -> Self::Immut","parent":{"krate":0,"index":855},"children":[],"decl_id":{"krate":0,"index":865},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":241831,"byte_end":241840,"line_start":2274,"line_end":2274,"column_start":5,"column_end":14},"name":"index_mut","qualname":"<usize as slice::api::BitSliceIndex>::index_mut","value":"fn index_mut(Self, &'a mut BitSlice<O, T>) -> Self::Mut","parent":{"krate":0,"index":855},"children":[],"decl_id":{"krate":0,"index":866},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":246455,"byte_end":246458,"line_start":2454,"line_end":2454,"column_start":5,"column_end":8},"name":"get","qualname":"<RangeFull as slice::api::BitSliceIndex>::get","value":"fn get(Self, Self::Immut) -> Option<Self::Immut>","parent":{"krate":0,"index":855},"children":[],"decl_id":{"krate":0,"index":861},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":246441,"byte_end":246450,"line_start":2453,"line_end":2453,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":246543,"byte_end":246550,"line_start":2459,"line_end":2459,"column_start":5,"column_end":12},"name":"get_mut","qualname":"<RangeFull as slice::api::BitSliceIndex>::get_mut","value":"fn get_mut(Self, Self::Mut) -> Option<Self::Mut>","parent":{"krate":0,"index":855},"children":[],"decl_id":{"krate":0,"index":862},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":246529,"byte_end":246538,"line_start":2458,"line_end":2458,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":890},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":246638,"byte_end":246651,"line_start":2464,"line_end":2464,"column_start":12,"column_end":25},"name":"get_unchecked","qualname":"<RangeFull as slice::api::BitSliceIndex>::get_unchecked","value":"unsafe fn get_unchecked(Self, Self::Immut) -> Self::Immut","parent":{"krate":0,"index":855},"children":[],"decl_id":{"krate":0,"index":863},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":246617,"byte_end":246626,"line_start":2463,"line_end":2463,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":246729,"byte_end":246746,"line_start":2469,"line_end":2469,"column_start":12,"column_end":29},"name":"get_unchecked_mut","qualname":"<RangeFull as slice::api::BitSliceIndex>::get_unchecked_mut","value":"unsafe fn get_unchecked_mut(Self, Self::Mut) -> Self::Mut","parent":{"krate":0,"index":855},"children":[],"decl_id":{"krate":0,"index":864},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":246708,"byte_end":246717,"line_start":2468,"line_end":2468,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":246813,"byte_end":246818,"line_start":2474,"line_end":2474,"column_start":5,"column_end":10},"name":"index","qualname":"<RangeFull as slice::api::BitSliceIndex>::index","value":"fn index(Self, Self::Immut) -> Self::Immut","parent":{"krate":0,"index":855},"children":[],"decl_id":{"krate":0,"index":865},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":246799,"byte_end":246808,"line_start":2473,"line_end":2473,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":246889,"byte_end":246898,"line_start":2479,"line_end":2479,"column_start":5,"column_end":14},"name":"index_mut","qualname":"<RangeFull as slice::api::BitSliceIndex>::index_mut","value":"fn index_mut(Self, Self::Mut) -> Self::Mut","parent":{"krate":0,"index":855},"children":[],"decl_id":{"krate":0,"index":866},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":246875,"byte_end":246884,"line_start":2478,"line_end":2478,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":247336,"byte_end":247345,"line_start":23,"line_end":23,"column_start":5,"column_end":14},"name":"into_iter","qualname":"<&'a BitSlice<O, T> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8398},"children":[],"decl_id":{"krate":2,"index":8401},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3925},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":247790,"byte_end":247794,"line_start":52,"line_end":52,"column_start":12,"column_end":16},"name":"Iter","qualname":"::slice::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":3929}],"decl_id":null,"docs":" Immutable slice iterator","sig":null,"attributes":[{"value":"* Immutable slice iterator\n\nThis struct is created by the [`iter`] method on [`BitSlice`]s.\n\n# Examples\n\nBasic usage:\n\n```rust\n# use bitvec::prelude::*;\nlet data = 5u8;\nlet bits = data.bits::<Lsb0>();\n\nfor bit in bits[.. 4].iter() {\n    println!(\"{}\", bit);\n}\n```\n\n[`BitSlice`]: struct.BitSlice.html\n[`iter`]: struct.BitSlice.html#method.iter\n**/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":247406,"byte_end":247754,"line_start":30,"line_end":50,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":248209,"byte_end":248220,"line_start":65,"line_end":65,"column_start":9,"column_end":20},"name":"as_bitslice","qualname":"<Iter>::as_bitslice","value":"fn as_bitslice<'_>(&'_ Self) -> &'a BitSlice<O, T>","parent":null,"children":[],"decl_id":null,"docs":" Views the underlying data as a subslice of the original data.","sig":null,"attributes":[{"value":"/ Views the underlying data as a subslice of the original data.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":247996,"byte_end":248061,"line_start":60,"line_end":60,"column_start":2,"column_end":67}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":248063,"byte_end":248066,"line_start":61,"line_end":61,"column_start":2,"column_end":5}},{"value":"/ This has the same lifetime as the original slice, and so the iterator","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":248068,"byte_end":248141,"line_start":62,"line_end":62,"column_start":2,"column_end":75}},{"value":"/ can continue to be used while this exists.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":248143,"byte_end":248189,"line_start":63,"line_end":63,"column_start":2,"column_end":48}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":248191,"byte_end":248200,"line_start":64,"line_end":64,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":248381,"byte_end":248389,"line_start":73,"line_end":73,"column_start":9,"column_end":17},"name":"as_slice","qualname":"<Iter>::as_slice","value":"fn as_slice<'_>(&'_ Self) -> &'a [T]","parent":null,"children":[],"decl_id":null,"docs":" Views the underlying buffer.","sig":null,"attributes":[{"value":"/ Views the underlying buffer.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":248270,"byte_end":248302,"line_start":69,"line_end":69,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":248304,"byte_end":248307,"line_start":70,"line_end":70,"column_start":2,"column_end":5}},{"value":"/ This has the same rules as `BitSlice::as_slice`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":248309,"byte_end":248361,"line_start":71,"line_end":71,"column_start":2,"column_end":54}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":248363,"byte_end":248372,"line_start":72,"line_end":72,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":935},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":248894,"byte_end":248898,"line_start":98,"line_end":98,"column_start":5,"column_end":9},"name":"next","qualname":"<Iter as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8598},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":248880,"byte_end":248889,"line_start":97,"line_end":97,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":937},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":249024,"byte_end":249033,"line_start":106,"line_end":106,"column_start":5,"column_end":14},"name":"size_hint","qualname":"<Iter as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8602},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":249010,"byte_end":249019,"line_start":105,"line_end":105,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":938},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":249137,"byte_end":249142,"line_start":112,"line_end":112,"column_start":5,"column_end":10},"name":"count","qualname":"<Iter as std::iter::Iterator>::count","value":"fn count(Self) -> usize","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8603},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":249123,"byte_end":249132,"line_start":111,"line_end":111,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":249192,"byte_end":249195,"line_start":117,"line_end":117,"column_start":5,"column_end":8},"name":"nth","qualname":"<Iter as std::iter::Iterator>::nth","value":"fn nth<'_>(&'_ mut Self, usize) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8609},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":249178,"byte_end":249187,"line_start":116,"line_end":116,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":941},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":249386,"byte_end":249390,"line_start":127,"line_end":127,"column_start":5,"column_end":9},"name":"last","qualname":"<Iter as std::iter::Iterator>::last","value":"fn last(Self) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8605},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":249372,"byte_end":249381,"line_start":126,"line_end":126,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":946},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":249557,"byte_end":249566,"line_start":135,"line_end":135,"column_start":5,"column_end":14},"name":"next_back","qualname":"<Iter as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8442},"children":[],"decl_id":{"krate":2,"index":8443},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":249543,"byte_end":249552,"line_start":134,"line_end":134,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":957},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":249929,"byte_end":249935,"line_start":151,"line_end":151,"column_start":5,"column_end":11},"name":"as_ref","qualname":"<Iter as std::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ BitSlice<O, T>","parent":{"krate":2,"index":3160},"children":[],"decl_id":{"krate":2,"index":3162},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":961},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":250061,"byte_end":250067,"line_start":158,"line_end":158,"column_start":5,"column_end":11},"name":"as_ref","qualname":"<Iter as std::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ [T]","parent":{"krate":2,"index":3160},"children":[],"decl_id":{"krate":2,"index":3162},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":968},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":250280,"byte_end":250289,"line_start":168,"line_end":168,"column_start":5,"column_end":14},"name":"into_iter","qualname":"<&'a mut BitSlice<O, T> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8398},"children":[],"decl_id":{"krate":2,"index":8401},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3940},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":250788,"byte_end":250795,"line_start":198,"line_end":198,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::slice::iter::IterMut","value":"IterMut {  }","parent":null,"children":[{"krate":0,"index":3944}],"decl_id":null,"docs":" Mutable slice iterator.","sig":null,"attributes":[{"value":"* Mutable slice iterator.\n\nThis struct is created by the [`iter_mut`] method on [`BitSlice`]s.\n\n# Examples\n\nBasic usage:\n\n```rust\n# use bitvec::prelude::*;\nlet mut data = 0u8;\nlet bits = data.bits_mut::<Msb0>();\nassert!(bits.not_any());\nfor mut bit in bits.iter_mut() {\n    *bit = true;\n}\nassert!(bits.all());\n```\n\n[`BitSlice`]: struct.BitSlice.html\n[`iter_mut`]: struct.BitSlice.html#method.iter_mut\n**/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":250353,"byte_end":250759,"line_start":175,"line_end":196,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":973},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":251916,"byte_end":251929,"line_start":239,"line_end":239,"column_start":9,"column_end":22},"name":"into_bitslice","qualname":"<IterMut>::into_bitslice","value":"fn into_bitslice(Self) -> &'a mut BitSlice<O, T>","parent":null,"children":[],"decl_id":null,"docs":" Views the underlying data as a subslice of the original data.","sig":null,"attributes":[{"value":"/ Views the underlying data as a subslice of the original data.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":251004,"byte_end":251069,"line_start":206,"line_end":206,"column_start":2,"column_end":67}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":251071,"byte_end":251074,"line_start":207,"line_end":207,"column_start":2,"column_end":5}},{"value":"/ To avoid creating `&mut` references that alias, this is forced to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":251076,"byte_end":251145,"line_start":208,"line_end":208,"column_start":2,"column_end":71}},{"value":"/ consume the iterator.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":251147,"byte_end":251172,"line_start":209,"line_end":209,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":251174,"byte_end":251177,"line_start":210,"line_end":210,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":251179,"byte_end":251193,"line_start":211,"line_end":211,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":251195,"byte_end":251198,"line_start":212,"line_end":212,"column_start":2,"column_end":5}},{"value":"/ Basic usage:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":251200,"byte_end":251216,"line_start":213,"line_end":213,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":251218,"byte_end":251221,"line_start":214,"line_end":214,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":251223,"byte_end":251234,"line_start":215,"line_end":215,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":251236,"byte_end":251265,"line_start":216,"line_end":216,"column_start":2,"column_end":31}},{"value":"/ let mut data = 0u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":251267,"byte_end":251290,"line_start":217,"line_end":217,"column_start":2,"column_end":25}},{"value":"/ let bits = data.bits_mut::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":251292,"byte_end":251331,"line_start":218,"line_end":218,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":251333,"byte_end":251336,"line_start":219,"line_end":219,"column_start":2,"column_end":5}},{"value":"/ {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":251338,"byte_end":251343,"line_start":220,"line_end":220,"column_start":2,"column_end":7}},{"value":"/     // Get an iterator over the bits:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":251345,"byte_end":251386,"line_start":221,"line_end":221,"column_start":2,"column_end":43}},{"value":"/     let mut iter = bits.iter_mut();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":251388,"byte_end":251427,"line_start":222,"line_end":222,"column_start":2,"column_end":41}},{"value":"/     // Advance to the next bit:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":251429,"byte_end":251464,"line_start":223,"line_end":223,"column_start":2,"column_end":37}},{"value":"/     iter.next();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":251466,"byte_end":251486,"line_start":224,"line_end":224,"column_start":2,"column_end":22}},{"value":"/     // If we print this bitslice, it will be seven bits long.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":251488,"byte_end":251553,"line_start":225,"line_end":225,"column_start":2,"column_end":67}},{"value":"/     println!(\"{}\", iter.into_bitslice());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":251555,"byte_end":251600,"line_start":226,"line_end":226,"column_start":2,"column_end":47}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":251602,"byte_end":251607,"line_start":227,"line_end":227,"column_start":2,"column_end":7}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":251609,"byte_end":251612,"line_start":228,"line_end":228,"column_start":2,"column_end":5}},{"value":"/ // Now let’s modify a bit of the slice:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":251614,"byte_end":251659,"line_start":229,"line_end":229,"column_start":2,"column_end":45}},{"value":"/ {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":251661,"byte_end":251666,"line_start":230,"line_end":230,"column_start":2,"column_end":7}},{"value":"/     // Rebuild the iterator:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":251668,"byte_end":251700,"line_start":231,"line_end":231,"column_start":2,"column_end":34}},{"value":"/     let mut iter = bits.iter_mut();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":251702,"byte_end":251741,"line_start":232,"line_end":232,"column_start":2,"column_end":41}},{"value":"/     // Change the value of the first bit:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":251743,"byte_end":251788,"line_start":233,"line_end":233,"column_start":2,"column_end":47}},{"value":"/     *iter.next().unwrap() = true;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":251790,"byte_end":251827,"line_start":234,"line_end":234,"column_start":2,"column_end":39}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":251829,"byte_end":251834,"line_start":235,"line_end":235,"column_start":2,"column_end":7}},{"value":"/ assert!(bits[0]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":251836,"byte_end":251857,"line_start":236,"line_end":236,"column_start":2,"column_end":23}},{"value":"/ println!(\"{}\", bits); // [10000000]","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":251859,"byte_end":251898,"line_start":237,"line_end":237,"column_start":2,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":251900,"byte_end":251907,"line_start":238,"line_end":238,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":974},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":252126,"byte_end":252136,"line_start":247,"line_end":247,"column_start":9,"column_end":19},"name":"into_slice","qualname":"<IterMut>::into_slice","value":"fn into_slice(Self) -> &'a mut [T]","parent":null,"children":[],"decl_id":null,"docs":" Views the underlying buffer.","sig":null,"attributes":[{"value":"/ Views the underlying buffer.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":251982,"byte_end":252014,"line_start":243,"line_end":243,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":252016,"byte_end":252019,"line_start":244,"line_end":244,"column_start":2,"column_end":5}},{"value":"/ To avoid creating `&mut` references that alias, this is forced to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":252021,"byte_end":252090,"line_start":245,"line_end":245,"column_start":2,"column_end":71}},{"value":"/ consume the iterator.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":252092,"byte_end":252117,"line_start":246,"line_end":246,"column_start":2,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":981},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":252416,"byte_end":252420,"line_start":262,"line_end":262,"column_start":5,"column_end":9},"name":"next","qualname":"<IterMut as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8598},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":252402,"byte_end":252411,"line_start":261,"line_end":261,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":983},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":252603,"byte_end":252612,"line_start":272,"line_end":272,"column_start":5,"column_end":14},"name":"size_hint","qualname":"<IterMut as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8602},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":252589,"byte_end":252598,"line_start":271,"line_end":271,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":984},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":252716,"byte_end":252721,"line_start":278,"line_end":278,"column_start":5,"column_end":10},"name":"count","qualname":"<IterMut as std::iter::Iterator>::count","value":"fn count(Self) -> usize","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8603},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":252702,"byte_end":252711,"line_start":277,"line_end":277,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":985},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":252777,"byte_end":252780,"line_start":283,"line_end":283,"column_start":5,"column_end":8},"name":"nth","qualname":"<IterMut as std::iter::Iterator>::nth","value":"fn nth<'_>(&'_ mut Self, usize) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8609},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":252763,"byte_end":252772,"line_start":282,"line_end":282,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":987},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":252979,"byte_end":252983,"line_start":293,"line_end":293,"column_start":5,"column_end":9},"name":"last","qualname":"<IterMut as std::iter::Iterator>::last","value":"fn last(Self) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8605},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":252965,"byte_end":252974,"line_start":292,"line_end":292,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":992},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":253153,"byte_end":253162,"line_start":301,"line_end":301,"column_start":5,"column_end":14},"name":"next_back","qualname":"<IterMut as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8442},"children":[],"decl_id":{"krate":2,"index":8443},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":253139,"byte_end":253148,"line_start":300,"line_end":300,"column_start":2,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":3950},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":253930,"byte_end":253936,"line_start":329,"line_end":329,"column_start":12,"column_end":18},"name":"Chunks","qualname":"::slice::iter::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":3954},{"krate":0,"index":3955}],"decl_id":null,"docs":" An iterator over a slice in (non-overlapping) chunks (`width` bits at a\ntime), starting at the beginning of the slice.","sig":null,"attributes":[{"value":"* An iterator over a slice in (non-overlapping) chunks (`width` bits at a\ntime), starting at the beginning of the slice.\n\nWhen the slice length is not evenly divided by the chunk size, the last slice of\nthe iteration will be the remainder.\n\nThis struct is created by the [`chunks`] method on [`BitSlice`]s.\n\n[`BitSlice`]: struct.BitSlice.html\n[`chunks`]: struct.BitSlice.html#method.chunks\n**/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":253499,"byte_end":253894,"line_start":317,"line_end":327,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1005},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":254266,"byte_end":254270,"line_start":342,"line_end":342,"column_start":5,"column_end":9},"name":"next","qualname":"<Chunks as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8598},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":254252,"byte_end":254261,"line_start":341,"line_end":341,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1006},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":254567,"byte_end":254576,"line_start":356,"line_end":356,"column_start":5,"column_end":14},"name":"size_hint","qualname":"<Chunks as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8602},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":254553,"byte_end":254562,"line_start":355,"line_end":355,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1007},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":254814,"byte_end":254819,"line_start":368,"line_end":368,"column_start":5,"column_end":10},"name":"count","qualname":"<Chunks as std::iter::Iterator>::count","value":"fn count(Self) -> usize","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8603},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":254800,"byte_end":254809,"line_start":367,"line_end":367,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":254869,"byte_end":254872,"line_start":373,"line_end":373,"column_start":5,"column_end":8},"name":"nth","qualname":"<Chunks as std::iter::Iterator>::nth","value":"fn nth<'_>(&'_ mut Self, usize) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8609},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":254855,"byte_end":254864,"line_start":372,"line_end":372,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1009},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":255177,"byte_end":255181,"line_start":385,"line_end":385,"column_start":5,"column_end":9},"name":"last","qualname":"<Chunks as std::iter::Iterator>::last","value":"fn last(Self) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8605},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":255163,"byte_end":255172,"line_start":384,"line_end":384,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":255350,"byte_end":255359,"line_start":393,"line_end":393,"column_start":5,"column_end":14},"name":"next_back","qualname":"<Chunks as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8442},"children":[],"decl_id":{"krate":2,"index":8443},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":255336,"byte_end":255345,"line_start":392,"line_end":392,"column_start":2,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":3966},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":256359,"byte_end":256370,"line_start":427,"line_end":427,"column_start":12,"column_end":23},"name":"ChunksExact","qualname":"::slice::iter::ChunksExact","value":"ChunksExact {  }","parent":null,"children":[{"krate":0,"index":3970},{"krate":0,"index":3971},{"krate":0,"index":3972}],"decl_id":null,"docs":" An iterator over a slice in (non-overlapping) chunks (`width` bits at a\ntime), starting at the beginning of the slice.","sig":null,"attributes":[{"value":"* An iterator over a slice in (non-overlapping) chunks (`width` bits at a\ntime), starting at the beginning of the slice.\n\nWhen the slice length is not evenly divided by the chunk size, the last up to\n`width - 1` bits will be omitted but can be retrieved from the\n[`remainder`] function from the iterator.\n\nThis struct is created by the [`chunks_exact`] method on [`BitSlice`]s.\n\n[`BitSlice`]: struct.BitSlice.html\n[`chunks_exact`]: struct.BitSlice.html#method.chunks_exact\n[`remainder`]: #method.remainder\n**/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":255812,"byte_end":256323,"line_start":413,"line_end":425,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1025},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":256891,"byte_end":256900,"line_start":442,"line_end":442,"column_start":9,"column_end":18},"name":"remainder","qualname":"<ChunksExact>::remainder","value":"fn remainder<'_>(&'_ Self) -> &'a BitSlice<O, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remainder of the original slice that is not going to be\n returned by the iterator. The returned slice has at most\n `width - 1` bits.\n","sig":null,"attributes":[{"value":"/ Returns the remainder of the original slice that is not going to be","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":256726,"byte_end":256797,"line_start":439,"line_end":439,"column_start":2,"column_end":73}},{"value":"/ returned by the iterator. The returned slice has at most","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":256799,"byte_end":256859,"line_start":440,"line_end":440,"column_start":2,"column_end":62}},{"value":"/ `width - 1` bits.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":256861,"byte_end":256882,"line_start":441,"line_end":441,"column_start":2,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1031},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":257088,"byte_end":257092,"line_start":452,"line_end":452,"column_start":5,"column_end":9},"name":"next","qualname":"<ChunksExact as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8598},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":257074,"byte_end":257083,"line_start":451,"line_end":451,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1032},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":257367,"byte_end":257376,"line_start":467,"line_end":467,"column_start":5,"column_end":14},"name":"size_hint","qualname":"<ChunksExact as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8602},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":257353,"byte_end":257362,"line_start":466,"line_end":466,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1033},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":257493,"byte_end":257498,"line_start":473,"line_end":473,"column_start":5,"column_end":10},"name":"count","qualname":"<ChunksExact as std::iter::Iterator>::count","value":"fn count(Self) -> usize","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8603},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":257479,"byte_end":257488,"line_start":472,"line_end":472,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1034},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":257548,"byte_end":257551,"line_start":478,"line_end":478,"column_start":5,"column_end":8},"name":"nth","qualname":"<ChunksExact as std::iter::Iterator>::nth","value":"fn nth<'_>(&'_ mut Self, usize) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8609},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":257534,"byte_end":257543,"line_start":477,"line_end":477,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1035},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":257839,"byte_end":257843,"line_start":489,"line_end":489,"column_start":5,"column_end":9},"name":"last","qualname":"<ChunksExact as std::iter::Iterator>::last","value":"fn last(Self) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8605},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":257825,"byte_end":257834,"line_start":488,"line_end":488,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1040},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":258017,"byte_end":258026,"line_start":497,"line_end":497,"column_start":5,"column_end":14},"name":"next_back","qualname":"<ChunksExact as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8442},"children":[],"decl_id":{"krate":2,"index":8443},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":258003,"byte_end":258012,"line_start":496,"line_end":496,"column_start":2,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":3983},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":259054,"byte_end":259068,"line_start":532,"line_end":532,"column_start":12,"column_end":26},"name":"ChunksExactMut","qualname":"::slice::iter::ChunksExactMut","value":"ChunksExactMut {  }","parent":null,"children":[{"krate":0,"index":3987},{"krate":0,"index":3988},{"krate":0,"index":3989}],"decl_id":null,"docs":" An iterator over a slice in (non-ovelapping) mutable chunks (`width` bits at\na time), starting at the beginning of the slice.","sig":null,"attributes":[{"value":"* An iterator over a slice in (non-ovelapping) mutable chunks (`width` bits at\na time), starting at the beginning of the slice.\n\nWhen the slice length is not evenly divided by the chunk size, the last up to\n`width - 1` elements will be omitted but can be retrieved from the\n[`into_remainder`] function from the iterator.\n\nThis struct is created by the [`chunks_exact_mut`] method on [`BitSlice`]s.\n\n[`BitSlice`]: struct.BitSlice.html\n[`chunks_exact_mut`]: struct.BitSlice.html#method.chunks_exact_mut\n[`into_remainder`]: #method.into_remainder\n**/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":258476,"byte_end":259025,"line_start":518,"line_end":530,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1051},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":259600,"byte_end":259614,"line_start":547,"line_end":547,"column_start":9,"column_end":23},"name":"into_remainder","qualname":"<ChunksExactMut>::into_remainder","value":"fn into_remainder(Self) -> &'a mut BitSlice<O, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remainder of the original slice that is not going to be\n returned by the iterator. The returned slice has at most\n `width - 1` bits.\n","sig":null,"attributes":[{"value":"/ Returns the remainder of the original slice that is not going to be","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":259435,"byte_end":259506,"line_start":544,"line_end":544,"column_start":2,"column_end":73}},{"value":"/ returned by the iterator. The returned slice has at most","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":259508,"byte_end":259568,"line_start":545,"line_end":545,"column_start":2,"column_end":62}},{"value":"/ `width - 1` bits.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":259570,"byte_end":259591,"line_start":546,"line_end":546,"column_start":2,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1057},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":259812,"byte_end":259816,"line_start":557,"line_end":557,"column_start":5,"column_end":9},"name":"next","qualname":"<ChunksExactMut as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8598},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":259798,"byte_end":259807,"line_start":556,"line_end":556,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1058},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":260106,"byte_end":260115,"line_start":570,"line_end":570,"column_start":5,"column_end":14},"name":"size_hint","qualname":"<ChunksExactMut as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8602},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":260092,"byte_end":260101,"line_start":569,"line_end":569,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1059},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":260232,"byte_end":260237,"line_start":576,"line_end":576,"column_start":5,"column_end":10},"name":"count","qualname":"<ChunksExactMut as std::iter::Iterator>::count","value":"fn count(Self) -> usize","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8603},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":260218,"byte_end":260227,"line_start":575,"line_end":575,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1060},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":260287,"byte_end":260290,"line_start":581,"line_end":581,"column_start":5,"column_end":8},"name":"nth","qualname":"<ChunksExactMut as std::iter::Iterator>::nth","value":"fn nth<'_>(&'_ mut Self, usize) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8609},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":260273,"byte_end":260282,"line_start":580,"line_end":580,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1061},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":260605,"byte_end":260609,"line_start":592,"line_end":592,"column_start":5,"column_end":9},"name":"last","qualname":"<ChunksExactMut as std::iter::Iterator>::last","value":"fn last(Self) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8605},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":260591,"byte_end":260600,"line_start":591,"line_end":591,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1066},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":260786,"byte_end":260795,"line_start":600,"line_end":600,"column_start":5,"column_end":14},"name":"next_back","qualname":"<ChunksExactMut as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8442},"children":[],"decl_id":{"krate":2,"index":8443},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":260772,"byte_end":260781,"line_start":599,"line_end":599,"column_start":2,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":3995},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":261703,"byte_end":261712,"line_start":631,"line_end":631,"column_start":12,"column_end":21},"name":"ChunksMut","qualname":"::slice::iter::ChunksMut","value":"ChunksMut {  }","parent":null,"children":[{"krate":0,"index":3999},{"krate":0,"index":4000}],"decl_id":null,"docs":" An iterator over a slice in (non-overlapping) mutable chunks (`width` bits\nat a time), starting at the beginning of the slice.","sig":null,"attributes":[{"value":"* An iterator over a slice in (non-overlapping) mutable chunks (`width` bits\nat a time), starting at the beginning of the slice.\n\nWhen the slice length is not evenly divided by the chunk size, the last slice of\nthe iteration will be the remainder.\n\nThis struct is created by the [`chunks_mut`] method on [`BitSlice`]s.\n\n[`BitSlice`]: struct.BitSlice.html\n[`chunks_mut`]: struct.BitSlice.html#chunks_mut\n**/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":261266,"byte_end":261674,"line_start":619,"line_end":629,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1078},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":262053,"byte_end":262057,"line_start":644,"line_end":644,"column_start":5,"column_end":9},"name":"next","qualname":"<ChunksMut as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8598},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":262039,"byte_end":262048,"line_start":643,"line_end":643,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1079},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":262369,"byte_end":262378,"line_start":658,"line_end":658,"column_start":5,"column_end":14},"name":"size_hint","qualname":"<ChunksMut as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8602},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":262355,"byte_end":262364,"line_start":657,"line_end":657,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":262616,"byte_end":262621,"line_start":670,"line_end":670,"column_start":5,"column_end":10},"name":"count","qualname":"<ChunksMut as std::iter::Iterator>::count","value":"fn count(Self) -> usize","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8603},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":262602,"byte_end":262611,"line_start":669,"line_end":669,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1081},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":262671,"byte_end":262674,"line_start":675,"line_end":675,"column_start":5,"column_end":8},"name":"nth","qualname":"<ChunksMut as std::iter::Iterator>::nth","value":"fn nth<'_>(&'_ mut Self, usize) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8609},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":262657,"byte_end":262666,"line_start":674,"line_end":674,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1082},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":262989,"byte_end":262993,"line_start":686,"line_end":686,"column_start":5,"column_end":9},"name":"last","qualname":"<ChunksMut as std::iter::Iterator>::last","value":"fn last(Self) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8605},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":262975,"byte_end":262984,"line_start":685,"line_end":685,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1087},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":263165,"byte_end":263174,"line_start":694,"line_end":694,"column_start":5,"column_end":14},"name":"next_back","qualname":"<ChunksMut as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8442},"children":[],"decl_id":{"krate":2,"index":8443},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":263151,"byte_end":263160,"line_start":693,"line_end":693,"column_start":2,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":4006},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":264123,"byte_end":264130,"line_start":727,"line_end":727,"column_start":12,"column_end":19},"name":"RChunks","qualname":"::slice::iter::RChunks","value":"RChunks {  }","parent":null,"children":[{"krate":0,"index":4010},{"krate":0,"index":4011}],"decl_id":null,"docs":" An iterator over a slice in (non-overlapping) chunks (`width` bits at a\ntime), starting at the end of the slice.","sig":null,"attributes":[{"value":"* An iterator over a slice in (non-overlapping) chunks (`width` bits at a\ntime), starting at the end of the slice.\n\nWhen the slice length is not evenly divided by the chunk size, the last slice of\nthe iteration will be the remainder.\n\nThis struct is created by the [`rchunks`] method on [`BitSlice`]s.\n\n[`BitSlice`]: struct.BitSlice.html\n[`rchunks`]: struct.BitSlice.html#method.rchunks\n**/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":263695,"byte_end":264087,"line_start":715,"line_end":725,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1099},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":264461,"byte_end":264465,"line_start":740,"line_end":740,"column_start":5,"column_end":9},"name":"next","qualname":"<RChunks as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8598},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":264447,"byte_end":264456,"line_start":739,"line_end":739,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1100},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":264711,"byte_end":264720,"line_start":753,"line_end":753,"column_start":5,"column_end":14},"name":"size_hint","qualname":"<RChunks as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8602},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":264697,"byte_end":264706,"line_start":752,"line_end":752,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1101},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":264960,"byte_end":264965,"line_start":765,"line_end":765,"column_start":5,"column_end":10},"name":"count","qualname":"<RChunks as std::iter::Iterator>::count","value":"fn count(Self) -> usize","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8603},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":264946,"byte_end":264955,"line_start":764,"line_end":764,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1102},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":265015,"byte_end":265018,"line_start":770,"line_end":770,"column_start":5,"column_end":8},"name":"nth","qualname":"<RChunks as std::iter::Iterator>::nth","value":"fn nth<'_>(&'_ mut Self, usize) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8609},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":265001,"byte_end":265010,"line_start":769,"line_end":769,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1103},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":265340,"byte_end":265344,"line_start":783,"line_end":783,"column_start":5,"column_end":9},"name":"last","qualname":"<RChunks as std::iter::Iterator>::last","value":"fn last(Self) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8605},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":265326,"byte_end":265335,"line_start":782,"line_end":782,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1108},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":265514,"byte_end":265523,"line_start":791,"line_end":791,"column_start":5,"column_end":14},"name":"next_back","qualname":"<RChunks as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8442},"children":[],"decl_id":{"krate":2,"index":8443},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":265500,"byte_end":265509,"line_start":790,"line_end":790,"column_start":2,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":4022},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":266510,"byte_end":266522,"line_start":825,"line_end":825,"column_start":12,"column_end":24},"name":"RChunksExact","qualname":"::slice::iter::RChunksExact","value":"RChunksExact {  }","parent":null,"children":[{"krate":0,"index":4026},{"krate":0,"index":4027},{"krate":0,"index":4028}],"decl_id":null,"docs":" An iterator over a slice in (non-overlapping) chunks (`width` bits\nat a time), starting at the end of the slice.","sig":null,"attributes":[{"value":"* An iterator over a slice in (non-overlapping) chunks (`width` bits\nat a time), starting at the end of the slice.\n\nWhen the slice length is not evenly divided by the chunk size, the last up to\n`width - 1` bits will be omitted but can be retrieved from the [`remainder`]\nfunction from the iterator.\n\nThis struct is created by the [`rchunks_exact`] method on [`BitSlice`]s.\n\n[`BitSlice`]: struct.BitSlice.html\n[`rchunks_exact`]: struct.BitSlice.html#method.rchunks_exact\n[`remainder`]: #method.remainder\n**/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":265966,"byte_end":266474,"line_start":811,"line_end":823,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1119},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":267044,"byte_end":267053,"line_start":840,"line_end":840,"column_start":9,"column_end":18},"name":"remainder","qualname":"<RChunksExact>::remainder","value":"fn remainder<'_>(&'_ Self) -> &'a BitSlice<O, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remainder of the original slice that is not going to be\n returned by the iterator. The returned slice has at most\n `width - 1` bits.\n","sig":null,"attributes":[{"value":"/ Returns the remainder of the original slice that is not going to be","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":266879,"byte_end":266950,"line_start":837,"line_end":837,"column_start":2,"column_end":73}},{"value":"/ returned by the iterator. The returned slice has at most","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":266952,"byte_end":267012,"line_start":838,"line_end":838,"column_start":2,"column_end":62}},{"value":"/ `width - 1` bits.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":267014,"byte_end":267035,"line_start":839,"line_end":839,"column_start":2,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1125},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":267242,"byte_end":267246,"line_start":850,"line_end":850,"column_start":5,"column_end":9},"name":"next","qualname":"<RChunksExact as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8598},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":267228,"byte_end":267237,"line_start":849,"line_end":849,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1126},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":267525,"byte_end":267534,"line_start":865,"line_end":865,"column_start":5,"column_end":14},"name":"size_hint","qualname":"<RChunksExact as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8602},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":267511,"byte_end":267520,"line_start":864,"line_end":864,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1127},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":267651,"byte_end":267656,"line_start":871,"line_end":871,"column_start":5,"column_end":10},"name":"count","qualname":"<RChunksExact as std::iter::Iterator>::count","value":"fn count(Self) -> usize","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8603},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":267637,"byte_end":267646,"line_start":870,"line_end":870,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1128},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":267706,"byte_end":267709,"line_start":876,"line_end":876,"column_start":5,"column_end":8},"name":"nth","qualname":"<RChunksExact as std::iter::Iterator>::nth","value":"fn nth<'_>(&'_ mut Self, usize) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8609},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":267692,"byte_end":267701,"line_start":875,"line_end":875,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1129},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":268014,"byte_end":268018,"line_start":888,"line_end":888,"column_start":5,"column_end":9},"name":"last","qualname":"<RChunksExact as std::iter::Iterator>::last","value":"fn last(Self) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8605},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":268000,"byte_end":268009,"line_start":887,"line_end":887,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1134},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":268193,"byte_end":268202,"line_start":896,"line_end":896,"column_start":5,"column_end":14},"name":"next_back","qualname":"<RChunksExact as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8442},"children":[],"decl_id":{"krate":2,"index":8443},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":268179,"byte_end":268188,"line_start":895,"line_end":895,"column_start":2,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":4039},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":269204,"byte_end":269219,"line_start":931,"line_end":931,"column_start":12,"column_end":27},"name":"RChunksExactMut","qualname":"::slice::iter::RChunksExactMut","value":"RChunksExactMut {  }","parent":null,"children":[{"krate":0,"index":4043},{"krate":0,"index":4044},{"krate":0,"index":4045}],"decl_id":null,"docs":" An iterator over a slice in (non-overlapping) mutable chunks (`width` bits\nat a time), starting at the end of the slice.","sig":null,"attributes":[{"value":"* An iterator over a slice in (non-overlapping) mutable chunks (`width` bits\nat a time), starting at the end of the slice.\n\nWhen the slice len is not evenly divided by the chunk size, the last up to\n`width - 1` bits will be omitted but can be retrieved from the\n[`into_remainder`] function from the iterator.\n\nThis struct is created by the [`rchunks_exact_mut`] method on [`BitSlice`]s.\n\n[`BitSlice`]: struct.BitSlice.html\n[`into_remainder`]: #method.into_remainder\n[`rchunks_exact_mut`]: struct.BitSlice.html#rchunks_exact_mut\n**/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":268642,"byte_end":269175,"line_start":917,"line_end":929,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1145},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":269751,"byte_end":269765,"line_start":946,"line_end":946,"column_start":9,"column_end":23},"name":"into_remainder","qualname":"<RChunksExactMut>::into_remainder","value":"fn into_remainder(Self) -> &'a mut BitSlice<O, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the remainder of the original slice that is not going to be\n returned by the iterator. The returned slice has at most\n `width - 1` bits.\n","sig":null,"attributes":[{"value":"/ Returns the remainder of the original slice that is not going to be","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":269586,"byte_end":269657,"line_start":943,"line_end":943,"column_start":2,"column_end":73}},{"value":"/ returned by the iterator. The returned slice has at most","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":269659,"byte_end":269719,"line_start":944,"line_end":944,"column_start":2,"column_end":62}},{"value":"/ `width - 1` bits.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":269721,"byte_end":269742,"line_start":945,"line_end":945,"column_start":2,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":1151},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":269964,"byte_end":269968,"line_start":956,"line_end":956,"column_start":5,"column_end":9},"name":"next","qualname":"<RChunksExactMut as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8598},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":269950,"byte_end":269959,"line_start":955,"line_end":955,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1152},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":270262,"byte_end":270271,"line_start":969,"line_end":969,"column_start":5,"column_end":14},"name":"size_hint","qualname":"<RChunksExactMut as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8602},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":270248,"byte_end":270257,"line_start":968,"line_end":968,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1153},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":270388,"byte_end":270393,"line_start":975,"line_end":975,"column_start":5,"column_end":10},"name":"count","qualname":"<RChunksExactMut as std::iter::Iterator>::count","value":"fn count(Self) -> usize","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8603},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":270374,"byte_end":270383,"line_start":974,"line_end":974,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1154},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":270443,"byte_end":270446,"line_start":980,"line_end":980,"column_start":5,"column_end":8},"name":"nth","qualname":"<RChunksExactMut as std::iter::Iterator>::nth","value":"fn nth<'_>(&'_ mut Self, usize) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8609},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":270429,"byte_end":270438,"line_start":979,"line_end":979,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1155},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":270778,"byte_end":270782,"line_start":992,"line_end":992,"column_start":5,"column_end":9},"name":"last","qualname":"<RChunksExactMut as std::iter::Iterator>::last","value":"fn last(Self) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8605},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":270764,"byte_end":270773,"line_start":991,"line_end":991,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1160},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":270960,"byte_end":270969,"line_start":1000,"line_end":1000,"column_start":5,"column_end":14},"name":"next_back","qualname":"<RChunksExactMut as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8442},"children":[],"decl_id":{"krate":2,"index":8443},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":270946,"byte_end":270955,"line_start":999,"line_end":999,"column_start":2,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":4051},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":271871,"byte_end":271881,"line_start":1031,"line_end":1031,"column_start":12,"column_end":22},"name":"RChunksMut","qualname":"::slice::iter::RChunksMut","value":"RChunksMut {  }","parent":null,"children":[{"krate":0,"index":4055},{"krate":0,"index":4056}],"decl_id":null,"docs":" An iterator over a slice in (non-overlapping) mutable chunks (`width` bits\nat a time), starting at the end of the slice.","sig":null,"attributes":[{"value":"* An iterator over a slice in (non-overlapping) mutable chunks (`width` bits\nat a time), starting at the end of the slice.\n\nWhen the slice length is not evenly divided by the chunk size, the last slice of\nthe iteration will be the remainder.\n\nThis struct is created by the [`rchunks_mut`] method on [`BitSlice`]s.\n\n[`BitSlice`]: struct.BitSlice.html\n[`rchunks_mut`]: struct.BitSlice.html#method.rchunks_mut\n**/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":271430,"byte_end":271842,"line_start":1019,"line_end":1029,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1172},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":272223,"byte_end":272227,"line_start":1044,"line_end":1044,"column_start":5,"column_end":9},"name":"next","qualname":"<RChunksMut as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8598},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":272209,"byte_end":272218,"line_start":1043,"line_end":1043,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1173},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":272541,"byte_end":272550,"line_start":1058,"line_end":1058,"column_start":5,"column_end":14},"name":"size_hint","qualname":"<RChunksMut as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8602},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":272527,"byte_end":272536,"line_start":1057,"line_end":1057,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1174},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":272790,"byte_end":272795,"line_start":1070,"line_end":1070,"column_start":5,"column_end":10},"name":"count","qualname":"<RChunksMut as std::iter::Iterator>::count","value":"fn count(Self) -> usize","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8603},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":272776,"byte_end":272785,"line_start":1069,"line_end":1069,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1175},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":272845,"byte_end":272848,"line_start":1075,"line_end":1075,"column_start":5,"column_end":8},"name":"nth","qualname":"<RChunksMut as std::iter::Iterator>::nth","value":"fn nth<'_>(&'_ mut Self, usize) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8609},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":272831,"byte_end":272840,"line_start":1074,"line_end":1074,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1176},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":273180,"byte_end":273184,"line_start":1087,"line_end":1087,"column_start":5,"column_end":9},"name":"last","qualname":"<RChunksMut as std::iter::Iterator>::last","value":"fn last(Self) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8605},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":273166,"byte_end":273175,"line_start":1086,"line_end":1086,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1181},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":273357,"byte_end":273366,"line_start":1095,"line_end":1095,"column_start":5,"column_end":14},"name":"next_back","qualname":"<RChunksMut as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8442},"children":[],"decl_id":{"krate":2,"index":8443},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":273343,"byte_end":273352,"line_start":1094,"line_end":1094,"column_start":2,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":4062},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":274477,"byte_end":274482,"line_start":1135,"line_end":1135,"column_start":12,"column_end":17},"name":"Split","qualname":"::slice::iter::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":4067},{"krate":0,"index":4068},{"krate":0,"index":4069}],"decl_id":null,"docs":" An iterator over subslices separated by bits that satisfy a predicate\nfunction.","sig":null,"attributes":[{"value":"* An iterator over subslices separated by bits that satisfy a predicate\nfunction.\n\nThis struct is created by the [`split`] method on [`BitSlice`]s.\n\n[`BitSlice`]: struct.BitSlice.html\n[`split`]: struct.BitSlice.html#method.split\n**/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":274214,"byte_end":274448,"line_start":1126,"line_end":1133,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1195},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":274962,"byte_end":274965,"line_start":1148,"line_end":1148,"column_start":5,"column_end":8},"name":"fmt","qualname":"<Split as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1209},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":275519,"byte_end":275523,"line_start":1169,"line_end":1169,"column_start":5,"column_end":9},"name":"next","qualname":"<Split as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8598},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":275505,"byte_end":275514,"line_start":1168,"line_end":1168,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1211},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":275932,"byte_end":275941,"line_start":1187,"line_end":1187,"column_start":5,"column_end":14},"name":"size_hint","qualname":"<Split as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8602},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":275918,"byte_end":275927,"line_start":1186,"line_end":1186,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1217},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":276226,"byte_end":276235,"line_start":1198,"line_end":1198,"column_start":5,"column_end":14},"name":"next_back","qualname":"<Split as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8442},"children":[],"decl_id":{"krate":2,"index":8443},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":276212,"byte_end":276221,"line_start":1197,"line_end":1197,"column_start":2,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":1224},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":277008,"byte_end":277016,"line_start":1227,"line_end":1227,"column_start":12,"column_end":20},"name":"SplitMut","qualname":"::slice::iter::SplitMut","value":"SplitMut {  }","parent":null,"children":[{"krate":0,"index":1229},{"krate":0,"index":1230},{"krate":0,"index":1231}],"decl_id":null,"docs":" An iterator over subslices separated by positions that satisfy a predicate\nfunction.","sig":null,"attributes":[{"value":"* An iterator over subslices separated by positions that satisfy a predicate\nfunction.\n\nThis struct is created by the [`split_mut`] method on [`BitSlice`]s.\n\n[`BitSlice`]: struct.BitSlice.html\n[`split_mut`]: struct.BitSlice.html#method.split_mut\n**/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":276745,"byte_end":276996,"line_start":1219,"line_end":1226,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1237},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":277503,"byte_end":277506,"line_start":1240,"line_end":1240,"column_start":5,"column_end":8},"name":"fmt","qualname":"<SplitMut as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1251},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":278123,"byte_end":278127,"line_start":1261,"line_end":1261,"column_start":5,"column_end":9},"name":"next","qualname":"<SplitMut as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8598},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":278109,"byte_end":278118,"line_start":1260,"line_end":1260,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1253},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":278627,"byte_end":278636,"line_start":1284,"line_end":1284,"column_start":5,"column_end":14},"name":"size_hint","qualname":"<SplitMut as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8602},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":278613,"byte_end":278622,"line_start":1283,"line_end":1283,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1259},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":278924,"byte_end":278933,"line_start":1295,"line_end":1295,"column_start":5,"column_end":14},"name":"next_back","qualname":"<SplitMut as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8442},"children":[],"decl_id":{"krate":2,"index":8443},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":278910,"byte_end":278919,"line_start":1294,"line_end":1294,"column_start":2,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":4076},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":279872,"byte_end":279878,"line_start":1331,"line_end":1331,"column_start":12,"column_end":18},"name":"RSplit","qualname":"::slice::iter::RSplit","value":"RSplit {  }","parent":null,"children":[{"krate":0,"index":4081}],"decl_id":null,"docs":" An iterator over subslices separated by bits that satisfy a predicate\nfunction, starting from the end of the slice.","sig":null,"attributes":[{"value":"* An iterator over subslices separated by bits that satisfy a predicate\nfunction, starting from the end of the slice.\n\nThis struct is created by the [`rsplit`] method on [`BitSlice`]s.\n\n[`BitSlice`]: struct.BitSlice.html\n[`rsplit`]: struct.BitSlice.html#rsplit\n**/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":279577,"byte_end":279843,"line_start":1322,"line_end":1329,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1271},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":280195,"byte_end":280198,"line_start":1339,"line_end":1339,"column_start":5,"column_end":8},"name":"fmt","qualname":"<RSplit as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1284},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":280730,"byte_end":280734,"line_start":1359,"line_end":1359,"column_start":5,"column_end":9},"name":"next","qualname":"<RSplit as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8598},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":280716,"byte_end":280725,"line_start":1358,"line_end":1358,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1285},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":280814,"byte_end":280823,"line_start":1364,"line_end":1364,"column_start":5,"column_end":14},"name":"size_hint","qualname":"<RSplit as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8602},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":280800,"byte_end":280809,"line_start":1363,"line_end":1363,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1291},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":281037,"byte_end":281046,"line_start":1372,"line_end":1372,"column_start":5,"column_end":14},"name":"next_back","qualname":"<RSplit as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8442},"children":[],"decl_id":{"krate":2,"index":8443},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":281023,"byte_end":281032,"line_start":1371,"line_end":1371,"column_start":2,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":1297},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":281526,"byte_end":281535,"line_start":1388,"line_end":1388,"column_start":12,"column_end":21},"name":"RSplitMut","qualname":"::slice::iter::RSplitMut","value":"RSplitMut {  }","parent":null,"children":[{"krate":0,"index":1302}],"decl_id":null,"docs":" An iterator over subslices separated by bits that satisfy a predicate\nfunction, starting from the end of the slice.","sig":null,"attributes":[{"value":"* An iterator over subslices separated by bits that satisfy a predicate\nfunction, starting from the end of the slice.\n\nThis struct is created by the [`rsplit_mut`] method on [`BitSlice`]s.\n\n[`BitSlice`]: struct.BitSlice.html\n[`rsplit_mut`]: struct.BitSlice.html#rsplit_mut\n**/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":281236,"byte_end":281514,"line_start":1380,"line_end":1387,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1308},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":281861,"byte_end":281864,"line_start":1396,"line_end":1396,"column_start":5,"column_end":8},"name":"fmt","qualname":"<RSplitMut as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1321},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":282409,"byte_end":282413,"line_start":1416,"line_end":1416,"column_start":5,"column_end":9},"name":"next","qualname":"<RSplitMut as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8598},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":282395,"byte_end":282404,"line_start":1415,"line_end":1415,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1322},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":282493,"byte_end":282502,"line_start":1421,"line_end":1421,"column_start":5,"column_end":14},"name":"size_hint","qualname":"<RSplitMut as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8602},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":282479,"byte_end":282488,"line_start":1420,"line_end":1420,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1328},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":282719,"byte_end":282728,"line_start":1429,"line_end":1429,"column_start":5,"column_end":14},"name":"next_back","qualname":"<RSplitMut as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8442},"children":[],"decl_id":{"krate":2,"index":8443},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":282705,"byte_end":282714,"line_start":1428,"line_end":1428,"column_start":2,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":1344},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":283837,"byte_end":283843,"line_start":1473,"line_end":1473,"column_start":12,"column_end":18},"name":"SplitN","qualname":"::slice::iter::SplitN","value":"SplitN {  }","parent":null,"children":[{"krate":0,"index":1349}],"decl_id":null,"docs":" An iterator over subslices separated by positions that satisfy a predicate\nfunction, limited to a given number of splits.","sig":null,"attributes":[{"value":"* An iterator over subslices separated by positions that satisfy a predicate\nfunction, limited to a given number of splits.\n\nThis struct is created by the [`splitn`] method on [`BitSlice`]s.\n\n[`BitSlice`]: struct.BitSlice.html\n[`splitn`]: struct.BitSlice.html#method.splitn\n**/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":283546,"byte_end":283825,"line_start":1465,"line_end":1472,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1355},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":284134,"byte_end":284137,"line_start":1481,"line_end":1481,"column_start":5,"column_end":8},"name":"fmt","qualname":"<SplitN as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1356},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":284618,"byte_end":284627,"line_start":1497,"line_end":1497,"column_start":12,"column_end":21},"name":"SplitNMut","qualname":"::slice::iter::SplitNMut","value":"SplitNMut {  }","parent":null,"children":[{"krate":0,"index":1361}],"decl_id":null,"docs":" An iterator over mutable subslices separated by positions that satisfy a\npredicate function, limited to a given number of splits.","sig":null,"attributes":[{"value":"* An iterator over mutable subslices separated by positions that satisfy a\npredicate function, limited to a given number of splits.\n\nThis struct is created by the [`splitn_mut`] method on [`BitSlice`]s.\n\n[`BitSlice`]: struct.BitSlice.html\n[`splitn_mut`]: struct.BitSlice.html#method.splitn_mut\n**/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":284307,"byte_end":284606,"line_start":1489,"line_end":1496,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1367},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":284924,"byte_end":284927,"line_start":1505,"line_end":1505,"column_start":5,"column_end":8},"name":"fmt","qualname":"<SplitNMut as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1368},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":285430,"byte_end":285437,"line_start":1522,"line_end":1522,"column_start":12,"column_end":19},"name":"RSplitN","qualname":"::slice::iter::RSplitN","value":"RSplitN {  }","parent":null,"children":[{"krate":0,"index":1373}],"decl_id":null,"docs":" An iterator over subslices separated by positions that satisfy a predicate\nfunction, limited to a given number of splits, starting from the end of the\nslice.","sig":null,"attributes":[{"value":"* An iterator over subslices separated by positions that satisfy a predicate\nfunction, limited to a given number of splits, starting from the end of the\nslice.\n\nThis struct is created by the [`rsplitn`] method on [`BitSlice`]s.\n\n[`BitSlice`]: struct.BitSlice.html\n[`rsplitn`]: struct.BitSlice.html#method.rsplitn\n**/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":285100,"byte_end":285418,"line_start":1513,"line_end":1521,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1379},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":285730,"byte_end":285733,"line_start":1530,"line_end":1530,"column_start":5,"column_end":8},"name":"fmt","qualname":"<RSplitN as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1380},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":286254,"byte_end":286264,"line_start":1547,"line_end":1547,"column_start":12,"column_end":22},"name":"RSplitNMut","qualname":"::slice::iter::RSplitNMut","value":"RSplitNMut {  }","parent":null,"children":[{"krate":0,"index":1385}],"decl_id":null,"docs":" An iterator over mutable subslices separated by positions that satisfy a\npredicate function, limited to a given number of splits, starting from the end\nof the slice.","sig":null,"attributes":[{"value":"* An iterator over mutable subslices separated by positions that satisfy a\npredicate function, limited to a given number of splits, starting from the end\nof the slice.\n\nThis struct is created by the [`rsplitn_mut`] method on [`BitSlice`]s.\n\n[`BitSlice`]: struct.BitSlice.html\n[`rsplitn_mut`]: struct.BitSlice.html#method.rsplitn_mut\n**/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":285904,"byte_end":286242,"line_start":1538,"line_end":1546,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1391},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":286563,"byte_end":286566,"line_start":1555,"line_end":1555,"column_start":5,"column_end":8},"name":"fmt","qualname":"<RSplitNMut as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4140},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":288171,"byte_end":288178,"line_start":1618,"line_end":1618,"column_start":12,"column_end":19},"name":"Windows","qualname":"::slice::iter::Windows","value":"Windows {  }","parent":null,"children":[{"krate":0,"index":4144},{"krate":0,"index":4145}],"decl_id":null,"docs":" An iterator over overlapping subslices of some width.","sig":null,"attributes":[{"value":"* An iterator over overlapping subslices of some width.\n\nThis struct is created by the [`windows`] method on [`BitSlice`]s.\n\n[`BitSlice`]: struct.BitSlice.html\n[`windows`]: struct.BitSlice.html#method.windows\n**/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":287921,"byte_end":288135,"line_start":1610,"line_end":1616,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1398},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":288510,"byte_end":288514,"line_start":1631,"line_end":1631,"column_start":5,"column_end":9},"name":"next","qualname":"<Windows as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8598},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":288496,"byte_end":288505,"line_start":1630,"line_end":1630,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1399},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":288800,"byte_end":288809,"line_start":1646,"line_end":1646,"column_start":5,"column_end":14},"name":"size_hint","qualname":"<Windows as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8602},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":288786,"byte_end":288795,"line_start":1645,"line_end":1645,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1400},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":289012,"byte_end":289017,"line_start":1658,"line_end":1658,"column_start":5,"column_end":10},"name":"count","qualname":"<Windows as std::iter::Iterator>::count","value":"fn count(Self) -> usize","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8603},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":288998,"byte_end":289007,"line_start":1657,"line_end":1657,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1401},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":289067,"byte_end":289070,"line_start":1663,"line_end":1663,"column_start":5,"column_end":8},"name":"nth","qualname":"<Windows as std::iter::Iterator>::nth","value":"fn nth<'_>(&'_ mut Self, usize) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8609},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":289053,"byte_end":289062,"line_start":1662,"line_end":1662,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1402},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":289406,"byte_end":289410,"line_start":1677,"line_end":1677,"column_start":5,"column_end":9},"name":"last","qualname":"<Windows as std::iter::Iterator>::last","value":"fn last(Self) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8605},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":289392,"byte_end":289401,"line_start":1676,"line_end":1676,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1407},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":289580,"byte_end":289589,"line_start":1685,"line_end":1685,"column_start":5,"column_end":14},"name":"next_back","qualname":"<Windows as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8442},"children":[],"decl_id":{"krate":2,"index":8443},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":289566,"byte_end":289575,"line_start":1684,"line_end":1684,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1496},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":292313,"byte_end":292323,"line_start":84,"line_end":84,"column_start":5,"column_end":15},"name":"add_assign","qualname":"<BitSlice<O, T> as std::ops::AddAssign>::add_assign","value":"fn add_assign<'_>(&'_ mut Self, I)","parent":{"krate":2,"index":3362},"children":[],"decl_id":{"krate":2,"index":3364},"docs":" Performs unsigned wrapping addition in place.","sig":null,"attributes":[{"value":"/ Performs unsigned wrapping addition in place.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":291599,"byte_end":291648,"line_start":63,"line_end":63,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":291650,"byte_end":291653,"line_start":64,"line_end":64,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":291655,"byte_end":291669,"line_start":65,"line_end":65,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":291671,"byte_end":291674,"line_start":66,"line_end":66,"column_start":2,"column_end":5}},{"value":"/ This example shows addition of a slice wrapping from max to zero.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":291676,"byte_end":291745,"line_start":67,"line_end":67,"column_start":2,"column_end":71}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":291747,"byte_end":291750,"line_start":68,"line_end":68,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":291752,"byte_end":291763,"line_start":69,"line_end":69,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":291765,"byte_end":291792,"line_start":70,"line_end":70,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":291794,"byte_end":291797,"line_start":71,"line_end":71,"column_start":2,"column_end":5}},{"value":"/ let mut src = [0b1110_1111u8, 0b0000_0001];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":291799,"byte_end":291846,"line_start":72,"line_end":72,"column_start":2,"column_end":49}},{"value":"/ let bits = src.bits_mut::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":291848,"byte_end":291886,"line_start":73,"line_end":73,"column_start":2,"column_end":40}},{"value":"/ let (nums, one) = bits.split_at_mut(12);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":291888,"byte_end":291932,"line_start":74,"line_end":74,"column_start":2,"column_end":46}},{"value":"/ let (accum, steps) = nums.split_at_mut(4);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":291934,"byte_end":291980,"line_start":75,"line_end":75,"column_start":2,"column_end":48}},{"value":"/ *accum += one.iter().copied();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":291982,"byte_end":292016,"line_start":76,"line_end":76,"column_start":2,"column_end":36}},{"value":"/ assert_eq!(accum, &steps[.. 4]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":292018,"byte_end":292054,"line_start":77,"line_end":77,"column_start":2,"column_end":38}},{"value":"/ *accum += one.iter().copied();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":292056,"byte_end":292090,"line_start":78,"line_end":78,"column_start":2,"column_end":36}},{"value":"/ assert_eq!(accum, &steps[4 ..]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":292092,"byte_end":292128,"line_start":79,"line_end":79,"column_start":2,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":292130,"byte_end":292137,"line_start":80,"line_end":80,"column_start":2,"column_end":9}},{"value":"allow(clippy :: many_single_char_names)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":292268,"byte_end":292308,"line_start":83,"line_end":83,"column_start":2,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1504},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":294215,"byte_end":294228,"line_start":142,"line_end":142,"column_start":5,"column_end":18},"name":"bitand_assign","qualname":"<BitSlice<O, T> as std::ops::BitAndAssign>::bitand_assign","value":"fn bitand_assign<'_>(&'_ mut Self, I)","parent":{"krate":2,"index":3417},"children":[],"decl_id":{"krate":2,"index":3419},"docs":" `AND`s a bitstream into a slice.","sig":null,"attributes":[{"value":"/ `AND`s a bitstream into a slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":293756,"byte_end":293792,"line_start":123,"line_end":123,"column_start":2,"column_end":38}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":293794,"byte_end":293797,"line_start":124,"line_end":124,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":293799,"byte_end":293815,"line_start":125,"line_end":125,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":293817,"byte_end":293820,"line_start":126,"line_end":126,"column_start":2,"column_end":5}},{"value":"/ - `&mut self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":293822,"byte_end":293839,"line_start":127,"line_end":127,"column_start":2,"column_end":19}},{"value":"/ - `rhs`: The bitstream to `AND` into `self`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":293841,"byte_end":293889,"line_start":128,"line_end":128,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":293891,"byte_end":293894,"line_start":129,"line_end":129,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":293896,"byte_end":293910,"line_start":130,"line_end":130,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":293912,"byte_end":293915,"line_start":131,"line_end":131,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":293917,"byte_end":293928,"line_start":132,"line_end":132,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":293930,"byte_end":293957,"line_start":133,"line_end":133,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":293959,"byte_end":293962,"line_start":134,"line_end":134,"column_start":2,"column_end":5}},{"value":"/ let mut store = [0b0101_0100u8];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":293964,"byte_end":294000,"line_start":135,"line_end":135,"column_start":2,"column_end":38}},{"value":"/ let     other = [0b0011_0000u8];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":294002,"byte_end":294038,"line_start":136,"line_end":136,"column_start":2,"column_end":38}},{"value":"/ let lhs = store.bits_mut::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":294040,"byte_end":294079,"line_start":137,"line_end":137,"column_start":2,"column_end":41}},{"value":"/ let rhs = other.bits::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":294081,"byte_end":294116,"line_start":138,"line_end":138,"column_start":2,"column_end":37}},{"value":"/ lhs[.. 6] &= rhs[.. 4].iter().copied();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":294118,"byte_end":294161,"line_start":139,"line_end":139,"column_start":2,"column_end":45}},{"value":"/ assert_eq!(store[0], 0b0001_0000);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":294163,"byte_end":294201,"line_start":140,"line_end":140,"column_start":2,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":294203,"byte_end":294210,"line_start":141,"line_end":141,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":1513},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":295381,"byte_end":295393,"line_start":185,"line_end":185,"column_start":5,"column_end":17},"name":"bitor_assign","qualname":"<BitSlice<O, T> as std::ops::BitOrAssign>::bitor_assign","value":"fn bitor_assign<'_>(&'_ mut Self, I)","parent":{"krate":2,"index":3421},"children":[],"decl_id":{"krate":2,"index":3423},"docs":" `OR`s a bitstream into a slice.","sig":null,"attributes":[{"value":"/ `OR`s a bitstream into a slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":294924,"byte_end":294959,"line_start":166,"line_end":166,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":294961,"byte_end":294964,"line_start":167,"line_end":167,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":294966,"byte_end":294982,"line_start":168,"line_end":168,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":294984,"byte_end":294987,"line_start":169,"line_end":169,"column_start":2,"column_end":5}},{"value":"/ - `&mut self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":294989,"byte_end":295006,"line_start":170,"line_end":170,"column_start":2,"column_end":19}},{"value":"/ - `rhs`: The bitstream to `OR` into `self`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":295008,"byte_end":295055,"line_start":171,"line_end":171,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":295057,"byte_end":295060,"line_start":172,"line_end":172,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":295062,"byte_end":295076,"line_start":173,"line_end":173,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":295078,"byte_end":295081,"line_start":174,"line_end":174,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":295083,"byte_end":295094,"line_start":175,"line_end":175,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":295096,"byte_end":295123,"line_start":176,"line_end":176,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":295125,"byte_end":295128,"line_start":177,"line_end":177,"column_start":2,"column_end":5}},{"value":"/ let mut store = [0b0101_0100u8];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":295130,"byte_end":295166,"line_start":178,"line_end":178,"column_start":2,"column_end":38}},{"value":"/ let     other = [0b0011_0000u8];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":295168,"byte_end":295204,"line_start":179,"line_end":179,"column_start":2,"column_end":38}},{"value":"/ let lhs = store.bits_mut::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":295206,"byte_end":295245,"line_start":180,"line_end":180,"column_start":2,"column_end":41}},{"value":"/ let rhs = other.bits::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":295247,"byte_end":295282,"line_start":181,"line_end":181,"column_start":2,"column_end":37}},{"value":"/ lhs[.. 6] |= rhs[.. 4].iter().copied();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":295284,"byte_end":295327,"line_start":182,"line_end":182,"column_start":2,"column_end":45}},{"value":"/ assert_eq!(store[0], 0b0111_0100);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":295329,"byte_end":295367,"line_start":183,"line_end":183,"column_start":2,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":295369,"byte_end":295376,"line_start":184,"line_end":184,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":1519},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":296501,"byte_end":296514,"line_start":226,"line_end":226,"column_start":5,"column_end":18},"name":"bitxor_assign","qualname":"<BitSlice<O, T> as std::ops::BitXorAssign>::bitxor_assign","value":"fn bitxor_assign<'_>(&'_ mut Self, I)","parent":{"krate":2,"index":3425},"children":[],"decl_id":{"krate":2,"index":3427},"docs":" `XOR`s a bitstream into a slice.","sig":null,"attributes":[{"value":"/ `XOR`s a bitstream into a slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":296042,"byte_end":296078,"line_start":207,"line_end":207,"column_start":2,"column_end":38}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":296080,"byte_end":296083,"line_start":208,"line_end":208,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":296085,"byte_end":296101,"line_start":209,"line_end":209,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":296103,"byte_end":296106,"line_start":210,"line_end":210,"column_start":2,"column_end":5}},{"value":"/ - `&mut self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":296108,"byte_end":296125,"line_start":211,"line_end":211,"column_start":2,"column_end":19}},{"value":"/ - `rhs`: The bitstream to `XOR` into `self`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":296127,"byte_end":296175,"line_start":212,"line_end":212,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":296177,"byte_end":296180,"line_start":213,"line_end":213,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":296182,"byte_end":296196,"line_start":214,"line_end":214,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":296198,"byte_end":296201,"line_start":215,"line_end":215,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":296203,"byte_end":296214,"line_start":216,"line_end":216,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":296216,"byte_end":296243,"line_start":217,"line_end":217,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":296245,"byte_end":296248,"line_start":218,"line_end":218,"column_start":2,"column_end":5}},{"value":"/ let mut store = [0b0101_0100u8];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":296250,"byte_end":296286,"line_start":219,"line_end":219,"column_start":2,"column_end":38}},{"value":"/ let     other = [0b0011_0000u8];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":296288,"byte_end":296324,"line_start":220,"line_end":220,"column_start":2,"column_end":38}},{"value":"/ let lhs = store.bits_mut::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":296326,"byte_end":296365,"line_start":221,"line_end":221,"column_start":2,"column_end":41}},{"value":"/ let rhs = other.bits::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":296367,"byte_end":296402,"line_start":222,"line_end":222,"column_start":2,"column_end":37}},{"value":"/ lhs[.. 6] ^= rhs[.. 4].iter().copied();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":296404,"byte_end":296447,"line_start":223,"line_end":223,"column_start":2,"column_end":45}},{"value":"/ assert_eq!(store[0], 0b0110_0100);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":296449,"byte_end":296487,"line_start":224,"line_end":224,"column_start":2,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":296489,"byte_end":296496,"line_start":225,"line_end":225,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":1525},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":296820,"byte_end":296825,"line_start":241,"line_end":241,"column_start":5,"column_end":10},"name":"index","qualname":"<BitSlice<O, T> as std::ops::Index>::index","value":"fn index<'_>(&'_ Self, usize) -> &'_ Self::Output","parent":{"krate":2,"index":3571},"children":[],"decl_id":{"krate":2,"index":3574},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1530},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":297001,"byte_end":297006,"line_start":250,"line_end":250,"column_start":5,"column_end":10},"name":"index","qualname":"<BitSlice<O, T> as std::ops::Index>::index","value":"fn index<'_>(&'_ Self, Range<usize>) -> &'_ Self","parent":{"krate":2,"index":3571},"children":[],"decl_id":{"krate":2,"index":3574},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1534},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":297162,"byte_end":297171,"line_start":257,"line_end":257,"column_start":5,"column_end":14},"name":"index_mut","qualname":"<BitSlice<O, T> as std::ops::IndexMut>::index_mut","value":"fn index_mut<'_>(&'_ mut Self, Range<usize>) -> &'_ mut Self","parent":{"krate":2,"index":3575},"children":[],"decl_id":{"krate":2,"index":3577},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1539},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":297367,"byte_end":297372,"line_start":266,"line_end":266,"column_start":5,"column_end":10},"name":"index","qualname":"<BitSlice<O, T> as std::ops::Index>::index","value":"fn index<'_>(&'_ Self, RangeInclusive<usize>) -> &'_ Self","parent":{"krate":2,"index":3571},"children":[],"decl_id":{"krate":2,"index":3574},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1543},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":297546,"byte_end":297555,"line_start":273,"line_end":273,"column_start":5,"column_end":14},"name":"index_mut","qualname":"<BitSlice<O, T> as std::ops::IndexMut>::index_mut","value":"fn index_mut<'_>(&'_ mut Self, RangeInclusive<usize>) -> &'_ mut Self","parent":{"krate":2,"index":3575},"children":[],"decl_id":{"krate":2,"index":3577},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1548},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":297755,"byte_end":297760,"line_start":282,"line_end":282,"column_start":5,"column_end":10},"name":"index","qualname":"<BitSlice<O, T> as std::ops::Index>::index","value":"fn index<'_>(&'_ Self, RangeFrom<usize>) -> &'_ Self","parent":{"krate":2,"index":3571},"children":[],"decl_id":{"krate":2,"index":3574},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1552},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":297924,"byte_end":297933,"line_start":289,"line_end":289,"column_start":5,"column_end":14},"name":"index_mut","qualname":"<BitSlice<O, T> as std::ops::IndexMut>::index_mut","value":"fn index_mut<'_>(&'_ mut Self, RangeFrom<usize>) -> &'_ mut Self","parent":{"krate":2,"index":3575},"children":[],"decl_id":{"krate":2,"index":3577},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1557},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":298121,"byte_end":298126,"line_start":298,"line_end":298,"column_start":5,"column_end":10},"name":"index","qualname":"<BitSlice<O, T> as std::ops::Index>::index","value":"fn index<'_>(&'_ Self, RangeFull) -> &'_ Self","parent":{"krate":2,"index":3571},"children":[],"decl_id":{"krate":2,"index":3574},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1561},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":298259,"byte_end":298268,"line_start":305,"line_end":305,"column_start":5,"column_end":14},"name":"index_mut","qualname":"<BitSlice<O, T> as std::ops::IndexMut>::index_mut","value":"fn index_mut<'_>(&'_ mut Self, RangeFull) -> &'_ mut Self","parent":{"krate":2,"index":3575},"children":[],"decl_id":{"krate":2,"index":3577},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1566},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":298433,"byte_end":298438,"line_start":314,"line_end":314,"column_start":5,"column_end":10},"name":"index","qualname":"<BitSlice<O, T> as std::ops::Index>::index","value":"fn index<'_>(&'_ Self, RangeTo<usize>) -> &'_ Self","parent":{"krate":2,"index":3571},"children":[],"decl_id":{"krate":2,"index":3574},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1570},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":298598,"byte_end":298607,"line_start":321,"line_end":321,"column_start":5,"column_end":14},"name":"index_mut","qualname":"<BitSlice<O, T> as std::ops::IndexMut>::index_mut","value":"fn index_mut<'_>(&'_ mut Self, RangeTo<usize>) -> &'_ mut Self","parent":{"krate":2,"index":3575},"children":[],"decl_id":{"krate":2,"index":3577},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1575},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":298807,"byte_end":298812,"line_start":330,"line_end":330,"column_start":5,"column_end":10},"name":"index","qualname":"<BitSlice<O, T> as std::ops::Index>::index","value":"fn index<'_>(&'_ Self, RangeToInclusive<usize>) -> &'_ Self","parent":{"krate":2,"index":3571},"children":[],"decl_id":{"krate":2,"index":3574},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1579},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":298990,"byte_end":298999,"line_start":337,"line_end":337,"column_start":5,"column_end":14},"name":"index_mut","qualname":"<BitSlice<O, T> as std::ops::IndexMut>::index_mut","value":"fn index_mut<'_>(&'_ mut Self, RangeToInclusive<usize>) -> &'_ mut Self","parent":{"krate":2,"index":3575},"children":[],"decl_id":{"krate":2,"index":3577},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1585},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":301962,"byte_end":301965,"line_start":426,"line_end":426,"column_start":5,"column_end":8},"name":"neg","qualname":"<&'a mut BitSlice<O, T> as std::ops::Neg>::neg","value":"fn neg(Self) -> Self::Output","parent":{"krate":2,"index":3358},"children":[],"decl_id":{"krate":2,"index":3360},"docs":" Perform 2’s-complement fixed-width negation.","sig":null,"attributes":[{"value":"/ Perform 2’s-complement fixed-width negation.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":300180,"byte_end":300230,"line_start":366,"line_end":366,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":300232,"byte_end":300235,"line_start":367,"line_end":367,"column_start":2,"column_end":5}},{"value":"/ Negation is accomplished by inverting the bits and adding one. This has","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":300237,"byte_end":300312,"line_start":368,"line_end":368,"column_start":2,"column_end":77}},{"value":"/ one edge case: `1000…`, the most negative number for its width, will","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":300314,"byte_end":300388,"line_start":369,"line_end":369,"column_start":2,"column_end":74}},{"value":"/ negate to zero instead of itself. It thas no corresponding positive","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":300390,"byte_end":300461,"line_start":370,"line_end":370,"column_start":2,"column_end":73}},{"value":"/ number to which it can negate.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":300463,"byte_end":300497,"line_start":371,"line_end":371,"column_start":2,"column_end":36}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":300499,"byte_end":300502,"line_start":372,"line_end":372,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":300504,"byte_end":300520,"line_start":373,"line_end":373,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":300522,"byte_end":300525,"line_start":374,"line_end":374,"column_start":2,"column_end":5}},{"value":"/ - `self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":300527,"byte_end":300539,"line_start":375,"line_end":375,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":300541,"byte_end":300544,"line_start":376,"line_end":376,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":300546,"byte_end":300560,"line_start":377,"line_end":377,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":300562,"byte_end":300565,"line_start":378,"line_end":378,"column_start":2,"column_end":5}},{"value":"/ The contortions shown here are a result of this operator applying to a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":300567,"byte_end":300641,"line_start":379,"line_end":379,"column_start":2,"column_end":76}},{"value":"/ mutable reference, and this example balancing access to the original","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":300643,"byte_end":300715,"line_start":380,"line_end":380,"column_start":2,"column_end":74}},{"value":"/ `BitVec` for comparison with aquiring a mutable borrow *as a slice* to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":300717,"byte_end":300791,"line_start":381,"line_end":381,"column_start":2,"column_end":76}},{"value":"/ ensure that the `BitSlice` implementation is used, not the `BitVec`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":300793,"byte_end":300865,"line_start":382,"line_end":382,"column_start":2,"column_end":74}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":300867,"byte_end":300870,"line_start":383,"line_end":383,"column_start":2,"column_end":5}},{"value":"/ Negate an arbitrary positive number (first bit unset).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":300872,"byte_end":300930,"line_start":384,"line_end":384,"column_start":2,"column_end":60}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":300932,"byte_end":300935,"line_start":385,"line_end":385,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":300937,"byte_end":300948,"line_start":386,"line_end":386,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":300950,"byte_end":300977,"line_start":387,"line_end":387,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":300979,"byte_end":300982,"line_start":388,"line_end":388,"column_start":2,"column_end":5}},{"value":"/ let mut src = 0b0110_1010u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":300984,"byte_end":301016,"line_start":389,"line_end":389,"column_start":2,"column_end":34}},{"value":"/ let bits = src.bits_mut::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":301018,"byte_end":301056,"line_start":390,"line_end":390,"column_start":2,"column_end":40}},{"value":"/ eprintln!(\"{:?}\", bits.split_at(4));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":301058,"byte_end":301098,"line_start":391,"line_end":391,"column_start":2,"column_end":42}},{"value":"/ let num = &mut bits[.. 4];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":301100,"byte_end":301130,"line_start":392,"line_end":392,"column_start":2,"column_end":32}},{"value":"/ -num;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":301132,"byte_end":301141,"line_start":393,"line_end":393,"column_start":2,"column_end":11}},{"value":"/ eprintln!(\"{:?}\", bits.split_at(4));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":301143,"byte_end":301183,"line_start":394,"line_end":394,"column_start":2,"column_end":42}},{"value":"/ assert_eq!(&bits[.. 4], &bits[4 ..]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":301185,"byte_end":301226,"line_start":395,"line_end":395,"column_start":2,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":301228,"byte_end":301235,"line_start":396,"line_end":396,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":301237,"byte_end":301240,"line_start":397,"line_end":397,"column_start":2,"column_end":5}},{"value":"/ Negate an arbitrary negative number. This example will use the above","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":301242,"byte_end":301314,"line_start":398,"line_end":398,"column_start":2,"column_end":74}},{"value":"/ result to demonstrate round-trip correctness.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":301316,"byte_end":301365,"line_start":399,"line_end":399,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":301367,"byte_end":301370,"line_start":400,"line_end":400,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":301372,"byte_end":301383,"line_start":401,"line_end":401,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":301385,"byte_end":301412,"line_start":402,"line_end":402,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":301414,"byte_end":301417,"line_start":403,"line_end":403,"column_start":2,"column_end":5}},{"value":"/ let mut src = 0b1010_0110u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":301419,"byte_end":301451,"line_start":404,"line_end":404,"column_start":2,"column_end":34}},{"value":"/ let bits = src.bits_mut::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":301453,"byte_end":301491,"line_start":405,"line_end":405,"column_start":2,"column_end":40}},{"value":"/ let num = &mut bits[.. 4];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":301493,"byte_end":301523,"line_start":406,"line_end":406,"column_start":2,"column_end":32}},{"value":"/ -num;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":301525,"byte_end":301534,"line_start":407,"line_end":407,"column_start":2,"column_end":11}},{"value":"/ assert_eq!(&bits[.. 4], &bits[4 ..]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":301536,"byte_end":301577,"line_start":408,"line_end":408,"column_start":2,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":301579,"byte_end":301586,"line_start":409,"line_end":409,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":301588,"byte_end":301591,"line_start":410,"line_end":410,"column_start":2,"column_end":5}},{"value":"/ Negate the most negative number, which will become zero, and show","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":301593,"byte_end":301662,"line_start":411,"line_end":411,"column_start":2,"column_end":71}},{"value":"/ convergence at zero.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":301664,"byte_end":301688,"line_start":412,"line_end":412,"column_start":2,"column_end":26}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":301690,"byte_end":301693,"line_start":413,"line_end":413,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":301695,"byte_end":301706,"line_start":414,"line_end":414,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":301708,"byte_end":301735,"line_start":415,"line_end":415,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":301737,"byte_end":301740,"line_start":416,"line_end":416,"column_start":2,"column_end":5}},{"value":"/ let mut src = 128u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":301742,"byte_end":301766,"line_start":417,"line_end":417,"column_start":2,"column_end":26}},{"value":"/ let bits = src.bits_mut::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":301768,"byte_end":301806,"line_start":418,"line_end":418,"column_start":2,"column_end":40}},{"value":"/ let num = &mut bits[..];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":301808,"byte_end":301836,"line_start":419,"line_end":419,"column_start":2,"column_end":30}},{"value":"/ -num;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":301838,"byte_end":301847,"line_start":420,"line_end":420,"column_start":2,"column_end":11}},{"value":"/ assert!(bits.not_any());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":301849,"byte_end":301877,"line_start":421,"line_end":421,"column_start":2,"column_end":30}},{"value":"/ let num = &mut bits[..];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":301879,"byte_end":301907,"line_start":422,"line_end":422,"column_start":2,"column_end":30}},{"value":"/ -num;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":301909,"byte_end":301918,"line_start":423,"line_end":423,"column_start":2,"column_end":11}},{"value":"/ assert!(bits.not_any());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":301920,"byte_end":301948,"line_start":424,"line_end":424,"column_start":2,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":301950,"byte_end":301957,"line_start":425,"line_end":425,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":1591},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":303287,"byte_end":303290,"line_start":475,"line_end":475,"column_start":5,"column_end":8},"name":"not","qualname":"<&'a mut BitSlice<O, T> as std::ops::Not>::not","value":"fn not(Self) -> Self::Output","parent":{"krate":2,"index":3383},"children":[],"decl_id":{"krate":2,"index":3385},"docs":" Inverts all bits in the slice.","sig":null,"attributes":[{"value":"/ Inverts all bits in the slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":302755,"byte_end":302789,"line_start":454,"line_end":454,"column_start":2,"column_end":36}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":302791,"byte_end":302794,"line_start":455,"line_end":455,"column_start":2,"column_end":5}},{"value":"/ This will not affect bits outside the slice in slice storage elements.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":302796,"byte_end":302870,"line_start":456,"line_end":456,"column_start":2,"column_end":76}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":302872,"byte_end":302875,"line_start":457,"line_end":457,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":302877,"byte_end":302893,"line_start":458,"line_end":458,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":302895,"byte_end":302898,"line_start":459,"line_end":459,"column_start":2,"column_end":5}},{"value":"/ - `self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":302900,"byte_end":302912,"line_start":460,"line_end":460,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":302914,"byte_end":302917,"line_start":461,"line_end":461,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":302919,"byte_end":302933,"line_start":462,"line_end":462,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":302935,"byte_end":302938,"line_start":463,"line_end":463,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":302940,"byte_end":302951,"line_start":464,"line_end":464,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":302953,"byte_end":302980,"line_start":465,"line_end":465,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":302982,"byte_end":302985,"line_start":466,"line_end":466,"column_start":2,"column_end":5}},{"value":"/ let mut src = [0u8; 2];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":302987,"byte_end":303014,"line_start":467,"line_end":467,"column_start":2,"column_end":29}},{"value":"/ let bits = &mut src.bits_mut::<Msb0>()[2 .. 14];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":303016,"byte_end":303068,"line_start":468,"line_end":468,"column_start":2,"column_end":54}},{"value":"/ let _ = !bits;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":303070,"byte_end":303088,"line_start":469,"line_end":469,"column_start":2,"column_end":20}},{"value":"/ //  The `bits` binding is consumed by the `!` operator, and a new","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":303090,"byte_end":303159,"line_start":470,"line_end":470,"column_start":2,"column_end":71}},{"value":"/ //  reference is returned.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":303161,"byte_end":303191,"line_start":471,"line_end":471,"column_start":2,"column_end":32}},{"value":"/ // assert_eq!(bits.as_ref(), &[!0, !0]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":303193,"byte_end":303237,"line_start":472,"line_end":472,"column_start":2,"column_end":46}},{"value":"/ assert_eq!(src, [0x3F, 0xFC]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":303239,"byte_end":303273,"line_start":473,"line_end":473,"column_start":2,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":303275,"byte_end":303282,"line_start":474,"line_end":474,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":1595},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":305612,"byte_end":305622,"line_start":554,"line_end":554,"column_start":5,"column_end":15},"name":"shl_assign","qualname":"<BitSlice<O, T> as std::ops::ShlAssign>::shl_assign","value":"fn shl_assign<'_>(&'_ mut Self, usize)","parent":{"krate":2,"index":3429},"children":[],"decl_id":{"krate":2,"index":3431},"docs":" Shifts a slice left, in place.","sig":null,"attributes":[{"value":"/ Shifts a slice left, in place.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":305093,"byte_end":305127,"line_start":535,"line_end":535,"column_start":2,"column_end":36}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":305129,"byte_end":305132,"line_start":536,"line_end":536,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":305134,"byte_end":305150,"line_start":537,"line_end":537,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":305152,"byte_end":305155,"line_start":538,"line_end":538,"column_start":2,"column_end":5}},{"value":"/ - `&mut self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":305157,"byte_end":305174,"line_start":539,"line_end":539,"column_start":2,"column_end":19}},{"value":"/ - `shamt`: The shift amount. If this is greater than the length, then","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":305176,"byte_end":305249,"line_start":540,"line_end":540,"column_start":2,"column_end":75}},{"value":"/   the slice is zeroed immediately.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":305251,"byte_end":305289,"line_start":541,"line_end":541,"column_start":2,"column_end":40}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":305291,"byte_end":305294,"line_start":542,"line_end":542,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":305296,"byte_end":305310,"line_start":543,"line_end":543,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":305312,"byte_end":305315,"line_start":544,"line_end":544,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":305317,"byte_end":305328,"line_start":545,"line_end":545,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":305330,"byte_end":305357,"line_start":546,"line_end":546,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":305359,"byte_end":305362,"line_start":547,"line_end":547,"column_start":2,"column_end":5}},{"value":"/ let mut src = [0x4Bu8, 0xA5];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":305364,"byte_end":305397,"line_start":548,"line_end":548,"column_start":2,"column_end":35}},{"value":"/ let bits = &mut src.bits_mut::<Msb0>()[2 .. 14];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":305399,"byte_end":305451,"line_start":549,"line_end":549,"column_start":2,"column_end":54}},{"value":"/ *bits <<= 3;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":305453,"byte_end":305469,"line_start":550,"line_end":550,"column_start":2,"column_end":18}},{"value":"/ assert_eq!(src, [0b01_011_101, 0b001_000_01]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":305471,"byte_end":305521,"line_start":551,"line_end":551,"column_start":2,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":305523,"byte_end":305530,"line_start":552,"line_end":552,"column_start":2,"column_end":9}},{"value":"allow(clippy :: suspicious_op_assign_impl)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":305532,"byte_end":305575,"line_start":553,"line_end":553,"column_start":2,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1599},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":308995,"byte_end":309005,"line_start":658,"line_end":658,"column_start":5,"column_end":15},"name":"shr_assign","qualname":"<BitSlice<O, T> as std::ops::ShrAssign>::shr_assign","value":"fn shr_assign<'_>(&'_ mut Self, usize)","parent":{"krate":2,"index":3434},"children":[],"decl_id":{"krate":2,"index":3436},"docs":" Shifts a slice right, in place.","sig":null,"attributes":[{"value":"/ Shifts a slice right, in place.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":308475,"byte_end":308510,"line_start":639,"line_end":639,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":308512,"byte_end":308515,"line_start":640,"line_end":640,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":308517,"byte_end":308533,"line_start":641,"line_end":641,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":308535,"byte_end":308538,"line_start":642,"line_end":642,"column_start":2,"column_end":5}},{"value":"/ - `&mut self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":308540,"byte_end":308557,"line_start":643,"line_end":643,"column_start":2,"column_end":19}},{"value":"/ - `shamt`: The shift amount. If this is greater than the length, then","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":308559,"byte_end":308632,"line_start":644,"line_end":644,"column_start":2,"column_end":75}},{"value":"/   the slice is zeroed immediately.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":308634,"byte_end":308672,"line_start":645,"line_end":645,"column_start":2,"column_end":40}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":308674,"byte_end":308677,"line_start":646,"line_end":646,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":308679,"byte_end":308693,"line_start":647,"line_end":647,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":308695,"byte_end":308698,"line_start":648,"line_end":648,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":308700,"byte_end":308711,"line_start":649,"line_end":649,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":308713,"byte_end":308740,"line_start":650,"line_end":650,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":308742,"byte_end":308745,"line_start":651,"line_end":651,"column_start":2,"column_end":5}},{"value":"/ let mut src = [0x4Bu8, 0xA5];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":308747,"byte_end":308780,"line_start":652,"line_end":652,"column_start":2,"column_end":35}},{"value":"/ let bits = &mut src.bits_mut::<Msb0>()[2 .. 14];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":308782,"byte_end":308834,"line_start":653,"line_end":653,"column_start":2,"column_end":54}},{"value":"/ *bits >>= 3;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":308836,"byte_end":308852,"line_start":654,"line_end":654,"column_start":2,"column_end":18}},{"value":"/ assert_eq!(src, [0b01_000_00_1, 0b011_101_01])","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":308854,"byte_end":308904,"line_start":655,"line_end":655,"column_start":2,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":308906,"byte_end":308913,"line_start":656,"line_end":656,"column_start":2,"column_end":9}},{"value":"allow(clippy :: suspicious_op_assign_impl)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":308915,"byte_end":308958,"line_start":657,"line_end":657,"column_start":2,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1631},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/proxy.rs","byte_start":312165,"byte_end":312171,"line_start":48,"line_end":48,"column_start":12,"column_end":18},"name":"BitMut","qualname":"::slice::proxy::BitMut","value":"BitMut {  }","parent":null,"children":[{"krate":0,"index":1635},{"krate":0,"index":1636},{"krate":0,"index":1637},{"krate":0,"index":1638}],"decl_id":null,"docs":" Proxy referential type, equivalent to `&mut bool`.","sig":null,"attributes":[{"value":"* Proxy referential type, equivalent to `&mut bool`.\n\nThis structure is three words wide, and cannot ever fit into the existing Rust\nlanguage and library infrastructure in the way `&BitSlice` does. While `&mut`\nwrite references are themselves an affine type, with a guaranteed single point\nof destruction and no duplication, the language forbids writing finalization\nlogic for them.\n\nThis means that a custom reference type which implements `Deref` and `DerefMut`\nto a location within the canonical handle, and on `Drop` writes the `Deref`\nlocation into referent memory, is impossible. Short of that, a C++-style thick\nreference-like type is as close as Rust will allow.\n**/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/proxy.rs","byte_start":311477,"byte_end":312153,"line_start":35,"line_end":47,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1643},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/proxy.rs","byte_start":312716,"byte_end":312721,"line_start":64,"line_end":64,"column_start":5,"column_end":10},"name":"deref","qualname":"<BitMut as std::ops::Deref>::deref","value":"fn deref<'_>(&'_ Self) -> &'_ Self::Target","parent":{"krate":2,"index":3486},"children":[],"decl_id":{"krate":2,"index":3488},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1647},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/proxy.rs","byte_start":312844,"byte_end":312853,"line_start":71,"line_end":71,"column_start":5,"column_end":14},"name":"deref_mut","qualname":"<BitMut as std::ops::DerefMut>::deref_mut","value":"fn deref_mut<'_>(&'_ mut Self) -> &'_ mut Self::Target","parent":{"krate":2,"index":3499},"children":[],"decl_id":{"krate":2,"index":3500},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1651},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/proxy.rs","byte_start":312984,"byte_end":312988,"line_start":78,"line_end":78,"column_start":5,"column_end":9},"name":"drop","qualname":"<BitMut as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1722},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":313701,"byte_end":313709,"line_start":46,"line_end":46,"column_start":5,"column_end":13},"name":"to_owned","qualname":"<BitSlice<O, T> as std::borrow::ToOwned>::to_owned","value":"fn to_owned<'_>(&'_ Self) -> Self::Owned","parent":{"krate":5,"index":783},"children":[],"decl_id":{"krate":5,"index":785},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1729},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":313909,"byte_end":313912,"line_start":56,"line_end":56,"column_start":5,"column_end":8},"name":"cmp","qualname":"<BitSlice<O, T> as std::cmp::Ord>::cmp","value":"fn cmp<'_, '_>(&'_ Self, &'_ Self) -> Ordering","parent":{"krate":2,"index":2951},"children":[],"decl_id":{"krate":2,"index":2952},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1736},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":314814,"byte_end":314816,"line_start":86,"line_end":86,"column_start":5,"column_end":7},"name":"eq","qualname":"<BitSlice<A, B> as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ BitSlice<C, D>) -> bool","parent":{"krate":2,"index":2915},"children":[],"decl_id":{"krate":2,"index":2917},"docs":" Performas a comparison by `==`.","sig":null,"attributes":[{"value":"/ Performas a comparison by `==`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":314512,"byte_end":314547,"line_start":72,"line_end":72,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":314549,"byte_end":314552,"line_start":73,"line_end":73,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":314554,"byte_end":314568,"line_start":74,"line_end":74,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":314570,"byte_end":314573,"line_start":75,"line_end":75,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":314575,"byte_end":314586,"line_start":76,"line_end":76,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":314588,"byte_end":314615,"line_start":77,"line_end":77,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":314617,"byte_end":314620,"line_start":78,"line_end":78,"column_start":2,"column_end":5}},{"value":"/ let lsrc = [8u8, 16, 32, 0];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":314622,"byte_end":314654,"line_start":79,"line_end":79,"column_start":2,"column_end":34}},{"value":"/ let rsrc = 0x10_08_04_00u32;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":314656,"byte_end":314688,"line_start":80,"line_end":80,"column_start":2,"column_end":34}},{"value":"/ let lbits = lsrc.bits::<Lsb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":314690,"byte_end":314726,"line_start":81,"line_end":81,"column_start":2,"column_end":38}},{"value":"/ let rbits = rsrc.bits::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":314728,"byte_end":314764,"line_start":82,"line_end":82,"column_start":2,"column_end":38}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":314766,"byte_end":314769,"line_start":83,"line_end":83,"column_start":2,"column_end":5}},{"value":"/ assert_eq!(lbits, rbits);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":314771,"byte_end":314800,"line_start":84,"line_end":84,"column_start":2,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":314802,"byte_end":314809,"line_start":85,"line_end":85,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":1743},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":315091,"byte_end":315093,"line_start":96,"line_end":96,"column_start":5,"column_end":7},"name":"eq","qualname":"<&'_ BitSlice<A, B> as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ BitSlice<C, D>) -> bool","parent":{"krate":2,"index":2915},"children":[],"decl_id":{"krate":2,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1749},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":315283,"byte_end":315285,"line_start":103,"line_end":103,"column_start":5,"column_end":7},"name":"eq","qualname":"<BitSlice<A, B> as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_, '_>(&'_ Self, &'_ &'_ BitSlice<C, D>) -> bool","parent":{"krate":2,"index":2915},"children":[],"decl_id":{"krate":2,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1755},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":316243,"byte_end":316254,"line_start":137,"line_end":137,"column_start":5,"column_end":16},"name":"partial_cmp","qualname":"<BitSlice<A, B> as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ BitSlice<C, D>) -> Option<Ordering>","parent":{"krate":2,"index":2961},"children":[],"decl_id":{"krate":2,"index":2963},"docs":" Performs a comparison by `<` or `>`.","sig":null,"attributes":[{"value":"/ Performs a comparison by `<` or `>`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":315845,"byte_end":315885,"line_start":119,"line_end":119,"column_start":2,"column_end":42}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":315887,"byte_end":315890,"line_start":120,"line_end":120,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":315892,"byte_end":315906,"line_start":121,"line_end":121,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":315908,"byte_end":315911,"line_start":122,"line_end":122,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":315913,"byte_end":315924,"line_start":123,"line_end":123,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":315926,"byte_end":315953,"line_start":124,"line_end":124,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":315955,"byte_end":315958,"line_start":125,"line_end":125,"column_start":2,"column_end":5}},{"value":"/ let src = 0x45u8;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":315960,"byte_end":315981,"line_start":126,"line_end":126,"column_start":2,"column_end":23}},{"value":"/ let bits = src.bits::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":315983,"byte_end":316017,"line_start":127,"line_end":127,"column_start":2,"column_end":36}},{"value":"/ let a = &bits[0 .. 3]; // 010","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":316019,"byte_end":316052,"line_start":128,"line_end":128,"column_start":2,"column_end":35}},{"value":"/ let b = &bits[0 .. 4]; // 0100","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":316054,"byte_end":316088,"line_start":129,"line_end":129,"column_start":2,"column_end":36}},{"value":"/ let c = &bits[0 .. 5]; // 01000","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":316090,"byte_end":316125,"line_start":130,"line_end":130,"column_start":2,"column_end":37}},{"value":"/ let d = &bits[4 .. 8]; // 0101","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":316127,"byte_end":316161,"line_start":131,"line_end":131,"column_start":2,"column_end":36}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":316163,"byte_end":316166,"line_start":132,"line_end":132,"column_start":2,"column_end":5}},{"value":"/ assert!(a < b);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":316168,"byte_end":316187,"line_start":133,"line_end":133,"column_start":2,"column_end":21}},{"value":"/ assert!(b < c);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":316189,"byte_end":316208,"line_start":134,"line_end":134,"column_start":2,"column_end":21}},{"value":"/ assert!(c < d);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":316210,"byte_end":316229,"line_start":135,"line_end":135,"column_start":2,"column_end":21}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":316231,"byte_end":316238,"line_start":136,"line_end":136,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":1761},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":316671,"byte_end":316682,"line_start":151,"line_end":151,"column_start":5,"column_end":16},"name":"partial_cmp","qualname":"<&'_ BitSlice<A, B> as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ BitSlice<C, D>) -> Option<Ordering>","parent":{"krate":2,"index":2961},"children":[],"decl_id":{"krate":2,"index":2963},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1767},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":316894,"byte_end":316905,"line_start":158,"line_end":158,"column_start":5,"column_end":16},"name":"partial_cmp","qualname":"<BitSlice<A, B> as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_, '_>(&'_ Self, &'_ &'_ BitSlice<C, D>)\n-> Option<Ordering>","parent":{"krate":2,"index":2961},"children":[],"decl_id":{"krate":2,"index":2963},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1771},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":317219,"byte_end":317225,"line_start":167,"line_end":167,"column_start":5,"column_end":11},"name":"as_mut","qualname":"<BitSlice<O, T> as std::convert::AsMut>::as_mut","value":"fn as_mut<'_>(&'_ mut Self) -> &'_ mut [T]","parent":{"krate":2,"index":3163},"children":[],"decl_id":{"krate":2,"index":3165},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1775},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":317513,"byte_end":317519,"line_start":176,"line_end":176,"column_start":5,"column_end":11},"name":"as_ref","qualname":"<BitSlice<O, T> as std::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ [T]","parent":{"krate":2,"index":3160},"children":[],"decl_id":{"krate":2,"index":3162},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1780},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":317653,"byte_end":317657,"line_start":183,"line_end":183,"column_start":5,"column_end":9},"name":"from","qualname":"<&'a BitSlice<O, T> as std::convert::From>::from","value":"fn from(&'a T) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1785},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":317818,"byte_end":317822,"line_start":190,"line_end":190,"column_start":5,"column_end":9},"name":"from","qualname":"<&'a BitSlice<O, T> as std::convert::From>::from","value":"fn from(&'a [T]) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1790},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":317989,"byte_end":317993,"line_start":197,"line_end":197,"column_start":5,"column_end":9},"name":"from","qualname":"<&'a mut BitSlice<O, T> as std::convert::From>::from","value":"fn from(&'a mut T) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1795},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":318170,"byte_end":318174,"line_start":204,"line_end":204,"column_start":5,"column_end":9},"name":"from","qualname":"<&'a mut BitSlice<O, T> as std::convert::From>::from","value":"fn from(&'a mut [T]) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1800},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":318337,"byte_end":318344,"line_start":211,"line_end":211,"column_start":5,"column_end":12},"name":"default","qualname":"<&'a BitSlice<O, T> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1805},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":318475,"byte_end":318482,"line_start":218,"line_end":218,"column_start":5,"column_end":12},"name":"default","qualname":"<&'a mut BitSlice<O, T> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1810},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":322443,"byte_end":322446,"line_start":334,"line_end":334,"column_start":5,"column_end":8},"name":"fmt","qualname":"<BitSlice<O, T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":" Renders the `BitSlice` type header and contents for debug.","sig":null,"attributes":[{"value":"/ Renders the `BitSlice` type header and contents for debug.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":322025,"byte_end":322087,"line_start":318,"line_end":318,"column_start":2,"column_end":64}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":322089,"byte_end":322092,"line_start":319,"line_end":319,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":322094,"byte_end":322108,"line_start":320,"line_end":320,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":322110,"byte_end":322113,"line_start":321,"line_end":321,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":322115,"byte_end":322126,"line_start":322,"line_end":322,"column_start":2,"column_end":13}},{"value":"/ # #[cfg(feature = \"alloc\")] {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":322128,"byte_end":322161,"line_start":323,"line_end":323,"column_start":2,"column_end":35}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":322163,"byte_end":322190,"line_start":324,"line_end":324,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":322192,"byte_end":322195,"line_start":325,"line_end":325,"column_start":2,"column_end":5}},{"value":"/ let src = [0b0101_0000_1111_0101u16, 0b00000000_0000_0010];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":322197,"byte_end":322260,"line_start":326,"line_end":326,"column_start":2,"column_end":65}},{"value":"/ let bits = &src.bits::<Lsb0>()[.. 18];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":322262,"byte_end":322304,"line_start":327,"line_end":327,"column_start":2,"column_end":44}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":322306,"byte_end":322321,"line_start":328,"line_end":328,"column_start":2,"column_end":17}},{"value":"/     \"BitSlice<Lsb0, u16> [1010111100001010, 01]\",","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":322326,"byte_end":322379,"line_start":329,"line_end":329,"column_start":5,"column_end":58}},{"value":"/     &format!(\"{:?}\", bits),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":322381,"byte_end":322412,"line_start":330,"line_end":330,"column_start":2,"column_end":33}},{"value":"/ );","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":322414,"byte_end":322420,"line_start":331,"line_end":331,"column_start":2,"column_end":8}},{"value":"/ # }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":322422,"byte_end":322429,"line_start":332,"line_end":332,"column_start":2,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":322431,"byte_end":322438,"line_start":333,"line_end":333,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":1814},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":323202,"byte_end":323205,"line_start":357,"line_end":357,"column_start":5,"column_end":8},"name":"fmt","qualname":"<BitSlice<O, T> as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1824},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":323980,"byte_end":323984,"line_start":383,"line_end":383,"column_start":5,"column_end":9},"name":"hash","qualname":"<BitSlice<O, T> as std::hash::Hash>::hash","value":"fn hash<H, '_, '_>(&'_ Self, &'_ mut H) where H: Hasher","parent":{"krate":2,"index":10526},"children":[],"decl_id":{"krate":2,"index":10527},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1835},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"store","qualname":"::store","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","parent":null,"children":[{"krate":0,"index":1836},{"krate":0,"index":1837},{"krate":0,"index":1840},{"krate":0,"index":1843},{"krate":0,"index":1846},{"krate":0,"index":1847},{"krate":0,"index":1850},{"krate":0,"index":1851},{"krate":0,"index":1854},{"krate":0,"index":1855},{"krate":0,"index":1857},{"krate":0,"index":1860},{"krate":0,"index":1863},{"krate":0,"index":1866},{"krate":0,"index":1869},{"krate":0,"index":1870},{"krate":0,"index":1873},{"krate":0,"index":1876},{"krate":0,"index":1879},{"krate":0,"index":1882},{"krate":0,"index":1885},{"krate":0,"index":1888},{"krate":0,"index":1891},{"krate":0,"index":1894},{"krate":0,"index":1897},{"krate":0,"index":1900},{"krate":0,"index":1903},{"krate":0,"index":1918},{"krate":0,"index":1920},{"krate":0,"index":4248},{"krate":0,"index":4254},{"krate":0,"index":4260},{"krate":0,"index":4266},{"krate":0,"index":4272},{"krate":0,"index":1921},{"krate":0,"index":1922},{"krate":0,"index":4278},{"krate":0,"index":4279},{"krate":0,"index":4280},{"krate":0,"index":4281},{"krate":0,"index":4282}],"decl_id":null,"docs":" Bit management","sig":null,"attributes":[{"value":"* Bit management\n\nThe `BitStore` trait defines constants and associated functions suitable for\nmanaging the bit patterns of a fundamental, and is the constraint for the\nstorage type of the data structures of the rest of the crate.\n\nThe other types in this module provide stronger rules about how indices map to\nconcrete bits in fundamental elements. They are implementation details, and are\nnot exported in the prelude.\n!*/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":329167,"byte_end":329592,"line_start":1,"line_end":10,"column_start":1,"column_end":4}}]},{"kind":"Trait","id":{"krate":0,"index":1903},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":330439,"byte_end":330447,"line_start":58,"line_end":58,"column_start":11,"column_end":19},"name":"BitStore","qualname":"::store::BitStore","value":"BitStore: Sealed + Binary + BitAnd<Self, Output = Self> + BitAndAssign<Self> +\nBitOr<Self, Output = Self> + BitOrAssign<Self> + Copy + Debug + Display + Eq +\nFrom<u8> + TryInto<usize> + LowerHex + Not<Output = Self> + Send + Shl<u8,\nOutput = Self> + ShlAssign<u8> + Shr<u8, Output = Self> + ShrAssign<u8> +\nSized + Sync + UpperHex + BitOps","parent":null,"children":[{"krate":0,"index":1904},{"krate":0,"index":1905},{"krate":0,"index":1906},{"krate":0,"index":1907},{"krate":0,"index":1908},{"krate":0,"index":1909},{"krate":0,"index":1910},{"krate":0,"index":1911},{"krate":0,"index":1913},{"krate":0,"index":1915},{"krate":0,"index":1917}],"decl_id":null,"docs":" Generalizes over the fundamental types for use in `bitvec` data structures.","sig":null,"attributes":[{"value":"* Generalizes over the fundamental types for use in `bitvec` data structures.\n\nThis trait must only be implemented on unsigned integer primitives with full\nalignment. It cannot be implemented on `u128` on any architecture, or on `u64`\non 32-bit systems.\n\nThe `Sealed` supertrait ensures that this can only be implemented locally, and\nwill never be implemented by downstream crates on new types.\n**/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":330028,"byte_end":330428,"line_start":49,"line_end":57,"column_start":1,"column_end":4}}]},{"kind":"Const","id":{"krate":0,"index":1904},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":331317,"byte_end":331321,"line_start":93,"line_end":93,"column_start":8,"column_end":12},"name":"BITS","qualname":"::store::BitStore::BITS","value":"u8","parent":{"krate":0,"index":1903},"children":[],"decl_id":null,"docs":" The width, in bits, of this type.\n","sig":null,"attributes":[{"value":"/ The width, in bits, of this type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":331272,"byte_end":331309,"line_start":92,"line_end":92,"column_start":2,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":1905},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":331493,"byte_end":331497,"line_start":97,"line_end":97,"column_start":8,"column_end":12},"name":"INDX","qualname":"::store::BitStore::INDX","value":"u8","parent":{"krate":0,"index":1903},"children":[],"decl_id":null,"docs":" The number of bits required to index a bit inside the type. This is\n always log<sub>2</sub> of the type’s bit width.\n","sig":null,"attributes":[{"value":"/ The number of bits required to index a bit inside the type. This is","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":331359,"byte_end":331430,"line_start":95,"line_end":95,"column_start":2,"column_end":73}},{"value":"/ always log<sub>2</sub> of the type’s bit width.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":331432,"byte_end":331485,"line_start":96,"line_end":96,"column_start":2,"column_end":53}}]},{"kind":"Const","id":{"krate":0,"index":1906},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":331683,"byte_end":331687,"line_start":101,"line_end":101,"column_start":8,"column_end":12},"name":"MASK","qualname":"::store::BitStore::MASK","value":"u8","parent":{"krate":0,"index":1903},"children":[],"decl_id":null,"docs":" The bitmask to turn an arbitrary number into a bit index. Bit indices\n are always stored in the lowest bits of an index value.\n","sig":null,"attributes":[{"value":"/ The bitmask to turn an arbitrary number into a bit index. Bit indices","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":331541,"byte_end":331614,"line_start":99,"line_end":99,"column_start":2,"column_end":75}},{"value":"/ are always stored in the lowest bits of an index value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":331616,"byte_end":331675,"line_start":100,"line_end":100,"column_start":2,"column_end":61}}]},{"kind":"Const","id":{"krate":0,"index":1907},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":331754,"byte_end":331759,"line_start":104,"line_end":104,"column_start":8,"column_end":13},"name":"FALSE","qualname":"::store::BitStore::FALSE","value":"Self","parent":{"krate":0,"index":1903},"children":[],"decl_id":null,"docs":" The value with all bits unset.\n","sig":null,"attributes":[{"value":"/ The value with all bits unset.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":331712,"byte_end":331746,"line_start":103,"line_end":103,"column_start":2,"column_end":36}}]},{"kind":"Const","id":{"krate":0,"index":1908},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":331809,"byte_end":331813,"line_start":107,"line_end":107,"column_start":8,"column_end":12},"name":"TRUE","qualname":"::store::BitStore::TRUE","value":"Self","parent":{"krate":0,"index":1903},"children":[],"decl_id":null,"docs":" The value with all bits set.\n","sig":null,"attributes":[{"value":"/ The value with all bits set.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":331769,"byte_end":331801,"line_start":106,"line_end":106,"column_start":2,"column_end":34}}]},{"kind":"Const","id":{"krate":0,"index":1909},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":331938,"byte_end":331946,"line_start":111,"line_end":111,"column_start":8,"column_end":16},"name":"TYPENAME","qualname":"::store::BitStore::TYPENAME","value":"&'static str","parent":{"krate":0,"index":1903},"children":[],"decl_id":null,"docs":" Name of the implementing type. This is only necessary until the compiler\n stabilizes `type_name()`.\n","sig":null,"attributes":[{"value":"/ Name of the implementing type. This is only necessary until the compiler","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":331823,"byte_end":331899,"line_start":109,"line_end":109,"column_start":2,"column_end":78}},{"value":"/ stabilizes `type_name()`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":331901,"byte_end":331930,"line_start":110,"line_end":110,"column_start":2,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":1910},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":332401,"byte_end":332407,"line_start":121,"line_end":121,"column_start":7,"column_end":13},"name":"Access","qualname":"::store::BitStore::Access","value":"type Access: BitAccess<Self>;","parent":{"krate":0,"index":1903},"children":[],"decl_id":null,"docs":" Shared/mutable access wrapper.","sig":null,"attributes":[{"value":"/ Shared/mutable access wrapper.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":331964,"byte_end":331998,"line_start":113,"line_end":113,"column_start":2,"column_end":36}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":332000,"byte_end":332003,"line_start":114,"line_end":114,"column_start":2,"column_end":5}},{"value":"/ Within `&BitSlice` and `&mut BitSlice` contexts, the `Access` type","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":332005,"byte_end":332075,"line_start":115,"line_end":115,"column_start":2,"column_end":72}},{"value":"/ governs all access to underlying memory that may be contended by","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":332077,"byte_end":332145,"line_start":116,"line_end":116,"column_start":2,"column_end":70}},{"value":"/ multiple slices. When a codepath knows that it has full, uncontended","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":332147,"byte_end":332219,"line_start":117,"line_end":117,"column_start":2,"column_end":74}},{"value":"/ ownership of a memory element of `Self`, and no other codepath may","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":332221,"byte_end":332291,"line_start":118,"line_end":118,"column_start":2,"column_end":72}},{"value":"/ observe or modify it, then that codepath may skip the `Access` type and","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":332293,"byte_end":332368,"line_start":119,"line_end":119,"column_start":2,"column_end":77}},{"value":"/ use plain accessors.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":332370,"byte_end":332394,"line_start":120,"line_end":120,"column_start":2,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1911},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":333034,"byte_end":333037,"line_start":144,"line_end":144,"column_start":5,"column_end":8},"name":"get","qualname":"::store::BitStore::get","value":"fn get<O, '_>(&'_ Self, BitIdx<Self>) -> bool where O: BitOrder","parent":{"krate":0,"index":1903},"children":[],"decl_id":null,"docs":" Gets a specific bit in an element.","sig":null,"attributes":[{"value":"/ Gets a specific bit in an element.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":332428,"byte_end":332466,"line_start":123,"line_end":123,"column_start":2,"column_end":40}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":332468,"byte_end":332471,"line_start":124,"line_end":124,"column_start":2,"column_end":5}},{"value":"/ # Safety","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":332473,"byte_end":332485,"line_start":125,"line_end":125,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":332487,"byte_end":332490,"line_start":126,"line_end":126,"column_start":2,"column_end":5}},{"value":"/ This method cannot be called from within an `&BitSlice` context; it may","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":332492,"byte_end":332567,"line_start":127,"line_end":127,"column_start":2,"column_end":77}},{"value":"/ only be called by construction of an `&Self` reference from a `Self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":332569,"byte_end":332641,"line_start":128,"line_end":128,"column_start":2,"column_end":74}},{"value":"/ element directly.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":332643,"byte_end":332664,"line_start":129,"line_end":129,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":332666,"byte_end":332669,"line_start":130,"line_end":130,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":332671,"byte_end":332687,"line_start":131,"line_end":131,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":332689,"byte_end":332692,"line_start":132,"line_end":132,"column_start":2,"column_end":5}},{"value":"/ - `&self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":332694,"byte_end":332707,"line_start":133,"line_end":133,"column_start":2,"column_end":15}},{"value":"/ - `place`: A bit index in the element. The bit under this index, as","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":332709,"byte_end":332780,"line_start":134,"line_end":134,"column_start":2,"column_end":73}},{"value":"/   governed by the `O` `BitOrder`, will be retrieved as a `bool`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":332782,"byte_end":332850,"line_start":135,"line_end":135,"column_start":2,"column_end":70}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":332852,"byte_end":332855,"line_start":136,"line_end":136,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":332857,"byte_end":332870,"line_start":137,"line_end":137,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":332872,"byte_end":332875,"line_start":138,"line_end":138,"column_start":2,"column_end":5}},{"value":"/ The value of the bit under `place`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":332877,"byte_end":332916,"line_start":139,"line_end":139,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":332918,"byte_end":332921,"line_start":140,"line_end":140,"column_start":2,"column_end":5}},{"value":"/ # Type Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":332923,"byte_end":332944,"line_start":141,"line_end":141,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":332946,"byte_end":332949,"line_start":142,"line_end":142,"column_start":2,"column_end":5}},{"value":"/ - `O`: A `BitOrder` implementation to translate the index into a position.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":332951,"byte_end":333029,"line_start":143,"line_end":143,"column_start":2,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1913},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":333697,"byte_end":333700,"line_start":165,"line_end":165,"column_start":5,"column_end":8},"name":"set","qualname":"::store::BitStore::set","value":"fn set<O, '_>(&'_ mut Self, BitIdx<Self>, bool) where O: BitOrder","parent":{"krate":0,"index":1903},"children":[],"decl_id":null,"docs":" Sets a specific bit in an element to a given value.","sig":null,"attributes":[{"value":"/ Sets a specific bit in an element to a given value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":333144,"byte_end":333199,"line_start":149,"line_end":149,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":333201,"byte_end":333204,"line_start":150,"line_end":150,"column_start":2,"column_end":5}},{"value":"/ # Safety","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":333206,"byte_end":333218,"line_start":151,"line_end":151,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":333220,"byte_end":333223,"line_start":152,"line_end":152,"column_start":2,"column_end":5}},{"value":"/ This method cannot be called from within an `&mut BitSlice` context; it","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":333225,"byte_end":333300,"line_start":153,"line_end":153,"column_start":2,"column_end":77}},{"value":"/ may only be called by construction of an `&mut Self` reference from a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":333302,"byte_end":333375,"line_start":154,"line_end":154,"column_start":2,"column_end":75}},{"value":"/ `Self` element directly.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":333377,"byte_end":333405,"line_start":155,"line_end":155,"column_start":2,"column_end":30}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":333407,"byte_end":333410,"line_start":156,"line_end":156,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":333412,"byte_end":333428,"line_start":157,"line_end":157,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":333430,"byte_end":333433,"line_start":158,"line_end":158,"column_start":2,"column_end":5}},{"value":"/ - `place`: A bit index in the element. The bit under this index, as","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":333435,"byte_end":333506,"line_start":159,"line_end":159,"column_start":2,"column_end":73}},{"value":"/   governed by the `O` `BitOrder`, will be set according to `value`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":333508,"byte_end":333579,"line_start":160,"line_end":160,"column_start":2,"column_end":73}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":333581,"byte_end":333584,"line_start":161,"line_end":161,"column_start":2,"column_end":5}},{"value":"/ # Type Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":333586,"byte_end":333607,"line_start":162,"line_end":162,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":333609,"byte_end":333612,"line_start":163,"line_end":163,"column_start":2,"column_end":5}},{"value":"/ - `O`: A `BitOrder` implementation to translate the index into a position.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":333614,"byte_end":333692,"line_start":164,"line_end":164,"column_start":2,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1915},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":334887,"byte_end":334897,"line_start":207,"line_end":207,"column_start":5,"column_end":15},"name":"count_ones","qualname":"::store::BitStore::count_ones","value":"fn count_ones(Self) -> usize","parent":{"krate":0,"index":1903},"children":[],"decl_id":null,"docs":" Counts how many bits in `self` are set to `1`.","sig":null,"attributes":[{"value":"/ Counts how many bits in `self` are set to `1`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":333872,"byte_end":333922,"line_start":176,"line_end":176,"column_start":2,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":333924,"byte_end":333927,"line_start":177,"line_end":177,"column_start":2,"column_end":5}},{"value":"/ This zero-extends `self` to `usize`, and uses the [`usize::count_ones`]","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":333929,"byte_end":334004,"line_start":178,"line_end":178,"column_start":2,"column_end":77}},{"value":"/ inherent method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":334006,"byte_end":334026,"line_start":179,"line_end":179,"column_start":2,"column_end":22}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":334028,"byte_end":334031,"line_start":180,"line_end":180,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":334033,"byte_end":334049,"line_start":181,"line_end":181,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":334051,"byte_end":334054,"line_start":182,"line_end":182,"column_start":2,"column_end":5}},{"value":"/ - `self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":334056,"byte_end":334068,"line_start":183,"line_end":183,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":334070,"byte_end":334073,"line_start":184,"line_end":184,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":334075,"byte_end":334088,"line_start":185,"line_end":185,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":334090,"byte_end":334093,"line_start":186,"line_end":186,"column_start":2,"column_end":5}},{"value":"/ The number of bits in `self` set to `1`. This is a `usize` instead of a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":334095,"byte_end":334170,"line_start":187,"line_end":187,"column_start":2,"column_end":77}},{"value":"/ `u32` in order to ease arithmetic throughout the crate.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":334172,"byte_end":334231,"line_start":188,"line_end":188,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":334233,"byte_end":334236,"line_start":189,"line_end":189,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":334238,"byte_end":334252,"line_start":190,"line_end":190,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":334254,"byte_end":334257,"line_start":191,"line_end":191,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":334259,"byte_end":334270,"line_start":192,"line_end":192,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::BitStore;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":334272,"byte_end":334306,"line_start":193,"line_end":193,"column_start":2,"column_end":36}},{"value":"/ assert_eq!(BitStore::count_ones(0u8), 0);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":334308,"byte_end":334353,"line_start":194,"line_end":194,"column_start":2,"column_end":47}},{"value":"/ assert_eq!(BitStore::count_ones(128u8), 1);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":334355,"byte_end":334402,"line_start":195,"line_end":195,"column_start":2,"column_end":49}},{"value":"/ assert_eq!(BitStore::count_ones(192u8), 2);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":334404,"byte_end":334451,"line_start":196,"line_end":196,"column_start":2,"column_end":49}},{"value":"/ assert_eq!(BitStore::count_ones(224u8), 3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":334453,"byte_end":334500,"line_start":197,"line_end":197,"column_start":2,"column_end":49}},{"value":"/ assert_eq!(BitStore::count_ones(240u8), 4);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":334502,"byte_end":334549,"line_start":198,"line_end":198,"column_start":2,"column_end":49}},{"value":"/ assert_eq!(BitStore::count_ones(248u8), 5);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":334551,"byte_end":334598,"line_start":199,"line_end":199,"column_start":2,"column_end":49}},{"value":"/ assert_eq!(BitStore::count_ones(252u8), 6);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":334600,"byte_end":334647,"line_start":200,"line_end":200,"column_start":2,"column_end":49}},{"value":"/ assert_eq!(BitStore::count_ones(254u8), 7);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":334649,"byte_end":334696,"line_start":201,"line_end":201,"column_start":2,"column_end":49}},{"value":"/ assert_eq!(BitStore::count_ones(255u8), 8);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":334698,"byte_end":334745,"line_start":202,"line_end":202,"column_start":2,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":334747,"byte_end":334754,"line_start":203,"line_end":203,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":334756,"byte_end":334759,"line_start":204,"line_end":204,"column_start":2,"column_end":5}},{"value":"/ [`usize::count_ones`]: https://doc.rust-lang.org/stable/std/primitive.usize.html#method.count_ones","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":334761,"byte_end":334863,"line_start":205,"line_end":205,"column_start":2,"column_end":104}},{"value":"inline(always)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":334865,"byte_end":334882,"line_start":206,"line_end":206,"column_start":2,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1917},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":336276,"byte_end":336287,"line_start":247,"line_end":247,"column_start":5,"column_end":16},"name":"count_zeros","qualname":"::store::BitStore::count_zeros","value":"fn count_zeros(Self) -> usize","parent":{"krate":0,"index":1903},"children":[],"decl_id":null,"docs":" Counts how many bits in `self` are set to `0`.","sig":null,"attributes":[{"value":"/ Counts how many bits in `self` are set to `0`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":335186,"byte_end":335236,"line_start":215,"line_end":215,"column_start":2,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":335238,"byte_end":335241,"line_start":216,"line_end":216,"column_start":2,"column_end":5}},{"value":"/ This inverts `self`, so all `0` bits are `1` and all `1` bits are `0`,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":335243,"byte_end":335317,"line_start":217,"line_end":217,"column_start":2,"column_end":76}},{"value":"/ then zero-extends `self` to `usize` and uses the [`usize::count_ones`]","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":335319,"byte_end":335393,"line_start":218,"line_end":218,"column_start":2,"column_end":76}},{"value":"/ inherent method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":335395,"byte_end":335415,"line_start":219,"line_end":219,"column_start":2,"column_end":22}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":335417,"byte_end":335420,"line_start":220,"line_end":220,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":335422,"byte_end":335438,"line_start":221,"line_end":221,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":335440,"byte_end":335443,"line_start":222,"line_end":222,"column_start":2,"column_end":5}},{"value":"/ - `self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":335445,"byte_end":335457,"line_start":223,"line_end":223,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":335459,"byte_end":335462,"line_start":224,"line_end":224,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":335464,"byte_end":335477,"line_start":225,"line_end":225,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":335479,"byte_end":335482,"line_start":226,"line_end":226,"column_start":2,"column_end":5}},{"value":"/ The number of bits in `self` set to `0`. This is a `usize` instead of a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":335484,"byte_end":335559,"line_start":227,"line_end":227,"column_start":2,"column_end":77}},{"value":"/ `u32` in order to ease arithmetic throughout the crate.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":335561,"byte_end":335620,"line_start":228,"line_end":228,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":335622,"byte_end":335625,"line_start":229,"line_end":229,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":335627,"byte_end":335641,"line_start":230,"line_end":230,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":335643,"byte_end":335646,"line_start":231,"line_end":231,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":335648,"byte_end":335659,"line_start":232,"line_end":232,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::BitStore;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":335661,"byte_end":335695,"line_start":233,"line_end":233,"column_start":2,"column_end":36}},{"value":"/ assert_eq!(BitStore::count_zeros(0u8), 8);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":335697,"byte_end":335743,"line_start":234,"line_end":234,"column_start":2,"column_end":48}},{"value":"/ assert_eq!(BitStore::count_zeros(1u8), 7);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":335745,"byte_end":335791,"line_start":235,"line_end":235,"column_start":2,"column_end":48}},{"value":"/ assert_eq!(BitStore::count_zeros(3u8), 6);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":335793,"byte_end":335839,"line_start":236,"line_end":236,"column_start":2,"column_end":48}},{"value":"/ assert_eq!(BitStore::count_zeros(7u8), 5);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":335841,"byte_end":335887,"line_start":237,"line_end":237,"column_start":2,"column_end":48}},{"value":"/ assert_eq!(BitStore::count_zeros(15u8), 4);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":335889,"byte_end":335936,"line_start":238,"line_end":238,"column_start":2,"column_end":49}},{"value":"/ assert_eq!(BitStore::count_zeros(31u8), 3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":335938,"byte_end":335985,"line_start":239,"line_end":239,"column_start":2,"column_end":49}},{"value":"/ assert_eq!(BitStore::count_zeros(63u8), 2);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":335987,"byte_end":336034,"line_start":240,"line_end":240,"column_start":2,"column_end":49}},{"value":"/ assert_eq!(BitStore::count_zeros(127u8), 1);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":336036,"byte_end":336084,"line_start":241,"line_end":241,"column_start":2,"column_end":50}},{"value":"/ assert_eq!(BitStore::count_zeros(255u8), 0);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":336086,"byte_end":336134,"line_start":242,"line_end":242,"column_start":2,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":336136,"byte_end":336143,"line_start":243,"line_end":243,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":336145,"byte_end":336148,"line_start":244,"line_end":244,"column_start":2,"column_end":5}},{"value":"/ [`usize::count_ones`]: https://doc.rust-lang.org/stable/std/primitive.usize.html#method.count_ones","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":336150,"byte_end":336252,"line_start":245,"line_end":245,"column_start":2,"column_end":104}},{"value":"inline(always)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":336254,"byte_end":336271,"line_start":246,"line_end":246,"column_start":2,"column_end":19}}]},{"kind":"Function","id":{"krate":0,"index":1918},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":336785,"byte_end":336789,"line_start":267,"line_end":267,"column_start":14,"column_end":18},"name":"elts","qualname":"::store::elts","value":"const fn elts<T>(usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Compute the number of elements required to store a number of bits.","sig":null,"attributes":[{"value":"* Compute the number of elements required to store a number of bits.\n\n# Parameters\n\n- `bits`: The number of bits to store in an element `T` array.\n\n# Returns\n\nThe number of elements `T` required to store `bits`.\n\nBecause this is a const function, when `bits` is a const-expr, this function can\nbe used in array types `[T; elts(len)]`.\n**/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":336416,"byte_end":336756,"line_start":253,"line_end":265,"column_start":1,"column_end":4}}]},{"kind":"Trait","id":{"krate":0,"index":1921},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":338260,"byte_end":338266,"line_start":323,"line_end":323,"column_start":11,"column_end":17},"name":"Sealed","qualname":"::store::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":" Marker trait to seal `BitStore` against downstream implementation.","sig":null,"attributes":[{"value":"* Marker trait to seal `BitStore` against downstream implementation.\n\nThis trait is public in the module, so that other modules in the crate can use\nit, but so long as it is not exported by the crate root and this module is\nprivate, this trait effectively forbids downstream implementation of the\n`BitStore` trait.\n**/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":337914,"byte_end":338234,"line_start":315,"line_end":321,"column_start":1,"column_end":4}}]},{"kind":"Mod","id":{"krate":0,"index":1923},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"boxed","qualname":"::boxed","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","parent":null,"children":[{"krate":0,"index":1924},{"krate":0,"index":1925},{"krate":0,"index":1926},{"krate":0,"index":1929},{"krate":0,"index":1932},{"krate":0,"index":1935},{"krate":0,"index":1938},{"krate":0,"index":1941},{"krate":0,"index":1944},{"krate":0,"index":1945},{"krate":0,"index":1948},{"krate":0,"index":1951},{"krate":0,"index":1952},{"krate":0,"index":1953},{"krate":0,"index":1955},{"krate":0,"index":1958},{"krate":0,"index":1963},{"krate":0,"index":1984},{"krate":0,"index":2024},{"krate":0,"index":2096},{"krate":0,"index":2332},{"krate":0,"index":2535},{"krate":0,"index":2536}],"decl_id":null,"docs":" `BitBox` structure","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","byte_start":2070,"byte_end":2095,"line_start":61,"line_end":61,"column_start":1,"column_end":26}},{"value":"* `BitBox` structure\n\nThis module holds the type for an owned but ungrowable bit sequence. `BitVec` is\nthe more appropriate and useful type for most collections.\n!*/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":338425,"byte_end":338592,"line_start":1,"line_end":5,"column_start":1,"column_end":4}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":338594,"byte_end":338620,"line_start":7,"line_end":7,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1958},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":340051,"byte_end":340057,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"name":"BitBox","qualname":"::boxed::BitBox","value":"BitBox {  }","parent":null,"children":[{"krate":0,"index":1961},{"krate":0,"index":1962}],"decl_id":null,"docs":" A pointer type for owned bit sequences.","sig":null,"attributes":[{"value":"* A pointer type for owned bit sequences.\n\nThis type is essentially a `&BitSlice` that owns its own memory. It can change\nthe contents of its domain, but it cannot change its own domain like `BitVec`\ncan. It is useful for fixed-size collections without lifetime tracking.\n\n# Type Parameters\n\n- `O: BitOrder`: An implementor of the [`BitOrder`] trait. This type is used to\n  convert semantic indices into concrete bit positions in elements, and store or\n  retrieve bit values from the storage type.\n- `T: BitStore`: An implementor of the [`BitStore`] trait: `u8`, `u16`, `u32`,\n  or `u64` (64-bit systems only). This is the actual type in memory that the box\n  will use to store data.\n\n# Safety\n\nThe `BitBox` handle has the same *size* as standard Rust `Box<[T]>` handles, but\nit is ***extremely binary incompatible*** with them. Attempting to treat\n`BitBox<_, T>` as `Box<[T]>` in any manner except through the provided APIs is\n***catastrophically*** unsafe and unsound.\n\n# Trait Implementations\n\n`BitBox<O, T>` implements all the traits that `BitSlice<O, T>` does, by\ndeferring to the `BitSlice` implementation. It also implements conversion traits\nto and from `BitSlice`, and to/from `BitVec`.\n**/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":338827,"byte_end":340028,"line_start":30,"line_end":57,"column_start":1,"column_end":4}},{"value":"repr(C)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":340029,"byte_end":340039,"line_start":58,"line_end":58,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1966},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":340492,"byte_end":340497,"line_start":81,"line_end":81,"column_start":9,"column_end":14},"name":"empty","qualname":"<BitBox<O, T>>::empty","value":"fn empty() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs an empty boxed bitslice.","sig":null,"attributes":[{"value":"/ Constructs an empty boxed bitslice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":340220,"byte_end":340259,"line_start":67,"line_end":67,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":340261,"byte_end":340264,"line_start":68,"line_end":68,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":340266,"byte_end":340279,"line_start":69,"line_end":69,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":340281,"byte_end":340284,"line_start":70,"line_end":70,"column_start":2,"column_end":5}},{"value":"/ An empty `BitBox` at an arbitrary location.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":340286,"byte_end":340333,"line_start":71,"line_end":71,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":340335,"byte_end":340338,"line_start":72,"line_end":72,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":340340,"byte_end":340354,"line_start":73,"line_end":73,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":340356,"byte_end":340359,"line_start":74,"line_end":74,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":340361,"byte_end":340372,"line_start":75,"line_end":75,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":340374,"byte_end":340401,"line_start":76,"line_end":76,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":340403,"byte_end":340406,"line_start":77,"line_end":77,"column_start":2,"column_end":5}},{"value":"/ let bb: BitBox = BitBox::empty();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":340408,"byte_end":340445,"line_start":78,"line_end":78,"column_start":2,"column_end":39}},{"value":"/ assert!(bb.is_empty());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":340447,"byte_end":340474,"line_start":79,"line_end":79,"column_start":2,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":340476,"byte_end":340483,"line_start":80,"line_end":80,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":1967},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":340969,"byte_end":340981,"line_start":106,"line_end":106,"column_start":9,"column_end":21},"name":"from_element","qualname":"<BitBox<O, T>>::from_element","value":"fn from_element(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Produces a `BitBox` from a single element.","sig":null,"attributes":[{"value":"/ Produces a `BitBox` from a single element.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":340581,"byte_end":340627,"line_start":88,"line_end":88,"column_start":2,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":340629,"byte_end":340632,"line_start":89,"line_end":89,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":340634,"byte_end":340650,"line_start":90,"line_end":90,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":340652,"byte_end":340655,"line_start":91,"line_end":91,"column_start":2,"column_end":5}},{"value":"/ - `elt`: The source element from which to make the `BitBox`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":340657,"byte_end":340721,"line_start":92,"line_end":92,"column_start":2,"column_end":66}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":340723,"byte_end":340726,"line_start":93,"line_end":93,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":340728,"byte_end":340741,"line_start":94,"line_end":94,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":340743,"byte_end":340746,"line_start":95,"line_end":95,"column_start":2,"column_end":5}},{"value":"/ A `BitBox` containing the provided element.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":340748,"byte_end":340795,"line_start":96,"line_end":96,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":340797,"byte_end":340800,"line_start":97,"line_end":97,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":340802,"byte_end":340816,"line_start":98,"line_end":98,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":340818,"byte_end":340821,"line_start":99,"line_end":99,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":340823,"byte_end":340834,"line_start":100,"line_end":100,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":340836,"byte_end":340863,"line_start":101,"line_end":101,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":340865,"byte_end":340868,"line_start":102,"line_end":102,"column_start":2,"column_end":5}},{"value":"/ let bb: BitBox<Msb0, u16> = BitBox::from_element(!0);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":340870,"byte_end":340927,"line_start":103,"line_end":103,"column_start":2,"column_end":59}},{"value":"/ assert!(bb.all());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":340929,"byte_end":340951,"line_start":104,"line_end":104,"column_start":2,"column_end":24}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":340953,"byte_end":340960,"line_start":105,"line_end":105,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":1968},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":341666,"byte_end":341676,"line_start":137,"line_end":137,"column_start":9,"column_end":19},"name":"from_slice","qualname":"<BitBox<O, T>>::from_slice","value":"fn from_slice<'_>(&'_ [T]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a `BitBox` from a borrowed slice of elements.","sig":null,"attributes":[{"value":"/ Builds a `BitBox` from a borrowed slice of elements.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":341051,"byte_end":341107,"line_start":110,"line_end":110,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":341109,"byte_end":341112,"line_start":111,"line_end":111,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":341114,"byte_end":341130,"line_start":112,"line_end":112,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":341132,"byte_end":341135,"line_start":113,"line_end":113,"column_start":2,"column_end":5}},{"value":"/ - `slice`: The source slice from which to make the `BitBox`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":341137,"byte_end":341201,"line_start":114,"line_end":114,"column_start":2,"column_end":66}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":341203,"byte_end":341206,"line_start":115,"line_end":115,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":341208,"byte_end":341221,"line_start":116,"line_end":116,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":341223,"byte_end":341226,"line_start":117,"line_end":117,"column_start":2,"column_end":5}},{"value":"/ A `BitBox` containing the (cloned) provided slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":341228,"byte_end":341282,"line_start":118,"line_end":118,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":341284,"byte_end":341287,"line_start":119,"line_end":119,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":341289,"byte_end":341301,"line_start":120,"line_end":120,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":341303,"byte_end":341306,"line_start":121,"line_end":121,"column_start":2,"column_end":5}},{"value":"/ This function may panic if the provided slice is longer than the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":341308,"byte_end":341376,"line_start":122,"line_end":122,"column_start":2,"column_end":70}},{"value":"/ `BitBox` can support.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":341378,"byte_end":341403,"line_start":123,"line_end":123,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":341405,"byte_end":341408,"line_start":124,"line_end":124,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":341410,"byte_end":341424,"line_start":125,"line_end":125,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":341426,"byte_end":341429,"line_start":126,"line_end":126,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":341431,"byte_end":341442,"line_start":127,"line_end":127,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":341444,"byte_end":341471,"line_start":128,"line_end":128,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":341473,"byte_end":341476,"line_start":129,"line_end":129,"column_start":2,"column_end":5}},{"value":"/ let src = [5, 10];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":341478,"byte_end":341500,"line_start":130,"line_end":130,"column_start":2,"column_end":24}},{"value":"/ let bb: BitBox<Msb0, u8> = BitBox::from_slice(&src[..]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":341502,"byte_end":341562,"line_start":131,"line_end":131,"column_start":2,"column_end":62}},{"value":"/ assert!(bb[5]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":341564,"byte_end":341583,"line_start":132,"line_end":132,"column_start":2,"column_end":21}},{"value":"/ assert!(bb[7]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":341585,"byte_end":341604,"line_start":133,"line_end":133,"column_start":2,"column_end":21}},{"value":"/ assert!(bb[12]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":341606,"byte_end":341626,"line_start":134,"line_end":134,"column_start":2,"column_end":22}},{"value":"/ assert!(bb[14]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":341628,"byte_end":341648,"line_start":135,"line_end":135,"column_start":2,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":341650,"byte_end":341657,"line_start":136,"line_end":136,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":1969},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":342199,"byte_end":342212,"line_start":161,"line_end":161,"column_start":9,"column_end":22},"name":"from_bitslice","qualname":"<BitBox<O, T>>::from_bitslice","value":"fn from_bitslice<'_>(&'_ BitSlice<O, T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Clones a `&BitSlice` into a `BitBox`.","sig":null,"attributes":[{"value":"/ Clones a `&BitSlice` into a `BitBox`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":341755,"byte_end":341796,"line_start":141,"line_end":141,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":341798,"byte_end":341801,"line_start":142,"line_end":142,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":341803,"byte_end":341819,"line_start":143,"line_end":143,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":341821,"byte_end":341824,"line_start":144,"line_end":144,"column_start":2,"column_end":5}},{"value":"/ - `slice`: The bit slice to clone into a bit box.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":341826,"byte_end":341879,"line_start":145,"line_end":145,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":341881,"byte_end":341884,"line_start":146,"line_end":146,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":341886,"byte_end":341899,"line_start":147,"line_end":147,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":341901,"byte_end":341904,"line_start":148,"line_end":148,"column_start":2,"column_end":5}},{"value":"/ A `BitBox` containing the same bits as the source slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":341906,"byte_end":341966,"line_start":149,"line_end":149,"column_start":2,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":341968,"byte_end":341971,"line_start":150,"line_end":150,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":341973,"byte_end":341987,"line_start":151,"line_end":151,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":341989,"byte_end":341992,"line_start":152,"line_end":152,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":341994,"byte_end":342005,"line_start":153,"line_end":153,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":342007,"byte_end":342034,"line_start":154,"line_end":154,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":342036,"byte_end":342039,"line_start":155,"line_end":155,"column_start":2,"column_end":5}},{"value":"/ let src = [0u8, !0];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":342041,"byte_end":342065,"line_start":156,"line_end":156,"column_start":2,"column_end":26}},{"value":"/ let bb = BitBox::<Msb0, _>::from_bitslice(src.bits());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":342067,"byte_end":342125,"line_start":157,"line_end":157,"column_start":2,"column_end":60}},{"value":"/ assert_eq!(bb.len(), 16);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":342127,"byte_end":342156,"line_start":158,"line_end":158,"column_start":2,"column_end":31}},{"value":"/ assert!(bb.some());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":342158,"byte_end":342181,"line_start":159,"line_end":159,"column_start":2,"column_end":25}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":342183,"byte_end":342190,"line_start":160,"line_end":160,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":1970},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":342974,"byte_end":342990,"line_start":191,"line_end":191,"column_start":9,"column_end":25},"name":"from_boxed_slice","qualname":"<BitBox<O, T>>::from_boxed_slice","value":"fn from_boxed_slice(Box<[T]>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Produces a `BitBox` from an owned slice of elements.","sig":null,"attributes":[{"value":"/ Produces a `BitBox` from an owned slice of elements.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":342305,"byte_end":342361,"line_start":165,"line_end":165,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":342363,"byte_end":342366,"line_start":166,"line_end":166,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":342368,"byte_end":342384,"line_start":167,"line_end":167,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":342386,"byte_end":342389,"line_start":168,"line_end":168,"column_start":2,"column_end":5}},{"value":"/ - `slice`: The source boxed slice from which to make the `BitBox`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":342391,"byte_end":342461,"line_start":169,"line_end":169,"column_start":2,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":342463,"byte_end":342466,"line_start":170,"line_end":170,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":342468,"byte_end":342481,"line_start":171,"line_end":171,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":342483,"byte_end":342486,"line_start":172,"line_end":172,"column_start":2,"column_end":5}},{"value":"/ A `BitBox` governing the same slice that was passed in. This function","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":342488,"byte_end":342561,"line_start":173,"line_end":173,"column_start":2,"column_end":75}},{"value":"/ does not reallocate.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":342563,"byte_end":342587,"line_start":174,"line_end":174,"column_start":2,"column_end":26}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":342589,"byte_end":342592,"line_start":175,"line_end":175,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":342594,"byte_end":342606,"line_start":176,"line_end":176,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":342608,"byte_end":342611,"line_start":177,"line_end":177,"column_start":2,"column_end":5}},{"value":"/ This function may panic if the provided slice is longer than the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":342613,"byte_end":342681,"line_start":178,"line_end":178,"column_start":2,"column_end":70}},{"value":"/ `BitBox` can support.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":342683,"byte_end":342708,"line_start":179,"line_end":179,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":342710,"byte_end":342713,"line_start":180,"line_end":180,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":342715,"byte_end":342729,"line_start":181,"line_end":181,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":342731,"byte_end":342734,"line_start":182,"line_end":182,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":342736,"byte_end":342747,"line_start":183,"line_end":183,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":342749,"byte_end":342776,"line_start":184,"line_end":184,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":342778,"byte_end":342781,"line_start":185,"line_end":185,"column_start":2,"column_end":5}},{"value":"/ let slice: Box<[u16]> = vec![0, !0].into_boxed_slice();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":342783,"byte_end":342842,"line_start":186,"line_end":186,"column_start":2,"column_end":61}},{"value":"/ let bb = BitBox::<Lsb0, _>::from_boxed_slice(slice);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":342844,"byte_end":342900,"line_start":187,"line_end":187,"column_start":2,"column_end":58}},{"value":"/ assert!(bb.some());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":342902,"byte_end":342925,"line_start":188,"line_end":188,"column_start":2,"column_end":25}},{"value":"/ assert_eq!(bb.len(), 32);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":342927,"byte_end":342956,"line_start":189,"line_end":189,"column_start":2,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":342958,"byte_end":342965,"line_start":190,"line_end":190,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":1971},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":343787,"byte_end":343803,"line_start":230,"line_end":230,"column_start":9,"column_end":25},"name":"into_boxed_slice","qualname":"<BitBox<O, T>>::into_boxed_slice","value":"fn into_boxed_slice(Self) -> Box<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Removes the `BitBox` wrapper from a `Box<[T]>`.","sig":null,"attributes":[{"value":"/ Removes the `BitBox` wrapper from a `Box<[T]>`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":343316,"byte_end":343367,"line_start":209,"line_end":209,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":343369,"byte_end":343372,"line_start":210,"line_end":210,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":343374,"byte_end":343390,"line_start":211,"line_end":211,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":343392,"byte_end":343395,"line_start":212,"line_end":212,"column_start":2,"column_end":5}},{"value":"/ - `self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":343397,"byte_end":343409,"line_start":213,"line_end":213,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":343411,"byte_end":343414,"line_start":214,"line_end":214,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":343416,"byte_end":343429,"line_start":215,"line_end":215,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":343431,"byte_end":343434,"line_start":216,"line_end":216,"column_start":2,"column_end":5}},{"value":"/ The `Box<[T]>` underneath `self`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":343436,"byte_end":343473,"line_start":217,"line_end":217,"column_start":2,"column_end":39}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":343475,"byte_end":343478,"line_start":218,"line_end":218,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":343480,"byte_end":343494,"line_start":219,"line_end":219,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":343496,"byte_end":343499,"line_start":220,"line_end":220,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":343501,"byte_end":343512,"line_start":221,"line_end":221,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":343514,"byte_end":343541,"line_start":222,"line_end":222,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":343543,"byte_end":343546,"line_start":223,"line_end":223,"column_start":2,"column_end":5}},{"value":"/ let slice: Box<[u16]> = vec![0, !0].into_boxed_slice();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":343548,"byte_end":343607,"line_start":224,"line_end":224,"column_start":2,"column_end":61}},{"value":"/ let bb = BitBox::<Lsb0, _>::from_boxed_slice(slice);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":343609,"byte_end":343665,"line_start":225,"line_end":225,"column_start":2,"column_end":58}},{"value":"/ assert_eq!(bb.len(), 32);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":343667,"byte_end":343696,"line_start":226,"line_end":226,"column_start":2,"column_end":31}},{"value":"/ let slice = bb.into_boxed_slice();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":343698,"byte_end":343736,"line_start":227,"line_end":227,"column_start":2,"column_end":40}},{"value":"/ assert_eq!(slice.len(), 2);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":343738,"byte_end":343769,"line_start":228,"line_end":228,"column_start":2,"column_end":33}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":343771,"byte_end":343778,"line_start":229,"line_end":229,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":1972},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":344367,"byte_end":344378,"line_start":251,"line_end":251,"column_start":9,"column_end":20},"name":"add_reverse","qualname":"<BitBox<O, T>>::add_reverse","value":"fn add_reverse<I>(Self, I) -> Self where I: IntoIterator<Item = bool>","parent":null,"children":[],"decl_id":null,"docs":" Performs “reverse” addition (left to right instead of right to left).","sig":null,"attributes":[{"value":"/ Performs “reverse” addition (left to right instead of right to left).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":344040,"byte_end":344117,"line_start":239,"line_end":239,"column_start":2,"column_end":75}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":344119,"byte_end":344122,"line_start":240,"line_end":240,"column_start":2,"column_end":5}},{"value":"/ This delegates to `BitSlice::add_assign_reverse`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":344124,"byte_end":344177,"line_start":241,"line_end":241,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":344179,"byte_end":344182,"line_start":242,"line_end":242,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":344184,"byte_end":344200,"line_start":243,"line_end":243,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":344202,"byte_end":344205,"line_start":244,"line_end":244,"column_start":2,"column_end":5}},{"value":"/ - `self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":344207,"byte_end":344219,"line_start":245,"line_end":245,"column_start":2,"column_end":14}},{"value":"/ - `addend: impl IntoIterator<Item=bool>`: A bitstream to add to `self`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":344221,"byte_end":344296,"line_start":246,"line_end":246,"column_start":2,"column_end":77}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":344298,"byte_end":344301,"line_start":247,"line_end":247,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":344303,"byte_end":344316,"line_start":248,"line_end":248,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":344318,"byte_end":344321,"line_start":249,"line_end":249,"column_start":2,"column_end":5}},{"value":"/ The sum of `self` and `addend`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":344323,"byte_end":344358,"line_start":250,"line_end":250,"column_start":2,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1974},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":344723,"byte_end":344735,"line_start":267,"line_end":267,"column_start":9,"column_end":21},"name":"change_order","qualname":"<BitBox<O, T>>::change_order","value":"fn change_order<P>(Self) -> BitBox<P, T> where P: BitOrder","parent":null,"children":[],"decl_id":null,"docs":" Changes the order on a box handle, without changing the data it\n governs.","sig":null,"attributes":[{"value":"/ Changes the order on a box handle, without changing the data it","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":344494,"byte_end":344561,"line_start":257,"line_end":257,"column_start":2,"column_end":69}},{"value":"/ governs.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":344563,"byte_end":344575,"line_start":258,"line_end":258,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":344577,"byte_end":344580,"line_start":259,"line_end":259,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":344582,"byte_end":344598,"line_start":260,"line_end":260,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":344600,"byte_end":344603,"line_start":261,"line_end":261,"column_start":2,"column_end":5}},{"value":"/ - `self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":344605,"byte_end":344617,"line_start":262,"line_end":262,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":344619,"byte_end":344622,"line_start":263,"line_end":263,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":344624,"byte_end":344637,"line_start":264,"line_end":264,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":344639,"byte_end":344642,"line_start":265,"line_end":265,"column_start":2,"column_end":5}},{"value":"/ An equivalent handle to the same data, with a new order parameter.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":344644,"byte_end":344714,"line_start":266,"line_end":266,"column_start":2,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1976},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":345060,"byte_end":345071,"line_start":283,"line_end":283,"column_start":9,"column_end":20},"name":"as_bitslice","qualname":"<BitBox<O, T>>::as_bitslice","value":"fn as_bitslice<'_>(&'_ Self) -> &'_ BitSlice<O, T>","parent":null,"children":[],"decl_id":null,"docs":" Accesses the `BitSlice<O, T>` to which the `BitBox` refers.","sig":null,"attributes":[{"value":"/ Accesses the `BitSlice<O, T>` to which the `BitBox` refers.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":344881,"byte_end":344944,"line_start":274,"line_end":274,"column_start":2,"column_end":65}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":344946,"byte_end":344949,"line_start":275,"line_end":275,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":344951,"byte_end":344967,"line_start":276,"line_end":276,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":344969,"byte_end":344972,"line_start":277,"line_end":277,"column_start":2,"column_end":5}},{"value":"/ - `&self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":344974,"byte_end":344987,"line_start":278,"line_end":278,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":344989,"byte_end":344992,"line_start":279,"line_end":279,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":344994,"byte_end":345007,"line_start":280,"line_end":280,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":345009,"byte_end":345012,"line_start":281,"line_end":281,"column_start":2,"column_end":5}},{"value":"/ The slice of bits behind the box.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":345014,"byte_end":345051,"line_start":282,"line_end":282,"column_start":2,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1977},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":345319,"byte_end":345334,"line_start":296,"line_end":296,"column_start":9,"column_end":24},"name":"as_mut_bitslice","qualname":"<BitBox<O, T>>::as_mut_bitslice","value":"fn as_mut_bitslice<'_>(&'_ mut Self) -> &'_ mut BitSlice<O, T>","parent":null,"children":[],"decl_id":null,"docs":" Accesses the `BitSlice<O, T>` to which the `BitBox` refers.","sig":null,"attributes":[{"value":"/ Accesses the `BitSlice<O, T>` to which the `BitBox` refers.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":345136,"byte_end":345199,"line_start":287,"line_end":287,"column_start":2,"column_end":65}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":345201,"byte_end":345204,"line_start":288,"line_end":288,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":345206,"byte_end":345222,"line_start":289,"line_end":289,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":345224,"byte_end":345227,"line_start":290,"line_end":290,"column_start":2,"column_end":5}},{"value":"/ - `&mut self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":345229,"byte_end":345246,"line_start":291,"line_end":291,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":345248,"byte_end":345251,"line_start":292,"line_end":292,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":345253,"byte_end":345266,"line_start":293,"line_end":293,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":345268,"byte_end":345271,"line_start":294,"line_end":294,"column_start":2,"column_end":5}},{"value":"/ The slice of bits behind the box.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":345273,"byte_end":345310,"line_start":295,"line_end":295,"column_start":2,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1978},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":345810,"byte_end":345818,"line_start":313,"line_end":313,"column_start":9,"column_end":17},"name":"as_slice","qualname":"<BitBox<O, T>>::as_slice","value":"fn as_slice<'_>(&'_ Self) -> &'_ [T]","parent":null,"children":[],"decl_id":null,"docs":" Accesses the vector’s backing store as an element slice.","sig":null,"attributes":[{"value":"/ Accesses the vector’s backing store as an element slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":345411,"byte_end":345473,"line_start":300,"line_end":300,"column_start":2,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":345475,"byte_end":345478,"line_start":301,"line_end":301,"column_start":2,"column_end":5}},{"value":"/ Unlike `BitSlice`’s method of the same name, this includes the partial","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":345480,"byte_end":345556,"line_start":302,"line_end":302,"column_start":2,"column_end":76}},{"value":"/ edges, as `BitBox` forbids fragmentation that leads to contention.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":345558,"byte_end":345628,"line_start":303,"line_end":303,"column_start":2,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":345630,"byte_end":345633,"line_start":304,"line_end":304,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":345635,"byte_end":345651,"line_start":305,"line_end":305,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":345653,"byte_end":345656,"line_start":306,"line_end":306,"column_start":2,"column_end":5}},{"value":"/ - `&self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":345658,"byte_end":345671,"line_start":307,"line_end":307,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":345673,"byte_end":345676,"line_start":308,"line_end":308,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":345678,"byte_end":345691,"line_start":309,"line_end":309,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":345693,"byte_end":345696,"line_start":310,"line_end":310,"column_start":2,"column_end":5}},{"value":"/ The slice of all live elements in the backing storage, including the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":345698,"byte_end":345770,"line_start":311,"line_end":311,"column_start":2,"column_end":74}},{"value":"/ partial edges if present.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":345772,"byte_end":345801,"line_start":312,"line_end":312,"column_start":2,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1979},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":346271,"byte_end":346283,"line_start":330,"line_end":330,"column_start":9,"column_end":21},"name":"as_mut_slice","qualname":"<BitBox<O, T>>::as_mut_slice","value":"fn as_mut_slice<'_>(&'_ mut Self) -> &'_ mut [T]","parent":null,"children":[],"decl_id":null,"docs":" Accesses the vector’s backing store as an element slice.","sig":null,"attributes":[{"value":"/ Accesses the vector’s backing store as an element slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":345868,"byte_end":345930,"line_start":317,"line_end":317,"column_start":2,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":345932,"byte_end":345935,"line_start":318,"line_end":318,"column_start":2,"column_end":5}},{"value":"/ Unlike `BitSlice`’s method of the same name, this includes the partial","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":345937,"byte_end":346013,"line_start":319,"line_end":319,"column_start":2,"column_end":76}},{"value":"/ edges, as `BitBox` forbids fragmentation that leads to contention.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":346015,"byte_end":346085,"line_start":320,"line_end":320,"column_start":2,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":346087,"byte_end":346090,"line_start":321,"line_end":321,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":346092,"byte_end":346108,"line_start":322,"line_end":322,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":346110,"byte_end":346113,"line_start":323,"line_end":323,"column_start":2,"column_end":5}},{"value":"/ - `&mut self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":346115,"byte_end":346132,"line_start":324,"line_end":324,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":346134,"byte_end":346137,"line_start":325,"line_end":325,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":346139,"byte_end":346152,"line_start":326,"line_end":326,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":346154,"byte_end":346157,"line_start":327,"line_end":327,"column_start":2,"column_end":5}},{"value":"/ The slice of all live elements in the backing storage, including the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":346159,"byte_end":346231,"line_start":328,"line_end":328,"column_start":2,"column_end":74}},{"value":"/ partial edges if present.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":346233,"byte_end":346262,"line_start":329,"line_end":329,"column_start":2,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":2018},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":348650,"byte_end":348653,"line_start":46,"line_end":46,"column_start":9,"column_end":12},"name":"new","qualname":"<BitBox<O, T>>::new","value":"fn new<'_>(&'_ BitSlice<O, T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Allocates memory on the heap and then places `bits` into it.","sig":null,"attributes":[{"value":"/ Allocates memory on the heap and then places `bits` into it.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":348179,"byte_end":348243,"line_start":31,"line_end":31,"column_start":2,"column_end":66}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":348245,"byte_end":348248,"line_start":32,"line_end":32,"column_start":2,"column_end":5}},{"value":"/ # API Differences","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":348250,"byte_end":348271,"line_start":33,"line_end":33,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":348273,"byte_end":348276,"line_start":34,"line_end":34,"column_start":2,"column_end":5}},{"value":"/ [`Box::new`] takes a `T` by direct value, and is not implemented as a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":348278,"byte_end":348351,"line_start":35,"line_end":35,"column_start":2,"column_end":75}},{"value":"/ means of cloning slices. As `BitSlice` cannot be held by value, this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":348353,"byte_end":348425,"line_start":36,"line_end":36,"column_start":2,"column_end":74}},{"value":"/ function clones the referent slice region into a new fixed-size heap","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":348427,"byte_end":348499,"line_start":37,"line_end":37,"column_start":2,"column_end":74}},{"value":"/ buffer.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":348501,"byte_end":348512,"line_start":38,"line_end":38,"column_start":2,"column_end":13}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":348514,"byte_end":348517,"line_start":39,"line_end":39,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":348519,"byte_end":348533,"line_start":40,"line_end":40,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":348535,"byte_end":348538,"line_start":41,"line_end":41,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":348540,"byte_end":348551,"line_start":42,"line_end":42,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":348553,"byte_end":348582,"line_start":43,"line_end":43,"column_start":2,"column_end":31}},{"value":"/ let boxed = BitBox::new(0u8.bits::<Lsb0>());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":348584,"byte_end":348632,"line_start":44,"line_end":44,"column_start":2,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":348634,"byte_end":348641,"line_start":45,"line_end":45,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":2019},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":348851,"byte_end":348854,"line_start":53,"line_end":53,"column_start":9,"column_end":12},"name":"pin","qualname":"<BitBox<O, T>>::pin","value":"fn pin<'_>(&'_ BitSlice<O, T>) -> Pin<Self> where O: Unpin, T: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `Pin<BitBox<O, T>>`.","sig":null,"attributes":[{"value":"/ Constructs a new `Pin<BitBox<O, T>>`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":348720,"byte_end":348761,"line_start":50,"line_end":50,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":348763,"byte_end":348766,"line_start":51,"line_end":51,"column_start":2,"column_end":5}},{"value":"/ `BitSlice` is always `Unpin`, so this has no actual immobility effect.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":348768,"byte_end":348842,"line_start":52,"line_end":52,"column_start":2,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2020},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":350311,"byte_end":350319,"line_start":95,"line_end":95,"column_start":16,"column_end":24},"name":"from_raw","qualname":"<BitBox<O, T>>::from_raw","value":"unsafe fn from_raw(*mut BitSlice<O, T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a bit box from a raw bit pointer.","sig":null,"attributes":[{"value":"/ Constructs a bit box from a raw bit pointer.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":348952,"byte_end":349000,"line_start":58,"line_end":58,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":349002,"byte_end":349005,"line_start":59,"line_end":59,"column_start":2,"column_end":5}},{"value":"/ After calling this function, the raw pointer is owned by the resulting","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":349007,"byte_end":349081,"line_start":60,"line_end":60,"column_start":2,"column_end":76}},{"value":"/ `BitBox`. Specifically, the `BitBox` destructor will free the allocated","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":349083,"byte_end":349158,"line_start":61,"line_end":61,"column_start":2,"column_end":77}},{"value":"/ memory. For this to be safe, the memory must have been allocated by","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":349160,"byte_end":349231,"line_start":62,"line_end":62,"column_start":2,"column_end":73}},{"value":"/ `BitBox` earlier in the program.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":349233,"byte_end":349269,"line_start":63,"line_end":63,"column_start":2,"column_end":38}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":349271,"byte_end":349274,"line_start":64,"line_end":64,"column_start":2,"column_end":5}},{"value":"/ # Safety","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":349276,"byte_end":349288,"line_start":65,"line_end":65,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":349290,"byte_end":349293,"line_start":66,"line_end":66,"column_start":2,"column_end":5}},{"value":"/ This function is unsafe because improper use may lead to memory","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":349295,"byte_end":349362,"line_start":67,"line_end":67,"column_start":2,"column_end":69}},{"value":"/ problems. For example, a double-free may occurr if the function is","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":349364,"byte_end":349434,"line_start":68,"line_end":68,"column_start":2,"column_end":72}},{"value":"/ called twice on the same raw pointer.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":349436,"byte_end":349477,"line_start":69,"line_end":69,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":349479,"byte_end":349482,"line_start":70,"line_end":70,"column_start":2,"column_end":5}},{"value":"/ # Notes","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":349484,"byte_end":349495,"line_start":71,"line_end":71,"column_start":2,"column_end":13}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":349497,"byte_end":349500,"line_start":72,"line_end":72,"column_start":2,"column_end":5}},{"value":"/ This function, and `into_raw`, exchange ordinary raw pointers","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":349502,"byte_end":349567,"line_start":73,"line_end":73,"column_start":2,"column_end":67}},{"value":"/ `*mut BitSlice<O, T>`. Values of these types can be created from, and","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":349569,"byte_end":349642,"line_start":74,"line_end":74,"column_start":2,"column_end":75}},{"value":"/ converted to, other region pointers such as `*mut [T]` through ordinary","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":349644,"byte_end":349719,"line_start":75,"line_end":75,"column_start":2,"column_end":77}},{"value":"/ `as`-casting.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":349721,"byte_end":349738,"line_start":76,"line_end":76,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":349740,"byte_end":349743,"line_start":77,"line_end":77,"column_start":2,"column_end":5}},{"value":"/ This is valid in the Rust type system, but is incorrect at runtime. You","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":349745,"byte_end":349820,"line_start":78,"line_end":78,"column_start":2,"column_end":77}},{"value":"/ must not, ever, use `as` to cast in either direction to or from a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":349822,"byte_end":349891,"line_start":79,"line_end":79,"column_start":2,"column_end":71}},{"value":"/ `BitSlice` pointer.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":349893,"byte_end":349916,"line_start":80,"line_end":80,"column_start":2,"column_end":25}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":349918,"byte_end":349921,"line_start":81,"line_end":81,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":349923,"byte_end":349937,"line_start":82,"line_end":82,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":349939,"byte_end":349942,"line_start":83,"line_end":83,"column_start":2,"column_end":5}},{"value":"/ Recreate a `BitBox` which was previously converted to a raw pointer","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":349944,"byte_end":350015,"line_start":84,"line_end":84,"column_start":2,"column_end":73}},{"value":"/ using [`BitBox::into_raw`]:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":350017,"byte_end":350048,"line_start":85,"line_end":85,"column_start":2,"column_end":33}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":350050,"byte_end":350053,"line_start":86,"line_end":86,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":350055,"byte_end":350066,"line_start":87,"line_end":87,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":350068,"byte_end":350097,"line_start":88,"line_end":88,"column_start":2,"column_end":31}},{"value":"/ let b = BitBox::new(0u8.bits::<Lsb0>());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":350099,"byte_end":350143,"line_start":89,"line_end":89,"column_start":2,"column_end":46}},{"value":"/ let ptr = BitBox::into_raw(b);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":350145,"byte_end":350179,"line_start":90,"line_end":90,"column_start":2,"column_end":36}},{"value":"/ let b = unsafe { BitBox::<Lsb0, _>::from_raw(ptr) };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":350181,"byte_end":350237,"line_start":91,"line_end":91,"column_start":2,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":350239,"byte_end":350246,"line_start":92,"line_end":92,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":350248,"byte_end":350251,"line_start":93,"line_end":93,"column_start":2,"column_end":5}},{"value":"/ [`BitBox::into_raw`]: #method.into_raw","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":350253,"byte_end":350295,"line_start":94,"line_end":94,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2021},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":351795,"byte_end":351803,"line_start":136,"line_end":136,"column_start":9,"column_end":17},"name":"into_raw","qualname":"<BitBox<O, T>>::into_raw","value":"fn into_raw(Self) -> *mut BitSlice<O, T>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `BitBox`, returning a wrapped raw pointer.","sig":null,"attributes":[{"value":"/ Consumes the `BitBox`, returning a wrapped raw pointer.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":350437,"byte_end":350496,"line_start":102,"line_end":102,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":350498,"byte_end":350501,"line_start":103,"line_end":103,"column_start":2,"column_end":5}},{"value":"/ The pointer will be properly aligned and non-null.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":350503,"byte_end":350557,"line_start":104,"line_end":104,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":350559,"byte_end":350562,"line_start":105,"line_end":105,"column_start":2,"column_end":5}},{"value":"/ After calling this function, the caller is responsible for the memory","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":350564,"byte_end":350637,"line_start":106,"line_end":106,"column_start":2,"column_end":75}},{"value":"/ previously managed by the `BitBox`. In particular, the caller should","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":350639,"byte_end":350711,"line_start":107,"line_end":107,"column_start":2,"column_end":74}},{"value":"/ properly release the memory by converting the pointer back into a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":350713,"byte_end":350782,"line_start":108,"line_end":108,"column_start":2,"column_end":71}},{"value":"/ `BitBox` with the [`BitBox::from_raw`] function, allowing the `BitBox`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":350784,"byte_end":350858,"line_start":109,"line_end":109,"column_start":2,"column_end":76}},{"value":"/ destructor to perform the cleanup.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":350860,"byte_end":350898,"line_start":110,"line_end":110,"column_start":2,"column_end":40}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":350900,"byte_end":350903,"line_start":111,"line_end":111,"column_start":2,"column_end":5}},{"value":"/ Note: this is an associated function, which means that you have to call","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":350905,"byte_end":350980,"line_start":112,"line_end":112,"column_start":2,"column_end":77}},{"value":"/ it as `BitBox::into_raw(b)` instead of `b.into_raw()`. This is to match","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":350982,"byte_end":351057,"line_start":113,"line_end":113,"column_start":2,"column_end":77}},{"value":"/ layout with the standard library’s `Box` API; there will never be a name","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":351059,"byte_end":351137,"line_start":114,"line_end":114,"column_start":2,"column_end":78}},{"value":"/ conflict with `BitSlice`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":351139,"byte_end":351168,"line_start":115,"line_end":115,"column_start":2,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":351170,"byte_end":351173,"line_start":116,"line_end":116,"column_start":2,"column_end":5}},{"value":"/ # Notes","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":351175,"byte_end":351186,"line_start":117,"line_end":117,"column_start":2,"column_end":13}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":351188,"byte_end":351191,"line_start":118,"line_end":118,"column_start":2,"column_end":5}},{"value":"/ As with `::from_raw`, the pointer returned by this function must not","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":351193,"byte_end":351265,"line_start":119,"line_end":119,"column_start":2,"column_end":74}},{"value":"/ ever have its type or value changed or inspected in any way. It may only","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":351267,"byte_end":351343,"line_start":120,"line_end":120,"column_start":2,"column_end":78}},{"value":"/ be held and then passed into `::from_raw` in the future.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":351345,"byte_end":351405,"line_start":121,"line_end":121,"column_start":2,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":351407,"byte_end":351410,"line_start":122,"line_end":122,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":351412,"byte_end":351426,"line_start":123,"line_end":123,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":351428,"byte_end":351431,"line_start":124,"line_end":124,"column_start":2,"column_end":5}},{"value":"/ Converting the raw pointer back into a `BitBox` with","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":351433,"byte_end":351489,"line_start":125,"line_end":125,"column_start":2,"column_end":58}},{"value":"/ [`BitBox::from_raw`] for automatic cleanup:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":351491,"byte_end":351538,"line_start":126,"line_end":126,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":351540,"byte_end":351543,"line_start":127,"line_end":127,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":351545,"byte_end":351556,"line_start":128,"line_end":128,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":351558,"byte_end":351587,"line_start":129,"line_end":129,"column_start":2,"column_end":31}},{"value":"/ let b = BitBox::new(0u64.bits::<Msb0>());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":351589,"byte_end":351634,"line_start":130,"line_end":130,"column_start":2,"column_end":47}},{"value":"/ let ptr = BitBox::into_raw(b);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":351636,"byte_end":351670,"line_start":131,"line_end":131,"column_start":2,"column_end":36}},{"value":"/ let b = unsafe { BitBox::<Msb0, _>::from_raw(ptr) };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":351672,"byte_end":351728,"line_start":132,"line_end":132,"column_start":2,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":351730,"byte_end":351737,"line_start":133,"line_end":133,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":351739,"byte_end":351742,"line_start":134,"line_end":134,"column_start":2,"column_end":5}},{"value":"/ [`BitBox::from_raw`]: #method.from_raw","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":351744,"byte_end":351786,"line_start":135,"line_end":135,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2022},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":353096,"byte_end":353100,"line_start":171,"line_end":171,"column_start":9,"column_end":13},"name":"leak","qualname":"<BitBox<O, T>>::leak","value":"fn leak<'a>(Self) -> &'a mut BitSlice<O, T>","parent":null,"children":[],"decl_id":null,"docs":" Consumes and leaks the `BitBox`, returning a mutable reference,\n `&'a mut BitSlice<O, T>`. Note that the memory region `[T]` must outlive\n the chosen lifetime `'a`.","sig":null,"attributes":[{"value":"/ Consumes and leaks the `BitBox`, returning a mutable reference,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":351903,"byte_end":351970,"line_start":142,"line_end":142,"column_start":2,"column_end":69}},{"value":"/ `&'a mut BitSlice<O, T>`. Note that the memory region `[T]` must outlive","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":351972,"byte_end":352048,"line_start":143,"line_end":143,"column_start":2,"column_end":78}},{"value":"/ the chosen lifetime `'a`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":352050,"byte_end":352079,"line_start":144,"line_end":144,"column_start":2,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":352081,"byte_end":352084,"line_start":145,"line_end":145,"column_start":2,"column_end":5}},{"value":"/ This function is mainly useful for bit regions that live for the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":352086,"byte_end":352154,"line_start":146,"line_end":146,"column_start":2,"column_end":70}},{"value":"/ remainder of the program’s life. Dropping the returned reference will","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":352156,"byte_end":352231,"line_start":147,"line_end":147,"column_start":2,"column_end":75}},{"value":"/ cause a memory leak. If this is not acceptable, the reference should","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":352233,"byte_end":352305,"line_start":148,"line_end":148,"column_start":2,"column_end":74}},{"value":"/ first be wrapped with the [`BitBox::from_raw`] function, producing a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":352307,"byte_end":352379,"line_start":149,"line_end":149,"column_start":2,"column_end":74}},{"value":"/ `BitBox`. This `BitBox` can then be dropped which will properly","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":352381,"byte_end":352448,"line_start":150,"line_end":150,"column_start":2,"column_end":69}},{"value":"/ deallocate the memory.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":352450,"byte_end":352476,"line_start":151,"line_end":151,"column_start":2,"column_end":28}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":352478,"byte_end":352481,"line_start":152,"line_end":152,"column_start":2,"column_end":5}},{"value":"/ Note: this is an associated function, which means that you have to call","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":352483,"byte_end":352558,"line_start":153,"line_end":153,"column_start":2,"column_end":77}},{"value":"/ it as `BitBox::leak(b)` instead of `b.leak()`. This is to match layout","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":352560,"byte_end":352634,"line_start":154,"line_end":154,"column_start":2,"column_end":76}},{"value":"/ with the standard library’s `Box` API; there will never be a name","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":352636,"byte_end":352707,"line_start":155,"line_end":155,"column_start":2,"column_end":71}},{"value":"/ conflict with `BitSlice`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":352709,"byte_end":352738,"line_start":156,"line_end":156,"column_start":2,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":352740,"byte_end":352743,"line_start":157,"line_end":157,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":352745,"byte_end":352759,"line_start":158,"line_end":158,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":352761,"byte_end":352764,"line_start":159,"line_end":159,"column_start":2,"column_end":5}},{"value":"/ Simple usage:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":352766,"byte_end":352783,"line_start":160,"line_end":160,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":352785,"byte_end":352788,"line_start":161,"line_end":161,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":352790,"byte_end":352801,"line_start":162,"line_end":162,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":352803,"byte_end":352832,"line_start":163,"line_end":163,"column_start":2,"column_end":31}},{"value":"/ let b = BitBox::new(0u64.bits::<Local>());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":352834,"byte_end":352880,"line_start":164,"line_end":164,"column_start":2,"column_end":48}},{"value":"/ let static_ref: &'static mut BitSlice<Local, u64> = BitBox::leak(b);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":352882,"byte_end":352954,"line_start":165,"line_end":165,"column_start":2,"column_end":74}},{"value":"/ static_ref.set(0, true);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":352956,"byte_end":352984,"line_start":166,"line_end":166,"column_start":2,"column_end":30}},{"value":"/ assert_eq!(static_ref.count_ones(), 1);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":352986,"byte_end":353029,"line_start":167,"line_end":167,"column_start":2,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":353031,"byte_end":353038,"line_start":168,"line_end":168,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":353040,"byte_end":353043,"line_start":169,"line_end":169,"column_start":2,"column_end":5}},{"value":"/ [`BitBox::from_raw`]: #method.from_raw","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":353045,"byte_end":353087,"line_start":170,"line_end":170,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2053},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/iter.rs","byte_start":353544,"byte_end":353553,"line_start":21,"line_end":21,"column_start":5,"column_end":14},"name":"into_iter","qualname":"<BitBox<O, T> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8398},"children":[],"decl_id":{"krate":2,"index":8401},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2060},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/iter.rs","byte_start":353826,"byte_end":353835,"line_start":34,"line_end":34,"column_start":5,"column_end":14},"name":"into_iter","qualname":"<&'a BitBox<O, T> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8398},"children":[],"decl_id":{"krate":2,"index":8401},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2067},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/iter.rs","byte_start":354097,"byte_end":354106,"line_start":44,"line_end":44,"column_start":5,"column_end":14},"name":"into_iter","qualname":"<&'a mut BitBox<O, T> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8398},"children":[],"decl_id":{"krate":2,"index":8401},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2068},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/iter.rs","byte_start":354256,"byte_end":354264,"line_start":51,"line_end":51,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::boxed::iter::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":2071},{"krate":0,"index":2072}],"decl_id":null,"docs":" State keeper for consuming iteration over a `BitBox`.\n","sig":null,"attributes":[{"value":"/ State keeper for consuming iteration over a `BitBox`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/iter.rs","byte_start":354176,"byte_end":354233,"line_start":49,"line_end":49,"column_start":1,"column_end":58}},{"value":"repr(C)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/iter.rs","byte_start":354234,"byte_end":354244,"line_start":50,"line_end":50,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":2081},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/iter.rs","byte_start":354718,"byte_end":354722,"line_start":70,"line_end":70,"column_start":5,"column_end":9},"name":"next","qualname":"<IntoIter<O, T> as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8598},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2082},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/iter.rs","byte_start":354889,"byte_end":354898,"line_start":77,"line_end":77,"column_start":5,"column_end":14},"name":"size_hint","qualname":"<IntoIter<O, T> as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8602},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2083},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/iter.rs","byte_start":354972,"byte_end":354977,"line_start":81,"line_end":81,"column_start":5,"column_end":10},"name":"count","qualname":"<IntoIter<O, T> as std::iter::Iterator>::count","value":"fn count(Self) -> usize","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8603},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2084},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/iter.rs","byte_start":355016,"byte_end":355019,"line_start":85,"line_end":85,"column_start":5,"column_end":8},"name":"nth","qualname":"<IntoIter<O, T> as std::iter::Iterator>::nth","value":"fn nth<'_>(&'_ mut Self, usize) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8609},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2085},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/iter.rs","byte_start":355196,"byte_end":355200,"line_start":92,"line_end":92,"column_start":5,"column_end":9},"name":"last","qualname":"<IntoIter<O, T> as std::iter::Iterator>::last","value":"fn last(Self) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8605},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2089},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/iter.rs","byte_start":355347,"byte_end":355356,"line_start":99,"line_end":99,"column_start":5,"column_end":14},"name":"next_back","qualname":"<IntoIter<O, T> as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8442},"children":[],"decl_id":{"krate":2,"index":8443},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2194},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":356245,"byte_end":356248,"line_start":46,"line_end":46,"column_start":5,"column_end":8},"name":"add","qualname":"<BitBox<O, T> as std::ops::Add>::add","value":"fn add(Self, Self) -> Self::Output","parent":{"krate":2,"index":3331},"children":[],"decl_id":{"krate":2,"index":3334},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2198},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":356397,"byte_end":356407,"line_start":54,"line_end":54,"column_start":5,"column_end":15},"name":"add_assign","qualname":"<BitBox<O, T> as std::ops::AddAssign>::add_assign","value":"fn add_assign<'_>(&'_ mut Self, Self)","parent":{"krate":2,"index":3362},"children":[],"decl_id":{"krate":2,"index":3364},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2204},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":356643,"byte_end":356649,"line_start":63,"line_end":63,"column_start":5,"column_end":11},"name":"bitand","qualname":"<BitBox<O, T> as std::ops::BitAnd>::bitand","value":"fn bitand(Self, I) -> Self::Output","parent":{"krate":2,"index":3390},"children":[],"decl_id":{"krate":2,"index":3393},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2209},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":356826,"byte_end":356839,"line_start":71,"line_end":71,"column_start":5,"column_end":18},"name":"bitand_assign","qualname":"<BitBox<O, T> as std::ops::BitAndAssign>::bitand_assign","value":"fn bitand_assign<'_>(&'_ mut Self, I)","parent":{"krate":2,"index":3417},"children":[],"decl_id":{"krate":2,"index":3419},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2215},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":357039,"byte_end":357044,"line_start":80,"line_end":80,"column_start":5,"column_end":10},"name":"bitor","qualname":"<BitBox<O, T> as std::ops::BitOr>::bitor","value":"fn bitor(Self, I) -> Self::Output","parent":{"krate":2,"index":3395},"children":[],"decl_id":{"krate":2,"index":3398},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2220},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":357220,"byte_end":357232,"line_start":88,"line_end":88,"column_start":5,"column_end":17},"name":"bitor_assign","qualname":"<BitBox<O, T> as std::ops::BitOrAssign>::bitor_assign","value":"fn bitor_assign<'_>(&'_ mut Self, I)","parent":{"krate":2,"index":3421},"children":[],"decl_id":{"krate":2,"index":3423},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2226},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":357432,"byte_end":357438,"line_start":97,"line_end":97,"column_start":5,"column_end":11},"name":"bitxor","qualname":"<BitBox<O, T> as std::ops::BitXor>::bitxor","value":"fn bitxor(Self, I) -> Self::Output","parent":{"krate":2,"index":3400},"children":[],"decl_id":{"krate":2,"index":3403},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2231},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":357615,"byte_end":357628,"line_start":105,"line_end":105,"column_start":5,"column_end":18},"name":"bitxor_assign","qualname":"<BitBox<O, T> as std::ops::BitXorAssign>::bitxor_assign","value":"fn bitxor_assign<'_>(&'_ mut Self, I)","parent":{"krate":2,"index":3425},"children":[],"decl_id":{"krate":2,"index":3427},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2236},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":357804,"byte_end":357809,"line_start":114,"line_end":114,"column_start":5,"column_end":10},"name":"deref","qualname":"<BitBox<O, T> as std::ops::Deref>::deref","value":"fn deref<'_>(&'_ Self) -> &'_ Self::Target","parent":{"krate":2,"index":3486},"children":[],"decl_id":{"krate":2,"index":3488},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2240},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":357937,"byte_end":357946,"line_start":121,"line_end":121,"column_start":5,"column_end":14},"name":"deref_mut","qualname":"<BitBox<O, T> as std::ops::DerefMut>::deref_mut","value":"fn deref_mut<'_>(&'_ mut Self) -> &'_ mut Self::Target","parent":{"krate":2,"index":3499},"children":[],"decl_id":{"krate":2,"index":3500},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2244},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":358082,"byte_end":358086,"line_start":128,"line_end":128,"column_start":5,"column_end":9},"name":"drop","qualname":"<BitBox<O, T> as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2249},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":358403,"byte_end":358408,"line_start":141,"line_end":141,"column_start":5,"column_end":10},"name":"index","qualname":"<BitBox<O, T> as std::ops::Index>::index","value":"fn index<'_>(&'_ Self, usize) -> &'_ Self::Output","parent":{"krate":2,"index":3571},"children":[],"decl_id":{"krate":2,"index":3574},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2254},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":358601,"byte_end":358606,"line_start":150,"line_end":150,"column_start":5,"column_end":10},"name":"index","qualname":"<BitBox<O, T> as std::ops::Index>::index","value":"fn index<'_>(&'_ Self, Range<usize>) -> &'_ Self::Output","parent":{"krate":2,"index":3571},"children":[],"decl_id":{"krate":2,"index":3574},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2258},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":358777,"byte_end":358786,"line_start":157,"line_end":157,"column_start":5,"column_end":14},"name":"index_mut","qualname":"<BitBox<O, T> as std::ops::IndexMut>::index_mut","value":"fn index_mut<'_>(&'_ mut Self, Range<usize>) -> &'_ mut Self::Output","parent":{"krate":2,"index":3575},"children":[],"decl_id":{"krate":2,"index":3577},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2263},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":359006,"byte_end":359011,"line_start":166,"line_end":166,"column_start":5,"column_end":10},"name":"index","qualname":"<BitBox<O, T> as std::ops::Index>::index","value":"fn index<'_>(&'_ Self, RangeFrom<usize>) -> &'_ Self::Output","parent":{"krate":2,"index":3571},"children":[],"decl_id":{"krate":2,"index":3574},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2267},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":359190,"byte_end":359199,"line_start":173,"line_end":173,"column_start":5,"column_end":14},"name":"index_mut","qualname":"<BitBox<O, T> as std::ops::IndexMut>::index_mut","value":"fn index_mut<'_>(&'_ mut Self, RangeFrom<usize>) -> &'_ mut Self::Output","parent":{"krate":2,"index":3575},"children":[],"decl_id":{"krate":2,"index":3577},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2272},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":359416,"byte_end":359421,"line_start":182,"line_end":182,"column_start":5,"column_end":10},"name":"index","qualname":"<BitBox<O, T> as std::ops::Index>::index","value":"fn index<'_>(&'_ Self, RangeFull) -> &'_ Self::Output","parent":{"krate":2,"index":3571},"children":[],"decl_id":{"krate":2,"index":3574},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2276},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":359574,"byte_end":359583,"line_start":189,"line_end":189,"column_start":5,"column_end":14},"name":"index_mut","qualname":"<BitBox<O, T> as std::ops::IndexMut>::index_mut","value":"fn index_mut<'_>(&'_ mut Self, RangeFull) -> &'_ mut Self::Output","parent":{"krate":2,"index":3575},"children":[],"decl_id":{"krate":2,"index":3577},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2281},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":359789,"byte_end":359794,"line_start":198,"line_end":198,"column_start":5,"column_end":10},"name":"index","qualname":"<BitBox<O, T> as std::ops::Index>::index","value":"fn index<'_>(&'_ Self, RangeInclusive<usize>) -> &'_ Self::Output","parent":{"krate":2,"index":3571},"children":[],"decl_id":{"krate":2,"index":3574},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2285},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":359983,"byte_end":359992,"line_start":205,"line_end":205,"column_start":5,"column_end":14},"name":"index_mut","qualname":"<BitBox<O, T> as std::ops::IndexMut>::index_mut","value":"fn index_mut<'_>(&'_ mut Self, RangeInclusive<usize>) -> &'_ mut Self::Output","parent":{"krate":2,"index":3575},"children":[],"decl_id":{"krate":2,"index":3577},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2290},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":360219,"byte_end":360224,"line_start":214,"line_end":214,"column_start":5,"column_end":10},"name":"index","qualname":"<BitBox<O, T> as std::ops::Index>::index","value":"fn index<'_>(&'_ Self, RangeTo<usize>) -> &'_ Self::Output","parent":{"krate":2,"index":3571},"children":[],"decl_id":{"krate":2,"index":3574},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2294},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":360399,"byte_end":360408,"line_start":221,"line_end":221,"column_start":5,"column_end":14},"name":"index_mut","qualname":"<BitBox<O, T> as std::ops::IndexMut>::index_mut","value":"fn index_mut<'_>(&'_ mut Self, RangeTo<usize>) -> &'_ mut Self::Output","parent":{"krate":2,"index":3575},"children":[],"decl_id":{"krate":2,"index":3577},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2299},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":360637,"byte_end":360642,"line_start":230,"line_end":230,"column_start":5,"column_end":10},"name":"index","qualname":"<BitBox<O, T> as std::ops::Index>::index","value":"fn index<'_>(&'_ Self, RangeToInclusive<usize>) -> &'_ Self::Output","parent":{"krate":2,"index":3571},"children":[],"decl_id":{"krate":2,"index":3574},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2303},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":360835,"byte_end":360844,"line_start":237,"line_end":237,"column_start":5,"column_end":14},"name":"index_mut","qualname":"<BitBox<O, T> as std::ops::IndexMut>::index_mut","value":"fn index_mut<'_>(&'_ mut Self, RangeToInclusive<usize>)\n-> &'_ mut Self::Output","parent":{"krate":2,"index":3575},"children":[],"decl_id":{"krate":2,"index":3577},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2308},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":361053,"byte_end":361056,"line_start":249,"line_end":249,"column_start":5,"column_end":8},"name":"neg","qualname":"<BitBox<O, T> as std::ops::Neg>::neg","value":"fn neg(Self) -> Self::Output","parent":{"krate":2,"index":3358},"children":[],"decl_id":{"krate":2,"index":3360},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2313},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":361229,"byte_end":361232,"line_start":259,"line_end":259,"column_start":5,"column_end":8},"name":"not","qualname":"<BitBox<O, T> as std::ops::Not>::not","value":"fn not(Self) -> Self::Output","parent":{"krate":2,"index":3383},"children":[],"decl_id":{"krate":2,"index":3385},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2318},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":361412,"byte_end":361415,"line_start":269,"line_end":269,"column_start":5,"column_end":8},"name":"shl","qualname":"<BitBox<O, T> as std::ops::Shl>::shl","value":"fn shl(Self, usize) -> Self::Output","parent":{"krate":2,"index":3405},"children":[],"decl_id":{"krate":2,"index":3408},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2322},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":361571,"byte_end":361581,"line_start":277,"line_end":277,"column_start":5,"column_end":15},"name":"shl_assign","qualname":"<BitBox<O, T> as std::ops::ShlAssign>::shl_assign","value":"fn shl_assign<'_>(&'_ mut Self, usize)","parent":{"krate":2,"index":3429},"children":[],"decl_id":{"krate":2,"index":3431},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2327},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":361757,"byte_end":361760,"line_start":286,"line_end":286,"column_start":5,"column_end":8},"name":"shr","qualname":"<BitBox<O, T> as std::ops::Shr>::shr","value":"fn shr(Self, usize) -> Self::Output","parent":{"krate":2,"index":3411},"children":[],"decl_id":{"krate":2,"index":3414},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2331},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":361916,"byte_end":361926,"line_start":294,"line_end":294,"column_start":5,"column_end":15},"name":"shr_assign","qualname":"<BitBox<O, T> as std::ops::ShrAssign>::shr_assign","value":"fn shr_assign<'_>(&'_ mut Self, usize)","parent":{"krate":2,"index":3434},"children":[],"decl_id":{"krate":2,"index":3436},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2408},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":362572,"byte_end":362578,"line_start":45,"line_end":45,"column_start":5,"column_end":11},"name":"borrow","qualname":"<BitBox<O, T> as std::borrow::Borrow>::borrow","value":"fn borrow<'_>(&'_ Self) -> &'_ BitSlice<O, T>","parent":{"krate":2,"index":2857},"children":[],"decl_id":{"krate":2,"index":2859},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2412},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":362725,"byte_end":362735,"line_start":52,"line_end":52,"column_start":5,"column_end":15},"name":"borrow_mut","qualname":"<BitBox<O, T> as std::borrow::BorrowMut>::borrow_mut","value":"fn borrow_mut<'_>(&'_ mut Self) -> &'_ mut BitSlice<O, T>","parent":{"krate":2,"index":2860},"children":[],"decl_id":{"krate":2,"index":2862},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2416},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":362874,"byte_end":362879,"line_start":59,"line_end":59,"column_start":5,"column_end":10},"name":"clone","qualname":"<BitBox<O, T> as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2423},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":363245,"byte_end":363248,"line_start":76,"line_end":76,"column_start":5,"column_end":8},"name":"cmp","qualname":"<BitBox<O, T> as std::cmp::Ord>::cmp","value":"fn cmp<'_, '_>(&'_ Self, &'_ Self) -> Ordering","parent":{"krate":2,"index":2951},"children":[],"decl_id":{"krate":2,"index":2952},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2429},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":363453,"byte_end":363455,"line_start":83,"line_end":83,"column_start":5,"column_end":7},"name":"eq","qualname":"<BitBox<A, B> as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ BitBox<C, D>) -> bool","parent":{"krate":2,"index":2915},"children":[],"decl_id":{"krate":2,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2435},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":363665,"byte_end":363667,"line_start":90,"line_end":90,"column_start":5,"column_end":7},"name":"eq","qualname":"<BitBox<A, B> as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ BitSlice<C, D>) -> bool","parent":{"krate":2,"index":2915},"children":[],"decl_id":{"krate":2,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2441},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":363865,"byte_end":363867,"line_start":97,"line_end":97,"column_start":5,"column_end":7},"name":"eq","qualname":"<BitSlice<A, B> as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ BitBox<C, D>) -> bool","parent":{"krate":2,"index":2915},"children":[],"decl_id":{"krate":2,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2447},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":364062,"byte_end":364073,"line_start":104,"line_end":104,"column_start":5,"column_end":16},"name":"partial_cmp","qualname":"<BitBox<A, B> as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ BitBox<C, D>) -> Option<Ordering>","parent":{"krate":2,"index":2961},"children":[],"decl_id":{"krate":2,"index":2963},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2453},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":364305,"byte_end":364316,"line_start":111,"line_end":111,"column_start":5,"column_end":16},"name":"partial_cmp","qualname":"<BitBox<A, B> as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ BitSlice<C, D>) -> Option<Ordering>","parent":{"krate":2,"index":2961},"children":[],"decl_id":{"krate":2,"index":2963},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2459},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":364536,"byte_end":364547,"line_start":118,"line_end":118,"column_start":5,"column_end":16},"name":"partial_cmp","qualname":"<BitSlice<A, B> as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ BitBox<C, D>) -> Option<Ordering>","parent":{"krate":2,"index":2961},"children":[],"decl_id":{"krate":2,"index":2963},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2463},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":364728,"byte_end":364734,"line_start":125,"line_end":125,"column_start":5,"column_end":11},"name":"as_mut","qualname":"<BitBox<O, T> as std::convert::AsMut>::as_mut","value":"fn as_mut<'_>(&'_ mut Self) -> &'_ mut BitSlice<O, T>","parent":{"krate":2,"index":3163},"children":[],"decl_id":{"krate":2,"index":3165},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2467},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":364878,"byte_end":364884,"line_start":132,"line_end":132,"column_start":5,"column_end":11},"name":"as_mut","qualname":"<BitBox<O, T> as std::convert::AsMut>::as_mut","value":"fn as_mut<'_>(&'_ mut Self) -> &'_ mut [T]","parent":{"krate":2,"index":3163},"children":[],"decl_id":{"krate":2,"index":3165},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2471},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":365037,"byte_end":365043,"line_start":139,"line_end":139,"column_start":5,"column_end":11},"name":"as_ref","qualname":"<BitBox<O, T> as std::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ BitSlice<O, T>","parent":{"krate":2,"index":3160},"children":[],"decl_id":{"krate":2,"index":3162},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2475},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":365175,"byte_end":365181,"line_start":146,"line_end":146,"column_start":5,"column_end":11},"name":"as_ref","qualname":"<BitBox<O, T> as std::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ [T]","parent":{"krate":2,"index":3160},"children":[],"decl_id":{"krate":2,"index":3162},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2479},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":365322,"byte_end":365326,"line_start":153,"line_end":153,"column_start":5,"column_end":9},"name":"from","qualname":"<BitBox<O, T> as std::convert::From>::from","value":"fn from<'_>(&'_ BitSlice<O, T>) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2483},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":365468,"byte_end":365472,"line_start":160,"line_end":160,"column_start":5,"column_end":9},"name":"from","qualname":"<BitBox<O, T> as std::convert::From>::from","value":"fn from<'_>(&'_ [T]) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2487},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":365608,"byte_end":365612,"line_start":167,"line_end":167,"column_start":5,"column_end":9},"name":"from","qualname":"<BitBox<O, T> as std::convert::From>::from","value":"fn from(BitVec<O, T>) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2491},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":365756,"byte_end":365760,"line_start":174,"line_end":174,"column_start":5,"column_end":9},"name":"from","qualname":"<BitBox<O, T> as std::convert::From>::from","value":"fn from(Box<[T]>) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2495},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":365902,"byte_end":365906,"line_start":181,"line_end":181,"column_start":5,"column_end":9},"name":"into","qualname":"<BitBox<O, T> as std::convert::Into>::into","value":"fn into(Self) -> Box<[T]>","parent":{"krate":2,"index":3166},"children":[],"decl_id":{"krate":2,"index":3168},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2499},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":366032,"byte_end":366039,"line_start":188,"line_end":188,"column_start":5,"column_end":12},"name":"default","qualname":"<BitBox<O, T> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2503},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":366198,"byte_end":366201,"line_start":198,"line_end":198,"column_start":5,"column_end":8},"name":"fmt","qualname":"<BitBox<O, T> as std::fmt::Binary>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut Formatter) -> fmt::Result","parent":{"krate":2,"index":10299},"children":[],"decl_id":{"krate":2,"index":10300},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2507},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":366363,"byte_end":366366,"line_start":205,"line_end":205,"column_start":5,"column_end":8},"name":"fmt","qualname":"<BitBox<O, T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2511},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":366670,"byte_end":366673,"line_start":217,"line_end":217,"column_start":5,"column_end":8},"name":"fmt","qualname":"<BitBox<O, T> as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2515},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":366839,"byte_end":366842,"line_start":224,"line_end":224,"column_start":5,"column_end":8},"name":"fmt","qualname":"<BitBox<O, T> as std::fmt::LowerHex>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut Formatter) -> fmt::Result","parent":{"krate":2,"index":10301},"children":[],"decl_id":{"krate":2,"index":10302},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2519},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":367006,"byte_end":367009,"line_start":231,"line_end":231,"column_start":5,"column_end":8},"name":"fmt","qualname":"<BitBox<O, T> as std::fmt::Octal>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut Formatter) -> fmt::Result","parent":{"krate":2,"index":10297},"children":[],"decl_id":{"krate":2,"index":10298},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2523},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":367173,"byte_end":367176,"line_start":238,"line_end":238,"column_start":5,"column_end":8},"name":"fmt","qualname":"<BitBox<O, T> as std::fmt::UpperHex>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut Formatter) -> fmt::Result","parent":{"krate":2,"index":10303},"children":[],"decl_id":{"krate":2,"index":10304},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2527},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":367339,"byte_end":367343,"line_start":245,"line_end":245,"column_start":5,"column_end":9},"name":"hash","qualname":"<BitBox<O, T> as std::hash::Hash>::hash","value":"fn hash<H, '_, '_>(&'_ Self, &'_ mut H) where H: Hasher","parent":{"krate":2,"index":10526},"children":[],"decl_id":{"krate":2,"index":10527},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2537},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vec","qualname":"::vec","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","parent":null,"children":[{"krate":0,"index":2538},{"krate":0,"index":2539},{"krate":0,"index":2542},{"krate":0,"index":2545},{"krate":0,"index":2548},{"krate":0,"index":2549},{"krate":0,"index":2552},{"krate":0,"index":2555},{"krate":0,"index":2558},{"krate":0,"index":2561},{"krate":0,"index":2564},{"krate":0,"index":2565},{"krate":0,"index":2568},{"krate":0,"index":2571},{"krate":0,"index":2572},{"krate":0,"index":2573},{"krate":0,"index":2575},{"krate":0,"index":2578},{"krate":0,"index":2584},{"krate":0,"index":2611},{"krate":0,"index":2687},{"krate":0,"index":2846},{"krate":0,"index":3089},{"krate":0,"index":3325},{"krate":0,"index":3326}],"decl_id":null,"docs":" `BitVec` structure","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","byte_start":2112,"byte_end":2137,"line_start":64,"line_end":64,"column_start":1,"column_end":26}},{"value":"* `BitVec` structure\n\nThis module holds the main working type of the library. Clients can use\n`BitSlice` directly, but `BitVec` is much more useful for most work.\n\nThe `BitSlice` module discusses the design decisions for the separation between\nslice and vector types.\n!*/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":367702,"byte_end":367975,"line_start":1,"line_end":8,"column_start":1,"column_end":4}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":367977,"byte_end":368003,"line_start":10,"line_end":10,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":2578},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":375723,"byte_end":375729,"line_start":249,"line_end":249,"column_start":12,"column_end":18},"name":"BitVec","qualname":"::vec::BitVec","value":"BitVec {  }","parent":null,"children":[{"krate":0,"index":2581},{"krate":0,"index":2582},{"krate":0,"index":2583}],"decl_id":null,"docs":" A compact [`Vec`] of bits, whose order and storage type can be customized.","sig":null,"attributes":[{"value":"* A compact [`Vec`] of bits, whose order and storage type can be customized.\n\n`BitVec` is a newtype wrapper over `Vec`, and as such is exactly three words in\nsize on the stack.\n\n# Examples\n\n```rust\nuse bitvec::prelude::*;\n\nlet mut bv: BitVec = BitVec::new();\nbv.push(false);\nbv.push(true);\n\nassert_eq!(bv.len(), 2);\nassert_eq!(bv[0], false);\n\nassert_eq!(bv.pop(), Some(true));\nassert_eq!(bv.len(), 1);\n\nbv.set(0, true);\nassert_eq!(bv[0], true);\n\nbv.extend([0u8, 1, 0].iter().map(|n| *n != 0u8));\nfor bit in &*bv {\n  println!(\"{}\", bit);\n}\nassert_eq!(bv, bitvec![1, 0, 1, 0]);\n```\n\nThe [`bitvec!`] macro is provided to make initialization more convenient.\n\n```rust\nuse bitvec::prelude::*;\n\nlet mut bv = bitvec![0, 1, 2, 3];\nbv.push(false);\nassert_eq!(bv, bitvec![0, 1, 1, 1, 0]);\n```\n\nIt can also initialize each element of a `BitVec<_, T>` with a given value. This\nmay be more efficient than performing allocation and initialization in separate\nsteps, especially when initializing a vector of zeros:\n\n```rust\nuse bitvec::prelude::*;\n\nlet bv = bitvec![0; 15];\nassert_eq!(bv, bitvec![0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\n\n// The following is equivalent, but potentially slower:\nlet mut bv1: BitVec = BitVec::with_capacity(15);\nbv1.resize(15, false);\n```\n\nUse a `BitVec<T>` as an efficient stack:\n\n```rust\nuse bitvec::prelude::*;\nlet mut stack: BitVec = BitVec::new();\n\nstack.push(false);\nstack.push(true);\nstack.push(true);\n\nwhile let Some(top) = stack.pop() {\n  //  Prints true, true, false\n  println!(\"{}\", top);\n}\n```\n\n# Indexing\n\nThe `BitVec` type allows you to access values by index, because it implements\nthe [`Index`] trait. An example will be more explicit:\n\n```rust\nuse bitvec::prelude::*;\n\nlet bv = bitvec![0, 0, 1, 1];\nprintln!(\"{}\", bv[1]); // it will display 'false'\n```\n\nHowever, be careful: if you try to access an index which isn’t in the `BitVec`,\nyour software will panic! You cannot do this:\n\n```rust,should_panic\nuse bitvec::prelude::*;\n\nlet bv = bitvec![0, 1, 0, 1];\nprintln!(\"{}\", bv[6]); // it will panic!\n```\n\nIn conclusion: always check if the index you want to get really exists before\ndoing it.\n\n# Slicing\n\nA `BitVec` is growable. A [`BitSlice`], on the other hand, is fixed size. To get\na bit slice, use `&`. Example:\n\n```rust\nuse bitvec::prelude::*;\nfn read_bitslice(slice: &BitSlice) {\n    // use slice\n}\n\nlet bv = bitvec![0, 1];\nread_bitslice(&bv);\n\n// … and that’s all!\n// you can also do it like this:\nlet bs: &BitSlice = &bv;\n```\n\nIn Rust, it’s more common to pass slices as arguments rather than vectors when\nyou do not want to grow or shrink it. The same goes for [`Vec`] and [`&[]`], and\n[`String`] and [`&str`].\n\n# Capacity and reallocation\n\nThe capacity of a bit vector is the amount of space allocated for any future\nbits that will be added onto the vector. This is not to be confused with the\n*length* of a vector, which specifies the number of live, useful bits within the\nvector. If a vector’s length exceeds its capacity, its capacity will\nautomatically be increased, but its storage elements will have to be\nreallocated.\n\nFor example, a bit vector with capacity 10 and length 0 would be an allocated,\nbut uninhabited, vector, with space for ten more bits. Pushing ten or fewer bits\nonto the vector will not change its capacity or cause reallocation to occur.\nHowever, if the vector’s length is increased to eleven, it will have to\nreallocate, which can be slow. For this reason, it is recommended to use\n[`BitVec::with_capacity`] whenever possible to specify how big the bit vector is\nexpected to get.\n\n# Guarantees\n\nDue to its incredibly fundamental nature, `BitVec` makes a lot of guarantees\nabout its design. This ensures that it is as low-overhead as possible in the\ngeneral case, and can be correctly manipulated in fundamental ways by `unsafe`\ncode.\n\nMost fundamentally, `BitVec` is and always will be a `([`BitPtr`], capacity)`\ndoublet. No more, no less. The order of these fields is unspecified, and you\nshould **only** interact with the members through the provided APIs. Note that\n`BitPtr` is ***not directly manipulable***, and must ***never*** be written or\ninterpreted as anything but opaque binary data by user code.\n\nWhen a `BitVec` has allocated memory, then the memory to which it points is on\nthe heap (as defined by the allocator Rust is configured to use by default), and\nits pointer points to [`len`] initialized bits in order of the [`BitOrder`] type\nparameter, followed by `capacity - len` logically uninitialized bits.\n\n`BitVec` will never perform a “small optimization” where elements are stored in\nits handle representation, for two reasons:\n\n- It would make it more difficult for user code to correctly manipulate a\n  `BitVec`. The contents of the `BitVec` would not have a stable address if the\n  handle were moved, and it would be more difficult to determine if a `BitVec`\n  had allocated memory.\n\n- It would penalize the general, heap-allocated, case by incurring a branch on\n  every access.\n\n`BitVec` will never automatically shrink itself, even if it is emptied. This\nensures that no unnecessary allocations or deallocations occur. Emptying a\n`BitVec` and then refilling it to the same length will incur no calls to the\nallocator. If you wish to free up unused memory, use [`shrink_to_fit`].\n\n## Erasure\n\n`BitVec` will not specifically overwrite any data that is removed from it, nor\nwill it specifically preserve it. Its uninitialized memory is scratch space that\nmay be used however the implementation desires, and must not be relied upon as\nstable. Do not rely on removed data to be erased for security purposes. Even if\nyou drop a `BitVec`, its buffer may simply be reused for other data structures\nin your program. Even if you zero a `BitVec`’s memory first, that may not\nactually occur if the optimizer does not consider this an observable side\neffect. There is one case that will never break, however: using `unsafe` to\nconstruct a `[T]` slice over the `BitVec`’s capacity, and writing to the excess\nspace, then increasing the length to match, is always valid.\n\n# Type Parameters\n\n- `O: BitOrder`: An implementor of the [`BitOrder`] trait. This type is used to\n  convert semantic indices into concrete bit positions in elements, and store or\n  retrieve bit values from the storage type.\n- `T: BitStore`: An implementor of the [`BitStore`] trait: `u8`, `u16`, `u32`,\n  or `u64` (64-bit systems only). This is the actual type in memory that the\n  vector will use to store data.\n\n# Safety\n\nThe `BitVec` handle has the same *size* as standard Rust `Vec` handles, but it\nis ***extremely binary incompatible*** with them. Attempting to treat\n`BitVec<_, T>` as `Vec<T>` in any manner except through the provided APIs is\n***catastrophically*** unsafe and unsound.\n\n[`BitSlice`]: ../slice/struct.BitSlice.html\n[`BitVec::with_capacity`]: #method.with_capacity\n[`BitStore`]: ../store/trait.BitStore.html\n[`BitOrder`]: ../order/trait.BitOrder.html\n[`Index`]: https://doc.rust-lang.org/stable/std/ops/trait.Index.html\n[`String`]: https://doc.rust-lang.org/stable/std/string/struct.String.html\n[`Vec`]: https://doc.rust-lang.org/stable/std/vec/struct.Vec.html\n[`bitvec!`]: ../macro.bitvec.html\n[`clear_on_drop`]: https://docs.rs/clear_on_drop\n[`len`]: #method.len\n[`shrink_to_fit`]: #method.shrink_to_fit\n[`&str`]: https://doc.rust-lang.org/stable/std/primitive.str.html\n[`&[]`]: https://doc.rust-lang.org/stable/std/primitive.slice.html\n**/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":368258,"byte_end":375700,"line_start":35,"line_end":247,"column_start":1,"column_end":4}},{"value":"repr(C)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":375701,"byte_end":375711,"line_start":248,"line_end":248,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":2587},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":376538,"byte_end":376544,"line_start":274,"line_end":274,"column_start":9,"column_end":15},"name":"repeat","qualname":"<BitVec<O, T>>::repeat","value":"fn repeat(bool, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `BitVec` from a value repeated many times.","sig":null,"attributes":[{"value":"/ Constructs a `BitVec` from a value repeated many times.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":376075,"byte_end":376134,"line_start":261,"line_end":261,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":376136,"byte_end":376139,"line_start":262,"line_end":262,"column_start":2,"column_end":5}},{"value":"/ This function is equivalent to the `bitvec![O, T; bit; len]` macro call,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":376141,"byte_end":376217,"line_start":263,"line_end":263,"column_start":2,"column_end":78}},{"value":"/ and is in fact the implementation of that macro syntax.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":376219,"byte_end":376278,"line_start":264,"line_end":264,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":376280,"byte_end":376283,"line_start":265,"line_end":265,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":376285,"byte_end":376301,"line_start":266,"line_end":266,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":376303,"byte_end":376306,"line_start":267,"line_end":267,"column_start":2,"column_end":5}},{"value":"/ - `bit`: The bit value to which all `len` allocated bits will be set.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":376308,"byte_end":376381,"line_start":268,"line_end":268,"column_start":2,"column_end":75}},{"value":"/ - `len`: The number of live bits in the constructed `BitVec`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":376383,"byte_end":376448,"line_start":269,"line_end":269,"column_start":2,"column_end":67}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":376450,"byte_end":376453,"line_start":270,"line_end":270,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":376455,"byte_end":376468,"line_start":271,"line_end":271,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":376470,"byte_end":376473,"line_start":272,"line_end":272,"column_start":2,"column_end":5}},{"value":"/ A `BitVec` with `len` live bits, all set to `bit`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":376475,"byte_end":376529,"line_start":273,"line_end":273,"column_start":2,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":2588},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":377171,"byte_end":377183,"line_start":302,"line_end":302,"column_start":9,"column_end":21},"name":"from_element","qualname":"<BitVec<O, T>>::from_element","value":"fn from_element(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `BitVec` from a single element.","sig":null,"attributes":[{"value":"/ Constructs a `BitVec` from a single element.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":376720,"byte_end":376768,"line_start":281,"line_end":281,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":376770,"byte_end":376773,"line_start":282,"line_end":282,"column_start":2,"column_end":5}},{"value":"/ The produced `BitVec` will span the element, and include all bits in it.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":376775,"byte_end":376851,"line_start":283,"line_end":283,"column_start":2,"column_end":78}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":376853,"byte_end":376856,"line_start":284,"line_end":284,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":376858,"byte_end":376874,"line_start":285,"line_end":285,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":376876,"byte_end":376879,"line_start":286,"line_end":286,"column_start":2,"column_end":5}},{"value":"/ - `elt`: The source element.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":376881,"byte_end":376913,"line_start":287,"line_end":287,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":376915,"byte_end":376918,"line_start":288,"line_end":288,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":376920,"byte_end":376933,"line_start":289,"line_end":289,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":376935,"byte_end":376938,"line_start":290,"line_end":290,"column_start":2,"column_end":5}},{"value":"/ A `BitVec` over the provided element.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":376940,"byte_end":376981,"line_start":291,"line_end":291,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":376983,"byte_end":376986,"line_start":292,"line_end":292,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":376988,"byte_end":377002,"line_start":293,"line_end":293,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":377004,"byte_end":377007,"line_start":294,"line_end":294,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":377009,"byte_end":377020,"line_start":295,"line_end":295,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":377022,"byte_end":377049,"line_start":296,"line_end":296,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":377051,"byte_end":377054,"line_start":297,"line_end":297,"column_start":2,"column_end":5}},{"value":"/ let bv = BitVec::<Msb0, u8>::from_element(5);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":377056,"byte_end":377105,"line_start":298,"line_end":298,"column_start":2,"column_end":51}},{"value":"/ assert_eq!(bv.count_ones(), 2);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":377107,"byte_end":377142,"line_start":299,"line_end":299,"column_start":2,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":377144,"byte_end":377151,"line_start":300,"line_end":300,"column_start":2,"column_end":9}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":377153,"byte_end":377162,"line_start":301,"line_end":301,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":2589},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":377830,"byte_end":377840,"line_start":333,"line_end":333,"column_start":9,"column_end":19},"name":"from_slice","qualname":"<BitVec<O, T>>::from_slice","value":"fn from_slice<'_>(&'_ [T]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a `BitVec` from a slice of elements.","sig":null,"attributes":[{"value":"/ Constructs a `BitVec` from a slice of elements.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":377279,"byte_end":377330,"line_start":308,"line_end":308,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":377332,"byte_end":377335,"line_start":309,"line_end":309,"column_start":2,"column_end":5}},{"value":"/ The produced `BitVec` will span the provided slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":377337,"byte_end":377392,"line_start":310,"line_end":310,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":377394,"byte_end":377397,"line_start":311,"line_end":311,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":377399,"byte_end":377415,"line_start":312,"line_end":312,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":377417,"byte_end":377420,"line_start":313,"line_end":313,"column_start":2,"column_end":5}},{"value":"/ - `slice`: The source elements to copy into the new `BitVec`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":377422,"byte_end":377487,"line_start":314,"line_end":314,"column_start":2,"column_end":67}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":377489,"byte_end":377492,"line_start":315,"line_end":315,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":377494,"byte_end":377507,"line_start":316,"line_end":316,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":377509,"byte_end":377512,"line_start":317,"line_end":317,"column_start":2,"column_end":5}},{"value":"/ A `BitVec` set to the provided slice values.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":377514,"byte_end":377562,"line_start":318,"line_end":318,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":377564,"byte_end":377567,"line_start":319,"line_end":319,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":377569,"byte_end":377583,"line_start":320,"line_end":320,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":377585,"byte_end":377588,"line_start":321,"line_end":321,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":377590,"byte_end":377601,"line_start":322,"line_end":322,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":377603,"byte_end":377630,"line_start":323,"line_end":323,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":377632,"byte_end":377635,"line_start":324,"line_end":324,"column_start":2,"column_end":5}},{"value":"/ let src = [5, 10];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":377637,"byte_end":377659,"line_start":325,"line_end":325,"column_start":2,"column_end":24}},{"value":"/ let bv = BitVec::<Msb0, u8>::from_slice(&src[..]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":377661,"byte_end":377715,"line_start":326,"line_end":326,"column_start":2,"column_end":56}},{"value":"/ assert!(bv[5]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":377717,"byte_end":377736,"line_start":327,"line_end":327,"column_start":2,"column_end":21}},{"value":"/ assert!(bv[7]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":377738,"byte_end":377757,"line_start":328,"line_end":328,"column_start":2,"column_end":21}},{"value":"/ assert!(bv[12]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":377759,"byte_end":377779,"line_start":329,"line_end":329,"column_start":2,"column_end":22}},{"value":"/ assert!(bv[14]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":377781,"byte_end":377801,"line_start":330,"line_end":330,"column_start":2,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":377803,"byte_end":377810,"line_start":331,"line_end":331,"column_start":2,"column_end":9}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":377812,"byte_end":377821,"line_start":332,"line_end":332,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":2590},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":378496,"byte_end":378504,"line_start":363,"line_end":363,"column_start":9,"column_end":17},"name":"from_vec","qualname":"<BitVec<O, T>>::from_vec","value":"fn from_vec(Vec<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Consumes a `Vec<T>` and creates a `BitVec<C, T>` from it.","sig":null,"attributes":[{"value":"/ Consumes a `Vec<T>` and creates a `BitVec<C, T>` from it.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":377904,"byte_end":377965,"line_start":337,"line_end":337,"column_start":2,"column_end":63}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":377967,"byte_end":377970,"line_start":338,"line_end":338,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":377972,"byte_end":377988,"line_start":339,"line_end":339,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":377990,"byte_end":377993,"line_start":340,"line_end":340,"column_start":2,"column_end":5}},{"value":"/ - `vec`: The source vector whose memory will be used.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":377995,"byte_end":378052,"line_start":341,"line_end":341,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":378054,"byte_end":378057,"line_start":342,"line_end":342,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":378059,"byte_end":378072,"line_start":343,"line_end":343,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":378074,"byte_end":378077,"line_start":344,"line_end":344,"column_start":2,"column_end":5}},{"value":"/ A new `BitVec` using the `vec` `Vec`’s memory.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":378079,"byte_end":378131,"line_start":345,"line_end":345,"column_start":2,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":378133,"byte_end":378136,"line_start":346,"line_end":346,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":378138,"byte_end":378150,"line_start":347,"line_end":347,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":378152,"byte_end":378155,"line_start":348,"line_end":348,"column_start":2,"column_end":5}},{"value":"/ Panics if the source vector would cause the `BitVec` to overflow","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":378157,"byte_end":378225,"line_start":349,"line_end":349,"column_start":2,"column_end":70}},{"value":"/ capacity.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":378227,"byte_end":378240,"line_start":350,"line_end":350,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":378242,"byte_end":378245,"line_start":351,"line_end":351,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":378247,"byte_end":378261,"line_start":352,"line_end":352,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":378263,"byte_end":378266,"line_start":353,"line_end":353,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":378268,"byte_end":378279,"line_start":354,"line_end":354,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":378281,"byte_end":378308,"line_start":355,"line_end":355,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":378310,"byte_end":378313,"line_start":356,"line_end":356,"column_start":2,"column_end":5}},{"value":"/ let bv = BitVec::<Msb0, u8>::from_vec(vec![1, 2, 4, 8]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":378315,"byte_end":378375,"line_start":357,"line_end":357,"column_start":2,"column_end":62}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":378377,"byte_end":378392,"line_start":358,"line_end":358,"column_start":2,"column_end":17}},{"value":"/   \"[00000001, 00000010, 00000100, 00001000]\",","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":378394,"byte_end":378443,"line_start":359,"line_end":359,"column_start":2,"column_end":51}},{"value":"/   &format!(\"{}\", bv),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":378445,"byte_end":378470,"line_start":360,"line_end":360,"column_start":2,"column_end":27}},{"value":"/ );","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":378472,"byte_end":378478,"line_start":361,"line_end":361,"column_start":2,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":378480,"byte_end":378487,"line_start":362,"line_end":362,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":2591},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":380191,"byte_end":380204,"line_start":420,"line_end":420,"column_start":9,"column_end":22},"name":"from_bitslice","qualname":"<BitVec<O, T>>::from_bitslice","value":"fn from_bitslice<'_>(&'_ BitSlice<O, T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Clones a `&BitSlice` into a `BitVec`.","sig":null,"attributes":[{"value":"/ Clones a `&BitSlice` into a `BitVec`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":378870,"byte_end":378911,"line_start":382,"line_end":382,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":378913,"byte_end":378916,"line_start":383,"line_end":383,"column_start":2,"column_end":5}},{"value":"/ This is the only method by which a `BitVec` can be created whose first","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":378918,"byte_end":378992,"line_start":384,"line_end":384,"column_start":2,"column_end":76}},{"value":"/ live bit is not at the `0` position. This behavior, though","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":378994,"byte_end":379056,"line_start":385,"line_end":385,"column_start":2,"column_end":64}},{"value":"/ unconventional for common uses of `BitVec`, allows for a more efficient","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":379058,"byte_end":379133,"line_start":386,"line_end":386,"column_start":2,"column_end":77}},{"value":"/ clone of any `BitSlice` region without shifting each bit in the region","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":379135,"byte_end":379209,"line_start":387,"line_end":387,"column_start":2,"column_end":76}},{"value":"/ down to fit the `0` starting position.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":379211,"byte_end":379253,"line_start":388,"line_end":388,"column_start":2,"column_end":44}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":379255,"byte_end":379258,"line_start":389,"line_end":389,"column_start":2,"column_end":5}},{"value":"/ Misaligned `BitVec`s **do not** have any adverse effect on usage other","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":379260,"byte_end":379334,"line_start":390,"line_end":390,"column_start":2,"column_end":76}},{"value":"/ than the in-memory representation.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":379336,"byte_end":379374,"line_start":391,"line_end":391,"column_start":2,"column_end":40}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":379376,"byte_end":379379,"line_start":392,"line_end":392,"column_start":2,"column_end":5}},{"value":"/ Whenever a `BitVec` is emptied, its head index is always set to `0`, and","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":379381,"byte_end":379457,"line_start":393,"line_end":393,"column_start":2,"column_end":78}},{"value":"/ will begin from the aligned position on future refills.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":379459,"byte_end":379518,"line_start":394,"line_end":394,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":379520,"byte_end":379523,"line_start":395,"line_end":395,"column_start":2,"column_end":5}},{"value":"/ The [`::force_align`] method will shift the `BitVec`’s data to begin at","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":379525,"byte_end":379602,"line_start":396,"line_end":396,"column_start":2,"column_end":77}},{"value":"/ the `0` index, if you require this property.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":379604,"byte_end":379652,"line_start":397,"line_end":397,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":379654,"byte_end":379657,"line_start":398,"line_end":398,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":379659,"byte_end":379675,"line_start":399,"line_end":399,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":379677,"byte_end":379680,"line_start":400,"line_end":400,"column_start":2,"column_end":5}},{"value":"/ - `slice`: The source `BitSlice` region. This may have any head index,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":379682,"byte_end":379756,"line_start":401,"line_end":401,"column_start":2,"column_end":76}},{"value":"/   and its memory will be copied element-wise into the new buffer.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":379758,"byte_end":379827,"line_start":402,"line_end":402,"column_start":2,"column_end":71}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":379829,"byte_end":379832,"line_start":403,"line_end":403,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":379834,"byte_end":379847,"line_start":404,"line_end":404,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":379849,"byte_end":379852,"line_start":405,"line_end":405,"column_start":2,"column_end":5}},{"value":"/ A `BitVec` containing the same bits as the source slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":379854,"byte_end":379914,"line_start":406,"line_end":406,"column_start":2,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":379916,"byte_end":379919,"line_start":407,"line_end":407,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":379921,"byte_end":379935,"line_start":408,"line_end":408,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":379937,"byte_end":379940,"line_start":409,"line_end":409,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":379942,"byte_end":379953,"line_start":410,"line_end":410,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":379955,"byte_end":379982,"line_start":411,"line_end":411,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":379984,"byte_end":379987,"line_start":412,"line_end":412,"column_start":2,"column_end":5}},{"value":"/ let bs = [0u8, !0].bits::<Msb0>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":379989,"byte_end":380027,"line_start":413,"line_end":413,"column_start":2,"column_end":40}},{"value":"/ let bv = BitVec::from_bitslice(bs);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":380029,"byte_end":380068,"line_start":414,"line_end":414,"column_start":2,"column_end":41}},{"value":"/ assert_eq!(bv.len(), 16);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":380070,"byte_end":380099,"line_start":415,"line_end":415,"column_start":2,"column_end":31}},{"value":"/ assert!(bv.some());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":380101,"byte_end":380124,"line_start":416,"line_end":416,"column_start":2,"column_end":25}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":380126,"byte_end":380133,"line_start":417,"line_end":417,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":380135,"byte_end":380138,"line_start":418,"line_end":418,"column_start":2,"column_end":5}},{"value":"/ [`::force_align`]: #method.force_align","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":380140,"byte_end":380182,"line_start":419,"line_end":419,"column_start":2,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":2593},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":381486,"byte_end":381505,"line_start":467,"line_end":467,"column_start":9,"column_end":28},"name":"from_boxed_bitslice","qualname":"<BitVec<O, T>>::from_boxed_bitslice","value":"fn from_boxed_bitslice(BitBox<O, T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Converts a frozen `BitBox` allocation into a growable `BitVec`.","sig":null,"attributes":[{"value":"/ Converts a frozen `BitBox` allocation into a growable `BitVec`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":381011,"byte_end":381078,"line_start":446,"line_end":446,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":381080,"byte_end":381083,"line_start":447,"line_end":447,"column_start":2,"column_end":5}},{"value":"/ This does not copy or reallocate.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":381085,"byte_end":381122,"line_start":448,"line_end":448,"column_start":2,"column_end":39}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":381124,"byte_end":381127,"line_start":449,"line_end":449,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":381129,"byte_end":381145,"line_start":450,"line_end":450,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":381147,"byte_end":381150,"line_start":451,"line_end":451,"column_start":2,"column_end":5}},{"value":"/ - `slice`: A `BitBox` to be thawed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":381152,"byte_end":381191,"line_start":452,"line_end":452,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":381193,"byte_end":381196,"line_start":453,"line_end":453,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":381198,"byte_end":381211,"line_start":454,"line_end":454,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":381213,"byte_end":381216,"line_start":455,"line_end":455,"column_start":2,"column_end":5}},{"value":"/ A growable collection over the original memory of the slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":381218,"byte_end":381282,"line_start":456,"line_end":456,"column_start":2,"column_end":66}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":381284,"byte_end":381287,"line_start":457,"line_end":457,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":381289,"byte_end":381303,"line_start":458,"line_end":458,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":381305,"byte_end":381308,"line_start":459,"line_end":459,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":381310,"byte_end":381321,"line_start":460,"line_end":460,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":381323,"byte_end":381350,"line_start":461,"line_end":461,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":381352,"byte_end":381355,"line_start":462,"line_end":462,"column_start":2,"column_end":5}},{"value":"/ let bv = BitVec::from_boxed_bitslice(bitbox![0, 1]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":381357,"byte_end":381413,"line_start":463,"line_end":463,"column_start":2,"column_end":58}},{"value":"/ assert_eq!(bv.len(), 2);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":381415,"byte_end":381443,"line_start":464,"line_end":464,"column_start":2,"column_end":30}},{"value":"/ assert!(bv.some());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":381445,"byte_end":381468,"line_start":465,"line_end":465,"column_start":2,"column_end":25}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":381470,"byte_end":381477,"line_start":466,"line_end":466,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":2594},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":383124,"byte_end":383138,"line_start":509,"line_end":509,"column_start":16,"column_end":30},"name":"from_raw_parts","qualname":"<BitVec<O, T>>::from_raw_parts","value":"unsafe fn from_raw_parts(BitPtr<T>, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BitVec<C, T>` directly from the raw parts of another.","sig":null,"attributes":[{"value":"/ Creates a new `BitVec<C, T>` directly from the raw parts of another.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":381656,"byte_end":381728,"line_start":473,"line_end":473,"column_start":2,"column_end":74}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":381730,"byte_end":381733,"line_start":474,"line_end":474,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":381735,"byte_end":381751,"line_start":475,"line_end":475,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":381753,"byte_end":381756,"line_start":476,"line_end":476,"column_start":2,"column_end":5}},{"value":"/ - `pointer`: The `BitPtr<T>` to use.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":381758,"byte_end":381798,"line_start":477,"line_end":477,"column_start":2,"column_end":42}},{"value":"/ - `capacity`: The number of `T` elements *allocated* in that slab.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":381800,"byte_end":381870,"line_start":478,"line_end":478,"column_start":2,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":381872,"byte_end":381875,"line_start":479,"line_end":479,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":381877,"byte_end":381890,"line_start":480,"line_end":480,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":381892,"byte_end":381895,"line_start":481,"line_end":481,"column_start":2,"column_end":5}},{"value":"/ A `BitVec` over the given slab of memory.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":381897,"byte_end":381942,"line_start":482,"line_end":482,"column_start":2,"column_end":47}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":381944,"byte_end":381947,"line_start":483,"line_end":483,"column_start":2,"column_end":5}},{"value":"/ # Safety","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":381949,"byte_end":381961,"line_start":484,"line_end":484,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":381963,"byte_end":381966,"line_start":485,"line_end":485,"column_start":2,"column_end":5}},{"value":"/ This is ***highly*** unsafe, due to the number of invariants that aren’t","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":381968,"byte_end":382046,"line_start":486,"line_end":486,"column_start":2,"column_end":78}},{"value":"/ checked:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":382048,"byte_end":382060,"line_start":487,"line_end":487,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":382062,"byte_end":382065,"line_start":488,"line_end":488,"column_start":2,"column_end":5}},{"value":"/ - `pointer` needs to have been previously allocated by some allocating","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":382067,"byte_end":382141,"line_start":489,"line_end":489,"column_start":2,"column_end":76}},{"value":"/   type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":382143,"byte_end":382154,"line_start":490,"line_end":490,"column_start":2,"column_end":13}},{"value":"/ - `pointer`’s `T` needs to have the same size ***and alignment*** as it","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":382156,"byte_end":382233,"line_start":491,"line_end":491,"column_start":2,"column_end":77}},{"value":"/   was initially allocated.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":382235,"byte_end":382265,"line_start":492,"line_end":492,"column_start":2,"column_end":32}},{"value":"/ - `pointer`’s element count needs to be less than or equal to the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":382267,"byte_end":382338,"line_start":493,"line_end":493,"column_start":2,"column_end":71}},{"value":"/   original allocation capacity.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":382340,"byte_end":382375,"line_start":494,"line_end":494,"column_start":2,"column_end":37}},{"value":"/ - `capacity` needs to be the original allocation capacity for the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":382377,"byte_end":382446,"line_start":495,"line_end":495,"column_start":2,"column_end":71}},{"value":"/   vector. This is *not* the value produced by `.capacity()`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":382448,"byte_end":382512,"line_start":496,"line_end":496,"column_start":2,"column_end":66}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":382514,"byte_end":382517,"line_start":497,"line_end":497,"column_start":2,"column_end":5}},{"value":"/ Violating these ***will*** cause problems, like corrupting the handle’s","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":382519,"byte_end":382596,"line_start":498,"line_end":498,"column_start":2,"column_end":77}},{"value":"/ concept of memory, the allocator’s internal data structures, and the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":382598,"byte_end":382672,"line_start":499,"line_end":499,"column_start":2,"column_end":74}},{"value":"/ sanity of your program. It is ***absolutely*** not safe to construct a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":382674,"byte_end":382748,"line_start":500,"line_end":500,"column_start":2,"column_end":76}},{"value":"/ `BitVec` whose `T` differs from the type used for the initial","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":382750,"byte_end":382815,"line_start":501,"line_end":501,"column_start":2,"column_end":67}},{"value":"/ allocation.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":382817,"byte_end":382832,"line_start":502,"line_end":502,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":382834,"byte_end":382837,"line_start":503,"line_end":503,"column_start":2,"column_end":5}},{"value":"/ The ownership of `pointer` is effectively transferred to the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":382839,"byte_end":382903,"line_start":504,"line_end":504,"column_start":2,"column_end":66}},{"value":"/ `BitVec<C, T>` which may then deallocate, reallocate, or modify the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":382905,"byte_end":382976,"line_start":505,"line_end":505,"column_start":2,"column_end":73}},{"value":"/ contents of the referent slice at will. Ensure that nothing else uses","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":382978,"byte_end":383051,"line_start":506,"line_end":506,"column_start":2,"column_end":75}},{"value":"/ the pointer after calling this function.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":383053,"byte_end":383097,"line_start":507,"line_end":507,"column_start":2,"column_end":46}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":383099,"byte_end":383108,"line_start":508,"line_end":508,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":2595},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":383614,"byte_end":383625,"line_start":538,"line_end":538,"column_start":9,"column_end":20},"name":"as_bitslice","qualname":"<BitVec<O, T>>::as_bitslice","value":"fn as_bitslice<'_>(&'_ Self) -> &'_ BitSlice<O, T>","parent":null,"children":[],"decl_id":null,"docs":" Produces a `BitSlice` containing the entire vector.","sig":null,"attributes":[{"value":"/ Produces a `BitSlice` containing the entire vector.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":383253,"byte_end":383308,"line_start":517,"line_end":517,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":383310,"byte_end":383313,"line_start":518,"line_end":518,"column_start":2,"column_end":5}},{"value":"/ Equivalent to `&s[..]`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":383315,"byte_end":383342,"line_start":519,"line_end":519,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":383344,"byte_end":383347,"line_start":520,"line_end":520,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":383349,"byte_end":383365,"line_start":521,"line_end":521,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":383367,"byte_end":383370,"line_start":522,"line_end":522,"column_start":2,"column_end":5}},{"value":"/ - `&self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":383372,"byte_end":383385,"line_start":523,"line_end":523,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":383387,"byte_end":383390,"line_start":524,"line_end":524,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":383392,"byte_end":383405,"line_start":525,"line_end":525,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":383407,"byte_end":383410,"line_start":526,"line_end":526,"column_start":2,"column_end":5}},{"value":"/ A `BitSlice` over the vector.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":383412,"byte_end":383445,"line_start":527,"line_end":527,"column_start":2,"column_end":35}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":383447,"byte_end":383450,"line_start":528,"line_end":528,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":383452,"byte_end":383466,"line_start":529,"line_end":529,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":383468,"byte_end":383471,"line_start":530,"line_end":530,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":383473,"byte_end":383484,"line_start":531,"line_end":531,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":383486,"byte_end":383513,"line_start":532,"line_end":532,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":383515,"byte_end":383518,"line_start":533,"line_end":533,"column_start":2,"column_end":5}},{"value":"/ let bv = bitvec![0, 1, 1, 0];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":383520,"byte_end":383553,"line_start":534,"line_end":534,"column_start":2,"column_end":35}},{"value":"/ let bs = bv.as_bitslice();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":383555,"byte_end":383585,"line_start":535,"line_end":535,"column_start":2,"column_end":32}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":383587,"byte_end":383594,"line_start":536,"line_end":536,"column_start":2,"column_end":9}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":383596,"byte_end":383605,"line_start":537,"line_end":537,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":2596},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":384083,"byte_end":384098,"line_start":563,"line_end":563,"column_start":9,"column_end":24},"name":"as_mut_bitslice","qualname":"<BitVec<O, T>>::as_mut_bitslice","value":"fn as_mut_bitslice<'_>(&'_ mut Self) -> &'_ mut BitSlice<O, T>","parent":null,"children":[],"decl_id":null,"docs":" Produces a mutable `BitSlice` containing the entire vector.","sig":null,"attributes":[{"value":"/ Produces a mutable `BitSlice` containing the entire vector.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":383690,"byte_end":383753,"line_start":542,"line_end":542,"column_start":2,"column_end":65}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":383755,"byte_end":383758,"line_start":543,"line_end":543,"column_start":2,"column_end":5}},{"value":"/ Equivalent to `&mut s[..]`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":383760,"byte_end":383791,"line_start":544,"line_end":544,"column_start":2,"column_end":33}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":383793,"byte_end":383796,"line_start":545,"line_end":545,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":383798,"byte_end":383814,"line_start":546,"line_end":546,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":383816,"byte_end":383819,"line_start":547,"line_end":547,"column_start":2,"column_end":5}},{"value":"/ - `&mut self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":383821,"byte_end":383838,"line_start":548,"line_end":548,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":383840,"byte_end":383843,"line_start":549,"line_end":549,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":383845,"byte_end":383858,"line_start":550,"line_end":550,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":383860,"byte_end":383863,"line_start":551,"line_end":551,"column_start":2,"column_end":5}},{"value":"/ A mutable `BitSlice` over the vector.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":383865,"byte_end":383906,"line_start":552,"line_end":552,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":383908,"byte_end":383911,"line_start":553,"line_end":553,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":383913,"byte_end":383927,"line_start":554,"line_end":554,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":383929,"byte_end":383932,"line_start":555,"line_end":555,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":383934,"byte_end":383945,"line_start":556,"line_end":556,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":383947,"byte_end":383974,"line_start":557,"line_end":557,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":383976,"byte_end":383979,"line_start":558,"line_end":558,"column_start":2,"column_end":5}},{"value":"/ let mut bv = bitvec![0, 1, 1, 0];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":383981,"byte_end":384018,"line_start":559,"line_end":559,"column_start":2,"column_end":39}},{"value":"/ let bs = bv.as_mut_bitslice();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":384020,"byte_end":384054,"line_start":560,"line_end":560,"column_start":2,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":384056,"byte_end":384063,"line_start":561,"line_end":561,"column_start":2,"column_end":9}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":384065,"byte_end":384074,"line_start":562,"line_end":562,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":2597},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":385274,"byte_end":385286,"line_start":598,"line_end":598,"column_start":9,"column_end":21},"name":"set_elements","qualname":"<BitVec<O, T>>::set_elements","value":"fn set_elements<'_>(&'_ mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Sets the backing storage to the provided element.","sig":null,"attributes":[{"value":"/ Sets the backing storage to the provided element.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":384175,"byte_end":384228,"line_start":567,"line_end":567,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":384230,"byte_end":384233,"line_start":568,"line_end":568,"column_start":2,"column_end":5}},{"value":"/ This unconditionally sets each live element in the backing buffer to the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":384235,"byte_end":384311,"line_start":569,"line_end":569,"column_start":2,"column_end":78}},{"value":"/ provided value, without altering the `BitVec` length or capacity. It","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":384313,"byte_end":384385,"line_start":570,"line_end":570,"column_start":2,"column_end":74}},{"value":"/ operates on the underlying `Vec`’s memory buffer directly, and ignores","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":384387,"byte_end":384463,"line_start":571,"line_end":571,"column_start":2,"column_end":76}},{"value":"/ the `BitVec`’s cursors.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":384465,"byte_end":384494,"line_start":572,"line_end":572,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":384496,"byte_end":384499,"line_start":573,"line_end":573,"column_start":2,"column_end":5}},{"value":"/ It is an implementation detail as to whether this affects the value of","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":384501,"byte_end":384575,"line_start":574,"line_end":574,"column_start":2,"column_end":76}},{"value":"/ allocated, but not currently used, elements in the buffer. Behavior of","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":384577,"byte_end":384651,"line_start":575,"line_end":575,"column_start":2,"column_end":76}},{"value":"/ this method on elements not visible through `self.as_slice()` is not","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":384653,"byte_end":384725,"line_start":576,"line_end":576,"column_start":2,"column_end":74}},{"value":"/ specified.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":384727,"byte_end":384741,"line_start":577,"line_end":577,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":384743,"byte_end":384746,"line_start":578,"line_end":578,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":384748,"byte_end":384764,"line_start":579,"line_end":579,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":384766,"byte_end":384769,"line_start":580,"line_end":580,"column_start":2,"column_end":5}},{"value":"/ - `&mut self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":384771,"byte_end":384788,"line_start":581,"line_end":581,"column_start":2,"column_end":19}},{"value":"/ - `element`: The value to which each live element in the backing store","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":384790,"byte_end":384864,"line_start":582,"line_end":582,"column_start":2,"column_end":76}},{"value":"/   will be set.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":384866,"byte_end":384884,"line_start":583,"line_end":583,"column_start":2,"column_end":20}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":384886,"byte_end":384889,"line_start":584,"line_end":584,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":384891,"byte_end":384905,"line_start":585,"line_end":585,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":384907,"byte_end":384910,"line_start":586,"line_end":586,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":384912,"byte_end":384923,"line_start":587,"line_end":587,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":384925,"byte_end":384952,"line_start":588,"line_end":588,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":384954,"byte_end":384957,"line_start":589,"line_end":589,"column_start":2,"column_end":5}},{"value":"/ let mut bv = bitvec![Local, u8; 0; 10];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":384959,"byte_end":385002,"line_start":590,"line_end":590,"column_start":2,"column_end":45}},{"value":"/ //  note: the second element is not required to be zero, only to have","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":385004,"byte_end":385077,"line_start":591,"line_end":591,"column_start":2,"column_end":75}},{"value":"/ //  bits `0` and `1` according to `Local` be `0`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":385079,"byte_end":385132,"line_start":592,"line_end":592,"column_start":2,"column_end":55}},{"value":"/ assert_eq!(bv.as_slice()[0], 0);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":385134,"byte_end":385170,"line_start":593,"line_end":593,"column_start":2,"column_end":38}},{"value":"/ bv.set_elements(0xA5);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":385172,"byte_end":385198,"line_start":594,"line_end":594,"column_start":2,"column_end":28}},{"value":"/ assert_eq!(bv.as_slice(), &[0xA5, 0xA5]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":385200,"byte_end":385245,"line_start":595,"line_end":595,"column_start":2,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":385247,"byte_end":385254,"line_start":596,"line_end":596,"column_start":2,"column_end":9}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":385256,"byte_end":385265,"line_start":597,"line_end":597,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":2599},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":386469,"byte_end":386480,"line_start":635,"line_end":635,"column_start":9,"column_end":20},"name":"add_reverse","qualname":"<BitVec<O, T>>::add_reverse","value":"fn add_reverse<I>(Self, I) -> Self where I: IntoIterator<Item = bool>","parent":null,"children":[],"decl_id":null,"docs":" Performs “reverse” addition (left to right instead of right to left).","sig":null,"attributes":[{"value":"/ Performs “reverse” addition (left to right instead of right to left).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":385382,"byte_end":385459,"line_start":602,"line_end":602,"column_start":2,"column_end":75}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":385461,"byte_end":385464,"line_start":603,"line_end":603,"column_start":2,"column_end":5}},{"value":"/ This addition traverses the addends from left to right, performing","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":385466,"byte_end":385536,"line_start":604,"line_end":604,"column_start":2,"column_end":72}},{"value":"/ the addition at each index and writing the sum into `self`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":385538,"byte_end":385601,"line_start":605,"line_end":605,"column_start":2,"column_end":65}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":385603,"byte_end":385606,"line_start":606,"line_end":606,"column_start":2,"column_end":5}},{"value":"/ If `addend` expires before `self` does, `addend` is zero-extended and","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":385608,"byte_end":385681,"line_start":607,"line_end":607,"column_start":2,"column_end":75}},{"value":"/ the carry propagates through the rest of `self`. If `self` expires","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":385683,"byte_end":385753,"line_start":608,"line_end":608,"column_start":2,"column_end":72}},{"value":"/ before `addend`, then `self` is zero-extended and the carry propagates","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":385755,"byte_end":385829,"line_start":609,"line_end":609,"column_start":2,"column_end":76}},{"value":"/ through the rest of `addend`, growing `self` until `addend` expires.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":385831,"byte_end":385903,"line_start":610,"line_end":610,"column_start":2,"column_end":74}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":385905,"byte_end":385908,"line_start":611,"line_end":611,"column_start":2,"column_end":5}},{"value":"/ An infinite `addend` will cause unbounded memory growth until the vector","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":385910,"byte_end":385986,"line_start":612,"line_end":612,"column_start":2,"column_end":78}},{"value":"/ overflows and panics.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":385988,"byte_end":386013,"line_start":613,"line_end":613,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":386015,"byte_end":386018,"line_start":614,"line_end":614,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":386020,"byte_end":386036,"line_start":615,"line_end":615,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":386038,"byte_end":386041,"line_start":616,"line_end":616,"column_start":2,"column_end":5}},{"value":"/ - `self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":386043,"byte_end":386055,"line_start":617,"line_end":617,"column_start":2,"column_end":14}},{"value":"/ - `addend: impl IntoIterator<Item=bool>`: A stream of bits to add into","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":386057,"byte_end":386131,"line_start":618,"line_end":618,"column_start":2,"column_end":76}},{"value":"/   `self`, from left to right.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":386133,"byte_end":386166,"line_start":619,"line_end":619,"column_start":2,"column_end":35}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":386168,"byte_end":386171,"line_start":620,"line_end":620,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":386173,"byte_end":386186,"line_start":621,"line_end":621,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":386188,"byte_end":386191,"line_start":622,"line_end":622,"column_start":2,"column_end":5}},{"value":"/ The sum vector of `self` and `addend`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":386193,"byte_end":386235,"line_start":623,"line_end":623,"column_start":2,"column_end":44}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":386237,"byte_end":386240,"line_start":624,"line_end":624,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":386242,"byte_end":386256,"line_start":625,"line_end":625,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":386258,"byte_end":386261,"line_start":626,"line_end":626,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":386263,"byte_end":386274,"line_start":627,"line_end":627,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":386276,"byte_end":386303,"line_start":628,"line_end":628,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":386305,"byte_end":386308,"line_start":629,"line_end":629,"column_start":2,"column_end":5}},{"value":"/ let a = bitvec![0, 1, 0, 1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":386310,"byte_end":386342,"line_start":630,"line_end":630,"column_start":2,"column_end":34}},{"value":"/ let b = bitvec![0, 0, 1, 1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":386344,"byte_end":386376,"line_start":631,"line_end":631,"column_start":2,"column_end":34}},{"value":"/ let c = a.add_reverse(b);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":386378,"byte_end":386407,"line_start":632,"line_end":632,"column_start":2,"column_end":31}},{"value":"/ assert_eq!(c, bitvec![0, 1, 1, 0, 1]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":386409,"byte_end":386451,"line_start":633,"line_end":633,"column_start":2,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":386453,"byte_end":386460,"line_start":634,"line_end":634,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":2601},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":387773,"byte_end":387791,"line_start":675,"line_end":675,"column_start":9,"column_end":27},"name":"add_assign_reverse","qualname":"<BitVec<O, T>>::add_assign_reverse","value":"fn add_assign_reverse<I, '_>(&'_ mut Self, I) where I: IntoIterator<Item =\nbool>","parent":null,"children":[],"decl_id":null,"docs":" Performs “reverse” addition (left to right instead of right to left).","sig":null,"attributes":[{"value":"/ Performs “reverse” addition (left to right instead of right to left).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":386596,"byte_end":386673,"line_start":641,"line_end":641,"column_start":2,"column_end":75}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":386675,"byte_end":386678,"line_start":642,"line_end":642,"column_start":2,"column_end":5}},{"value":"/ This addition traverses the addends from left to right, performing","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":386680,"byte_end":386750,"line_start":643,"line_end":643,"column_start":2,"column_end":72}},{"value":"/ the addition at each index and writing the sum into `self`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":386752,"byte_end":386815,"line_start":644,"line_end":644,"column_start":2,"column_end":65}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":386817,"byte_end":386820,"line_start":645,"line_end":645,"column_start":2,"column_end":5}},{"value":"/ If `addend` expires before `self` does, `addend` is zero-extended and","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":386822,"byte_end":386895,"line_start":646,"line_end":646,"column_start":2,"column_end":75}},{"value":"/ the carry propagates through the rest of `self`. If `self` expires","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":386897,"byte_end":386967,"line_start":647,"line_end":647,"column_start":2,"column_end":72}},{"value":"/ before `addend`, then `self` is zero-extended and the carry propagates","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":386969,"byte_end":387043,"line_start":648,"line_end":648,"column_start":2,"column_end":76}},{"value":"/ through the rest of `addend`, growing `self` until `addend` expires.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":387045,"byte_end":387117,"line_start":649,"line_end":649,"column_start":2,"column_end":74}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":387119,"byte_end":387122,"line_start":650,"line_end":650,"column_start":2,"column_end":5}},{"value":"/ An infinite `addend` will cause unbounded memory growth until the vector","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":387124,"byte_end":387200,"line_start":651,"line_end":651,"column_start":2,"column_end":78}},{"value":"/ overflows and panics.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":387202,"byte_end":387227,"line_start":652,"line_end":652,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":387229,"byte_end":387232,"line_start":653,"line_end":653,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":387234,"byte_end":387250,"line_start":654,"line_end":654,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":387252,"byte_end":387255,"line_start":655,"line_end":655,"column_start":2,"column_end":5}},{"value":"/ - `&mut self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":387257,"byte_end":387274,"line_start":656,"line_end":656,"column_start":2,"column_end":19}},{"value":"/ - `addend: impl IntoIterator<Item=bool>`: A stream of bits to add into","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":387276,"byte_end":387350,"line_start":657,"line_end":657,"column_start":2,"column_end":76}},{"value":"/   `self`, from left to right.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":387352,"byte_end":387385,"line_start":658,"line_end":658,"column_start":2,"column_end":35}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":387387,"byte_end":387390,"line_start":659,"line_end":659,"column_start":2,"column_end":5}},{"value":"/ # Effects","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":387392,"byte_end":387405,"line_start":660,"line_end":660,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":387407,"byte_end":387410,"line_start":661,"line_end":661,"column_start":2,"column_end":5}},{"value":"/ `self` may grow as a result of the final carry-out bit being `1` and","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":387412,"byte_end":387484,"line_start":662,"line_end":662,"column_start":2,"column_end":74}},{"value":"/ pushed onto the right end.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":387486,"byte_end":387516,"line_start":663,"line_end":663,"column_start":2,"column_end":32}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":387518,"byte_end":387521,"line_start":664,"line_end":664,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":387523,"byte_end":387537,"line_start":665,"line_end":665,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":387539,"byte_end":387542,"line_start":666,"line_end":666,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":387544,"byte_end":387555,"line_start":667,"line_end":667,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":387557,"byte_end":387584,"line_start":668,"line_end":668,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":387586,"byte_end":387589,"line_start":669,"line_end":669,"column_start":2,"column_end":5}},{"value":"/ let mut a = bitvec![0, 1, 0, 1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":387591,"byte_end":387627,"line_start":670,"line_end":670,"column_start":2,"column_end":38}},{"value":"/ let     b = bitvec![0, 0, 1, 1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":387629,"byte_end":387665,"line_start":671,"line_end":671,"column_start":2,"column_end":38}},{"value":"/ a.add_assign_reverse(b.iter().copied());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":387667,"byte_end":387711,"line_start":672,"line_end":672,"column_start":2,"column_end":46}},{"value":"/ assert_eq!(a, bitvec![0, 1, 1, 0, 1]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":387713,"byte_end":387755,"line_start":673,"line_end":673,"column_start":2,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":387757,"byte_end":387764,"line_start":674,"line_end":674,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":2603},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":388825,"byte_end":388837,"line_start":709,"line_end":709,"column_start":9,"column_end":21},"name":"change_order","qualname":"<BitVec<O, T>>::change_order","value":"fn change_order<P>(Self) -> BitVec<P, T> where P: BitOrder","parent":null,"children":[],"decl_id":null,"docs":" Changes the order type on the vector handle, without changing its\n contents.","sig":null,"attributes":[{"value":"/ Changes the order type on the vector handle, without changing its","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":388442,"byte_end":388511,"line_start":695,"line_end":695,"column_start":2,"column_end":71}},{"value":"/ contents.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":388513,"byte_end":388526,"line_start":696,"line_end":696,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":388528,"byte_end":388531,"line_start":697,"line_end":697,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":388533,"byte_end":388549,"line_start":698,"line_end":698,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":388551,"byte_end":388554,"line_start":699,"line_end":699,"column_start":2,"column_end":5}},{"value":"/ - `self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":388556,"byte_end":388568,"line_start":700,"line_end":700,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":388570,"byte_end":388573,"line_start":701,"line_end":701,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":388575,"byte_end":388588,"line_start":702,"line_end":702,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":388590,"byte_end":388593,"line_start":703,"line_end":703,"column_start":2,"column_end":5}},{"value":"/ An equivalent vector handle with a new order type. The contents of the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":388595,"byte_end":388669,"line_start":704,"line_end":704,"column_start":2,"column_end":76}},{"value":"/ backing storage are unchanged.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":388671,"byte_end":388705,"line_start":705,"line_end":705,"column_start":2,"column_end":36}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":388707,"byte_end":388710,"line_start":706,"line_end":706,"column_start":2,"column_end":5}},{"value":"/ To reorder the bits in memory, drain this vector into a new handle with","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":388712,"byte_end":388787,"line_start":707,"line_end":707,"column_start":2,"column_end":77}},{"value":"/ the desired order type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":388789,"byte_end":388816,"line_start":708,"line_end":708,"column_start":2,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":2605},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":389187,"byte_end":389206,"line_start":725,"line_end":725,"column_start":9,"column_end":28},"name":"into_boxed_bitslice","qualname":"<BitVec<O, T>>::into_boxed_bitslice","value":"fn into_boxed_bitslice(Self) -> BitBox<O, T>","parent":null,"children":[],"decl_id":null,"docs":" Degrades a `BitVec` to a `BitBox`, freezing its size.","sig":null,"attributes":[{"value":"/ Degrades a `BitVec` to a `BitBox`, freezing its size.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":389004,"byte_end":389061,"line_start":716,"line_end":716,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":389063,"byte_end":389066,"line_start":717,"line_end":717,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":389068,"byte_end":389084,"line_start":718,"line_end":718,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":389086,"byte_end":389089,"line_start":719,"line_end":719,"column_start":2,"column_end":5}},{"value":"/ - `self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":389091,"byte_end":389103,"line_start":720,"line_end":720,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":389105,"byte_end":389108,"line_start":721,"line_end":721,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":389110,"byte_end":389123,"line_start":722,"line_end":722,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":389125,"byte_end":389128,"line_start":723,"line_end":723,"column_start":2,"column_end":5}},{"value":"/ Itself, with its size frozen and ungrowable.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":389130,"byte_end":389178,"line_start":724,"line_end":724,"column_start":2,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2606},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":389654,"byte_end":389662,"line_start":746,"line_end":746,"column_start":9,"column_end":17},"name":"into_vec","qualname":"<BitVec<O, T>>::into_vec","value":"fn into_vec(Self) -> Vec<T>","parent":null,"children":[],"decl_id":null,"docs":" Degrades a `BitVec` to a standard `Vec`.","sig":null,"attributes":[{"value":"/ Degrades a `BitVec` to a standard `Vec`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":389487,"byte_end":389531,"line_start":737,"line_end":737,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":389533,"byte_end":389536,"line_start":738,"line_end":738,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":389538,"byte_end":389554,"line_start":739,"line_end":739,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":389556,"byte_end":389559,"line_start":740,"line_end":740,"column_start":2,"column_end":5}},{"value":"/ - `self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":389561,"byte_end":389573,"line_start":741,"line_end":741,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":389575,"byte_end":389578,"line_start":742,"line_end":742,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":389580,"byte_end":389593,"line_start":743,"line_end":743,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":389595,"byte_end":389598,"line_start":744,"line_end":744,"column_start":2,"column_end":5}},{"value":"/ The plain vector underlying the `BitVec`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":389600,"byte_end":389645,"line_start":745,"line_end":745,"column_start":2,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":2607},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":390882,"byte_end":390893,"line_start":784,"line_end":784,"column_start":9,"column_end":20},"name":"force_align","qualname":"<BitVec<O, T>>::force_align","value":"fn force_align<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Ensures that the live region of the underlying memory begins at the `0`\n bit position.","sig":null,"attributes":[{"value":"/ Ensures that the live region of the underlying memory begins at the `0`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":389853,"byte_end":389928,"line_start":755,"line_end":755,"column_start":2,"column_end":77}},{"value":"/ bit position.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":389930,"byte_end":389947,"line_start":756,"line_end":756,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":389949,"byte_end":389952,"line_start":757,"line_end":757,"column_start":2,"column_end":5}},{"value":"/ # Notes","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":389954,"byte_end":389965,"line_start":758,"line_end":758,"column_start":2,"column_end":13}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":389967,"byte_end":389970,"line_start":759,"line_end":759,"column_start":2,"column_end":5}},{"value":"/ This method is currently implemented as a linear traversal that moves","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":389972,"byte_end":390045,"line_start":760,"line_end":760,"column_start":2,"column_end":75}},{"value":"/ each bit individually from its original index to its final position.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":390047,"byte_end":390119,"line_start":761,"line_end":761,"column_start":2,"column_end":74}},{"value":"/ This is `O(n)` in the bit length of the vector.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":390121,"byte_end":390172,"line_start":762,"line_end":762,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":390174,"byte_end":390177,"line_start":763,"line_end":763,"column_start":2,"column_end":5}},{"value":"/ It is possible to create an optimized rotation behavior that only moves","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":390179,"byte_end":390254,"line_start":764,"line_end":764,"column_start":2,"column_end":77}},{"value":"/ a few bits individually, then moves elements in a gallop. The speed","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":390256,"byte_end":390327,"line_start":765,"line_end":765,"column_start":2,"column_end":73}},{"value":"/ difference is proportional to the width of the element type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":390329,"byte_end":390393,"line_start":766,"line_end":766,"column_start":2,"column_end":66}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":390395,"byte_end":390398,"line_start":767,"line_end":767,"column_start":2,"column_end":5}},{"value":"/ When this behavior is implemented, `force_align` will be rewritten to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":390400,"byte_end":390473,"line_start":768,"line_end":768,"column_start":2,"column_end":75}},{"value":"/ take advantage of it. For now, it remains slow.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":390475,"byte_end":390526,"line_start":769,"line_end":769,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":390528,"byte_end":390531,"line_start":770,"line_end":770,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":390533,"byte_end":390547,"line_start":771,"line_end":771,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":390549,"byte_end":390552,"line_start":772,"line_end":772,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":390554,"byte_end":390565,"line_start":773,"line_end":773,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":390567,"byte_end":390594,"line_start":774,"line_end":774,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":390596,"byte_end":390599,"line_start":775,"line_end":775,"column_start":2,"column_end":5}},{"value":"/ let src = &bits![Msb0, u8; 1, 0, 1, 1, 0, 1, 1, 0][1 .. 7];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":390601,"byte_end":390664,"line_start":776,"line_end":776,"column_start":2,"column_end":65}},{"value":"/ assert_eq!(src.len(), 6);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":390666,"byte_end":390695,"line_start":777,"line_end":777,"column_start":2,"column_end":31}},{"value":"/ let mut bv = src.to_owned();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":390697,"byte_end":390729,"line_start":778,"line_end":778,"column_start":2,"column_end":34}},{"value":"/ assert_eq!(bv.len(), 6);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":390731,"byte_end":390759,"line_start":779,"line_end":779,"column_start":2,"column_end":30}},{"value":"/ assert_eq!(bv.as_slice()[0], 0xB6);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":390761,"byte_end":390800,"line_start":780,"line_end":780,"column_start":2,"column_end":41}},{"value":"/ bv.force_align();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":390802,"byte_end":390823,"line_start":781,"line_end":781,"column_start":2,"column_end":23}},{"value":"/ assert_eq!(bv.as_slice()[0], 0x6E);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":390825,"byte_end":390864,"line_start":782,"line_end":782,"column_start":2,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":390866,"byte_end":390873,"line_start":783,"line_end":783,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":2646},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":393221,"byte_end":393224,"line_start":34,"line_end":34,"column_start":21,"column_end":24},"name":"new","qualname":"<BitVec<O, T>>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `BitVec<C, T>`.","sig":null,"attributes":[{"value":"/ Constructs a new, empty `BitVec<C, T>`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":392959,"byte_end":393002,"line_start":25,"line_end":25,"column_start":2,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":393004,"byte_end":393007,"line_start":26,"line_end":26,"column_start":2,"column_end":5}},{"value":"/ The vector will not allocate until elements are pushed onto it.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":393009,"byte_end":393076,"line_start":27,"line_end":27,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":393078,"byte_end":393081,"line_start":28,"line_end":28,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":393083,"byte_end":393094,"line_start":29,"line_end":29,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":393096,"byte_end":393125,"line_start":30,"line_end":30,"column_start":2,"column_end":31}},{"value":"/ let mut bv: BitVec<Local, usize> = BitVec::new();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":393127,"byte_end":393180,"line_start":31,"line_end":31,"column_start":2,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":393182,"byte_end":393189,"line_start":32,"line_end":32,"column_start":2,"column_end":9}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":393191,"byte_end":393200,"line_start":33,"line_end":33,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":2647},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":393811,"byte_end":393824,"line_start":49,"line_end":49,"column_start":9,"column_end":22},"name":"with_capacity","qualname":"<BitVec<O, T>>::with_capacity","value":"fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `BitVec<C, T>` with the specified capacity.","sig":null,"attributes":[{"value":"/ Constructs a new, empty `BitVec<C, T>` with the specified capacity.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":393267,"byte_end":393338,"line_start":38,"line_end":38,"column_start":2,"column_end":73}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":393340,"byte_end":393343,"line_start":39,"line_end":39,"column_start":2,"column_end":5}},{"value":"/ The vector will be able to hold at least `capacity` bits without","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":393345,"byte_end":393413,"line_start":40,"line_end":40,"column_start":2,"column_end":70}},{"value":"/ reallocating. If `capacity` is 0, the vector will not allocate.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":393415,"byte_end":393482,"line_start":41,"line_end":41,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":393484,"byte_end":393487,"line_start":42,"line_end":42,"column_start":2,"column_end":5}},{"value":"/ It is important to note that although the returned vector has the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":393489,"byte_end":393558,"line_start":43,"line_end":43,"column_start":2,"column_end":71}},{"value":"/ *capacity* specified, the vector will have a zero *length*. For an","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":393560,"byte_end":393630,"line_start":44,"line_end":44,"column_start":2,"column_end":72}},{"value":"/ explanation of the difference between length and capacity, see","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":393632,"byte_end":393698,"line_start":45,"line_end":45,"column_start":2,"column_end":68}},{"value":"/ [*Capacity and reallocation*].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":393700,"byte_end":393734,"line_start":46,"line_end":46,"column_start":2,"column_end":36}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":393736,"byte_end":393739,"line_start":47,"line_end":47,"column_start":2,"column_end":5}},{"value":"/ [*Capacity and reallocation*]: #capacity-and-reallocation","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":393741,"byte_end":393802,"line_start":48,"line_end":48,"column_start":2,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2648},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":394542,"byte_end":394550,"line_start":74,"line_end":74,"column_start":9,"column_end":17},"name":"capacity","qualname":"<BitVec<O, T>>::capacity","value":"fn capacity<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bits the vector can hold without reallocating.","sig":null,"attributes":[{"value":"/ Returns the number of bits the vector can hold without reallocating.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":394280,"byte_end":394352,"line_start":65,"line_end":65,"column_start":2,"column_end":74}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":394354,"byte_end":394357,"line_start":66,"line_end":66,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":394359,"byte_end":394373,"line_start":67,"line_end":67,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":394375,"byte_end":394378,"line_start":68,"line_end":68,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":394380,"byte_end":394391,"line_start":69,"line_end":69,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":394393,"byte_end":394422,"line_start":70,"line_end":70,"column_start":2,"column_end":31}},{"value":"/ let bv: BitVec<Local, usize> = BitVec::with_capacity(100);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":394424,"byte_end":394486,"line_start":71,"line_end":71,"column_start":2,"column_end":64}},{"value":"/ assert!(bv.capacity() >= 100);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":394488,"byte_end":394522,"line_start":72,"line_end":72,"column_start":2,"column_end":36}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":394524,"byte_end":394533,"line_start":73,"line_end":73,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":2649},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":395270,"byte_end":395277,"line_start":98,"line_end":98,"column_start":9,"column_end":16},"name":"reserve","qualname":"<BitVec<O, T>>::reserve","value":"fn reserve<'_>(&'_ mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves capacity for at least `additional` more bits to be inserted in\n the given `BitVec<C, T>`. The collection may reserve more space to avoid\n frequent reallocations. After calling `reserve`, the capacity will be\n greater than or equal to `self.len() + additional`. Does nothing if the\n capacity is already sufficient.","sig":null,"attributes":[{"value":"/ Reserves capacity for at least `additional` more bits to be inserted in","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":394663,"byte_end":394738,"line_start":80,"line_end":80,"column_start":2,"column_end":77}},{"value":"/ the given `BitVec<C, T>`. The collection may reserve more space to avoid","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":394740,"byte_end":394816,"line_start":81,"line_end":81,"column_start":2,"column_end":78}},{"value":"/ frequent reallocations. After calling `reserve`, the capacity will be","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":394818,"byte_end":394891,"line_start":82,"line_end":82,"column_start":2,"column_end":75}},{"value":"/ greater than or equal to `self.len() + additional`. Does nothing if the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":394893,"byte_end":394968,"line_start":83,"line_end":83,"column_start":2,"column_end":77}},{"value":"/ capacity is already sufficient.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":394970,"byte_end":395005,"line_start":84,"line_end":84,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":395007,"byte_end":395010,"line_start":85,"line_end":85,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":395012,"byte_end":395024,"line_start":86,"line_end":86,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":395026,"byte_end":395029,"line_start":87,"line_end":87,"column_start":2,"column_end":5}},{"value":"/ Panics if the new capacity overflows `BitPtr::<T>::MAX_BITS`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":395031,"byte_end":395096,"line_start":88,"line_end":88,"column_start":2,"column_end":67}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":395098,"byte_end":395101,"line_start":89,"line_end":89,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":395103,"byte_end":395117,"line_start":90,"line_end":90,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":395119,"byte_end":395122,"line_start":91,"line_end":91,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":395124,"byte_end":395135,"line_start":92,"line_end":92,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":395137,"byte_end":395166,"line_start":93,"line_end":93,"column_start":2,"column_end":31}},{"value":"/ let mut bv = bitvec![1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":395168,"byte_end":395196,"line_start":94,"line_end":94,"column_start":2,"column_end":30}},{"value":"/ bv.reserve(10);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":395198,"byte_end":395217,"line_start":95,"line_end":95,"column_start":2,"column_end":21}},{"value":"/ assert!(bv.capacity() >= 11);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":395219,"byte_end":395252,"line_start":96,"line_end":96,"column_start":2,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":395254,"byte_end":395261,"line_start":97,"line_end":97,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":2651},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":396425,"byte_end":396438,"line_start":133,"line_end":133,"column_start":9,"column_end":22},"name":"reserve_exact","qualname":"<BitVec<O, T>>::reserve_exact","value":"fn reserve_exact<'_>(&'_ mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserves the minimum capacity for exactly `additional` more bits to be\n inserted in the given `BitVec<C, T>`. After calling `reserve_exact`,\n capacity will be greater than or equal to `self.len() + additional`.\n Does nothing if the capacity is already sufficient.","sig":null,"attributes":[{"value":"/ Reserves the minimum capacity for exactly `additional` more bits to be","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":395658,"byte_end":395732,"line_start":112,"line_end":112,"column_start":2,"column_end":76}},{"value":"/ inserted in the given `BitVec<C, T>`. After calling `reserve_exact`,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":395734,"byte_end":395806,"line_start":113,"line_end":113,"column_start":2,"column_end":74}},{"value":"/ capacity will be greater than or equal to `self.len() + additional`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":395808,"byte_end":395880,"line_start":114,"line_end":114,"column_start":2,"column_end":74}},{"value":"/ Does nothing if the capacity is already sufficient.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":395882,"byte_end":395937,"line_start":115,"line_end":115,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":395939,"byte_end":395942,"line_start":116,"line_end":116,"column_start":2,"column_end":5}},{"value":"/ Note that the allocator may give the collection more space than it","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":395944,"byte_end":396014,"line_start":117,"line_end":117,"column_start":2,"column_end":72}},{"value":"/ requests. Therefore, capacity can not be relied upon to be precisely","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":396016,"byte_end":396088,"line_start":118,"line_end":118,"column_start":2,"column_end":74}},{"value":"/ minimal. Prefer `reserve` if future insertions are expected.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":396090,"byte_end":396154,"line_start":119,"line_end":119,"column_start":2,"column_end":66}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":396156,"byte_end":396159,"line_start":120,"line_end":120,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":396161,"byte_end":396173,"line_start":121,"line_end":121,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":396175,"byte_end":396178,"line_start":122,"line_end":122,"column_start":2,"column_end":5}},{"value":"/ Panics if the new capacity overflows `BitPtr::<T>::MAX_BITS`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":396180,"byte_end":396245,"line_start":123,"line_end":123,"column_start":2,"column_end":67}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":396247,"byte_end":396250,"line_start":124,"line_end":124,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":396252,"byte_end":396266,"line_start":125,"line_end":125,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":396268,"byte_end":396271,"line_start":126,"line_end":126,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":396273,"byte_end":396284,"line_start":127,"line_end":127,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":396286,"byte_end":396315,"line_start":128,"line_end":128,"column_start":2,"column_end":31}},{"value":"/ let mut bv = bitvec![1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":396317,"byte_end":396345,"line_start":129,"line_end":129,"column_start":2,"column_end":30}},{"value":"/ bv.reserve_exact(10);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":396347,"byte_end":396372,"line_start":130,"line_end":130,"column_start":2,"column_end":27}},{"value":"/ assert!(bv.capacity() >= 11);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":396374,"byte_end":396407,"line_start":131,"line_end":131,"column_start":2,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":396409,"byte_end":396416,"line_start":132,"line_end":132,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":2653},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":397320,"byte_end":397333,"line_start":162,"line_end":162,"column_start":9,"column_end":22},"name":"shrink_to_fit","qualname":"<BitVec<O, T>>::shrink_to_fit","value":"fn shrink_to_fit<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shrinks the capacity of the vector as much as possible.","sig":null,"attributes":[{"value":"/ Shrinks the capacity of the vector as much as possible.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":396789,"byte_end":396848,"line_start":146,"line_end":146,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":396850,"byte_end":396853,"line_start":147,"line_end":147,"column_start":2,"column_end":5}},{"value":"/ It will drop down as close as possible to the length but the allocator","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":396855,"byte_end":396929,"line_start":148,"line_end":148,"column_start":2,"column_end":76}},{"value":"/ may still inform the vector that there is space for a few more elements.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":396931,"byte_end":397007,"line_start":149,"line_end":149,"column_start":2,"column_end":78}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":397009,"byte_end":397012,"line_start":150,"line_end":150,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":397014,"byte_end":397028,"line_start":151,"line_end":151,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":397030,"byte_end":397033,"line_start":152,"line_end":152,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":397035,"byte_end":397046,"line_start":153,"line_end":153,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":397048,"byte_end":397077,"line_start":154,"line_end":154,"column_start":2,"column_end":31}},{"value":"/ let mut bv: BitVec<Local, usize> = BitVec::with_capacity(10);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":397079,"byte_end":397144,"line_start":155,"line_end":155,"column_start":2,"column_end":67}},{"value":"/ bv.extend([true, false, true].iter().copied());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":397146,"byte_end":397197,"line_start":156,"line_end":156,"column_start":2,"column_end":53}},{"value":"/ assert!(bv.capacity() >= 10);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":397199,"byte_end":397232,"line_start":157,"line_end":157,"column_start":2,"column_end":35}},{"value":"/ bv.shrink_to_fit();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":397234,"byte_end":397257,"line_start":158,"line_end":158,"column_start":2,"column_end":25}},{"value":"/ assert!(bv.capacity() >= 3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":397259,"byte_end":397291,"line_start":159,"line_end":159,"column_start":2,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":397293,"byte_end":397300,"line_start":160,"line_end":160,"column_start":2,"column_end":9}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":397302,"byte_end":397311,"line_start":161,"line_end":161,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":2654},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":398424,"byte_end":398440,"line_start":200,"line_end":200,"column_start":9,"column_end":25},"name":"into_boxed_slice","qualname":"<BitVec<O, T>>::into_boxed_slice","value":"fn into_boxed_slice(Self) -> Box<[T]>","parent":null,"children":[],"decl_id":null,"docs":" Converts the bit-vector into [`Box<[T]>`].","sig":null,"attributes":[{"value":"/ Converts the bit-vector into [`Box<[T]>`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":397389,"byte_end":397435,"line_start":166,"line_end":166,"column_start":2,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":397437,"byte_end":397440,"line_start":167,"line_end":167,"column_start":2,"column_end":5}},{"value":"/ Note that this will drop any excess capacity.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":397442,"byte_end":397491,"line_start":168,"line_end":168,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":397493,"byte_end":397496,"line_start":169,"line_end":169,"column_start":2,"column_end":5}},{"value":"/ For the vec-to-box equivalent that produces a [`BitBox<C, T>`], see","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":397498,"byte_end":397569,"line_start":170,"line_end":170,"column_start":2,"column_end":73}},{"value":"/ [`into_boxed_bitslice`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":397571,"byte_end":397599,"line_start":171,"line_end":171,"column_start":2,"column_end":30}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":397601,"byte_end":397604,"line_start":172,"line_end":172,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":397606,"byte_end":397620,"line_start":173,"line_end":173,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":397622,"byte_end":397625,"line_start":174,"line_end":174,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":397627,"byte_end":397638,"line_start":175,"line_end":175,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":397640,"byte_end":397669,"line_start":176,"line_end":176,"column_start":2,"column_end":31}},{"value":"/ let bv = bitvec![1, 0, 1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":397671,"byte_end":397701,"line_start":177,"line_end":177,"column_start":2,"column_end":32}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":397703,"byte_end":397706,"line_start":178,"line_end":178,"column_start":2,"column_end":5}},{"value":"/ let slice = bv.into_boxed_slice();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":397708,"byte_end":397746,"line_start":179,"line_end":179,"column_start":2,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":397748,"byte_end":397755,"line_start":180,"line_end":180,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":397757,"byte_end":397760,"line_start":181,"line_end":181,"column_start":2,"column_end":5}},{"value":"/ Any excess capacity is removed:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":397762,"byte_end":397797,"line_start":182,"line_end":182,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":397799,"byte_end":397802,"line_start":183,"line_end":183,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":397804,"byte_end":397815,"line_start":184,"line_end":184,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":397817,"byte_end":397846,"line_start":185,"line_end":185,"column_start":2,"column_end":31}},{"value":"/ let mut bv = BitVec::<Local, usize>::with_capacity(100);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":397848,"byte_end":397908,"line_start":186,"line_end":186,"column_start":2,"column_end":62}},{"value":"/ bv.extend([true, false, true].iter().copied());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":397910,"byte_end":397961,"line_start":187,"line_end":187,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":397963,"byte_end":397966,"line_start":188,"line_end":188,"column_start":2,"column_end":5}},{"value":"/ assert!(bv.capacity() >= 100);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":397968,"byte_end":398002,"line_start":189,"line_end":189,"column_start":2,"column_end":36}},{"value":"/ let slice = bv.into_boxed_slice();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":398004,"byte_end":398042,"line_start":190,"line_end":190,"column_start":2,"column_end":40}},{"value":"/ let boxed_bitslice = BitBox::<Local, usize>::from_boxed_slice(slice);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":398044,"byte_end":398117,"line_start":191,"line_end":191,"column_start":2,"column_end":75}},{"value":"/ let bv = BitVec::from_boxed_bitslice(boxed_bitslice);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":398119,"byte_end":398176,"line_start":192,"line_end":192,"column_start":2,"column_end":59}},{"value":"/ assert!(bv.capacity() >= 3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":398178,"byte_end":398210,"line_start":193,"line_end":193,"column_start":2,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":398212,"byte_end":398219,"line_start":194,"line_end":194,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":398221,"byte_end":398224,"line_start":195,"line_end":195,"column_start":2,"column_end":5}},{"value":"/ [`BitBox<C, T>`]: ../boxed/struct.BitBox.html","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":398226,"byte_end":398275,"line_start":196,"line_end":196,"column_start":2,"column_end":51}},{"value":"/ [`Box<[T]>`]: https://doc.rust-lang.org/std/boxed/struct.Box.html","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":398277,"byte_end":398346,"line_start":197,"line_end":197,"column_start":2,"column_end":71}},{"value":"/ [`into_boxed_bitslice`]: #method.into_boxed_bitslice","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":398348,"byte_end":398404,"line_start":198,"line_end":198,"column_start":2,"column_end":58}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":398406,"byte_end":398415,"line_start":199,"line_end":199,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":2655},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":399594,"byte_end":399602,"line_start":245,"line_end":245,"column_start":9,"column_end":17},"name":"truncate","qualname":"<BitVec<O, T>>::truncate","value":"fn truncate<'_>(&'_ mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shortens the vector, keeping the first `len` bits and dropping the rest.","sig":null,"attributes":[{"value":"/ Shortens the vector, keeping the first `len` bits and dropping the rest.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":398503,"byte_end":398579,"line_start":204,"line_end":204,"column_start":2,"column_end":78}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":398581,"byte_end":398584,"line_start":205,"line_end":205,"column_start":2,"column_end":5}},{"value":"/ If `len` is greater than the vector’s current length, this has no","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":398586,"byte_end":398657,"line_start":206,"line_end":206,"column_start":2,"column_end":71}},{"value":"/ effect.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":398659,"byte_end":398670,"line_start":207,"line_end":207,"column_start":2,"column_end":13}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":398672,"byte_end":398675,"line_start":208,"line_end":208,"column_start":2,"column_end":5}},{"value":"/ The [`drain`] method can emulate `truncate`, but causes the excess bits","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":398677,"byte_end":398752,"line_start":209,"line_end":209,"column_start":2,"column_end":77}},{"value":"/ to be returned instead of dropped.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":398754,"byte_end":398792,"line_start":210,"line_end":210,"column_start":2,"column_end":40}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":398794,"byte_end":398797,"line_start":211,"line_end":211,"column_start":2,"column_end":5}},{"value":"/ Note that this method has no effect on the allocated capacity of the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":398799,"byte_end":398871,"line_start":212,"line_end":212,"column_start":2,"column_end":74}},{"value":"/ vector.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":398873,"byte_end":398884,"line_start":213,"line_end":213,"column_start":2,"column_end":13}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":398886,"byte_end":398889,"line_start":214,"line_end":214,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":398891,"byte_end":398905,"line_start":215,"line_end":215,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":398907,"byte_end":398910,"line_start":216,"line_end":216,"column_start":2,"column_end":5}},{"value":"/ Truncating a five-bit vector to two bits:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":398912,"byte_end":398957,"line_start":217,"line_end":217,"column_start":2,"column_end":47}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":398959,"byte_end":398962,"line_start":218,"line_end":218,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":398964,"byte_end":398975,"line_start":219,"line_end":219,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":398977,"byte_end":399006,"line_start":220,"line_end":220,"column_start":2,"column_end":31}},{"value":"/ let mut bv = bitvec![1, 0, 1, 0, 1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":399008,"byte_end":399048,"line_start":221,"line_end":221,"column_start":2,"column_end":42}},{"value":"/ bv.truncate(2);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":399050,"byte_end":399069,"line_start":222,"line_end":222,"column_start":2,"column_end":21}},{"value":"/ assert_eq!(bv, bitvec![1, 0]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":399071,"byte_end":399105,"line_start":223,"line_end":223,"column_start":2,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":399107,"byte_end":399114,"line_start":224,"line_end":224,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":399116,"byte_end":399119,"line_start":225,"line_end":225,"column_start":2,"column_end":5}},{"value":"/ No truncation occurs when `len` is greater than the vector’s current","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":399121,"byte_end":399195,"line_start":226,"line_end":226,"column_start":2,"column_end":74}},{"value":"/ length:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":399197,"byte_end":399208,"line_start":227,"line_end":227,"column_start":2,"column_end":13}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":399210,"byte_end":399213,"line_start":228,"line_end":228,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":399215,"byte_end":399226,"line_start":229,"line_end":229,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":399228,"byte_end":399257,"line_start":230,"line_end":230,"column_start":2,"column_end":31}},{"value":"/ let mut bv = bitvec![1; 5];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":399259,"byte_end":399290,"line_start":231,"line_end":231,"column_start":2,"column_end":33}},{"value":"/ bv.truncate(10);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":399292,"byte_end":399312,"line_start":232,"line_end":232,"column_start":2,"column_end":22}},{"value":"/ assert_eq!(bv, bitvec![1; 5]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":399314,"byte_end":399348,"line_start":233,"line_end":233,"column_start":2,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":399350,"byte_end":399357,"line_start":234,"line_end":234,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":399359,"byte_end":399362,"line_start":235,"line_end":235,"column_start":2,"column_end":5}},{"value":"/ Truncating to zero is equivalent to calling the [`clear`] method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":399364,"byte_end":399433,"line_start":236,"line_end":236,"column_start":2,"column_end":71}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":399435,"byte_end":399438,"line_start":237,"line_end":237,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":399440,"byte_end":399451,"line_start":238,"line_end":238,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":399453,"byte_end":399482,"line_start":239,"line_end":239,"column_start":2,"column_end":31}},{"value":"/ let mut bv = bitvec![0; 5];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":399484,"byte_end":399515,"line_start":240,"line_end":240,"column_start":2,"column_end":33}},{"value":"/ bv.truncate(0);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":399517,"byte_end":399536,"line_start":241,"line_end":241,"column_start":2,"column_end":21}},{"value":"/ assert!(bv.is_empty());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":399538,"byte_end":399565,"line_start":242,"line_end":242,"column_start":2,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":399567,"byte_end":399574,"line_start":243,"line_end":243,"column_start":2,"column_end":9}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":399576,"byte_end":399585,"line_start":244,"line_end":244,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":2656},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":400261,"byte_end":400269,"line_start":269,"line_end":269,"column_start":9,"column_end":17},"name":"as_slice","qualname":"<BitVec<O, T>>::as_slice","value":"fn as_slice<'_>(&'_ Self) -> &'_ [T]","parent":null,"children":[],"decl_id":null,"docs":" Extracts an element slice containing the entire vector.","sig":null,"attributes":[{"value":"/ Extracts an element slice containing the entire vector.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":399693,"byte_end":399752,"line_start":251,"line_end":251,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":399754,"byte_end":399757,"line_start":252,"line_end":252,"column_start":2,"column_end":5}},{"value":"/ Unlike [`BitSlice::as_slice`], this will produce partial edge elements,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":399759,"byte_end":399834,"line_start":253,"line_end":253,"column_start":2,"column_end":77}},{"value":"/ as they are known to not be aliased by any other slice handles.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":399836,"byte_end":399903,"line_start":254,"line_end":254,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":399905,"byte_end":399908,"line_start":255,"line_end":255,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":399910,"byte_end":399924,"line_start":256,"line_end":256,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":399926,"byte_end":399929,"line_start":257,"line_end":257,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":399931,"byte_end":399942,"line_start":258,"line_end":258,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":399944,"byte_end":399973,"line_start":259,"line_end":259,"column_start":2,"column_end":31}},{"value":"/ # #[cfg(feature = \"std\")] {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":399975,"byte_end":400006,"line_start":260,"line_end":260,"column_start":2,"column_end":33}},{"value":"/ use std::io::{self, Write};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":400008,"byte_end":400039,"line_start":261,"line_end":261,"column_start":2,"column_end":33}},{"value":"/ let buffer = bitvec![Local, u8; 1, 0, 1, 0, 1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":400041,"byte_end":400092,"line_start":262,"line_end":262,"column_start":2,"column_end":53}},{"value":"/ io::sink().write(buffer.as_slice()).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":400094,"byte_end":400143,"line_start":263,"line_end":263,"column_start":2,"column_end":51}},{"value":"/ # }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":400145,"byte_end":400152,"line_start":264,"line_end":264,"column_start":2,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":400154,"byte_end":400161,"line_start":265,"line_end":265,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":400163,"byte_end":400166,"line_start":266,"line_end":266,"column_start":2,"column_end":5}},{"value":"/ [`BitSlice::as_slice`]: ../slice/struct.BitSlice.html#method.as_slice","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":400168,"byte_end":400241,"line_start":267,"line_end":267,"column_start":2,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":400243,"byte_end":400252,"line_start":268,"line_end":268,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":2657},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":400906,"byte_end":400918,"line_start":292,"line_end":292,"column_start":9,"column_end":21},"name":"as_mut_slice","qualname":"<BitVec<O, T>>::as_mut_slice","value":"fn as_mut_slice<'_>(&'_ mut Self) -> &'_ mut [T]","parent":null,"children":[],"decl_id":null,"docs":" Extracts a mutable slice of the entire vector.","sig":null,"attributes":[{"value":"/ Extracts a mutable slice of the entire vector.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":400318,"byte_end":400368,"line_start":273,"line_end":273,"column_start":2,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":400370,"byte_end":400373,"line_start":274,"line_end":274,"column_start":2,"column_end":5}},{"value":"/ Unlike [`BitSlice::as_mut_slice`], this will produce partial edge","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":400375,"byte_end":400444,"line_start":275,"line_end":275,"column_start":2,"column_end":71}},{"value":"/ elements, as they are known to not be aliased by any other slice","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":400446,"byte_end":400514,"line_start":276,"line_end":276,"column_start":2,"column_end":70}},{"value":"/ handles.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":400516,"byte_end":400528,"line_start":277,"line_end":277,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":400530,"byte_end":400533,"line_start":278,"line_end":278,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":400535,"byte_end":400549,"line_start":279,"line_end":279,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":400551,"byte_end":400554,"line_start":280,"line_end":280,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":400556,"byte_end":400567,"line_start":281,"line_end":281,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":400569,"byte_end":400598,"line_start":282,"line_end":282,"column_start":2,"column_end":31}},{"value":"/ # #[cfg(feature = \"std\")] {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":400600,"byte_end":400631,"line_start":283,"line_end":283,"column_start":2,"column_end":33}},{"value":"/ use std::io::{self, Read};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":400633,"byte_end":400663,"line_start":284,"line_end":284,"column_start":2,"column_end":32}},{"value":"/ let mut buffer = bitvec![Local, u8; 0; 24];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":400665,"byte_end":400712,"line_start":285,"line_end":285,"column_start":2,"column_end":49}},{"value":"/ io::repeat(0xA5u8).read_exact(buffer.as_mut_slice()).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":400714,"byte_end":400780,"line_start":286,"line_end":286,"column_start":2,"column_end":68}},{"value":"/ # }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":400782,"byte_end":400789,"line_start":287,"line_end":287,"column_start":2,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":400791,"byte_end":400798,"line_start":288,"line_end":288,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":400800,"byte_end":400803,"line_start":289,"line_end":289,"column_start":2,"column_end":5}},{"value":"/ [`BitSlice::as_mut_slice`]: ../slice/struct.BitSlice.html#method.as_mut_slice","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":400805,"byte_end":400886,"line_start":290,"line_end":290,"column_start":2,"column_end":83}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":400888,"byte_end":400897,"line_start":291,"line_end":291,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":2658},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":402009,"byte_end":402016,"line_start":324,"line_end":324,"column_start":16,"column_end":23},"name":"set_len","qualname":"<BitVec<O, T>>::set_len","value":"unsafe fn set_len<'_>(&'_ mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Forces the length of the vector to `new_len`.","sig":null,"attributes":[{"value":"/ Forces the length of the vector to `new_len`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":400979,"byte_end":401028,"line_start":296,"line_end":296,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":401030,"byte_end":401033,"line_start":297,"line_end":297,"column_start":2,"column_end":5}},{"value":"/ This is a low-level operation that maintains none of the normal","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":401035,"byte_end":401102,"line_start":298,"line_end":298,"column_start":2,"column_end":69}},{"value":"/ invariants of the type. Normally changing the length of a vector is done","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":401104,"byte_end":401180,"line_start":299,"line_end":299,"column_start":2,"column_end":78}},{"value":"/ using one of the safe operations instead, such as [`truncate`],","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":401182,"byte_end":401249,"line_start":300,"line_end":300,"column_start":2,"column_end":69}},{"value":"/ [`resize`], [`extend`], or [`clear`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":401251,"byte_end":401292,"line_start":301,"line_end":301,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":401294,"byte_end":401297,"line_start":302,"line_end":302,"column_start":2,"column_end":5}},{"value":"/ # Safety","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":401299,"byte_end":401311,"line_start":303,"line_end":303,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":401313,"byte_end":401316,"line_start":304,"line_end":304,"column_start":2,"column_end":5}},{"value":"/ - `new_len` must be less than or equal to [`capacity()`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":401318,"byte_end":401379,"line_start":305,"line_end":305,"column_start":2,"column_end":63}},{"value":"/ - The underlying elements at `old_len ..new_len` must be initialized.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":401381,"byte_end":401454,"line_start":306,"line_end":306,"column_start":2,"column_end":75}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":401456,"byte_end":401459,"line_start":307,"line_end":307,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":401461,"byte_end":401475,"line_start":308,"line_end":308,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":401477,"byte_end":401480,"line_start":309,"line_end":309,"column_start":2,"column_end":5}},{"value":"/ This method can be useful for situations in which the vector is serving","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":401482,"byte_end":401557,"line_start":310,"line_end":310,"column_start":2,"column_end":77}},{"value":"/ as a buffer for other code, particularly over FFI.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":401559,"byte_end":401613,"line_start":311,"line_end":311,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":401615,"byte_end":401618,"line_start":312,"line_end":312,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":401620,"byte_end":401631,"line_start":313,"line_end":313,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":401633,"byte_end":401662,"line_start":314,"line_end":314,"column_start":2,"column_end":31}},{"value":"/ let mut bv = BitVec::<Local, usize>::with_capacity(17);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":401664,"byte_end":401723,"line_start":315,"line_end":315,"column_start":2,"column_end":61}},{"value":"/ assert!(bv.is_empty());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":401725,"byte_end":401752,"line_start":316,"line_end":316,"column_start":2,"column_end":29}},{"value":"/ unsafe { bv.set_len(23) };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":401754,"byte_end":401784,"line_start":317,"line_end":317,"column_start":2,"column_end":32}},{"value":"/ assert_eq!(bv.len(), 23);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":401786,"byte_end":401815,"line_start":318,"line_end":318,"column_start":2,"column_end":31}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":401817,"byte_end":401824,"line_start":319,"line_end":319,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":401826,"byte_end":401829,"line_start":320,"line_end":320,"column_start":2,"column_end":5}},{"value":"/ This example executes correctly, because the allocator can only reserve","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":401831,"byte_end":401906,"line_start":321,"line_end":321,"column_start":2,"column_end":77}},{"value":"/ even multiples of bytes, and so rounds up from the `with_capacity`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":401908,"byte_end":401978,"line_start":322,"line_end":322,"column_start":2,"column_end":72}},{"value":"/ argument.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":401980,"byte_end":401993,"line_start":323,"line_end":323,"column_start":2,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":2659},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":402899,"byte_end":402910,"line_start":363,"line_end":363,"column_start":9,"column_end":20},"name":"swap_remove","qualname":"<BitVec<O, T>>::swap_remove","value":"fn swap_remove<'_>(&'_ mut Self, usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Removes a bit from the vector and returns it.","sig":null,"attributes":[{"value":"/ Removes a bit from the vector and returns it.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":402372,"byte_end":402421,"line_start":341,"line_end":341,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":402423,"byte_end":402426,"line_start":342,"line_end":342,"column_start":2,"column_end":5}},{"value":"/ The removed bit is replaced by the last bit of the vector.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":402428,"byte_end":402490,"line_start":343,"line_end":343,"column_start":2,"column_end":64}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":402492,"byte_end":402495,"line_start":344,"line_end":344,"column_start":2,"column_end":5}},{"value":"/ This does not preserve ordering, but is O(1).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":402497,"byte_end":402546,"line_start":345,"line_end":345,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":402548,"byte_end":402551,"line_start":346,"line_end":346,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":402553,"byte_end":402565,"line_start":347,"line_end":347,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":402567,"byte_end":402570,"line_start":348,"line_end":348,"column_start":2,"column_end":5}},{"value":"/ Panics if `index` is out of bounds.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":402572,"byte_end":402611,"line_start":349,"line_end":349,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":402613,"byte_end":402616,"line_start":350,"line_end":350,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":402618,"byte_end":402632,"line_start":351,"line_end":351,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":402634,"byte_end":402637,"line_start":352,"line_end":352,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":402639,"byte_end":402650,"line_start":353,"line_end":353,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":402652,"byte_end":402681,"line_start":354,"line_end":354,"column_start":2,"column_end":31}},{"value":"/ let mut bv = bitvec![1, 0, 1, 0, 1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":402683,"byte_end":402723,"line_start":355,"line_end":355,"column_start":2,"column_end":42}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":402725,"byte_end":402728,"line_start":356,"line_end":356,"column_start":2,"column_end":5}},{"value":"/ assert!(!bv.swap_remove(1));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":402730,"byte_end":402762,"line_start":357,"line_end":357,"column_start":2,"column_end":34}},{"value":"/ assert_eq!(bv, bitvec![1, 1, 1, 0]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":402764,"byte_end":402804,"line_start":358,"line_end":358,"column_start":2,"column_end":42}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":402806,"byte_end":402809,"line_start":359,"line_end":359,"column_start":2,"column_end":5}},{"value":"/ assert!(bv.swap_remove(0));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":402811,"byte_end":402842,"line_start":360,"line_end":360,"column_start":2,"column_end":33}},{"value":"/ assert_eq!(bv, bitvec![0, 1, 1]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":402844,"byte_end":402881,"line_start":361,"line_end":361,"column_start":2,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":402883,"byte_end":402890,"line_start":362,"line_end":362,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":2661},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":403625,"byte_end":403631,"line_start":388,"line_end":388,"column_start":9,"column_end":15},"name":"insert","qualname":"<BitVec<O, T>>::insert","value":"fn insert<'_>(&'_ mut Self, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Inserts a bit at position `index` within the vector, shifting all bits\n after it to the right.","sig":null,"attributes":[{"value":"/ Inserts a bit at position `index` within the vector, shifting all bits","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":403189,"byte_end":403263,"line_start":371,"line_end":371,"column_start":2,"column_end":76}},{"value":"/ after it to the right.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":403265,"byte_end":403291,"line_start":372,"line_end":372,"column_start":2,"column_end":28}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":403293,"byte_end":403296,"line_start":373,"line_end":373,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":403298,"byte_end":403310,"line_start":374,"line_end":374,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":403312,"byte_end":403315,"line_start":375,"line_end":375,"column_start":2,"column_end":5}},{"value":"/ Panics if `index > len`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":403317,"byte_end":403345,"line_start":376,"line_end":376,"column_start":2,"column_end":30}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":403347,"byte_end":403350,"line_start":377,"line_end":377,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":403352,"byte_end":403366,"line_start":378,"line_end":378,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":403368,"byte_end":403371,"line_start":379,"line_end":379,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":403373,"byte_end":403384,"line_start":380,"line_end":380,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":403386,"byte_end":403415,"line_start":381,"line_end":381,"column_start":2,"column_end":31}},{"value":"/ let mut bv = bitvec![1, 0, 1, 0, 1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":403417,"byte_end":403457,"line_start":382,"line_end":382,"column_start":2,"column_end":42}},{"value":"/ bv.insert(1, false);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":403459,"byte_end":403483,"line_start":383,"line_end":383,"column_start":2,"column_end":26}},{"value":"/ assert_eq!(bv, bitvec![1, 0, 0, 1, 0, 1]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":403485,"byte_end":403531,"line_start":384,"line_end":384,"column_start":2,"column_end":48}},{"value":"/ bv.insert(4, true);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":403533,"byte_end":403556,"line_start":385,"line_end":385,"column_start":2,"column_end":25}},{"value":"/ assert_eq!(bv, bitvec![1, 0, 0, 1, 1, 0, 1]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":403558,"byte_end":403607,"line_start":386,"line_end":386,"column_start":2,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":403609,"byte_end":403616,"line_start":387,"line_end":387,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":2662},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":404235,"byte_end":404241,"line_start":410,"line_end":410,"column_start":9,"column_end":15},"name":"remove","qualname":"<BitVec<O, T>>::remove","value":"fn remove<'_>(&'_ mut Self, usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Removes and returns the bit at position `index` within the vector,\n shifting all bits after it to the left.","sig":null,"attributes":[{"value":"/ Removes and returns the bit at position `index` within the vector,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":403854,"byte_end":403924,"line_start":395,"line_end":395,"column_start":2,"column_end":72}},{"value":"/ shifting all bits after it to the left.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":403926,"byte_end":403969,"line_start":396,"line_end":396,"column_start":2,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":403971,"byte_end":403974,"line_start":397,"line_end":397,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":403976,"byte_end":403988,"line_start":398,"line_end":398,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":403990,"byte_end":403993,"line_start":399,"line_end":399,"column_start":2,"column_end":5}},{"value":"/ Panics if `index` is out of bounds.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":403995,"byte_end":404034,"line_start":400,"line_end":400,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":404036,"byte_end":404039,"line_start":401,"line_end":401,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":404041,"byte_end":404055,"line_start":402,"line_end":402,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":404057,"byte_end":404060,"line_start":403,"line_end":403,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":404062,"byte_end":404073,"line_start":404,"line_end":404,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":404075,"byte_end":404104,"line_start":405,"line_end":405,"column_start":2,"column_end":31}},{"value":"/ let mut bv = bitvec![1, 0, 1, 0, 1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":404106,"byte_end":404146,"line_start":406,"line_end":406,"column_start":2,"column_end":42}},{"value":"/ assert!(!bv.remove(1));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":404148,"byte_end":404175,"line_start":407,"line_end":407,"column_start":2,"column_end":29}},{"value":"/ assert_eq!(bv, bitvec![1, 1, 0, 1]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":404177,"byte_end":404217,"line_start":408,"line_end":408,"column_start":2,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":404219,"byte_end":404226,"line_start":409,"line_end":409,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":2664},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":405501,"byte_end":405507,"line_start":444,"line_end":444,"column_start":9,"column_end":15},"name":"retain","qualname":"<BitVec<O, T>>::retain","value":"fn retain<F, '_>(&'_ mut Self, F) where F: FnMut(usize, bool) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Retains only the bits that pass the predicate.","sig":null,"attributes":[{"value":"/ Retains only the bits that pass the predicate.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":404551,"byte_end":404601,"line_start":420,"line_end":420,"column_start":2,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":404603,"byte_end":404606,"line_start":421,"line_end":421,"column_start":2,"column_end":5}},{"value":"/ This removes all bits `b` where `f(e)` returns `false`. This method","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":404608,"byte_end":404679,"line_start":422,"line_end":422,"column_start":2,"column_end":73}},{"value":"/ operates in place and preserves the order of the retained bits. Because","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":404681,"byte_end":404756,"line_start":423,"line_end":423,"column_start":2,"column_end":77}},{"value":"/ it is in-place, it operates in `O(n²)` time.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":404758,"byte_end":404807,"line_start":424,"line_end":424,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":404809,"byte_end":404812,"line_start":425,"line_end":425,"column_start":2,"column_end":5}},{"value":"/ # API Differences","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":404814,"byte_end":404835,"line_start":426,"line_end":426,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":404837,"byte_end":404840,"line_start":427,"line_end":427,"column_start":2,"column_end":5}},{"value":"/ The [`Vec::retain`] method takes a predicate function with signature","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":404842,"byte_end":404914,"line_start":428,"line_end":428,"column_start":2,"column_end":74}},{"value":"/ `(&T) -> bool`, whereas this method’s predicate function has signature","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":404916,"byte_end":404992,"line_start":429,"line_end":429,"column_start":2,"column_end":76}},{"value":"/ `(usize, &T) -> bool`. This difference is in place because `BitSlice` by","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":404994,"byte_end":405070,"line_start":430,"line_end":430,"column_start":2,"column_end":78}},{"value":"/ definition has only one bit of information per slice item, and including","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":405072,"byte_end":405148,"line_start":431,"line_end":431,"column_start":2,"column_end":78}},{"value":"/ the index allows the callback function to make more informed choices.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":405150,"byte_end":405223,"line_start":432,"line_end":432,"column_start":2,"column_end":75}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":405225,"byte_end":405228,"line_start":433,"line_end":433,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":405230,"byte_end":405244,"line_start":434,"line_end":434,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":405246,"byte_end":405249,"line_start":435,"line_end":435,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":405251,"byte_end":405262,"line_start":436,"line_end":436,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":405264,"byte_end":405293,"line_start":437,"line_end":437,"column_start":2,"column_end":31}},{"value":"/ let mut bv = bitvec![0, 1, 0, 1, 0, 1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":405295,"byte_end":405338,"line_start":438,"line_end":438,"column_start":2,"column_end":45}},{"value":"/ bv.retain(|_, b| b);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":405340,"byte_end":405364,"line_start":439,"line_end":439,"column_start":2,"column_end":26}},{"value":"/ assert_eq!(bv, bitvec![1, 1, 1]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":405366,"byte_end":405403,"line_start":440,"line_end":440,"column_start":2,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":405405,"byte_end":405412,"line_start":441,"line_end":441,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":405414,"byte_end":405417,"line_start":442,"line_end":442,"column_start":2,"column_end":5}},{"value":"/ [`BitSlice::for_each`]: ../slice/struct.BitSlice.html#method.for_each","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":405419,"byte_end":405492,"line_start":443,"line_end":443,"column_start":2,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2666},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":406160,"byte_end":406164,"line_start":472,"line_end":472,"column_start":9,"column_end":13},"name":"push","qualname":"<BitVec<O, T>>::push","value":"fn push<'_>(&'_ mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Appends a bit to the back of the vector.","sig":null,"attributes":[{"value":"/ Appends a bit to the back of the vector.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":405671,"byte_end":405715,"line_start":453,"line_end":453,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":405717,"byte_end":405720,"line_start":454,"line_end":454,"column_start":2,"column_end":5}},{"value":"/ If the vector is at capacity, this may cause a reallocation.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":405722,"byte_end":405786,"line_start":455,"line_end":455,"column_start":2,"column_end":66}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":405788,"byte_end":405791,"line_start":456,"line_end":456,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":405793,"byte_end":405805,"line_start":457,"line_end":457,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":405807,"byte_end":405810,"line_start":458,"line_end":458,"column_start":2,"column_end":5}},{"value":"/ This will panic if the push will cause the vector to allocate above","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":405812,"byte_end":405883,"line_start":459,"line_end":459,"column_start":2,"column_end":73}},{"value":"/ `BitPtr<T>::MAX_ELTS` or machine capacity.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":405885,"byte_end":405931,"line_start":460,"line_end":460,"column_start":2,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":405933,"byte_end":405936,"line_start":461,"line_end":461,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":405938,"byte_end":405952,"line_start":462,"line_end":462,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":405954,"byte_end":405957,"line_start":463,"line_end":463,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":405959,"byte_end":405970,"line_start":464,"line_end":464,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":405972,"byte_end":406001,"line_start":465,"line_end":465,"column_start":2,"column_end":31}},{"value":"/ let mut bv: BitVec = BitVec::new();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":406003,"byte_end":406042,"line_start":466,"line_end":466,"column_start":2,"column_end":41}},{"value":"/ assert!(bv.is_empty());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":406044,"byte_end":406071,"line_start":467,"line_end":467,"column_start":2,"column_end":29}},{"value":"/ bv.push(true);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":406073,"byte_end":406091,"line_start":468,"line_end":468,"column_start":2,"column_end":20}},{"value":"/ assert_eq!(bv.len(), 1);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":406093,"byte_end":406121,"line_start":469,"line_end":469,"column_start":2,"column_end":30}},{"value":"/ assert!(bv[0]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":406123,"byte_end":406142,"line_start":470,"line_end":470,"column_start":2,"column_end":21}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":406144,"byte_end":406151,"line_start":471,"line_end":471,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":2668},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":407155,"byte_end":407158,"line_start":510,"line_end":510,"column_start":9,"column_end":12},"name":"pop","qualname":"<BitVec<O, T>>::pop","value":"fn pop<'_>(&'_ mut Self) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Removes the last element from a vector and returns it, or `None` if it\n is empty.","sig":null,"attributes":[{"value":"/ Removes the last element from a vector and returns it, or `None` if it","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":406736,"byte_end":406810,"line_start":493,"line_end":493,"column_start":2,"column_end":76}},{"value":"/ is empty.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":406812,"byte_end":406825,"line_start":494,"line_end":494,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":406827,"byte_end":406830,"line_start":495,"line_end":495,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":406832,"byte_end":406846,"line_start":496,"line_end":496,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":406848,"byte_end":406851,"line_start":497,"line_end":497,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":406853,"byte_end":406864,"line_start":498,"line_end":498,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":406866,"byte_end":406895,"line_start":499,"line_end":499,"column_start":2,"column_end":31}},{"value":"/ let mut bv: BitVec = BitVec::new();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":406897,"byte_end":406936,"line_start":500,"line_end":500,"column_start":2,"column_end":41}},{"value":"/ assert!(bv.is_empty());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":406938,"byte_end":406965,"line_start":501,"line_end":501,"column_start":2,"column_end":29}},{"value":"/ bv.push(true);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":406967,"byte_end":406985,"line_start":502,"line_end":502,"column_start":2,"column_end":20}},{"value":"/ assert_eq!(bv.len(), 1);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":406987,"byte_end":407015,"line_start":503,"line_end":503,"column_start":2,"column_end":30}},{"value":"/ assert!(bv[0]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":407017,"byte_end":407036,"line_start":504,"line_end":504,"column_start":2,"column_end":21}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":407038,"byte_end":407041,"line_start":505,"line_end":505,"column_start":2,"column_end":5}},{"value":"/ assert!(bv.pop().unwrap());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":407043,"byte_end":407074,"line_start":506,"line_end":506,"column_start":2,"column_end":33}},{"value":"/ assert!(bv.is_empty());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":407076,"byte_end":407103,"line_start":507,"line_end":507,"column_start":2,"column_end":29}},{"value":"/ assert!(bv.pop().is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":407105,"byte_end":407137,"line_start":508,"line_end":508,"column_start":2,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":407139,"byte_end":407146,"line_start":509,"line_end":509,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":2670},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":407791,"byte_end":407797,"line_start":537,"line_end":537,"column_start":9,"column_end":15},"name":"append","qualname":"<BitVec<O, T>>::append","value":"fn append<D, U, '_, '_>(&'_ mut Self, &'_ mut BitVec<D, U>) where D: BitOrder,\nU: BitStore","parent":null,"children":[],"decl_id":null,"docs":" Moves all the elements of `other` into `self`, leaving `other` empty.","sig":null,"attributes":[{"value":"/ Moves all the elements of `other` into `self`, leaving `other` empty.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":407325,"byte_end":407398,"line_start":518,"line_end":518,"column_start":2,"column_end":75}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":407400,"byte_end":407403,"line_start":519,"line_end":519,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":407405,"byte_end":407417,"line_start":520,"line_end":520,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":407419,"byte_end":407422,"line_start":521,"line_end":521,"column_start":2,"column_end":5}},{"value":"/ Panics if the number of bits in the vector overflows","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":407424,"byte_end":407480,"line_start":522,"line_end":522,"column_start":2,"column_end":58}},{"value":"/ `BitPtr::<T>::MAX_ELTS`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":407482,"byte_end":407510,"line_start":523,"line_end":523,"column_start":2,"column_end":30}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":407512,"byte_end":407515,"line_start":524,"line_end":524,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":407517,"byte_end":407531,"line_start":525,"line_end":525,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":407533,"byte_end":407536,"line_start":526,"line_end":526,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":407538,"byte_end":407549,"line_start":527,"line_end":527,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":407551,"byte_end":407580,"line_start":528,"line_end":528,"column_start":2,"column_end":31}},{"value":"/ let mut bv1 = bitvec![0; 10];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":407582,"byte_end":407615,"line_start":529,"line_end":529,"column_start":2,"column_end":35}},{"value":"/ let mut bv2 = bitvec![1; 10];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":407617,"byte_end":407650,"line_start":530,"line_end":530,"column_start":2,"column_end":35}},{"value":"/ bv1.append(&mut bv2);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":407652,"byte_end":407677,"line_start":531,"line_end":531,"column_start":2,"column_end":27}},{"value":"/ assert_eq!(bv1.len(), 20);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":407679,"byte_end":407709,"line_start":532,"line_end":532,"column_start":2,"column_end":32}},{"value":"/ assert!(bv1[10]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":407711,"byte_end":407732,"line_start":533,"line_end":533,"column_start":2,"column_end":23}},{"value":"/ assert!(bv2.is_empty());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":407734,"byte_end":407762,"line_start":534,"line_end":534,"column_start":2,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":407764,"byte_end":407771,"line_start":535,"line_end":535,"column_start":2,"column_end":9}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":407773,"byte_end":407782,"line_start":536,"line_end":536,"column_start":2,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":2673},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":408739,"byte_end":408744,"line_start":570,"line_end":570,"column_start":9,"column_end":14},"name":"drain","qualname":"<BitVec<O, T>>::drain","value":"fn drain<R, '_>(&'_ mut Self, R) -> Drain where R: RangeBounds<usize>","parent":null,"children":[],"decl_id":null,"docs":" Creates a draining iterator that removes the specified range from the\n vector and yields the removed bits.","sig":null,"attributes":[{"value":"/ Creates a draining iterator that removes the specified range from the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":407935,"byte_end":408008,"line_start":543,"line_end":543,"column_start":2,"column_end":75}},{"value":"/ vector and yields the removed bits.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":408010,"byte_end":408049,"line_start":544,"line_end":544,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":408051,"byte_end":408054,"line_start":545,"line_end":545,"column_start":2,"column_end":5}},{"value":"/ # Notes","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":408056,"byte_end":408067,"line_start":546,"line_end":546,"column_start":2,"column_end":13}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":408069,"byte_end":408072,"line_start":547,"line_end":547,"column_start":2,"column_end":5}},{"value":"/ 1. The element range is removed even if the iterator is only partially","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":408074,"byte_end":408148,"line_start":548,"line_end":548,"column_start":2,"column_end":76}},{"value":"/    consumed or not consumed at all.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":408150,"byte_end":408189,"line_start":549,"line_end":549,"column_start":2,"column_end":41}},{"value":"/ 2. It is unspecified how many bits are removed from the vector if the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":408191,"byte_end":408264,"line_start":550,"line_end":550,"column_start":2,"column_end":75}},{"value":"/    `Drain` value is leaked.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":408266,"byte_end":408297,"line_start":551,"line_end":551,"column_start":2,"column_end":33}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":408299,"byte_end":408302,"line_start":552,"line_end":552,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":408304,"byte_end":408316,"line_start":553,"line_end":553,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":408318,"byte_end":408321,"line_start":554,"line_end":554,"column_start":2,"column_end":5}},{"value":"/ Panics if the starting point is greater than the end point or if the end","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":408323,"byte_end":408399,"line_start":555,"line_end":555,"column_start":2,"column_end":78}},{"value":"/ point is greater than the length of the vector.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":408401,"byte_end":408452,"line_start":556,"line_end":556,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":408454,"byte_end":408457,"line_start":557,"line_end":557,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":408459,"byte_end":408473,"line_start":558,"line_end":558,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":408475,"byte_end":408478,"line_start":559,"line_end":559,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":408480,"byte_end":408491,"line_start":560,"line_end":560,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":408493,"byte_end":408522,"line_start":561,"line_end":561,"column_start":2,"column_end":31}},{"value":"/ let mut bv = bitvec![0, 0, 1, 1, 1, 0, 0];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":408524,"byte_end":408570,"line_start":562,"line_end":562,"column_start":2,"column_end":48}},{"value":"/ assert_eq!(bv.len(), 7);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":408572,"byte_end":408600,"line_start":563,"line_end":563,"column_start":2,"column_end":30}},{"value":"/ for bit in bv.drain(2 .. 5) {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":408602,"byte_end":408635,"line_start":564,"line_end":564,"column_start":2,"column_end":35}},{"value":"/   assert!(bit);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":408637,"byte_end":408656,"line_start":565,"line_end":565,"column_start":2,"column_end":21}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":408658,"byte_end":408663,"line_start":566,"line_end":566,"column_start":2,"column_end":7}},{"value":"/ assert!(bv.not_any());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":408665,"byte_end":408691,"line_start":567,"line_end":567,"column_start":2,"column_end":28}},{"value":"/ assert_eq!(bv.len(), 4);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":408693,"byte_end":408721,"line_start":568,"line_end":568,"column_start":2,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":408723,"byte_end":408730,"line_start":569,"line_end":569,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":2676},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":410203,"byte_end":410208,"line_start":623,"line_end":623,"column_start":9,"column_end":14},"name":"clear","qualname":"<BitVec<O, T>>::clear","value":"fn clear<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the vector, removing all values.","sig":null,"attributes":[{"value":"/ Clears the vector, removing all values.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":409609,"byte_end":409652,"line_start":604,"line_end":604,"column_start":2,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":409654,"byte_end":409657,"line_start":605,"line_end":605,"column_start":2,"column_end":5}},{"value":"/ Note that this method has no effect on the allocated capacity of the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":409659,"byte_end":409731,"line_start":606,"line_end":606,"column_start":2,"column_end":74}},{"value":"/ vector.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":409733,"byte_end":409744,"line_start":607,"line_end":607,"column_start":2,"column_end":13}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":409746,"byte_end":409749,"line_start":608,"line_end":608,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":409751,"byte_end":409765,"line_start":609,"line_end":609,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":409767,"byte_end":409770,"line_start":610,"line_end":610,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":409772,"byte_end":409783,"line_start":611,"line_end":611,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":409785,"byte_end":409814,"line_start":612,"line_end":612,"column_start":2,"column_end":31}},{"value":"/ let mut bv = bitvec![1; 30];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":409816,"byte_end":409848,"line_start":613,"line_end":613,"column_start":2,"column_end":34}},{"value":"/ assert_eq!(bv.len(), 30);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":409850,"byte_end":409879,"line_start":614,"line_end":614,"column_start":2,"column_end":31}},{"value":"/ assert!(bv.iter().all(|b| *b));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":409881,"byte_end":409916,"line_start":615,"line_end":615,"column_start":2,"column_end":37}},{"value":"/ bv.clear();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":409918,"byte_end":409933,"line_start":616,"line_end":616,"column_start":2,"column_end":17}},{"value":"/ assert!(bv.is_empty());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":409935,"byte_end":409962,"line_start":617,"line_end":617,"column_start":2,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":409964,"byte_end":409971,"line_start":618,"line_end":618,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":409973,"byte_end":409976,"line_start":619,"line_end":619,"column_start":2,"column_end":5}},{"value":"/ After calling `clear()`, `bv` will no longer show raw memory, so the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":409978,"byte_end":410050,"line_start":620,"line_end":620,"column_start":2,"column_end":74}},{"value":"/ above test cannot show that the underlying memory is not altered. This","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":410052,"byte_end":410126,"line_start":621,"line_end":621,"column_start":2,"column_end":76}},{"value":"/ is also an implementation detail on which you should not rely.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":410128,"byte_end":410194,"line_start":622,"line_end":622,"column_start":2,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2677},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":410808,"byte_end":410817,"line_start":647,"line_end":647,"column_start":9,"column_end":18},"name":"split_off","qualname":"<BitVec<O, T>>::split_off","value":"fn split_off<'_>(&'_ mut Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Splits the collection into two at the given index.","sig":null,"attributes":[{"value":"/ Splits the collection into two at the given index.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":410256,"byte_end":410310,"line_start":627,"line_end":627,"column_start":2,"column_end":56}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":410312,"byte_end":410315,"line_start":628,"line_end":628,"column_start":2,"column_end":5}},{"value":"/ Returns a newly allocated `Self`. `self` contains elements `[0, at)`,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":410317,"byte_end":410390,"line_start":629,"line_end":629,"column_start":2,"column_end":75}},{"value":"/ and the returned `Self` contains elements `[at, len)`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":410392,"byte_end":410450,"line_start":630,"line_end":630,"column_start":2,"column_end":60}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":410452,"byte_end":410455,"line_start":631,"line_end":631,"column_start":2,"column_end":5}},{"value":"/ Note that the capacity of `self` does not change.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":410457,"byte_end":410510,"line_start":632,"line_end":632,"column_start":2,"column_end":55}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":410512,"byte_end":410515,"line_start":633,"line_end":633,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":410517,"byte_end":410529,"line_start":634,"line_end":634,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":410531,"byte_end":410534,"line_start":635,"line_end":635,"column_start":2,"column_end":5}},{"value":"/ Panics if `at > len`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":410536,"byte_end":410561,"line_start":636,"line_end":636,"column_start":2,"column_end":27}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":410563,"byte_end":410566,"line_start":637,"line_end":637,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":410568,"byte_end":410582,"line_start":638,"line_end":638,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":410584,"byte_end":410587,"line_start":639,"line_end":639,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":410589,"byte_end":410600,"line_start":640,"line_end":640,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":410602,"byte_end":410631,"line_start":641,"line_end":641,"column_start":2,"column_end":31}},{"value":"/ let mut bv1 = bitvec![0, 0, 0, 1, 1, 1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":410633,"byte_end":410677,"line_start":642,"line_end":642,"column_start":2,"column_end":46}},{"value":"/ let bv2 = bv1.split_off(3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":410679,"byte_end":410710,"line_start":643,"line_end":643,"column_start":2,"column_end":33}},{"value":"/ assert_eq!(bv1, bitvec![0, 0, 0]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":410712,"byte_end":410750,"line_start":644,"line_end":644,"column_start":2,"column_end":40}},{"value":"/ assert_eq!(bv2, bitvec![1, 1, 1]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":410752,"byte_end":410790,"line_start":645,"line_end":645,"column_start":2,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":410792,"byte_end":410799,"line_start":646,"line_end":646,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":2678},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":412458,"byte_end":412469,"line_start":693,"line_end":693,"column_start":9,"column_end":20},"name":"resize_with","qualname":"<BitVec<O, T>>::resize_with","value":"fn resize_with<F, '_>(&'_ mut Self, usize, F) where F: FnMut() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Resizes the `BitVec` in-place so that `len` is equal to `new_len`.","sig":null,"attributes":[{"value":"/ Resizes the `BitVec` in-place so that `len` is equal to `new_len`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":411126,"byte_end":411196,"line_start":661,"line_end":661,"column_start":2,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":411198,"byte_end":411201,"line_start":662,"line_end":662,"column_start":2,"column_end":5}},{"value":"/ If `new_len` is greater than `len`, the `BitVec` is extended by the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":411203,"byte_end":411274,"line_start":663,"line_end":663,"column_start":2,"column_end":73}},{"value":"/ difference, with each additional slot filled with the result of calling","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":411276,"byte_end":411351,"line_start":664,"line_end":664,"column_start":2,"column_end":77}},{"value":"/ the closure `f`. The return values from `f` will end up in the `BitVec`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":411353,"byte_end":411428,"line_start":665,"line_end":665,"column_start":2,"column_end":77}},{"value":"/ in the order they have been generated.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":411430,"byte_end":411472,"line_start":666,"line_end":666,"column_start":2,"column_end":44}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":411474,"byte_end":411477,"line_start":667,"line_end":667,"column_start":2,"column_end":5}},{"value":"/ If `new_len` is less than `len`, the `BitVec` is simply truncated.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":411479,"byte_end":411549,"line_start":668,"line_end":668,"column_start":2,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":411551,"byte_end":411554,"line_start":669,"line_end":669,"column_start":2,"column_end":5}},{"value":"/ This method uses a closure to create new values on every push. If you’d","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":411556,"byte_end":411633,"line_start":670,"line_end":670,"column_start":2,"column_end":77}},{"value":"/ rather [`Clone`] a given value, use [`resize`]. If you want to use the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":411635,"byte_end":411709,"line_start":671,"line_end":671,"column_start":2,"column_end":76}},{"value":"/ [`Default`] trait to generate values, you can pass","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":411711,"byte_end":411765,"line_start":672,"line_end":672,"column_start":2,"column_end":56}},{"value":"/ [`Default::default()`] as the second argument.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":411767,"byte_end":411817,"line_start":673,"line_end":673,"column_start":2,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":411819,"byte_end":411822,"line_start":674,"line_end":674,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":411824,"byte_end":411838,"line_start":675,"line_end":675,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":411840,"byte_end":411843,"line_start":676,"line_end":676,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":411845,"byte_end":411856,"line_start":677,"line_end":677,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":411858,"byte_end":411887,"line_start":678,"line_end":678,"column_start":2,"column_end":31}},{"value":"/ let mut bv = bitvec![1, 0, 1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":411889,"byte_end":411923,"line_start":679,"line_end":679,"column_start":2,"column_end":36}},{"value":"/ bv.resize_with(5, Default::default);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":411925,"byte_end":411965,"line_start":680,"line_end":680,"column_start":2,"column_end":42}},{"value":"/ assert_eq!(bv, bitvec![1, 0, 1, 0, 0]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":411967,"byte_end":412010,"line_start":681,"line_end":681,"column_start":2,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":412012,"byte_end":412015,"line_start":682,"line_end":682,"column_start":2,"column_end":5}},{"value":"/ let mut bv = bitvec![];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":412017,"byte_end":412044,"line_start":683,"line_end":683,"column_start":2,"column_end":29}},{"value":"/ let mut p = 1;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":412046,"byte_end":412064,"line_start":684,"line_end":684,"column_start":2,"column_end":20}},{"value":"/ bv.resize_with(4, || { p += 1; p % 2 == 0});","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":412066,"byte_end":412114,"line_start":685,"line_end":685,"column_start":2,"column_end":50}},{"value":"/ assert_eq!(bv, bitvec![1, 0, 1, 0]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":412116,"byte_end":412156,"line_start":686,"line_end":686,"column_start":2,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":412158,"byte_end":412165,"line_start":687,"line_end":687,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":412167,"byte_end":412170,"line_start":688,"line_end":688,"column_start":2,"column_end":5}},{"value":"/ [`Clone`]: https://doc.rust-lang.org/std/clone/trait.Clone.html","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":412172,"byte_end":412239,"line_start":689,"line_end":689,"column_start":2,"column_end":69}},{"value":"/ [`Default`]: https://doc.rust-lang.org/std/default/trait.Default.html","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":412241,"byte_end":412314,"line_start":690,"line_end":690,"column_start":2,"column_end":75}},{"value":"/ [`Default::default()`]: https://doc.rust-lang.org/std/default/trait.Default.html#tymethod.default","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":412316,"byte_end":412417,"line_start":691,"line_end":691,"column_start":2,"column_end":103}},{"value":"/ [`resize`]: #method.resize","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":412419,"byte_end":412449,"line_start":692,"line_end":692,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2680},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":413389,"byte_end":413395,"line_start":725,"line_end":725,"column_start":9,"column_end":15},"name":"resize","qualname":"<BitVec<O, T>>::resize","value":"fn resize<'_>(&'_ mut Self, usize, bool)","parent":null,"children":[],"decl_id":null,"docs":" Resizes the `BitVec` in place so that `len` is equal to `new_len`.","sig":null,"attributes":[{"value":"/ Resizes the `BitVec` in place so that `len` is equal to `new_len`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":412834,"byte_end":412904,"line_start":709,"line_end":709,"column_start":2,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":412906,"byte_end":412909,"line_start":710,"line_end":710,"column_start":2,"column_end":5}},{"value":"/ If `new_len` is greater than `len`, the `BitVec` is extended by the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":412911,"byte_end":412982,"line_start":711,"line_end":711,"column_start":2,"column_end":73}},{"value":"/ difference, with each additional slot filled with `value`. If `new_len`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":412984,"byte_end":413059,"line_start":712,"line_end":712,"column_start":2,"column_end":77}},{"value":"/ is less than `len`, the `BitVec` is simply truncated.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":413061,"byte_end":413118,"line_start":713,"line_end":713,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":413120,"byte_end":413123,"line_start":714,"line_end":714,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":413125,"byte_end":413139,"line_start":715,"line_end":715,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":413141,"byte_end":413144,"line_start":716,"line_end":716,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":413146,"byte_end":413157,"line_start":717,"line_end":717,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":413159,"byte_end":413188,"line_start":718,"line_end":718,"column_start":2,"column_end":31}},{"value":"/ let mut bv = bitvec![0; 4];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":413190,"byte_end":413221,"line_start":719,"line_end":719,"column_start":2,"column_end":33}},{"value":"/ bv.resize(8, true);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":413223,"byte_end":413246,"line_start":720,"line_end":720,"column_start":2,"column_end":25}},{"value":"/ assert_eq!(bv, bitvec![0, 0, 0, 0, 1, 1, 1, 1]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":413248,"byte_end":413300,"line_start":721,"line_end":721,"column_start":2,"column_end":54}},{"value":"/ bv.resize(5, false);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":413302,"byte_end":413326,"line_start":722,"line_end":722,"column_start":2,"column_end":26}},{"value":"/ assert_eq!(bv, bitvec![0, 0, 0, 0, 1]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":413328,"byte_end":413371,"line_start":723,"line_end":723,"column_start":2,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":413373,"byte_end":413380,"line_start":724,"line_end":724,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":2681},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":414453,"byte_end":414470,"line_start":759,"line_end":759,"column_start":9,"column_end":26},"name":"extend_from_slice","qualname":"<BitVec<O, T>>::extend_from_slice","value":"fn extend_from_slice<D, U, '_, '_>(&'_ mut Self, &'_ BitSlice<D, U>) where\nD: BitOrder, U: BitStore","parent":null,"children":[],"decl_id":null,"docs":" Clones and appends all bits in a bit-slice to the `BitVec`.","sig":null,"attributes":[{"value":"/ Clones and appends all bits in a bit-slice to the `BitVec`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":413742,"byte_end":413805,"line_start":739,"line_end":739,"column_start":2,"column_end":65}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":413807,"byte_end":413810,"line_start":740,"line_end":740,"column_start":2,"column_end":5}},{"value":"/ Iterates over the bit-slice `other`, clones each bit, and then appends","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":413812,"byte_end":413886,"line_start":741,"line_end":741,"column_start":2,"column_end":76}},{"value":"/ it to this `BitVec`. The `other` slice is traversed in-order.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":413888,"byte_end":413953,"line_start":742,"line_end":742,"column_start":2,"column_end":67}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":413955,"byte_end":413958,"line_start":743,"line_end":743,"column_start":2,"column_end":5}},{"value":"/ Note that this function is the same as [`extend`] except that it is","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":413960,"byte_end":414031,"line_start":744,"line_end":744,"column_start":2,"column_end":73}},{"value":"/ specialized to work with bit-slices instead. If and when Rust gets","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":414033,"byte_end":414103,"line_start":745,"line_end":745,"column_start":2,"column_end":72}},{"value":"/ specialization this function will likely be deprecated (but still","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":414105,"byte_end":414174,"line_start":746,"line_end":746,"column_start":2,"column_end":71}},{"value":"/ available).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":414176,"byte_end":414191,"line_start":747,"line_end":747,"column_start":2,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":414193,"byte_end":414196,"line_start":748,"line_end":748,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":414198,"byte_end":414212,"line_start":749,"line_end":749,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":414214,"byte_end":414217,"line_start":750,"line_end":750,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":414219,"byte_end":414230,"line_start":751,"line_end":751,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":414232,"byte_end":414261,"line_start":752,"line_end":752,"column_start":2,"column_end":31}},{"value":"/ let mut bv = bitvec![1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":414263,"byte_end":414291,"line_start":753,"line_end":753,"column_start":2,"column_end":30}},{"value":"/ bv.extend_from_slice(0xA5u8.bits::<Lsb0>());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":414293,"byte_end":414341,"line_start":754,"line_end":754,"column_start":2,"column_end":50}},{"value":"/ assert_eq!(bv, bitvec![1, 1, 0, 1, 0, 0, 1, 0, 1]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":414343,"byte_end":414398,"line_start":755,"line_end":755,"column_start":2,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":414400,"byte_end":414407,"line_start":756,"line_end":756,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":414409,"byte_end":414412,"line_start":757,"line_end":757,"column_start":2,"column_end":5}},{"value":"/ [`extend`]: #method.extend","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":414414,"byte_end":414444,"line_start":758,"line_end":758,"column_start":2,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":2684},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":416212,"byte_end":416218,"line_start":808,"line_end":808,"column_start":9,"column_end":15},"name":"splice","qualname":"<BitVec<O, T>>::splice","value":"fn splice<R, I, '_>(&'_ mut Self, R, I) -> Splice where I: IntoIterator<Item =\nbool>, R: RangeBounds<usize>","parent":null,"children":[],"decl_id":null,"docs":" Creates a splicing iterator that replaces the specified range in the\n vector with the given `replace_with` iterator and yields the removed\n bits. `replace_with` does not need to be the same length as `range`.","sig":null,"attributes":[{"value":"/ Creates a splicing iterator that replaces the specified range in the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":414701,"byte_end":414773,"line_start":768,"line_end":768,"column_start":2,"column_end":74}},{"value":"/ vector with the given `replace_with` iterator and yields the removed","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":414775,"byte_end":414847,"line_start":769,"line_end":769,"column_start":2,"column_end":74}},{"value":"/ bits. `replace_with` does not need to be the same length as `range`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":414849,"byte_end":414921,"line_start":770,"line_end":770,"column_start":2,"column_end":74}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":414923,"byte_end":414926,"line_start":771,"line_end":771,"column_start":2,"column_end":5}},{"value":"/ # Notes","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":414928,"byte_end":414939,"line_start":772,"line_end":772,"column_start":2,"column_end":13}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":414941,"byte_end":414944,"line_start":773,"line_end":773,"column_start":2,"column_end":5}},{"value":"/ 1. The element range is removed and replaced even if the iterator","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":414946,"byte_end":415015,"line_start":774,"line_end":774,"column_start":2,"column_end":71}},{"value":"/    produced by this method is not consumed until the end.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":415017,"byte_end":415078,"line_start":775,"line_end":775,"column_start":2,"column_end":63}},{"value":"/ 2. It is unspecified how many bits are removed from the vector if the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":415080,"byte_end":415153,"line_start":776,"line_end":776,"column_start":2,"column_end":75}},{"value":"/    `Splice` value is leaked.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":415155,"byte_end":415187,"line_start":777,"line_end":777,"column_start":2,"column_end":34}},{"value":"/ 3. The input iterator `replace_with` is only consumed when the `Splice`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":415189,"byte_end":415264,"line_start":778,"line_end":778,"column_start":2,"column_end":77}},{"value":"/    value is dropped.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":415266,"byte_end":415290,"line_start":779,"line_end":779,"column_start":2,"column_end":26}},{"value":"/ 4. This is optimal if:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":415292,"byte_end":415318,"line_start":780,"line_end":780,"column_start":2,"column_end":28}},{"value":"/    - the tail (elements in the vector after `range`) is empty,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":415320,"byte_end":415386,"line_start":781,"line_end":781,"column_start":2,"column_end":68}},{"value":"/    - or `replace_with` yields fewer bits than `range`’s length,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":415388,"byte_end":415457,"line_start":782,"line_end":782,"column_start":2,"column_end":69}},{"value":"/    - the lower bound of its `size_hint()` is exact.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":415459,"byte_end":415514,"line_start":783,"line_end":783,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":415516,"byte_end":415519,"line_start":784,"line_end":784,"column_start":2,"column_end":5}},{"value":"/    Otherwise, a temporary vector is allocated and the tail is moved","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":415521,"byte_end":415592,"line_start":785,"line_end":785,"column_start":2,"column_end":73}},{"value":"/    twice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":415594,"byte_end":415607,"line_start":786,"line_end":786,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":415609,"byte_end":415612,"line_start":787,"line_end":787,"column_start":2,"column_end":5}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":415614,"byte_end":415626,"line_start":788,"line_end":788,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":415628,"byte_end":415631,"line_start":789,"line_end":789,"column_start":2,"column_end":5}},{"value":"/ Panics if the starting point is greater than the end point or if the end","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":415633,"byte_end":415709,"line_start":790,"line_end":790,"column_start":2,"column_end":78}},{"value":"/ point is greater than the length of the vector.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":415711,"byte_end":415762,"line_start":791,"line_end":791,"column_start":2,"column_end":53}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":415764,"byte_end":415767,"line_start":792,"line_end":792,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":415769,"byte_end":415783,"line_start":793,"line_end":793,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":415785,"byte_end":415788,"line_start":794,"line_end":794,"column_start":2,"column_end":5}},{"value":"/ This example starts with six bits of zero, and then splices out bits 2","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":415790,"byte_end":415864,"line_start":795,"line_end":795,"column_start":2,"column_end":76}},{"value":"/ and 3 and replaces them with four bits of one.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":415866,"byte_end":415916,"line_start":796,"line_end":796,"column_start":2,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":415918,"byte_end":415921,"line_start":797,"line_end":797,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":415923,"byte_end":415934,"line_start":798,"line_end":798,"column_start":2,"column_end":13}},{"value":"/ # use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":415936,"byte_end":415965,"line_start":799,"line_end":799,"column_start":2,"column_end":31}},{"value":"/ let mut bv = bitvec![0; 6];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":415967,"byte_end":415998,"line_start":800,"line_end":800,"column_start":2,"column_end":33}},{"value":"/ let bv2 = bitvec![1; 4];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":416000,"byte_end":416028,"line_start":801,"line_end":801,"column_start":2,"column_end":30}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":416030,"byte_end":416033,"line_start":802,"line_end":802,"column_start":2,"column_end":5}},{"value":"/ let s = bv.splice(2 .. 4, bv2).collect::<BitVec>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":416035,"byte_end":416090,"line_start":803,"line_end":803,"column_start":2,"column_end":57}},{"value":"/ assert_eq!(s.len(), 2);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":416092,"byte_end":416119,"line_start":804,"line_end":804,"column_start":2,"column_end":29}},{"value":"/ assert!(!s[0]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":416121,"byte_end":416140,"line_start":805,"line_end":805,"column_start":2,"column_end":21}},{"value":"/ assert_eq!(bv, bitvec![0, 0, 1, 1, 1, 1, 0, 0]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":416142,"byte_end":416194,"line_start":806,"line_end":806,"column_start":2,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":416196,"byte_end":416203,"line_start":807,"line_end":807,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":2713},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":417486,"byte_end":417492,"line_start":49,"line_end":49,"column_start":5,"column_end":11},"name":"extend","qualname":"<BitVec<O, T> as std::iter::Extend>::extend","value":"fn extend<I, '_>(&'_ mut Self, I) where I: IntoIterator<Item = bool>","parent":{"krate":2,"index":8407},"children":[],"decl_id":{"krate":2,"index":8409},"docs":" Extends a `BitVec` from another bitstream.","sig":null,"attributes":[{"value":"/ Extends a `BitVec` from another bitstream.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":417030,"byte_end":417076,"line_start":28,"line_end":28,"column_start":2,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":417078,"byte_end":417081,"line_start":29,"line_end":29,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":417083,"byte_end":417099,"line_start":30,"line_end":30,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":417101,"byte_end":417104,"line_start":31,"line_end":31,"column_start":2,"column_end":5}},{"value":"/ - `&mut self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":417106,"byte_end":417123,"line_start":32,"line_end":32,"column_start":2,"column_end":19}},{"value":"/ - `src`: A source bitstream.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":417125,"byte_end":417157,"line_start":33,"line_end":33,"column_start":2,"column_end":34}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":417159,"byte_end":417162,"line_start":34,"line_end":34,"column_start":2,"column_end":5}},{"value":"/ # Type Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":417164,"byte_end":417185,"line_start":35,"line_end":35,"column_start":2,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":417187,"byte_end":417190,"line_start":36,"line_end":36,"column_start":2,"column_end":5}},{"value":"/ - `I: IntoIterator<Item=bool>`: The source bitstream with which to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":417192,"byte_end":417262,"line_start":37,"line_end":37,"column_start":2,"column_end":72}},{"value":"/   extend `self`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":417264,"byte_end":417284,"line_start":38,"line_end":38,"column_start":2,"column_end":22}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":417286,"byte_end":417289,"line_start":39,"line_end":39,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":417291,"byte_end":417305,"line_start":40,"line_end":40,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":417307,"byte_end":417310,"line_start":41,"line_end":41,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":417312,"byte_end":417323,"line_start":42,"line_end":42,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":417325,"byte_end":417352,"line_start":43,"line_end":43,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":417354,"byte_end":417357,"line_start":44,"line_end":44,"column_start":2,"column_end":5}},{"value":"/ let mut bv = bitvec![Msb0, u8; 0; 4];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":417359,"byte_end":417400,"line_start":45,"line_end":45,"column_start":2,"column_end":43}},{"value":"/ bv.extend(bitvec![1; 4]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":417402,"byte_end":417431,"line_start":46,"line_end":46,"column_start":2,"column_end":31}},{"value":"/ assert_eq!(0x0F, bv.as_slice()[0]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":417433,"byte_end":417472,"line_start":47,"line_end":47,"column_start":2,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":417474,"byte_end":417481,"line_start":48,"line_end":48,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":2719},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":418215,"byte_end":418224,"line_start":77,"line_end":77,"column_start":5,"column_end":14},"name":"from_iter","qualname":"<BitVec<O, T> as std::iter::FromIterator>::from_iter","value":"fn from_iter<I>(I) -> Self where I: IntoIterator<Item = bool>","parent":{"krate":2,"index":8394},"children":[],"decl_id":{"krate":2,"index":8396},"docs":" Collects an iterator of `bool` into a vector.","sig":null,"attributes":[{"value":"/ Collects an iterator of `bool` into a vector.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":417893,"byte_end":417942,"line_start":63,"line_end":63,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":417944,"byte_end":417947,"line_start":64,"line_end":64,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":417949,"byte_end":417963,"line_start":65,"line_end":65,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":417965,"byte_end":417968,"line_start":66,"line_end":66,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":417970,"byte_end":417981,"line_start":67,"line_end":67,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":417983,"byte_end":418010,"line_start":68,"line_end":68,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":418012,"byte_end":418015,"line_start":69,"line_end":69,"column_start":2,"column_end":5}},{"value":"/ use std::iter::repeat;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":418017,"byte_end":418043,"line_start":70,"line_end":70,"column_start":2,"column_end":28}},{"value":"/ let bv: BitVec<Msb0, u8> = repeat(true)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":418045,"byte_end":418088,"line_start":71,"line_end":71,"column_start":2,"column_end":45}},{"value":"/   .take(4)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":418090,"byte_end":418104,"line_start":72,"line_end":72,"column_start":2,"column_end":16}},{"value":"/   .chain(repeat(false).take(4))","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":418106,"byte_end":418141,"line_start":73,"line_end":73,"column_start":2,"column_end":37}},{"value":"/   .collect();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":418143,"byte_end":418160,"line_start":74,"line_end":74,"column_start":2,"column_end":19}},{"value":"/ assert_eq!(bv.as_slice()[0], 0xF0);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":418162,"byte_end":418201,"line_start":75,"line_end":75,"column_start":2,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":418203,"byte_end":418210,"line_start":76,"line_end":76,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":2726},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":419139,"byte_end":419148,"line_start":116,"line_end":116,"column_start":5,"column_end":14},"name":"into_iter","qualname":"<BitVec<O, T> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8398},"children":[],"decl_id":{"krate":2,"index":8401},"docs":" Iterates over the vector.","sig":null,"attributes":[{"value":"/ Iterates over the vector.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":418857,"byte_end":418886,"line_start":102,"line_end":102,"column_start":2,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":418888,"byte_end":418891,"line_start":103,"line_end":103,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":418893,"byte_end":418907,"line_start":104,"line_end":104,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":418909,"byte_end":418912,"line_start":105,"line_end":105,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":418914,"byte_end":418925,"line_start":106,"line_end":106,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":418927,"byte_end":418954,"line_start":107,"line_end":107,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":418956,"byte_end":418959,"line_start":108,"line_end":108,"column_start":2,"column_end":5}},{"value":"/ let bv = bitvec![Msb0, u8; 1, 1, 1, 1, 0, 0, 0, 0];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":418961,"byte_end":419016,"line_start":109,"line_end":109,"column_start":2,"column_end":57}},{"value":"/ let mut count = 0;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":419018,"byte_end":419040,"line_start":110,"line_end":110,"column_start":2,"column_end":24}},{"value":"/ for bit in bv {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":419042,"byte_end":419061,"line_start":111,"line_end":111,"column_start":2,"column_end":21}},{"value":"/   if bit { count += 1; }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":419063,"byte_end":419091,"line_start":112,"line_end":112,"column_start":2,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":419093,"byte_end":419098,"line_start":113,"line_end":113,"column_start":2,"column_end":7}},{"value":"/ assert_eq!(count, 4);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":419100,"byte_end":419125,"line_start":114,"line_end":114,"column_start":2,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":419127,"byte_end":419134,"line_start":115,"line_end":115,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":2733},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":419420,"byte_end":419429,"line_start":129,"line_end":129,"column_start":5,"column_end":14},"name":"into_iter","qualname":"<&'a BitVec<O, T> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8398},"children":[],"decl_id":{"krate":2,"index":8401},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2734},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":419781,"byte_end":419786,"line_start":145,"line_end":145,"column_start":12,"column_end":17},"name":"Drain","qualname":"::vec::iter::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":2738},{"krate":0,"index":2739},{"krate":0,"index":2740},{"krate":0,"index":2741}],"decl_id":null,"docs":" State keeper for draining iteration.","sig":null,"attributes":[{"value":"* State keeper for draining iteration.\n\n# Type Parameters\n\n- `O: BitOrder`: The ordering type of the underlying vector.\n- `T: 'a + BitStore`: The storage type of the underlying vector.\n\n# Lifetimes\n\n- `'a`: The lifetime of the underlying vector.\n**/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":419518,"byte_end":419769,"line_start":134,"line_end":144,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":2753},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":421892,"byte_end":421901,"line_start":223,"line_end":223,"column_start":5,"column_end":14},"name":"next_back","qualname":"<Drain as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8442},"children":[],"decl_id":{"krate":2,"index":8443},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2767},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":422264,"byte_end":422268,"line_start":238,"line_end":238,"column_start":5,"column_end":9},"name":"next","qualname":"<Drain as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8598},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2768},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":422340,"byte_end":422349,"line_start":242,"line_end":242,"column_start":5,"column_end":14},"name":"size_hint","qualname":"<Drain as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8602},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2769},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":422417,"byte_end":422422,"line_start":246,"line_end":246,"column_start":5,"column_end":10},"name":"count","qualname":"<Drain as std::iter::Iterator>::count","value":"fn count(Self) -> usize","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8603},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2770},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":422461,"byte_end":422464,"line_start":250,"line_end":250,"column_start":5,"column_end":8},"name":"nth","qualname":"<Drain as std::iter::Iterator>::nth","value":"fn nth<'_>(&'_ mut Self, usize) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8609},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2771},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":422546,"byte_end":422550,"line_start":254,"line_end":254,"column_start":5,"column_end":9},"name":"last","qualname":"<Drain as std::iter::Iterator>::last","value":"fn last(Self) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8605},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2776},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":422706,"byte_end":422710,"line_start":261,"line_end":261,"column_start":5,"column_end":9},"name":"drop","qualname":"<Drain as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2777},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":423466,"byte_end":423474,"line_start":285,"line_end":285,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::vec::iter::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":2780},{"krate":0,"index":2781}],"decl_id":null,"docs":" A consuming iterator for `BitVec`.\n","sig":null,"attributes":[{"value":"/ A consuming iterator for `BitVec`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":423405,"byte_end":423443,"line_start":283,"line_end":283,"column_start":1,"column_end":39}},{"value":"repr(C)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":423444,"byte_end":423454,"line_start":284,"line_end":284,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":2789},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":423997,"byte_end":424006,"line_start":302,"line_end":302,"column_start":5,"column_end":14},"name":"next_back","qualname":"<IntoIter<O, T> as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8442},"children":[],"decl_id":{"krate":2,"index":8443},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2800},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":424879,"byte_end":424883,"line_start":341,"line_end":341,"column_start":5,"column_end":9},"name":"next","qualname":"<IntoIter<O, T> as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8598},"docs":" Advances the iterator by one, returning the first bit in it (if any).","sig":null,"attributes":[{"value":"/ Advances the iterator by one, returning the first bit in it (if any).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":424431,"byte_end":424504,"line_start":320,"line_end":320,"column_start":2,"column_end":75}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":424506,"byte_end":424509,"line_start":321,"line_end":321,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":424511,"byte_end":424527,"line_start":322,"line_end":322,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":424529,"byte_end":424532,"line_start":323,"line_end":323,"column_start":2,"column_end":5}},{"value":"/ - `&mut self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":424534,"byte_end":424551,"line_start":324,"line_end":324,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":424553,"byte_end":424556,"line_start":325,"line_end":325,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":424558,"byte_end":424571,"line_start":326,"line_end":326,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":424573,"byte_end":424576,"line_start":327,"line_end":327,"column_start":2,"column_end":5}},{"value":"/ The leading bit in the iterator, if any.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":424578,"byte_end":424622,"line_start":328,"line_end":328,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":424624,"byte_end":424627,"line_start":329,"line_end":329,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":424629,"byte_end":424643,"line_start":330,"line_end":330,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":424645,"byte_end":424648,"line_start":331,"line_end":331,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":424650,"byte_end":424661,"line_start":332,"line_end":332,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":424663,"byte_end":424690,"line_start":333,"line_end":333,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":424692,"byte_end":424695,"line_start":334,"line_end":334,"column_start":2,"column_end":5}},{"value":"/ let bv = bitvec![1, 0];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":424697,"byte_end":424724,"line_start":335,"line_end":335,"column_start":2,"column_end":29}},{"value":"/ let mut iter = bv.iter();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":424726,"byte_end":424755,"line_start":336,"line_end":336,"column_start":2,"column_end":31}},{"value":"/ assert!(iter.next().unwrap());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":424757,"byte_end":424791,"line_start":337,"line_end":337,"column_start":2,"column_end":36}},{"value":"/ assert!(!iter.next().unwrap());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":424793,"byte_end":424828,"line_start":338,"line_end":338,"column_start":2,"column_end":37}},{"value":"/ assert!(iter.next().is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":424830,"byte_end":424865,"line_start":339,"line_end":339,"column_start":2,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":424867,"byte_end":424874,"line_start":340,"line_end":340,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":2801},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":425695,"byte_end":425704,"line_start":375,"line_end":375,"column_start":5,"column_end":14},"name":"size_hint","qualname":"<IntoIter<O, T> as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8602},"docs":" Hints at the number of bits remaining in the iterator.","sig":null,"attributes":[{"value":"/ Hints at the number of bits remaining in the iterator.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":425047,"byte_end":425105,"line_start":348,"line_end":348,"column_start":2,"column_end":60}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":425107,"byte_end":425110,"line_start":349,"line_end":349,"column_start":2,"column_end":5}},{"value":"/ Because the exact size is always known, this always produces","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":425112,"byte_end":425176,"line_start":350,"line_end":350,"column_start":2,"column_end":66}},{"value":"/ `(len, Some(len))`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":425178,"byte_end":425201,"line_start":351,"line_end":351,"column_start":2,"column_end":25}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":425203,"byte_end":425206,"line_start":352,"line_end":352,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":425208,"byte_end":425224,"line_start":353,"line_end":353,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":425226,"byte_end":425229,"line_start":354,"line_end":354,"column_start":2,"column_end":5}},{"value":"/ - `&self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":425231,"byte_end":425244,"line_start":355,"line_end":355,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":425246,"byte_end":425249,"line_start":356,"line_end":356,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":425251,"byte_end":425264,"line_start":357,"line_end":357,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":425266,"byte_end":425269,"line_start":358,"line_end":358,"column_start":2,"column_end":5}},{"value":"/ - `usize`: The minimum bits remaining.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":425271,"byte_end":425313,"line_start":359,"line_end":359,"column_start":2,"column_end":44}},{"value":"/ - `Option<usize>`: The maximum bits remaining.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":425315,"byte_end":425365,"line_start":360,"line_end":360,"column_start":2,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":425367,"byte_end":425370,"line_start":361,"line_end":361,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":425372,"byte_end":425386,"line_start":362,"line_end":362,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":425388,"byte_end":425391,"line_start":363,"line_end":363,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":425393,"byte_end":425404,"line_start":364,"line_end":364,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":425406,"byte_end":425433,"line_start":365,"line_end":365,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":425435,"byte_end":425438,"line_start":366,"line_end":366,"column_start":2,"column_end":5}},{"value":"/ let bv = bitvec![0, 1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":425440,"byte_end":425467,"line_start":367,"line_end":367,"column_start":2,"column_end":29}},{"value":"/ let mut iter = bv.iter();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":425469,"byte_end":425498,"line_start":368,"line_end":368,"column_start":2,"column_end":31}},{"value":"/ assert_eq!(iter.size_hint(), (2, Some(2)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":425500,"byte_end":425547,"line_start":369,"line_end":369,"column_start":2,"column_end":49}},{"value":"/ iter.next();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":425549,"byte_end":425565,"line_start":370,"line_end":370,"column_start":2,"column_end":18}},{"value":"/ assert_eq!(iter.size_hint(), (1, Some(1)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":425567,"byte_end":425614,"line_start":371,"line_end":371,"column_start":2,"column_end":49}},{"value":"/ iter.next();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":425616,"byte_end":425632,"line_start":372,"line_end":372,"column_start":2,"column_end":18}},{"value":"/ assert_eq!(iter.size_hint(), (0, Some(0)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":425634,"byte_end":425681,"line_start":373,"line_end":373,"column_start":2,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":425683,"byte_end":425690,"line_start":374,"line_end":374,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":2802},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":426306,"byte_end":426311,"line_start":401,"line_end":401,"column_start":5,"column_end":10},"name":"count","qualname":"<IntoIter<O, T> as std::iter::Iterator>::count","value":"fn count(Self) -> usize","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8603},"docs":" Counts how many bits are live in the iterator, consuming it.","sig":null,"attributes":[{"value":"/ Counts how many bits are live in the iterator, consuming it.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":425775,"byte_end":425839,"line_start":379,"line_end":379,"column_start":2,"column_end":66}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":425841,"byte_end":425844,"line_start":380,"line_end":380,"column_start":2,"column_end":5}},{"value":"/ You are probably looking to use this on a borrowed iterator rather than","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":425846,"byte_end":425921,"line_start":381,"line_end":381,"column_start":2,"column_end":77}},{"value":"/ an owning iterator. See [`BitSlice`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":425923,"byte_end":425964,"line_start":382,"line_end":382,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":425966,"byte_end":425969,"line_start":383,"line_end":383,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":425971,"byte_end":425987,"line_start":384,"line_end":384,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":425989,"byte_end":425992,"line_start":385,"line_end":385,"column_start":2,"column_end":5}},{"value":"/ - `self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":425994,"byte_end":426006,"line_start":386,"line_end":386,"column_start":2,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":426008,"byte_end":426011,"line_start":387,"line_end":387,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":426013,"byte_end":426026,"line_start":388,"line_end":388,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":426028,"byte_end":426031,"line_start":389,"line_end":389,"column_start":2,"column_end":5}},{"value":"/ The number of bits in the iterator.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":426033,"byte_end":426072,"line_start":390,"line_end":390,"column_start":2,"column_end":41}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":426074,"byte_end":426077,"line_start":391,"line_end":391,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":426079,"byte_end":426093,"line_start":392,"line_end":392,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":426095,"byte_end":426098,"line_start":393,"line_end":393,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":426100,"byte_end":426111,"line_start":394,"line_end":394,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":426113,"byte_end":426140,"line_start":395,"line_end":395,"column_start":2,"column_end":29}},{"value":"/ let bv = bitvec![Msb0, u8; 0, 1, 0, 1, 0];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":426142,"byte_end":426188,"line_start":396,"line_end":396,"column_start":2,"column_end":48}},{"value":"/ assert_eq!(bv.into_iter().count(), 5);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":426190,"byte_end":426232,"line_start":397,"line_end":397,"column_start":2,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":426234,"byte_end":426241,"line_start":398,"line_end":398,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":426243,"byte_end":426246,"line_start":399,"line_end":399,"column_start":2,"column_end":5}},{"value":"/ [`BitSlice`]: ../struct.BitSlice.html#method.iter","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":426248,"byte_end":426301,"line_start":400,"line_end":400,"column_start":2,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2803},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":427234,"byte_end":427237,"line_start":433,"line_end":433,"column_start":5,"column_end":8},"name":"nth","qualname":"<IntoIter<O, T> as std::iter::Iterator>::nth","value":"fn nth<'_>(&'_ mut Self, usize) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8609},"docs":" Advances the iterator by `n` bits, starting from zero.","sig":null,"attributes":[{"value":"/ Advances the iterator by `n` bits, starting from zero.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":426354,"byte_end":426412,"line_start":405,"line_end":405,"column_start":2,"column_end":60}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":426414,"byte_end":426417,"line_start":406,"line_end":406,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":426419,"byte_end":426435,"line_start":407,"line_end":407,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":426437,"byte_end":426440,"line_start":408,"line_end":408,"column_start":2,"column_end":5}},{"value":"/ - `&mut self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":426442,"byte_end":426459,"line_start":409,"line_end":409,"column_start":2,"column_end":19}},{"value":"/ - `n`: The number of bits to skip, before producing the next bit after","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":426461,"byte_end":426535,"line_start":410,"line_end":410,"column_start":2,"column_end":76}},{"value":"/   skips. If this overshoots the iterator’s remaining length, then the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":426537,"byte_end":426612,"line_start":411,"line_end":411,"column_start":2,"column_end":75}},{"value":"/   iterator is marked empty before returning `None`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":426614,"byte_end":426669,"line_start":412,"line_end":412,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":426671,"byte_end":426674,"line_start":413,"line_end":413,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":426676,"byte_end":426689,"line_start":414,"line_end":414,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":426691,"byte_end":426694,"line_start":415,"line_end":415,"column_start":2,"column_end":5}},{"value":"/ If `n` does not overshoot the iterator’s bounds, this produces the `n`th","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":426696,"byte_end":426774,"line_start":416,"line_end":416,"column_start":2,"column_end":78}},{"value":"/ bit after advancing the iterator to it, discarding the intermediate","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":426776,"byte_end":426847,"line_start":417,"line_end":417,"column_start":2,"column_end":73}},{"value":"/ bits.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":426849,"byte_end":426858,"line_start":418,"line_end":418,"column_start":2,"column_end":11}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":426860,"byte_end":426863,"line_start":419,"line_end":419,"column_start":2,"column_end":5}},{"value":"/ If `n` does overshoot the iterator’s bounds, this empties the iterator","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":426865,"byte_end":426941,"line_start":420,"line_end":420,"column_start":2,"column_end":76}},{"value":"/ and returns `None`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":426943,"byte_end":426966,"line_start":421,"line_end":421,"column_start":2,"column_end":25}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":426968,"byte_end":426971,"line_start":422,"line_end":422,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":426973,"byte_end":426987,"line_start":423,"line_end":423,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":426989,"byte_end":426992,"line_start":424,"line_end":424,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":426994,"byte_end":427005,"line_start":425,"line_end":425,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":427007,"byte_end":427034,"line_start":426,"line_end":426,"column_start":2,"column_end":29}},{"value":"/ let bv = bitvec![Msb0, u8; 0, 0, 0, 1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":427036,"byte_end":427079,"line_start":427,"line_end":427,"column_start":2,"column_end":45}},{"value":"/ let mut iter = bv.into_iter();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":427081,"byte_end":427115,"line_start":428,"line_end":428,"column_start":2,"column_end":36}},{"value":"/ assert_eq!(iter.len(), 4);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":427117,"byte_end":427147,"line_start":429,"line_end":429,"column_start":2,"column_end":32}},{"value":"/ assert!(iter.nth(3).unwrap());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":427149,"byte_end":427183,"line_start":430,"line_end":430,"column_start":2,"column_end":36}},{"value":"/ assert!(iter.nth(0).is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":427185,"byte_end":427220,"line_start":431,"line_end":431,"column_start":2,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":427222,"byte_end":427229,"line_start":432,"line_end":432,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":2804},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":427789,"byte_end":427793,"line_start":456,"line_end":456,"column_start":5,"column_end":9},"name":"last","qualname":"<IntoIter<O, T> as std::iter::Iterator>::last","value":"fn last(Self) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8605},"docs":" Consumes the iterator, returning only the last bit.","sig":null,"attributes":[{"value":"/ Consumes the iterator, returning only the last bit.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":427411,"byte_end":427466,"line_start":440,"line_end":440,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":427468,"byte_end":427471,"line_start":441,"line_end":441,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":427473,"byte_end":427487,"line_start":442,"line_end":442,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":427489,"byte_end":427492,"line_start":443,"line_end":443,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":427494,"byte_end":427505,"line_start":444,"line_end":444,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":427507,"byte_end":427534,"line_start":445,"line_end":445,"column_start":2,"column_end":29}},{"value":"/ let bv = bitvec![Msb0, u8; 0, 0, 0, 1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":427536,"byte_end":427579,"line_start":446,"line_end":446,"column_start":2,"column_end":45}},{"value":"/ assert!(bv.into_iter().last().unwrap());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":427581,"byte_end":427625,"line_start":447,"line_end":447,"column_start":2,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":427627,"byte_end":427634,"line_start":448,"line_end":448,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":427636,"byte_end":427639,"line_start":449,"line_end":449,"column_start":2,"column_end":5}},{"value":"/ Empty iterators return `None`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":427641,"byte_end":427674,"line_start":450,"line_end":450,"column_start":2,"column_end":35}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":427676,"byte_end":427679,"line_start":451,"line_end":451,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":427681,"byte_end":427692,"line_start":452,"line_end":452,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":427694,"byte_end":427721,"line_start":453,"line_end":453,"column_start":2,"column_end":29}},{"value":"/ assert!(bitvec![].into_iter().last().is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":427723,"byte_end":427775,"line_start":454,"line_end":454,"column_start":2,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":427777,"byte_end":427784,"line_start":455,"line_end":455,"column_start":2,"column_end":9}}]},{"kind":"Struct","id":{"krate":0,"index":2805},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":428256,"byte_end":428262,"line_start":474,"line_end":474,"column_start":12,"column_end":18},"name":"Splice","qualname":"::vec::iter::Splice","value":"Splice {  }","parent":null,"children":[{"krate":0,"index":2810},{"krate":0,"index":2811}],"decl_id":null,"docs":" A splicing iterator for `BitVec`.","sig":null,"attributes":[{"value":"* A splicing iterator for `BitVec`.\n\nThis removes a segment from the vector and inserts another bitstream into its\nspot. Any bits from the original `BitVec` after the removed segment are kept,\nafter the inserted bitstream.\n\nOnly the removed segment is available for iteration.\n\n# Type Parameters\n\n- `I: Iterator<Item=bool>`: Any bitstream. This will be used to fill the\n  removed span.\n**/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":427853,"byte_end":428244,"line_start":461,"line_end":473,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":2817},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":428528,"byte_end":428537,"line_start":482,"line_end":482,"column_start":5,"column_end":14},"name":"next_back","qualname":"<Splice as std::iter::DoubleEndedIterator>::next_back","value":"fn next_back<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8442},"children":[],"decl_id":{"krate":2,"index":8443},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2834},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":429029,"byte_end":429033,"line_start":498,"line_end":498,"column_start":5,"column_end":9},"name":"next","qualname":"<Splice as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8598},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2836},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":429565,"byte_end":429574,"line_start":512,"line_end":512,"column_start":5,"column_end":14},"name":"size_hint","qualname":"<Splice as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8602},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2837},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":429643,"byte_end":429648,"line_start":516,"line_end":516,"column_start":5,"column_end":10},"name":"count","qualname":"<Splice as std::iter::Iterator>::count","value":"fn count(Self) -> usize","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8603},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2838},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":429693,"byte_end":429696,"line_start":520,"line_end":520,"column_start":5,"column_end":8},"name":"nth","qualname":"<Splice as std::iter::Iterator>::nth","value":"fn nth<'_>(&'_ mut Self, usize) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8609},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2839},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":429770,"byte_end":429774,"line_start":524,"line_end":524,"column_start":5,"column_end":9},"name":"last","qualname":"<Splice as std::iter::Iterator>::last","value":"fn last(Self) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8605},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2845},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":429953,"byte_end":429957,"line_start":531,"line_end":531,"column_start":5,"column_end":9},"name":"drop","qualname":"<Splice as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2939},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":432628,"byte_end":432631,"line_start":84,"line_end":84,"column_start":5,"column_end":8},"name":"add","qualname":"<BitVec<O, T> as std::ops::Add>::add","value":"fn add(Self, Self) -> Self::Output","parent":{"krate":2,"index":3331},"children":[],"decl_id":{"krate":2,"index":3334},"docs":" Adds two `BitVec`s.","sig":null,"attributes":[{"value":"/ Adds two `BitVec`s.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":432103,"byte_end":432126,"line_start":60,"line_end":60,"column_start":2,"column_end":25}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":432128,"byte_end":432131,"line_start":61,"line_end":61,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":432133,"byte_end":432147,"line_start":62,"line_end":62,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":432149,"byte_end":432152,"line_start":63,"line_end":63,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":432154,"byte_end":432165,"line_start":64,"line_end":64,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":432167,"byte_end":432194,"line_start":65,"line_end":65,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":432196,"byte_end":432199,"line_start":66,"line_end":66,"column_start":2,"column_end":5}},{"value":"/ let a = bitvec![0, 1, 0, 1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":432201,"byte_end":432233,"line_start":67,"line_end":67,"column_start":2,"column_end":34}},{"value":"/ let b = bitvec![0, 0, 1, 1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":432235,"byte_end":432267,"line_start":68,"line_end":68,"column_start":2,"column_end":34}},{"value":"/ let s = a + b;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":432269,"byte_end":432287,"line_start":69,"line_end":69,"column_start":2,"column_end":20}},{"value":"/ assert_eq!(bitvec![1, 0, 0, 0], s);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":432289,"byte_end":432328,"line_start":70,"line_end":70,"column_start":2,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":432330,"byte_end":432337,"line_start":71,"line_end":71,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":432339,"byte_end":432342,"line_start":72,"line_end":72,"column_start":2,"column_end":5}},{"value":"/ This example demonstrates the addition of differently-sized `BitVec`s,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":432344,"byte_end":432418,"line_start":73,"line_end":73,"column_start":2,"column_end":76}},{"value":"/ and will overflow.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":432420,"byte_end":432442,"line_start":74,"line_end":74,"column_start":2,"column_end":24}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":432444,"byte_end":432447,"line_start":75,"line_end":75,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":432449,"byte_end":432460,"line_start":76,"line_end":76,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":432462,"byte_end":432489,"line_start":77,"line_end":77,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":432491,"byte_end":432494,"line_start":78,"line_end":78,"column_start":2,"column_end":5}},{"value":"/ let a = bitvec![1; 4];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":432496,"byte_end":432522,"line_start":79,"line_end":79,"column_start":2,"column_end":28}},{"value":"/ let b = bitvec![1; 1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":432524,"byte_end":432550,"line_start":80,"line_end":80,"column_start":2,"column_end":28}},{"value":"/ let s = b + a;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":432552,"byte_end":432570,"line_start":81,"line_end":81,"column_start":2,"column_end":20}},{"value":"/ assert_eq!(bitvec![1, 0, 0, 0, 0], s);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":432572,"byte_end":432614,"line_start":82,"line_end":82,"column_start":2,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":432616,"byte_end":432623,"line_start":83,"line_end":83,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":2943},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":433763,"byte_end":433773,"line_start":119,"line_end":119,"column_start":5,"column_end":15},"name":"add_assign","qualname":"<BitVec<O, T> as std::ops::AddAssign>::add_assign","value":"fn add_assign<'_>(&'_ mut Self, Self)","parent":{"krate":2,"index":3362},"children":[],"decl_id":{"krate":2,"index":3364},"docs":" Adds another `BitVec` into `self`.","sig":null,"attributes":[{"value":"/ Adds another `BitVec` into `self`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":433509,"byte_end":433547,"line_start":107,"line_end":107,"column_start":2,"column_end":40}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":433549,"byte_end":433552,"line_start":108,"line_end":108,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":433554,"byte_end":433568,"line_start":109,"line_end":109,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":433570,"byte_end":433573,"line_start":110,"line_end":110,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":433575,"byte_end":433586,"line_start":111,"line_end":111,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":433588,"byte_end":433615,"line_start":112,"line_end":112,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":433617,"byte_end":433620,"line_start":113,"line_end":113,"column_start":2,"column_end":5}},{"value":"/ let mut a = bitvec![1, 0, 0, 1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":433622,"byte_end":433658,"line_start":114,"line_end":114,"column_start":2,"column_end":38}},{"value":"/ let b = bitvec![0, 1, 1, 1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":433660,"byte_end":433692,"line_start":115,"line_end":115,"column_start":2,"column_end":34}},{"value":"/ a += b;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":433694,"byte_end":433705,"line_start":116,"line_end":116,"column_start":2,"column_end":13}},{"value":"/ assert_eq!(a, bitvec![1, 0, 0, 0, 0]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":433707,"byte_end":433749,"line_start":117,"line_end":117,"column_start":2,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":433751,"byte_end":433758,"line_start":118,"line_end":118,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":2952},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":435265,"byte_end":435271,"line_start":166,"line_end":166,"column_start":5,"column_end":11},"name":"bitand","qualname":"<BitVec<O, T> as std::ops::BitAnd>::bitand","value":"fn bitand(Self, I) -> Self::Output","parent":{"krate":2,"index":3390},"children":[],"decl_id":{"krate":2,"index":3393},"docs":" `AND`s a vector and a bitstream, producing a new vector.","sig":null,"attributes":[{"value":"/ `AND`s a vector and a bitstream, producing a new vector.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":434952,"byte_end":435012,"line_start":154,"line_end":154,"column_start":2,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":435014,"byte_end":435017,"line_start":155,"line_end":155,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":435019,"byte_end":435033,"line_start":156,"line_end":156,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":435035,"byte_end":435038,"line_start":157,"line_end":157,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":435040,"byte_end":435051,"line_start":158,"line_end":158,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":435053,"byte_end":435080,"line_start":159,"line_end":159,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":435082,"byte_end":435085,"line_start":160,"line_end":160,"column_start":2,"column_end":5}},{"value":"/ let lhs = bitvec![Msb0, u8; 0, 1, 0, 1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":435087,"byte_end":435131,"line_start":161,"line_end":161,"column_start":2,"column_end":46}},{"value":"/ let rhs = bitvec![Msb0, u8; 0, 0, 1, 1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":435133,"byte_end":435177,"line_start":162,"line_end":162,"column_start":2,"column_end":46}},{"value":"/ let and = lhs & rhs;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":435179,"byte_end":435203,"line_start":163,"line_end":163,"column_start":2,"column_end":26}},{"value":"/ assert_eq!(\"[0001]\", &format!(\"{}\", and));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":435205,"byte_end":435251,"line_start":164,"line_end":164,"column_start":2,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":435253,"byte_end":435260,"line_start":165,"line_end":165,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":2957},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":435963,"byte_end":435976,"line_start":189,"line_end":189,"column_start":5,"column_end":18},"name":"bitand_assign","qualname":"<BitVec<O, T> as std::ops::BitAndAssign>::bitand_assign","value":"fn bitand_assign<'_>(&'_ mut Self, I)","parent":{"krate":2,"index":3417},"children":[],"decl_id":{"krate":2,"index":3419},"docs":" `AND`s another bitstream into a vector.","sig":null,"attributes":[{"value":"/ `AND`s another bitstream into a vector.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":435683,"byte_end":435726,"line_start":178,"line_end":178,"column_start":2,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":435728,"byte_end":435731,"line_start":179,"line_end":179,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":435733,"byte_end":435747,"line_start":180,"line_end":180,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":435749,"byte_end":435752,"line_start":181,"line_end":181,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":435754,"byte_end":435765,"line_start":182,"line_end":182,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":435767,"byte_end":435794,"line_start":183,"line_end":183,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":435796,"byte_end":435799,"line_start":184,"line_end":184,"column_start":2,"column_end":5}},{"value":"/ let mut src  = bitvec![Msb0, u8; 0, 1, 0, 1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":435801,"byte_end":435850,"line_start":185,"line_end":185,"column_start":2,"column_end":51}},{"value":"/         src &= bitvec![Msb0, u8; 0, 0, 1, 1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":435852,"byte_end":435901,"line_start":186,"line_end":186,"column_start":2,"column_end":51}},{"value":"/ assert_eq!(\"[0001]\", &format!(\"{}\", src));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":435903,"byte_end":435949,"line_start":187,"line_end":187,"column_start":2,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":435951,"byte_end":435958,"line_start":188,"line_end":188,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":2963},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":436970,"byte_end":436975,"line_start":222,"line_end":222,"column_start":5,"column_end":10},"name":"bitor","qualname":"<BitVec<O, T> as std::ops::BitOr>::bitor","value":"fn bitor(Self, I) -> Self::Output","parent":{"krate":2,"index":3395},"children":[],"decl_id":{"krate":2,"index":3398},"docs":" `OR`s a vector and a bitstream, producing a new vector.","sig":null,"attributes":[{"value":"/ `OR`s a vector and a bitstream, producing a new vector.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":436679,"byte_end":436738,"line_start":210,"line_end":210,"column_start":2,"column_end":61}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":436740,"byte_end":436743,"line_start":211,"line_end":211,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":436745,"byte_end":436759,"line_start":212,"line_end":212,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":436761,"byte_end":436764,"line_start":213,"line_end":213,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":436766,"byte_end":436777,"line_start":214,"line_end":214,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":436779,"byte_end":436806,"line_start":215,"line_end":215,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":436808,"byte_end":436811,"line_start":216,"line_end":216,"column_start":2,"column_end":5}},{"value":"/ let lhs = bitvec![0, 1, 0, 1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":436813,"byte_end":436847,"line_start":217,"line_end":217,"column_start":2,"column_end":36}},{"value":"/ let rhs = bitvec![0, 0, 1, 1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":436849,"byte_end":436883,"line_start":218,"line_end":218,"column_start":2,"column_end":36}},{"value":"/ let or  = lhs | rhs;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":436885,"byte_end":436909,"line_start":219,"line_end":219,"column_start":2,"column_end":26}},{"value":"/ assert_eq!(\"[0111]\", &format!(\"{}\", or));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":436911,"byte_end":436956,"line_start":220,"line_end":220,"column_start":2,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":436958,"byte_end":436965,"line_start":221,"line_end":221,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":2968},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":437644,"byte_end":437656,"line_start":245,"line_end":245,"column_start":5,"column_end":17},"name":"bitor_assign","qualname":"<BitVec<O, T> as std::ops::BitOrAssign>::bitor_assign","value":"fn bitor_assign<'_>(&'_ mut Self, I)","parent":{"krate":2,"index":3421},"children":[],"decl_id":{"krate":2,"index":3423},"docs":" `OR`s another bitstream into a vector.","sig":null,"attributes":[{"value":"/ `OR`s another bitstream into a vector.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":437385,"byte_end":437427,"line_start":234,"line_end":234,"column_start":2,"column_end":44}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":437429,"byte_end":437432,"line_start":235,"line_end":235,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":437434,"byte_end":437448,"line_start":236,"line_end":236,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":437450,"byte_end":437453,"line_start":237,"line_end":237,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":437455,"byte_end":437466,"line_start":238,"line_end":238,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":437468,"byte_end":437495,"line_start":239,"line_end":239,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":437497,"byte_end":437500,"line_start":240,"line_end":240,"column_start":2,"column_end":5}},{"value":"/ let mut src  = bitvec![0, 1, 0, 1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":437502,"byte_end":437541,"line_start":241,"line_end":241,"column_start":2,"column_end":41}},{"value":"/         src |= bitvec![0, 0, 1, 1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":437543,"byte_end":437582,"line_start":242,"line_end":242,"column_start":2,"column_end":41}},{"value":"/ assert_eq!(\"[0111]\", &format!(\"{}\", src));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":437584,"byte_end":437630,"line_start":243,"line_end":243,"column_start":2,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":437632,"byte_end":437639,"line_start":244,"line_end":244,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":2974},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":438654,"byte_end":438660,"line_start":278,"line_end":278,"column_start":5,"column_end":11},"name":"bitxor","qualname":"<BitVec<O, T> as std::ops::BitXor>::bitxor","value":"fn bitxor(Self, I) -> Self::Output","parent":{"krate":2,"index":3400},"children":[],"decl_id":{"krate":2,"index":3403},"docs":" `XOR`s a vector and a bitstream, producing a new vector.","sig":null,"attributes":[{"value":"/ `XOR`s a vector and a bitstream, producing a new vector.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":438361,"byte_end":438421,"line_start":266,"line_end":266,"column_start":2,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":438423,"byte_end":438426,"line_start":267,"line_end":267,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":438428,"byte_end":438442,"line_start":268,"line_end":268,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":438444,"byte_end":438447,"line_start":269,"line_end":269,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":438449,"byte_end":438460,"line_start":270,"line_end":270,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":438462,"byte_end":438489,"line_start":271,"line_end":271,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":438491,"byte_end":438494,"line_start":272,"line_end":272,"column_start":2,"column_end":5}},{"value":"/ let lhs = bitvec![0, 1, 0, 1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":438496,"byte_end":438530,"line_start":273,"line_end":273,"column_start":2,"column_end":36}},{"value":"/ let rhs = bitvec![0, 0, 1, 1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":438532,"byte_end":438566,"line_start":274,"line_end":274,"column_start":2,"column_end":36}},{"value":"/ let xor = lhs ^ rhs;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":438568,"byte_end":438592,"line_start":275,"line_end":275,"column_start":2,"column_end":26}},{"value":"/ assert_eq!(\"[0110]\", &format!(\"{}\", xor));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":438594,"byte_end":438640,"line_start":276,"line_end":276,"column_start":2,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":438642,"byte_end":438649,"line_start":277,"line_end":277,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":2979},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":439332,"byte_end":439345,"line_start":301,"line_end":301,"column_start":5,"column_end":18},"name":"bitxor_assign","qualname":"<BitVec<O, T> as std::ops::BitXorAssign>::bitxor_assign","value":"fn bitxor_assign<'_>(&'_ mut Self, I)","parent":{"krate":2,"index":3425},"children":[],"decl_id":{"krate":2,"index":3427},"docs":" `XOR`s another bitstream into a vector.","sig":null,"attributes":[{"value":"/ `XOR`s another bitstream into a vector.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":439072,"byte_end":439115,"line_start":290,"line_end":290,"column_start":2,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":439117,"byte_end":439120,"line_start":291,"line_end":291,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":439122,"byte_end":439136,"line_start":292,"line_end":292,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":439138,"byte_end":439141,"line_start":293,"line_end":293,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":439143,"byte_end":439154,"line_start":294,"line_end":294,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":439156,"byte_end":439183,"line_start":295,"line_end":295,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":439185,"byte_end":439188,"line_start":296,"line_end":296,"column_start":2,"column_end":5}},{"value":"/ let mut src  = bitvec![0, 1, 0, 1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":439190,"byte_end":439229,"line_start":297,"line_end":297,"column_start":2,"column_end":41}},{"value":"/         src ^= bitvec![0, 0, 1, 1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":439231,"byte_end":439270,"line_start":298,"line_end":298,"column_start":2,"column_end":41}},{"value":"/ assert_eq!(\"[0110]\", &format!(\"{}\", src));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":439272,"byte_end":439318,"line_start":299,"line_end":299,"column_start":2,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":439320,"byte_end":439327,"line_start":300,"line_end":300,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":2984},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":440009,"byte_end":440014,"line_start":331,"line_end":331,"column_start":5,"column_end":10},"name":"deref","qualname":"<BitVec<O, T> as std::ops::Deref>::deref","value":"fn deref<'_>(&'_ Self) -> &'_ Self::Target","parent":{"krate":2,"index":3486},"children":[],"decl_id":{"krate":2,"index":3488},"docs":" Dereferences `&BitVec` down to `&BitSlice`.","sig":null,"attributes":[{"value":"/ Dereferences `&BitVec` down to `&BitSlice`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":439783,"byte_end":439830,"line_start":320,"line_end":320,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":439832,"byte_end":439835,"line_start":321,"line_end":321,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":439837,"byte_end":439851,"line_start":322,"line_end":322,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":439853,"byte_end":439856,"line_start":323,"line_end":323,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":439858,"byte_end":439869,"line_start":324,"line_end":324,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":439871,"byte_end":439898,"line_start":325,"line_end":325,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":439900,"byte_end":439903,"line_start":326,"line_end":326,"column_start":2,"column_end":5}},{"value":"/ let bv: BitVec = bitvec![1; 4];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":439905,"byte_end":439940,"line_start":327,"line_end":327,"column_start":2,"column_end":37}},{"value":"/ let bref: &BitSlice = &bv;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":439942,"byte_end":439972,"line_start":328,"line_end":328,"column_start":2,"column_end":32}},{"value":"/ assert!(bref[2]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":439974,"byte_end":439995,"line_start":329,"line_end":329,"column_start":2,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":439997,"byte_end":440004,"line_start":330,"line_end":330,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":2988},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":440545,"byte_end":440554,"line_start":355,"line_end":355,"column_start":5,"column_end":14},"name":"deref_mut","qualname":"<BitVec<O, T> as std::ops::DerefMut>::deref_mut","value":"fn deref_mut<'_>(&'_ mut Self) -> &'_ mut Self::Target","parent":{"krate":2,"index":3499},"children":[],"decl_id":{"krate":2,"index":3500},"docs":" Dereferences `&mut BitVec` down to `&mut BitSlice`.","sig":null,"attributes":[{"value":"/ Dereferences `&mut BitVec` down to `&mut BitSlice`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":440251,"byte_end":440306,"line_start":342,"line_end":342,"column_start":2,"column_end":57}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":440308,"byte_end":440311,"line_start":343,"line_end":343,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":440313,"byte_end":440327,"line_start":344,"line_end":344,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":440329,"byte_end":440332,"line_start":345,"line_end":345,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":440334,"byte_end":440345,"line_start":346,"line_end":346,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":440347,"byte_end":440374,"line_start":347,"line_end":347,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":440376,"byte_end":440379,"line_start":348,"line_end":348,"column_start":2,"column_end":5}},{"value":"/ let mut bv: BitVec = bitvec![0; 6];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":440381,"byte_end":440420,"line_start":349,"line_end":349,"column_start":2,"column_end":41}},{"value":"/ let bref: &mut BitSlice = &mut bv;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":440422,"byte_end":440460,"line_start":350,"line_end":350,"column_start":2,"column_end":40}},{"value":"/ assert!(!bref[5]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":440462,"byte_end":440484,"line_start":351,"line_end":351,"column_start":2,"column_end":24}},{"value":"/ bref.set(5, true);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":440486,"byte_end":440508,"line_start":352,"line_end":352,"column_start":2,"column_end":24}},{"value":"/ assert!(bref[5]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":440510,"byte_end":440531,"line_start":353,"line_end":353,"column_start":2,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":440533,"byte_end":440540,"line_start":354,"line_end":354,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":2992},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":440799,"byte_end":440803,"line_start":364,"line_end":364,"column_start":5,"column_end":9},"name":"drop","qualname":"<BitVec<O, T> as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":" Rebuild the interior `Vec` and let it run the deallocator.\n","sig":null,"attributes":[{"value":"/ Rebuild the interior `Vec` and let it run the deallocator.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":440732,"byte_end":440794,"line_start":363,"line_end":363,"column_start":2,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2997},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":441971,"byte_end":441976,"line_start":404,"line_end":404,"column_start":5,"column_end":10},"name":"index","qualname":"<BitVec<O, T> as std::ops::Index>::index","value":"fn index<'_>(&'_ Self, usize) -> &'_ Self::Output","parent":{"krate":2,"index":3571},"children":[],"decl_id":{"krate":2,"index":3574},"docs":" Looks up a single bit by semantic count.","sig":null,"attributes":[{"value":"/ Looks up a single bit by semantic count.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":441252,"byte_end":441296,"line_start":378,"line_end":378,"column_start":2,"column_end":46}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":441298,"byte_end":441301,"line_start":379,"line_end":379,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":441303,"byte_end":441317,"line_start":380,"line_end":380,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":441319,"byte_end":441322,"line_start":381,"line_end":381,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":441324,"byte_end":441335,"line_start":382,"line_end":382,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":441337,"byte_end":441364,"line_start":383,"line_end":383,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":441366,"byte_end":441369,"line_start":384,"line_end":384,"column_start":2,"column_end":5}},{"value":"/ let bv = bitvec![Msb0, u8; 0, 0, 0, 0, 0, 0, 0, 0, 1, 0];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":441371,"byte_end":441432,"line_start":385,"line_end":385,"column_start":2,"column_end":63}},{"value":"/ assert!(!bv[7]); // ---------------------------------^  |  |","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":441434,"byte_end":441498,"line_start":386,"line_end":386,"column_start":2,"column_end":66}},{"value":"/ assert!( bv[8]); // ------------------------------------^  |","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":441500,"byte_end":441564,"line_start":387,"line_end":387,"column_start":2,"column_end":66}},{"value":"/ assert!(!bv[9]); // ---------------------------------------^","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":441566,"byte_end":441630,"line_start":388,"line_end":388,"column_start":2,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":441632,"byte_end":441639,"line_start":389,"line_end":389,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":441641,"byte_end":441644,"line_start":390,"line_end":390,"column_start":2,"column_end":5}},{"value":"/ If the index is greater than or equal to the length, indexing will","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":441646,"byte_end":441716,"line_start":391,"line_end":391,"column_start":2,"column_end":72}},{"value":"/ panic.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":441718,"byte_end":441728,"line_start":392,"line_end":392,"column_start":2,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":441730,"byte_end":441733,"line_start":393,"line_end":393,"column_start":2,"column_end":5}},{"value":"/ The below test will panic when accessing index 1, as only index 0 is","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":441735,"byte_end":441807,"line_start":394,"line_end":394,"column_start":2,"column_end":74}},{"value":"/ valid.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":441809,"byte_end":441819,"line_start":395,"line_end":395,"column_start":2,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":441821,"byte_end":441824,"line_start":396,"line_end":396,"column_start":2,"column_end":5}},{"value":"/ ```rust,should_panic","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":441826,"byte_end":441850,"line_start":397,"line_end":397,"column_start":2,"column_end":26}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":441852,"byte_end":441879,"line_start":398,"line_end":398,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":441881,"byte_end":441884,"line_start":399,"line_end":399,"column_start":2,"column_end":5}},{"value":"/ let mut bv: BitVec = BitVec::new();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":441886,"byte_end":441925,"line_start":400,"line_end":400,"column_start":2,"column_end":41}},{"value":"/ bv.push(true);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":441927,"byte_end":441945,"line_start":401,"line_end":401,"column_start":2,"column_end":20}},{"value":"/ bv[1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":441947,"byte_end":441957,"line_start":402,"line_end":402,"column_start":2,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":441959,"byte_end":441966,"line_start":403,"line_end":403,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":3002},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":442171,"byte_end":442176,"line_start":413,"line_end":413,"column_start":5,"column_end":10},"name":"index","qualname":"<BitVec<O, T> as std::ops::Index>::index","value":"fn index<'_>(&'_ Self, Range<usize>) -> &'_ Self::Output","parent":{"krate":2,"index":3571},"children":[],"decl_id":{"krate":2,"index":3574},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3006},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":442347,"byte_end":442356,"line_start":420,"line_end":420,"column_start":5,"column_end":14},"name":"index_mut","qualname":"<BitVec<O, T> as std::ops::IndexMut>::index_mut","value":"fn index_mut<'_>(&'_ mut Self, Range<usize>) -> &'_ mut Self::Output","parent":{"krate":2,"index":3575},"children":[],"decl_id":{"krate":2,"index":3577},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3011},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":442576,"byte_end":442581,"line_start":429,"line_end":429,"column_start":5,"column_end":10},"name":"index","qualname":"<BitVec<O, T> as std::ops::Index>::index","value":"fn index<'_>(&'_ Self, RangeFrom<usize>) -> &'_ Self::Output","parent":{"krate":2,"index":3571},"children":[],"decl_id":{"krate":2,"index":3574},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3015},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":442760,"byte_end":442769,"line_start":436,"line_end":436,"column_start":5,"column_end":14},"name":"index_mut","qualname":"<BitVec<O, T> as std::ops::IndexMut>::index_mut","value":"fn index_mut<'_>(&'_ mut Self, RangeFrom<usize>) -> &'_ mut Self::Output","parent":{"krate":2,"index":3575},"children":[],"decl_id":{"krate":2,"index":3577},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3020},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":442986,"byte_end":442991,"line_start":445,"line_end":445,"column_start":5,"column_end":10},"name":"index","qualname":"<BitVec<O, T> as std::ops::Index>::index","value":"fn index<'_>(&'_ Self, RangeFull) -> &'_ Self::Output","parent":{"krate":2,"index":3571},"children":[],"decl_id":{"krate":2,"index":3574},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3024},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":443144,"byte_end":443153,"line_start":452,"line_end":452,"column_start":5,"column_end":14},"name":"index_mut","qualname":"<BitVec<O, T> as std::ops::IndexMut>::index_mut","value":"fn index_mut<'_>(&'_ mut Self, RangeFull) -> &'_ mut Self::Output","parent":{"krate":2,"index":3575},"children":[],"decl_id":{"krate":2,"index":3577},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3029},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":443359,"byte_end":443364,"line_start":461,"line_end":461,"column_start":5,"column_end":10},"name":"index","qualname":"<BitVec<O, T> as std::ops::Index>::index","value":"fn index<'_>(&'_ Self, RangeInclusive<usize>) -> &'_ Self::Output","parent":{"krate":2,"index":3571},"children":[],"decl_id":{"krate":2,"index":3574},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3033},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":443553,"byte_end":443562,"line_start":468,"line_end":468,"column_start":5,"column_end":14},"name":"index_mut","qualname":"<BitVec<O, T> as std::ops::IndexMut>::index_mut","value":"fn index_mut<'_>(&'_ mut Self, RangeInclusive<usize>) -> &'_ mut Self::Output","parent":{"krate":2,"index":3575},"children":[],"decl_id":{"krate":2,"index":3577},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3038},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":443789,"byte_end":443794,"line_start":477,"line_end":477,"column_start":5,"column_end":10},"name":"index","qualname":"<BitVec<O, T> as std::ops::Index>::index","value":"fn index<'_>(&'_ Self, RangeTo<usize>) -> &'_ Self::Output","parent":{"krate":2,"index":3571},"children":[],"decl_id":{"krate":2,"index":3574},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3042},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":443969,"byte_end":443978,"line_start":484,"line_end":484,"column_start":5,"column_end":14},"name":"index_mut","qualname":"<BitVec<O, T> as std::ops::IndexMut>::index_mut","value":"fn index_mut<'_>(&'_ mut Self, RangeTo<usize>) -> &'_ mut Self::Output","parent":{"krate":2,"index":3575},"children":[],"decl_id":{"krate":2,"index":3577},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3047},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":444207,"byte_end":444212,"line_start":493,"line_end":493,"column_start":5,"column_end":10},"name":"index","qualname":"<BitVec<O, T> as std::ops::Index>::index","value":"fn index<'_>(&'_ Self, RangeToInclusive<usize>) -> &'_ Self::Output","parent":{"krate":2,"index":3571},"children":[],"decl_id":{"krate":2,"index":3574},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3051},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":444405,"byte_end":444414,"line_start":500,"line_end":500,"column_start":5,"column_end":14},"name":"index_mut","qualname":"<BitVec<O, T> as std::ops::IndexMut>::index_mut","value":"fn index_mut<'_>(&'_ mut Self, RangeToInclusive<usize>)\n-> &'_ mut Self::Output","parent":{"krate":2,"index":3575},"children":[],"decl_id":{"krate":2,"index":3577},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3056},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":445332,"byte_end":445335,"line_start":530,"line_end":530,"column_start":5,"column_end":8},"name":"neg","qualname":"<BitVec<O, T> as std::ops::Neg>::neg","value":"fn neg(Self) -> Self::Output","parent":{"krate":2,"index":3358},"children":[],"decl_id":{"krate":2,"index":3360},"docs":" Numerically negates a `BitVec` using 2’s-complement arithmetic.","sig":null,"attributes":[{"value":"/ Numerically negates a `BitVec` using 2’s-complement arithmetic.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":445086,"byte_end":445155,"line_start":519,"line_end":519,"column_start":2,"column_end":69}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":445157,"byte_end":445160,"line_start":520,"line_end":520,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":445162,"byte_end":445176,"line_start":521,"line_end":521,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":445178,"byte_end":445181,"line_start":522,"line_end":522,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":445183,"byte_end":445194,"line_start":523,"line_end":523,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":445196,"byte_end":445223,"line_start":524,"line_end":524,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":445225,"byte_end":445228,"line_start":525,"line_end":525,"column_start":2,"column_end":5}},{"value":"/ let bv = bitvec![0, 1, 1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":445230,"byte_end":445260,"line_start":526,"line_end":526,"column_start":2,"column_end":32}},{"value":"/ let ne = -bv;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":445262,"byte_end":445279,"line_start":527,"line_end":527,"column_start":2,"column_end":19}},{"value":"/ assert_eq!(ne, bitvec![1, 0, 1]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":445281,"byte_end":445318,"line_start":528,"line_end":528,"column_start":2,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":445320,"byte_end":445327,"line_start":529,"line_end":529,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":3061},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":445997,"byte_end":446000,"line_start":560,"line_end":560,"column_start":5,"column_end":8},"name":"not","qualname":"<BitVec<O, T> as std::ops::Not>::not","value":"fn not(Self) -> Self::Output","parent":{"krate":2,"index":3383},"children":[],"decl_id":{"krate":2,"index":3385},"docs":" Inverts all bits in the vector.","sig":null,"attributes":[{"value":"/ Inverts all bits in the vector.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":445744,"byte_end":445779,"line_start":549,"line_end":549,"column_start":2,"column_end":37}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":445781,"byte_end":445784,"line_start":550,"line_end":550,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":445786,"byte_end":445800,"line_start":551,"line_end":551,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":445802,"byte_end":445805,"line_start":552,"line_end":552,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":445807,"byte_end":445818,"line_start":553,"line_end":553,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":445820,"byte_end":445847,"line_start":554,"line_end":554,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":445849,"byte_end":445852,"line_start":555,"line_end":555,"column_start":2,"column_end":5}},{"value":"/ let bv: BitVec<Msb0, u32> = BitVec::from(&[0u32] as &[u32]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":445854,"byte_end":445918,"line_start":556,"line_end":556,"column_start":2,"column_end":66}},{"value":"/ let flip = !bv;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":445920,"byte_end":445939,"line_start":557,"line_end":557,"column_start":2,"column_end":21}},{"value":"/ assert_eq!(!0u32, flip.as_slice()[0]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":445941,"byte_end":445983,"line_start":558,"line_end":558,"column_start":2,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":445985,"byte_end":445992,"line_start":559,"line_end":559,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":3066},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":447822,"byte_end":447825,"line_start":617,"line_end":617,"column_start":5,"column_end":8},"name":"shl","qualname":"<BitVec<O, T> as std::ops::Shl>::shl","value":"fn shl(Self, usize) -> Self::Output","parent":{"krate":2,"index":3405},"children":[],"decl_id":{"krate":2,"index":3408},"docs":" Shifts a `BitVec` to the left, shortening it.","sig":null,"attributes":[{"value":"/ Shifts a `BitVec` to the left, shortening it.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":447355,"byte_end":447404,"line_start":601,"line_end":601,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":447406,"byte_end":447409,"line_start":602,"line_end":602,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":447411,"byte_end":447425,"line_start":603,"line_end":603,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":447427,"byte_end":447430,"line_start":604,"line_end":604,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":447432,"byte_end":447443,"line_start":605,"line_end":605,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":447445,"byte_end":447472,"line_start":606,"line_end":606,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":447474,"byte_end":447477,"line_start":607,"line_end":607,"column_start":2,"column_end":5}},{"value":"/ let bv = bitvec![Msb0, u8; 0, 0, 0, 1, 1, 1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":447479,"byte_end":447528,"line_start":608,"line_end":608,"column_start":2,"column_end":51}},{"value":"/ assert_eq!(\"[000111]\", &format!(\"{}\", bv));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":447530,"byte_end":447577,"line_start":609,"line_end":609,"column_start":2,"column_end":49}},{"value":"/ assert_eq!(0b0001_1100, bv.as_slice()[0]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":447579,"byte_end":447625,"line_start":610,"line_end":610,"column_start":2,"column_end":48}},{"value":"/ assert_eq!(bv.len(), 6);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":447627,"byte_end":447655,"line_start":611,"line_end":611,"column_start":2,"column_end":30}},{"value":"/ let ls = bv << 2usize;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":447657,"byte_end":447683,"line_start":612,"line_end":612,"column_start":2,"column_end":28}},{"value":"/ assert_eq!(\"[0111]\", &format!(\"{}\", ls));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":447685,"byte_end":447730,"line_start":613,"line_end":613,"column_start":2,"column_end":47}},{"value":"/ assert_eq!(0b0111_0000, ls.as_slice()[0]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":447732,"byte_end":447778,"line_start":614,"line_end":614,"column_start":2,"column_end":48}},{"value":"/ assert_eq!(ls.len(), 4);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":447780,"byte_end":447808,"line_start":615,"line_end":615,"column_start":2,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":447810,"byte_end":447817,"line_start":616,"line_end":616,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":3070},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":449567,"byte_end":449577,"line_start":670,"line_end":670,"column_start":5,"column_end":15},"name":"shl_assign","qualname":"<BitVec<O, T> as std::ops::ShlAssign>::shl_assign","value":"fn shl_assign<'_>(&'_ mut Self, usize)","parent":{"krate":2,"index":3429},"children":[],"decl_id":{"krate":2,"index":3431},"docs":" Shifts a `BitVec` to the left in place, shortening it.","sig":null,"attributes":[{"value":"/ Shifts a `BitVec` to the left in place, shortening it.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":449100,"byte_end":449158,"line_start":654,"line_end":654,"column_start":2,"column_end":60}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":449160,"byte_end":449163,"line_start":655,"line_end":655,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":449165,"byte_end":449179,"line_start":656,"line_end":656,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":449181,"byte_end":449184,"line_start":657,"line_end":657,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":449186,"byte_end":449197,"line_start":658,"line_end":658,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":449199,"byte_end":449226,"line_start":659,"line_end":659,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":449228,"byte_end":449231,"line_start":660,"line_end":660,"column_start":2,"column_end":5}},{"value":"/ let mut bv = bitvec![Lsb0, u8; 0, 0, 0, 1, 1, 1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":449233,"byte_end":449286,"line_start":661,"line_end":661,"column_start":2,"column_end":55}},{"value":"/ assert_eq!(\"[000111]\", &format!(\"{}\", bv));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":449288,"byte_end":449335,"line_start":662,"line_end":662,"column_start":2,"column_end":49}},{"value":"/ assert_eq!(0b0011_1000, bv.as_slice()[0]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":449337,"byte_end":449383,"line_start":663,"line_end":663,"column_start":2,"column_end":48}},{"value":"/ assert_eq!(bv.len(), 6);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":449385,"byte_end":449413,"line_start":664,"line_end":664,"column_start":2,"column_end":30}},{"value":"/ bv <<= 2;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":449415,"byte_end":449428,"line_start":665,"line_end":665,"column_start":2,"column_end":15}},{"value":"/ assert_eq!(\"[0111]\", &format!(\"{}\", bv));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":449430,"byte_end":449475,"line_start":666,"line_end":666,"column_start":2,"column_end":47}},{"value":"/ assert_eq!(0b0000_1110, bv.as_slice()[0]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":449477,"byte_end":449523,"line_start":667,"line_end":667,"column_start":2,"column_end":48}},{"value":"/ assert_eq!(bv.len(), 4);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":449525,"byte_end":449553,"line_start":668,"line_end":668,"column_start":2,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":449555,"byte_end":449562,"line_start":669,"line_end":669,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":3075},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":451624,"byte_end":451627,"line_start":739,"line_end":739,"column_start":5,"column_end":8},"name":"shr","qualname":"<BitVec<O, T> as std::ops::Shr>::shr","value":"fn shr(Self, usize) -> Self::Output","parent":{"krate":2,"index":3411},"children":[],"decl_id":{"krate":2,"index":3414},"docs":" Shifts a `BitVec` to the right, lengthening it and filling the front\n with 0.","sig":null,"attributes":[{"value":"/ Shifts a `BitVec` to the right, lengthening it and filling the front","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":451117,"byte_end":451189,"line_start":722,"line_end":722,"column_start":2,"column_end":74}},{"value":"/ with 0.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":451191,"byte_end":451202,"line_start":723,"line_end":723,"column_start":2,"column_end":13}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":451204,"byte_end":451207,"line_start":724,"line_end":724,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":451209,"byte_end":451223,"line_start":725,"line_end":725,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":451225,"byte_end":451228,"line_start":726,"line_end":726,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":451230,"byte_end":451241,"line_start":727,"line_end":727,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":451243,"byte_end":451270,"line_start":728,"line_end":728,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":451272,"byte_end":451275,"line_start":729,"line_end":729,"column_start":2,"column_end":5}},{"value":"/ let bv = bitvec![Msb0, u8; 0, 0, 0, 1, 1, 1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":451277,"byte_end":451326,"line_start":730,"line_end":730,"column_start":2,"column_end":51}},{"value":"/ assert_eq!(\"[000111]\", &format!(\"{}\", bv));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":451328,"byte_end":451375,"line_start":731,"line_end":731,"column_start":2,"column_end":49}},{"value":"/ assert_eq!(0b0001_1100, bv.as_slice()[0]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":451377,"byte_end":451423,"line_start":732,"line_end":732,"column_start":2,"column_end":48}},{"value":"/ assert_eq!(bv.len(), 6);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":451425,"byte_end":451453,"line_start":733,"line_end":733,"column_start":2,"column_end":30}},{"value":"/ let rs = bv >> 2usize;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":451455,"byte_end":451481,"line_start":734,"line_end":734,"column_start":2,"column_end":28}},{"value":"/ assert_eq!(\"[00000111]\", &format!(\"{}\", rs));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":451483,"byte_end":451532,"line_start":735,"line_end":735,"column_start":2,"column_end":51}},{"value":"/ assert_eq!(0b0000_0111, rs.as_slice()[0]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":451534,"byte_end":451580,"line_start":736,"line_end":736,"column_start":2,"column_end":48}},{"value":"/ assert_eq!(rs.len(), 8);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":451582,"byte_end":451610,"line_start":737,"line_end":737,"column_start":2,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":451612,"byte_end":451619,"line_start":738,"line_end":738,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":3079},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":453375,"byte_end":453385,"line_start":793,"line_end":793,"column_start":5,"column_end":15},"name":"shr_assign","qualname":"<BitVec<O, T> as std::ops::ShrAssign>::shr_assign","value":"fn shr_assign<'_>(&'_ mut Self, usize)","parent":{"krate":2,"index":3434},"children":[],"decl_id":{"krate":2,"index":3436},"docs":" Shifts a `BitVec` to the right in place, lengthening it and filling the\n front with 0.","sig":null,"attributes":[{"value":"/ Shifts a `BitVec` to the right in place, lengthening it and filling the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":452868,"byte_end":452943,"line_start":776,"line_end":776,"column_start":2,"column_end":77}},{"value":"/ front with 0.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":452945,"byte_end":452962,"line_start":777,"line_end":777,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":452964,"byte_end":452967,"line_start":778,"line_end":778,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":452969,"byte_end":452983,"line_start":779,"line_end":779,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":452985,"byte_end":452988,"line_start":780,"line_end":780,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":452990,"byte_end":453001,"line_start":781,"line_end":781,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":453003,"byte_end":453030,"line_start":782,"line_end":782,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":453032,"byte_end":453035,"line_start":783,"line_end":783,"column_start":2,"column_end":5}},{"value":"/ let mut bv = bitvec![Lsb0, u8; 0, 0, 0, 1, 1, 1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":453037,"byte_end":453090,"line_start":784,"line_end":784,"column_start":2,"column_end":55}},{"value":"/ assert_eq!(\"[000111]\", &format!(\"{}\", bv));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":453092,"byte_end":453139,"line_start":785,"line_end":785,"column_start":2,"column_end":49}},{"value":"/ assert_eq!(0b0011_1000, bv.as_slice()[0]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":453141,"byte_end":453187,"line_start":786,"line_end":786,"column_start":2,"column_end":48}},{"value":"/ assert_eq!(bv.len(), 6);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":453189,"byte_end":453217,"line_start":787,"line_end":787,"column_start":2,"column_end":30}},{"value":"/ bv >>= 2;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":453219,"byte_end":453232,"line_start":788,"line_end":788,"column_start":2,"column_end":15}},{"value":"/ assert_eq!(\"[00000111]\", &format!(\"{}\", bv));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":453234,"byte_end":453283,"line_start":789,"line_end":789,"column_start":2,"column_end":51}},{"value":"/ assert_eq!(0b1110_0000, bv.as_slice()[0]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":453285,"byte_end":453331,"line_start":790,"line_end":790,"column_start":2,"column_end":48}},{"value":"/ assert_eq!(bv.len(), 8);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":453333,"byte_end":453361,"line_start":791,"line_end":791,"column_start":2,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":453363,"byte_end":453370,"line_start":792,"line_end":792,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":3084},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":455946,"byte_end":455949,"line_start":876,"line_end":876,"column_start":5,"column_end":8},"name":"sub","qualname":"<BitVec<O, T> as std::ops::Sub>::sub","value":"fn sub(Self, Self) -> Self::Output","parent":{"krate":2,"index":3336},"children":[],"decl_id":{"krate":2,"index":3339},"docs":" Subtracts one `BitVec` from another.","sig":null,"attributes":[{"value":"/ Subtracts one `BitVec` from another.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":455178,"byte_end":455218,"line_start":840,"line_end":840,"column_start":2,"column_end":42}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":455220,"byte_end":455223,"line_start":841,"line_end":841,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":455225,"byte_end":455239,"line_start":842,"line_end":842,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":455241,"byte_end":455244,"line_start":843,"line_end":843,"column_start":2,"column_end":5}},{"value":"/ Minuend larger than subtrahend, positive difference.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":455246,"byte_end":455302,"line_start":844,"line_end":844,"column_start":2,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":455304,"byte_end":455307,"line_start":845,"line_end":845,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":455309,"byte_end":455320,"line_start":846,"line_end":846,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":455322,"byte_end":455349,"line_start":847,"line_end":847,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":455351,"byte_end":455354,"line_start":848,"line_end":848,"column_start":2,"column_end":5}},{"value":"/ let a = bitvec![1, 0];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":455356,"byte_end":455382,"line_start":849,"line_end":849,"column_start":2,"column_end":28}},{"value":"/ let b = bitvec![   1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":455384,"byte_end":455410,"line_start":850,"line_end":850,"column_start":2,"column_end":28}},{"value":"/ let c = a - b;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":455412,"byte_end":455430,"line_start":851,"line_end":851,"column_start":2,"column_end":20}},{"value":"/ assert_eq!(bitvec![0, 1], c);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":455432,"byte_end":455465,"line_start":852,"line_end":852,"column_start":2,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":455467,"byte_end":455474,"line_start":853,"line_end":853,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":455476,"byte_end":455479,"line_start":854,"line_end":854,"column_start":2,"column_end":5}},{"value":"/ Minuend smaller than subtrahend, negative difference.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":455481,"byte_end":455538,"line_start":855,"line_end":855,"column_start":2,"column_end":59}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":455540,"byte_end":455543,"line_start":856,"line_end":856,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":455545,"byte_end":455556,"line_start":857,"line_end":857,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":455558,"byte_end":455585,"line_start":858,"line_end":858,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":455587,"byte_end":455590,"line_start":859,"line_end":859,"column_start":2,"column_end":5}},{"value":"/ let a = bitvec![   1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":455592,"byte_end":455618,"line_start":860,"line_end":860,"column_start":2,"column_end":28}},{"value":"/ let b = bitvec![1, 0];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":455620,"byte_end":455646,"line_start":861,"line_end":861,"column_start":2,"column_end":28}},{"value":"/ let c = a - b;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":455648,"byte_end":455666,"line_start":862,"line_end":862,"column_start":2,"column_end":20}},{"value":"/ assert_eq!(bitvec![1, 1], c);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":455668,"byte_end":455701,"line_start":863,"line_end":863,"column_start":2,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":455703,"byte_end":455710,"line_start":864,"line_end":864,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":455712,"byte_end":455715,"line_start":865,"line_end":865,"column_start":2,"column_end":5}},{"value":"/ Subtraction from self is correctly handled.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":455717,"byte_end":455764,"line_start":866,"line_end":866,"column_start":2,"column_end":49}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":455766,"byte_end":455769,"line_start":867,"line_end":867,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":455771,"byte_end":455782,"line_start":868,"line_end":868,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":455784,"byte_end":455811,"line_start":869,"line_end":869,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":455813,"byte_end":455816,"line_start":870,"line_end":870,"column_start":2,"column_end":5}},{"value":"/ let a = bitvec![0, 1, 1, 0];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":455818,"byte_end":455850,"line_start":871,"line_end":871,"column_start":2,"column_end":34}},{"value":"/ let b = a.clone();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":455852,"byte_end":455874,"line_start":872,"line_end":872,"column_start":2,"column_end":24}},{"value":"/ let c = a - b;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":455876,"byte_end":455894,"line_start":873,"line_end":873,"column_start":2,"column_end":20}},{"value":"/ assert!(c.not_any(), \"{:?}\", c);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":455896,"byte_end":455932,"line_start":874,"line_end":874,"column_start":2,"column_end":38}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":455934,"byte_end":455941,"line_start":875,"line_end":875,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":3088},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":457079,"byte_end":457089,"line_start":910,"line_end":910,"column_start":5,"column_end":15},"name":"sub_assign","qualname":"<BitVec<O, T> as std::ops::SubAssign>::sub_assign","value":"fn sub_assign<'_>(&'_ mut Self, Self)","parent":{"krate":2,"index":3366},"children":[],"decl_id":{"krate":2,"index":3368},"docs":" Subtracts another `BitVec` from `self`.","sig":null,"attributes":[{"value":"/ Subtracts another `BitVec` from `self`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":456744,"byte_end":456787,"line_start":897,"line_end":897,"column_start":2,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":456789,"byte_end":456792,"line_start":898,"line_end":898,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":456794,"byte_end":456808,"line_start":899,"line_end":899,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":456810,"byte_end":456813,"line_start":900,"line_end":900,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":456815,"byte_end":456826,"line_start":901,"line_end":901,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":456828,"byte_end":456855,"line_start":902,"line_end":902,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":456857,"byte_end":456860,"line_start":903,"line_end":903,"column_start":2,"column_end":5}},{"value":"/ let a = bitvec![0, 0, 0, 1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":456862,"byte_end":456894,"line_start":904,"line_end":904,"column_start":2,"column_end":34}},{"value":"/ let b = bitvec![0, 0, 0, 0];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":456896,"byte_end":456928,"line_start":905,"line_end":905,"column_start":2,"column_end":34}},{"value":"/ let c = a - b;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":456930,"byte_end":456948,"line_start":906,"line_end":906,"column_start":2,"column_end":20}},{"value":"/ assert_eq!(c, bitvec![0, 0, 0, 1]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":456950,"byte_end":456989,"line_start":907,"line_end":907,"column_start":2,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":456991,"byte_end":456998,"line_start":908,"line_end":908,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":3160},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":458918,"byte_end":458924,"line_start":66,"line_end":66,"column_start":5,"column_end":11},"name":"borrow","qualname":"<BitVec<O, T> as std::borrow::Borrow>::borrow","value":"fn borrow<'_>(&'_ Self) -> &'_ BitSlice<O, T>","parent":{"krate":2,"index":2857},"children":[],"decl_id":{"krate":2,"index":2859},"docs":" Borrows the `BitVec` as a `BitSlice`.","sig":null,"attributes":[{"value":"/ Borrows the `BitVec` as a `BitSlice`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":458559,"byte_end":458600,"line_start":46,"line_end":46,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":458602,"byte_end":458605,"line_start":47,"line_end":47,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":458607,"byte_end":458623,"line_start":48,"line_end":48,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":458625,"byte_end":458628,"line_start":49,"line_end":49,"column_start":2,"column_end":5}},{"value":"/ - `&self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":458630,"byte_end":458643,"line_start":50,"line_end":50,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":458645,"byte_end":458648,"line_start":51,"line_end":51,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":458650,"byte_end":458663,"line_start":52,"line_end":52,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":458665,"byte_end":458668,"line_start":53,"line_end":53,"column_start":2,"column_end":5}},{"value":"/ A borrowed `BitSlice` of the vector.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":458670,"byte_end":458710,"line_start":54,"line_end":54,"column_start":2,"column_end":42}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":458712,"byte_end":458715,"line_start":55,"line_end":55,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":458717,"byte_end":458731,"line_start":56,"line_end":56,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":458733,"byte_end":458736,"line_start":57,"line_end":57,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":458738,"byte_end":458749,"line_start":58,"line_end":58,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":458751,"byte_end":458778,"line_start":59,"line_end":59,"column_start":2,"column_end":29}},{"value":"/ use std::borrow::Borrow;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":458780,"byte_end":458808,"line_start":60,"line_end":60,"column_start":2,"column_end":30}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":458810,"byte_end":458813,"line_start":61,"line_end":61,"column_start":2,"column_end":5}},{"value":"/ let bv = bitvec![0; 13];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":458815,"byte_end":458843,"line_start":62,"line_end":62,"column_start":2,"column_end":30}},{"value":"/ let bs: &BitSlice = bv.borrow();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":458845,"byte_end":458881,"line_start":63,"line_end":63,"column_start":2,"column_end":38}},{"value":"/ assert!(!bs[10]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":458883,"byte_end":458904,"line_start":64,"line_end":64,"column_start":2,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":458906,"byte_end":458913,"line_start":65,"line_end":65,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":3164},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":459571,"byte_end":459581,"line_start":96,"line_end":96,"column_start":5,"column_end":15},"name":"borrow_mut","qualname":"<BitVec<O, T> as std::borrow::BorrowMut>::borrow_mut","value":"fn borrow_mut<'_>(&'_ mut Self) -> &'_ mut BitSlice<O, T>","parent":{"krate":2,"index":2860},"children":[],"decl_id":{"krate":2,"index":2862},"docs":" Mutably borrows the `BitVec` as a `BitSlice`.","sig":null,"attributes":[{"value":"/ Mutably borrows the `BitVec` as a `BitSlice`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":459132,"byte_end":459181,"line_start":74,"line_end":74,"column_start":2,"column_end":51}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":459183,"byte_end":459186,"line_start":75,"line_end":75,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":459188,"byte_end":459204,"line_start":76,"line_end":76,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":459206,"byte_end":459209,"line_start":77,"line_end":77,"column_start":2,"column_end":5}},{"value":"/ - `&mut self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":459211,"byte_end":459228,"line_start":78,"line_end":78,"column_start":2,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":459230,"byte_end":459233,"line_start":79,"line_end":79,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":459235,"byte_end":459248,"line_start":80,"line_end":80,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":459250,"byte_end":459253,"line_start":81,"line_end":81,"column_start":2,"column_end":5}},{"value":"/ A mutably borrowed `BitSlice` of the vector.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":459255,"byte_end":459303,"line_start":82,"line_end":82,"column_start":2,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":459305,"byte_end":459308,"line_start":83,"line_end":83,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":459310,"byte_end":459324,"line_start":84,"line_end":84,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":459326,"byte_end":459329,"line_start":85,"line_end":85,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":459331,"byte_end":459342,"line_start":86,"line_end":86,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":459344,"byte_end":459371,"line_start":87,"line_end":87,"column_start":2,"column_end":29}},{"value":"/ use std::borrow::BorrowMut;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":459373,"byte_end":459404,"line_start":88,"line_end":88,"column_start":2,"column_end":33}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":459406,"byte_end":459409,"line_start":89,"line_end":89,"column_start":2,"column_end":5}},{"value":"/ let mut bv = bitvec![0; 13];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":459411,"byte_end":459443,"line_start":90,"line_end":90,"column_start":2,"column_end":34}},{"value":"/ let bs: &mut BitSlice = bv.borrow_mut();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":459445,"byte_end":459489,"line_start":91,"line_end":91,"column_start":2,"column_end":46}},{"value":"/ assert!(!bs[10]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":459491,"byte_end":459512,"line_start":92,"line_end":92,"column_start":2,"column_end":23}},{"value":"/ bs.set(10, true);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":459514,"byte_end":459535,"line_start":93,"line_end":93,"column_start":2,"column_end":23}},{"value":"/ assert!(bs[10]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":459537,"byte_end":459557,"line_start":94,"line_end":94,"column_start":2,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":459559,"byte_end":459566,"line_start":95,"line_end":95,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":3168},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":459720,"byte_end":459725,"line_start":103,"line_end":103,"column_start":5,"column_end":10},"name":"clone","qualname":"<BitVec<O, T> as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3169},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":460055,"byte_end":460065,"line_start":116,"line_end":116,"column_start":5,"column_end":15},"name":"clone_from","qualname":"<BitVec<O, T> as std::clone::Clone>::clone_from","value":"fn clone_from<'_, '_>(&'_ mut Self, &'_ Self)","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2884},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3177},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":460759,"byte_end":460762,"line_start":140,"line_end":140,"column_start":5,"column_end":8},"name":"cmp","qualname":"<BitVec<O, T> as std::cmp::Ord>::cmp","value":"fn cmp<'_, '_>(&'_ Self, &'_ Self) -> Ordering","parent":{"krate":2,"index":2951},"children":[],"decl_id":{"krate":2,"index":2952},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3183},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":462052,"byte_end":462054,"line_start":187,"line_end":187,"column_start":5,"column_end":7},"name":"eq","qualname":"<BitVec<A, B> as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ BitVec<C, D>) -> bool","parent":{"krate":2,"index":2915},"children":[],"decl_id":{"krate":2,"index":2917},"docs":" Performs a comparison by `==`.","sig":null,"attributes":[{"value":"/ Performs a comparison by `==`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":461251,"byte_end":461285,"line_start":154,"line_end":154,"column_start":2,"column_end":36}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":461287,"byte_end":461290,"line_start":155,"line_end":155,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":461292,"byte_end":461308,"line_start":156,"line_end":156,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":461310,"byte_end":461313,"line_start":157,"line_end":157,"column_start":2,"column_end":5}},{"value":"/ - `&self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":461315,"byte_end":461328,"line_start":158,"line_end":158,"column_start":2,"column_end":15}},{"value":"/ - `rhs`: The other vector to compare.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":461330,"byte_end":461371,"line_start":159,"line_end":159,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":461373,"byte_end":461376,"line_start":160,"line_end":160,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":461378,"byte_end":461391,"line_start":161,"line_end":161,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":461393,"byte_end":461396,"line_start":162,"line_end":162,"column_start":2,"column_end":5}},{"value":"/ Whether the vectors compare equal.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":461398,"byte_end":461436,"line_start":163,"line_end":163,"column_start":2,"column_end":40}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":461438,"byte_end":461441,"line_start":164,"line_end":164,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":461443,"byte_end":461457,"line_start":165,"line_end":165,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":461459,"byte_end":461462,"line_start":166,"line_end":166,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":461464,"byte_end":461475,"line_start":167,"line_end":167,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":461477,"byte_end":461504,"line_start":168,"line_end":168,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":461506,"byte_end":461509,"line_start":169,"line_end":169,"column_start":2,"column_end":5}},{"value":"/ let l: BitVec<Lsb0, u16> = bitvec![Lsb0, u16; 0, 1, 0, 1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":461511,"byte_end":461573,"line_start":170,"line_end":170,"column_start":2,"column_end":64}},{"value":"/ let r: BitVec<Msb0, u32> = bitvec![Msb0, u32; 0, 1, 0, 1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":461575,"byte_end":461637,"line_start":171,"line_end":171,"column_start":2,"column_end":64}},{"value":"/ assert!(l == r);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":461639,"byte_end":461659,"line_start":172,"line_end":172,"column_start":2,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":461661,"byte_end":461668,"line_start":173,"line_end":173,"column_start":2,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":461670,"byte_end":461673,"line_start":174,"line_end":174,"column_start":2,"column_end":5}},{"value":"/ This example uses the same types to prove that raw, bitwise, values are","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":461675,"byte_end":461750,"line_start":175,"line_end":175,"column_start":2,"column_end":77}},{"value":"/ not used for equality comparison.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":461752,"byte_end":461789,"line_start":176,"line_end":176,"column_start":2,"column_end":39}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":461791,"byte_end":461794,"line_start":177,"line_end":177,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":461796,"byte_end":461807,"line_start":178,"line_end":178,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":461809,"byte_end":461836,"line_start":179,"line_end":179,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":461838,"byte_end":461841,"line_start":180,"line_end":180,"column_start":2,"column_end":5}},{"value":"/ let l: BitVec<Msb0, u8> = bitvec![Msb0, u8; 0, 1, 0, 1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":461843,"byte_end":461903,"line_start":181,"line_end":181,"column_start":2,"column_end":62}},{"value":"/ let r: BitVec<Lsb0, u8> = bitvec![Lsb0, u8; 0, 1, 0, 1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":461905,"byte_end":461965,"line_start":182,"line_end":182,"column_start":2,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":461967,"byte_end":461970,"line_start":183,"line_end":183,"column_start":2,"column_end":5}},{"value":"/ assert_eq!(l, r);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":461972,"byte_end":461993,"line_start":184,"line_end":184,"column_start":2,"column_end":23}},{"value":"/ assert_ne!(l.as_slice(), r.as_slice());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":461995,"byte_end":462038,"line_start":185,"line_end":185,"column_start":2,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":462040,"byte_end":462047,"line_start":186,"line_end":186,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":3189},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":462264,"byte_end":462266,"line_start":194,"line_end":194,"column_start":5,"column_end":7},"name":"eq","qualname":"<BitVec<A, B> as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ BitSlice<C, D>) -> bool","parent":{"krate":2,"index":2915},"children":[],"decl_id":{"krate":2,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3195},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":462464,"byte_end":462466,"line_start":201,"line_end":201,"column_start":5,"column_end":7},"name":"eq","qualname":"<BitSlice<A, B> as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ BitVec<C, D>) -> bool","parent":{"krate":2,"index":2915},"children":[],"decl_id":{"krate":2,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3201},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":462663,"byte_end":462665,"line_start":208,"line_end":208,"column_start":5,"column_end":7},"name":"eq","qualname":"<BitVec<A, B> as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_, '_>(&'_ Self, &'_ &'_ BitSlice<C, D>) -> bool","parent":{"krate":2,"index":2915},"children":[],"decl_id":{"krate":2,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3207},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":463095,"byte_end":463097,"line_start":222,"line_end":222,"column_start":5,"column_end":7},"name":"eq","qualname":"<&'_ BitSlice<A, B> as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ BitVec<C, D>) -> bool","parent":{"krate":2,"index":2915},"children":[],"decl_id":{"krate":2,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3213},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":464331,"byte_end":464342,"line_start":267,"line_end":267,"column_start":5,"column_end":16},"name":"partial_cmp","qualname":"<BitVec<A, B> as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ BitVec<C, D>) -> Option<Ordering>","parent":{"krate":2,"index":2961},"children":[],"decl_id":{"krate":2,"index":2963},"docs":" Performs a comparison by `<` or `>`.","sig":null,"attributes":[{"value":"/ Performs a comparison by `<` or `>`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":463899,"byte_end":463939,"line_start":245,"line_end":245,"column_start":2,"column_end":42}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":463941,"byte_end":463944,"line_start":246,"line_end":246,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":463946,"byte_end":463962,"line_start":247,"line_end":247,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":463964,"byte_end":463967,"line_start":248,"line_end":248,"column_start":2,"column_end":5}},{"value":"/ - `&self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":463969,"byte_end":463982,"line_start":249,"line_end":249,"column_start":2,"column_end":15}},{"value":"/ - `rhs`: The other vector to compare.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":463984,"byte_end":464025,"line_start":250,"line_end":250,"column_start":2,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":464027,"byte_end":464030,"line_start":251,"line_end":251,"column_start":2,"column_end":5}},{"value":"/ # Returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":464032,"byte_end":464045,"line_start":252,"line_end":252,"column_start":2,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":464047,"byte_end":464050,"line_start":253,"line_end":253,"column_start":2,"column_end":5}},{"value":"/ The relative ordering of the two vectors.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":464052,"byte_end":464097,"line_start":254,"line_end":254,"column_start":2,"column_end":47}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":464099,"byte_end":464102,"line_start":255,"line_end":255,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":464104,"byte_end":464118,"line_start":256,"line_end":256,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":464120,"byte_end":464123,"line_start":257,"line_end":257,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":464125,"byte_end":464136,"line_start":258,"line_end":258,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":464138,"byte_end":464165,"line_start":259,"line_end":259,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":464167,"byte_end":464170,"line_start":260,"line_end":260,"column_start":2,"column_end":5}},{"value":"/ let a = bitvec![0, 1, 0, 0];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":464172,"byte_end":464204,"line_start":261,"line_end":261,"column_start":2,"column_end":34}},{"value":"/ let b = bitvec![0, 1, 0, 1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":464206,"byte_end":464238,"line_start":262,"line_end":262,"column_start":2,"column_end":34}},{"value":"/ let c = bitvec![0, 1, 0, 1, 1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":464240,"byte_end":464275,"line_start":263,"line_end":263,"column_start":2,"column_end":37}},{"value":"/ assert!(a < b);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":464277,"byte_end":464296,"line_start":264,"line_end":264,"column_start":2,"column_end":21}},{"value":"/ assert!(b < c);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":464298,"byte_end":464317,"line_start":265,"line_end":265,"column_start":2,"column_end":21}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":464319,"byte_end":464326,"line_start":266,"line_end":266,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":3219},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":464574,"byte_end":464585,"line_start":274,"line_end":274,"column_start":5,"column_end":16},"name":"partial_cmp","qualname":"<BitVec<A, B> as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ BitSlice<C, D>) -> Option<Ordering>","parent":{"krate":2,"index":2961},"children":[],"decl_id":{"krate":2,"index":2963},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3225},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":464805,"byte_end":464816,"line_start":281,"line_end":281,"column_start":5,"column_end":16},"name":"partial_cmp","qualname":"<BitSlice<A, B> as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ BitVec<C, D>) -> Option<Ordering>","parent":{"krate":2,"index":2961},"children":[],"decl_id":{"krate":2,"index":2963},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3231},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":465035,"byte_end":465046,"line_start":288,"line_end":288,"column_start":5,"column_end":16},"name":"partial_cmp","qualname":"<BitVec<A, B> as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_, '_>(&'_ Self, &'_ &'_ BitSlice<C, D>)\n-> Option<Ordering>","parent":{"krate":2,"index":2961},"children":[],"decl_id":{"krate":2,"index":2963},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3237},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":465269,"byte_end":465280,"line_start":295,"line_end":295,"column_start":5,"column_end":16},"name":"partial_cmp","qualname":"<&'_ BitSlice<A, B> as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ BitVec<C, D>) -> Option<Ordering>","parent":{"krate":2,"index":2961},"children":[],"decl_id":{"krate":2,"index":2963},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3241},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":465977,"byte_end":465983,"line_start":316,"line_end":316,"column_start":5,"column_end":11},"name":"as_mut","qualname":"<BitVec<O, T> as std::convert::AsMut>::as_mut","value":"fn as_mut<'_>(&'_ mut Self) -> &'_ mut BitSlice<O, T>","parent":{"krate":2,"index":3163},"children":[],"decl_id":{"krate":2,"index":3165},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3245},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":466239,"byte_end":466245,"line_start":325,"line_end":325,"column_start":5,"column_end":11},"name":"as_mut","qualname":"<BitVec<O, T> as std::convert::AsMut>::as_mut","value":"fn as_mut<'_>(&'_ mut Self) -> &'_ mut [T]","parent":{"krate":2,"index":3163},"children":[],"decl_id":{"krate":2,"index":3165},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3249},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":466386,"byte_end":466392,"line_start":332,"line_end":332,"column_start":5,"column_end":11},"name":"as_ref","qualname":"<BitVec<O, T> as std::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ BitSlice<O, T>","parent":{"krate":2,"index":3160},"children":[],"decl_id":{"krate":2,"index":3162},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3253},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":466864,"byte_end":466870,"line_start":351,"line_end":351,"column_start":5,"column_end":11},"name":"as_ref","qualname":"<BitVec<O, T> as std::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ [T]","parent":{"krate":2,"index":3160},"children":[],"decl_id":{"krate":2,"index":3162},"docs":" Accesses the underlying store.","sig":null,"attributes":[{"value":"/ Accesses the underlying store.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":466632,"byte_end":466666,"line_start":341,"line_end":341,"column_start":2,"column_end":36}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":466668,"byte_end":466671,"line_start":342,"line_end":342,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":466673,"byte_end":466687,"line_start":343,"line_end":343,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":466689,"byte_end":466692,"line_start":344,"line_end":344,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":466694,"byte_end":466705,"line_start":345,"line_end":345,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":466707,"byte_end":466734,"line_start":346,"line_end":346,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":466736,"byte_end":466739,"line_start":347,"line_end":347,"column_start":2,"column_end":5}},{"value":"/ let bv = bitvec![Msb0, u8; 0, 0, 0, 0, 0, 0, 0, 0, 1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":466741,"byte_end":466799,"line_start":348,"line_end":348,"column_start":2,"column_end":60}},{"value":"/ assert_eq!(&[0, 0b1000_0000], bv.as_slice());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":466801,"byte_end":466850,"line_start":349,"line_end":349,"column_start":2,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":466852,"byte_end":466859,"line_start":350,"line_end":350,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":3257},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":466999,"byte_end":467003,"line_start":358,"line_end":358,"column_start":5,"column_end":9},"name":"from","qualname":"<BitVec<O, T> as std::convert::From>::from","value":"fn from<'_>(&'_ BitSlice<O, T>) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3261},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":467283,"byte_end":467287,"line_start":370,"line_end":370,"column_start":5,"column_end":9},"name":"from","qualname":"<BitVec<O, T> as std::convert::From>::from","value":"fn from<'_>(&'_ [bool]) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3265},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":467434,"byte_end":467438,"line_start":377,"line_end":377,"column_start":5,"column_end":9},"name":"from","qualname":"<BitVec<O, T> as std::convert::From>::from","value":"fn from(BitBox<O, T>) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3269},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":467583,"byte_end":467587,"line_start":384,"line_end":384,"column_start":5,"column_end":9},"name":"from","qualname":"<BitVec<O, T> as std::convert::From>::from","value":"fn from<'_>(&'_ [T]) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3273},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":467719,"byte_end":467723,"line_start":391,"line_end":391,"column_start":5,"column_end":9},"name":"from","qualname":"<BitVec<O, T> as std::convert::From>::from","value":"fn from(Box<[T]>) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3277},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":467894,"byte_end":467898,"line_start":398,"line_end":398,"column_start":5,"column_end":9},"name":"into","qualname":"<BitVec<O, T> as std::convert::Into>::into","value":"fn into(Self) -> Box<[T]>","parent":{"krate":2,"index":3166},"children":[],"decl_id":{"krate":2,"index":3168},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3281},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":468276,"byte_end":468280,"line_start":411,"line_end":411,"column_start":5,"column_end":9},"name":"from","qualname":"<BitVec<O, T> as std::convert::From>::from","value":"fn from(Vec<T>) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3285},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":468410,"byte_end":468414,"line_start":418,"line_end":418,"column_start":5,"column_end":9},"name":"into","qualname":"<BitVec<O, T> as std::convert::Into>::into","value":"fn into(Self) -> Vec<T>","parent":{"krate":2,"index":3166},"children":[],"decl_id":{"krate":2,"index":3168},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3289},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":468530,"byte_end":468537,"line_start":425,"line_end":425,"column_start":5,"column_end":12},"name":"default","qualname":"<BitVec<O, T> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3293},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":468642,"byte_end":468645,"line_start":432,"line_end":432,"column_start":5,"column_end":8},"name":"fmt","qualname":"<BitVec<O, T> as std::fmt::Binary>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut Formatter) -> fmt::Result","parent":{"krate":2,"index":10299},"children":[],"decl_id":{"krate":2,"index":10300},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3297},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":469657,"byte_end":469660,"line_start":465,"line_end":465,"column_start":5,"column_end":8},"name":"fmt","qualname":"<BitVec<O, T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":" Renders the `BitVec` type header and contents for debug.","sig":null,"attributes":[{"value":"/ Renders the `BitVec` type header and contents for debug.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":469315,"byte_end":469375,"line_start":450,"line_end":450,"column_start":2,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":469377,"byte_end":469380,"line_start":451,"line_end":451,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":469382,"byte_end":469396,"line_start":452,"line_end":452,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":469398,"byte_end":469401,"line_start":453,"line_end":453,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":469403,"byte_end":469414,"line_start":454,"line_end":454,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":469416,"byte_end":469443,"line_start":455,"line_end":455,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":469445,"byte_end":469448,"line_start":456,"line_end":456,"column_start":2,"column_end":5}},{"value":"/ let bv = bitvec![Lsb0, u16;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":469450,"byte_end":469481,"line_start":457,"line_end":457,"column_start":2,"column_end":33}},{"value":"/   0, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":469483,"byte_end":469535,"line_start":458,"line_end":458,"column_start":2,"column_end":54}},{"value":"/ ];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":469537,"byte_end":469543,"line_start":459,"line_end":459,"column_start":2,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":469545,"byte_end":469560,"line_start":460,"line_end":460,"column_start":2,"column_end":17}},{"value":"/   \"BitVec<Lsb0, u16> [0101000011110101]\",","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":469562,"byte_end":469607,"line_start":461,"line_end":461,"column_start":2,"column_end":47}},{"value":"/   &format!(\"{:?}\", bv)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":469609,"byte_end":469635,"line_start":462,"line_end":462,"column_start":2,"column_end":28}},{"value":"/ );","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":469637,"byte_end":469643,"line_start":463,"line_end":463,"column_start":2,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":469645,"byte_end":469652,"line_start":464,"line_end":464,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":3301},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":470633,"byte_end":470636,"line_start":498,"line_end":498,"column_start":5,"column_end":8},"name":"fmt","qualname":"<BitVec<O, T> as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":" Renders the `BitVec` contents for display.","sig":null,"attributes":[{"value":"/ Renders the `BitVec` contents for display.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":470382,"byte_end":470428,"line_start":488,"line_end":488,"column_start":2,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":470430,"byte_end":470433,"line_start":489,"line_end":489,"column_start":2,"column_end":5}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":470435,"byte_end":470449,"line_start":490,"line_end":490,"column_start":2,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":470451,"byte_end":470454,"line_start":491,"line_end":491,"column_start":2,"column_end":5}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":470456,"byte_end":470467,"line_start":492,"line_end":492,"column_start":2,"column_end":13}},{"value":"/ use bitvec::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":470469,"byte_end":470496,"line_start":493,"line_end":493,"column_start":2,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":470498,"byte_end":470501,"line_start":494,"line_end":494,"column_start":2,"column_end":5}},{"value":"/ let bv = bitvec![Msb0, u8; 0, 1, 0, 0, 1, 0, 1, 1, 0, 1];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":470503,"byte_end":470564,"line_start":495,"line_end":495,"column_start":2,"column_end":63}},{"value":"/ assert_eq!(\"[01001011, 01]\", &format!(\"{}\", bv));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":470566,"byte_end":470619,"line_start":496,"line_end":496,"column_start":2,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":470621,"byte_end":470628,"line_start":497,"line_end":497,"column_start":2,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":3305},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":470787,"byte_end":470790,"line_start":505,"line_end":505,"column_start":5,"column_end":8},"name":"fmt","qualname":"<BitVec<O, T> as std::fmt::LowerHex>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut Formatter) -> fmt::Result","parent":{"krate":2,"index":10301},"children":[],"decl_id":{"krate":2,"index":10302},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3309},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":470954,"byte_end":470957,"line_start":512,"line_end":512,"column_start":5,"column_end":8},"name":"fmt","qualname":"<BitVec<O, T> as std::fmt::Octal>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut Formatter) -> fmt::Result","parent":{"krate":2,"index":10297},"children":[],"decl_id":{"krate":2,"index":10298},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3313},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":471121,"byte_end":471124,"line_start":519,"line_end":519,"column_start":5,"column_end":8},"name":"fmt","qualname":"<BitVec<O, T> as std::fmt::UpperHex>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut Formatter) -> fmt::Result","parent":{"krate":2,"index":10303},"children":[],"decl_id":{"krate":2,"index":10304},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3317},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":471550,"byte_end":471554,"line_start":533,"line_end":533,"column_start":5,"column_end":9},"name":"hash","qualname":"<BitVec<O, T> as std::hash::Hash>::hash","value":"fn hash<H, '_, '_>(&'_ Self, &'_ mut H) where H: Hasher","parent":{"krate":2,"index":10526},"children":[],"decl_id":{"krate":2,"index":10527},"docs":" Writes each bit of the `BitVec`, as a full `bool`, into the hasher.","sig":null,"attributes":[{"value":"/ Writes each bit of the `BitVec`, as a full `bool`, into the hasher.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":471363,"byte_end":471434,"line_start":527,"line_end":527,"column_start":2,"column_end":73}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":471436,"byte_end":471439,"line_start":528,"line_end":528,"column_start":2,"column_end":5}},{"value":"/ # Parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":471441,"byte_end":471457,"line_start":529,"line_end":529,"column_start":2,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":471459,"byte_end":471462,"line_start":530,"line_end":530,"column_start":2,"column_end":5}},{"value":"/ - `&self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":471464,"byte_end":471477,"line_start":531,"line_end":531,"column_start":2,"column_end":15}},{"value":"/ - `hasher`: The hashing pool into which the vector is written.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":471479,"byte_end":471545,"line_start":532,"line_end":532,"column_start":2,"column_end":68}}]},{"kind":"Mod","id":{"krate":0,"index":3328},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","byte_start":3129,"byte_end":3135,"line_start":102,"line_end":102,"column_start":9,"column_end":15},"name":"cursor","qualname":"::cursor","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":3329},{"krate":0,"index":3330},{"krate":0,"index":3331}],"decl_id":null,"docs":" Old name of the `order` module.\n","sig":null,"attributes":[{"value":"/ Old name of the `order` module.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","byte_start":2962,"byte_end":2997,"line_start":97,"line_end":97,"column_start":1,"column_end":36}},{"value":"deprecated(since = \"0.17.0\", note =\n\"This module was renamed to `order`, and will be removed in the next release.\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","byte_start":2998,"byte_end":3120,"line_start":98,"line_end":101,"column_start":1,"column_end":3}}]},{"kind":"Type","id":{"krate":0,"index":3329},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","byte_start":3313,"byte_end":3322,"line_start":108,"line_end":108,"column_start":11,"column_end":20},"name":"BigEndian","qualname":"::cursor::BigEndian","value":"crate::order::Msb0","parent":null,"children":[],"decl_id":null,"docs":" Old name of the `Msb0` type.\n","sig":null,"attributes":[{"value":"/ Old name of the `Msb0` type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","byte_start":3139,"byte_end":3171,"line_start":103,"line_end":103,"column_start":2,"column_end":34}},{"value":"deprecated(since = \"0.17.0\", note =\n\"This type was renamed to `order::Msb0`, and will be removed in the next release.\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","byte_start":3173,"byte_end":3302,"line_start":104,"line_end":107,"column_start":2,"column_end":4}}]},{"kind":"Type","id":{"krate":0,"index":3330},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","byte_start":3521,"byte_end":3533,"line_start":115,"line_end":115,"column_start":11,"column_end":23},"name":"LittleEndian","qualname":"::cursor::LittleEndian","value":"crate::order::Lsb0","parent":null,"children":[],"decl_id":null,"docs":" Old name of the `Lsb0` type.\n","sig":null,"attributes":[{"value":"/ Old name of the `Lsb0` type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","byte_start":3347,"byte_end":3379,"line_start":110,"line_end":110,"column_start":2,"column_end":34}},{"value":"deprecated(since = \"0.17.0\", note =\n\"This type was renamed to `order::Lsb0`, and will be removed in the next release.\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","byte_start":3381,"byte_end":3510,"line_start":111,"line_end":114,"column_start":2,"column_end":4}}]},{"kind":"Type","id":{"krate":0,"index":3331},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","byte_start":3848,"byte_end":3854,"line_start":124,"line_end":124,"column_start":11,"column_end":17},"name":"Cursor","qualname":"::cursor::Cursor","value":"crate::order::BitOrder","parent":null,"children":[],"decl_id":null,"docs":" Old name of the `BitOrder` trait.\n","sig":null,"attributes":[{"value":"/ Old name of the `BitOrder` trait.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","byte_start":3558,"byte_end":3595,"line_start":117,"line_end":117,"column_start":2,"column_end":39}},{"value":"deprecated(since = \"0.17.0\", note =\n\"This trait was renaved to `order::BitOrder`, and will be removed in the next release.\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","byte_start":3597,"byte_end":3731,"line_start":118,"line_end":121,"column_start":2,"column_end":4}},{"value":"allow(bare_trait_objects)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","byte_start":3809,"byte_end":3837,"line_start":123,"line_end":123,"column_start":2,"column_end":30}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/access.rs","byte_start":34473,"byte_end":34474,"line_start":198,"line_end":198,"column_start":29,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/domain.rs","byte_start":38556,"byte_end":38565,"line_start":131,"line_end":131,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":128},{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/domain.rs","byte_start":40560,"byte_end":40569,"line_start":214,"line_end":214,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":44761,"byte_end":44767,"line_start":49,"line_end":49,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":50161,"byte_end":50167,"line_start":190,"line_end":190,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":51409,"byte_end":51416,"line_start":237,"line_end":237,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":52607,"byte_end":52614,"line_start":296,"line_end":296,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":161},{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":53558,"byte_end":53564,"line_start":329,"line_end":329,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":55227,"byte_end":55233,"line_start":393,"line_end":393,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":55885,"byte_end":55892,"line_start":421,"line_end":421,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":57767,"byte_end":57774,"line_start":491,"line_end":491,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":69875,"byte_end":69883,"line_start":275,"line_end":275,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":251},{"krate":0,"index":253},{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":78819,"byte_end":78827,"line_start":536,"line_end":536,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":261},{"krate":0,"index":263},{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":88257,"byte_end":88263,"line_start":806,"line_end":806,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":270},{"krate":0,"index":272},{"krate":0,"index":274},{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":88753,"byte_end":88759,"line_start":830,"line_end":830,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":281},{"krate":0,"index":283},{"krate":0,"index":285},{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":102069,"byte_end":102073,"line_start":154,"line_end":154,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":102734,"byte_end":102738,"line_start":175,"line_end":175,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":118698,"byte_end":118705,"line_start":65,"line_end":65,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":119752,"byte_end":119759,"line_start":125,"line_end":125,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":119855,"byte_end":119862,"line_start":132,"line_end":132,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":119962,"byte_end":119969,"line_start":139,"line_end":139,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":120067,"byte_end":120074,"line_start":146,"line_end":146,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":120171,"byte_end":120178,"line_start":153,"line_end":153,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":125088,"byte_end":125094,"line_start":294,"line_end":294,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":410},{"krate":0,"index":412},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":426},{"krate":0,"index":428},{"krate":0,"index":430},{"krate":0,"index":432},{"krate":0,"index":434},{"krate":0,"index":437},{"krate":0,"index":440},{"krate":0,"index":442}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":139856,"byte_end":139862,"line_start":826,"line_end":826,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":140087,"byte_end":140093,"line_start":835,"line_end":835,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":140213,"byte_end":140219,"line_start":842,"line_end":842,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":140386,"byte_end":140392,"line_start":849,"line_end":849,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":140580,"byte_end":140586,"line_start":857,"line_end":857,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":140950,"byte_end":140956,"line_start":870,"line_end":870,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":141101,"byte_end":141107,"line_start":874,"line_end":874,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":141308,"byte_end":141315,"line_start":881,"line_end":881,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":147163,"byte_end":147171,"line_start":111,"line_end":111,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":562},{"krate":0,"index":564},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":575},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580},{"krate":0,"index":581},{"krate":0,"index":586},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":602},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":173257,"byte_end":173258,"line_start":1149,"line_end":1149,"column_start":20,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":181883,"byte_end":181891,"line_start":258,"line_end":258,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":788},{"krate":0,"index":791},{"krate":0,"index":794},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813},{"krate":0,"index":814},{"krate":0,"index":816},{"krate":0,"index":818},{"krate":0,"index":820},{"krate":0,"index":822},{"krate":0,"index":824},{"krate":0,"index":826},{"krate":0,"index":828},{"krate":0,"index":830},{"krate":0,"index":834},{"krate":0,"index":837},{"krate":0,"index":840},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":850},{"krate":0,"index":852},{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":246316,"byte_end":246325,"line_start":2448,"line_end":2448,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":247942,"byte_end":247946,"line_start":58,"line_end":58,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":248802,"byte_end":248806,"line_start":93,"line_end":93,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":941}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":249489,"byte_end":249493,"line_start":132,"line_end":132,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":946}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":249711,"byte_end":249715,"line_start":143,"line_end":143,"column_start":34,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":249790,"byte_end":249794,"line_start":146,"line_end":146,"column_start":30,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":249877,"byte_end":249881,"line_start":149,"line_end":149,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":957}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":250009,"byte_end":250013,"line_start":156,"line_end":156,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":961}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":250947,"byte_end":250954,"line_start":204,"line_end":204,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":975}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":252313,"byte_end":252320,"line_start":257,"line_end":257,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":983},{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":987}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":253082,"byte_end":253089,"line_start":298,"line_end":298,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":253364,"byte_end":253371,"line_start":311,"line_end":311,"column_start":34,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":253446,"byte_end":253453,"line_start":314,"line_end":314,"column_start":30,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":254162,"byte_end":254168,"line_start":337,"line_end":337,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1006},{"krate":0,"index":1007},{"krate":0,"index":1008},{"krate":0,"index":1009}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":255280,"byte_end":255286,"line_start":390,"line_end":390,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1014}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":255679,"byte_end":255685,"line_start":407,"line_end":407,"column_start":34,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":255760,"byte_end":255766,"line_start":410,"line_end":410,"column_start":30,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":256665,"byte_end":256676,"line_start":437,"line_end":437,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1025}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":256979,"byte_end":256990,"line_start":447,"line_end":447,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":257942,"byte_end":257953,"line_start":494,"line_end":494,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1040}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":258333,"byte_end":258344,"line_start":512,"line_end":512,"column_start":34,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":258419,"byte_end":258430,"line_start":515,"line_end":515,"column_start":30,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":259371,"byte_end":259385,"line_start":542,"line_end":542,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1051}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":259696,"byte_end":259710,"line_start":552,"line_end":552,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1056},{"krate":0,"index":1057},{"krate":0,"index":1058},{"krate":0,"index":1059},{"krate":0,"index":1060},{"krate":0,"index":1061}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":260708,"byte_end":260722,"line_start":597,"line_end":597,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1066}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":261117,"byte_end":261131,"line_start":613,"line_end":613,"column_start":34,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":261206,"byte_end":261220,"line_start":616,"line_end":616,"column_start":30,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":261942,"byte_end":261951,"line_start":639,"line_end":639,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1077},{"krate":0,"index":1078},{"krate":0,"index":1079},{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1082}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":263092,"byte_end":263101,"line_start":691,"line_end":691,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1087}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":263556,"byte_end":263565,"line_start":709,"line_end":709,"column_start":34,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":263640,"byte_end":263649,"line_start":712,"line_end":712,"column_start":30,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":264356,"byte_end":264363,"line_start":735,"line_end":735,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1098},{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":1103}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":265443,"byte_end":265450,"line_start":788,"line_end":788,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1108}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":265831,"byte_end":265838,"line_start":805,"line_end":805,"column_start":34,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":265913,"byte_end":265920,"line_start":808,"line_end":808,"column_start":30,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":266817,"byte_end":266829,"line_start":835,"line_end":835,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1119}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":267132,"byte_end":267144,"line_start":845,"line_end":845,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1124},{"krate":0,"index":1125},{"krate":0,"index":1126},{"krate":0,"index":1127},{"krate":0,"index":1128},{"krate":0,"index":1129}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":268117,"byte_end":268129,"line_start":893,"line_end":893,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1134}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":268497,"byte_end":268509,"line_start":911,"line_end":911,"column_start":34,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":268584,"byte_end":268596,"line_start":914,"line_end":914,"column_start":30,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":269521,"byte_end":269536,"line_start":941,"line_end":941,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1145}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":269847,"byte_end":269862,"line_start":951,"line_end":951,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1150},{"krate":0,"index":1151},{"krate":0,"index":1152},{"krate":0,"index":1153},{"krate":0,"index":1154},{"krate":0,"index":1155}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":270881,"byte_end":270896,"line_start":997,"line_end":997,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1160}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":271279,"byte_end":271294,"line_start":1013,"line_end":1013,"column_start":34,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":271369,"byte_end":271384,"line_start":1016,"line_end":1016,"column_start":30,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":272111,"byte_end":272121,"line_start":1039,"line_end":1039,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1171},{"krate":0,"index":1172},{"krate":0,"index":1173},{"krate":0,"index":1174},{"krate":0,"index":1175},{"krate":0,"index":1176}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":273283,"byte_end":273293,"line_start":1092,"line_end":1092,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1181}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":273736,"byte_end":273746,"line_start":1110,"line_end":1110,"column_start":34,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":273821,"byte_end":273831,"line_start":1113,"line_end":1113,"column_start":30,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":274869,"byte_end":274874,"line_start":1146,"line_end":1146,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1195}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":275150,"byte_end":275155,"line_start":1156,"line_end":1156,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1201}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":275381,"byte_end":275386,"line_start":1164,"line_end":1164,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1208},{"krate":0,"index":1209},{"krate":0,"index":1211}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":276122,"byte_end":276127,"line_start":1195,"line_end":1195,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1217}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":276654,"byte_end":276659,"line_start":1216,"line_end":1216,"column_start":37,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":277407,"byte_end":277415,"line_start":1238,"line_end":1238,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1237}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":277698,"byte_end":277706,"line_start":1248,"line_end":1248,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1243}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":277978,"byte_end":277986,"line_start":1256,"line_end":1256,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1250},{"krate":0,"index":1251},{"krate":0,"index":1253}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":278817,"byte_end":278825,"line_start":1292,"line_end":1292,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1259}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":279483,"byte_end":279491,"line_start":1319,"line_end":1319,"column_start":37,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":280101,"byte_end":280107,"line_start":1337,"line_end":1337,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1271}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":280396,"byte_end":280402,"line_start":1347,"line_end":1347,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1277}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":280591,"byte_end":280597,"line_start":1354,"line_end":1354,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1283},{"krate":0,"index":1284},{"krate":0,"index":1285}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":280932,"byte_end":280938,"line_start":1369,"line_end":1369,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1291}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":281144,"byte_end":281150,"line_start":1377,"line_end":1377,"column_start":37,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":281764,"byte_end":281773,"line_start":1394,"line_end":1394,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1308}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":282065,"byte_end":282074,"line_start":1404,"line_end":1404,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1314}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":282263,"byte_end":282272,"line_start":1411,"line_end":1411,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1320},{"krate":0,"index":1321},{"krate":0,"index":1322}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":282611,"byte_end":282620,"line_start":1426,"line_end":1426,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1328}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":282826,"byte_end":282835,"line_start":1434,"line_end":1434,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":283129,"byte_end":283142,"line_start":1445,"line_end":1445,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1340},{"krate":0,"index":1341},{"krate":0,"index":1342}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":284040,"byte_end":284046,"line_start":1479,"line_end":1479,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1355}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":284827,"byte_end":284836,"line_start":1503,"line_end":1503,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1367}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":285635,"byte_end":285642,"line_start":1528,"line_end":1528,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1379}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":286465,"byte_end":286475,"line_start":1553,"line_end":1553,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1391}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":288405,"byte_end":288412,"line_start":1626,"line_end":1626,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":1399},{"krate":0,"index":1400},{"krate":0,"index":1401},{"krate":0,"index":1402}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":289509,"byte_end":289516,"line_start":1682,"line_end":1682,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1407}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":289936,"byte_end":289943,"line_start":1699,"line_end":1699,"column_start":38,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":290027,"byte_end":290034,"line_start":1702,"line_end":1702,"column_start":34,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":291487,"byte_end":291495,"line_start":60,"line_end":60,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1496}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":293679,"byte_end":293687,"line_start":121,"line_end":121,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1504}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":294847,"byte_end":294855,"line_start":164,"line_end":164,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1513}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":295965,"byte_end":295973,"line_start":205,"line_end":205,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1519}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":296746,"byte_end":296754,"line_start":237,"line_end":237,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1524},{"krate":0,"index":1525}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":296927,"byte_end":296935,"line_start":246,"line_end":246,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1529},{"krate":0,"index":1530}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":297110,"byte_end":297118,"line_start":255,"line_end":255,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1534}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":297293,"byte_end":297301,"line_start":262,"line_end":262,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1538},{"krate":0,"index":1539}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":297494,"byte_end":297502,"line_start":271,"line_end":271,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1543}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":297681,"byte_end":297689,"line_start":278,"line_end":278,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1547},{"krate":0,"index":1548}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":297872,"byte_end":297880,"line_start":287,"line_end":287,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1552}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":298047,"byte_end":298055,"line_start":294,"line_end":294,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1556},{"krate":0,"index":1557}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":298207,"byte_end":298215,"line_start":303,"line_end":303,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1561}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":298359,"byte_end":298367,"line_start":310,"line_end":310,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1565},{"krate":0,"index":1566}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":298546,"byte_end":298554,"line_start":319,"line_end":319,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1570}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":298733,"byte_end":298741,"line_start":326,"line_end":326,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1574},{"krate":0,"index":1575}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":298938,"byte_end":298946,"line_start":335,"line_end":335,"column_start":50,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1579}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":305044,"byte_end":305052,"line_start":533,"line_end":533,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1595}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":308426,"byte_end":308434,"line_start":637,"line_end":637,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1599}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/proxy.rs","byte_start":312640,"byte_end":312646,"line_start":60,"line_end":60,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1642},{"krate":0,"index":1643}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/proxy.rs","byte_start":312790,"byte_end":312796,"line_start":69,"line_end":69,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1647}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/proxy.rs","byte_start":312930,"byte_end":312936,"line_start":76,"line_end":76,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1651}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":313620,"byte_end":313628,"line_start":42,"line_end":42,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1721},{"krate":0,"index":1722}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":313788,"byte_end":313796,"line_start":51,"line_end":51,"column_start":19,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":313857,"byte_end":313865,"line_start":54,"line_end":54,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1729}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":314437,"byte_end":314445,"line_start":70,"line_end":70,"column_start":48,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1736}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":315205,"byte_end":315213,"line_start":101,"line_end":101,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1749}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":315770,"byte_end":315778,"line_start":117,"line_end":117,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1755}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":316816,"byte_end":316824,"line_start":156,"line_end":156,"column_start":50,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1767}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":317167,"byte_end":317175,"line_start":165,"line_end":165,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1771}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":317461,"byte_end":317469,"line_start":174,"line_end":174,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1775}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":321976,"byte_end":321984,"line_start":316,"line_end":316,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1810}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":323150,"byte_end":323158,"line_start":355,"line_end":355,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1814}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":323726,"byte_end":323736,"line_start":374,"line_end":374,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1820}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":323928,"byte_end":323936,"line_start":381,"line_end":381,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1824}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":324841,"byte_end":324849,"line_start":421,"line_end":421,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":325259,"byte_end":325267,"line_start":430,"line_end":430,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":340173,"byte_end":340179,"line_start":65,"line_end":65,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1966},{"krate":0,"index":1967},{"krate":0,"index":1968},{"krate":0,"index":1969},{"krate":0,"index":1970},{"krate":0,"index":1971},{"krate":0,"index":1972},{"krate":0,"index":1974},{"krate":0,"index":1976},{"krate":0,"index":1977},{"krate":0,"index":1978},{"krate":0,"index":1979},{"krate":0,"index":1980},{"krate":0,"index":1981}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":348132,"byte_end":348138,"line_start":29,"line_end":29,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2018},{"krate":0,"index":2019},{"krate":0,"index":2020},{"krate":0,"index":2021},{"krate":0,"index":2022}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/iter.rs","byte_start":353441,"byte_end":353447,"line_start":16,"line_end":16,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2051},{"krate":0,"index":2052},{"krate":0,"index":2053}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/iter.rs","byte_start":354457,"byte_end":354465,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2076}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/iter.rs","byte_start":354646,"byte_end":354654,"line_start":66,"line_end":66,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2080},{"krate":0,"index":2081},{"krate":0,"index":2082},{"krate":0,"index":2083},{"krate":0,"index":2084},{"krate":0,"index":2085}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/iter.rs","byte_start":355295,"byte_end":355303,"line_start":97,"line_end":97,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2089}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/iter.rs","byte_start":355559,"byte_end":355567,"line_start":107,"line_end":107,"column_start":34,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/iter.rs","byte_start":355638,"byte_end":355646,"line_start":110,"line_end":110,"column_start":30,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":356173,"byte_end":356179,"line_start":42,"line_end":42,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2193},{"krate":0,"index":2194}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":356347,"byte_end":356353,"line_start":52,"line_end":52,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2198}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":356543,"byte_end":356549,"line_start":59,"line_end":59,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2203},{"krate":0,"index":2204}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":356748,"byte_end":356754,"line_start":69,"line_end":69,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2209}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":356939,"byte_end":356945,"line_start":76,"line_end":76,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2214},{"krate":0,"index":2215}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":357142,"byte_end":357148,"line_start":86,"line_end":86,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2220}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":357332,"byte_end":357338,"line_start":93,"line_end":93,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2225},{"krate":0,"index":2226}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":357537,"byte_end":357543,"line_start":103,"line_end":103,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2231}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":357722,"byte_end":357728,"line_start":110,"line_end":110,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2235},{"krate":0,"index":2236}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":357887,"byte_end":357893,"line_start":119,"line_end":119,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2240}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":358032,"byte_end":358038,"line_start":126,"line_end":126,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2244}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":358331,"byte_end":358337,"line_start":137,"line_end":137,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2248},{"krate":0,"index":2249}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":358519,"byte_end":358525,"line_start":146,"line_end":146,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2253},{"krate":0,"index":2254}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":358727,"byte_end":358733,"line_start":155,"line_end":155,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2258}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":358924,"byte_end":358930,"line_start":162,"line_end":162,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2262},{"krate":0,"index":2263}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":359140,"byte_end":359146,"line_start":171,"line_end":171,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2267}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":359334,"byte_end":359340,"line_start":178,"line_end":178,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2271},{"krate":0,"index":2272}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":359524,"byte_end":359530,"line_start":187,"line_end":187,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2276}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":359707,"byte_end":359713,"line_start":194,"line_end":194,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2280},{"krate":0,"index":2281}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":359933,"byte_end":359939,"line_start":203,"line_end":203,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2285}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":360137,"byte_end":360143,"line_start":210,"line_end":210,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2289},{"krate":0,"index":2290}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":360349,"byte_end":360355,"line_start":219,"line_end":219,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2294}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":360555,"byte_end":360561,"line_start":226,"line_end":226,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2298},{"krate":0,"index":2299}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":360785,"byte_end":360791,"line_start":235,"line_end":235,"column_start":50,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2303}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":360981,"byte_end":360987,"line_start":245,"line_end":245,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2307},{"krate":0,"index":2308}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":361157,"byte_end":361163,"line_start":255,"line_end":255,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2312},{"krate":0,"index":2313}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":361340,"byte_end":361346,"line_start":265,"line_end":265,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2317},{"krate":0,"index":2318}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":361521,"byte_end":361527,"line_start":275,"line_end":275,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2322}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":361685,"byte_end":361691,"line_start":282,"line_end":282,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2326},{"krate":0,"index":2327}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":361866,"byte_end":361872,"line_start":292,"line_end":292,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2331}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":362522,"byte_end":362528,"line_start":43,"line_end":43,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2408}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":362675,"byte_end":362681,"line_start":50,"line_end":50,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2412}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":362824,"byte_end":362830,"line_start":57,"line_end":57,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2416}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":363128,"byte_end":363134,"line_start":71,"line_end":71,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":363195,"byte_end":363201,"line_start":74,"line_end":74,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2423}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":363377,"byte_end":363383,"line_start":81,"line_end":81,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2429}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":363589,"byte_end":363595,"line_start":88,"line_end":88,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2435}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":363787,"byte_end":363795,"line_start":95,"line_end":95,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2441}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":363986,"byte_end":363992,"line_start":102,"line_end":102,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2447}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":364229,"byte_end":364235,"line_start":109,"line_end":109,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2453}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":364458,"byte_end":364466,"line_start":116,"line_end":116,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2459}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":364678,"byte_end":364684,"line_start":123,"line_end":123,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2463}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":364828,"byte_end":364834,"line_start":130,"line_end":130,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2467}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":364987,"byte_end":364993,"line_start":137,"line_end":137,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2471}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":365125,"byte_end":365131,"line_start":144,"line_end":144,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2475}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":365272,"byte_end":365278,"line_start":151,"line_end":151,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2479}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":365418,"byte_end":365424,"line_start":158,"line_end":158,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2483}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":365558,"byte_end":365564,"line_start":165,"line_end":165,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2487}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":365706,"byte_end":365712,"line_start":172,"line_end":172,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2491}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":365852,"byte_end":365858,"line_start":179,"line_end":179,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2495}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":365982,"byte_end":365988,"line_start":186,"line_end":186,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2499}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":366148,"byte_end":366154,"line_start":196,"line_end":196,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2503}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":366313,"byte_end":366319,"line_start":203,"line_end":203,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2507}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":366620,"byte_end":366626,"line_start":215,"line_end":215,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2511}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":366789,"byte_end":366795,"line_start":222,"line_end":222,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2515}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":366956,"byte_end":366962,"line_start":229,"line_end":229,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2519}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":367123,"byte_end":367129,"line_start":236,"line_end":236,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2523}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":367289,"byte_end":367295,"line_start":243,"line_end":243,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2527}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":367523,"byte_end":367529,"line_start":251,"line_end":251,"column_start":28,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":367654,"byte_end":367660,"line_start":255,"line_end":255,"column_start":28,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":376028,"byte_end":376034,"line_start":259,"line_end":259,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2587},{"krate":0,"index":2588},{"krate":0,"index":2589},{"krate":0,"index":2590},{"krate":0,"index":2591},{"krate":0,"index":2593},{"krate":0,"index":2594},{"krate":0,"index":2595},{"krate":0,"index":2596},{"krate":0,"index":2597},{"krate":0,"index":2599},{"krate":0,"index":2601},{"krate":0,"index":2603},{"krate":0,"index":2605},{"krate":0,"index":2606},{"krate":0,"index":2607},{"krate":0,"index":2608}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":392912,"byte_end":392918,"line_start":23,"line_end":23,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2646},{"krate":0,"index":2647},{"krate":0,"index":2648},{"krate":0,"index":2649},{"krate":0,"index":2651},{"krate":0,"index":2653},{"krate":0,"index":2654},{"krate":0,"index":2655},{"krate":0,"index":2656},{"krate":0,"index":2657},{"krate":0,"index":2658},{"krate":0,"index":2659},{"krate":0,"index":2661},{"krate":0,"index":2662},{"krate":0,"index":2664},{"krate":0,"index":2666},{"krate":0,"index":2668},{"krate":0,"index":2670},{"krate":0,"index":2673},{"krate":0,"index":2676},{"krate":0,"index":2677},{"krate":0,"index":2678},{"krate":0,"index":2680},{"krate":0,"index":2681},{"krate":0,"index":2684}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":416983,"byte_end":416989,"line_start":26,"line_end":26,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2713}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":417846,"byte_end":417852,"line_start":61,"line_end":61,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2719}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":418757,"byte_end":418763,"line_start":97,"line_end":97,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2724},{"krate":0,"index":2725},{"krate":0,"index":2726}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":420171,"byte_end":420176,"line_start":157,"line_end":157,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2746},{"krate":0,"index":2748}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":421834,"byte_end":421839,"line_start":221,"line_end":221,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2753}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":422013,"byte_end":422018,"line_start":228,"line_end":228,"column_start":38,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":422102,"byte_end":422107,"line_start":231,"line_end":231,"column_start":34,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":422186,"byte_end":422191,"line_start":234,"line_end":234,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2766},{"krate":0,"index":2767},{"krate":0,"index":2768},{"krate":0,"index":2769},{"krate":0,"index":2770},{"krate":0,"index":2771}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":422648,"byte_end":422653,"line_start":259,"line_end":259,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2776}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":423745,"byte_end":423753,"line_start":293,"line_end":293,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2785}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":423945,"byte_end":423953,"line_start":300,"line_end":300,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2789}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":424209,"byte_end":424217,"line_start":310,"line_end":310,"column_start":34,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":424288,"byte_end":424296,"line_start":313,"line_end":313,"column_start":30,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":424362,"byte_end":424370,"line_start":316,"line_end":316,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2799},{"krate":0,"index":2800},{"krate":0,"index":2801},{"krate":0,"index":2802},{"krate":0,"index":2803},{"krate":0,"index":2804}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":428442,"byte_end":428448,"line_start":480,"line_end":480,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2817}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":428644,"byte_end":428650,"line_start":487,"line_end":487,"column_start":41,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":428764,"byte_end":428770,"line_start":490,"line_end":490,"column_start":37,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":428923,"byte_end":428929,"line_start":494,"line_end":494,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2833},{"krate":0,"index":2834},{"krate":0,"index":2836},{"krate":0,"index":2837},{"krate":0,"index":2838},{"krate":0,"index":2839}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":429867,"byte_end":429873,"line_start":529,"line_end":529,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2845}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":432034,"byte_end":432040,"line_start":56,"line_end":56,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2938},{"krate":0,"index":2939}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":433462,"byte_end":433468,"line_start":105,"line_end":105,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2943}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":434855,"byte_end":434861,"line_start":150,"line_end":150,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2951},{"krate":0,"index":2952}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":435608,"byte_end":435614,"line_start":176,"line_end":176,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2957}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":436582,"byte_end":436588,"line_start":206,"line_end":206,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2962},{"krate":0,"index":2963}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":437310,"byte_end":437316,"line_start":232,"line_end":232,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2968}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":438264,"byte_end":438270,"line_start":262,"line_end":262,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2973},{"krate":0,"index":2974}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":438997,"byte_end":439003,"line_start":288,"line_end":288,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2979}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":439704,"byte_end":439710,"line_start":316,"line_end":316,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2983},{"krate":0,"index":2984}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":440204,"byte_end":440210,"line_start":340,"line_end":340,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2988}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":440685,"byte_end":440691,"line_start":361,"line_end":361,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2992}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":441183,"byte_end":441189,"line_start":374,"line_end":374,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2996},{"krate":0,"index":2997}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":442089,"byte_end":442095,"line_start":409,"line_end":409,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3001},{"krate":0,"index":3002}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":442297,"byte_end":442303,"line_start":418,"line_end":418,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3006}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":442494,"byte_end":442500,"line_start":425,"line_end":425,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3010},{"krate":0,"index":3011}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":442710,"byte_end":442716,"line_start":434,"line_end":434,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3015}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":442904,"byte_end":442910,"line_start":441,"line_end":441,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3019},{"krate":0,"index":3020}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":443094,"byte_end":443100,"line_start":450,"line_end":450,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3024}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":443277,"byte_end":443283,"line_start":457,"line_end":457,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3028},{"krate":0,"index":3029}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":443503,"byte_end":443509,"line_start":466,"line_end":466,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3033}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":443707,"byte_end":443713,"line_start":473,"line_end":473,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3037},{"krate":0,"index":3038}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":443919,"byte_end":443925,"line_start":482,"line_end":482,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3042}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":444125,"byte_end":444131,"line_start":489,"line_end":489,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3046},{"krate":0,"index":3047}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":444355,"byte_end":444361,"line_start":498,"line_end":498,"column_start":50,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3051}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":445017,"byte_end":445023,"line_start":515,"line_end":515,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3055},{"krate":0,"index":3056}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":445675,"byte_end":445681,"line_start":545,"line_end":545,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3060},{"krate":0,"index":3061}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":447286,"byte_end":447292,"line_start":597,"line_end":597,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3065},{"krate":0,"index":3066}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":449053,"byte_end":449059,"line_start":652,"line_end":652,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3070}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":451048,"byte_end":451054,"line_start":718,"line_end":718,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3074},{"krate":0,"index":3075}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":452821,"byte_end":452827,"line_start":774,"line_end":774,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3079}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":455109,"byte_end":455115,"line_start":836,"line_end":836,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3083},{"krate":0,"index":3084}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":456697,"byte_end":456703,"line_start":895,"line_end":895,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3088}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":458512,"byte_end":458518,"line_start":44,"line_end":44,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3160}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":459085,"byte_end":459091,"line_start":72,"line_end":72,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3164}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":459670,"byte_end":459676,"line_start":101,"line_end":101,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3168},{"krate":0,"index":3169}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":460642,"byte_end":460648,"line_start":135,"line_end":135,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":460709,"byte_end":460715,"line_start":138,"line_end":138,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3177}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":461178,"byte_end":461184,"line_start":152,"line_end":152,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3183}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":462188,"byte_end":462194,"line_start":192,"line_end":192,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3189}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":462386,"byte_end":462394,"line_start":199,"line_end":199,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":3195}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":462587,"byte_end":462593,"line_start":206,"line_end":206,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3201}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":463826,"byte_end":463832,"line_start":243,"line_end":243,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3213}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":464498,"byte_end":464504,"line_start":272,"line_end":272,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3219}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":464727,"byte_end":464735,"line_start":279,"line_end":279,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3225}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":464959,"byte_end":464965,"line_start":286,"line_end":286,"column_start":50,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3231}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":465927,"byte_end":465933,"line_start":314,"line_end":314,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3241}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":466189,"byte_end":466195,"line_start":323,"line_end":323,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3245}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":466336,"byte_end":466342,"line_start":330,"line_end":330,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3249}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":466585,"byte_end":466591,"line_start":339,"line_end":339,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3253}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":466949,"byte_end":466955,"line_start":356,"line_end":356,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3257}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":467233,"byte_end":467239,"line_start":368,"line_end":368,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3261}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":467384,"byte_end":467390,"line_start":375,"line_end":375,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3265}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":467533,"byte_end":467539,"line_start":382,"line_end":382,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3269}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":467669,"byte_end":467675,"line_start":389,"line_end":389,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3273}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":467844,"byte_end":467850,"line_start":396,"line_end":396,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3277}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":468226,"byte_end":468232,"line_start":409,"line_end":409,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3281}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":468360,"byte_end":468366,"line_start":416,"line_end":416,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3285}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":468480,"byte_end":468486,"line_start":423,"line_end":423,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3289}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":468592,"byte_end":468598,"line_start":430,"line_end":430,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3293}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":469268,"byte_end":469274,"line_start":448,"line_end":448,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3297}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":470335,"byte_end":470341,"line_start":486,"line_end":486,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3301}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":470737,"byte_end":470743,"line_start":503,"line_end":503,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3305}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":470904,"byte_end":470910,"line_start":510,"line_end":510,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3309}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":471071,"byte_end":471077,"line_start":517,"line_end":517,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3313}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":471316,"byte_end":471322,"line_start":525,"line_end":525,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3317}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":471747,"byte_end":471753,"line_start":539,"line_end":539,"column_start":28,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":471878,"byte_end":471884,"line_start":543,"line_end":543,"column_start":28,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","byte_start":1928,"byte_end":1934,"line_start":49,"line_end":49,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":5}},{"kind":"Mod","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/macros.rs","byte_start":4064,"byte_end":4072,"line_start":8,"line_end":8,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":6}},{"kind":"Mod","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","byte_start":1969,"byte_end":1976,"line_start":53,"line_end":53,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":134}},{"kind":"Mod","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","byte_start":1986,"byte_end":1992,"line_start":54,"line_end":54,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":193}},{"kind":"Mod","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","byte_start":2002,"byte_end":2007,"line_start":55,"line_end":55,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":294}},{"kind":"Mod","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","byte_start":2030,"byte_end":2037,"line_start":57,"line_end":57,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":480}},{"kind":"Mod","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","byte_start":2047,"byte_end":2052,"line_start":58,"line_end":58,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":525}},{"kind":"Mod","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","byte_start":2062,"byte_end":2067,"line_start":59,"line_end":59,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1835}},{"kind":"Mod","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","byte_start":2104,"byte_end":2109,"line_start":62,"line_end":62,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":1923}},{"kind":"Mod","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/lib.rs","byte_start":2146,"byte_end":2149,"line_start":65,"line_end":65,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":2537}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/access.rs","byte_start":29917,"byte_end":29922,"line_start":39,"line_end":39,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":10288},"to":{"krate":0,"index":83}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/access.rs","byte_start":29925,"byte_end":29931,"line_start":39,"line_end":39,"column_start":33,"column_end":39},"kind":"SuperTrait","from":{"krate":20,"index":51},"to":{"krate":0,"index":83}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/access.rs","byte_start":29937,"byte_end":29942,"line_start":39,"line_end":39,"column_start":45,"column_end":50},"kind":"SuperTrait","from":{"krate":2,"index":3268},"to":{"krate":0,"index":83}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/access.rs","byte_start":34473,"byte_end":34474,"line_start":198,"line_end":198,"column_start":29,"column_end":30},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":102},"to":{"krate":0,"index":83}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/domain.rs","byte_start":38556,"byte_end":38565,"line_start":131,"line_end":131,"column_start":13,"column_end":22},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":3332},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/domain.rs","byte_start":40560,"byte_end":40569,"line_start":214,"line_end":214,"column_start":33,"column_end":42},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":3332},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":44761,"byte_end":44767,"line_start":49,"line_end":49,"column_start":9,"column_end":15},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":3366},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":50161,"byte_end":50167,"line_start":190,"line_end":190,"column_start":19,"column_end":25},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":3366},"to":{"krate":2,"index":3486}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":51409,"byte_end":51416,"line_start":237,"line_end":237,"column_start":9,"column_end":16},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":3402},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":52607,"byte_end":52614,"line_start":296,"line_end":296,"column_start":19,"column_end":26},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":3402},"to":{"krate":2,"index":3486}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":53558,"byte_end":53564,"line_start":329,"line_end":329,"column_start":9,"column_end":15},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":3438},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":55227,"byte_end":55233,"line_start":393,"line_end":393,"column_start":19,"column_end":25},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":3438},"to":{"krate":2,"index":3486}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":55885,"byte_end":55892,"line_start":421,"line_end":421,"column_start":9,"column_end":16},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":3474},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/indices.rs","byte_start":57767,"byte_end":57774,"line_start":491,"line_end":491,"column_start":19,"column_end":26},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":3474},"to":{"krate":2,"index":3486}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":69875,"byte_end":69883,"line_start":275,"line_end":275,"column_start":22,"column_end":30},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":553},"to":{"krate":0,"index":234}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":78819,"byte_end":78827,"line_start":536,"line_end":536,"column_start":22,"column_end":30},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":553},"to":{"krate":0,"index":234}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":88257,"byte_end":88263,"line_start":806,"line_end":806,"column_start":25,"column_end":31},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1958},"to":{"krate":0,"index":234}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/fields.rs","byte_start":88753,"byte_end":88759,"line_start":830,"line_end":830,"column_start":25,"column_end":31},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2578},"to":{"krate":0,"index":234}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":102069,"byte_end":102073,"line_start":154,"line_end":154,"column_start":19,"column_end":23},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":3509},"to":{"krate":0,"index":312}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/order.rs","byte_start":102734,"byte_end":102738,"line_start":175,"line_end":175,"column_start":19,"column_end":23},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":3522},"to":{"krate":0,"index":312}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":118698,"byte_end":118705,"line_start":65,"line_end":65,"column_start":9,"column_end":16},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":3535},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":119752,"byte_end":119759,"line_start":125,"line_end":125,"column_start":22,"column_end":29},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":3535},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":119855,"byte_end":119862,"line_start":132,"line_end":132,"column_start":28,"column_end":35},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":3535},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":119962,"byte_end":119969,"line_start":139,"line_end":139,"column_start":26,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":3535},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":120067,"byte_end":120074,"line_start":146,"line_end":146,"column_start":26,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":3535},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":120171,"byte_end":120178,"line_start":153,"line_end":153,"column_start":25,"column_end":32},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":3535},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":125088,"byte_end":125094,"line_start":294,"line_end":294,"column_start":9,"column_end":15},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":3546},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":139856,"byte_end":139862,"line_start":826,"line_end":826,"column_start":24,"column_end":30},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":3546},"to":{"krate":2,"index":3163}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":140087,"byte_end":140093,"line_start":835,"line_end":835,"column_start":24,"column_end":30},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":3546},"to":{"krate":2,"index":3160}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":140213,"byte_end":140219,"line_start":842,"line_end":842,"column_start":45,"column_end":51},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":3546},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":140386,"byte_end":140392,"line_start":849,"line_end":849,"column_start":49,"column_end":55},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":3546},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":140580,"byte_end":140586,"line_start":857,"line_end":857,"column_start":21,"column_end":27},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":3546},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":140950,"byte_end":140956,"line_start":870,"line_end":870,"column_start":19,"column_end":25},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":3546},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":141101,"byte_end":141107,"line_start":874,"line_end":874,"column_start":31,"column_end":37},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":466},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/pointer.rs","byte_start":141308,"byte_end":141315,"line_start":881,"line_end":881,"column_start":31,"column_end":38},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":473},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":147163,"byte_end":147171,"line_start":111,"line_end":111,"column_start":12,"column_end":20},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":553},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice.rs","byte_start":173257,"byte_end":173258,"line_start":1149,"line_end":1149,"column_start":20,"column_end":21},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":616},"to":{"krate":0,"index":609}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":181883,"byte_end":181891,"line_start":258,"line_end":258,"column_start":12,"column_end":20},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":553},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/api.rs","byte_start":246316,"byte_end":246325,"line_start":2448,"line_end":2448,"column_start":44,"column_end":53},"kind":{"Impl":{"id":42}},"from":{"krate":2,"index":45850},"to":{"krate":0,"index":855}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":247942,"byte_end":247946,"line_start":58,"line_end":58,"column_start":16,"column_end":20},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":3925},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":248802,"byte_end":248806,"line_start":93,"line_end":93,"column_start":29,"column_end":33},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":3925},"to":{"krate":2,"index":8596}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":249489,"byte_end":249493,"line_start":132,"line_end":132,"column_start":40,"column_end":44},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":3925},"to":{"krate":2,"index":8442}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":249711,"byte_end":249715,"line_start":143,"line_end":143,"column_start":34,"column_end":38},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":3925},"to":{"krate":2,"index":8467}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":249790,"byte_end":249794,"line_start":146,"line_end":146,"column_start":30,"column_end":34},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":3925},"to":{"krate":2,"index":8874}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":249877,"byte_end":249881,"line_start":149,"line_end":149,"column_start":38,"column_end":42},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":3925},"to":{"krate":2,"index":3160}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":250009,"byte_end":250013,"line_start":156,"line_end":156,"column_start":27,"column_end":31},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":3925},"to":{"krate":2,"index":3160}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":250947,"byte_end":250954,"line_start":204,"line_end":204,"column_start":16,"column_end":23},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":3940},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":252313,"byte_end":252320,"line_start":257,"line_end":257,"column_start":29,"column_end":36},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":3940},"to":{"krate":2,"index":8596}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":253082,"byte_end":253089,"line_start":298,"line_end":298,"column_start":40,"column_end":47},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":3940},"to":{"krate":2,"index":8442}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":253364,"byte_end":253371,"line_start":311,"line_end":311,"column_start":34,"column_end":41},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":3940},"to":{"krate":2,"index":8467}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":253446,"byte_end":253453,"line_start":314,"line_end":314,"column_start":30,"column_end":37},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":3940},"to":{"krate":2,"index":8874}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":254162,"byte_end":254168,"line_start":337,"line_end":337,"column_start":29,"column_end":35},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":3950},"to":{"krate":2,"index":8596}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":255280,"byte_end":255286,"line_start":390,"line_end":390,"column_start":40,"column_end":46},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":3950},"to":{"krate":2,"index":8442}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":255679,"byte_end":255685,"line_start":407,"line_end":407,"column_start":34,"column_end":40},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":3950},"to":{"krate":2,"index":8467}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":255760,"byte_end":255766,"line_start":410,"line_end":410,"column_start":30,"column_end":36},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":3950},"to":{"krate":2,"index":8874}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":256665,"byte_end":256676,"line_start":437,"line_end":437,"column_start":16,"column_end":27},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":3966},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":256979,"byte_end":256990,"line_start":447,"line_end":447,"column_start":29,"column_end":40},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":3966},"to":{"krate":2,"index":8596}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":257942,"byte_end":257953,"line_start":494,"line_end":494,"column_start":40,"column_end":51},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":3966},"to":{"krate":2,"index":8442}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":258333,"byte_end":258344,"line_start":512,"line_end":512,"column_start":34,"column_end":45},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":3966},"to":{"krate":2,"index":8467}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":258419,"byte_end":258430,"line_start":515,"line_end":515,"column_start":30,"column_end":41},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":3966},"to":{"krate":2,"index":8874}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":259371,"byte_end":259385,"line_start":542,"line_end":542,"column_start":16,"column_end":30},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":3983},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":259696,"byte_end":259710,"line_start":552,"line_end":552,"column_start":29,"column_end":43},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":3983},"to":{"krate":2,"index":8596}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":260708,"byte_end":260722,"line_start":597,"line_end":597,"column_start":40,"column_end":54},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":3983},"to":{"krate":2,"index":8442}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":261117,"byte_end":261131,"line_start":613,"line_end":613,"column_start":34,"column_end":48},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":3983},"to":{"krate":2,"index":8467}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":261206,"byte_end":261220,"line_start":616,"line_end":616,"column_start":30,"column_end":44},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":3983},"to":{"krate":2,"index":8874}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":261942,"byte_end":261951,"line_start":639,"line_end":639,"column_start":29,"column_end":38},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":3995},"to":{"krate":2,"index":8596}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":263092,"byte_end":263101,"line_start":691,"line_end":691,"column_start":40,"column_end":49},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":3995},"to":{"krate":2,"index":8442}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":263556,"byte_end":263565,"line_start":709,"line_end":709,"column_start":34,"column_end":43},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":3995},"to":{"krate":2,"index":8467}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":263640,"byte_end":263649,"line_start":712,"line_end":712,"column_start":30,"column_end":39},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":3995},"to":{"krate":2,"index":8874}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":264356,"byte_end":264363,"line_start":735,"line_end":735,"column_start":29,"column_end":36},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":4006},"to":{"krate":2,"index":8596}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":265443,"byte_end":265450,"line_start":788,"line_end":788,"column_start":40,"column_end":47},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":4006},"to":{"krate":2,"index":8442}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":265831,"byte_end":265838,"line_start":805,"line_end":805,"column_start":34,"column_end":41},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":4006},"to":{"krate":2,"index":8467}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":265913,"byte_end":265920,"line_start":808,"line_end":808,"column_start":30,"column_end":37},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":4006},"to":{"krate":2,"index":8874}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":266817,"byte_end":266829,"line_start":835,"line_end":835,"column_start":16,"column_end":28},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":4022},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":267132,"byte_end":267144,"line_start":845,"line_end":845,"column_start":29,"column_end":41},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":4022},"to":{"krate":2,"index":8596}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":268117,"byte_end":268129,"line_start":893,"line_end":893,"column_start":40,"column_end":52},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":4022},"to":{"krate":2,"index":8442}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":268497,"byte_end":268509,"line_start":911,"line_end":911,"column_start":34,"column_end":46},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":4022},"to":{"krate":2,"index":8467}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":268584,"byte_end":268596,"line_start":914,"line_end":914,"column_start":30,"column_end":42},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":4022},"to":{"krate":2,"index":8874}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":269521,"byte_end":269536,"line_start":941,"line_end":941,"column_start":16,"column_end":31},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":4039},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":269847,"byte_end":269862,"line_start":951,"line_end":951,"column_start":29,"column_end":44},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":4039},"to":{"krate":2,"index":8596}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":270881,"byte_end":270896,"line_start":997,"line_end":997,"column_start":40,"column_end":55},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":4039},"to":{"krate":2,"index":8442}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":271279,"byte_end":271294,"line_start":1013,"line_end":1013,"column_start":34,"column_end":49},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":4039},"to":{"krate":2,"index":8467}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":271369,"byte_end":271384,"line_start":1016,"line_end":1016,"column_start":30,"column_end":45},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":4039},"to":{"krate":2,"index":8874}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":272111,"byte_end":272121,"line_start":1039,"line_end":1039,"column_start":29,"column_end":39},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":4051},"to":{"krate":2,"index":8596}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":273283,"byte_end":273293,"line_start":1092,"line_end":1092,"column_start":40,"column_end":50},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":4051},"to":{"krate":2,"index":8442}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":273736,"byte_end":273746,"line_start":1110,"line_end":1110,"column_start":34,"column_end":44},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":4051},"to":{"krate":2,"index":8467}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":273821,"byte_end":273831,"line_start":1113,"line_end":1113,"column_start":30,"column_end":40},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":4051},"to":{"krate":2,"index":8874}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":274044,"byte_end":274063,"line_start":1120,"line_end":1120,"column_start":29,"column_end":48},"kind":"SuperTrait","from":{"krate":2,"index":8442},"to":{"krate":0,"index":1188}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":274869,"byte_end":274874,"line_start":1146,"line_end":1146,"column_start":29,"column_end":34},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":4062},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":275150,"byte_end":275155,"line_start":1156,"line_end":1156,"column_start":33,"column_end":38},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":4062},"to":{"krate":0,"index":1188}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":275381,"byte_end":275386,"line_start":1164,"line_end":1164,"column_start":32,"column_end":37},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":4062},"to":{"krate":2,"index":8596}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":276122,"byte_end":276127,"line_start":1195,"line_end":1195,"column_start":43,"column_end":48},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":4062},"to":{"krate":2,"index":8442}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":276654,"byte_end":276659,"line_start":1216,"line_end":1216,"column_start":37,"column_end":42},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":4062},"to":{"krate":2,"index":8874}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":277407,"byte_end":277415,"line_start":1238,"line_end":1238,"column_start":29,"column_end":37},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1224},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":277698,"byte_end":277706,"line_start":1248,"line_end":1248,"column_start":33,"column_end":41},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1224},"to":{"krate":0,"index":1188}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":277978,"byte_end":277986,"line_start":1256,"line_end":1256,"column_start":32,"column_end":40},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1224},"to":{"krate":2,"index":8596}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":278817,"byte_end":278825,"line_start":1292,"line_end":1292,"column_start":43,"column_end":51},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1224},"to":{"krate":2,"index":8442}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":279483,"byte_end":279491,"line_start":1319,"line_end":1319,"column_start":37,"column_end":45},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1224},"to":{"krate":2,"index":8874}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":280101,"byte_end":280107,"line_start":1337,"line_end":1337,"column_start":29,"column_end":35},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":4076},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":280396,"byte_end":280402,"line_start":1347,"line_end":1347,"column_start":33,"column_end":39},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":4076},"to":{"krate":0,"index":1188}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":280591,"byte_end":280597,"line_start":1354,"line_end":1354,"column_start":32,"column_end":38},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":4076},"to":{"krate":2,"index":8596}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":280932,"byte_end":280938,"line_start":1369,"line_end":1369,"column_start":43,"column_end":49},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":4076},"to":{"krate":2,"index":8442}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":281144,"byte_end":281150,"line_start":1377,"line_end":1377,"column_start":37,"column_end":43},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":4076},"to":{"krate":2,"index":8874}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":281764,"byte_end":281773,"line_start":1394,"line_end":1394,"column_start":29,"column_end":38},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1297},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":282065,"byte_end":282074,"line_start":1404,"line_end":1404,"column_start":33,"column_end":42},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1297},"to":{"krate":0,"index":1188}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":282263,"byte_end":282272,"line_start":1411,"line_end":1411,"column_start":32,"column_end":41},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1297},"to":{"krate":2,"index":8596}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":282611,"byte_end":282620,"line_start":1426,"line_end":1426,"column_start":43,"column_end":52},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1297},"to":{"krate":2,"index":8442}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":282826,"byte_end":282835,"line_start":1434,"line_end":1434,"column_start":37,"column_end":46},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1297},"to":{"krate":2,"index":8874}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":283129,"byte_end":283142,"line_start":1445,"line_end":1445,"column_start":22,"column_end":35},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1334},"to":{"krate":2,"index":8596}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":284040,"byte_end":284046,"line_start":1479,"line_end":1479,"column_start":29,"column_end":35},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1344},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":284827,"byte_end":284836,"line_start":1503,"line_end":1503,"column_start":29,"column_end":38},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1356},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":285635,"byte_end":285642,"line_start":1528,"line_end":1528,"column_start":29,"column_end":36},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1368},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":286465,"byte_end":286475,"line_start":1553,"line_end":1553,"column_start":29,"column_end":39},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1380},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":288405,"byte_end":288412,"line_start":1626,"line_end":1626,"column_start":29,"column_end":36},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":4140},"to":{"krate":2,"index":8596}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":289509,"byte_end":289516,"line_start":1682,"line_end":1682,"column_start":40,"column_end":47},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":4140},"to":{"krate":2,"index":8442}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":289936,"byte_end":289943,"line_start":1699,"line_end":1699,"column_start":38,"column_end":45},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":4140},"to":{"krate":2,"index":8467}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/iter.rs","byte_start":290027,"byte_end":290034,"line_start":1702,"line_end":1702,"column_start":34,"column_end":41},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":4140},"to":{"krate":2,"index":8874}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":291487,"byte_end":291495,"line_start":60,"line_end":60,"column_start":32,"column_end":40},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":553},"to":{"krate":2,"index":3362}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":293679,"byte_end":293687,"line_start":121,"line_end":121,"column_start":35,"column_end":43},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":553},"to":{"krate":2,"index":3417}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":294847,"byte_end":294855,"line_start":164,"line_end":164,"column_start":34,"column_end":42},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":553},"to":{"krate":2,"index":3421}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":295965,"byte_end":295973,"line_start":205,"line_end":205,"column_start":35,"column_end":43},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":553},"to":{"krate":2,"index":3425}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":296746,"byte_end":296754,"line_start":237,"line_end":237,"column_start":29,"column_end":37},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":553},"to":{"krate":2,"index":3571}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":296927,"byte_end":296935,"line_start":246,"line_end":246,"column_start":36,"column_end":44},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":553},"to":{"krate":2,"index":3571}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":297110,"byte_end":297118,"line_start":255,"line_end":255,"column_start":39,"column_end":47},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":553},"to":{"krate":2,"index":3575}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":297293,"byte_end":297301,"line_start":262,"line_end":262,"column_start":45,"column_end":53},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":553},"to":{"krate":2,"index":3571}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":297494,"byte_end":297502,"line_start":271,"line_end":271,"column_start":48,"column_end":56},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":553},"to":{"krate":2,"index":3575}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":297681,"byte_end":297689,"line_start":278,"line_end":278,"column_start":40,"column_end":48},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":553},"to":{"krate":2,"index":3571}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":297872,"byte_end":297880,"line_start":287,"line_end":287,"column_start":43,"column_end":51},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":553},"to":{"krate":2,"index":3575}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":298047,"byte_end":298055,"line_start":294,"line_end":294,"column_start":33,"column_end":41},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":553},"to":{"krate":2,"index":3571}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":298207,"byte_end":298215,"line_start":303,"line_end":303,"column_start":36,"column_end":44},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":553},"to":{"krate":2,"index":3575}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":298359,"byte_end":298367,"line_start":310,"line_end":310,"column_start":38,"column_end":46},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":553},"to":{"krate":2,"index":3571}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":298546,"byte_end":298554,"line_start":319,"line_end":319,"column_start":41,"column_end":49},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":553},"to":{"krate":2,"index":3575}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":298733,"byte_end":298741,"line_start":326,"line_end":326,"column_start":47,"column_end":55},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":553},"to":{"krate":2,"index":3571}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":298938,"byte_end":298946,"line_start":335,"line_end":335,"column_start":50,"column_end":58},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":553},"to":{"krate":2,"index":3575}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":305044,"byte_end":305052,"line_start":533,"line_end":533,"column_start":33,"column_end":41},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":553},"to":{"krate":2,"index":3429}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/ops.rs","byte_start":308426,"byte_end":308434,"line_start":637,"line_end":637,"column_start":33,"column_end":41},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":553},"to":{"krate":2,"index":3434}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/proxy.rs","byte_start":312640,"byte_end":312646,"line_start":60,"line_end":60,"column_start":22,"column_end":28},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1631},"to":{"krate":2,"index":3486}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/proxy.rs","byte_start":312790,"byte_end":312796,"line_start":69,"line_end":69,"column_start":25,"column_end":31},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":1631},"to":{"krate":2,"index":3499}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/proxy.rs","byte_start":312930,"byte_end":312936,"line_start":76,"line_end":76,"column_start":21,"column_end":27},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":1631},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":313620,"byte_end":313628,"line_start":42,"line_end":42,"column_start":24,"column_end":32},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":553},"to":{"krate":5,"index":783}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":313788,"byte_end":313796,"line_start":51,"line_end":51,"column_start":19,"column_end":27},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":553},"to":{"krate":2,"index":2920}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":313857,"byte_end":313865,"line_start":54,"line_end":54,"column_start":20,"column_end":28},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":553},"to":{"krate":2,"index":2951}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":314437,"byte_end":314445,"line_start":70,"line_end":70,"column_start":48,"column_end":56},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":553},"to":{"krate":2,"index":2915}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":315205,"byte_end":315213,"line_start":101,"line_end":101,"column_start":49,"column_end":57},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":553},"to":{"krate":2,"index":2915}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":315770,"byte_end":315778,"line_start":117,"line_end":117,"column_start":49,"column_end":57},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":553},"to":{"krate":2,"index":2961}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":316816,"byte_end":316824,"line_start":156,"line_end":156,"column_start":50,"column_end":58},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":553},"to":{"krate":2,"index":2961}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":317167,"byte_end":317175,"line_start":165,"line_end":165,"column_start":27,"column_end":35},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":553},"to":{"krate":2,"index":3163}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":317461,"byte_end":317469,"line_start":174,"line_end":174,"column_start":27,"column_end":35},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":553},"to":{"krate":2,"index":3160}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":321976,"byte_end":321984,"line_start":316,"line_end":316,"column_start":22,"column_end":30},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":553},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":323150,"byte_end":323158,"line_start":355,"line_end":355,"column_start":24,"column_end":32},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":553},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":323726,"byte_end":323736,"line_start":374,"line_end":374,"column_start":16,"column_end":26},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":1815},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":323928,"byte_end":323936,"line_start":381,"line_end":381,"column_start":21,"column_end":29},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":553},"to":{"krate":2,"index":10526}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":324841,"byte_end":324849,"line_start":421,"line_end":421,"column_start":28,"column_end":36},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":553},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/slice/traits.rs","byte_start":325259,"byte_end":325267,"line_start":430,"line_end":430,"column_start":28,"column_end":36},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":553},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":330486,"byte_end":330492,"line_start":60,"line_end":60,"column_start":2,"column_end":8},"kind":"SuperTrait","from":{"krate":0,"index":1921},"to":{"krate":0,"index":1903}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":330496,"byte_end":330502,"line_start":61,"line_end":61,"column_start":4,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":10299},"to":{"krate":0,"index":1903}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":330544,"byte_end":330550,"line_start":63,"line_end":63,"column_start":4,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":3390},"to":{"krate":0,"index":1903}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":330575,"byte_end":330587,"line_start":64,"line_end":64,"column_start":4,"column_end":16},"kind":"SuperTrait","from":{"krate":2,"index":3417},"to":{"krate":0,"index":1903}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":330597,"byte_end":330602,"line_start":65,"line_end":65,"column_start":4,"column_end":9},"kind":"SuperTrait","from":{"krate":2,"index":3395},"to":{"krate":0,"index":1903}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":330627,"byte_end":330638,"line_start":66,"line_end":66,"column_start":4,"column_end":15},"kind":"SuperTrait","from":{"krate":2,"index":3421},"to":{"krate":0,"index":1903}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":330690,"byte_end":330694,"line_start":68,"line_end":68,"column_start":4,"column_end":8},"kind":"SuperTrait","from":{"krate":2,"index":3273},"to":{"krate":0,"index":1903}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":330698,"byte_end":330703,"line_start":69,"line_end":69,"column_start":4,"column_end":9},"kind":"SuperTrait","from":{"krate":2,"index":10288},"to":{"krate":0,"index":1903}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":330707,"byte_end":330714,"line_start":70,"line_end":70,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":10295},"to":{"krate":0,"index":1903}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":330768,"byte_end":330770,"line_start":72,"line_end":72,"column_start":4,"column_end":6},"kind":"SuperTrait","from":{"krate":2,"index":2920},"to":{"krate":0,"index":1903}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":330980,"byte_end":330984,"line_start":76,"line_end":76,"column_start":4,"column_end":8},"kind":"SuperTrait","from":{"krate":2,"index":3169},"to":{"krate":0,"index":1903}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":331030,"byte_end":331037,"line_start":78,"line_end":78,"column_start":4,"column_end":11},"kind":"SuperTrait","from":{"krate":2,"index":3172},"to":{"krate":0,"index":1903}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":331048,"byte_end":331056,"line_start":79,"line_end":79,"column_start":4,"column_end":12},"kind":"SuperTrait","from":{"krate":2,"index":10301},"to":{"krate":0,"index":1903}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":331060,"byte_end":331063,"line_start":80,"line_end":80,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":2,"index":3383},"to":{"krate":0,"index":1903}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":331082,"byte_end":331086,"line_start":81,"line_end":81,"column_start":4,"column_end":8},"kind":"SuperTrait","from":{"krate":2,"index":3263},"to":{"krate":0,"index":1903}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":331090,"byte_end":331093,"line_start":82,"line_end":82,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":2,"index":3405},"to":{"krate":0,"index":1903}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":331116,"byte_end":331125,"line_start":83,"line_end":83,"column_start":4,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":3429},"to":{"krate":0,"index":1903}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":331133,"byte_end":331136,"line_start":84,"line_end":84,"column_start":4,"column_end":7},"kind":"SuperTrait","from":{"krate":2,"index":3411},"to":{"krate":0,"index":1903}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":331159,"byte_end":331168,"line_start":85,"line_end":85,"column_start":4,"column_end":13},"kind":"SuperTrait","from":{"krate":2,"index":3434},"to":{"krate":0,"index":1903}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":331233,"byte_end":331238,"line_start":87,"line_end":87,"column_start":4,"column_end":9},"kind":"SuperTrait","from":{"krate":2,"index":3268},"to":{"krate":0,"index":1903}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":331242,"byte_end":331246,"line_start":88,"line_end":88,"column_start":4,"column_end":8},"kind":"SuperTrait","from":{"krate":2,"index":3275},"to":{"krate":0,"index":1903}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":331250,"byte_end":331258,"line_start":89,"line_end":89,"column_start":4,"column_end":12},"kind":"SuperTrait","from":{"krate":2,"index":10303},"to":{"krate":0,"index":1903}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/store.rs","byte_start":331262,"byte_end":331268,"line_start":90,"line_end":90,"column_start":4,"column_end":10},"kind":"SuperTrait","from":{"krate":20,"index":70},"to":{"krate":0,"index":1903}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed.rs","byte_start":340173,"byte_end":340179,"line_start":65,"line_end":65,"column_start":12,"column_end":18},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":1958},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/api.rs","byte_start":348132,"byte_end":348138,"line_start":29,"line_end":29,"column_start":12,"column_end":18},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":1958},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/iter.rs","byte_start":353441,"byte_end":353447,"line_start":16,"line_end":16,"column_start":29,"column_end":35},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":8398}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/iter.rs","byte_start":354457,"byte_end":354465,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":2068},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/iter.rs","byte_start":354646,"byte_end":354654,"line_start":66,"line_end":66,"column_start":25,"column_end":33},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":2068},"to":{"krate":2,"index":8596}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/iter.rs","byte_start":355295,"byte_end":355303,"line_start":97,"line_end":97,"column_start":36,"column_end":44},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":2068},"to":{"krate":2,"index":8442}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/iter.rs","byte_start":355559,"byte_end":355567,"line_start":107,"line_end":107,"column_start":34,"column_end":42},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":2068},"to":{"krate":2,"index":8467}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/iter.rs","byte_start":355638,"byte_end":355646,"line_start":110,"line_end":110,"column_start":30,"column_end":38},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":2068},"to":{"krate":2,"index":8874}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":356173,"byte_end":356179,"line_start":42,"line_end":42,"column_start":26,"column_end":32},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":3331}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":356347,"byte_end":356353,"line_start":52,"line_end":52,"column_start":26,"column_end":32},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":3362}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":356543,"byte_end":356549,"line_start":59,"line_end":59,"column_start":29,"column_end":35},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":3390}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":356748,"byte_end":356754,"line_start":69,"line_end":69,"column_start":35,"column_end":41},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":3417}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":356939,"byte_end":356945,"line_start":76,"line_end":76,"column_start":28,"column_end":34},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":3395}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":357142,"byte_end":357148,"line_start":86,"line_end":86,"column_start":34,"column_end":40},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":3421}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":357332,"byte_end":357338,"line_start":93,"line_end":93,"column_start":29,"column_end":35},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":3400}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":357537,"byte_end":357543,"line_start":103,"line_end":103,"column_start":35,"column_end":41},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":3425}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":357722,"byte_end":357728,"line_start":110,"line_end":110,"column_start":22,"column_end":28},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":3486}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":357887,"byte_end":357893,"line_start":119,"line_end":119,"column_start":25,"column_end":31},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":3499}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":358032,"byte_end":358038,"line_start":126,"line_end":126,"column_start":21,"column_end":27},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":358331,"byte_end":358337,"line_start":137,"line_end":137,"column_start":29,"column_end":35},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":3571}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":358519,"byte_end":358525,"line_start":146,"line_end":146,"column_start":36,"column_end":42},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":3571}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":358727,"byte_end":358733,"line_start":155,"line_end":155,"column_start":39,"column_end":45},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":3575}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":358924,"byte_end":358930,"line_start":162,"line_end":162,"column_start":40,"column_end":46},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":3571}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":359140,"byte_end":359146,"line_start":171,"line_end":171,"column_start":43,"column_end":49},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":3575}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":359334,"byte_end":359340,"line_start":178,"line_end":178,"column_start":33,"column_end":39},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":3571}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":359524,"byte_end":359530,"line_start":187,"line_end":187,"column_start":36,"column_end":42},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":3575}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":359707,"byte_end":359713,"line_start":194,"line_end":194,"column_start":45,"column_end":51},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":3571}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":359933,"byte_end":359939,"line_start":203,"line_end":203,"column_start":48,"column_end":54},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":3575}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":360137,"byte_end":360143,"line_start":210,"line_end":210,"column_start":38,"column_end":44},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":3571}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":360349,"byte_end":360355,"line_start":219,"line_end":219,"column_start":41,"column_end":47},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":3575}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":360555,"byte_end":360561,"line_start":226,"line_end":226,"column_start":47,"column_end":53},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":3571}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":360785,"byte_end":360791,"line_start":235,"line_end":235,"column_start":50,"column_end":56},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":3575}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":360981,"byte_end":360987,"line_start":245,"line_end":245,"column_start":20,"column_end":26},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":3358}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":361157,"byte_end":361163,"line_start":255,"line_end":255,"column_start":20,"column_end":26},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":3383}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":361340,"byte_end":361346,"line_start":265,"line_end":265,"column_start":27,"column_end":33},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":3405}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":361521,"byte_end":361527,"line_start":275,"line_end":275,"column_start":33,"column_end":39},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":3429}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":361685,"byte_end":361691,"line_start":282,"line_end":282,"column_start":27,"column_end":33},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":3411}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/ops.rs","byte_start":361866,"byte_end":361872,"line_start":292,"line_end":292,"column_start":33,"column_end":39},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":3434}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":362522,"byte_end":362528,"line_start":43,"line_end":43,"column_start":39,"column_end":45},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":2857}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":362675,"byte_end":362681,"line_start":50,"line_end":50,"column_start":42,"column_end":48},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":2860}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":362824,"byte_end":362830,"line_start":57,"line_end":57,"column_start":22,"column_end":28},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":363128,"byte_end":363134,"line_start":71,"line_end":71,"column_start":19,"column_end":25},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":2920}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":363195,"byte_end":363201,"line_start":74,"line_end":74,"column_start":20,"column_end":26},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":2951}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":363377,"byte_end":363383,"line_start":81,"line_end":81,"column_start":46,"column_end":52},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":2915}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":363589,"byte_end":363595,"line_start":88,"line_end":88,"column_start":48,"column_end":54},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":2915}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":363787,"byte_end":363795,"line_start":95,"line_end":95,"column_start":46,"column_end":54},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":553},"to":{"krate":2,"index":2915}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":363986,"byte_end":363992,"line_start":102,"line_end":102,"column_start":47,"column_end":53},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":2961}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":364229,"byte_end":364235,"line_start":109,"line_end":109,"column_start":49,"column_end":55},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":2961}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":364458,"byte_end":364466,"line_start":116,"line_end":116,"column_start":47,"column_end":55},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":553},"to":{"krate":2,"index":2961}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":364678,"byte_end":364684,"line_start":123,"line_end":123,"column_start":38,"column_end":44},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":3163}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":364828,"byte_end":364834,"line_start":130,"line_end":130,"column_start":27,"column_end":33},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":3163}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":364987,"byte_end":364993,"line_start":137,"line_end":137,"column_start":38,"column_end":44},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":3160}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":365125,"byte_end":365131,"line_start":144,"line_end":144,"column_start":27,"column_end":33},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":3160}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":365272,"byte_end":365278,"line_start":151,"line_end":151,"column_start":38,"column_end":44},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":365418,"byte_end":365424,"line_start":158,"line_end":158,"column_start":27,"column_end":33},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":365558,"byte_end":365564,"line_start":165,"line_end":165,"column_start":35,"column_end":41},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":365706,"byte_end":365712,"line_start":172,"line_end":172,"column_start":31,"column_end":37},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":365852,"byte_end":365858,"line_start":179,"line_end":179,"column_start":31,"column_end":37},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":3166}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":365982,"byte_end":365988,"line_start":186,"line_end":186,"column_start":24,"column_end":30},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":366148,"byte_end":366154,"line_start":196,"line_end":196,"column_start":23,"column_end":29},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":10299}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":366313,"byte_end":366319,"line_start":203,"line_end":203,"column_start":22,"column_end":28},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":366620,"byte_end":366626,"line_start":215,"line_end":215,"column_start":24,"column_end":30},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":366789,"byte_end":366795,"line_start":222,"line_end":222,"column_start":25,"column_end":31},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":10301}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":366956,"byte_end":366962,"line_start":229,"line_end":229,"column_start":22,"column_end":28},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":10297}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":367123,"byte_end":367129,"line_start":236,"line_end":236,"column_start":25,"column_end":31},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":10303}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":367289,"byte_end":367295,"line_start":243,"line_end":243,"column_start":21,"column_end":27},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":10526}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":367523,"byte_end":367529,"line_start":251,"line_end":251,"column_start":28,"column_end":34},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/boxed/traits.rs","byte_start":367654,"byte_end":367660,"line_start":255,"line_end":255,"column_start":28,"column_end":34},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":1958},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec.rs","byte_start":376028,"byte_end":376034,"line_start":259,"line_end":259,"column_start":12,"column_end":18},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":2578},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/api.rs","byte_start":392912,"byte_end":392918,"line_start":23,"line_end":23,"column_start":12,"column_end":18},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":2578},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":416983,"byte_end":416989,"line_start":26,"line_end":26,"column_start":29,"column_end":35},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":8407}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":417846,"byte_end":417852,"line_start":61,"line_end":61,"column_start":35,"column_end":41},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":8394}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":418757,"byte_end":418763,"line_start":97,"line_end":97,"column_start":29,"column_end":35},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":8398}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":420171,"byte_end":420176,"line_start":157,"line_end":157,"column_start":16,"column_end":21},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":2734},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":421834,"byte_end":421839,"line_start":221,"line_end":221,"column_start":40,"column_end":45},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":2734},"to":{"krate":2,"index":8442}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":422013,"byte_end":422018,"line_start":228,"line_end":228,"column_start":38,"column_end":43},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":2734},"to":{"krate":2,"index":8467}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":422102,"byte_end":422107,"line_start":231,"line_end":231,"column_start":34,"column_end":39},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":2734},"to":{"krate":2,"index":8874}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":422186,"byte_end":422191,"line_start":234,"line_end":234,"column_start":29,"column_end":34},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":2734},"to":{"krate":2,"index":8596}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":422648,"byte_end":422653,"line_start":259,"line_end":259,"column_start":25,"column_end":30},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":2734},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":423745,"byte_end":423753,"line_start":293,"line_end":293,"column_start":12,"column_end":20},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":2777},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":423945,"byte_end":423953,"line_start":300,"line_end":300,"column_start":36,"column_end":44},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":2777},"to":{"krate":2,"index":8442}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":424209,"byte_end":424217,"line_start":310,"line_end":310,"column_start":34,"column_end":42},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":2777},"to":{"krate":2,"index":8467}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":424288,"byte_end":424296,"line_start":313,"line_end":313,"column_start":30,"column_end":38},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":2777},"to":{"krate":2,"index":8874}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":424362,"byte_end":424370,"line_start":316,"line_end":316,"column_start":25,"column_end":33},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":2777},"to":{"krate":2,"index":8596}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":428442,"byte_end":428448,"line_start":480,"line_end":480,"column_start":43,"column_end":49},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":2805},"to":{"krate":2,"index":8442}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":428644,"byte_end":428650,"line_start":487,"line_end":487,"column_start":41,"column_end":47},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":2805},"to":{"krate":2,"index":8467}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":428764,"byte_end":428770,"line_start":490,"line_end":490,"column_start":37,"column_end":43},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":2805},"to":{"krate":2,"index":8874}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":428923,"byte_end":428929,"line_start":494,"line_end":494,"column_start":32,"column_end":38},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":2805},"to":{"krate":2,"index":8596}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/iter.rs","byte_start":429867,"byte_end":429873,"line_start":529,"line_end":529,"column_start":28,"column_end":34},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":2805},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":432034,"byte_end":432040,"line_start":56,"line_end":56,"column_start":20,"column_end":26},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":3331}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":433462,"byte_end":433468,"line_start":105,"line_end":105,"column_start":26,"column_end":32},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":3362}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":434855,"byte_end":434861,"line_start":150,"line_end":150,"column_start":29,"column_end":35},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":3390}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":435608,"byte_end":435614,"line_start":176,"line_end":176,"column_start":35,"column_end":41},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":3417}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":436582,"byte_end":436588,"line_start":206,"line_end":206,"column_start":28,"column_end":34},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":3395}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":437310,"byte_end":437316,"line_start":232,"line_end":232,"column_start":34,"column_end":40},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":3421}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":438264,"byte_end":438270,"line_start":262,"line_end":262,"column_start":29,"column_end":35},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":3400}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":438997,"byte_end":439003,"line_start":288,"line_end":288,"column_start":35,"column_end":41},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":3425}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":439704,"byte_end":439710,"line_start":316,"line_end":316,"column_start":22,"column_end":28},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":3486}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":440204,"byte_end":440210,"line_start":340,"line_end":340,"column_start":25,"column_end":31},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":3499}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":440685,"byte_end":440691,"line_start":361,"line_end":361,"column_start":21,"column_end":27},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":441183,"byte_end":441189,"line_start":374,"line_end":374,"column_start":29,"column_end":35},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":3571}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":442089,"byte_end":442095,"line_start":409,"line_end":409,"column_start":36,"column_end":42},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":3571}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":442297,"byte_end":442303,"line_start":418,"line_end":418,"column_start":39,"column_end":45},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":3575}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":442494,"byte_end":442500,"line_start":425,"line_end":425,"column_start":40,"column_end":46},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":3571}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":442710,"byte_end":442716,"line_start":434,"line_end":434,"column_start":43,"column_end":49},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":3575}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":442904,"byte_end":442910,"line_start":441,"line_end":441,"column_start":33,"column_end":39},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":3571}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":443094,"byte_end":443100,"line_start":450,"line_end":450,"column_start":36,"column_end":42},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":3575}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":443277,"byte_end":443283,"line_start":457,"line_end":457,"column_start":45,"column_end":51},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":3571}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":443503,"byte_end":443509,"line_start":466,"line_end":466,"column_start":48,"column_end":54},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":3575}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":443707,"byte_end":443713,"line_start":473,"line_end":473,"column_start":38,"column_end":44},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":3571}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":443919,"byte_end":443925,"line_start":482,"line_end":482,"column_start":41,"column_end":47},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":3575}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":444125,"byte_end":444131,"line_start":489,"line_end":489,"column_start":47,"column_end":53},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":3571}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":444355,"byte_end":444361,"line_start":498,"line_end":498,"column_start":50,"column_end":56},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":3575}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":445017,"byte_end":445023,"line_start":515,"line_end":515,"column_start":20,"column_end":26},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":3358}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":445675,"byte_end":445681,"line_start":545,"line_end":545,"column_start":20,"column_end":26},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":3383}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":447286,"byte_end":447292,"line_start":597,"line_end":597,"column_start":27,"column_end":33},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":3405}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":449053,"byte_end":449059,"line_start":652,"line_end":652,"column_start":33,"column_end":39},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":3429}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":451048,"byte_end":451054,"line_start":718,"line_end":718,"column_start":27,"column_end":33},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":3411}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":452821,"byte_end":452827,"line_start":774,"line_end":774,"column_start":33,"column_end":39},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":3434}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":455109,"byte_end":455115,"line_start":836,"line_end":836,"column_start":20,"column_end":26},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":3336}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/ops.rs","byte_start":456697,"byte_end":456703,"line_start":895,"line_end":895,"column_start":26,"column_end":32},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":3366}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":458512,"byte_end":458518,"line_start":44,"line_end":44,"column_start":39,"column_end":45},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":2857}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":459085,"byte_end":459091,"line_start":72,"line_end":72,"column_start":42,"column_end":48},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":2860}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":459670,"byte_end":459676,"line_start":101,"line_end":101,"column_start":22,"column_end":28},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":460642,"byte_end":460648,"line_start":135,"line_end":135,"column_start":19,"column_end":25},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":2920}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":460709,"byte_end":460715,"line_start":138,"line_end":138,"column_start":20,"column_end":26},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":2951}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":461178,"byte_end":461184,"line_start":152,"line_end":152,"column_start":46,"column_end":52},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":2915}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":462188,"byte_end":462194,"line_start":192,"line_end":192,"column_start":48,"column_end":54},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":2915}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":462386,"byte_end":462394,"line_start":199,"line_end":199,"column_start":46,"column_end":54},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":553},"to":{"krate":2,"index":2915}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":462587,"byte_end":462593,"line_start":206,"line_end":206,"column_start":49,"column_end":55},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":2915}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":463826,"byte_end":463832,"line_start":243,"line_end":243,"column_start":47,"column_end":53},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":2961}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":464498,"byte_end":464504,"line_start":272,"line_end":272,"column_start":49,"column_end":55},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":2961}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":464727,"byte_end":464735,"line_start":279,"line_end":279,"column_start":47,"column_end":55},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":553},"to":{"krate":2,"index":2961}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":464959,"byte_end":464965,"line_start":286,"line_end":286,"column_start":50,"column_end":56},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":2961}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":465927,"byte_end":465933,"line_start":314,"line_end":314,"column_start":38,"column_end":44},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":3163}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":466189,"byte_end":466195,"line_start":323,"line_end":323,"column_start":27,"column_end":33},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":3163}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":466336,"byte_end":466342,"line_start":330,"line_end":330,"column_start":38,"column_end":44},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":3160}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":466585,"byte_end":466591,"line_start":339,"line_end":339,"column_start":27,"column_end":33},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":3160}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":466949,"byte_end":466955,"line_start":356,"line_end":356,"column_start":38,"column_end":44},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":467233,"byte_end":467239,"line_start":368,"line_end":368,"column_start":30,"column_end":36},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":467384,"byte_end":467390,"line_start":375,"line_end":375,"column_start":35,"column_end":41},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":467533,"byte_end":467539,"line_start":382,"line_end":382,"column_start":27,"column_end":33},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":467669,"byte_end":467675,"line_start":389,"line_end":389,"column_start":31,"column_end":37},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":467844,"byte_end":467850,"line_start":396,"line_end":396,"column_start":31,"column_end":37},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":3166}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":468226,"byte_end":468232,"line_start":409,"line_end":409,"column_start":29,"column_end":35},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":468360,"byte_end":468366,"line_start":416,"line_end":416,"column_start":29,"column_end":35},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":3166}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":468480,"byte_end":468486,"line_start":423,"line_end":423,"column_start":24,"column_end":30},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":468592,"byte_end":468598,"line_start":430,"line_end":430,"column_start":23,"column_end":29},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":10299}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":469268,"byte_end":469274,"line_start":448,"line_end":448,"column_start":22,"column_end":28},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":470335,"byte_end":470341,"line_start":486,"line_end":486,"column_start":24,"column_end":30},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":470737,"byte_end":470743,"line_start":503,"line_end":503,"column_start":25,"column_end":31},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":10301}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":470904,"byte_end":470910,"line_start":510,"line_end":510,"column_start":22,"column_end":28},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":10297}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":471071,"byte_end":471077,"line_start":517,"line_end":517,"column_start":25,"column_end":31},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":10303}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":471316,"byte_end":471322,"line_start":525,"line_end":525,"column_start":21,"column_end":27},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":10526}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":471747,"byte_end":471753,"line_start":539,"line_end":539,"column_start":28,"column_end":34},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/bitvec-0.17.4/src/vec/traits.rs","byte_start":471878,"byte_end":471884,"line_start":543,"line_end":543,"column_start":28,"column_end":34},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":2578},"to":{"krate":2,"index":3275}}]}