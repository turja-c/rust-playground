{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22","program":"/Users/turjachowdhury/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","chrono","--edition=2018","/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=c6a2f42678170bdd","-C","extra-filename=-c6a2f42678170bdd","--out-dir","/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps","-L","dependency=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps","--extern","num_integer=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libnum_integer-0f9d136c83f5958f.rmeta","--extern","num_traits=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libnum_traits-0cf1414606970bc2.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/turjachowdhury/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libchrono-c6a2f42678170bdd.rmeta"},"prelude":{"crate_id":{"name":"chrono","disambiguator":[12707083240700723598,0]},"crate_root":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src","external_crates":[{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[14771084576412554041,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[2214913233095760658,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[14062411168213242900,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","num":4,"id":{"name":"num_integer","disambiguator":[12435135886996412256,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","num":5,"id":{"name":"num_traits","disambiguator":[18019252465808392738,0]}}],"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":76,"byte_end":22970,"line_start":4,"line_end":532,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":2023},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":20321,"byte_end":20329,"line_start":432,"line_end":432,"column_start":18,"column_end":26},"alias_span":null,"name":"Duration","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2057},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":20686,"byte_end":20690,"line_start":445,"line_end":445,"column_start":20,"column_end":24},"alias_span":null,"name":"Date","value":"","parent":{"krate":0,"index":96}},{"kind":"Use","ref_id":{"krate":0,"index":1886},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":20901,"byte_end":20912,"line_start":453,"line_end":453,"column_start":20,"column_end":31},"alias_span":null,"name":"SubsecRound","value":"","parent":{"krate":0,"index":96}},{"kind":"Use","ref_id":{"krate":0,"index":2088},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":20956,"byte_end":20964,"line_start":455,"line_end":455,"column_start":21,"column_end":29},"alias_span":null,"name":"DateTime","value":"","parent":{"krate":0,"index":96}},{"kind":"Use","ref_id":{"krate":0,"index":2064},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":20966,"byte_end":20979,"line_start":455,"line_end":455,"column_start":31,"column_end":44},"alias_span":null,"name":"SecondsFormat","value":"","parent":{"krate":0,"index":96}},{"kind":"Use","ref_id":{"krate":0,"index":1986},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21024,"byte_end":21032,"line_start":457,"line_end":457,"column_start":21,"column_end":29},"alias_span":null,"name":"Datelike","value":"","parent":{"krate":0,"index":96}},{"kind":"Use","ref_id":{"krate":0,"index":2678},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21034,"byte_end":21039,"line_start":457,"line_end":457,"column_start":31,"column_end":36},"alias_span":null,"name":"Month","value":"","parent":{"krate":0,"index":96}},{"kind":"Use","ref_id":{"krate":0,"index":2005},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21041,"byte_end":21049,"line_start":457,"line_end":457,"column_start":38,"column_end":46},"alias_span":null,"name":"Timelike","value":"","parent":{"krate":0,"index":96}},{"kind":"Use","ref_id":{"krate":0,"index":2631},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21051,"byte_end":21058,"line_start":457,"line_end":457,"column_start":48,"column_end":55},"alias_span":null,"name":"Weekday","value":"","parent":{"krate":0,"index":96}},{"kind":"Use","ref_id":{"krate":0,"index":2553},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21103,"byte_end":21114,"line_start":459,"line_end":459,"column_start":21,"column_end":32},"alias_span":null,"name":"FixedOffset","value":"","parent":{"krate":0,"index":96}},{"kind":"Use","ref_id":{"krate":0,"index":2568},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21116,"byte_end":21119,"line_start":459,"line_end":459,"column_start":34,"column_end":37},"alias_span":null,"name":"Utc","value":"","parent":{"krate":0,"index":96}},{"kind":"Use","ref_id":{"krate":0,"index":2569},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21116,"byte_end":21119,"line_start":459,"line_end":459,"column_start":34,"column_end":37},"alias_span":null,"name":"Utc","value":"","parent":{"krate":0,"index":96}},{"kind":"Use","ref_id":{"krate":0,"index":2399},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21164,"byte_end":21173,"line_start":461,"line_end":461,"column_start":21,"column_end":30},"alias_span":null,"name":"NaiveDate","value":"","parent":{"krate":0,"index":96}},{"kind":"Use","ref_id":{"krate":0,"index":2460},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21175,"byte_end":21188,"line_start":461,"line_end":461,"column_start":32,"column_end":45},"alias_span":null,"name":"NaiveDateTime","value":"","parent":{"krate":0,"index":96}},{"kind":"Use","ref_id":{"krate":0,"index":2533},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21190,"byte_end":21199,"line_start":461,"line_end":461,"column_start":47,"column_end":56},"alias_span":null,"name":"NaiveTime","value":"","parent":{"krate":0,"index":96}},{"kind":"Use","ref_id":{"krate":0,"index":1811},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21244,"byte_end":21250,"line_start":463,"line_end":463,"column_start":21,"column_end":27},"alias_span":null,"name":"Offset","value":"","parent":{"krate":0,"index":96}},{"kind":"Use","ref_id":{"krate":0,"index":1813},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21252,"byte_end":21260,"line_start":463,"line_end":463,"column_start":29,"column_end":37},"alias_span":null,"name":"TimeZone","value":"","parent":{"krate":0,"index":96}},{"kind":"Use","ref_id":{"krate":0,"index":2057},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21312,"byte_end":21316,"line_start":468,"line_end":468,"column_start":16,"column_end":20},"alias_span":null,"name":"Date","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":202},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21318,"byte_end":21326,"line_start":468,"line_end":468,"column_start":22,"column_end":30},"alias_span":null,"name":"MAX_DATE","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":201},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21328,"byte_end":21336,"line_start":468,"line_end":468,"column_start":32,"column_end":40},"alias_span":null,"name":"MIN_DATE","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2088},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21476,"byte_end":21484,"line_start":474,"line_end":474,"column_start":20,"column_end":28},"alias_span":null,"name":"DateTime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2064},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21486,"byte_end":21499,"line_start":474,"line_end":474,"column_start":30,"column_end":43},"alias_span":null,"name":"SecondsFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":416},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21501,"byte_end":21513,"line_start":474,"line_end":474,"column_start":45,"column_end":57},"alias_span":null,"name":"MAX_DATETIME","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":415},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21515,"byte_end":21527,"line_start":474,"line_end":474,"column_start":59,"column_end":71},"alias_span":null,"name":"MIN_DATETIME","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":814},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":114381,"byte_end":114386,"line_start":58,"line_end":58,"column_start":16,"column_end":21},"alias_span":null,"name":"parse","value":"","parent":{"krate":0,"index":565}},{"kind":"Use","ref_id":{"krate":0,"index":2339},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":114404,"byte_end":114410,"line_start":59,"line_end":59,"column_start":17,"column_end":23},"alias_span":null,"name":"Parsed","value":"","parent":{"krate":0,"index":565}},{"kind":"Use","ref_id":{"krate":0,"index":2375},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":114520,"byte_end":114533,"line_start":63,"line_end":63,"column_start":19,"column_end":32},"alias_span":null,"name":"StrftimeItems","value":"","parent":{"krate":0,"index":565}},{"kind":"Use","ref_id":{"krate":0,"index":2296},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21643,"byte_end":21653,"line_start":480,"line_end":480,"column_start":18,"column_end":28},"alias_span":null,"name":"ParseError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":612},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21655,"byte_end":21666,"line_start":480,"line_end":480,"column_start":30,"column_end":41},"alias_span":null,"name":"ParseResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2399},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/mod.rs","byte_start":292271,"byte_end":292280,"line_start":14,"line_end":14,"column_start":22,"column_end":31},"alias_span":null,"name":"NaiveDate","value":"","parent":{"krate":0,"index":967}},{"kind":"Use","ref_id":{"krate":0,"index":2394},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/mod.rs","byte_start":292282,"byte_end":292291,"line_start":14,"line_end":14,"column_start":33,"column_end":42},"alias_span":null,"name":"NaiveWeek","value":"","parent":{"krate":0,"index":967}},{"kind":"Use","ref_id":{"krate":0,"index":1076},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/mod.rs","byte_start":292293,"byte_end":292301,"line_start":14,"line_end":14,"column_start":44,"column_end":52},"alias_span":null,"name":"MAX_DATE","value":"","parent":{"krate":0,"index":967}},{"kind":"Use","ref_id":{"krate":0,"index":1075},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/mod.rs","byte_start":292303,"byte_end":292311,"line_start":14,"line_end":14,"column_start":54,"column_end":62},"alias_span":null,"name":"MIN_DATE","value":"","parent":{"krate":0,"index":967}},{"kind":"Use","ref_id":{"krate":0,"index":2460},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/mod.rs","byte_start":292469,"byte_end":292482,"line_start":19,"line_end":19,"column_start":26,"column_end":39},"alias_span":null,"name":"NaiveDateTime","value":"","parent":{"krate":0,"index":967}},{"kind":"Use","ref_id":{"krate":0,"index":1275},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/mod.rs","byte_start":292484,"byte_end":292496,"line_start":19,"line_end":19,"column_start":41,"column_end":53},"alias_span":null,"name":"MAX_DATETIME","value":"","parent":{"krate":0,"index":967}},{"kind":"Use","ref_id":{"krate":0,"index":1274},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/mod.rs","byte_start":292498,"byte_end":292510,"line_start":19,"line_end":19,"column_start":55,"column_end":67},"alias_span":null,"name":"MIN_DATETIME","value":"","parent":{"krate":0,"index":967}},{"kind":"Use","ref_id":{"krate":0,"index":2517},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/mod.rs","byte_start":292536,"byte_end":292543,"line_start":20,"line_end":20,"column_start":24,"column_end":31},"alias_span":null,"name":"IsoWeek","value":"","parent":{"krate":0,"index":967}},{"kind":"Use","ref_id":{"krate":0,"index":2533},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/mod.rs","byte_start":292565,"byte_end":292574,"line_start":21,"line_end":21,"column_start":21,"column_end":30},"alias_span":null,"name":"NaiveTime","value":"","parent":{"krate":0,"index":967}},{"kind":"Use","ref_id":{"krate":0,"index":2517},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21719,"byte_end":21726,"line_start":484,"line_end":484,"column_start":17,"column_end":24},"alias_span":null,"name":"IsoWeek","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2399},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21728,"byte_end":21737,"line_start":484,"line_end":484,"column_start":26,"column_end":35},"alias_span":null,"name":"NaiveDate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2460},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21739,"byte_end":21752,"line_start":484,"line_end":484,"column_start":37,"column_end":50},"alias_span":null,"name":"NaiveDateTime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2533},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21754,"byte_end":21763,"line_start":484,"line_end":484,"column_start":52,"column_end":61},"alias_span":null,"name":"NaiveTime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2394},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21765,"byte_end":21774,"line_start":484,"line_end":484,"column_start":63,"column_end":72},"alias_span":null,"name":"NaiveWeek","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2553},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":555266,"byte_end":555277,"line_start":29,"line_end":29,"column_start":22,"column_end":33},"alias_span":null,"name":"FixedOffset","value":"","parent":{"krate":0,"index":1628}},{"kind":"Use","ref_id":{"krate":0,"index":2568},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":555400,"byte_end":555403,"line_start":37,"line_end":37,"column_start":20,"column_end":23},"alias_span":null,"name":"Utc","value":"","parent":{"krate":0,"index":1628}},{"kind":"Use","ref_id":{"krate":0,"index":2569},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":555400,"byte_end":555403,"line_start":37,"line_end":37,"column_start":20,"column_end":23},"alias_span":null,"name":"Utc","value":"","parent":{"krate":0,"index":1628}},{"kind":"Use","ref_id":{"krate":0,"index":2553},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21896,"byte_end":21907,"line_start":491,"line_end":491,"column_start":18,"column_end":29},"alias_span":null,"name":"FixedOffset","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2579},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21909,"byte_end":21920,"line_start":491,"line_end":491,"column_start":31,"column_end":42},"alias_span":null,"name":"LocalResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1811},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21922,"byte_end":21928,"line_start":491,"line_end":491,"column_start":44,"column_end":50},"alias_span":null,"name":"Offset","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1813},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21930,"byte_end":21938,"line_start":491,"line_end":491,"column_start":52,"column_end":60},"alias_span":null,"name":"TimeZone","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2568},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21940,"byte_end":21943,"line_start":491,"line_end":491,"column_start":62,"column_end":65},"alias_span":null,"name":"Utc","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2569},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21940,"byte_end":21943,"line_start":491,"line_end":491,"column_start":62,"column_end":65},"alias_span":null,"name":"Utc","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1894},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21974,"byte_end":21987,"line_start":494,"line_end":494,"column_start":17,"column_end":30},"alias_span":null,"name":"DurationRound","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2613},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21989,"byte_end":22002,"line_start":494,"line_end":494,"column_start":32,"column_end":45},"alias_span":null,"name":"RoundingError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1886},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":22004,"byte_end":22015,"line_start":494,"line_end":494,"column_start":47,"column_end":58},"alias_span":null,"name":"SubsecRound","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2667},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":22050,"byte_end":22067,"line_start":497,"line_end":497,"column_start":19,"column_end":36},"alias_span":null,"name":"ParseWeekdayError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2631},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":22069,"byte_end":22076,"line_start":497,"line_end":497,"column_start":38,"column_end":45},"alias_span":null,"name":"Weekday","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2678},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":22107,"byte_end":22112,"line_start":500,"line_end":500,"column_start":17,"column_end":22},"alias_span":null,"name":"Month","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2729},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":22114,"byte_end":22120,"line_start":500,"line_end":500,"column_start":24,"column_end":30},"alias_span":null,"name":"Months","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2730},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":22114,"byte_end":22120,"line_start":500,"line_end":500,"column_start":24,"column_end":30},"alias_span":null,"name":"Months","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2749},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":22122,"byte_end":22137,"line_start":500,"line_end":500,"column_start":32,"column_end":47},"alias_span":null,"name":"ParseMonthError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1986},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":22170,"byte_end":22178,"line_start":503,"line_end":503,"column_start":18,"column_end":26},"alias_span":null,"name":"Datelike","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2005},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":22180,"byte_end":22188,"line_start":503,"line_end":503,"column_start":28,"column_end":36},"alias_span":null,"name":"Timelike","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":76,"byte_end":22970,"line_start":4,"line_end":532,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":93},{"krate":0,"index":96},{"krate":0,"index":147},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":317},{"krate":0,"index":320},{"krate":0,"index":323},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":556},{"krate":0,"index":559},{"krate":0,"index":562},{"krate":0,"index":565},{"krate":0,"index":960},{"krate":0,"index":961},{"krate":0,"index":964},{"krate":0,"index":967},{"krate":0,"index":1612},{"krate":0,"index":1613},{"krate":0,"index":1616},{"krate":0,"index":1619},{"krate":0,"index":1622},{"krate":0,"index":1625},{"krate":0,"index":1628},{"krate":0,"index":1838},{"krate":0,"index":1839},{"krate":0,"index":1842},{"krate":0,"index":1845},{"krate":0,"index":1848},{"krate":0,"index":1851},{"krate":0,"index":1852},{"krate":0,"index":1854},{"krate":0,"index":1914},{"krate":0,"index":1915},{"krate":0,"index":1918},{"krate":0,"index":1921},{"krate":0,"index":1924},{"krate":0,"index":1944},{"krate":0,"index":1945},{"krate":0,"index":1948},{"krate":0,"index":1951},{"krate":0,"index":1968},{"krate":0,"index":1969},{"krate":0,"index":1972},{"krate":0,"index":1973},{"krate":0,"index":1975},{"krate":0,"index":1978},{"krate":0,"index":2016},{"krate":0,"index":2017},{"krate":0,"index":2020}],"decl_id":null,"docs":" # Chrono: Date and Time for Rust","sig":null,"attributes":[{"value":"/ # Chrono: Date and Time for Rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":76,"byte_end":112,"line_start":4,"line_end":4,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":113,"byte_end":116,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ It aims to be a feature-complete superset of","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":117,"byte_end":165,"line_start":6,"line_end":6,"column_start":1,"column_end":49}},{"value":"/ the [time](https://github.com/rust-lang-deprecated/time) library.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":166,"byte_end":235,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"/ In particular,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":236,"byte_end":254,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":255,"byte_end":258,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ * Chrono strictly adheres to ISO 8601.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":259,"byte_end":301,"line_start":10,"line_end":10,"column_start":1,"column_end":43}},{"value":"/ * Chrono is timezone-aware by default, with separate timezone-naive types.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":302,"byte_end":380,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ * Chrono is space-optimal and (while not being the primary goal) reasonably efficient.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":381,"byte_end":471,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":472,"byte_end":475,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ There were several previous attempts to bring a good date and time library to Rust,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":476,"byte_end":563,"line_start":14,"line_end":14,"column_start":1,"column_end":88}},{"value":"/ which Chrono builds upon and should acknowledge:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":564,"byte_end":616,"line_start":15,"line_end":15,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":617,"byte_end":620,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ * [Initial research on","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":621,"byte_end":647,"line_start":17,"line_end":17,"column_start":1,"column_end":27}},{"value":"/    the wiki](https://github.com/rust-lang/rust-wiki-backup/blob/master/Lib-datetime.md)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":648,"byte_end":739,"line_start":18,"line_end":18,"column_start":1,"column_end":92}},{"value":"/ * Dietrich Epp's [datetime-rs](https://github.com/depp/datetime-rs)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":740,"byte_end":811,"line_start":19,"line_end":19,"column_start":1,"column_end":72}},{"value":"/ * Luis de Bethencourt's [rust-datetime](https://github.com/luisbg/rust-datetime)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":812,"byte_end":896,"line_start":20,"line_end":20,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":897,"byte_end":900,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Any significant changes to Chrono are documented in","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":901,"byte_end":956,"line_start":22,"line_end":22,"column_start":1,"column_end":56}},{"value":"/ the [`CHANGELOG.md`](https://github.com/chronotope/chrono/blob/main/CHANGELOG.md) file.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":957,"byte_end":1048,"line_start":23,"line_end":23,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1049,"byte_end":1052,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ## Usage","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1053,"byte_end":1065,"line_start":25,"line_end":25,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1066,"byte_end":1069,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Put this in your `Cargo.toml`:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1070,"byte_end":1104,"line_start":27,"line_end":27,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1105,"byte_end":1108,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1109,"byte_end":1120,"line_start":29,"line_end":29,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1121,"byte_end":1139,"line_start":30,"line_end":30,"column_start":1,"column_end":19}},{"value":"/ chrono = \"0.4\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1140,"byte_end":1158,"line_start":31,"line_end":31,"column_start":1,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1159,"byte_end":1166,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1167,"byte_end":1170,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ### Features","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1171,"byte_end":1187,"line_start":34,"line_end":34,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1188,"byte_end":1191,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Chrono supports various runtime environments and operating systems, and has","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1192,"byte_end":1271,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ several features that may be enabled or disabled.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1272,"byte_end":1325,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1326,"byte_end":1329,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Default features:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1330,"byte_end":1351,"line_start":39,"line_end":39,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1352,"byte_end":1355,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ - `alloc`: Enable features that depend on allocation (primarily string formatting)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1356,"byte_end":1442,"line_start":41,"line_end":41,"column_start":1,"column_end":87}},{"value":"/ - `std`: Enables functionality that depends on the standard library. This","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1443,"byte_end":1520,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"/   is a superset of `alloc` and adds interoperation with standard library types","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1521,"byte_end":1603,"line_start":43,"line_end":43,"column_start":1,"column_end":83}},{"value":"/   and traits.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1604,"byte_end":1621,"line_start":44,"line_end":44,"column_start":1,"column_end":18}},{"value":"/ - `clock`: Enables reading the system time (`now`) that depends on the standard library for","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1622,"byte_end":1717,"line_start":45,"line_end":45,"column_start":1,"column_end":96}},{"value":"/ UNIX-like operating systems and the Windows API (`winapi`) for Windows.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1718,"byte_end":1793,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1794,"byte_end":1797,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Optional features:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1798,"byte_end":1820,"line_start":48,"line_end":48,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1821,"byte_end":1824,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ - [`serde`][]: Enable serialization/deserialization via serde.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1825,"byte_end":1891,"line_start":50,"line_end":50,"column_start":1,"column_end":67}},{"value":"/ - `unstable-locales`: Enable localization. This adds various methods with a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1892,"byte_end":1971,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/   `_localized` suffix. The implementation and API may change or even be","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":1972,"byte_end":2047,"line_start":52,"line_end":52,"column_start":1,"column_end":76}},{"value":"/   removed in a patch release. Feedback welcome.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":2048,"byte_end":2099,"line_start":53,"line_end":53,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":2100,"byte_end":2103,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ [`serde`]: https://github.com/serde-rs/serde","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":2104,"byte_end":2152,"line_start":55,"line_end":55,"column_start":1,"column_end":49}},{"value":"/ [wasm-bindgen]: https://github.com/rustwasm/wasm-bindgen","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":2153,"byte_end":2213,"line_start":56,"line_end":56,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":2214,"byte_end":2217,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ See the [cargo docs][] for examples of specifying features.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":2218,"byte_end":2281,"line_start":58,"line_end":58,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":2282,"byte_end":2285,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ [cargo docs]: https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html#choosing-features","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":2286,"byte_end":2392,"line_start":60,"line_end":60,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":2393,"byte_end":2396,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ## Overview","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":2397,"byte_end":2412,"line_start":62,"line_end":62,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":2413,"byte_end":2416,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ### Duration","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":2417,"byte_end":2433,"line_start":64,"line_end":64,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":2434,"byte_end":2437,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Chrono currently uses its own [`Duration`] type to represent the magnitude","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":2438,"byte_end":2516,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ of a time span. Since this has the same name as the newer, standard type for","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":2517,"byte_end":2597,"line_start":67,"line_end":67,"column_start":1,"column_end":81}},{"value":"/ duration, the reference will refer this type as `OldDuration`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":2598,"byte_end":2664,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":2665,"byte_end":2668,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ Note that this is an \"accurate\" duration represented as seconds and","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":2669,"byte_end":2740,"line_start":70,"line_end":70,"column_start":1,"column_end":72}},{"value":"/ nanoseconds and does not represent \"nominal\" components such as days or","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":2741,"byte_end":2816,"line_start":71,"line_end":71,"column_start":1,"column_end":76}},{"value":"/ months.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":2817,"byte_end":2828,"line_start":72,"line_end":72,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":2829,"byte_end":2832,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ When the `oldtime` feature is enabled, [`Duration`] is an alias for the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":2833,"byte_end":2908,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ [`time::Duration`](https://docs.rs/time/0.1.40/time/struct.Duration.html)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":2909,"byte_end":2986,"line_start":75,"line_end":75,"column_start":1,"column_end":78}},{"value":"/ type from v0.1 of the time crate. time v0.1 is deprecated, so new code","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":2987,"byte_end":3061,"line_start":76,"line_end":76,"column_start":1,"column_end":75}},{"value":"/ should disable the `oldtime` feature and use the `chrono::Duration` type","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":3062,"byte_end":3138,"line_start":77,"line_end":77,"column_start":1,"column_end":77}},{"value":"/ instead. The `oldtime` feature is enabled by default for backwards","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":3139,"byte_end":3209,"line_start":78,"line_end":78,"column_start":1,"column_end":71}},{"value":"/ compatibility, but future versions of Chrono are likely to remove the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":3210,"byte_end":3283,"line_start":79,"line_end":79,"column_start":1,"column_end":74}},{"value":"/ feature entirely.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":3284,"byte_end":3305,"line_start":80,"line_end":80,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":3306,"byte_end":3309,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ Chrono does not yet natively support","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":3310,"byte_end":3350,"line_start":82,"line_end":82,"column_start":1,"column_end":41}},{"value":"/ the standard [`Duration`](https://doc.rust-lang.org/std/time/struct.Duration.html) type,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":3351,"byte_end":3443,"line_start":83,"line_end":83,"column_start":1,"column_end":93}},{"value":"/ but it will be supported in the future.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":3444,"byte_end":3487,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/ Meanwhile you can convert between two types with","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":3488,"byte_end":3540,"line_start":85,"line_end":85,"column_start":1,"column_end":53}},{"value":"/ [`Duration::from_std`](https://docs.rs/time/0.1.40/time/struct.Duration.html#method.from_std)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":3541,"byte_end":3638,"line_start":86,"line_end":86,"column_start":1,"column_end":98}},{"value":"/ and","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":3639,"byte_end":3646,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/ [`Duration::to_std`](https://docs.rs/time/0.1.40/time/struct.Duration.html#method.to_std)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":3647,"byte_end":3740,"line_start":88,"line_end":88,"column_start":1,"column_end":94}},{"value":"/ methods.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":3741,"byte_end":3753,"line_start":89,"line_end":89,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":3754,"byte_end":3757,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ### Date and Time","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":3758,"byte_end":3779,"line_start":91,"line_end":91,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":3780,"byte_end":3783,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ Chrono provides a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":3784,"byte_end":3805,"line_start":93,"line_end":93,"column_start":1,"column_end":22}},{"value":"/ [**`DateTime`**](./struct.DateTime.html)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":3806,"byte_end":3850,"line_start":94,"line_end":94,"column_start":1,"column_end":45}},{"value":"/ type to represent a date and a time in a timezone.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":3851,"byte_end":3905,"line_start":95,"line_end":95,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":3906,"byte_end":3909,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ For more abstract moment-in-time tracking such as internal timekeeping","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":3910,"byte_end":3984,"line_start":97,"line_end":97,"column_start":1,"column_end":75}},{"value":"/ that is unconcerned with timezones, consider","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":3985,"byte_end":4033,"line_start":98,"line_end":98,"column_start":1,"column_end":49}},{"value":"/ [`time::SystemTime`](https://doc.rust-lang.org/std/time/struct.SystemTime.html),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":4034,"byte_end":4118,"line_start":99,"line_end":99,"column_start":1,"column_end":85}},{"value":"/ which tracks your system clock, or","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":4119,"byte_end":4157,"line_start":100,"line_end":100,"column_start":1,"column_end":39}},{"value":"/ [`time::Instant`](https://doc.rust-lang.org/std/time/struct.Instant.html), which","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":4158,"byte_end":4242,"line_start":101,"line_end":101,"column_start":1,"column_end":85}},{"value":"/ is an opaque but monotonically-increasing representation of a moment in time.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":4243,"byte_end":4324,"line_start":102,"line_end":102,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":4325,"byte_end":4328,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ `DateTime` is timezone-aware and must be constructed from","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":4329,"byte_end":4390,"line_start":104,"line_end":104,"column_start":1,"column_end":62}},{"value":"/ the [**`TimeZone`**](./offset/trait.TimeZone.html) object,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":4391,"byte_end":4453,"line_start":105,"line_end":105,"column_start":1,"column_end":63}},{"value":"/ which defines how the local date is converted to and back from the UTC date.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":4454,"byte_end":4534,"line_start":106,"line_end":106,"column_start":1,"column_end":81}},{"value":"/ There are three well-known `TimeZone` implementations:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":4535,"byte_end":4593,"line_start":107,"line_end":107,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":4594,"byte_end":4597,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ * [**`Utc`**](./offset/struct.Utc.html) specifies the UTC time zone. It is most efficient.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":4598,"byte_end":4692,"line_start":109,"line_end":109,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":4693,"byte_end":4696,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ * [**`Local`**](./offset/struct.Local.html) specifies the system local time zone.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":4697,"byte_end":4782,"line_start":111,"line_end":111,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":4783,"byte_end":4786,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ * [**`FixedOffset`**](./offset/struct.FixedOffset.html) specifies","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":4787,"byte_end":4856,"line_start":113,"line_end":113,"column_start":1,"column_end":70}},{"value":"/   an arbitrary, fixed time zone such as UTC+09:00 or UTC-10:30.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":4857,"byte_end":4924,"line_start":114,"line_end":114,"column_start":1,"column_end":68}},{"value":"/   This often results from the parsed textual date and time.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":4925,"byte_end":4988,"line_start":115,"line_end":115,"column_start":1,"column_end":64}},{"value":"/   Since it stores the most information and does not depend on the system environment,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":4989,"byte_end":5078,"line_start":116,"line_end":116,"column_start":1,"column_end":90}},{"value":"/   you would want to normalize other `TimeZone`s into this type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":5079,"byte_end":5146,"line_start":117,"line_end":117,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":5147,"byte_end":5150,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ `DateTime`s with different `TimeZone` types are distinct and do not mix,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":5151,"byte_end":5227,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/ but can be converted to each other using","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":5228,"byte_end":5272,"line_start":120,"line_end":120,"column_start":1,"column_end":45}},{"value":"/ the [`DateTime::with_timezone`](./struct.DateTime.html#method.with_timezone) method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":5273,"byte_end":5361,"line_start":121,"line_end":121,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":5362,"byte_end":5365,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ You can get the current date and time in the UTC time zone","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":5366,"byte_end":5428,"line_start":123,"line_end":123,"column_start":1,"column_end":63}},{"value":"/ ([`Utc::now()`](./offset/struct.Utc.html#method.now))","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":5429,"byte_end":5486,"line_start":124,"line_end":124,"column_start":1,"column_end":58}},{"value":"/ or in the local time zone","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":5487,"byte_end":5516,"line_start":125,"line_end":125,"column_start":1,"column_end":30}},{"value":"/ ([`Local::now()`](./offset/struct.Local.html#method.now)).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":5517,"byte_end":5579,"line_start":126,"line_end":126,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":5580,"byte_end":5583,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":5584,"byte_end":5595,"line_start":128,"line_end":128,"column_start":1,"column_end":12}},{"value":"/ use chrono::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":5596,"byte_end":5623,"line_start":129,"line_end":129,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":5624,"byte_end":5627,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ let utc: DateTime<Utc> = Utc::now();       // e.g. `2014-11-28T12:45:59.324310806Z`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":5628,"byte_end":5715,"line_start":131,"line_end":131,"column_start":1,"column_end":88}},{"value":"/ let local: DateTime<Local> = Local::now(); // e.g. `2014-11-28T21:45:59.324310806+09:00`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":5716,"byte_end":5808,"line_start":132,"line_end":132,"column_start":1,"column_end":93}},{"value":"/ # let _ = utc; let _ = local;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":5809,"byte_end":5842,"line_start":133,"line_end":133,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":5843,"byte_end":5850,"line_start":134,"line_end":134,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":5851,"byte_end":5854,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ Alternatively, you can create your own date and time.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":5855,"byte_end":5912,"line_start":136,"line_end":136,"column_start":1,"column_end":58}},{"value":"/ This is a bit verbose due to Rust's lack of function and method overloading,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":5913,"byte_end":5993,"line_start":137,"line_end":137,"column_start":1,"column_end":81}},{"value":"/ but in turn we get a rich combination of initialization methods.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":5994,"byte_end":6062,"line_start":138,"line_end":138,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":6063,"byte_end":6066,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":6067,"byte_end":6078,"line_start":140,"line_end":140,"column_start":1,"column_end":12}},{"value":"/ use chrono::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":6079,"byte_end":6106,"line_start":141,"line_end":141,"column_start":1,"column_end":28}},{"value":"/ use chrono::offset::LocalResult;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":6107,"byte_end":6143,"line_start":142,"line_end":142,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":6144,"byte_end":6147,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ let dt = Utc.ymd(2014, 7, 8).and_hms(9, 10, 11); // `2014-07-08T09:10:11Z`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":6148,"byte_end":6226,"line_start":144,"line_end":144,"column_start":1,"column_end":79}},{"value":"/ // July 8 is 188th day of the year 2014 (`o` for \"ordinal\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":6227,"byte_end":6290,"line_start":145,"line_end":145,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(dt, Utc.yo(2014, 189).and_hms(9, 10, 11));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":6291,"byte_end":6348,"line_start":146,"line_end":146,"column_start":1,"column_end":58}},{"value":"/ // July 8 is Tuesday in ISO week 28 of the year 2014.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":6349,"byte_end":6406,"line_start":147,"line_end":147,"column_start":1,"column_end":58}},{"value":"/ assert_eq!(dt, Utc.isoywd(2014, 28, Weekday::Tue).and_hms(9, 10, 11));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":6407,"byte_end":6481,"line_start":148,"line_end":148,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":6482,"byte_end":6485,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ let dt = Utc.ymd(2014, 7, 8).and_hms_milli(9, 10, 11, 12); // `2014-07-08T09:10:11.012Z`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":6486,"byte_end":6578,"line_start":150,"line_end":150,"column_start":1,"column_end":93}},{"value":"/ assert_eq!(dt, Utc.ymd(2014, 7, 8).and_hms_micro(9, 10, 11, 12_000));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":6579,"byte_end":6652,"line_start":151,"line_end":151,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(dt, Utc.ymd(2014, 7, 8).and_hms_nano(9, 10, 11, 12_000_000));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":6653,"byte_end":6729,"line_start":152,"line_end":152,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":6730,"byte_end":6733,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ // dynamic verification","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":6734,"byte_end":6761,"line_start":154,"line_end":154,"column_start":1,"column_end":28}},{"value":"/ assert_eq!(Utc.ymd_opt(2014, 7, 8).and_hms_opt(21, 15, 33),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":6762,"byte_end":6825,"line_start":155,"line_end":155,"column_start":1,"column_end":64}},{"value":"/            LocalResult::Single(Utc.ymd(2014, 7, 8).and_hms(21, 15, 33)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":6826,"byte_end":6903,"line_start":156,"line_end":156,"column_start":1,"column_end":78}},{"value":"/ assert_eq!(Utc.ymd_opt(2014, 7, 8).and_hms_opt(80, 15, 33), LocalResult::None);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":6904,"byte_end":6987,"line_start":157,"line_end":157,"column_start":1,"column_end":84}},{"value":"/ assert_eq!(Utc.ymd_opt(2014, 7, 38).and_hms_opt(21, 15, 33), LocalResult::None);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":6988,"byte_end":7072,"line_start":158,"line_end":158,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":7073,"byte_end":7076,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ // other time zone objects can be used to construct a local datetime.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":7077,"byte_end":7150,"line_start":160,"line_end":160,"column_start":1,"column_end":74}},{"value":"/ // obviously, `local_dt` is normally different from `dt`, but `fixed_dt` should be identical.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":7151,"byte_end":7248,"line_start":161,"line_end":161,"column_start":1,"column_end":98}},{"value":"/ let local_dt = Local.ymd(2014, 7, 8).and_hms_milli(9, 10, 11, 12);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":7249,"byte_end":7319,"line_start":162,"line_end":162,"column_start":1,"column_end":71}},{"value":"/ let fixed_dt = FixedOffset::east(9 * 3600).ymd(2014, 7, 8).and_hms_milli(18, 10, 11, 12);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":7320,"byte_end":7413,"line_start":163,"line_end":163,"column_start":1,"column_end":94}},{"value":"/ assert_eq!(dt, fixed_dt);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":7414,"byte_end":7443,"line_start":164,"line_end":164,"column_start":1,"column_end":30}},{"value":"/ # let _ = local_dt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":7444,"byte_end":7467,"line_start":165,"line_end":165,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":7468,"byte_end":7475,"line_start":166,"line_end":166,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":7476,"byte_end":7479,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ Various properties are available to the date and time, and can be altered individually.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":7480,"byte_end":7571,"line_start":168,"line_end":168,"column_start":1,"column_end":92}},{"value":"/ Most of them are defined in the traits [`Datelike`](./trait.Datelike.html) and","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":7572,"byte_end":7654,"line_start":169,"line_end":169,"column_start":1,"column_end":83}},{"value":"/ [`Timelike`](./trait.Timelike.html) which you should `use` before.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":7655,"byte_end":7725,"line_start":170,"line_end":170,"column_start":1,"column_end":71}},{"value":"/ Addition and subtraction is also supported.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":7726,"byte_end":7773,"line_start":171,"line_end":171,"column_start":1,"column_end":48}},{"value":"/ The following illustrates most supported operations to the date and time:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":7774,"byte_end":7851,"line_start":172,"line_end":172,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":7852,"byte_end":7855,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":7856,"byte_end":7867,"line_start":174,"line_end":174,"column_start":1,"column_end":12}},{"value":"/ use chrono::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":7868,"byte_end":7895,"line_start":175,"line_end":175,"column_start":1,"column_end":28}},{"value":"/ use chrono::Duration;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":7896,"byte_end":7921,"line_start":176,"line_end":176,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":7922,"byte_end":7925,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ // assume this returned `2014-11-28T21:45:59.324310806+09:00`:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":7926,"byte_end":7992,"line_start":178,"line_end":178,"column_start":1,"column_end":67}},{"value":"/ let dt = FixedOffset::east(9*3600).ymd(2014, 11, 28).and_hms_nano(21, 45, 59, 324310806);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":7993,"byte_end":8086,"line_start":179,"line_end":179,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":8087,"byte_end":8090,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ // property accessors","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":8091,"byte_end":8116,"line_start":181,"line_end":181,"column_start":1,"column_end":26}},{"value":"/ assert_eq!((dt.year(), dt.month(), dt.day()), (2014, 11, 28));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":8117,"byte_end":8183,"line_start":182,"line_end":182,"column_start":1,"column_end":67}},{"value":"/ assert_eq!((dt.month0(), dt.day0()), (10, 27)); // for unfortunate souls","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":8184,"byte_end":8260,"line_start":183,"line_end":183,"column_start":1,"column_end":77}},{"value":"/ assert_eq!((dt.hour(), dt.minute(), dt.second()), (21, 45, 59));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":8261,"byte_end":8329,"line_start":184,"line_end":184,"column_start":1,"column_end":69}},{"value":"/ assert_eq!(dt.weekday(), Weekday::Fri);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":8330,"byte_end":8373,"line_start":185,"line_end":185,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(dt.weekday().number_from_monday(), 5); // Mon=1, ..., Sun=7","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":8374,"byte_end":8448,"line_start":186,"line_end":186,"column_start":1,"column_end":75}},{"value":"/ assert_eq!(dt.ordinal(), 332); // the day of year","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":8449,"byte_end":8502,"line_start":187,"line_end":187,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(dt.num_days_from_ce(), 735565); // the number of days from and including Jan 1, 1","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":8503,"byte_end":8599,"line_start":188,"line_end":188,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":8600,"byte_end":8603,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ // time zone accessor and manipulation","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":8604,"byte_end":8646,"line_start":190,"line_end":190,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(dt.offset().fix().local_minus_utc(), 9 * 3600);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":8647,"byte_end":8709,"line_start":191,"line_end":191,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(dt.timezone(), FixedOffset::east(9 * 3600));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":8710,"byte_end":8769,"line_start":192,"line_end":192,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(dt.with_timezone(&Utc), Utc.ymd(2014, 11, 28).and_hms_nano(12, 45, 59, 324310806));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":8770,"byte_end":8868,"line_start":193,"line_end":193,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":8869,"byte_end":8872,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ // a sample of property manipulations (validates dynamically)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":8873,"byte_end":8938,"line_start":195,"line_end":195,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(dt.with_day(29).unwrap().weekday(), Weekday::Sat); // 2014-11-29 is Saturday","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":8939,"byte_end":9030,"line_start":196,"line_end":196,"column_start":1,"column_end":92}},{"value":"/ assert_eq!(dt.with_day(32), None);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":9031,"byte_end":9069,"line_start":197,"line_end":197,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(dt.with_year(-300).unwrap().num_days_from_ce(), -109606); // November 29, 301 BCE","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":9070,"byte_end":9166,"line_start":198,"line_end":198,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":9167,"byte_end":9170,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ // arithmetic operations","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":9171,"byte_end":9199,"line_start":200,"line_end":200,"column_start":1,"column_end":29}},{"value":"/ let dt1 = Utc.ymd(2014, 11, 14).and_hms(8, 9, 10);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":9200,"byte_end":9254,"line_start":201,"line_end":201,"column_start":1,"column_end":55}},{"value":"/ let dt2 = Utc.ymd(2014, 11, 14).and_hms(10, 9, 8);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":9255,"byte_end":9309,"line_start":202,"line_end":202,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(dt1.signed_duration_since(dt2), Duration::seconds(-2 * 3600 + 2));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":9310,"byte_end":9391,"line_start":203,"line_end":203,"column_start":1,"column_end":82}},{"value":"/ assert_eq!(dt2.signed_duration_since(dt1), Duration::seconds(2 * 3600 - 2));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":9392,"byte_end":9472,"line_start":204,"line_end":204,"column_start":1,"column_end":81}},{"value":"/ assert_eq!(Utc.ymd(1970, 1, 1).and_hms(0, 0, 0) + Duration::seconds(1_000_000_000),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":9473,"byte_end":9560,"line_start":205,"line_end":205,"column_start":1,"column_end":88}},{"value":"/            Utc.ymd(2001, 9, 9).and_hms(1, 46, 40));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":9561,"byte_end":9616,"line_start":206,"line_end":206,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(Utc.ymd(1970, 1, 1).and_hms(0, 0, 0) - Duration::seconds(1_000_000_000),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":9617,"byte_end":9704,"line_start":207,"line_end":207,"column_start":1,"column_end":88}},{"value":"/            Utc.ymd(1938, 4, 24).and_hms(22, 13, 20));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":9705,"byte_end":9762,"line_start":208,"line_end":208,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":9763,"byte_end":9770,"line_start":209,"line_end":209,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":9771,"byte_end":9774,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ ### Formatting and Parsing","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":9775,"byte_end":9805,"line_start":211,"line_end":211,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":9806,"byte_end":9809,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ Formatting is done via the [`format`](./struct.DateTime.html#method.format) method,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":9810,"byte_end":9897,"line_start":213,"line_end":213,"column_start":1,"column_end":88}},{"value":"/ which format is equivalent to the familiar `strftime` format.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":9898,"byte_end":9963,"line_start":214,"line_end":214,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":9964,"byte_end":9967,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ See [`format::strftime`](./format/strftime/index.html#specifiers)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":9968,"byte_end":10037,"line_start":216,"line_end":216,"column_start":1,"column_end":70}},{"value":"/ documentation for full syntax and list of specifiers.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10038,"byte_end":10095,"line_start":217,"line_end":217,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10096,"byte_end":10099,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ The default `to_string` method and `{:?}` specifier also give a reasonable representation.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10100,"byte_end":10194,"line_start":219,"line_end":219,"column_start":1,"column_end":95}},{"value":"/ Chrono also provides [`to_rfc2822`](./struct.DateTime.html#method.to_rfc2822) and","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10195,"byte_end":10280,"line_start":220,"line_end":220,"column_start":1,"column_end":86}},{"value":"/ [`to_rfc3339`](./struct.DateTime.html#method.to_rfc3339) methods","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10281,"byte_end":10349,"line_start":221,"line_end":221,"column_start":1,"column_end":69}},{"value":"/ for well-known formats.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10350,"byte_end":10377,"line_start":222,"line_end":222,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10378,"byte_end":10381,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ Chrono now also provides date formatting in almost any language without the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10382,"byte_end":10461,"line_start":224,"line_end":224,"column_start":1,"column_end":80}},{"value":"/ help of an additional C library. This functionality is under the feature","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10462,"byte_end":10538,"line_start":225,"line_end":225,"column_start":1,"column_end":77}},{"value":"/ `unstable-locales`:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10539,"byte_end":10562,"line_start":226,"line_end":226,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10563,"byte_end":10566,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10567,"byte_end":10578,"line_start":228,"line_end":228,"column_start":1,"column_end":12}},{"value":"/ chrono = { version = \"0.4\", features = [\"unstable-locales\"] }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10579,"byte_end":10644,"line_start":229,"line_end":229,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10645,"byte_end":10652,"line_start":230,"line_end":230,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10653,"byte_end":10656,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ The `unstable-locales` feature requires and implies at least the `alloc` feature.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10657,"byte_end":10742,"line_start":232,"line_end":232,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10743,"byte_end":10746,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10747,"byte_end":10758,"line_start":234,"line_end":234,"column_start":1,"column_end":12}},{"value":"/ use chrono::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10759,"byte_end":10786,"line_start":235,"line_end":235,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10787,"byte_end":10790,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ # #[cfg(feature = \"unstable-locales\")]","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10791,"byte_end":10833,"line_start":237,"line_end":237,"column_start":1,"column_end":43}},{"value":"/ # fn test() {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10834,"byte_end":10851,"line_start":238,"line_end":238,"column_start":1,"column_end":18}},{"value":"/ let dt = Utc.ymd(2014, 11, 28).and_hms(12, 0, 9);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10852,"byte_end":10905,"line_start":239,"line_end":239,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(dt.format(\"%Y-%m-%d %H:%M:%S\").to_string(), \"2014-11-28 12:00:09\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10906,"byte_end":10988,"line_start":240,"line_end":240,"column_start":1,"column_end":83}},{"value":"/ assert_eq!(dt.format(\"%a %b %e %T %Y\").to_string(), \"Fri Nov 28 12:00:09 2014\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":10989,"byte_end":11073,"line_start":241,"line_end":241,"column_start":1,"column_end":85}},{"value":"/ assert_eq!(dt.format_localized(\"%A %e %B %Y, %T\", Locale::fr_BE).to_string(), \"vendredi 28 novembre 2014, 12:00:09\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":11074,"byte_end":11195,"line_start":242,"line_end":242,"column_start":1,"column_end":122}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":11196,"byte_end":11199,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(dt.format(\"%a %b %e %T %Y\").to_string(), dt.format(\"%c\").to_string());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":11200,"byte_end":11285,"line_start":244,"line_end":244,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(dt.to_string(), \"2014-11-28 12:00:09 UTC\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":11286,"byte_end":11344,"line_start":245,"line_end":245,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(dt.to_rfc2822(), \"Fri, 28 Nov 2014 12:00:09 +0000\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":11345,"byte_end":11412,"line_start":246,"line_end":246,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(dt.to_rfc3339(), \"2014-11-28T12:00:09+00:00\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":11413,"byte_end":11474,"line_start":247,"line_end":247,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(format!(\"{:?}\", dt), \"2014-11-28T12:00:09Z\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":11475,"byte_end":11535,"line_start":248,"line_end":248,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":11536,"byte_end":11539,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ // Note that milli/nanoseconds are only printed if they are non-zero","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":11540,"byte_end":11612,"line_start":250,"line_end":250,"column_start":1,"column_end":73}},{"value":"/ let dt_nano = Utc.ymd(2014, 11, 28).and_hms_nano(12, 0, 9, 1);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":11613,"byte_end":11679,"line_start":251,"line_end":251,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(format!(\"{:?}\", dt_nano), \"2014-11-28T12:00:09.000000001Z\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":11680,"byte_end":11755,"line_start":252,"line_end":252,"column_start":1,"column_end":76}},{"value":"/ # }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":11756,"byte_end":11763,"line_start":253,"line_end":253,"column_start":1,"column_end":8}},{"value":"/ # #[cfg(not(feature = \"unstable-locales\"))]","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":11764,"byte_end":11811,"line_start":254,"line_end":254,"column_start":1,"column_end":48}},{"value":"/ # fn test() {}","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":11812,"byte_end":11830,"line_start":255,"line_end":255,"column_start":1,"column_end":19}},{"value":"/ # if cfg!(feature = \"unstable-locales\") {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":11831,"byte_end":11876,"line_start":256,"line_end":256,"column_start":1,"column_end":46}},{"value":"/ #    test();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":11877,"byte_end":11893,"line_start":257,"line_end":257,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":11894,"byte_end":11901,"line_start":258,"line_end":258,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":11902,"byte_end":11909,"line_start":259,"line_end":259,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":11910,"byte_end":11913,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ Parsing can be done with three methods:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":11914,"byte_end":11957,"line_start":261,"line_end":261,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":11958,"byte_end":11961,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ 1. The standard [`FromStr`](https://doc.rust-lang.org/std/str/trait.FromStr.html) trait","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":11962,"byte_end":12053,"line_start":263,"line_end":263,"column_start":1,"column_end":92}},{"value":"/    (and [`parse`](https://doc.rust-lang.org/std/primitive.str.html#method.parse) method","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":12054,"byte_end":12145,"line_start":264,"line_end":264,"column_start":1,"column_end":92}},{"value":"/    on a string) can be used for parsing `DateTime<FixedOffset>`, `DateTime<Utc>` and","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":12146,"byte_end":12234,"line_start":265,"line_end":265,"column_start":1,"column_end":89}},{"value":"/    `DateTime<Local>` values. This parses what the `{:?}`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":12235,"byte_end":12295,"line_start":266,"line_end":266,"column_start":1,"column_end":61}},{"value":"/    ([`std::fmt::Debug`](https://doc.rust-lang.org/std/fmt/trait.Debug.html))","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":12296,"byte_end":12376,"line_start":267,"line_end":267,"column_start":1,"column_end":81}},{"value":"/    format specifier prints, and requires the offset to be present.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":12377,"byte_end":12447,"line_start":268,"line_end":268,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":12448,"byte_end":12451,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ 2. [`DateTime::parse_from_str`](./struct.DateTime.html#method.parse_from_str) parses","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":12452,"byte_end":12540,"line_start":270,"line_end":270,"column_start":1,"column_end":89}},{"value":"/    a date and time with offsets and returns `DateTime<FixedOffset>`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":12541,"byte_end":12613,"line_start":271,"line_end":271,"column_start":1,"column_end":73}},{"value":"/    This should be used when the offset is a part of input and the caller cannot guess that.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":12614,"byte_end":12709,"line_start":272,"line_end":272,"column_start":1,"column_end":96}},{"value":"/    It *cannot* be used when the offset can be missing.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":12710,"byte_end":12768,"line_start":273,"line_end":273,"column_start":1,"column_end":59}},{"value":"/    [`DateTime::parse_from_rfc2822`](./struct.DateTime.html#method.parse_from_rfc2822)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":12769,"byte_end":12858,"line_start":274,"line_end":274,"column_start":1,"column_end":90}},{"value":"/    and","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":12859,"byte_end":12869,"line_start":275,"line_end":275,"column_start":1,"column_end":11}},{"value":"/    [`DateTime::parse_from_rfc3339`](./struct.DateTime.html#method.parse_from_rfc3339)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":12870,"byte_end":12959,"line_start":276,"line_end":276,"column_start":1,"column_end":90}},{"value":"/    are similar but for well-known formats.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":12960,"byte_end":13006,"line_start":277,"line_end":277,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":13007,"byte_end":13010,"line_start":278,"line_end":278,"column_start":1,"column_end":4}},{"value":"/ 3. [`Offset::datetime_from_str`](./offset/trait.TimeZone.html#method.datetime_from_str) is","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":13011,"byte_end":13105,"line_start":279,"line_end":279,"column_start":1,"column_end":95}},{"value":"/    similar but returns `DateTime` of given offset.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":13106,"byte_end":13160,"line_start":280,"line_end":280,"column_start":1,"column_end":55}},{"value":"/    When the explicit offset is missing from the input, it simply uses given offset.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":13161,"byte_end":13248,"line_start":281,"line_end":281,"column_start":1,"column_end":88}},{"value":"/    It issues an error when the input contains an explicit offset different","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":13249,"byte_end":13327,"line_start":282,"line_end":282,"column_start":1,"column_end":79}},{"value":"/    from the current offset.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":13328,"byte_end":13359,"line_start":283,"line_end":283,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":13360,"byte_end":13363,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ More detailed control over the parsing process is available via","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":13364,"byte_end":13431,"line_start":285,"line_end":285,"column_start":1,"column_end":68}},{"value":"/ [`format`](./format/index.html) module.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":13432,"byte_end":13475,"line_start":286,"line_end":286,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":13476,"byte_end":13479,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":13480,"byte_end":13491,"line_start":288,"line_end":288,"column_start":1,"column_end":12}},{"value":"/ use chrono::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":13492,"byte_end":13519,"line_start":289,"line_end":289,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":13520,"byte_end":13523,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"/ let dt = Utc.ymd(2014, 11, 28).and_hms(12, 0, 9);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":13524,"byte_end":13577,"line_start":291,"line_end":291,"column_start":1,"column_end":54}},{"value":"/ let fixed_dt = dt.with_timezone(&FixedOffset::east(9*3600));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":13578,"byte_end":13642,"line_start":292,"line_end":292,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":13643,"byte_end":13646,"line_start":293,"line_end":293,"column_start":1,"column_end":4}},{"value":"/ // method 1","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":13647,"byte_end":13662,"line_start":294,"line_end":294,"column_start":1,"column_end":16}},{"value":"/ assert_eq!(\"2014-11-28T12:00:09Z\".parse::<DateTime<Utc>>(), Ok(dt.clone()));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":13663,"byte_end":13743,"line_start":295,"line_end":295,"column_start":1,"column_end":81}},{"value":"/ assert_eq!(\"2014-11-28T21:00:09+09:00\".parse::<DateTime<Utc>>(), Ok(dt.clone()));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":13744,"byte_end":13829,"line_start":296,"line_end":296,"column_start":1,"column_end":86}},{"value":"/ assert_eq!(\"2014-11-28T21:00:09+09:00\".parse::<DateTime<FixedOffset>>(), Ok(fixed_dt.clone()));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":13830,"byte_end":13929,"line_start":297,"line_end":297,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":13930,"byte_end":13933,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ // method 2","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":13934,"byte_end":13949,"line_start":299,"line_end":299,"column_start":1,"column_end":16}},{"value":"/ assert_eq!(DateTime::parse_from_str(\"2014-11-28 21:00:09 +09:00\", \"%Y-%m-%d %H:%M:%S %z\"),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":13950,"byte_end":14044,"line_start":300,"line_end":300,"column_start":1,"column_end":95}},{"value":"/            Ok(fixed_dt.clone()));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":14045,"byte_end":14082,"line_start":301,"line_end":301,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(DateTime::parse_from_rfc2822(\"Fri, 28 Nov 2014 21:00:09 +0900\"),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":14083,"byte_end":14162,"line_start":302,"line_end":302,"column_start":1,"column_end":80}},{"value":"/            Ok(fixed_dt.clone()));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":14163,"byte_end":14200,"line_start":303,"line_end":303,"column_start":1,"column_end":38}},{"value":"/ assert_eq!(DateTime::parse_from_rfc3339(\"2014-11-28T21:00:09+09:00\"), Ok(fixed_dt.clone()));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":14201,"byte_end":14297,"line_start":304,"line_end":304,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":14298,"byte_end":14301,"line_start":305,"line_end":305,"column_start":1,"column_end":4}},{"value":"/ // method 3","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":14302,"byte_end":14317,"line_start":306,"line_end":306,"column_start":1,"column_end":16}},{"value":"/ assert_eq!(Utc.datetime_from_str(\"2014-11-28 12:00:09\", \"%Y-%m-%d %H:%M:%S\"), Ok(dt.clone()));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":14318,"byte_end":14416,"line_start":307,"line_end":307,"column_start":1,"column_end":99}},{"value":"/ assert_eq!(Utc.datetime_from_str(\"Fri Nov 28 12:00:09 2014\", \"%a %b %e %T %Y\"), Ok(dt.clone()));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":14417,"byte_end":14517,"line_start":308,"line_end":308,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":14518,"byte_end":14521,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ // oops, the year is missing!","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":14522,"byte_end":14555,"line_start":310,"line_end":310,"column_start":1,"column_end":34}},{"value":"/ assert!(Utc.datetime_from_str(\"Fri Nov 28 12:00:09\", \"%a %b %e %T %Y\").is_err());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":14556,"byte_end":14641,"line_start":311,"line_end":311,"column_start":1,"column_end":86}},{"value":"/ // oops, the format string does not include the year at all!","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":14642,"byte_end":14706,"line_start":312,"line_end":312,"column_start":1,"column_end":65}},{"value":"/ assert!(Utc.datetime_from_str(\"Fri Nov 28 12:00:09\", \"%a %b %e %T\").is_err());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":14707,"byte_end":14789,"line_start":313,"line_end":313,"column_start":1,"column_end":83}},{"value":"/ // oops, the weekday is incorrect!","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":14790,"byte_end":14828,"line_start":314,"line_end":314,"column_start":1,"column_end":39}},{"value":"/ assert!(Utc.datetime_from_str(\"Sat Nov 28 12:00:09 2014\", \"%a %b %e %T %Y\").is_err());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":14829,"byte_end":14919,"line_start":315,"line_end":315,"column_start":1,"column_end":91}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":14920,"byte_end":14927,"line_start":316,"line_end":316,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":14928,"byte_end":14931,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"/ Again : See [`format::strftime`](./format/strftime/index.html#specifiers)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":14932,"byte_end":15009,"line_start":318,"line_end":318,"column_start":1,"column_end":78}},{"value":"/ documentation for full syntax and list of specifiers.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":15010,"byte_end":15067,"line_start":319,"line_end":319,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":15068,"byte_end":15071,"line_start":320,"line_end":320,"column_start":1,"column_end":4}},{"value":"/ ### Conversion from and to EPOCH timestamps","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":15072,"byte_end":15119,"line_start":321,"line_end":321,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":15120,"byte_end":15123,"line_start":322,"line_end":322,"column_start":1,"column_end":4}},{"value":"/ Use [`Utc.timestamp(seconds, nanoseconds)`](./offset/trait.TimeZone.html#method.timestamp)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":15124,"byte_end":15218,"line_start":323,"line_end":323,"column_start":1,"column_end":95}},{"value":"/ to construct a [`DateTime<Utc>`](./struct.DateTime.html) from a UNIX timestamp","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":15219,"byte_end":15301,"line_start":324,"line_end":324,"column_start":1,"column_end":83}},{"value":"/ (seconds, nanoseconds that passed since January 1st 1970).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":15302,"byte_end":15364,"line_start":325,"line_end":325,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":15365,"byte_end":15368,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/ Use [`DateTime.timestamp`](./struct.DateTime.html#method.timestamp) to get the timestamp (in seconds)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":15369,"byte_end":15474,"line_start":327,"line_end":327,"column_start":1,"column_end":106}},{"value":"/ from a [`DateTime`](./struct.DateTime.html). Additionally, you can use","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":15475,"byte_end":15549,"line_start":328,"line_end":328,"column_start":1,"column_end":75}},{"value":"/ [`DateTime.timestamp_subsec_nanos`](./struct.DateTime.html#method.timestamp_subsec_nanos)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":15550,"byte_end":15643,"line_start":329,"line_end":329,"column_start":1,"column_end":94}},{"value":"/ to get the number of additional number of nanoseconds.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":15644,"byte_end":15702,"line_start":330,"line_end":330,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":15703,"byte_end":15706,"line_start":331,"line_end":331,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":15707,"byte_end":15718,"line_start":332,"line_end":332,"column_start":1,"column_end":12}},{"value":"/ // We need the trait in scope to use Utc::timestamp().","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":15719,"byte_end":15777,"line_start":333,"line_end":333,"column_start":1,"column_end":59}},{"value":"/ use chrono::{DateTime, TimeZone, Utc};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":15778,"byte_end":15820,"line_start":334,"line_end":334,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":15821,"byte_end":15824,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ // Construct a datetime from epoch:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":15825,"byte_end":15864,"line_start":336,"line_end":336,"column_start":1,"column_end":40}},{"value":"/ let dt = Utc.timestamp(1_500_000_000, 0);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":15865,"byte_end":15910,"line_start":337,"line_end":337,"column_start":1,"column_end":46}},{"value":"/ assert_eq!(dt.to_rfc2822(), \"Fri, 14 Jul 2017 02:40:00 +0000\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":15911,"byte_end":15978,"line_start":338,"line_end":338,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":15979,"byte_end":15982,"line_start":339,"line_end":339,"column_start":1,"column_end":4}},{"value":"/ // Get epoch value from a datetime:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":15983,"byte_end":16022,"line_start":340,"line_end":340,"column_start":1,"column_end":40}},{"value":"/ let dt = DateTime::parse_from_rfc2822(\"Fri, 14 Jul 2017 02:40:00 +0000\").unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":16023,"byte_end":16109,"line_start":341,"line_end":341,"column_start":1,"column_end":87}},{"value":"/ assert_eq!(dt.timestamp(), 1_500_000_000);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":16110,"byte_end":16156,"line_start":342,"line_end":342,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":16157,"byte_end":16164,"line_start":343,"line_end":343,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":16165,"byte_end":16168,"line_start":344,"line_end":344,"column_start":1,"column_end":4}},{"value":"/ ### Individual date","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":16169,"byte_end":16192,"line_start":345,"line_end":345,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":16193,"byte_end":16196,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ Chrono also provides an individual date type ([**`Date`**](./struct.Date.html)).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":16197,"byte_end":16281,"line_start":347,"line_end":347,"column_start":1,"column_end":85}},{"value":"/ It also has time zones attached, and have to be constructed via time zones.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":16282,"byte_end":16361,"line_start":348,"line_end":348,"column_start":1,"column_end":80}},{"value":"/ Most operations available to `DateTime` are also available to `Date` whenever appropriate.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":16362,"byte_end":16456,"line_start":349,"line_end":349,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":16457,"byte_end":16460,"line_start":350,"line_end":350,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":16461,"byte_end":16472,"line_start":351,"line_end":351,"column_start":1,"column_end":12}},{"value":"/ use chrono::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":16473,"byte_end":16500,"line_start":352,"line_end":352,"column_start":1,"column_end":28}},{"value":"/ use chrono::offset::LocalResult;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":16501,"byte_end":16537,"line_start":353,"line_end":353,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":16538,"byte_end":16541,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ # // these *may* fail, but only very rarely. just rerun the test if you were that unfortunate ;)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":16542,"byte_end":16642,"line_start":355,"line_end":355,"column_start":1,"column_end":101}},{"value":"/ assert_eq!(Utc::today(), Utc::now().date());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":16643,"byte_end":16691,"line_start":356,"line_end":356,"column_start":1,"column_end":49}},{"value":"/ assert_eq!(Local::today(), Local::now().date());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":16692,"byte_end":16744,"line_start":357,"line_end":357,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":16745,"byte_end":16748,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Utc.ymd(2014, 11, 28).weekday(), Weekday::Fri);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":16749,"byte_end":16811,"line_start":359,"line_end":359,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(Utc.ymd_opt(2014, 11, 31), LocalResult::None);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":16812,"byte_end":16873,"line_start":360,"line_end":360,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(Utc.ymd(2014, 11, 28).and_hms_milli(7, 8, 9, 10).format(\"%H%M%S\").to_string(),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":16874,"byte_end":16967,"line_start":361,"line_end":361,"column_start":1,"column_end":94}},{"value":"/            \"070809\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":16968,"byte_end":16993,"line_start":362,"line_end":362,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":16994,"byte_end":17001,"line_start":363,"line_end":363,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":17002,"byte_end":17005,"line_start":364,"line_end":364,"column_start":1,"column_end":4}},{"value":"/ There is no timezone-aware `Time` due to the lack of usefulness and also the complexity.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":17006,"byte_end":17098,"line_start":365,"line_end":365,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":17099,"byte_end":17102,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ `DateTime` has [`date`](./struct.DateTime.html#method.date) method","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":17103,"byte_end":17173,"line_start":367,"line_end":367,"column_start":1,"column_end":71}},{"value":"/ which returns a `Date` which represents its date component.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":17174,"byte_end":17237,"line_start":368,"line_end":368,"column_start":1,"column_end":64}},{"value":"/ There is also a [`time`](./struct.DateTime.html#method.time) method,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":17238,"byte_end":17310,"line_start":369,"line_end":369,"column_start":1,"column_end":73}},{"value":"/ which simply returns a naive local time described below.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":17311,"byte_end":17371,"line_start":370,"line_end":370,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":17372,"byte_end":17375,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"/ ### Naive date and time","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":17376,"byte_end":17403,"line_start":372,"line_end":372,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":17404,"byte_end":17407,"line_start":373,"line_end":373,"column_start":1,"column_end":4}},{"value":"/ Chrono provides naive counterparts to `Date`, (non-existent) `Time` and `DateTime`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":17408,"byte_end":17494,"line_start":374,"line_end":374,"column_start":1,"column_end":87}},{"value":"/ as [**`NaiveDate`**](./naive/struct.NaiveDate.html),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":17495,"byte_end":17551,"line_start":375,"line_end":375,"column_start":1,"column_end":57}},{"value":"/ [**`NaiveTime`**](./naive/struct.NaiveTime.html) and","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":17552,"byte_end":17608,"line_start":376,"line_end":376,"column_start":1,"column_end":57}},{"value":"/ [**`NaiveDateTime`**](./naive/struct.NaiveDateTime.html) respectively.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":17609,"byte_end":17683,"line_start":377,"line_end":377,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":17684,"byte_end":17687,"line_start":378,"line_end":378,"column_start":1,"column_end":4}},{"value":"/ They have almost equivalent interfaces as their timezone-aware twins,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":17688,"byte_end":17761,"line_start":379,"line_end":379,"column_start":1,"column_end":74}},{"value":"/ but are not associated to time zones obviously and can be quite low-level.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":17762,"byte_end":17840,"line_start":380,"line_end":380,"column_start":1,"column_end":79}},{"value":"/ They are mostly useful for building blocks for higher-level types.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":17841,"byte_end":17911,"line_start":381,"line_end":381,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":17912,"byte_end":17915,"line_start":382,"line_end":382,"column_start":1,"column_end":4}},{"value":"/ Timezone-aware `DateTime` and `Date` types have two methods returning naive versions:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":17916,"byte_end":18005,"line_start":383,"line_end":383,"column_start":1,"column_end":90}},{"value":"/ [`naive_local`](./struct.DateTime.html#method.naive_local) returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":18006,"byte_end":18076,"line_start":384,"line_end":384,"column_start":1,"column_end":71}},{"value":"/ a view to the naive local time,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":18077,"byte_end":18112,"line_start":385,"line_end":385,"column_start":1,"column_end":36}},{"value":"/ and [`naive_utc`](./struct.DateTime.html#method.naive_utc) returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":18113,"byte_end":18183,"line_start":386,"line_end":386,"column_start":1,"column_end":71}},{"value":"/ a view to the naive UTC time.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":18184,"byte_end":18217,"line_start":387,"line_end":387,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":18218,"byte_end":18221,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/ ## Limitations","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":18222,"byte_end":18240,"line_start":389,"line_end":389,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":18241,"byte_end":18244,"line_start":390,"line_end":390,"column_start":1,"column_end":4}},{"value":"/ Only proleptic Gregorian calendar (i.e. extended to support older dates) is supported.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":18245,"byte_end":18335,"line_start":391,"line_end":391,"column_start":1,"column_end":91}},{"value":"/ Be very careful if you really have to deal with pre-20C dates, they can be in Julian or others.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":18336,"byte_end":18435,"line_start":392,"line_end":392,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":18436,"byte_end":18439,"line_start":393,"line_end":393,"column_start":1,"column_end":4}},{"value":"/ Date types are limited in about +/- 262,000 years from the common epoch.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":18440,"byte_end":18516,"line_start":394,"line_end":394,"column_start":1,"column_end":77}},{"value":"/ Time types are limited in the nanosecond accuracy.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":18517,"byte_end":18571,"line_start":395,"line_end":395,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":18572,"byte_end":18575,"line_start":396,"line_end":396,"column_start":1,"column_end":4}},{"value":"/ [Leap seconds are supported in the representation but","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":18576,"byte_end":18633,"line_start":397,"line_end":397,"column_start":1,"column_end":58}},{"value":"/ Chrono doesn't try to make use of them](./naive/struct.NaiveTime.html#leap-second-handling).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":18634,"byte_end":18730,"line_start":398,"line_end":398,"column_start":1,"column_end":97}},{"value":"/ (The main reason is that leap seconds are not really predictable.)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":18731,"byte_end":18801,"line_start":399,"line_end":399,"column_start":1,"column_end":71}},{"value":"/ Almost *every* operation over the possible leap seconds will ignore them.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":18802,"byte_end":18879,"line_start":400,"line_end":400,"column_start":1,"column_end":78}},{"value":"/ Consider using `NaiveDateTime` with the implicit TAI (International Atomic Time) scale","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":18880,"byte_end":18970,"line_start":401,"line_end":401,"column_start":1,"column_end":91}},{"value":"/ if you want.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":18971,"byte_end":18987,"line_start":402,"line_end":402,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":18988,"byte_end":18991,"line_start":403,"line_end":403,"column_start":1,"column_end":4}},{"value":"/ Chrono inherently does not support an inaccurate or partial date and time representation.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":18992,"byte_end":19085,"line_start":404,"line_end":404,"column_start":1,"column_end":94}},{"value":"/ Any operation that can be ambiguous will return `None` in such cases.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":19086,"byte_end":19159,"line_start":405,"line_end":405,"column_start":1,"column_end":74}},{"value":"/ For example, \"a month later\" of 2014-01-30 is not well-defined","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":19160,"byte_end":19226,"line_start":406,"line_end":406,"column_start":1,"column_end":67}},{"value":"/ and consequently `Utc.ymd(2014, 1, 30).with_month(2)` returns `None`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":19227,"byte_end":19300,"line_start":407,"line_end":407,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":19301,"byte_end":19304,"line_start":408,"line_end":408,"column_start":1,"column_end":4}},{"value":"/ Non ISO week handling is not yet supported.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":19305,"byte_end":19352,"line_start":409,"line_end":409,"column_start":1,"column_end":48}},{"value":"/ For now you can use the [chrono_ext](https://crates.io/crates/chrono_ext)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":19353,"byte_end":19430,"line_start":410,"line_end":410,"column_start":1,"column_end":78}},{"value":"/ crate ([sources](https://github.com/bcourtine/chrono-ext/)).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":19431,"byte_end":19495,"line_start":411,"line_end":411,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":19496,"byte_end":19499,"line_start":412,"line_end":412,"column_start":1,"column_end":4}},{"value":"/ Advanced time zone handling is not yet supported.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":19500,"byte_end":19553,"line_start":413,"line_end":413,"column_start":1,"column_end":54}},{"value":"/ For now you can try the [Chrono-tz](https://github.com/chronotope/chrono-tz/) crate instead.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":19554,"byte_end":19650,"line_start":414,"line_end":414,"column_start":1,"column_end":97}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":19799,"byte_end":19821,"line_start":418,"line_end":418,"column_start":1,"column_end":23}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":19822,"byte_end":19861,"line_start":419,"line_end":419,"column_start":1,"column_end":40}},{"value":"warn(unreachable_pub)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":19862,"byte_end":19887,"line_start":420,"line_end":420,"column_start":1,"column_end":26}},{"value":"deny(dead_code)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":19888,"byte_end":19907,"line_start":421,"line_end":421,"column_start":1,"column_end":20}},{"value":"no_std","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":19953,"byte_end":19959,"line_start":422,"line_end":422,"column_start":46,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":2023},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":24852,"byte_end":24860,"line_start":55,"line_end":55,"column_start":12,"column_end":20},"name":"Duration","qualname":"::oldtime::Duration","value":"Duration {  }","parent":null,"children":[{"krate":0,"index":2024},{"krate":0,"index":2025}],"decl_id":null,"docs":" ISO 8601 time duration with nanosecond precision.","sig":null,"attributes":[{"value":"/ ISO 8601 time duration with nanosecond precision.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":24566,"byte_end":24619,"line_start":50,"line_end":50,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":24620,"byte_end":24623,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ This also allows for the negative duration; see individual methods for details.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":24624,"byte_end":24707,"line_start":52,"line_end":52,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":25619,"byte_end":25624,"line_start":77,"line_end":77,"column_start":12,"column_end":17},"name":"weeks","qualname":"<Duration>::weeks","value":"fn weeks(i64) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Duration` with given number of weeks.\n Equivalent to `Duration::seconds(weeks * 7 * 24 * 60 * 60)` with overflow checks.\n Panics when the duration is out of bounds.\n","sig":null,"attributes":[{"value":"/ Makes a new `Duration` with given number of weeks.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":25398,"byte_end":25452,"line_start":73,"line_end":73,"column_start":5,"column_end":59}},{"value":"/ Equivalent to `Duration::seconds(weeks * 7 * 24 * 60 * 60)` with overflow checks.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":25457,"byte_end":25542,"line_start":74,"line_end":74,"column_start":5,"column_end":90}},{"value":"/ Panics when the duration is out of bounds.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":25547,"byte_end":25593,"line_start":75,"line_end":75,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":25598,"byte_end":25607,"line_start":76,"line_end":76,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":26002,"byte_end":26006,"line_start":86,"line_end":86,"column_start":12,"column_end":16},"name":"days","qualname":"<Duration>::days","value":"fn days(i64) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Duration` with given number of days.\n Equivalent to `Duration::seconds(days * 24 * 60 * 60)` with overflow checks.\n Panics when the duration is out of bounds.\n","sig":null,"attributes":[{"value":"/ Makes a new `Duration` with given number of days.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":25787,"byte_end":25840,"line_start":82,"line_end":82,"column_start":5,"column_end":58}},{"value":"/ Equivalent to `Duration::seconds(days * 24 * 60 * 60)` with overflow checks.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":25845,"byte_end":25925,"line_start":83,"line_end":83,"column_start":5,"column_end":85}},{"value":"/ Panics when the duration is out of bounds.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":25930,"byte_end":25976,"line_start":84,"line_end":84,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":25981,"byte_end":25990,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":26377,"byte_end":26382,"line_start":95,"line_end":95,"column_start":12,"column_end":17},"name":"hours","qualname":"<Duration>::hours","value":"fn hours(i64) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Duration` with given number of hours.\n Equivalent to `Duration::seconds(hours * 60 * 60)` with overflow checks.\n Panics when the duration is out of bounds.\n","sig":null,"attributes":[{"value":"/ Makes a new `Duration` with given number of hours.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":26165,"byte_end":26219,"line_start":91,"line_end":91,"column_start":5,"column_end":59}},{"value":"/ Equivalent to `Duration::seconds(hours * 60 * 60)` with overflow checks.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":26224,"byte_end":26300,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/ Panics when the duration is out of bounds.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":26305,"byte_end":26351,"line_start":93,"line_end":93,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":26356,"byte_end":26365,"line_start":94,"line_end":94,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":26756,"byte_end":26763,"line_start":104,"line_end":104,"column_start":12,"column_end":19},"name":"minutes","qualname":"<Duration>::minutes","value":"fn minutes(i64) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Duration` with given number of minutes.\n Equivalent to `Duration::seconds(minutes * 60)` with overflow checks.\n Panics when the duration is out of bounds.\n","sig":null,"attributes":[{"value":"/ Makes a new `Duration` with given number of minutes.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":26545,"byte_end":26601,"line_start":100,"line_end":100,"column_start":5,"column_end":61}},{"value":"/ Equivalent to `Duration::seconds(minutes * 60)` with overflow checks.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":26606,"byte_end":26679,"line_start":101,"line_end":101,"column_start":5,"column_end":78}},{"value":"/ Panics when the duration is out of bounds.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":26684,"byte_end":26730,"line_start":102,"line_end":102,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":26735,"byte_end":26744,"line_start":103,"line_end":103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":27122,"byte_end":27129,"line_start":113,"line_end":113,"column_start":12,"column_end":19},"name":"seconds","qualname":"<Duration>::seconds","value":"fn seconds(i64) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Duration` with given number of seconds.\n Panics when the duration is more than `i64::MAX` seconds\n or less than `i64::MIN` seconds.\n","sig":null,"attributes":[{"value":"/ Makes a new `Duration` with given number of seconds.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":26934,"byte_end":26990,"line_start":109,"line_end":109,"column_start":5,"column_end":61}},{"value":"/ Panics when the duration is more than `i64::MAX` seconds","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":26995,"byte_end":27055,"line_start":110,"line_end":110,"column_start":5,"column_end":65}},{"value":"/ or less than `i64::MIN` seconds.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":27060,"byte_end":27096,"line_start":111,"line_end":111,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":27101,"byte_end":27110,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":27417,"byte_end":27429,"line_start":123,"line_end":123,"column_start":12,"column_end":24},"name":"milliseconds","qualname":"<Duration>::milliseconds","value":"fn milliseconds(i64) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Duration` with given number of milliseconds.\n","sig":null,"attributes":[{"value":"/ Makes a new `Duration` with given number of milliseconds.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":27330,"byte_end":27391,"line_start":121,"line_end":121,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":27396,"byte_end":27405,"line_start":122,"line_end":122,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":27737,"byte_end":27749,"line_start":131,"line_end":131,"column_start":12,"column_end":24},"name":"microseconds","qualname":"<Duration>::microseconds","value":"fn microseconds(i64) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Duration` with given number of microseconds.\n","sig":null,"attributes":[{"value":"/ Makes a new `Duration` with given number of microseconds.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":27650,"byte_end":27711,"line_start":129,"line_end":129,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":27716,"byte_end":27725,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":28056,"byte_end":28067,"line_start":139,"line_end":139,"column_start":12,"column_end":23},"name":"nanoseconds","qualname":"<Duration>::nanoseconds","value":"fn nanoseconds(i64) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Duration` with given number of nanoseconds.\n","sig":null,"attributes":[{"value":"/ Makes a new `Duration` with given number of nanoseconds.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":27970,"byte_end":28030,"line_start":137,"line_end":137,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":28035,"byte_end":28044,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":28319,"byte_end":28328,"line_start":146,"line_end":146,"column_start":12,"column_end":21},"name":"num_weeks","qualname":"<Duration>::num_weeks","value":"fn num_weeks<'_>(&'_ Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of whole weeks in the duration.\n","sig":null,"attributes":[{"value":"/ Returns the total number of whole weeks in the duration.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":28233,"byte_end":28293,"line_start":144,"line_end":144,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":28298,"byte_end":28307,"line_start":145,"line_end":145,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":28455,"byte_end":28463,"line_start":151,"line_end":151,"column_start":12,"column_end":20},"name":"num_days","qualname":"<Duration>::num_days","value":"fn num_days<'_>(&'_ Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of whole days in the duration.\n","sig":null,"attributes":[{"value":"/ Returns the total number of whole days in the duration.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":28384,"byte_end":28443,"line_start":150,"line_end":150,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":28619,"byte_end":28628,"line_start":157,"line_end":157,"column_start":12,"column_end":21},"name":"num_hours","qualname":"<Duration>::num_hours","value":"fn num_hours<'_>(&'_ Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of whole hours in the duration.\n","sig":null,"attributes":[{"value":"/ Returns the total number of whole hours in the duration.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":28533,"byte_end":28593,"line_start":155,"line_end":155,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":28598,"byte_end":28607,"line_start":156,"line_end":156,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":28787,"byte_end":28798,"line_start":163,"line_end":163,"column_start":12,"column_end":23},"name":"num_minutes","qualname":"<Duration>::num_minutes","value":"fn num_minutes<'_>(&'_ Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of whole minutes in the duration.\n","sig":null,"attributes":[{"value":"/ Returns the total number of whole minutes in the duration.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":28699,"byte_end":28761,"line_start":161,"line_end":161,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":28766,"byte_end":28775,"line_start":162,"line_end":162,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":28945,"byte_end":28956,"line_start":168,"line_end":168,"column_start":12,"column_end":23},"name":"num_seconds","qualname":"<Duration>::num_seconds","value":"fn num_seconds<'_>(&'_ Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of whole seconds in the duration.\n","sig":null,"attributes":[{"value":"/ Returns the total number of whole seconds in the duration.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":28871,"byte_end":28933,"line_start":167,"line_end":167,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":29609,"byte_end":29625,"line_start":189,"line_end":189,"column_start":12,"column_end":28},"name":"num_milliseconds","qualname":"<Duration>::num_milliseconds","value":"fn num_milliseconds<'_>(&'_ Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of whole milliseconds in the duration,\n","sig":null,"attributes":[{"value":"/ Returns the total number of whole milliseconds in the duration,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":29530,"byte_end":29597,"line_start":188,"line_end":188,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":30117,"byte_end":30133,"line_start":199,"line_end":199,"column_start":12,"column_end":28},"name":"num_microseconds","qualname":"<Duration>::num_microseconds","value":"fn num_microseconds<'_>(&'_ Self) -> Option<i64>","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of whole microseconds in the duration,\n or `None` on overflow (exceeding 2^63 microseconds in either direction).\n","sig":null,"attributes":[{"value":"/ Returns the total number of whole microseconds in the duration,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":29957,"byte_end":30024,"line_start":197,"line_end":197,"column_start":5,"column_end":72}},{"value":"/ or `None` on overflow (exceeding 2^63 microseconds in either direction).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":30029,"byte_end":30105,"line_start":198,"line_end":198,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":30523,"byte_end":30538,"line_start":207,"line_end":207,"column_start":12,"column_end":27},"name":"num_nanoseconds","qualname":"<Duration>::num_nanoseconds","value":"fn num_nanoseconds<'_>(&'_ Self) -> Option<i64>","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of whole nanoseconds in the duration,\n or `None` on overflow (exceeding 2^63 nanoseconds in either direction).\n","sig":null,"attributes":[{"value":"/ Returns the total number of whole nanoseconds in the duration,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":30365,"byte_end":30431,"line_start":205,"line_end":205,"column_start":5,"column_end":71}},{"value":"/ or `None` on overflow (exceeding 2^63 nanoseconds in either direction).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":30436,"byte_end":30511,"line_start":206,"line_end":206,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":30831,"byte_end":30842,"line_start":214,"line_end":214,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Duration>::checked_add","value":"fn checked_add<'_, '_>(&'_ Self, &'_ Duration) -> Option<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Add two durations, returning `None` if overflow occurred.\n","sig":null,"attributes":[{"value":"/ Add two durations, returning `None` if overflow occurred.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":30758,"byte_end":30819,"line_start":213,"line_end":213,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":31485,"byte_end":31496,"line_start":232,"line_end":232,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Duration>::checked_sub","value":"fn checked_sub<'_, '_>(&'_ Self, &'_ Duration) -> Option<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Subtract two durations, returning `None` if overflow occurred.\n","sig":null,"attributes":[{"value":"/ Subtract two durations, returning `None` if overflow occurred.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":31407,"byte_end":31473,"line_start":231,"line_end":231,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":32135,"byte_end":32138,"line_start":251,"line_end":251,"column_start":12,"column_end":15},"name":"abs","qualname":"<Duration>::abs","value":"fn abs<'_>(&'_ Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the duration as an absolute (non-negative) value.\n","sig":null,"attributes":[{"value":"/ Returns the duration as an absolute (non-negative) value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":32048,"byte_end":32109,"line_start":249,"line_end":249,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":32114,"byte_end":32123,"line_start":250,"line_end":250,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":64},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":32485,"byte_end":32494,"line_start":261,"line_end":261,"column_start":12,"column_end":21},"name":"min_value","qualname":"<Duration>::min_value","value":"fn min_value() -> Duration","parent":null,"children":[],"decl_id":null,"docs":" The minimum possible `Duration`: `i64::MIN` milliseconds.\n","sig":null,"attributes":[{"value":"/ The minimum possible `Duration`: `i64::MIN` milliseconds.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":32398,"byte_end":32459,"line_start":259,"line_end":259,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":32464,"byte_end":32473,"line_start":260,"line_end":260,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":32621,"byte_end":32630,"line_start":267,"line_end":267,"column_start":12,"column_end":21},"name":"max_value","qualname":"<Duration>::max_value","value":"fn max_value() -> Duration","parent":null,"children":[],"decl_id":null,"docs":" The maximum possible `Duration`: `i64::MAX` milliseconds.\n","sig":null,"attributes":[{"value":"/ The maximum possible `Duration`: `i64::MAX` milliseconds.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":32534,"byte_end":32595,"line_start":265,"line_end":265,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":32600,"byte_end":32609,"line_start":266,"line_end":266,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":32770,"byte_end":32774,"line_start":273,"line_end":273,"column_start":12,"column_end":16},"name":"zero","qualname":"<Duration>::zero","value":"fn zero() -> Duration","parent":null,"children":[],"decl_id":null,"docs":" A duration where the stored seconds and nanoseconds are equal to zero.\n","sig":null,"attributes":[{"value":"/ A duration where the stored seconds and nanoseconds are equal to zero.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":32670,"byte_end":32744,"line_start":271,"line_end":271,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":32749,"byte_end":32758,"line_start":272,"line_end":272,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":32928,"byte_end":32935,"line_start":279,"line_end":279,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<Duration>::is_zero","value":"fn is_zero<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the duration equals `Duration::zero()`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the duration equals `Duration::zero()`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":32841,"byte_end":32902,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":32907,"byte_end":32916,"line_start":278,"line_end":278,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":33208,"byte_end":33216,"line_start":287,"line_end":287,"column_start":12,"column_end":20},"name":"from_std","qualname":"<Duration>::from_std","value":"fn from_std(StdDuration) -> Result<Duration, OutOfRangeError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `time::Duration` object from `std::time::Duration`","sig":null,"attributes":[{"value":"/ Creates a `time::Duration` object from `std::time::Duration`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":33006,"byte_end":33070,"line_start":283,"line_end":283,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":33075,"byte_end":33078,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ This function errors when original duration is larger than the maximum","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":33083,"byte_end":33157,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/ value supported for this type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":33162,"byte_end":33196,"line_start":286,"line_end":286,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":33873,"byte_end":33879,"line_start":303,"line_end":303,"column_start":12,"column_end":18},"name":"to_std","qualname":"<Duration>::to_std","value":"fn to_std<'_>(&'_ Self) -> Result<StdDuration, OutOfRangeError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `std::time::Duration` object from `time::Duration`","sig":null,"attributes":[{"value":"/ Creates a `std::time::Duration` object from `time::Duration`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":33649,"byte_end":33713,"line_start":299,"line_end":299,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":33718,"byte_end":33721,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ This function errors when duration is less than zero. As standard","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":33726,"byte_end":33795,"line_start":301,"line_end":301,"column_start":5,"column_end":74}},{"value":"/ library implementation is limited to non-negative values.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":33800,"byte_end":33861,"line_start":302,"line_end":302,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":34160,"byte_end":34163,"line_start":315,"line_end":315,"column_start":8,"column_end":11},"name":"neg","qualname":"<Duration as core::ops::Neg>::neg","value":"fn neg(Self) -> Duration","parent":{"krate":1,"index":3358},"children":[],"decl_id":{"krate":1,"index":3360},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":34143,"byte_end":34152,"line_start":314,"line_end":314,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":34442,"byte_end":34445,"line_start":327,"line_end":327,"column_start":8,"column_end":11},"name":"add","qualname":"<Duration as core::ops::Add>::add","value":"fn add(Self, Duration) -> Duration","parent":{"krate":1,"index":3331},"children":[],"decl_id":{"krate":1,"index":3334},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":34794,"byte_end":34797,"line_start":341,"line_end":341,"column_start":8,"column_end":11},"name":"sub","qualname":"<Duration as core::ops::Sub>::sub","value":"fn sub(Self, Duration) -> Duration","parent":{"krate":1,"index":3336},"children":[],"decl_id":{"krate":1,"index":3339},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":35138,"byte_end":35141,"line_start":355,"line_end":355,"column_start":8,"column_end":11},"name":"mul","qualname":"<Duration as core::ops::Mul>::mul","value":"fn mul(Self, i32) -> Duration","parent":{"krate":1,"index":3341},"children":[],"decl_id":{"krate":1,"index":3344},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":35577,"byte_end":35580,"line_start":367,"line_end":367,"column_start":8,"column_end":11},"name":"div","qualname":"<Duration as core::ops::Div>::div","value":"fn div(Self, i32) -> Duration","parent":{"krate":1,"index":3346},"children":[],"decl_id":{"krate":1,"index":3349},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":36691,"byte_end":36694,"line_start":402,"line_end":402,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Duration as core::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":" Format a duration using the [ISO 8601] format","sig":null,"attributes":[{"value":"/ Format a duration using the [ISO 8601] format","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":36557,"byte_end":36606,"line_start":399,"line_end":399,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":36611,"byte_end":36614,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ [ISO 8601]: https://en.wikipedia.org/wiki/ISO_8601#Durations","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":36619,"byte_end":36683,"line_start":401,"line_end":401,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":2042},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":38054,"byte_end":38069,"line_start":439,"line_end":439,"column_start":12,"column_end":27},"name":"OutOfRangeError","qualname":"::oldtime::OutOfRangeError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents error when converting `Duration` to/from a standard library\n implementation","sig":null,"attributes":[{"value":"/ Represents error when converting `Duration` to/from a standard library","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":37731,"byte_end":37805,"line_start":432,"line_end":432,"column_start":1,"column_end":75}},{"value":"/ implementation","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":37806,"byte_end":37824,"line_start":433,"line_end":433,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":37825,"byte_end":37828,"line_start":434,"line_end":434,"column_start":1,"column_end":4}},{"value":"/ The `std::time::Duration` supports a range from zero to `u64::MAX`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":37829,"byte_end":37899,"line_start":435,"line_end":435,"column_start":1,"column_end":71}},{"value":"/ *seconds*, while this module supports signed range of up to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":37900,"byte_end":37963,"line_start":436,"line_end":436,"column_start":1,"column_end":64}},{"value":"/ `i64::MAX` of *milliseconds*.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":37964,"byte_end":37997,"line_start":437,"line_end":437,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":38123,"byte_end":38126,"line_start":442,"line_end":442,"column_start":8,"column_end":11},"name":"fmt","qualname":"<OutOfRangeError as core::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":96},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":20635,"byte_end":20642,"line_start":443,"line_end":443,"column_start":9,"column_end":16},"name":"prelude","qualname":"::prelude","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":100},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":114},{"krate":0,"index":117},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":134},{"krate":0,"index":137},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":144}],"decl_id":null,"docs":" A convenience module appropriate for glob imports (`use chrono::prelude::*;`).\n","sig":null,"attributes":[{"value":"/ A convenience module appropriate for glob imports (`use chrono::prelude::*;`).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":20544,"byte_end":20626,"line_start":442,"line_end":442,"column_start":1,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":2057},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":54216,"byte_end":54220,"line_start":58,"line_end":58,"column_start":12,"column_end":16},"name":"Date","qualname":"::date::Date","value":"Date {  }","parent":null,"children":[{"krate":0,"index":2059},{"krate":0,"index":2060}],"decl_id":null,"docs":" ISO 8601 calendar date with time zone.","sig":null,"attributes":[{"value":"/ ISO 8601 calendar date with time zone.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":52559,"byte_end":52601,"line_start":25,"line_end":25,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":52602,"byte_end":52605,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ You almost certainly want to be using a [`NaiveDate`] instead of this type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":52606,"byte_end":52685,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":52686,"byte_end":52689,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ This type primarily exists to aid in the construction of DateTimes that","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":52690,"byte_end":52765,"line_start":29,"line_end":29,"column_start":1,"column_end":76}},{"value":"/ have a timezone by way of the [`TimeZone`] datelike constructors (e.g.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":52766,"byte_end":52840,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/ [`TimeZone::ymd`]).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":52841,"byte_end":52864,"line_start":31,"line_end":31,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":52865,"byte_end":52868,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This type should be considered ambiguous at best, due to the inherent lack","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":52869,"byte_end":52947,"line_start":33,"line_end":33,"column_start":1,"column_end":79}},{"value":"/ of precision required for the time zone resolution.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":52948,"byte_end":53003,"line_start":34,"line_end":34,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":53004,"byte_end":53007,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ There are some guarantees on the usage of `Date<Tz>`:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":53008,"byte_end":53065,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":53066,"byte_end":53069,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ - If properly constructed via [`TimeZone::ymd`] and others without an error,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":53070,"byte_end":53150,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"/   the corresponding local date should exist for at least a moment.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":53151,"byte_end":53221,"line_start":39,"line_end":39,"column_start":1,"column_end":71}},{"value":"/   (It may still have a gap from the offset changes.)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":53222,"byte_end":53278,"line_start":40,"line_end":40,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":53279,"byte_end":53282,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ - The `TimeZone` is free to assign *any* [`Offset`](crate::offset::Offset) to the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":53283,"byte_end":53368,"line_start":42,"line_end":42,"column_start":1,"column_end":86}},{"value":"/   local date, as long as that offset did occur in given day.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":53369,"byte_end":53433,"line_start":43,"line_end":43,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":53434,"byte_end":53437,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/   For example, if `2015-03-08T01:59-08:00` is followed by `2015-03-08T03:00-07:00`,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":53438,"byte_end":53525,"line_start":45,"line_end":45,"column_start":1,"column_end":88}},{"value":"/   it may produce either `2015-03-08-08:00` or `2015-03-08-07:00`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":53526,"byte_end":53594,"line_start":46,"line_end":46,"column_start":1,"column_end":69}},{"value":"/   but *not* `2015-03-08+00:00` and others.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":53595,"byte_end":53641,"line_start":47,"line_end":47,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":53642,"byte_end":53645,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ - Once constructed as a full `DateTime`, [`DateTime::date`] and other associated","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":53646,"byte_end":53730,"line_start":49,"line_end":49,"column_start":1,"column_end":85}},{"value":"/   methods should return those for the original `Date`. For example, if `dt =","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":53731,"byte_end":53811,"line_start":50,"line_end":50,"column_start":1,"column_end":81}},{"value":"/   tz.ymd(y,m,d).hms(h,n,s)` were valid, `dt.date() == tz.ymd(y,m,d)`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":53812,"byte_end":53885,"line_start":51,"line_end":51,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":53886,"byte_end":53889,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ - The date is timezone-agnostic up to one day (i.e. practically always),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":53890,"byte_end":53966,"line_start":53,"line_end":53,"column_start":1,"column_end":77}},{"value":"/   so the local date and UTC date should be equal for most cases","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":53967,"byte_end":54034,"line_start":54,"line_end":54,"column_start":1,"column_end":68}},{"value":"/   even though the raw calculation between `NaiveDate` and `Duration` may not.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":54035,"byte_end":54116,"line_start":55,"line_end":55,"column_start":1,"column_end":82}}]},{"kind":"Const","id":{"krate":0,"index":201},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":54417,"byte_end":54425,"line_start":66,"line_end":66,"column_start":11,"column_end":19},"name":"MIN_DATE","qualname":"::date::MIN_DATE","value":"Date<Utc>","parent":null,"children":[],"decl_id":null,"docs":" The minimum possible `Date`.\n","sig":null,"attributes":[{"value":"/ The minimum possible `Date`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":54285,"byte_end":54317,"line_start":63,"line_end":63,"column_start":1,"column_end":33}},{"value":"allow(deprecated)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":54318,"byte_end":54338,"line_start":64,"line_end":64,"column_start":1,"column_end":21}},{"value":"deprecated(since = \"0.4.20\", note = \"Use Date::MIN_UTC instead\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":54339,"byte_end":54406,"line_start":65,"line_end":65,"column_start":1,"column_end":68}}]},{"kind":"Const","id":{"krate":0,"index":202},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":54593,"byte_end":54601,"line_start":70,"line_end":70,"column_start":11,"column_end":19},"name":"MAX_DATE","qualname":"::date::MAX_DATE","value":"Date<Utc>","parent":null,"children":[],"decl_id":null,"docs":" The maximum possible `Date`.\n","sig":null,"attributes":[{"value":"/ The maximum possible `Date`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":54461,"byte_end":54493,"line_start":67,"line_end":67,"column_start":1,"column_end":33}},{"value":"allow(deprecated)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":54494,"byte_end":54514,"line_start":68,"line_end":68,"column_start":1,"column_end":21}},{"value":"deprecated(since = \"0.4.20\", note = \"Use Date::MAX_UTC instead\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":54515,"byte_end":54582,"line_start":69,"line_end":69,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":54926,"byte_end":54934,"line_start":78,"line_end":78,"column_start":12,"column_end":20},"name":"from_utc","qualname":"<Date<Tz>>::from_utc","value":"fn from_utc(NaiveDate, Tz::Offset) -> Date<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Date` with given *UTC* date and offset.\n The local date should be constructed via the `TimeZone` trait.\n","sig":null,"attributes":[{"value":"/ Makes a new `Date` with given *UTC* date and offset.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":54672,"byte_end":54728,"line_start":73,"line_end":73,"column_start":5,"column_end":61}},{"value":"/ The local date should be constructed via the `TimeZone` trait.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":54733,"byte_end":54799,"line_start":74,"line_end":74,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":54905,"byte_end":54914,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":55221,"byte_end":55229,"line_start":87,"line_end":87,"column_start":12,"column_end":20},"name":"and_time","qualname":"<Date<Tz>>::and_time","value":"fn and_time<'_>(&'_ Self, NaiveTime) -> Option<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date and given `NaiveTime`.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date and given `NaiveTime`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":55027,"byte_end":55098,"line_start":82,"line_end":82,"column_start":5,"column_end":76}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":55103,"byte_end":55151,"line_start":83,"line_end":83,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":55156,"byte_end":55159,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid datetime.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":55164,"byte_end":55195,"line_start":85,"line_end":85,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":55200,"byte_end":55209,"line_start":86,"line_end":86,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":55626,"byte_end":55633,"line_start":97,"line_end":97,"column_start":12,"column_end":19},"name":"and_hms","qualname":"<Date<Tz>>::and_hms","value":"fn and_hms<'_>(&'_ Self, u32, u32, u32) -> DateTime<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute and second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute and second.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":55411,"byte_end":55485,"line_start":92,"line_end":92,"column_start":5,"column_end":79}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":55490,"byte_end":55538,"line_start":93,"line_end":93,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":55543,"byte_end":55546,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute and/or second.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":55551,"byte_end":55600,"line_start":95,"line_end":95,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":55605,"byte_end":55614,"line_start":96,"line_end":96,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":55988,"byte_end":55999,"line_start":106,"line_end":106,"column_start":12,"column_end":23},"name":"and_hms_opt","qualname":"<Date<Tz>>::and_hms_opt","value":"fn and_hms_opt<'_>(&'_ Self, u32, u32, u32) -> Option<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute and second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute and second.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":55765,"byte_end":55839,"line_start":101,"line_end":101,"column_start":5,"column_end":79}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":55844,"byte_end":55892,"line_start":102,"line_end":102,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":55897,"byte_end":55900,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute and/or second.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":55905,"byte_end":55962,"line_start":104,"line_end":104,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":55967,"byte_end":55976,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":56486,"byte_end":56499,"line_start":116,"line_end":116,"column_start":12,"column_end":25},"name":"and_hms_milli","qualname":"<Date<Tz>>::and_hms_milli","value":"fn and_hms_milli<'_>(&'_ Self, u32, u32, u32, u32) -> DateTime<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\n The millisecond part can exceed 1,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute, second and millisecond.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":56160,"byte_end":56247,"line_start":110,"line_end":110,"column_start":5,"column_end":92}},{"value":"/ The millisecond part can exceed 1,000 in order to represent the leap second.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":56252,"byte_end":56332,"line_start":111,"line_end":111,"column_start":5,"column_end":85}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":56337,"byte_end":56385,"line_start":112,"line_end":112,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":56390,"byte_end":56393,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute, second and/or millisecond.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":56398,"byte_end":56460,"line_start":114,"line_end":114,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":56465,"byte_end":56474,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":56990,"byte_end":57007,"line_start":126,"line_end":126,"column_start":12,"column_end":29},"name":"and_hms_milli_opt","qualname":"<Date<Tz>>::and_hms_milli_opt","value":"fn and_hms_milli_opt<'_>(&'_ Self, u32, u32, u32, u32) -> Option<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\n The millisecond part can exceed 1,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute, second and millisecond.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":56656,"byte_end":56743,"line_start":120,"line_end":120,"column_start":5,"column_end":92}},{"value":"/ The millisecond part can exceed 1,000 in order to represent the leap second.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":56748,"byte_end":56828,"line_start":121,"line_end":121,"column_start":5,"column_end":85}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":56833,"byte_end":56881,"line_start":122,"line_end":122,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":56886,"byte_end":56889,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute, second and/or millisecond.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":56894,"byte_end":56964,"line_start":124,"line_end":124,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":56969,"byte_end":56978,"line_start":125,"line_end":125,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":57570,"byte_end":57583,"line_start":142,"line_end":142,"column_start":12,"column_end":25},"name":"and_hms_micro","qualname":"<Date<Tz>>::and_hms_micro","value":"fn and_hms_micro<'_>(&'_ Self, u32, u32, u32, u32) -> DateTime<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\n The microsecond part can exceed 1,000,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute, second and microsecond.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":57240,"byte_end":57327,"line_start":136,"line_end":136,"column_start":5,"column_end":92}},{"value":"/ The microsecond part can exceed 1,000,000 in order to represent the leap second.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":57332,"byte_end":57416,"line_start":137,"line_end":137,"column_start":5,"column_end":89}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":57421,"byte_end":57469,"line_start":138,"line_end":138,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":57474,"byte_end":57477,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute, second and/or microsecond.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":57482,"byte_end":57544,"line_start":140,"line_end":140,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":57549,"byte_end":57558,"line_start":141,"line_end":141,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":58078,"byte_end":58095,"line_start":152,"line_end":152,"column_start":12,"column_end":29},"name":"and_hms_micro_opt","qualname":"<Date<Tz>>::and_hms_micro_opt","value":"fn and_hms_micro_opt<'_>(&'_ Self, u32, u32, u32, u32) -> Option<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\n The microsecond part can exceed 1,000,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute, second and microsecond.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":57740,"byte_end":57827,"line_start":146,"line_end":146,"column_start":5,"column_end":92}},{"value":"/ The microsecond part can exceed 1,000,000 in order to represent the leap second.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":57832,"byte_end":57916,"line_start":147,"line_end":147,"column_start":5,"column_end":89}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":57921,"byte_end":57969,"line_start":148,"line_end":148,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":57974,"byte_end":57977,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute, second and/or microsecond.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":57982,"byte_end":58052,"line_start":150,"line_end":150,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":58057,"byte_end":58066,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":58659,"byte_end":58671,"line_start":168,"line_end":168,"column_start":12,"column_end":24},"name":"and_hms_nano","qualname":"<Date<Tz>>::and_hms_nano","value":"fn and_hms_nano<'_>(&'_ Self, u32, u32, u32, u32) -> DateTime<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\n The nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":58328,"byte_end":58414,"line_start":162,"line_end":162,"column_start":5,"column_end":91}},{"value":"/ The nanosecond part can exceed 1,000,000,000 in order to represent the leap second.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":58419,"byte_end":58506,"line_start":163,"line_end":163,"column_start":5,"column_end":92}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":58511,"byte_end":58559,"line_start":164,"line_end":164,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":58564,"byte_end":58567,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute, second and/or nanosecond.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":58572,"byte_end":58633,"line_start":166,"line_end":166,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":58638,"byte_end":58647,"line_start":167,"line_end":167,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":59164,"byte_end":59180,"line_start":178,"line_end":178,"column_start":12,"column_end":28},"name":"and_hms_nano_opt","qualname":"<Date<Tz>>::and_hms_nano_opt","value":"fn and_hms_nano_opt<'_>(&'_ Self, u32, u32, u32, u32) -> Option<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\n The nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":58825,"byte_end":58911,"line_start":172,"line_end":172,"column_start":5,"column_end":91}},{"value":"/ The nanosecond part can exceed 1,000,000,000 in order to represent the leap second.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":58916,"byte_end":59003,"line_start":173,"line_end":173,"column_start":5,"column_end":92}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":59008,"byte_end":59056,"line_start":174,"line_end":174,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":59061,"byte_end":59064,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute, second and/or nanosecond.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":59069,"byte_end":59138,"line_start":176,"line_end":176,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":59143,"byte_end":59152,"line_start":177,"line_end":177,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":59544,"byte_end":59548,"line_start":192,"line_end":192,"column_start":12,"column_end":16},"name":"succ","qualname":"<Date<Tz>>::succ","value":"fn succ<'_>(&'_ Self) -> Date<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Date` for the next date.","sig":null,"attributes":[{"value":"/ Makes a new `Date` for the next date.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":59410,"byte_end":59451,"line_start":188,"line_end":188,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":59456,"byte_end":59459,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Panics when `self` is the last representable date.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":59464,"byte_end":59518,"line_start":190,"line_end":190,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":59523,"byte_end":59532,"line_start":191,"line_end":191,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":59770,"byte_end":59778,"line_start":200,"line_end":200,"column_start":12,"column_end":20},"name":"succ_opt","qualname":"<Date<Tz>>::succ_opt","value":"fn succ_opt<'_>(&'_ Self) -> Option<Date<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Date` for the next date.","sig":null,"attributes":[{"value":"/ Makes a new `Date` for the next date.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":59628,"byte_end":59669,"line_start":196,"line_end":196,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":59674,"byte_end":59677,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when `self` is the last representable date.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":59682,"byte_end":59744,"line_start":198,"line_end":198,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":59749,"byte_end":59758,"line_start":199,"line_end":199,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":60038,"byte_end":60042,"line_start":208,"line_end":208,"column_start":12,"column_end":16},"name":"pred","qualname":"<Date<Tz>>::pred","value":"fn pred<'_>(&'_ Self) -> Date<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Date` for the prior date.","sig":null,"attributes":[{"value":"/ Makes a new `Date` for the prior date.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":59902,"byte_end":59944,"line_start":204,"line_end":204,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":59949,"byte_end":59952,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ Panics when `self` is the first representable date.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":59957,"byte_end":60012,"line_start":206,"line_end":206,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":60017,"byte_end":60026,"line_start":207,"line_end":207,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":60266,"byte_end":60274,"line_start":216,"line_end":216,"column_start":12,"column_end":20},"name":"pred_opt","qualname":"<Date<Tz>>::pred_opt","value":"fn pred_opt<'_>(&'_ Self) -> Option<Date<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Date` for the prior date.","sig":null,"attributes":[{"value":"/ Makes a new `Date` for the prior date.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":60122,"byte_end":60164,"line_start":212,"line_end":212,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":60169,"byte_end":60172,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when `self` is the first representable date.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":60177,"byte_end":60240,"line_start":214,"line_end":214,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":60245,"byte_end":60254,"line_start":215,"line_end":215,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":60468,"byte_end":60474,"line_start":222,"line_end":222,"column_start":12,"column_end":18},"name":"offset","qualname":"<Date<Tz>>::offset","value":"fn offset<'_>(&'_ Self) -> &'_ Tz::Offset","parent":null,"children":[],"decl_id":null,"docs":" Retrieves an associated offset from UTC.\n","sig":null,"attributes":[{"value":"/ Retrieves an associated offset from UTC.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":60398,"byte_end":60442,"line_start":220,"line_end":220,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":60447,"byte_end":60456,"line_start":221,"line_end":221,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":60595,"byte_end":60603,"line_start":228,"line_end":228,"column_start":12,"column_end":20},"name":"timezone","qualname":"<Date<Tz>>::timezone","value":"fn timezone<'_>(&'_ Self) -> Tz","parent":null,"children":[],"decl_id":null,"docs":" Retrieves an associated time zone.\n","sig":null,"attributes":[{"value":"/ Retrieves an associated time zone.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":60531,"byte_end":60569,"line_start":226,"line_end":226,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":60574,"byte_end":60583,"line_start":227,"line_end":227,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":60829,"byte_end":60842,"line_start":235,"line_end":235,"column_start":12,"column_end":25},"name":"with_timezone","qualname":"<Date<Tz>>::with_timezone","value":"fn with_timezone<Tz2, '_, '_>(&'_ Self, &'_ Tz2) -> Date<Tz2> where\nTz2: TimeZone","parent":null,"children":[],"decl_id":null,"docs":" Changes the associated time zone.\n This does not change the actual `Date` (but will change the string representation).\n","sig":null,"attributes":[{"value":"/ Changes the associated time zone.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":60674,"byte_end":60711,"line_start":232,"line_end":232,"column_start":5,"column_end":42}},{"value":"/ This does not change the actual `Date` (but will change the string representation).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":60716,"byte_end":60803,"line_start":233,"line_end":233,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":60808,"byte_end":60817,"line_start":234,"line_end":234,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":61074,"byte_end":61092,"line_start":243,"line_end":243,"column_start":12,"column_end":30},"name":"checked_add_signed","qualname":"<Date<Tz>>::checked_add_signed","value":"fn checked_add_signed(Self, OldDuration) -> Option<Date<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Adds given `Duration` to the current date.","sig":null,"attributes":[{"value":"/ Adds given `Duration` to the current date.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":60938,"byte_end":60984,"line_start":239,"line_end":239,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":60989,"byte_end":60992,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when it will result in overflow.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":60997,"byte_end":61048,"line_start":241,"line_end":241,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":61053,"byte_end":61062,"line_start":242,"line_end":242,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":61397,"byte_end":61415,"line_start":252,"line_end":252,"column_start":12,"column_end":30},"name":"checked_sub_signed","qualname":"<Date<Tz>>::checked_sub_signed","value":"fn checked_sub_signed(Self, OldDuration) -> Option<Date<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Subtracts given `Duration` from the current date.","sig":null,"attributes":[{"value":"/ Subtracts given `Duration` from the current date.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":61254,"byte_end":61307,"line_start":248,"line_end":248,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":61312,"byte_end":61315,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when it will result in overflow.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":61320,"byte_end":61371,"line_start":250,"line_end":250,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":61376,"byte_end":61385,"line_start":251,"line_end":251,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":61828,"byte_end":61849,"line_start":263,"line_end":263,"column_start":12,"column_end":33},"name":"signed_duration_since","qualname":"<Date<Tz>>::signed_duration_since","value":"fn signed_duration_since<Tz2>(Self, Date<Tz2>) -> OldDuration where\nTz2: TimeZone","parent":null,"children":[],"decl_id":null,"docs":" Subtracts another `Date` from the current date.\n Returns a `Duration` of integral numbers.","sig":null,"attributes":[{"value":"/ Subtracts another `Date` from the current date.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":61577,"byte_end":61628,"line_start":257,"line_end":257,"column_start":5,"column_end":56}},{"value":"/ Returns a `Duration` of integral numbers.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":61633,"byte_end":61678,"line_start":258,"line_end":258,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":61683,"byte_end":61686,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This does not overflow or underflow at all,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":61691,"byte_end":61738,"line_start":260,"line_end":260,"column_start":5,"column_end":52}},{"value":"/ as all possible output fits in the range of `Duration`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":61743,"byte_end":61802,"line_start":261,"line_end":261,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":61807,"byte_end":61816,"line_start":262,"line_end":262,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":62032,"byte_end":62041,"line_start":269,"line_end":269,"column_start":12,"column_end":21},"name":"naive_utc","qualname":"<Date<Tz>>::naive_utc","value":"fn naive_utc<'_>(&'_ Self) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Returns a view to the naive UTC date.\n","sig":null,"attributes":[{"value":"/ Returns a view to the naive UTC date.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":61965,"byte_end":62006,"line_start":267,"line_end":267,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":62011,"byte_end":62020,"line_start":268,"line_end":268,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":62351,"byte_end":62362,"line_start":279,"line_end":279,"column_start":12,"column_end":23},"name":"naive_local","qualname":"<Date<Tz>>::naive_local","value":"fn naive_local<'_>(&'_ Self) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Returns a view to the naive local date.","sig":null,"attributes":[{"value":"/ Returns a view to the naive local date.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":62093,"byte_end":62136,"line_start":273,"line_end":273,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":62141,"byte_end":62144,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ This is technically the same as [`naive_utc`](#method.naive_utc)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":62149,"byte_end":62217,"line_start":275,"line_end":275,"column_start":5,"column_end":73}},{"value":"/ because the offset is restricted to never exceed one day,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":62222,"byte_end":62283,"line_start":276,"line_end":276,"column_start":5,"column_end":66}},{"value":"/ but provided for the consistency.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":62288,"byte_end":62325,"line_start":277,"line_end":277,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":62330,"byte_end":62339,"line_start":278,"line_end":278,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":62499,"byte_end":62510,"line_start":284,"line_end":284,"column_start":12,"column_end":23},"name":"years_since","qualname":"<Date<Tz>>::years_since","value":"fn years_since<'_>(&'_ Self, Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of whole years from the given `base` until `self`.\n","sig":null,"attributes":[{"value":"/ Returns the number of whole years from the given `base` until `self`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":62414,"byte_end":62487,"line_start":283,"line_end":283,"column_start":5,"column_end":78}}]},{"kind":"Const","id":{"krate":0,"index":236},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":62864,"byte_end":62871,"line_start":297,"line_end":297,"column_start":15,"column_end":22},"name":"MIN_UTC","qualname":"::date::Date::<Tz>::MIN_UTC","value":"Date<Utc>","parent":{"krate":0,"index":203},"children":[],"decl_id":null,"docs":" The minimum possible `Date`.\n","sig":null,"attributes":[{"value":"/ The minimum possible `Date`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":62817,"byte_end":62849,"line_start":296,"line_end":296,"column_start":5,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":237},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":62980,"byte_end":62987,"line_start":299,"line_end":299,"column_start":15,"column_end":22},"name":"MAX_UTC","qualname":"::date::Date::<Tz>::MAX_UTC","value":"Date<Utc>","parent":{"krate":0,"index":203},"children":[],"decl_id":null,"docs":" The maximum possible `Date`.\n","sig":null,"attributes":[{"value":"/ The maximum possible `Date`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":62933,"byte_end":62965,"line_start":298,"line_end":298,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":65481,"byte_end":65485,"line_start":380,"line_end":380,"column_start":8,"column_end":12},"name":"year","qualname":"<Date<Tz> as traits::Datelike>::year","value":"fn year<'_>(&'_ Self) -> i32","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":1987},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":65464,"byte_end":65473,"line_start":379,"line_end":379,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":247},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":65563,"byte_end":65568,"line_start":384,"line_end":384,"column_start":8,"column_end":13},"name":"month","qualname":"<Date<Tz> as traits::Datelike>::month","value":"fn month<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":1989},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":65546,"byte_end":65555,"line_start":383,"line_end":383,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":65647,"byte_end":65653,"line_start":388,"line_end":388,"column_start":8,"column_end":14},"name":"month0","qualname":"<Date<Tz> as traits::Datelike>::month0","value":"fn month0<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":1990},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":65630,"byte_end":65639,"line_start":387,"line_end":387,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":65733,"byte_end":65736,"line_start":392,"line_end":392,"column_start":8,"column_end":11},"name":"day","qualname":"<Date<Tz> as traits::Datelike>::day","value":"fn day<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":1991},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":65716,"byte_end":65725,"line_start":391,"line_end":391,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":65813,"byte_end":65817,"line_start":396,"line_end":396,"column_start":8,"column_end":12},"name":"day0","qualname":"<Date<Tz> as traits::Datelike>::day0","value":"fn day0<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":1992},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":65796,"byte_end":65805,"line_start":395,"line_end":395,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":65895,"byte_end":65902,"line_start":400,"line_end":400,"column_start":8,"column_end":15},"name":"ordinal","qualname":"<Date<Tz> as traits::Datelike>::ordinal","value":"fn ordinal<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":1993},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":65878,"byte_end":65887,"line_start":399,"line_end":399,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":65983,"byte_end":65991,"line_start":404,"line_end":404,"column_start":8,"column_end":16},"name":"ordinal0","qualname":"<Date<Tz> as traits::Datelike>::ordinal0","value":"fn ordinal0<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":1994},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":65966,"byte_end":65975,"line_start":403,"line_end":403,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":66073,"byte_end":66080,"line_start":408,"line_end":408,"column_start":8,"column_end":15},"name":"weekday","qualname":"<Date<Tz> as traits::Datelike>::weekday","value":"fn weekday<'_>(&'_ Self) -> Weekday","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":1995},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":66056,"byte_end":66065,"line_start":407,"line_end":407,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":66165,"byte_end":66173,"line_start":412,"line_end":412,"column_start":8,"column_end":16},"name":"iso_week","qualname":"<Date<Tz> as traits::Datelike>::iso_week","value":"fn iso_week<'_>(&'_ Self) -> IsoWeek","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":1996},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":66148,"byte_end":66157,"line_start":411,"line_end":411,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":66260,"byte_end":66269,"line_start":417,"line_end":417,"column_start":8,"column_end":17},"name":"with_year","qualname":"<Date<Tz> as traits::Datelike>::with_year","value":"fn with_year<'_>(&'_ Self, i32) -> Option<Date<Tz>>","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":1997},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":66243,"byte_end":66252,"line_start":416,"line_end":416,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":66391,"byte_end":66401,"line_start":422,"line_end":422,"column_start":8,"column_end":18},"name":"with_month","qualname":"<Date<Tz> as traits::Datelike>::with_month","value":"fn with_month<'_>(&'_ Self, u32) -> Option<Date<Tz>>","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":1998},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":66374,"byte_end":66383,"line_start":421,"line_end":421,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":66526,"byte_end":66537,"line_start":427,"line_end":427,"column_start":8,"column_end":19},"name":"with_month0","qualname":"<Date<Tz> as traits::Datelike>::with_month0","value":"fn with_month0<'_>(&'_ Self, u32) -> Option<Date<Tz>>","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":1999},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":66509,"byte_end":66518,"line_start":426,"line_end":426,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":66665,"byte_end":66673,"line_start":432,"line_end":432,"column_start":8,"column_end":16},"name":"with_day","qualname":"<Date<Tz> as traits::Datelike>::with_day","value":"fn with_day<'_>(&'_ Self, u32) -> Option<Date<Tz>>","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":2000},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":66648,"byte_end":66657,"line_start":431,"line_end":431,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":66792,"byte_end":66801,"line_start":437,"line_end":437,"column_start":8,"column_end":17},"name":"with_day0","qualname":"<Date<Tz> as traits::Datelike>::with_day0","value":"fn with_day0<'_>(&'_ Self, u32) -> Option<Date<Tz>>","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":2001},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":66775,"byte_end":66784,"line_start":436,"line_end":436,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":66923,"byte_end":66935,"line_start":442,"line_end":442,"column_start":8,"column_end":20},"name":"with_ordinal","qualname":"<Date<Tz> as traits::Datelike>::with_ordinal","value":"fn with_ordinal<'_>(&'_ Self, u32) -> Option<Date<Tz>>","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":2002},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":66906,"byte_end":66915,"line_start":441,"line_end":441,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":67066,"byte_end":67079,"line_start":447,"line_end":447,"column_start":8,"column_end":21},"name":"with_ordinal0","qualname":"<Date<Tz> as traits::Datelike>::with_ordinal0","value":"fn with_ordinal0<'_>(&'_ Self, u32) -> Option<Date<Tz>>","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":2003},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":67049,"byte_end":67058,"line_start":446,"line_end":446,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":67499,"byte_end":67501,"line_start":457,"line_end":457,"column_start":8,"column_end":10},"name":"eq","qualname":"<Date<Tz> as core::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ Date<Tz2>) -> bool","parent":{"krate":1,"index":2915},"children":[],"decl_id":{"krate":1,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":67670,"byte_end":67681,"line_start":465,"line_end":465,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<Date<Tz> as core::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ Date<Tz>) -> Option<Ordering>","parent":{"krate":1,"index":2961},"children":[],"decl_id":{"krate":1,"index":2963},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":67826,"byte_end":67829,"line_start":471,"line_end":471,"column_start":8,"column_end":11},"name":"cmp","qualname":"<Date<Tz> as core::cmp::Ord>::cmp","value":"fn cmp<'_, '_>(&'_ Self, &'_ Date<Tz>) -> Ordering","parent":{"krate":1,"index":2951},"children":[],"decl_id":{"krate":1,"index":2952},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":67965,"byte_end":67969,"line_start":477,"line_end":477,"column_start":8,"column_end":12},"name":"hash","qualname":"<Date<Tz> as core::hash::Hash>::hash","value":"fn hash<H, '_, '_>(&'_ Self, &'_ mut H) where H: hash::Hasher","parent":{"krate":1,"index":10526},"children":[],"decl_id":{"krate":1,"index":10527},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":68151,"byte_end":68154,"line_start":486,"line_end":486,"column_start":8,"column_end":11},"name":"add","qualname":"<Date<Tz> as core::ops::Add>::add","value":"fn add(Self, OldDuration) -> Date<Tz>","parent":{"krate":1,"index":3331},"children":[],"decl_id":{"krate":1,"index":3334},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":68134,"byte_end":68143,"line_start":485,"line_end":485,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":68356,"byte_end":68366,"line_start":493,"line_end":493,"column_start":8,"column_end":18},"name":"add_assign","qualname":"<Date<Tz> as core::ops::AddAssign>::add_assign","value":"fn add_assign<'_>(&'_ mut Self, OldDuration)","parent":{"krate":1,"index":3362},"children":[],"decl_id":{"krate":1,"index":3364},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":68339,"byte_end":68348,"line_start":492,"line_end":492,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":68602,"byte_end":68605,"line_start":502,"line_end":502,"column_start":8,"column_end":11},"name":"sub","qualname":"<Date<Tz> as core::ops::Sub>::sub","value":"fn sub(Self, OldDuration) -> Date<Tz>","parent":{"krate":1,"index":3336},"children":[],"decl_id":{"krate":1,"index":3339},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":68585,"byte_end":68594,"line_start":501,"line_end":501,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":68807,"byte_end":68817,"line_start":509,"line_end":509,"column_start":8,"column_end":18},"name":"sub_assign","qualname":"<Date<Tz> as core::ops::SubAssign>::sub_assign","value":"fn sub_assign<'_>(&'_ mut Self, OldDuration)","parent":{"krate":1,"index":3366},"children":[],"decl_id":{"krate":1,"index":3368},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":68790,"byte_end":68799,"line_start":508,"line_end":508,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":69053,"byte_end":69056,"line_start":518,"line_end":518,"column_start":8,"column_end":11},"name":"sub","qualname":"<Date<Tz> as core::ops::Sub>::sub","value":"fn sub(Self, Date<Tz>) -> OldDuration","parent":{"krate":1,"index":3336},"children":[],"decl_id":{"krate":1,"index":3339},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":69036,"byte_end":69045,"line_start":517,"line_end":517,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":69196,"byte_end":69199,"line_start":524,"line_end":524,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Date<Tz> as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10288},"children":[],"decl_id":{"krate":1,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":69410,"byte_end":69413,"line_start":533,"line_end":533,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Date<Tz> as core::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2065},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":74340,"byte_end":74344,"line_start":55,"line_end":55,"column_start":5,"column_end":9},"name":"Secs","qualname":"::datetime::SecondsFormat::Secs","value":"SecondsFormat::Secs","parent":{"krate":0,"index":2064},"children":[],"decl_id":null,"docs":" Format whole seconds only, with no decimal point nor subseconds.\n","sig":null,"attributes":[{"value":"/ Format whole seconds only, with no decimal point nor subseconds.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":74267,"byte_end":74335,"line_start":54,"line_end":54,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2067},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":74483,"byte_end":74489,"line_start":59,"line_end":59,"column_start":5,"column_end":11},"name":"Millis","qualname":"::datetime::SecondsFormat::Millis","value":"SecondsFormat::Millis","parent":{"krate":0,"index":2064},"children":[],"decl_id":null,"docs":" Use fixed 3 subsecond digits. This corresponds to\n [Fixed::Nanosecond3](format/enum.Fixed.html#variant.Nanosecond3).\n","sig":null,"attributes":[{"value":"/ Use fixed 3 subsecond digits. This corresponds to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":74351,"byte_end":74404,"line_start":57,"line_end":57,"column_start":5,"column_end":58}},{"value":"/ [Fixed::Nanosecond3](format/enum.Fixed.html#variant.Nanosecond3).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":74409,"byte_end":74478,"line_start":58,"line_end":58,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2069},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":74628,"byte_end":74634,"line_start":63,"line_end":63,"column_start":5,"column_end":11},"name":"Micros","qualname":"::datetime::SecondsFormat::Micros","value":"SecondsFormat::Micros","parent":{"krate":0,"index":2064},"children":[],"decl_id":null,"docs":" Use fixed 6 subsecond digits. This corresponds to\n [Fixed::Nanosecond6](format/enum.Fixed.html#variant.Nanosecond6).\n","sig":null,"attributes":[{"value":"/ Use fixed 6 subsecond digits. This corresponds to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":74496,"byte_end":74549,"line_start":61,"line_end":61,"column_start":5,"column_end":58}},{"value":"/ [Fixed::Nanosecond6](format/enum.Fixed.html#variant.Nanosecond6).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":74554,"byte_end":74623,"line_start":62,"line_end":62,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2071},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":74773,"byte_end":74778,"line_start":67,"line_end":67,"column_start":5,"column_end":10},"name":"Nanos","qualname":"::datetime::SecondsFormat::Nanos","value":"SecondsFormat::Nanos","parent":{"krate":0,"index":2064},"children":[],"decl_id":null,"docs":" Use fixed 9 subsecond digits. This corresponds to\n [Fixed::Nanosecond9](format/enum.Fixed.html#variant.Nanosecond9).\n","sig":null,"attributes":[{"value":"/ Use fixed 9 subsecond digits. This corresponds to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":74641,"byte_end":74694,"line_start":65,"line_end":65,"column_start":5,"column_end":58}},{"value":"/ [Fixed::Nanosecond9](format/enum.Fixed.html#variant.Nanosecond9).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":74699,"byte_end":74768,"line_start":66,"line_end":66,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2073},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":75014,"byte_end":75020,"line_start":72,"line_end":72,"column_start":5,"column_end":11},"name":"AutoSi","qualname":"::datetime::SecondsFormat::AutoSi","value":"SecondsFormat::AutoSi","parent":{"krate":0,"index":2064},"children":[],"decl_id":null,"docs":" Automatically select one of `Secs`, `Millis`, `Micros`, or `Nanos` to\n display all available non-zero sub-second digits.  This corresponds to\n [Fixed::Nanosecond](format/enum.Fixed.html#variant.Nanosecond).\n","sig":null,"attributes":[{"value":"/ Automatically select one of `Secs`, `Millis`, `Micros`, or `Nanos` to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":74785,"byte_end":74858,"line_start":69,"line_end":69,"column_start":5,"column_end":78}},{"value":"/ display all available non-zero sub-second digits.  This corresponds to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":74863,"byte_end":74937,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/ [Fixed::Nanosecond](format/enum.Fixed.html#variant.Nanosecond).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":74942,"byte_end":75009,"line_start":71,"line_end":71,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2075},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":75080,"byte_end":75095,"line_start":76,"line_end":76,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::datetime::SecondsFormat::__NonExhaustive","value":"SecondsFormat::__NonExhaustive","parent":{"krate":0,"index":2064},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2064},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":74247,"byte_end":74260,"line_start":53,"line_end":53,"column_start":10,"column_end":23},"name":"SecondsFormat","qualname":"::datetime::SecondsFormat","value":"enum SecondsFormat { Secs, Millis, Micros, Nanos, AutoSi, __NonExhaustive, }","parent":null,"children":[{"krate":0,"index":2065},{"krate":0,"index":2067},{"krate":0,"index":2069},{"krate":0,"index":2071},{"krate":0,"index":2073},{"krate":0,"index":2075}],"decl_id":null,"docs":" Specific formatting options for seconds. This may be extended in the\n future, so exhaustive matching in external code is not recommended.","sig":null,"attributes":[{"value":"/ Specific formatting options for seconds. This may be extended in the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":73984,"byte_end":74056,"line_start":48,"line_end":48,"column_start":1,"column_end":73}},{"value":"/ future, so exhaustive matching in external code is not recommended.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":74057,"byte_end":74128,"line_start":49,"line_end":49,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":74129,"byte_end":74132,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ See the `TimeZone::to_rfc3339_opts` function for usage.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":74133,"byte_end":74192,"line_start":51,"line_end":51,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":2088},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":75464,"byte_end":75472,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"DateTime","qualname":"::datetime::DateTime","value":"DateTime {  }","parent":null,"children":[{"krate":0,"index":2090},{"krate":0,"index":2091}],"decl_id":null,"docs":" ISO 8601 combined date and time with time zone.","sig":null,"attributes":[{"value":"/ ISO 8601 combined date and time with time zone.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":75100,"byte_end":75151,"line_start":79,"line_end":79,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":75152,"byte_end":75155,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ There are some constructors implemented here (the `from_*` methods), but","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":75156,"byte_end":75232,"line_start":81,"line_end":81,"column_start":1,"column_end":77}},{"value":"/ the general-purpose constructors are all via the methods on the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":75233,"byte_end":75300,"line_start":82,"line_end":82,"column_start":1,"column_end":68}},{"value":"/ [`TimeZone`](./offset/trait.TimeZone.html) implementations.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":75301,"byte_end":75364,"line_start":83,"line_end":83,"column_start":1,"column_end":64}}]},{"kind":"Const","id":{"krate":0,"index":415},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":75669,"byte_end":75681,"line_start":93,"line_end":93,"column_start":11,"column_end":23},"name":"MIN_DATETIME","qualname":"::datetime::MIN_DATETIME","value":"DateTime<Utc>","parent":null,"children":[],"decl_id":null,"docs":" The minimum possible `DateTime<Utc>`.\n","sig":null,"attributes":[{"value":"/ The minimum possible `DateTime<Utc>`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":75545,"byte_end":75586,"line_start":91,"line_end":91,"column_start":1,"column_end":42}},{"value":"deprecated(since = \"0.4.20\", note = \"Use DateTime::MIN_UTC instead\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":75587,"byte_end":75658,"line_start":92,"line_end":92,"column_start":1,"column_end":72}}]},{"kind":"Const","id":{"krate":0,"index":416},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":75849,"byte_end":75861,"line_start":96,"line_end":96,"column_start":11,"column_end":23},"name":"MAX_DATETIME","qualname":"::datetime::MAX_DATETIME","value":"DateTime<Utc>","parent":null,"children":[],"decl_id":null,"docs":" The maximum possible `DateTime<Utc>`.\n","sig":null,"attributes":[{"value":"/ The maximum possible `DateTime<Utc>`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":75725,"byte_end":75766,"line_start":94,"line_end":94,"column_start":1,"column_end":42}},{"value":"deprecated(since = \"0.4.20\", note = \"Use DateTime::MAX_UTC instead\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":75767,"byte_end":75838,"line_start":95,"line_end":95,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":76471,"byte_end":76479,"line_start":113,"line_end":113,"column_start":12,"column_end":20},"name":"from_utc","qualname":"<DateTime<Tz>>::from_utc","value":"fn from_utc(NaiveDateTime, Tz::Offset) -> DateTime<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` with given *UTC* datetime and offset.\n The local datetime should be constructed via the `TimeZone` trait.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` with given *UTC* datetime and offset.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":75944,"byte_end":76008,"line_start":99,"line_end":99,"column_start":5,"column_end":69}},{"value":"/ The local datetime should be constructed via the `TimeZone` trait.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":76013,"byte_end":76083,"line_start":100,"line_end":100,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":76088,"byte_end":76091,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":76096,"byte_end":76109,"line_start":102,"line_end":102,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":76114,"byte_end":76117,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":76122,"byte_end":76129,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/ use chrono::{DateTime, TimeZone, NaiveDateTime, Utc};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":76134,"byte_end":76191,"line_start":105,"line_end":105,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":76196,"byte_end":76199,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ let dt = DateTime::<Utc>::from_utc(NaiveDateTime::from_timestamp(61, 0), Utc);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":76204,"byte_end":76286,"line_start":107,"line_end":107,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(Utc.timestamp(61, 0), dt);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":76291,"byte_end":76332,"line_start":108,"line_end":108,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":76337,"byte_end":76344,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":76450,"byte_end":76459,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":77731,"byte_end":77741,"line_start":142,"line_end":142,"column_start":12,"column_end":22},"name":"from_local","qualname":"<DateTime<Tz>>::from_local","value":"fn from_local(NaiveDateTime, Tz::Offset) -> DateTime<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` with given **local** datetime and offset that\n presents local timezone.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` with given **local** datetime and offset that","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":76592,"byte_end":76664,"line_start":117,"line_end":117,"column_start":5,"column_end":77}},{"value":"/ presents local timezone.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":76669,"byte_end":76697,"line_start":118,"line_end":118,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":76702,"byte_end":76705,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":76710,"byte_end":76723,"line_start":120,"line_end":120,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":76728,"byte_end":76731,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":76736,"byte_end":76743,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ use chrono::DateTime;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":76748,"byte_end":76773,"line_start":123,"line_end":123,"column_start":5,"column_end":30}},{"value":"/ use chrono::naive::NaiveDate;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":76778,"byte_end":76811,"line_start":124,"line_end":124,"column_start":5,"column_end":38}},{"value":"/ use chrono::offset::{Utc, FixedOffset};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":76816,"byte_end":76859,"line_start":125,"line_end":125,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":76864,"byte_end":76867,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ let naivedatetime_utc = NaiveDate::from_ymd(2000, 1, 12).and_hms(2, 0, 0);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":76872,"byte_end":76950,"line_start":127,"line_end":127,"column_start":5,"column_end":83}},{"value":"/ let datetime_utc = DateTime::<Utc>::from_utc(naivedatetime_utc, Utc);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":76955,"byte_end":77028,"line_start":128,"line_end":128,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":77033,"byte_end":77036,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ let timezone_east = FixedOffset::east(8 * 60 * 60);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":77041,"byte_end":77096,"line_start":130,"line_end":130,"column_start":5,"column_end":60}},{"value":"/ let naivedatetime_east = NaiveDate::from_ymd(2000, 1, 12).and_hms(10, 0, 0);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":77101,"byte_end":77181,"line_start":131,"line_end":131,"column_start":5,"column_end":85}},{"value":"/ let datetime_east = DateTime::<FixedOffset>::from_local(naivedatetime_east, timezone_east);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":77186,"byte_end":77281,"line_start":132,"line_end":132,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":77286,"byte_end":77289,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ let timezone_west = FixedOffset::west(7 * 60 * 60);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":77294,"byte_end":77349,"line_start":134,"line_end":134,"column_start":5,"column_end":60}},{"value":"/ let naivedatetime_west = NaiveDate::from_ymd(2000, 1, 11).and_hms(19, 0, 0);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":77354,"byte_end":77434,"line_start":135,"line_end":135,"column_start":5,"column_end":85}},{"value":"/ let datetime_west = DateTime::<FixedOffset>::from_local(naivedatetime_west, timezone_west);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":77439,"byte_end":77534,"line_start":136,"line_end":136,"column_start":5,"column_end":100}},{"value":"/ assert_eq!(datetime_east, datetime_utc.with_timezone(&timezone_east));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":77540,"byte_end":77614,"line_start":138,"line_end":138,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(datetime_west, datetime_utc.with_timezone(&timezone_west));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":77619,"byte_end":77693,"line_start":139,"line_end":139,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":77698,"byte_end":77705,"line_start":140,"line_end":140,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":77710,"byte_end":77719,"line_start":141,"line_end":141,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":78468,"byte_end":78472,"line_start":165,"line_end":165,"column_start":12,"column_end":16},"name":"date","qualname":"<DateTime<Tz>>::date","value":"fn date<'_>(&'_ Self) -> Date<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves a date component","sig":null,"attributes":[{"value":"/ Retrieves a date component","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":77921,"byte_end":77951,"line_start":148,"line_end":148,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":77956,"byte_end":77959,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ Unless you are immediately planning on turning this into a `DateTime`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":77964,"byte_end":78037,"line_start":150,"line_end":150,"column_start":5,"column_end":78}},{"value":"/ with the same Timezone you should use the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":78042,"byte_end":78087,"line_start":151,"line_end":151,"column_start":5,"column_end":50}},{"value":"/ [`date_naive`](DateTime::date_naive) method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":78092,"byte_end":78140,"line_start":152,"line_end":152,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":78145,"byte_end":78148,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":78153,"byte_end":78160,"line_start":154,"line_end":154,"column_start":5,"column_end":12}},{"value":"/ use chrono::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":78165,"byte_end":78192,"line_start":155,"line_end":155,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":78197,"byte_end":78200,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ let date: Date<Utc> = Utc.ymd(2020, 1, 1);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":78205,"byte_end":78251,"line_start":157,"line_end":157,"column_start":5,"column_end":51}},{"value":"/ let dt: DateTime<Utc> = date.and_hms(0, 0, 0);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":78256,"byte_end":78306,"line_start":158,"line_end":158,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":78311,"byte_end":78314,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(dt.date(), date);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":78319,"byte_end":78351,"line_start":160,"line_end":160,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":78356,"byte_end":78359,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(dt.date().and_hms(1, 1, 1), date.and_hms(1, 1, 1));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":78364,"byte_end":78430,"line_start":162,"line_end":162,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":78435,"byte_end":78442,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":78447,"byte_end":78456,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":79143,"byte_end":79153,"line_start":182,"line_end":182,"column_start":12,"column_end":22},"name":"date_naive","qualname":"<DateTime<Tz>>::date_naive","value":"fn date_naive<'_>(&'_ Self) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the Date without an associated timezone","sig":null,"attributes":[{"value":"/ Retrieves the Date without an associated timezone","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":78576,"byte_end":78629,"line_start":169,"line_end":169,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":78634,"byte_end":78637,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ [`NaiveDate`] is a more well-defined type, and has more traits implemented on it,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":78642,"byte_end":78727,"line_start":171,"line_end":171,"column_start":5,"column_end":90}},{"value":"/ so should be preferred to [`Date`] any time you truly want to operate on Dates.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":78732,"byte_end":78815,"line_start":172,"line_end":172,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":78820,"byte_end":78823,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":78828,"byte_end":78835,"line_start":174,"line_end":174,"column_start":5,"column_end":12}},{"value":"/ use chrono::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":78840,"byte_end":78867,"line_start":175,"line_end":175,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":78872,"byte_end":78875,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ let date: DateTime<Utc> = Utc.ymd(2020, 1, 1).and_hms(0, 0, 0);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":78880,"byte_end":78947,"line_start":177,"line_end":177,"column_start":5,"column_end":72}},{"value":"/ let other: DateTime<FixedOffset> = FixedOffset::east(23).ymd(2020, 1, 1).and_hms(0, 0, 0);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":78952,"byte_end":79046,"line_start":178,"line_end":178,"column_start":5,"column_end":99}},{"value":"/ assert_eq!(date.date_naive(), other.date_naive());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":79051,"byte_end":79105,"line_start":179,"line_end":179,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":79110,"byte_end":79117,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":79122,"byte_end":79131,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":79418,"byte_end":79422,"line_start":190,"line_end":190,"column_start":12,"column_end":16},"name":"time","qualname":"<DateTime<Tz>>::time","value":"fn time<'_>(&'_ Self) -> NaiveTime","parent":null,"children":[],"decl_id":null,"docs":" Retrieves a time component.\n Unlike `date`, this is not associated to the time zone.\n","sig":null,"attributes":[{"value":"/ Retrieves a time component.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":79297,"byte_end":79328,"line_start":187,"line_end":187,"column_start":5,"column_end":36}},{"value":"/ Unlike `date`, this is not associated to the time zone.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":79333,"byte_end":79392,"line_start":188,"line_end":188,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":79397,"byte_end":79406,"line_start":189,"line_end":189,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":79639,"byte_end":79648,"line_start":197,"line_end":197,"column_start":12,"column_end":21},"name":"timestamp","qualname":"<DateTime<Tz>>::timestamp","value":"fn timestamp<'_>(&'_ Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of non-leap seconds since January 1, 1970 0:00:00 UTC\n (aka \"UNIX timestamp\").\n","sig":null,"attributes":[{"value":"/ Returns the number of non-leap seconds since January 1, 1970 0:00:00 UTC","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":79505,"byte_end":79581,"line_start":194,"line_end":194,"column_start":5,"column_end":81}},{"value":"/ (aka \"UNIX timestamp\").","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":79586,"byte_end":79613,"line_start":195,"line_end":195,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":79618,"byte_end":79627,"line_start":196,"line_end":196,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":80467,"byte_end":80483,"line_start":221,"line_end":221,"column_start":12,"column_end":28},"name":"timestamp_millis","qualname":"<DateTime<Tz>>::timestamp_millis","value":"fn timestamp_millis<'_>(&'_ Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of non-leap-milliseconds since January 1, 1970 UTC","sig":null,"attributes":[{"value":"/ Returns the number of non-leap-milliseconds since January 1, 1970 UTC","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":79710,"byte_end":79783,"line_start":201,"line_end":201,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":79788,"byte_end":79791,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ Note that this does reduce the number of years that can be represented","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":79796,"byte_end":79870,"line_start":203,"line_end":203,"column_start":5,"column_end":79}},{"value":"/ from ~584 Billion to ~584 Million. (If this is a problem, please file","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":79875,"byte_end":79948,"line_start":204,"line_end":204,"column_start":5,"column_end":78}},{"value":"/ an issue to let me know what domain needs millisecond precision over","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":79953,"byte_end":80025,"line_start":205,"line_end":205,"column_start":5,"column_end":77}},{"value":"/ billions of years, I'm curious.)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":80030,"byte_end":80066,"line_start":206,"line_end":206,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":80071,"byte_end":80074,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":80079,"byte_end":80092,"line_start":208,"line_end":208,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":80097,"byte_end":80100,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":80105,"byte_end":80112,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"/ use chrono::Utc;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":80117,"byte_end":80137,"line_start":211,"line_end":211,"column_start":5,"column_end":25}},{"value":"/ use chrono::TimeZone;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":80142,"byte_end":80167,"line_start":212,"line_end":212,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":80172,"byte_end":80175,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ let dt = Utc.ymd(1970, 1, 1).and_hms_milli(0, 0, 1, 444);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":80180,"byte_end":80241,"line_start":214,"line_end":214,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(dt.timestamp_millis(), 1_444);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":80246,"byte_end":80291,"line_start":215,"line_end":215,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":80296,"byte_end":80299,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ let dt = Utc.ymd(2001, 9, 9).and_hms_milli(1, 46, 40, 555);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":80304,"byte_end":80367,"line_start":217,"line_end":217,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(dt.timestamp_millis(), 1_000_000_000_555);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":80372,"byte_end":80429,"line_start":218,"line_end":218,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":80434,"byte_end":80441,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":80446,"byte_end":80455,"line_start":220,"line_end":220,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":81310,"byte_end":81326,"line_start":245,"line_end":245,"column_start":12,"column_end":28},"name":"timestamp_micros","qualname":"<DateTime<Tz>>::timestamp_micros","value":"fn timestamp_micros<'_>(&'_ Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of non-leap-microseconds since January 1, 1970 UTC","sig":null,"attributes":[{"value":"/ Returns the number of non-leap-microseconds since January 1, 1970 UTC","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":80552,"byte_end":80625,"line_start":225,"line_end":225,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":80630,"byte_end":80633,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ Note that this does reduce the number of years that can be represented","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":80638,"byte_end":80712,"line_start":227,"line_end":227,"column_start":5,"column_end":79}},{"value":"/ from ~584 Billion to ~584 Thousand. (If this is a problem, please file","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":80717,"byte_end":80791,"line_start":228,"line_end":228,"column_start":5,"column_end":79}},{"value":"/ an issue to let me know what domain needs microsecond precision over","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":80796,"byte_end":80868,"line_start":229,"line_end":229,"column_start":5,"column_end":77}},{"value":"/ millennia, I'm curious.)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":80873,"byte_end":80901,"line_start":230,"line_end":230,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":80906,"byte_end":80909,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":80914,"byte_end":80927,"line_start":232,"line_end":232,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":80932,"byte_end":80935,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":80940,"byte_end":80947,"line_start":234,"line_end":234,"column_start":5,"column_end":12}},{"value":"/ use chrono::Utc;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":80952,"byte_end":80972,"line_start":235,"line_end":235,"column_start":5,"column_end":25}},{"value":"/ use chrono::TimeZone;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":80977,"byte_end":81002,"line_start":236,"line_end":236,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":81007,"byte_end":81010,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ let dt = Utc.ymd(1970, 1, 1).and_hms_micro(0, 0, 1, 444);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":81015,"byte_end":81076,"line_start":238,"line_end":238,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(dt.timestamp_micros(), 1_000_444);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":81081,"byte_end":81130,"line_start":239,"line_end":239,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":81135,"byte_end":81138,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ let dt = Utc.ymd(2001, 9, 9).and_hms_micro(1, 46, 40, 555);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":81143,"byte_end":81206,"line_start":241,"line_end":241,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(dt.timestamp_micros(), 1_000_000_000_000_555);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":81211,"byte_end":81272,"line_start":242,"line_end":242,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":81277,"byte_end":81284,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":81289,"byte_end":81298,"line_start":244,"line_end":244,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":82146,"byte_end":82161,"line_start":269,"line_end":269,"column_start":12,"column_end":27},"name":"timestamp_nanos","qualname":"<DateTime<Tz>>::timestamp_nanos","value":"fn timestamp_nanos<'_>(&'_ Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of non-leap-nanoseconds since January 1, 1970 UTC","sig":null,"attributes":[{"value":"/ Returns the number of non-leap-nanoseconds since January 1, 1970 UTC","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":81395,"byte_end":81467,"line_start":249,"line_end":249,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":81472,"byte_end":81475,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ Note that this does reduce the number of years that can be represented","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":81480,"byte_end":81554,"line_start":251,"line_end":251,"column_start":5,"column_end":79}},{"value":"/ from ~584 Billion to ~584. (If this is a problem, please file","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":81559,"byte_end":81624,"line_start":252,"line_end":252,"column_start":5,"column_end":70}},{"value":"/ an issue to let me know what domain needs nanosecond precision over","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":81629,"byte_end":81700,"line_start":253,"line_end":253,"column_start":5,"column_end":76}},{"value":"/ millennia, I'm curious.)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":81705,"byte_end":81733,"line_start":254,"line_end":254,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":81738,"byte_end":81741,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":81746,"byte_end":81759,"line_start":256,"line_end":256,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":81764,"byte_end":81767,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":81772,"byte_end":81779,"line_start":258,"line_end":258,"column_start":5,"column_end":12}},{"value":"/ use chrono::Utc;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":81784,"byte_end":81804,"line_start":259,"line_end":259,"column_start":5,"column_end":25}},{"value":"/ use chrono::TimeZone;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":81809,"byte_end":81834,"line_start":260,"line_end":260,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":81839,"byte_end":81842,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ let dt = Utc.ymd(1970, 1, 1).and_hms_nano(0, 0, 1, 444);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":81847,"byte_end":81907,"line_start":262,"line_end":262,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(dt.timestamp_nanos(), 1_000_000_444);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":81912,"byte_end":81964,"line_start":263,"line_end":263,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":81969,"byte_end":81972,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ let dt = Utc.ymd(2001, 9, 9).and_hms_nano(1, 46, 40, 555);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":81977,"byte_end":82039,"line_start":265,"line_end":265,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(dt.timestamp_nanos(), 1_000_000_000_000_000_555);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":82044,"byte_end":82108,"line_start":266,"line_end":266,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":82113,"byte_end":82120,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":82125,"byte_end":82134,"line_start":268,"line_end":268,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":82491,"byte_end":82514,"line_start":279,"line_end":279,"column_start":12,"column_end":35},"name":"timestamp_subsec_millis","qualname":"<DateTime<Tz>>::timestamp_subsec_millis","value":"fn timestamp_subsec_millis<'_>(&'_ Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of milliseconds since the last second boundary","sig":null,"attributes":[{"value":"/ Returns the number of milliseconds since the last second boundary","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":82229,"byte_end":82298,"line_start":273,"line_end":273,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":82303,"byte_end":82306,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ warning: in event of a leap second, this may exceed 999","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":82311,"byte_end":82370,"line_start":275,"line_end":275,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":82375,"byte_end":82378,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ note: this is not the number of milliseconds since January 1, 1970 0:00:00 UTC","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":82383,"byte_end":82465,"line_start":277,"line_end":277,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":82470,"byte_end":82479,"line_start":278,"line_end":278,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":429},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":82856,"byte_end":82879,"line_start":289,"line_end":289,"column_start":12,"column_end":35},"name":"timestamp_subsec_micros","qualname":"<DateTime<Tz>>::timestamp_subsec_micros","value":"fn timestamp_subsec_micros<'_>(&'_ Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of microseconds since the last second boundary","sig":null,"attributes":[{"value":"/ Returns the number of microseconds since the last second boundary","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":82590,"byte_end":82659,"line_start":283,"line_end":283,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":82664,"byte_end":82667,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ warning: in event of a leap second, this may exceed 999_999","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":82672,"byte_end":82735,"line_start":285,"line_end":285,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":82740,"byte_end":82743,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ note: this is not the number of microseconds since January 1, 1970 0:00:00 UTC","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":82748,"byte_end":82830,"line_start":287,"line_end":287,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":82835,"byte_end":82844,"line_start":288,"line_end":288,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":83223,"byte_end":83245,"line_start":299,"line_end":299,"column_start":12,"column_end":34},"name":"timestamp_subsec_nanos","qualname":"<DateTime<Tz>>::timestamp_subsec_nanos","value":"fn timestamp_subsec_nanos<'_>(&'_ Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of nanoseconds since the last second boundary","sig":null,"attributes":[{"value":"/ Returns the number of nanoseconds since the last second boundary","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":82955,"byte_end":83023,"line_start":293,"line_end":293,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":83028,"byte_end":83031,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ warning: in event of a leap second, this may exceed 999_999_999","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":83036,"byte_end":83103,"line_start":295,"line_end":295,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":83108,"byte_end":83111,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ note: this is not the number of nanoseconds since January 1, 1970 0:00:00 UTC","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":83116,"byte_end":83197,"line_start":297,"line_end":297,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":83202,"byte_end":83211,"line_start":298,"line_end":298,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":83390,"byte_end":83396,"line_start":305,"line_end":305,"column_start":12,"column_end":18},"name":"offset","qualname":"<DateTime<Tz>>::offset","value":"fn offset<'_>(&'_ Self) -> &'_ Tz::Offset","parent":null,"children":[],"decl_id":null,"docs":" Retrieves an associated offset from UTC.\n","sig":null,"attributes":[{"value":"/ Retrieves an associated offset from UTC.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":83320,"byte_end":83364,"line_start":303,"line_end":303,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":83369,"byte_end":83378,"line_start":304,"line_end":304,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":83517,"byte_end":83525,"line_start":311,"line_end":311,"column_start":12,"column_end":20},"name":"timezone","qualname":"<DateTime<Tz>>::timezone","value":"fn timezone<'_>(&'_ Self) -> Tz","parent":null,"children":[],"decl_id":null,"docs":" Retrieves an associated time zone.\n","sig":null,"attributes":[{"value":"/ Retrieves an associated time zone.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":83453,"byte_end":83491,"line_start":309,"line_end":309,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":83496,"byte_end":83505,"line_start":310,"line_end":310,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":83775,"byte_end":83788,"line_start":318,"line_end":318,"column_start":12,"column_end":25},"name":"with_timezone","qualname":"<DateTime<Tz>>::with_timezone","value":"fn with_timezone<Tz2, '_, '_>(&'_ Self, &'_ Tz2) -> DateTime<Tz2> where\nTz2: TimeZone","parent":null,"children":[],"decl_id":null,"docs":" Changes the associated time zone.\n The returned `DateTime` references the same instant of time from the perspective of the provided time zone.\n","sig":null,"attributes":[{"value":"/ Changes the associated time zone.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":83596,"byte_end":83633,"line_start":315,"line_end":315,"column_start":5,"column_end":42}},{"value":"/ The returned `DateTime` references the same instant of time from the perspective of the provided time zone.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":83638,"byte_end":83749,"line_start":316,"line_end":316,"column_start":5,"column_end":116}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":83754,"byte_end":83763,"line_start":317,"line_end":317,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":84041,"byte_end":84059,"line_start":326,"line_end":326,"column_start":12,"column_end":30},"name":"checked_add_signed","qualname":"<DateTime<Tz>>::checked_add_signed","value":"fn checked_add_signed(Self, OldDuration) -> Option<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Adds given `Duration` to the current date and time.","sig":null,"attributes":[{"value":"/ Adds given `Duration` to the current date and time.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":83896,"byte_end":83951,"line_start":322,"line_end":322,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":83956,"byte_end":83959,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when it will result in overflow.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":83964,"byte_end":84015,"line_start":324,"line_end":324,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":84020,"byte_end":84029,"line_start":325,"line_end":325,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":84416,"byte_end":84434,"line_start":336,"line_end":336,"column_start":12,"column_end":30},"name":"checked_sub_signed","qualname":"<DateTime<Tz>>::checked_sub_signed","value":"fn checked_sub_signed(Self, OldDuration) -> Option<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Subtracts given `Duration` from the current date and time.","sig":null,"attributes":[{"value":"/ Subtracts given `Duration` from the current date and time.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":84264,"byte_end":84326,"line_start":332,"line_end":332,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":84331,"byte_end":84334,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when it will result in overflow.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":84339,"byte_end":84390,"line_start":334,"line_end":334,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":84395,"byte_end":84404,"line_start":335,"line_end":335,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":84781,"byte_end":84802,"line_start":345,"line_end":345,"column_start":12,"column_end":33},"name":"signed_duration_since","qualname":"<DateTime<Tz>>::signed_duration_since","value":"fn signed_duration_since<Tz2>(Self, DateTime<Tz2>) -> OldDuration where\nTz2: TimeZone","parent":null,"children":[],"decl_id":null,"docs":" Subtracts another `DateTime` from the current date and time.\n This does not overflow or underflow at all.\n","sig":null,"attributes":[{"value":"/ Subtracts another `DateTime` from the current date and time.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":84639,"byte_end":84703,"line_start":342,"line_end":342,"column_start":5,"column_end":69}},{"value":"/ This does not overflow or underflow at all.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":84708,"byte_end":84755,"line_start":343,"line_end":343,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":84760,"byte_end":84769,"line_start":344,"line_end":344,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":85001,"byte_end":85010,"line_start":351,"line_end":351,"column_start":12,"column_end":21},"name":"naive_utc","qualname":"<DateTime<Tz>>::naive_utc","value":"fn naive_utc<'_>(&'_ Self) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Returns a view to the naive UTC datetime.\n","sig":null,"attributes":[{"value":"/ Returns a view to the naive UTC datetime.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":84930,"byte_end":84975,"line_start":349,"line_end":349,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":84980,"byte_end":84989,"line_start":350,"line_end":350,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":85143,"byte_end":85154,"line_start":357,"line_end":357,"column_start":12,"column_end":23},"name":"naive_local","qualname":"<DateTime<Tz>>::naive_local","value":"fn naive_local<'_>(&'_ Self) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Returns a view to the naive local datetime.\n","sig":null,"attributes":[{"value":"/ Returns a view to the naive local datetime.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":85070,"byte_end":85117,"line_start":355,"line_end":355,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":85122,"byte_end":85131,"line_start":356,"line_end":356,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":85312,"byte_end":85323,"line_start":362,"line_end":362,"column_start":12,"column_end":23},"name":"years_since","qualname":"<DateTime<Tz>>::years_since","value":"fn years_since<'_>(&'_ Self, Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the elapsed years from now to the given [`DateTime`].\n","sig":null,"attributes":[{"value":"/ Retrieve the elapsed years from now to the given [`DateTime`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":85234,"byte_end":85300,"line_start":361,"line_end":361,"column_start":5,"column_end":71}}]},{"kind":"Const","id":{"krate":0,"index":442},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":85802,"byte_end":85809,"line_start":379,"line_end":379,"column_start":15,"column_end":22},"name":"MIN_UTC","qualname":"::datetime::DateTime::<Tz>::MIN_UTC","value":"DateTime<Utc>","parent":{"krate":0,"index":417},"children":[],"decl_id":null,"docs":" The minimum possible `DateTime<Utc>`.\n","sig":null,"attributes":[{"value":"/ The minimum possible `DateTime<Utc>`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":85746,"byte_end":85787,"line_start":378,"line_end":378,"column_start":5,"column_end":46}}]},{"kind":"Const","id":{"krate":0,"index":443},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":85943,"byte_end":85950,"line_start":381,"line_end":381,"column_start":15,"column_end":22},"name":"MAX_UTC","qualname":"::datetime::DateTime::<Tz>::MAX_UTC","value":"DateTime<Utc>","parent":{"krate":0,"index":417},"children":[],"decl_id":null,"docs":" The maximum possible `DateTime<Utc>`.\n","sig":null,"attributes":[{"value":"/ The maximum possible `DateTime<Utc>`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":85887,"byte_end":85928,"line_start":380,"line_end":380,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":86067,"byte_end":86074,"line_start":385,"line_end":385,"column_start":8,"column_end":15},"name":"default","qualname":"<DateTime<Utc> as core::default::Default>::default","value":"fn default() -> Self","parent":{"krate":1,"index":3241},"children":[],"decl_id":{"krate":1,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":86357,"byte_end":86364,"line_start":398,"line_end":398,"column_start":8,"column_end":15},"name":"default","qualname":"<DateTime<FixedOffset> as core::default::Default>::default","value":"fn default() -> Self","parent":{"krate":1,"index":3241},"children":[],"decl_id":{"krate":1,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":86861,"byte_end":86865,"line_start":409,"line_end":409,"column_start":8,"column_end":12},"name":"from","qualname":"<DateTime<FixedOffset> as core::convert::From>::from","value":"fn from(DateTime<Utc>) -> Self","parent":{"krate":1,"index":3169},"children":[],"decl_id":{"krate":1,"index":3171},"docs":" Convert this `DateTime<Utc>` instance into a `DateTime<FixedOffset>` instance.","sig":null,"attributes":[{"value":"/ Convert this `DateTime<Utc>` instance into a `DateTime<FixedOffset>` instance.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":86597,"byte_end":86679,"line_start":405,"line_end":405,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":86684,"byte_end":86687,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Conversion is done via [`DateTime::with_timezone`]. Note that the converted value returned by","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":86692,"byte_end":86789,"line_start":407,"line_end":407,"column_start":5,"column_end":102}},{"value":"/ this will be created with a fixed timezone offset of 0.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":86794,"byte_end":86853,"line_start":408,"line_end":408,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":87732,"byte_end":87736,"line_start":431,"line_end":431,"column_start":8,"column_end":12},"name":"from","qualname":"<DateTime<Utc> as core::convert::From>::from","value":"fn from(DateTime<FixedOffset>) -> Self","parent":{"krate":1,"index":3169},"children":[],"decl_id":{"krate":1,"index":3171},"docs":" Convert this `DateTime<FixedOffset>` instance into a `DateTime<Utc>` instance.","sig":null,"attributes":[{"value":"/ Convert this `DateTime<FixedOffset>` instance into a `DateTime<Utc>` instance.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":87521,"byte_end":87603,"line_start":427,"line_end":427,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":87608,"byte_end":87611,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ Conversion is performed via [`DateTime::with_timezone`], accounting for the timezone","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":87616,"byte_end":87704,"line_start":429,"line_end":429,"column_start":5,"column_end":93}},{"value":"/ difference.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":87709,"byte_end":87724,"line_start":430,"line_end":430,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":90192,"byte_end":90210,"line_start":494,"line_end":494,"column_start":12,"column_end":30},"name":"parse_from_rfc2822","qualname":"<DateTime<FixedOffset>>::parse_from_rfc2822","value":"fn parse_from_rfc2822<'_>(&'_ str) -> ParseResult<DateTime<FixedOffset>>","parent":null,"children":[],"decl_id":null,"docs":" Parses an RFC 2822 date and time string such as `Tue, 1 Jul 2003 10:52:37 +0200`,\n then returns a new [`DateTime`] with a parsed [`FixedOffset`].","sig":null,"attributes":[{"value":"/ Parses an RFC 2822 date and time string such as `Tue, 1 Jul 2003 10:52:37 +0200`,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":89615,"byte_end":89700,"line_start":481,"line_end":481,"column_start":5,"column_end":90}},{"value":"/ then returns a new [`DateTime`] with a parsed [`FixedOffset`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":89705,"byte_end":89771,"line_start":482,"line_end":482,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":89776,"byte_end":89779,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ RFC 2822 is the internet message standard that specifies the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":89784,"byte_end":89848,"line_start":484,"line_end":484,"column_start":5,"column_end":69}},{"value":"/ representation of times in HTTP and email headers.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":89853,"byte_end":89907,"line_start":485,"line_end":485,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":89912,"byte_end":89915,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":89920,"byte_end":89927,"line_start":487,"line_end":487,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{DateTime, FixedOffset, TimeZone};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":89932,"byte_end":89984,"line_start":488,"line_end":488,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":89989,"byte_end":90004,"line_start":489,"line_end":489,"column_start":5,"column_end":20}},{"value":"/     DateTime::parse_from_rfc2822(\"Wed, 18 Feb 2015 23:16:09 GMT\").unwrap(),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":90009,"byte_end":90088,"line_start":490,"line_end":490,"column_start":5,"column_end":84}},{"value":"/     FixedOffset::east(0).ymd(2015, 2, 18).and_hms(23, 16, 9)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":90093,"byte_end":90157,"line_start":491,"line_end":491,"column_start":5,"column_end":69}},{"value":"/ );","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":90162,"byte_end":90168,"line_start":492,"line_end":492,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":90173,"byte_end":90180,"line_start":493,"line_end":493,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":90831,"byte_end":90849,"line_start":506,"line_end":506,"column_start":12,"column_end":30},"name":"parse_from_rfc3339","qualname":"<DateTime<FixedOffset>>::parse_from_rfc3339","value":"fn parse_from_rfc3339<'_>(&'_ str) -> ParseResult<DateTime<FixedOffset>>","parent":null,"children":[],"decl_id":null,"docs":" Parses an RFC 3339 and ISO 8601 date and time string such as `1996-12-19T16:39:57-08:00`,\n then returns a new [`DateTime`] with a parsed [`FixedOffset`].","sig":null,"attributes":[{"value":"/ Parses an RFC 3339 and ISO 8601 date and time string such as `1996-12-19T16:39:57-08:00`,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":90458,"byte_end":90551,"line_start":501,"line_end":501,"column_start":5,"column_end":98}},{"value":"/ then returns a new [`DateTime`] with a parsed [`FixedOffset`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":90556,"byte_end":90622,"line_start":502,"line_end":502,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":90627,"byte_end":90630,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ Why isn't this named `parse_from_iso8601`? That's because ISO 8601 allows some freedom","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":90635,"byte_end":90725,"line_start":504,"line_end":504,"column_start":5,"column_end":95}},{"value":"/ over the syntax and RFC 3339 exercises that freedom to rigidly define a fixed format.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":90730,"byte_end":90819,"line_start":505,"line_end":505,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":91995,"byte_end":92009,"line_start":535,"line_end":535,"column_start":12,"column_end":26},"name":"parse_from_str","qualname":"<DateTime<FixedOffset>>::parse_from_str","value":"fn parse_from_str<'_, '_>(&'_ str, &'_ str)\n-> ParseResult<DateTime<FixedOffset>>","parent":null,"children":[],"decl_id":null,"docs":" Parses a string with the specified format string and returns a new\n [`DateTime`] with a parsed [`FixedOffset`].","sig":null,"attributes":[{"value":"/ Parses a string with the specified format string and returns a new","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":91097,"byte_end":91167,"line_start":513,"line_end":513,"column_start":5,"column_end":75}},{"value":"/ [`DateTime`] with a parsed [`FixedOffset`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":91172,"byte_end":91219,"line_start":514,"line_end":514,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":91224,"byte_end":91227,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ See the [`crate::format::strftime`] module on the supported escape","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":91232,"byte_end":91302,"line_start":516,"line_end":516,"column_start":5,"column_end":75}},{"value":"/ sequences.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":91307,"byte_end":91321,"line_start":517,"line_end":517,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":91326,"byte_end":91329,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ See also [`TimeZone::datetime_from_str`] which gives a local","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":91334,"byte_end":91398,"line_start":519,"line_end":519,"column_start":5,"column_end":69}},{"value":"/ [`DateTime`] on specific time zone.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":91403,"byte_end":91442,"line_start":520,"line_end":520,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":91447,"byte_end":91450,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ Note that this method *requires a timezone* in the string. See","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":91455,"byte_end":91521,"line_start":522,"line_end":522,"column_start":5,"column_end":71}},{"value":"/ [`NaiveDateTime::parse_from_str`]","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":91526,"byte_end":91563,"line_start":523,"line_end":523,"column_start":5,"column_end":42}},{"value":"/ for a version that does not require a timezone in the to-be-parsed str.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":91568,"byte_end":91643,"line_start":524,"line_end":524,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":91648,"byte_end":91651,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":91656,"byte_end":91669,"line_start":526,"line_end":526,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":91674,"byte_end":91677,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":91682,"byte_end":91693,"line_start":528,"line_end":528,"column_start":5,"column_end":16}},{"value":"/ use chrono::{DateTime, FixedOffset, TimeZone};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":91698,"byte_end":91748,"line_start":529,"line_end":529,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":91753,"byte_end":91756,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ let dt = DateTime::parse_from_str(","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":91761,"byte_end":91799,"line_start":531,"line_end":531,"column_start":5,"column_end":43}},{"value":"/     \"1983 Apr 13 12:09:14.274 +0000\", \"%Y %b %d %H:%M:%S%.3f %z\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":91804,"byte_end":91874,"line_start":532,"line_end":532,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(dt, Ok(FixedOffset::east(0).ymd(1983, 4, 13).and_hms_milli(12, 9, 14, 274)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":91879,"byte_end":91971,"line_start":533,"line_end":533,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":91976,"byte_end":91983,"line_start":534,"line_end":534,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":97911,"byte_end":97915,"line_start":697,"line_end":697,"column_start":8,"column_end":12},"name":"year","qualname":"<DateTime<Tz> as traits::Datelike>::year","value":"fn year<'_>(&'_ Self) -> i32","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":1987},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":97894,"byte_end":97903,"line_start":696,"line_end":696,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":97993,"byte_end":97998,"line_start":701,"line_end":701,"column_start":8,"column_end":13},"name":"month","qualname":"<DateTime<Tz> as traits::Datelike>::month","value":"fn month<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":1989},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":97976,"byte_end":97985,"line_start":700,"line_end":700,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":98077,"byte_end":98083,"line_start":705,"line_end":705,"column_start":8,"column_end":14},"name":"month0","qualname":"<DateTime<Tz> as traits::Datelike>::month0","value":"fn month0<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":1990},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":98060,"byte_end":98069,"line_start":704,"line_end":704,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":98163,"byte_end":98166,"line_start":709,"line_end":709,"column_start":8,"column_end":11},"name":"day","qualname":"<DateTime<Tz> as traits::Datelike>::day","value":"fn day<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":1991},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":98146,"byte_end":98155,"line_start":708,"line_end":708,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":98243,"byte_end":98247,"line_start":713,"line_end":713,"column_start":8,"column_end":12},"name":"day0","qualname":"<DateTime<Tz> as traits::Datelike>::day0","value":"fn day0<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":1992},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":98226,"byte_end":98235,"line_start":712,"line_end":712,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":98325,"byte_end":98332,"line_start":717,"line_end":717,"column_start":8,"column_end":15},"name":"ordinal","qualname":"<DateTime<Tz> as traits::Datelike>::ordinal","value":"fn ordinal<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":1993},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":98308,"byte_end":98317,"line_start":716,"line_end":716,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":98413,"byte_end":98421,"line_start":721,"line_end":721,"column_start":8,"column_end":16},"name":"ordinal0","qualname":"<DateTime<Tz> as traits::Datelike>::ordinal0","value":"fn ordinal0<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":1994},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":98396,"byte_end":98405,"line_start":720,"line_end":720,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":98503,"byte_end":98510,"line_start":725,"line_end":725,"column_start":8,"column_end":15},"name":"weekday","qualname":"<DateTime<Tz> as traits::Datelike>::weekday","value":"fn weekday<'_>(&'_ Self) -> Weekday","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":1995},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":98486,"byte_end":98495,"line_start":724,"line_end":724,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":98595,"byte_end":98603,"line_start":729,"line_end":729,"column_start":8,"column_end":16},"name":"iso_week","qualname":"<DateTime<Tz> as traits::Datelike>::iso_week","value":"fn iso_week<'_>(&'_ Self) -> IsoWeek","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":1996},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":98578,"byte_end":98587,"line_start":728,"line_end":728,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":98690,"byte_end":98699,"line_start":734,"line_end":734,"column_start":8,"column_end":17},"name":"with_year","qualname":"<DateTime<Tz> as traits::Datelike>::with_year","value":"fn with_year<'_>(&'_ Self, i32) -> Option<DateTime<Tz>>","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":1997},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":98673,"byte_end":98682,"line_start":733,"line_end":733,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":98833,"byte_end":98843,"line_start":739,"line_end":739,"column_start":8,"column_end":18},"name":"with_month","qualname":"<DateTime<Tz> as traits::Datelike>::with_month","value":"fn with_month<'_>(&'_ Self, u32) -> Option<DateTime<Tz>>","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":1998},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":98816,"byte_end":98825,"line_start":738,"line_end":738,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":98980,"byte_end":98991,"line_start":744,"line_end":744,"column_start":8,"column_end":19},"name":"with_month0","qualname":"<DateTime<Tz> as traits::Datelike>::with_month0","value":"fn with_month0<'_>(&'_ Self, u32) -> Option<DateTime<Tz>>","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":1999},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":98963,"byte_end":98972,"line_start":743,"line_end":743,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":99131,"byte_end":99139,"line_start":749,"line_end":749,"column_start":8,"column_end":16},"name":"with_day","qualname":"<DateTime<Tz> as traits::Datelike>::with_day","value":"fn with_day<'_>(&'_ Self, u32) -> Option<DateTime<Tz>>","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":2000},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":99114,"byte_end":99123,"line_start":748,"line_end":748,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":99270,"byte_end":99279,"line_start":754,"line_end":754,"column_start":8,"column_end":17},"name":"with_day0","qualname":"<DateTime<Tz> as traits::Datelike>::with_day0","value":"fn with_day0<'_>(&'_ Self, u32) -> Option<DateTime<Tz>>","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":2001},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":99253,"byte_end":99262,"line_start":753,"line_end":753,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":99413,"byte_end":99425,"line_start":759,"line_end":759,"column_start":8,"column_end":20},"name":"with_ordinal","qualname":"<DateTime<Tz> as traits::Datelike>::with_ordinal","value":"fn with_ordinal<'_>(&'_ Self, u32) -> Option<DateTime<Tz>>","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":2002},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":99396,"byte_end":99405,"line_start":758,"line_end":758,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":487},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":99568,"byte_end":99581,"line_start":764,"line_end":764,"column_start":8,"column_end":21},"name":"with_ordinal0","qualname":"<DateTime<Tz> as traits::Datelike>::with_ordinal0","value":"fn with_ordinal0<'_>(&'_ Self, u32) -> Option<DateTime<Tz>>","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":2003},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":99551,"byte_end":99560,"line_start":763,"line_end":763,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":99776,"byte_end":99780,"line_start":771,"line_end":771,"column_start":8,"column_end":12},"name":"hour","qualname":"<DateTime<Tz> as traits::Timelike>::hour","value":"fn hour<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":2005},"children":[],"decl_id":{"krate":0,"index":2006},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":99759,"byte_end":99768,"line_start":770,"line_end":770,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":99858,"byte_end":99864,"line_start":775,"line_end":775,"column_start":8,"column_end":14},"name":"minute","qualname":"<DateTime<Tz> as traits::Timelike>::minute","value":"fn minute<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":2005},"children":[],"decl_id":{"krate":0,"index":2008},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":99841,"byte_end":99850,"line_start":774,"line_end":774,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":99944,"byte_end":99950,"line_start":779,"line_end":779,"column_start":8,"column_end":14},"name":"second","qualname":"<DateTime<Tz> as traits::Timelike>::second","value":"fn second<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":2005},"children":[],"decl_id":{"krate":0,"index":2009},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":99927,"byte_end":99936,"line_start":778,"line_end":778,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":100030,"byte_end":100040,"line_start":783,"line_end":783,"column_start":8,"column_end":18},"name":"nanosecond","qualname":"<DateTime<Tz> as traits::Timelike>::nanosecond","value":"fn nanosecond<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":2005},"children":[],"decl_id":{"krate":0,"index":2010},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":100013,"byte_end":100022,"line_start":782,"line_end":782,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":100125,"byte_end":100134,"line_start":788,"line_end":788,"column_start":8,"column_end":17},"name":"with_hour","qualname":"<DateTime<Tz> as traits::Timelike>::with_hour","value":"fn with_hour<'_>(&'_ Self, u32) -> Option<DateTime<Tz>>","parent":{"krate":0,"index":2005},"children":[],"decl_id":{"krate":0,"index":2011},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":100108,"byte_end":100117,"line_start":787,"line_end":787,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":497},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":100268,"byte_end":100279,"line_start":793,"line_end":793,"column_start":8,"column_end":19},"name":"with_minute","qualname":"<DateTime<Tz> as traits::Timelike>::with_minute","value":"fn with_minute<'_>(&'_ Self, u32) -> Option<DateTime<Tz>>","parent":{"krate":0,"index":2005},"children":[],"decl_id":{"krate":0,"index":2012},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":100251,"byte_end":100260,"line_start":792,"line_end":792,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":100413,"byte_end":100424,"line_start":798,"line_end":798,"column_start":8,"column_end":19},"name":"with_second","qualname":"<DateTime<Tz> as traits::Timelike>::with_second","value":"fn with_second<'_>(&'_ Self, u32) -> Option<DateTime<Tz>>","parent":{"krate":0,"index":2005},"children":[],"decl_id":{"krate":0,"index":2013},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":100396,"byte_end":100405,"line_start":797,"line_end":797,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":501},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":100558,"byte_end":100573,"line_start":803,"line_end":803,"column_start":8,"column_end":23},"name":"with_nanosecond","qualname":"<DateTime<Tz> as traits::Timelike>::with_nanosecond","value":"fn with_nanosecond<'_>(&'_ Self, u32) -> Option<DateTime<Tz>>","parent":{"krate":0,"index":2005},"children":[],"decl_id":{"krate":0,"index":2014},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":100541,"byte_end":100550,"line_start":802,"line_end":802,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":101015,"byte_end":101017,"line_start":813,"line_end":813,"column_start":8,"column_end":10},"name":"eq","qualname":"<DateTime<Tz> as core::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ DateTime<Tz2>) -> bool","parent":{"krate":1,"index":2915},"children":[],"decl_id":{"krate":1,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":101810,"byte_end":101821,"line_start":836,"line_end":836,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<DateTime<Tz> as core::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ DateTime<Tz2>) -> Option<Ordering>","parent":{"krate":1,"index":2961},"children":[],"decl_id":{"krate":1,"index":2963},"docs":" Compare two DateTimes based on their true time, ignoring time zones","sig":null,"attributes":[{"value":"/ Compare two DateTimes based on their true time, ignoring time zones","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":101233,"byte_end":101304,"line_start":821,"line_end":821,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":101309,"byte_end":101312,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":101317,"byte_end":101330,"line_start":823,"line_end":823,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":101335,"byte_end":101338,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":101343,"byte_end":101350,"line_start":825,"line_end":825,"column_start":5,"column_end":12}},{"value":"/ use chrono::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":101355,"byte_end":101382,"line_start":826,"line_end":826,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":101387,"byte_end":101390,"line_start":827,"line_end":827,"column_start":5,"column_end":8}},{"value":"/ let earlier = Utc.ymd(2015, 5, 15).and_hms(2, 0, 0).with_timezone(&FixedOffset::west(1 * 3600));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":101395,"byte_end":101495,"line_start":828,"line_end":828,"column_start":5,"column_end":105}},{"value":"/ let later   = Utc.ymd(2015, 5, 15).and_hms(3, 0, 0).with_timezone(&FixedOffset::west(5 * 3600));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":101500,"byte_end":101600,"line_start":829,"line_end":829,"column_start":5,"column_end":105}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":101605,"byte_end":101608,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(earlier.to_string(), \"2015-05-15 01:00:00 -01:00\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":101613,"byte_end":101679,"line_start":831,"line_end":831,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(later.to_string(), \"2015-05-14 22:00:00 -05:00\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":101684,"byte_end":101748,"line_start":832,"line_end":832,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":101753,"byte_end":101756,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ assert!(later > earlier);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":101761,"byte_end":101790,"line_start":834,"line_end":834,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":101795,"byte_end":101802,"line_start":835,"line_end":835,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":101983,"byte_end":101986,"line_start":842,"line_end":842,"column_start":8,"column_end":11},"name":"cmp","qualname":"<DateTime<Tz> as core::cmp::Ord>::cmp","value":"fn cmp<'_, '_>(&'_ Self, &'_ DateTime<Tz>) -> Ordering","parent":{"krate":1,"index":2951},"children":[],"decl_id":{"krate":1,"index":2952},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":102138,"byte_end":102142,"line_start":848,"line_end":848,"column_start":8,"column_end":12},"name":"hash","qualname":"<DateTime<Tz> as core::hash::Hash>::hash","value":"fn hash<H, '_, '_>(&'_ Self, &'_ mut H) where H: hash::Hasher","parent":{"krate":1,"index":10526},"children":[],"decl_id":{"krate":1,"index":10527},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":527},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":102336,"byte_end":102339,"line_start":857,"line_end":857,"column_start":8,"column_end":11},"name":"add","qualname":"<DateTime<Tz> as core::ops::Add>::add","value":"fn add(Self, OldDuration) -> DateTime<Tz>","parent":{"krate":1,"index":3331},"children":[],"decl_id":{"krate":1,"index":3334},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":102319,"byte_end":102328,"line_start":856,"line_end":856,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":102553,"byte_end":102563,"line_start":864,"line_end":864,"column_start":8,"column_end":18},"name":"add_assign","qualname":"<DateTime<Tz> as core::ops::AddAssign>::add_assign","value":"fn add_assign<'_>(&'_ mut Self, OldDuration)","parent":{"krate":1,"index":3362},"children":[],"decl_id":{"krate":1,"index":3364},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":102536,"byte_end":102545,"line_start":863,"line_end":863,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":102913,"byte_end":102916,"line_start":876,"line_end":876,"column_start":8,"column_end":11},"name":"sub","qualname":"<DateTime<Tz> as core::ops::Sub>::sub","value":"fn sub(Self, OldDuration) -> DateTime<Tz>","parent":{"krate":1,"index":3336},"children":[],"decl_id":{"krate":1,"index":3339},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":102896,"byte_end":102905,"line_start":875,"line_end":875,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":103130,"byte_end":103140,"line_start":883,"line_end":883,"column_start":8,"column_end":18},"name":"sub_assign","qualname":"<DateTime<Tz> as core::ops::SubAssign>::sub_assign","value":"fn sub_assign<'_>(&'_ mut Self, OldDuration)","parent":{"krate":1,"index":3366},"children":[],"decl_id":{"krate":1,"index":3368},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":103113,"byte_end":103122,"line_start":882,"line_end":882,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":103489,"byte_end":103492,"line_start":895,"line_end":895,"column_start":8,"column_end":11},"name":"sub","qualname":"<DateTime<Tz> as core::ops::Sub>::sub","value":"fn sub(Self, DateTime<Tz>) -> OldDuration","parent":{"krate":1,"index":3336},"children":[],"decl_id":{"krate":1,"index":3339},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":103472,"byte_end":103481,"line_start":894,"line_end":894,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":103640,"byte_end":103643,"line_start":901,"line_end":901,"column_start":8,"column_end":11},"name":"fmt","qualname":"<DateTime<Tz> as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10288},"children":[],"decl_id":{"krate":1,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":103858,"byte_end":103861,"line_start":910,"line_end":910,"column_start":8,"column_end":11},"name":"fmt","qualname":"<DateTime<Tz> as core::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":104492,"byte_end":104500,"line_start":929,"line_end":929,"column_start":8,"column_end":16},"name":"from_str","qualname":"<DateTime<Utc> as core::str::FromStr>::from_str","value":"fn from_str<'_>(&'_ str) -> ParseResult<DateTime<Utc>>","parent":{"krate":1,"index":12989},"children":[],"decl_id":{"krate":1,"index":12991},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":565},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"format","qualname":"::format","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","parent":null,"children":[{"krate":0,"index":566},{"krate":0,"index":569},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":576},{"krate":0,"index":579},{"krate":0,"index":582},{"krate":0,"index":585},{"krate":0,"index":588},{"krate":0,"index":591},{"krate":0,"index":2095},{"krate":0,"index":2097},{"krate":0,"index":2099},{"krate":0,"index":2100},{"krate":0,"index":2102},{"krate":0,"index":2103},{"krate":0,"index":2105},{"krate":0,"index":2106},{"krate":0,"index":2108},{"krate":0,"index":2115},{"krate":0,"index":2116},{"krate":0,"index":2118},{"krate":0,"index":2119},{"krate":0,"index":2121},{"krate":0,"index":2122},{"krate":0,"index":2124},{"krate":0,"index":2126},{"krate":0,"index":2170},{"krate":0,"index":2172},{"krate":0,"index":2173},{"krate":0,"index":2176},{"krate":0,"index":2177},{"krate":0,"index":2179},{"krate":0,"index":594},{"krate":0,"index":596},{"krate":0,"index":598},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":2181},{"krate":0,"index":2219},{"krate":0,"index":2221},{"krate":0,"index":2222},{"krate":0,"index":2225},{"krate":0,"index":2226},{"krate":0,"index":2228},{"krate":0,"index":2230},{"krate":0,"index":2232},{"krate":0,"index":2234},{"krate":0,"index":2236},{"krate":0,"index":2237},{"krate":0,"index":2240},{"krate":0,"index":2241},{"krate":0,"index":2243},{"krate":0,"index":2252},{"krate":0,"index":2254},{"krate":0,"index":2256},{"krate":0,"index":2257},{"krate":0,"index":2259},{"krate":0,"index":2260},{"krate":0,"index":2262},{"krate":0,"index":2279},{"krate":0,"index":2282},{"krate":0,"index":2284},{"krate":0,"index":2288},{"krate":0,"index":2290},{"krate":0,"index":2293},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":2296},{"krate":0,"index":2299},{"krate":0,"index":2301},{"krate":0,"index":2303},{"krate":0,"index":2304},{"krate":0,"index":2307},{"krate":0,"index":2308},{"krate":0,"index":2310},{"krate":0,"index":610},{"krate":0,"index":2311},{"krate":0,"index":2328},{"krate":0,"index":2330},{"krate":0,"index":2332},{"krate":0,"index":2333},{"krate":0,"index":2335},{"krate":0,"index":2336},{"krate":0,"index":2338},{"krate":0,"index":612},{"krate":0,"index":614},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":732},{"krate":0,"index":847},{"krate":0,"index":913},{"krate":0,"index":954},{"krate":0,"index":957}],"decl_id":null,"docs":" Formatting (and parsing) utilities for date and time.","sig":null,"attributes":[{"value":"/ Formatting (and parsing) utilities for date and time.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":112366,"byte_end":112423,"line_start":4,"line_end":4,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":112424,"byte_end":112427,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module provides the common types and routines to implement,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":112428,"byte_end":112496,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"/ for example, [`DateTime::format`](../struct.DateTime.html#method.format) or","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":112497,"byte_end":112576,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ [`DateTime::parse_from_str`](../struct.DateTime.html#method.parse_from_str) methods.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":112577,"byte_end":112665,"line_start":8,"line_end":8,"column_start":1,"column_end":89}},{"value":"/ For most cases you should use these high-level interfaces.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":112666,"byte_end":112728,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":112729,"byte_end":112732,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Internally the formatting and parsing shares the same abstract **formatting items**,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":112733,"byte_end":112821,"line_start":11,"line_end":11,"column_start":1,"column_end":89}},{"value":"/ which are just an [`Iterator`](https://doc.rust-lang.org/std/iter/trait.Iterator.html) of","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":112822,"byte_end":112915,"line_start":12,"line_end":12,"column_start":1,"column_end":94}},{"value":"/ the [`Item`](./enum.Item.html) type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":112916,"byte_end":112956,"line_start":13,"line_end":13,"column_start":1,"column_end":41}},{"value":"/ They are generated from more readable **format strings**;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":112957,"byte_end":113018,"line_start":14,"line_end":14,"column_start":1,"column_end":62}},{"value":"/ currently Chrono supports a built-in syntax closely resembling","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":113019,"byte_end":113085,"line_start":15,"line_end":15,"column_start":1,"column_end":67}},{"value":"/ C's `strftime` format. The available options can be found [here](./strftime/index.html).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":113086,"byte_end":113178,"line_start":16,"line_end":16,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":113179,"byte_end":113182,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":113183,"byte_end":113196,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":113197,"byte_end":113208,"line_start":19,"line_end":19,"column_start":1,"column_end":12}},{"value":"/ # use std::error::Error;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":113209,"byte_end":113237,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"/ use chrono::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":113238,"byte_end":113265,"line_start":21,"line_end":21,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":113266,"byte_end":113269,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let date_time = Utc.ymd(2020, 11, 10).and_hms(0, 1, 32);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":113270,"byte_end":113330,"line_start":23,"line_end":23,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":113331,"byte_end":113334,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let formatted = format!(\"{}\", date_time.format(\"%Y-%m-%d %H:%M:%S\"));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":113335,"byte_end":113408,"line_start":25,"line_end":25,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(formatted, \"2020-11-10 00:01:32\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":113409,"byte_end":113458,"line_start":26,"line_end":26,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":113459,"byte_end":113462,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let parsed = Utc.datetime_from_str(&formatted, \"%Y-%m-%d %H:%M:%S\")?;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":113463,"byte_end":113536,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(parsed, date_time);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":113537,"byte_end":113571,"line_start":29,"line_end":29,"column_start":1,"column_end":35}},{"value":"/ # Ok::<(), chrono::ParseError>(())","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":113572,"byte_end":113610,"line_start":30,"line_end":30,"column_start":1,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":113611,"byte_end":113618,"line_start":31,"line_end":31,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2109},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":114861,"byte_end":114865,"line_start":77,"line_end":77,"column_start":5,"column_end":9},"name":"None","qualname":"::format::Pad::None","value":"Pad::None","parent":{"krate":0,"index":2108},"children":[],"decl_id":null,"docs":" No padding.\n","sig":null,"attributes":[{"value":"/ No padding.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":114841,"byte_end":114856,"line_start":76,"line_end":76,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2111},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":114899,"byte_end":114903,"line_start":79,"line_end":79,"column_start":5,"column_end":9},"name":"Zero","qualname":"::format::Pad::Zero","value":"Pad::Zero","parent":{"krate":0,"index":2108},"children":[],"decl_id":null,"docs":" Zero (`0`) padding.\n","sig":null,"attributes":[{"value":"/ Zero (`0`) padding.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":114871,"byte_end":114894,"line_start":78,"line_end":78,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2113},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":114932,"byte_end":114937,"line_start":81,"line_end":81,"column_start":5,"column_end":10},"name":"Space","qualname":"::format::Pad::Space","value":"Pad::Space","parent":{"krate":0,"index":2108},"children":[],"decl_id":null,"docs":" Space padding.\n","sig":null,"attributes":[{"value":"/ Space padding.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":114909,"byte_end":114927,"line_start":80,"line_end":80,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":2108},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":114831,"byte_end":114834,"line_start":75,"line_end":75,"column_start":10,"column_end":13},"name":"Pad","qualname":"::format::Pad","value":"enum Pad { None, Zero, Space, }","parent":null,"children":[{"krate":0,"index":2109},{"krate":0,"index":2111},{"krate":0,"index":2113}],"decl_id":null,"docs":" Padding characters for numeric items.\n","sig":null,"attributes":[{"value":"/ Padding characters for numeric items.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":114735,"byte_end":114776,"line_start":73,"line_end":73,"column_start":1,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2127},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":115833,"byte_end":115837,"line_start":101,"line_end":101,"column_start":5,"column_end":9},"name":"Year","qualname":"::format::Numeric::Year","value":"Numeric::Year","parent":{"krate":0,"index":2126},"children":[],"decl_id":null,"docs":" Full Gregorian year (FW=4, PW=∞).\n May accept years before 1 BCE or after 9999 CE, given an initial sign.\n","sig":null,"attributes":[{"value":"/ Full Gregorian year (FW=4, PW=∞).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":115710,"byte_end":115749,"line_start":99,"line_end":99,"column_start":5,"column_end":42}},{"value":"/ May accept years before 1 BCE or after 9999 CE, given an initial sign.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":115754,"byte_end":115828,"line_start":100,"line_end":100,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2129},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":115939,"byte_end":115949,"line_start":103,"line_end":103,"column_start":5,"column_end":15},"name":"YearDiv100","qualname":"::format::Numeric::YearDiv100","value":"Numeric::YearDiv100","parent":{"krate":0,"index":2126},"children":[],"decl_id":null,"docs":" Gregorian year divided by 100 (century number; FW=PW=2). Implies the non-negative year.\n","sig":null,"attributes":[{"value":"/ Gregorian year divided by 100 (century number; FW=PW=2). Implies the non-negative year.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":115843,"byte_end":115934,"line_start":102,"line_end":102,"column_start":5,"column_end":96}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2131},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":116020,"byte_end":116030,"line_start":105,"line_end":105,"column_start":5,"column_end":15},"name":"YearMod100","qualname":"::format::Numeric::YearMod100","value":"Numeric::YearMod100","parent":{"krate":0,"index":2126},"children":[],"decl_id":null,"docs":" Gregorian year modulo 100 (FW=PW=2). Cannot be negative.\n","sig":null,"attributes":[{"value":"/ Gregorian year modulo 100 (FW=PW=2). Cannot be negative.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":115955,"byte_end":116015,"line_start":104,"line_end":104,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2133},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":116165,"byte_end":116172,"line_start":108,"line_end":108,"column_start":5,"column_end":12},"name":"IsoYear","qualname":"::format::Numeric::IsoYear","value":"Numeric::IsoYear","parent":{"krate":0,"index":2126},"children":[],"decl_id":null,"docs":" Year in the ISO week date (FW=4, PW=∞).\n May accept years before 1 BCE or after 9999 CE, given an initial sign.\n","sig":null,"attributes":[{"value":"/ Year in the ISO week date (FW=4, PW=∞).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":116036,"byte_end":116081,"line_start":106,"line_end":106,"column_start":5,"column_end":48}},{"value":"/ May accept years before 1 BCE or after 9999 CE, given an initial sign.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":116086,"byte_end":116160,"line_start":107,"line_end":107,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2135},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":116270,"byte_end":116283,"line_start":110,"line_end":110,"column_start":5,"column_end":18},"name":"IsoYearDiv100","qualname":"::format::Numeric::IsoYearDiv100","value":"Numeric::IsoYearDiv100","parent":{"krate":0,"index":2126},"children":[],"decl_id":null,"docs":" Year in the ISO week date, divided by 100 (FW=PW=2). Implies the non-negative year.\n","sig":null,"attributes":[{"value":"/ Year in the ISO week date, divided by 100 (FW=PW=2). Implies the non-negative year.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":116178,"byte_end":116265,"line_start":109,"line_end":109,"column_start":5,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2137},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":116366,"byte_end":116379,"line_start":112,"line_end":112,"column_start":5,"column_end":18},"name":"IsoYearMod100","qualname":"::format::Numeric::IsoYearMod100","value":"Numeric::IsoYearMod100","parent":{"krate":0,"index":2126},"children":[],"decl_id":null,"docs":" Year in the ISO week date, modulo 100 (FW=PW=2). Cannot be negative.\n","sig":null,"attributes":[{"value":"/ Year in the ISO week date, modulo 100 (FW=PW=2). Cannot be negative.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":116289,"byte_end":116361,"line_start":111,"line_end":111,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2139},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":116410,"byte_end":116415,"line_start":114,"line_end":114,"column_start":5,"column_end":10},"name":"Month","qualname":"::format::Numeric::Month","value":"Numeric::Month","parent":{"krate":0,"index":2126},"children":[],"decl_id":null,"docs":" Month (FW=PW=2).\n","sig":null,"attributes":[{"value":"/ Month (FW=PW=2).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":116385,"byte_end":116405,"line_start":113,"line_end":113,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2141},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":116457,"byte_end":116460,"line_start":116,"line_end":116,"column_start":5,"column_end":8},"name":"Day","qualname":"::format::Numeric::Day","value":"Numeric::Day","parent":{"krate":0,"index":2126},"children":[],"decl_id":null,"docs":" Day of the month (FW=PW=2).\n","sig":null,"attributes":[{"value":"/ Day of the month (FW=PW=2).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":116421,"byte_end":116452,"line_start":115,"line_end":115,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2143},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":116553,"byte_end":116564,"line_start":118,"line_end":118,"column_start":5,"column_end":16},"name":"WeekFromSun","qualname":"::format::Numeric::WeekFromSun","value":"Numeric::WeekFromSun","parent":{"krate":0,"index":2126},"children":[],"decl_id":null,"docs":" Week number, where the week 1 starts at the first Sunday of January (FW=PW=2).\n","sig":null,"attributes":[{"value":"/ Week number, where the week 1 starts at the first Sunday of January (FW=PW=2).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":116466,"byte_end":116548,"line_start":117,"line_end":117,"column_start":5,"column_end":87}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2145},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":116657,"byte_end":116668,"line_start":120,"line_end":120,"column_start":5,"column_end":16},"name":"WeekFromMon","qualname":"::format::Numeric::WeekFromMon","value":"Numeric::WeekFromMon","parent":{"krate":0,"index":2126},"children":[],"decl_id":null,"docs":" Week number, where the week 1 starts at the first Monday of January (FW=PW=2).\n","sig":null,"attributes":[{"value":"/ Week number, where the week 1 starts at the first Monday of January (FW=PW=2).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":116570,"byte_end":116652,"line_start":119,"line_end":119,"column_start":5,"column_end":87}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2147},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":116726,"byte_end":116733,"line_start":122,"line_end":122,"column_start":5,"column_end":12},"name":"IsoWeek","qualname":"::format::Numeric::IsoWeek","value":"Numeric::IsoWeek","parent":{"krate":0,"index":2126},"children":[],"decl_id":null,"docs":" Week number in the ISO week date (FW=PW=2).\n","sig":null,"attributes":[{"value":"/ Week number in the ISO week date (FW=PW=2).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":116674,"byte_end":116721,"line_start":121,"line_end":121,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2149},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":116809,"byte_end":116823,"line_start":124,"line_end":124,"column_start":5,"column_end":19},"name":"NumDaysFromSun","qualname":"::format::Numeric::NumDaysFromSun","value":"Numeric::NumDaysFromSun","parent":{"krate":0,"index":2126},"children":[],"decl_id":null,"docs":" Day of the week, where Sunday = 0 and Saturday = 6 (FW=PW=1).\n","sig":null,"attributes":[{"value":"/ Day of the week, where Sunday = 0 and Saturday = 6 (FW=PW=1).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":116739,"byte_end":116804,"line_start":123,"line_end":123,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2151},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":116897,"byte_end":116911,"line_start":126,"line_end":126,"column_start":5,"column_end":19},"name":"WeekdayFromMon","qualname":"::format::Numeric::WeekdayFromMon","value":"Numeric::WeekdayFromMon","parent":{"krate":0,"index":2126},"children":[],"decl_id":null,"docs":" Day of the week, where Monday = 1 and Sunday = 7 (FW=PW=1).\n","sig":null,"attributes":[{"value":"/ Day of the week, where Monday = 1 and Sunday = 7 (FW=PW=1).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":116829,"byte_end":116892,"line_start":125,"line_end":125,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2153},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":116952,"byte_end":116959,"line_start":128,"line_end":128,"column_start":5,"column_end":12},"name":"Ordinal","qualname":"::format::Numeric::Ordinal","value":"Numeric::Ordinal","parent":{"krate":0,"index":2126},"children":[],"decl_id":null,"docs":" Day of the year (FW=PW=3).\n","sig":null,"attributes":[{"value":"/ Day of the year (FW=PW=3).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":116917,"byte_end":116947,"line_start":127,"line_end":127,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2155},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":117018,"byte_end":117022,"line_start":130,"line_end":130,"column_start":5,"column_end":9},"name":"Hour","qualname":"::format::Numeric::Hour","value":"Numeric::Hour","parent":{"krate":0,"index":2126},"children":[],"decl_id":null,"docs":" Hour number in the 24-hour clocks (FW=PW=2).\n","sig":null,"attributes":[{"value":"/ Hour number in the 24-hour clocks (FW=PW=2).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":116965,"byte_end":117013,"line_start":129,"line_end":129,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2157},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":117081,"byte_end":117087,"line_start":132,"line_end":132,"column_start":5,"column_end":11},"name":"Hour12","qualname":"::format::Numeric::Hour12","value":"Numeric::Hour12","parent":{"krate":0,"index":2126},"children":[],"decl_id":null,"docs":" Hour number in the 12-hour clocks (FW=PW=2).\n","sig":null,"attributes":[{"value":"/ Hour number in the 12-hour clocks (FW=PW=2).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":117028,"byte_end":117076,"line_start":131,"line_end":131,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2159},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":117160,"byte_end":117166,"line_start":134,"line_end":134,"column_start":5,"column_end":11},"name":"Minute","qualname":"::format::Numeric::Minute","value":"Numeric::Minute","parent":{"krate":0,"index":2126},"children":[],"decl_id":null,"docs":" The number of minutes since the last whole hour (FW=PW=2).\n","sig":null,"attributes":[{"value":"/ The number of minutes since the last whole hour (FW=PW=2).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":117093,"byte_end":117155,"line_start":133,"line_end":133,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2161},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":117241,"byte_end":117247,"line_start":136,"line_end":136,"column_start":5,"column_end":11},"name":"Second","qualname":"::format::Numeric::Second","value":"Numeric::Second","parent":{"krate":0,"index":2126},"children":[],"decl_id":null,"docs":" The number of seconds since the last whole minute (FW=PW=2).\n","sig":null,"attributes":[{"value":"/ The number of seconds since the last whole minute (FW=PW=2).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":117172,"byte_end":117236,"line_start":135,"line_end":135,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2163},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":117450,"byte_end":117460,"line_start":140,"line_end":140,"column_start":5,"column_end":15},"name":"Nanosecond","qualname":"::format::Numeric::Nanosecond","value":"Numeric::Nanosecond","parent":{"krate":0,"index":2126},"children":[],"decl_id":null,"docs":" The number of nanoseconds since the last whole second (FW=PW=9).\n Note that this is *not* left-aligned;\n see also [`Fixed::Nanosecond`](./enum.Fixed.html#variant.Nanosecond).\n","sig":null,"attributes":[{"value":"/ The number of nanoseconds since the last whole second (FW=PW=9).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":117253,"byte_end":117321,"line_start":137,"line_end":137,"column_start":5,"column_end":73}},{"value":"/ Note that this is *not* left-aligned;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":117326,"byte_end":117367,"line_start":138,"line_end":138,"column_start":5,"column_end":46}},{"value":"/ see also [`Fixed::Nanosecond`](./enum.Fixed.html#variant.Nanosecond).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":117372,"byte_end":117445,"line_start":139,"line_end":139,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2165},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":117640,"byte_end":117649,"line_start":143,"line_end":143,"column_start":5,"column_end":14},"name":"Timestamp","qualname":"::format::Numeric::Timestamp","value":"Numeric::Timestamp","parent":{"krate":0,"index":2126},"children":[],"decl_id":null,"docs":" The number of non-leap seconds since the midnight UTC on January 1, 1970 (FW=1, PW=∞).\n For formatting, it assumes UTC upon the absence of time zone offset.\n","sig":null,"attributes":[{"value":"/ The number of non-leap seconds since the midnight UTC on January 1, 1970 (FW=1, PW=∞).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":117466,"byte_end":117558,"line_start":141,"line_end":141,"column_start":5,"column_end":95}},{"value":"/ For formatting, it assumes UTC upon the absence of time zone offset.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":117563,"byte_end":117635,"line_start":142,"line_end":142,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2167},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":117868,"byte_end":117876,"line_start":149,"line_end":149,"column_start":5,"column_end":13},"name":"Internal","qualname":"::format::Numeric::Internal","value":"Numeric::Internal(InternalNumeric)","parent":{"krate":0,"index":2126},"children":[],"decl_id":null,"docs":" Internal uses only.","sig":null,"attributes":[{"value":"/ Internal uses only.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":117656,"byte_end":117679,"line_start":145,"line_end":145,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":117684,"byte_end":117687,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This item exists so that one can add additional internal-only formatting","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":117692,"byte_end":117768,"line_start":147,"line_end":147,"column_start":5,"column_end":81}},{"value":"/ without breaking major compatibility (as enum variants cannot be selectively private).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":117773,"byte_end":117863,"line_start":148,"line_end":148,"column_start":5,"column_end":95}}]},{"kind":"Field","id":{"krate":0,"index":2169},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":117877,"byte_end":117892,"line_start":149,"line_end":149,"column_start":14,"column_end":29},"name":"0","qualname":"::format::Numeric::Internal::0","value":"format::InternalNumeric","parent":{"krate":0,"index":2167},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2126},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":115696,"byte_end":115703,"line_start":98,"line_end":98,"column_start":10,"column_end":17},"name":"Numeric","qualname":"::format::Numeric","value":"enum Numeric {\n    Year,\n    YearDiv100,\n    YearMod100,\n    IsoYear,\n    IsoYearDiv100,\n    IsoYearMod100,\n    Month,\n    Day,\n    WeekFromSun,\n    WeekFromMon,\n    IsoWeek,\n    NumDaysFromSun,\n    WeekdayFromMon,\n    Ordinal,\n    Hour,\n    Hour12,\n    Minute,\n    Second,\n    Nanosecond,\n    Timestamp,\n    Internal(InternalNumeric),\n}","parent":null,"children":[{"krate":0,"index":2127},{"krate":0,"index":2129},{"krate":0,"index":2131},{"krate":0,"index":2133},{"krate":0,"index":2135},{"krate":0,"index":2137},{"krate":0,"index":2139},{"krate":0,"index":2141},{"krate":0,"index":2143},{"krate":0,"index":2145},{"krate":0,"index":2147},{"krate":0,"index":2149},{"krate":0,"index":2151},{"krate":0,"index":2153},{"krate":0,"index":2155},{"krate":0,"index":2157},{"krate":0,"index":2159},{"krate":0,"index":2161},{"krate":0,"index":2163},{"krate":0,"index":2165},{"krate":0,"index":2167}],"decl_id":null,"docs":" Numeric item types.\n They have associated formatting width (FW) and parsing width (PW).","sig":null,"attributes":[{"value":"/ Numeric item types.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":114942,"byte_end":114965,"line_start":84,"line_end":84,"column_start":1,"column_end":24}},{"value":"/ They have associated formatting width (FW) and parsing width (PW).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":114966,"byte_end":115036,"line_start":85,"line_end":85,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":115037,"byte_end":115040,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ The **formatting width** is the minimal width to be formatted.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":115041,"byte_end":115107,"line_start":87,"line_end":87,"column_start":1,"column_end":67}},{"value":"/ If the number is too short, and the padding is not [`Pad::None`](./enum.Pad.html#variant.None),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":115108,"byte_end":115207,"line_start":88,"line_end":88,"column_start":1,"column_end":100}},{"value":"/ then it is left-padded.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":115208,"byte_end":115235,"line_start":89,"line_end":89,"column_start":1,"column_end":28}},{"value":"/ If the number is too long or (in some cases) negative, it is printed as is.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":115236,"byte_end":115315,"line_start":90,"line_end":90,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":115316,"byte_end":115319,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ The **parsing width** is the maximal width to be scanned.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":115320,"byte_end":115381,"line_start":92,"line_end":92,"column_start":1,"column_end":62}},{"value":"/ The parser only tries to consume from one to given number of digits (greedily).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":115382,"byte_end":115465,"line_start":93,"line_end":93,"column_start":1,"column_end":84}},{"value":"/ It also trims the preceding whitespace if any.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":115466,"byte_end":115516,"line_start":94,"line_end":94,"column_start":1,"column_end":51}},{"value":"/ It cannot parse the negative number, so some date and time cannot be formatted then","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":115517,"byte_end":115604,"line_start":95,"line_end":95,"column_start":1,"column_end":88}},{"value":"/ parsed with the same formatting items.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":115605,"byte_end":115647,"line_start":96,"line_end":96,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":594},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":117984,"byte_end":117999,"line_start":153,"line_end":153,"column_start":12,"column_end":27},"name":"InternalNumeric","qualname":"::format::InternalNumeric","value":"InternalNumeric {  }","parent":null,"children":[{"krate":0,"index":595}],"decl_id":null,"docs":" An opaque type representing numeric item types for internal uses only.\n","sig":null,"attributes":[{"value":"/ An opaque type representing numeric item types for internal uses only.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":117898,"byte_end":117972,"line_start":152,"line_end":152,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":118063,"byte_end":118068,"line_start":158,"line_end":158,"column_start":8,"column_end":13},"name":"clone","qualname":"<InternalNumeric as core::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":1,"index":2882},"children":[],"decl_id":{"krate":1,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":118168,"byte_end":118170,"line_start":164,"line_end":164,"column_start":8,"column_end":10},"name":"eq","qualname":"<InternalNumeric as core::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ InternalNumeric) -> bool","parent":{"krate":1,"index":2915},"children":[],"decl_id":{"krate":1,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":118329,"byte_end":118332,"line_start":172,"line_end":172,"column_start":8,"column_end":11},"name":"fmt","qualname":"<InternalNumeric as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10288},"children":[],"decl_id":{"krate":1,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2182},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":118797,"byte_end":118811,"line_start":186,"line_end":186,"column_start":5,"column_end":19},"name":"ShortMonthName","qualname":"::format::Fixed::ShortMonthName","value":"Fixed::ShortMonthName","parent":{"krate":0,"index":2181},"children":[],"decl_id":null,"docs":" Abbreviated month names.","sig":null,"attributes":[{"value":"/ Abbreviated month names.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":118664,"byte_end":118692,"line_start":183,"line_end":183,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":118697,"byte_end":118700,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ Prints a three-letter-long name in the title case, reads the same name in any case.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":118705,"byte_end":118792,"line_start":185,"line_end":185,"column_start":5,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2184},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":118944,"byte_end":118957,"line_start":190,"line_end":190,"column_start":5,"column_end":18},"name":"LongMonthName","qualname":"::format::Fixed::LongMonthName","value":"Fixed::LongMonthName","parent":{"krate":0,"index":2181},"children":[],"decl_id":null,"docs":" Full month names.","sig":null,"attributes":[{"value":"/ Full month names.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":118817,"byte_end":118838,"line_start":187,"line_end":187,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":118843,"byte_end":118846,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ Prints a full name in the title case, reads either a short or full name in any case.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":118851,"byte_end":118939,"line_start":189,"line_end":189,"column_start":5,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2186},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":119106,"byte_end":119122,"line_start":194,"line_end":194,"column_start":5,"column_end":21},"name":"ShortWeekdayName","qualname":"::format::Fixed::ShortWeekdayName","value":"Fixed::ShortWeekdayName","parent":{"krate":0,"index":2181},"children":[],"decl_id":null,"docs":" Abbreviated day of the week names.","sig":null,"attributes":[{"value":"/ Abbreviated day of the week names.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":118963,"byte_end":119001,"line_start":191,"line_end":191,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":119006,"byte_end":119009,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ Prints a three-letter-long name in the title case, reads the same name in any case.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":119014,"byte_end":119101,"line_start":193,"line_end":193,"column_start":5,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2188},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":119265,"byte_end":119280,"line_start":198,"line_end":198,"column_start":5,"column_end":20},"name":"LongWeekdayName","qualname":"::format::Fixed::LongWeekdayName","value":"Fixed::LongWeekdayName","parent":{"krate":0,"index":2181},"children":[],"decl_id":null,"docs":" Full day of the week names.","sig":null,"attributes":[{"value":"/ Full day of the week names.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":119128,"byte_end":119159,"line_start":195,"line_end":195,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":119164,"byte_end":119167,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ Prints a full name in the title case, reads either a short or full name in any case.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":119172,"byte_end":119260,"line_start":197,"line_end":197,"column_start":5,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2190},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":119358,"byte_end":119367,"line_start":202,"line_end":202,"column_start":5,"column_end":14},"name":"LowerAmPm","qualname":"::format::Fixed::LowerAmPm","value":"Fixed::LowerAmPm","parent":{"krate":0,"index":2181},"children":[],"decl_id":null,"docs":" AM/PM.","sig":null,"attributes":[{"value":"/ AM/PM.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":119286,"byte_end":119296,"line_start":199,"line_end":199,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":119301,"byte_end":119304,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Prints in lower case, reads in any case.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":119309,"byte_end":119353,"line_start":201,"line_end":201,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2192},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":119445,"byte_end":119454,"line_start":206,"line_end":206,"column_start":5,"column_end":14},"name":"UpperAmPm","qualname":"::format::Fixed::UpperAmPm","value":"Fixed::UpperAmPm","parent":{"krate":0,"index":2181},"children":[],"decl_id":null,"docs":" AM/PM.","sig":null,"attributes":[{"value":"/ AM/PM.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":119373,"byte_end":119383,"line_start":203,"line_end":203,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":119388,"byte_end":119391,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Prints in upper case, reads in any case.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":119396,"byte_end":119440,"line_start":205,"line_end":205,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2194},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":119701,"byte_end":119711,"line_start":210,"line_end":210,"column_start":5,"column_end":15},"name":"Nanosecond","qualname":"::format::Fixed::Nanosecond","value":"Fixed::Nanosecond","parent":{"krate":0,"index":2181},"children":[],"decl_id":null,"docs":" An optional dot plus one or more digits for left-aligned nanoseconds.\n May print nothing, 3, 6 or 9 digits according to the available accuracy.\n See also [`Numeric::Nanosecond`](./enum.Numeric.html#variant.Nanosecond).\n","sig":null,"attributes":[{"value":"/ An optional dot plus one or more digits for left-aligned nanoseconds.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":119460,"byte_end":119533,"line_start":207,"line_end":207,"column_start":5,"column_end":78}},{"value":"/ May print nothing, 3, 6 or 9 digits according to the available accuracy.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":119538,"byte_end":119614,"line_start":208,"line_end":208,"column_start":5,"column_end":81}},{"value":"/ See also [`Numeric::Nanosecond`](./enum.Numeric.html#variant.Nanosecond).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":119619,"byte_end":119696,"line_start":209,"line_end":209,"column_start":5,"column_end":82}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2196},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":119801,"byte_end":119812,"line_start":212,"line_end":212,"column_start":5,"column_end":16},"name":"Nanosecond3","qualname":"::format::Fixed::Nanosecond3","value":"Fixed::Nanosecond3","parent":{"krate":0,"index":2181},"children":[],"decl_id":null,"docs":" Same as [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 3.\n","sig":null,"attributes":[{"value":"/ Same as [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 3.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":119717,"byte_end":119796,"line_start":211,"line_end":211,"column_start":5,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2198},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":119902,"byte_end":119913,"line_start":214,"line_end":214,"column_start":5,"column_end":16},"name":"Nanosecond6","qualname":"::format::Fixed::Nanosecond6","value":"Fixed::Nanosecond6","parent":{"krate":0,"index":2181},"children":[],"decl_id":null,"docs":" Same as [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 6.\n","sig":null,"attributes":[{"value":"/ Same as [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 6.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":119818,"byte_end":119897,"line_start":213,"line_end":213,"column_start":5,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2200},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":120003,"byte_end":120014,"line_start":216,"line_end":216,"column_start":5,"column_end":16},"name":"Nanosecond9","qualname":"::format::Fixed::Nanosecond9","value":"Fixed::Nanosecond9","parent":{"krate":0,"index":2181},"children":[],"decl_id":null,"docs":" Same as [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 9.\n","sig":null,"attributes":[{"value":"/ Same as [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 9.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":119919,"byte_end":119998,"line_start":215,"line_end":215,"column_start":5,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2202},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":120135,"byte_end":120147,"line_start":220,"line_end":220,"column_start":5,"column_end":17},"name":"TimezoneName","qualname":"::format::Fixed::TimezoneName","value":"Fixed::TimezoneName","parent":{"krate":0,"index":2181},"children":[],"decl_id":null,"docs":" Timezone name.","sig":null,"attributes":[{"value":"/ Timezone name.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":120020,"byte_end":120038,"line_start":217,"line_end":217,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":120043,"byte_end":120046,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ It does not support parsing, its use in the parser is an immediate failure.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":120051,"byte_end":120130,"line_start":219,"line_end":219,"column_start":5,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2204},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":120482,"byte_end":120501,"line_start":226,"line_end":226,"column_start":5,"column_end":24},"name":"TimezoneOffsetColon","qualname":"::format::Fixed::TimezoneOffsetColon","value":"Fixed::TimezoneOffsetColon","parent":{"krate":0,"index":2181},"children":[],"decl_id":null,"docs":" Offset from the local time to UTC (`+09:00` or `-04:00` or `+00:00`).","sig":null,"attributes":[{"value":"/ Offset from the local time to UTC (`+09:00` or `-04:00` or `+00:00`).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":120153,"byte_end":120226,"line_start":221,"line_end":221,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":120231,"byte_end":120234,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ In the parser, the colon can be omitted and/or surrounded with any amount of whitespace.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":120239,"byte_end":120331,"line_start":223,"line_end":223,"column_start":5,"column_end":97}},{"value":"/ The offset is limited from `-24:00` to `+24:00`,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":120336,"byte_end":120388,"line_start":224,"line_end":224,"column_start":5,"column_end":57}},{"value":"/ which is the same as [`FixedOffset`](../offset/struct.FixedOffset.html)'s range.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":120393,"byte_end":120477,"line_start":225,"line_end":225,"column_start":5,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2206},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":120893,"byte_end":120913,"line_start":233,"line_end":233,"column_start":5,"column_end":25},"name":"TimezoneOffsetColonZ","qualname":"::format::Fixed::TimezoneOffsetColonZ","value":"Fixed::TimezoneOffsetColonZ","parent":{"krate":0,"index":2181},"children":[],"decl_id":null,"docs":" Offset from the local time to UTC (`+09:00` or `-04:00` or `Z`).","sig":null,"attributes":[{"value":"/ Offset from the local time to UTC (`+09:00` or `-04:00` or `Z`).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":120507,"byte_end":120575,"line_start":227,"line_end":227,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":120580,"byte_end":120583,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ In the parser, the colon can be omitted and/or surrounded with any amount of whitespace,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":120588,"byte_end":120680,"line_start":229,"line_end":229,"column_start":5,"column_end":97}},{"value":"/ and `Z` can be either in upper case or in lower case.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":120685,"byte_end":120742,"line_start":230,"line_end":230,"column_start":5,"column_end":62}},{"value":"/ The offset is limited from `-24:00` to `+24:00`,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":120747,"byte_end":120799,"line_start":231,"line_end":231,"column_start":5,"column_end":57}},{"value":"/ which is the same as [`FixedOffset`](../offset/struct.FixedOffset.html)'s range.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":120804,"byte_end":120888,"line_start":232,"line_end":232,"column_start":5,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2208},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":121052,"byte_end":121066,"line_start":236,"line_end":236,"column_start":5,"column_end":19},"name":"TimezoneOffset","qualname":"::format::Fixed::TimezoneOffset","value":"Fixed::TimezoneOffset","parent":{"krate":0,"index":2181},"children":[],"decl_id":null,"docs":" Same as [`TimezoneOffsetColon`](#variant.TimezoneOffsetColon) but prints no colon.\n Parsing allows an optional colon.\n","sig":null,"attributes":[{"value":"/ Same as [`TimezoneOffsetColon`](#variant.TimezoneOffsetColon) but prints no colon.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":120919,"byte_end":121005,"line_start":234,"line_end":234,"column_start":5,"column_end":91}},{"value":"/ Parsing allows an optional colon.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":121010,"byte_end":121047,"line_start":235,"line_end":235,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2210},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":121207,"byte_end":121222,"line_start":239,"line_end":239,"column_start":5,"column_end":20},"name":"TimezoneOffsetZ","qualname":"::format::Fixed::TimezoneOffsetZ","value":"Fixed::TimezoneOffsetZ","parent":{"krate":0,"index":2181},"children":[],"decl_id":null,"docs":" Same as [`TimezoneOffsetColonZ`](#variant.TimezoneOffsetColonZ) but prints no colon.\n Parsing allows an optional colon.\n","sig":null,"attributes":[{"value":"/ Same as [`TimezoneOffsetColonZ`](#variant.TimezoneOffsetColonZ) but prints no colon.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":121072,"byte_end":121160,"line_start":237,"line_end":237,"column_start":5,"column_end":93}},{"value":"/ Parsing allows an optional colon.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":121165,"byte_end":121202,"line_start":238,"line_end":238,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2212},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":121315,"byte_end":121322,"line_start":241,"line_end":241,"column_start":5,"column_end":12},"name":"RFC2822","qualname":"::format::Fixed::RFC2822","value":"Fixed::RFC2822","parent":{"krate":0,"index":2181},"children":[],"decl_id":null,"docs":" RFC 2822 date and time syntax. Commonly used for email and MIME date and time.\n","sig":null,"attributes":[{"value":"/ RFC 2822 date and time syntax. Commonly used for email and MIME date and time.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":121228,"byte_end":121310,"line_start":240,"line_end":240,"column_start":5,"column_end":87}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2214},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":121378,"byte_end":121385,"line_start":243,"line_end":243,"column_start":5,"column_end":12},"name":"RFC3339","qualname":"::format::Fixed::RFC3339","value":"Fixed::RFC3339","parent":{"krate":0,"index":2181},"children":[],"decl_id":null,"docs":" RFC 3339 & ISO 8601 date and time syntax.\n","sig":null,"attributes":[{"value":"/ RFC 3339 & ISO 8601 date and time syntax.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":121328,"byte_end":121373,"line_start":242,"line_end":242,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2216},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":121604,"byte_end":121612,"line_start":249,"line_end":249,"column_start":5,"column_end":13},"name":"Internal","qualname":"::format::Fixed::Internal","value":"Fixed::Internal(InternalFixed)","parent":{"krate":0,"index":2181},"children":[],"decl_id":null,"docs":" Internal uses only.","sig":null,"attributes":[{"value":"/ Internal uses only.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":121392,"byte_end":121415,"line_start":245,"line_end":245,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":121420,"byte_end":121423,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ This item exists so that one can add additional internal-only formatting","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":121428,"byte_end":121504,"line_start":247,"line_end":247,"column_start":5,"column_end":81}},{"value":"/ without breaking major compatibility (as enum variants cannot be selectively private).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":121509,"byte_end":121599,"line_start":248,"line_end":248,"column_start":5,"column_end":95}}]},{"kind":"Field","id":{"krate":0,"index":2218},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":121613,"byte_end":121626,"line_start":249,"line_end":249,"column_start":14,"column_end":27},"name":"0","qualname":"::format::Fixed::Internal::0","value":"format::InternalFixed","parent":{"krate":0,"index":2216},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2181},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":118652,"byte_end":118657,"line_start":182,"line_end":182,"column_start":10,"column_end":15},"name":"Fixed","qualname":"::format::Fixed","value":"enum Fixed {\n    ShortMonthName,\n    LongMonthName,\n    ShortWeekdayName,\n    LongWeekdayName,\n    LowerAmPm,\n    UpperAmPm,\n    Nanosecond,\n    Nanosecond3,\n    Nanosecond6,\n    Nanosecond9,\n    TimezoneName,\n    TimezoneOffsetColon,\n    TimezoneOffsetColonZ,\n    TimezoneOffset,\n    TimezoneOffsetZ,\n    RFC2822,\n    RFC3339,\n    Internal(InternalFixed),\n}","parent":null,"children":[{"krate":0,"index":2182},{"krate":0,"index":2184},{"krate":0,"index":2186},{"krate":0,"index":2188},{"krate":0,"index":2190},{"krate":0,"index":2192},{"krate":0,"index":2194},{"krate":0,"index":2196},{"krate":0,"index":2198},{"krate":0,"index":2200},{"krate":0,"index":2202},{"krate":0,"index":2204},{"krate":0,"index":2206},{"krate":0,"index":2208},{"krate":0,"index":2210},{"krate":0,"index":2212},{"krate":0,"index":2214},{"krate":0,"index":2216}],"decl_id":null,"docs":" Fixed-format item types.","sig":null,"attributes":[{"value":"/ Fixed-format item types.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":118429,"byte_end":118457,"line_start":177,"line_end":177,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":118458,"byte_end":118461,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ They have their own rules of formatting and parsing.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":118462,"byte_end":118518,"line_start":179,"line_end":179,"column_start":1,"column_end":57}},{"value":"/ Otherwise noted, they print in the specified cases but parse case-insensitively.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":118519,"byte_end":118603,"line_start":180,"line_end":180,"column_start":1,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":2230},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":121762,"byte_end":121775,"line_start":254,"line_end":254,"column_start":12,"column_end":25},"name":"InternalFixed","qualname":"::format::InternalFixed","value":"InternalFixed {  }","parent":null,"children":[{"krate":0,"index":2231}],"decl_id":null,"docs":" An opaque type representing fixed-format item types for internal uses only.\n","sig":null,"attributes":[{"value":"/ An opaque type representing fixed-format item types for internal uses only.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":121632,"byte_end":121711,"line_start":252,"line_end":252,"column_start":1,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2264},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":122791,"byte_end":122798,"line_start":281,"line_end":281,"column_start":5,"column_end":12},"name":"Literal","qualname":"::format::Item::Literal","value":"Item::Literal(&'a str)","parent":{"krate":0,"index":2262},"children":[],"decl_id":null,"docs":" A literally printed and parsed text.\n","sig":null,"attributes":[{"value":"/ A literally printed and parsed text.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":122746,"byte_end":122786,"line_start":280,"line_end":280,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":2266},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":122799,"byte_end":122806,"line_start":281,"line_end":281,"column_start":13,"column_end":20},"name":"0","qualname":"::format::Item::Literal::0","value":"&'a str","parent":{"krate":0,"index":2264},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2267},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":123036,"byte_end":123041,"line_start":286,"line_end":286,"column_start":5,"column_end":10},"name":"Space","qualname":"::format::Item::Space","value":"Item::Space(&'a str)","parent":{"krate":0,"index":2262},"children":[],"decl_id":null,"docs":" Whitespace. Prints literally but reads zero or more whitespace.\n","sig":null,"attributes":[{"value":"/ Whitespace. Prints literally but reads zero or more whitespace.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":122964,"byte_end":123031,"line_start":285,"line_end":285,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":2269},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":123042,"byte_end":123049,"line_start":286,"line_end":286,"column_start":11,"column_end":18},"name":"0","qualname":"::format::Item::Space::0","value":"&'a str","parent":{"krate":0,"index":2267},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2270},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":123366,"byte_end":123373,"line_start":292,"line_end":292,"column_start":5,"column_end":12},"name":"Numeric","qualname":"::format::Item::Numeric","value":"Item::Numeric(Numeric, Pad)","parent":{"krate":0,"index":2262},"children":[],"decl_id":null,"docs":" Numeric item. Can be optionally padded to the maximal length (if any) when formatting;\n the parser simply ignores any padded whitespace and zeroes.\n","sig":null,"attributes":[{"value":"/ Numeric item. Can be optionally padded to the maximal length (if any) when formatting;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":123203,"byte_end":123293,"line_start":290,"line_end":290,"column_start":5,"column_end":95}},{"value":"/ the parser simply ignores any padded whitespace and zeroes.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":123298,"byte_end":123361,"line_start":291,"line_end":291,"column_start":5,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":2272},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":123374,"byte_end":123381,"line_start":292,"line_end":292,"column_start":13,"column_end":20},"name":"0","qualname":"::format::Item::Numeric::0","value":"format::Numeric","parent":{"krate":0,"index":2270},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2273},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":123383,"byte_end":123386,"line_start":292,"line_end":292,"column_start":22,"column_end":25},"name":"1","qualname":"::format::Item::Numeric::1","value":"format::Pad","parent":{"krate":0,"index":2270},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2274},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":123420,"byte_end":123425,"line_start":294,"line_end":294,"column_start":5,"column_end":10},"name":"Fixed","qualname":"::format::Item::Fixed","value":"Item::Fixed(Fixed)","parent":{"krate":0,"index":2262},"children":[],"decl_id":null,"docs":" Fixed-format item.\n","sig":null,"attributes":[{"value":"/ Fixed-format item.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":123393,"byte_end":123415,"line_start":293,"line_end":293,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":2276},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":123426,"byte_end":123431,"line_start":294,"line_end":294,"column_start":11,"column_end":16},"name":"0","qualname":"::format::Item::Fixed::0","value":"format::Fixed","parent":{"krate":0,"index":2274},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2277},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":123514,"byte_end":123519,"line_start":296,"line_end":296,"column_start":5,"column_end":10},"name":"Error","qualname":"::format::Item::Error","value":"Item::Error","parent":{"krate":0,"index":2262},"children":[],"decl_id":null,"docs":" Issues a formatting error. Used to signal an invalid format string.\n","sig":null,"attributes":[{"value":"/ Issues a formatting error. Used to signal an invalid format string.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":123438,"byte_end":123509,"line_start":295,"line_end":295,"column_start":5,"column_end":76}}]},{"kind":"Enum","id":{"krate":0,"index":2262},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":122731,"byte_end":122735,"line_start":279,"line_end":279,"column_start":10,"column_end":14},"name":"Item","qualname":"::format::Item","value":"enum Item<'a> {\n    Literal(&'a str),\n    Space(&'a str),\n    Numeric(Numeric, Pad),\n    Fixed(Fixed),\n    Error,\n}","parent":null,"children":[{"krate":0,"index":2264},{"krate":0,"index":2267},{"krate":0,"index":2270},{"krate":0,"index":2274},{"krate":0,"index":2277}],"decl_id":null,"docs":" A single formatting item. This is used for both formatting and parsing.\n","sig":null,"attributes":[{"value":"/ A single formatting item. This is used for both formatting and parsing.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":122607,"byte_end":122682,"line_start":277,"line_end":277,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2296},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":124267,"byte_end":124277,"line_start":337,"line_end":337,"column_start":12,"column_end":22},"name":"ParseError","qualname":"::format::ParseError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error from the `parse` function.\n","sig":null,"attributes":[{"value":"/ An error from the `parse` function.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":124171,"byte_end":124210,"line_start":335,"line_end":335,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":124361,"byte_end":124365,"line_start":341,"line_end":341,"column_start":12,"column_end":16},"name":"kind","qualname":"<ParseError>::kind","value":"fn kind<'_>(&'_ Self) -> ParseErrorKind","parent":null,"children":[],"decl_id":null,"docs":" The category of parse error\n","sig":null,"attributes":[{"value":"/ The category of parse error","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":124318,"byte_end":124349,"line_start":340,"line_end":340,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2312},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":124571,"byte_end":124581,"line_start":350,"line_end":350,"column_start":5,"column_end":15},"name":"OutOfRange","qualname":"::format::ParseErrorKind::OutOfRange","value":"ParseErrorKind::OutOfRange","parent":{"krate":0,"index":2311},"children":[],"decl_id":null,"docs":" Given field is out of permitted range.\n","sig":null,"attributes":[{"value":"/ Given field is out of permitted range.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":124524,"byte_end":124566,"line_start":349,"line_end":349,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2314},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":124859,"byte_end":124869,"line_start":356,"line_end":356,"column_start":5,"column_end":15},"name":"Impossible","qualname":"::format::ParseErrorKind::Impossible","value":"ParseErrorKind::Impossible","parent":{"krate":0,"index":2311},"children":[],"decl_id":null,"docs":" There is no possible date and time value with given set of fields.","sig":null,"attributes":[{"value":"/ There is no possible date and time value with given set of fields.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":124588,"byte_end":124658,"line_start":352,"line_end":352,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":124663,"byte_end":124666,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ This does not include the out-of-range conditions, which are trivially invalid.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":124671,"byte_end":124754,"line_start":354,"line_end":354,"column_start":5,"column_end":88}},{"value":"/ It includes the case that there are one or more fields that are inconsistent to each other.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":124759,"byte_end":124854,"line_start":355,"line_end":355,"column_start":5,"column_end":100}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2316},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":125235,"byte_end":125244,"line_start":363,"line_end":363,"column_start":5,"column_end":14},"name":"NotEnough","qualname":"::format::ParseErrorKind::NotEnough","value":"ParseErrorKind::NotEnough","parent":{"krate":0,"index":2311},"children":[],"decl_id":null,"docs":" Given set of fields is not enough to make a requested date and time value.","sig":null,"attributes":[{"value":"/ Given set of fields is not enough to make a requested date and time value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":124876,"byte_end":124954,"line_start":358,"line_end":358,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":124959,"byte_end":124962,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ Note that there *may* be a case that given fields constrain the possible values so much","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":124967,"byte_end":125058,"line_start":360,"line_end":360,"column_start":5,"column_end":96}},{"value":"/ that there is a unique possible value. Chrono only tries to be correct for","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":125063,"byte_end":125141,"line_start":361,"line_end":361,"column_start":5,"column_end":83}},{"value":"/ most useful sets of fields however, as such constraint solving can be expensive.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":125146,"byte_end":125230,"line_start":362,"line_end":362,"column_start":5,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2318},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":125340,"byte_end":125347,"line_start":366,"line_end":366,"column_start":5,"column_end":12},"name":"Invalid","qualname":"::format::ParseErrorKind::Invalid","value":"ParseErrorKind::Invalid","parent":{"krate":0,"index":2311},"children":[],"decl_id":null,"docs":" The input string has some invalid character sequence for given formatting items.\n","sig":null,"attributes":[{"value":"/ The input string has some invalid character sequence for given formatting items.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":125251,"byte_end":125335,"line_start":365,"line_end":365,"column_start":5,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2320},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":125407,"byte_end":125415,"line_start":369,"line_end":369,"column_start":5,"column_end":13},"name":"TooShort","qualname":"::format::ParseErrorKind::TooShort","value":"ParseErrorKind::TooShort","parent":{"krate":0,"index":2311},"children":[],"decl_id":null,"docs":" The input string has been prematurely ended.\n","sig":null,"attributes":[{"value":"/ The input string has been prematurely ended.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":125354,"byte_end":125402,"line_start":368,"line_end":368,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2322},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":125498,"byte_end":125505,"line_start":372,"line_end":372,"column_start":5,"column_end":12},"name":"TooLong","qualname":"::format::ParseErrorKind::TooLong","value":"ParseErrorKind::TooLong","parent":{"krate":0,"index":2311},"children":[],"decl_id":null,"docs":" All formatting items have been read but there is a remaining input.\n","sig":null,"attributes":[{"value":"/ All formatting items have been read but there is a remaining input.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":125422,"byte_end":125493,"line_start":371,"line_end":371,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2324},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":125610,"byte_end":125619,"line_start":375,"line_end":375,"column_start":5,"column_end":14},"name":"BadFormat","qualname":"::format::ParseErrorKind::BadFormat","value":"ParseErrorKind::BadFormat","parent":{"krate":0,"index":2311},"children":[],"decl_id":null,"docs":" There was an error on the formatting string, or there were non-supported formating items.\n","sig":null,"attributes":[{"value":"/ There was an error on the formatting string, or there were non-supported formating items.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":125512,"byte_end":125605,"line_start":374,"line_end":374,"column_start":5,"column_end":98}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2326},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":125730,"byte_end":125745,"line_start":379,"line_end":379,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::format::ParseErrorKind::__Nonexhaustive","value":"ParseErrorKind::__Nonexhaustive","parent":{"krate":0,"index":2311},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2311},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":124503,"byte_end":124517,"line_start":348,"line_end":348,"column_start":10,"column_end":24},"name":"ParseErrorKind","qualname":"::format::ParseErrorKind","value":"enum ParseErrorKind {\n    OutOfRange,\n    Impossible,\n    NotEnough,\n    Invalid,\n    TooShort,\n    TooLong,\n    BadFormat,\n    __Nonexhaustive,\n}","parent":null,"children":[{"krate":0,"index":2312},{"krate":0,"index":2314},{"krate":0,"index":2316},{"krate":0,"index":2318},{"krate":0,"index":2320},{"krate":0,"index":2322},{"krate":0,"index":2324},{"krate":0,"index":2326}],"decl_id":null,"docs":" The category of parse error\n","sig":null,"attributes":[{"value":"/ The category of parse error","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":124417,"byte_end":124448,"line_start":346,"line_end":346,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":612},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":125796,"byte_end":125807,"line_start":383,"line_end":383,"column_start":10,"column_end":21},"name":"ParseResult","qualname":"::format::ParseResult","value":"Result<T, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Same as `Result<T, ParseError>`.\n","sig":null,"attributes":[{"value":"/ Same as `Result<T, ParseError>`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":125750,"byte_end":125786,"line_start":382,"line_end":382,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":125879,"byte_end":125882,"line_start":386,"line_end":386,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ParseError as core::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2339},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":149335,"byte_end":149341,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"name":"Parsed","qualname":"::format::parsed::Parsed","value":"Parsed { year, year_div_100, year_mod_100, isoyear, isoyear_div_100, isoyear_mod_100, month, week_from_sun, week_from_mon, isoweek, weekday, ordinal, day, hour_div_12, hour_mod_12, minute, second, nanosecond, timestamp, offset }","parent":null,"children":[{"krate":0,"index":2340},{"krate":0,"index":2341},{"krate":0,"index":2342},{"krate":0,"index":2343},{"krate":0,"index":2344},{"krate":0,"index":2345},{"krate":0,"index":2346},{"krate":0,"index":2347},{"krate":0,"index":2348},{"krate":0,"index":2349},{"krate":0,"index":2350},{"krate":0,"index":2351},{"krate":0,"index":2352},{"krate":0,"index":2353},{"krate":0,"index":2354},{"krate":0,"index":2355},{"krate":0,"index":2356},{"krate":0,"index":2357},{"krate":0,"index":2358},{"krate":0,"index":2359},{"krate":0,"index":2360}],"decl_id":null,"docs":" Parsed parts of date and time. There are two classes of methods:","sig":null,"attributes":[{"value":"/ Parsed parts of date and time. There are two classes of methods:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":148843,"byte_end":148911,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":148912,"byte_end":148915,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ - `set_*` methods try to set given field(s) while checking for the consistency.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":148916,"byte_end":148999,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/   It may or may not check for the range constraint immediately (for efficiency reasons).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":149000,"byte_end":149092,"line_start":21,"line_end":21,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":149093,"byte_end":149096,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ - `to_*` methods try to make a concrete date and time value out of set fields.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":149097,"byte_end":149179,"line_start":23,"line_end":23,"column_start":1,"column_end":83}},{"value":"/   It fully checks any remaining out-of-range conditions and inconsistent/impossible fields.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":149180,"byte_end":149275,"line_start":24,"line_end":24,"column_start":1,"column_end":96}}]},{"kind":"Field","id":{"krate":0,"index":2340},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":149518,"byte_end":149522,"line_start":31,"line_end":31,"column_start":9,"column_end":13},"name":"year","qualname":"::format::parsed::Parsed::year","value":"core::option::Option<i32>","parent":{"krate":0,"index":2339},"children":[],"decl_id":null,"docs":" Year.","sig":null,"attributes":[{"value":"/ Year.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":149348,"byte_end":149357,"line_start":27,"line_end":27,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":149362,"byte_end":149365,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This can be negative unlike [`year_div_100`](#structfield.year_div_100)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":149370,"byte_end":149445,"line_start":29,"line_end":29,"column_start":5,"column_end":80}},{"value":"/ and [`year_mod_100`](#structfield.year_mod_100) fields.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":149450,"byte_end":149509,"line_start":30,"line_end":30,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":2341},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":149826,"byte_end":149838,"line_start":38,"line_end":38,"column_start":9,"column_end":21},"name":"year_div_100","qualname":"::format::parsed::Parsed::year_div_100","value":"core::option::Option<i32>","parent":{"krate":0,"index":2339},"children":[],"decl_id":null,"docs":" Year divided by 100. Implies that the year is >= 1 BCE when set.","sig":null,"attributes":[{"value":"/ Year divided by 100. Implies that the year is >= 1 BCE when set.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":149542,"byte_end":149610,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":149615,"byte_end":149618,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Due to the common usage, if this field is missing but","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":149623,"byte_end":149680,"line_start":35,"line_end":35,"column_start":5,"column_end":62}},{"value":"/ [`year_mod_100`](#structfield.year_mod_100) is present,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":149685,"byte_end":149744,"line_start":36,"line_end":36,"column_start":5,"column_end":64}},{"value":"/ it is inferred to 19 when `year_mod_100 >= 70` and 20 otherwise.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":149749,"byte_end":149817,"line_start":37,"line_end":37,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":2342},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":149931,"byte_end":149943,"line_start":41,"line_end":41,"column_start":9,"column_end":21},"name":"year_mod_100","qualname":"::format::parsed::Parsed::year_mod_100","value":"core::option::Option<i32>","parent":{"krate":0,"index":2339},"children":[],"decl_id":null,"docs":" Year modulo 100. Implies that the year is >= 1 BCE when set.\n","sig":null,"attributes":[{"value":"/ Year modulo 100. Implies that the year is >= 1 BCE when set.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":149858,"byte_end":149922,"line_start":40,"line_end":40,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":2343},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":150210,"byte_end":150217,"line_start":47,"line_end":47,"column_start":9,"column_end":16},"name":"isoyear","qualname":"::format::parsed::Parsed::isoyear","value":"core::option::Option<i32>","parent":{"krate":0,"index":2339},"children":[],"decl_id":null,"docs":" Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date).","sig":null,"attributes":[{"value":"/ Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":149963,"byte_end":150037,"line_start":43,"line_end":43,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":150042,"byte_end":150045,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ This can be negative unlike [`isoyear_div_100`](#structfield.isoyear_div_100) and","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":150050,"byte_end":150135,"line_start":45,"line_end":45,"column_start":5,"column_end":90}},{"value":"/ [`isoyear_mod_100`](#structfield.isoyear_mod_100) fields.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":150140,"byte_end":150201,"line_start":46,"line_end":46,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":2344},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":150604,"byte_end":150619,"line_start":55,"line_end":55,"column_start":9,"column_end":24},"name":"isoyear_div_100","qualname":"::format::parsed::Parsed::isoyear_div_100","value":"core::option::Option<i32>","parent":{"krate":0,"index":2339},"children":[],"decl_id":null,"docs":" Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date), divided by 100.\n Implies that the year is >= 1 BCE when set.","sig":null,"attributes":[{"value":"/ Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date), divided by 100.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":150237,"byte_end":150327,"line_start":49,"line_end":49,"column_start":5,"column_end":95}},{"value":"/ Implies that the year is >= 1 BCE when set.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":150332,"byte_end":150379,"line_start":50,"line_end":50,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":150384,"byte_end":150387,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Due to the common usage, if this field is missing but","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":150392,"byte_end":150449,"line_start":52,"line_end":52,"column_start":5,"column_end":62}},{"value":"/ [`isoyear_mod_100`](#structfield.isoyear_mod_100) is present,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":150454,"byte_end":150519,"line_start":53,"line_end":53,"column_start":5,"column_end":70}},{"value":"/ it is inferred to 19 when `isoyear_mod_100 >= 70` and 20 otherwise.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":150524,"byte_end":150595,"line_start":54,"line_end":54,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":2345},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":150786,"byte_end":150801,"line_start":59,"line_end":59,"column_start":9,"column_end":24},"name":"isoyear_mod_100","qualname":"::format::parsed::Parsed::isoyear_mod_100","value":"core::option::Option<i32>","parent":{"krate":0,"index":2339},"children":[],"decl_id":null,"docs":" Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date), modulo 100.\n Implies that the year is >= 1 BCE when set.\n","sig":null,"attributes":[{"value":"/ Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date), modulo 100.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":150639,"byte_end":150725,"line_start":57,"line_end":57,"column_start":5,"column_end":91}},{"value":"/ Implies that the year is >= 1 BCE when set.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":150730,"byte_end":150777,"line_start":58,"line_end":58,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2346},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":150848,"byte_end":150853,"line_start":62,"line_end":62,"column_start":9,"column_end":14},"name":"month","qualname":"::format::parsed::Parsed::month","value":"core::option::Option<u32>","parent":{"krate":0,"index":2339},"children":[],"decl_id":null,"docs":" Month (1--12).\n","sig":null,"attributes":[{"value":"/ Month (1--12).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":150821,"byte_end":150839,"line_start":61,"line_end":61,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":2347},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":151008,"byte_end":151021,"line_start":66,"line_end":66,"column_start":9,"column_end":22},"name":"week_from_sun","qualname":"::format::parsed::Parsed::week_from_sun","value":"core::option::Option<u32>","parent":{"krate":0,"index":2339},"children":[],"decl_id":null,"docs":" Week number, where the week 1 starts at the first Sunday of January\n (0--53, 1--53 or 1--52 depending on the year).\n","sig":null,"attributes":[{"value":"/ Week number, where the week 1 starts at the first Sunday of January","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":150873,"byte_end":150944,"line_start":64,"line_end":64,"column_start":5,"column_end":76}},{"value":"/ (0--53, 1--53 or 1--52 depending on the year).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":150949,"byte_end":150999,"line_start":65,"line_end":65,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":2348},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":151176,"byte_end":151189,"line_start":70,"line_end":70,"column_start":9,"column_end":22},"name":"week_from_mon","qualname":"::format::parsed::Parsed::week_from_mon","value":"core::option::Option<u32>","parent":{"krate":0,"index":2339},"children":[],"decl_id":null,"docs":" Week number, where the week 1 starts at the first Monday of January\n (0--53, 1--53 or 1--52 depending on the year).\n","sig":null,"attributes":[{"value":"/ Week number, where the week 1 starts at the first Monday of January","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":151041,"byte_end":151112,"line_start":68,"line_end":68,"column_start":5,"column_end":76}},{"value":"/ (0--53, 1--53 or 1--52 depending on the year).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":151117,"byte_end":151167,"line_start":69,"line_end":69,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":2349},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":151329,"byte_end":151336,"line_start":74,"line_end":74,"column_start":9,"column_end":16},"name":"isoweek","qualname":"::format::parsed::Parsed::isoweek","value":"core::option::Option<u32>","parent":{"krate":0,"index":2339},"children":[],"decl_id":null,"docs":" [ISO week number](../naive/struct.NaiveDate.html#week-date)\n (1--52 or 1--53 depending on the year).\n","sig":null,"attributes":[{"value":"/ [ISO week number](../naive/struct.NaiveDate.html#week-date)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":151209,"byte_end":151272,"line_start":72,"line_end":72,"column_start":5,"column_end":68}},{"value":"/ (1--52 or 1--53 depending on the year).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":151277,"byte_end":151320,"line_start":73,"line_end":73,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":2350},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":151385,"byte_end":151392,"line_start":77,"line_end":77,"column_start":9,"column_end":16},"name":"weekday","qualname":"::format::parsed::Parsed::weekday","value":"core::option::Option<weekday::Weekday>","parent":{"krate":0,"index":2339},"children":[],"decl_id":null,"docs":" Day of the week.\n","sig":null,"attributes":[{"value":"/ Day of the week.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":151356,"byte_end":151376,"line_start":76,"line_end":76,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":2351},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":151486,"byte_end":151493,"line_start":80,"line_end":80,"column_start":9,"column_end":16},"name":"ordinal","qualname":"::format::parsed::Parsed::ordinal","value":"core::option::Option<u32>","parent":{"krate":0,"index":2339},"children":[],"decl_id":null,"docs":" Day of the year (1--365 or 1--366 depending on the year).\n","sig":null,"attributes":[{"value":"/ Day of the year (1--365 or 1--366 depending on the year).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":151416,"byte_end":151477,"line_start":79,"line_end":79,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":2352},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":151597,"byte_end":151600,"line_start":83,"line_end":83,"column_start":9,"column_end":12},"name":"day","qualname":"::format::parsed::Parsed::day","value":"core::option::Option<u32>","parent":{"krate":0,"index":2339},"children":[],"decl_id":null,"docs":" Day of the month (1--28, 1--29, 1--30 or 1--31 depending on the month).\n","sig":null,"attributes":[{"value":"/ Day of the month (1--28, 1--29, 1--30 or 1--31 depending on the month).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":151513,"byte_end":151588,"line_start":82,"line_end":82,"column_start":5,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":2353},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":151701,"byte_end":151712,"line_start":86,"line_end":86,"column_start":9,"column_end":20},"name":"hour_div_12","qualname":"::format::parsed::Parsed::hour_div_12","value":"core::option::Option<u32>","parent":{"krate":0,"index":2339},"children":[],"decl_id":null,"docs":" Hour number divided by 12 (0--1). 0 indicates AM and 1 indicates PM.\n","sig":null,"attributes":[{"value":"/ Hour number divided by 12 (0--1). 0 indicates AM and 1 indicates PM.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":151620,"byte_end":151692,"line_start":85,"line_end":85,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":2354},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":151775,"byte_end":151786,"line_start":89,"line_end":89,"column_start":9,"column_end":20},"name":"hour_mod_12","qualname":"::format::parsed::Parsed::hour_mod_12","value":"core::option::Option<u32>","parent":{"krate":0,"index":2339},"children":[],"decl_id":null,"docs":" Hour number modulo 12 (0--11).\n","sig":null,"attributes":[{"value":"/ Hour number modulo 12 (0--11).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":151732,"byte_end":151766,"line_start":88,"line_end":88,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":2355},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":151841,"byte_end":151847,"line_start":92,"line_end":92,"column_start":9,"column_end":15},"name":"minute","qualname":"::format::parsed::Parsed::minute","value":"core::option::Option<u32>","parent":{"krate":0,"index":2339},"children":[],"decl_id":null,"docs":" Minute number (0--59).\n","sig":null,"attributes":[{"value":"/ Minute number (0--59).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":151806,"byte_end":151832,"line_start":91,"line_end":91,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":2356},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":151931,"byte_end":151937,"line_start":95,"line_end":95,"column_start":9,"column_end":15},"name":"second","qualname":"::format::parsed::Parsed::second","value":"core::option::Option<u32>","parent":{"krate":0,"index":2339},"children":[],"decl_id":null,"docs":" Second number (0--60, accounting for leap seconds).\n","sig":null,"attributes":[{"value":"/ Second number (0--60, accounting for leap seconds).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":151867,"byte_end":151922,"line_start":94,"line_end":94,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":2357},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":152036,"byte_end":152046,"line_start":98,"line_end":98,"column_start":9,"column_end":19},"name":"nanosecond","qualname":"::format::parsed::Parsed::nanosecond","value":"core::option::Option<u32>","parent":{"krate":0,"index":2339},"children":[],"decl_id":null,"docs":" The number of nanoseconds since the whole second (0--999,999,999).\n","sig":null,"attributes":[{"value":"/ The number of nanoseconds since the whole second (0--999,999,999).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":151957,"byte_end":152027,"line_start":97,"line_end":97,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":2358},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":152249,"byte_end":152258,"line_start":103,"line_end":103,"column_start":9,"column_end":18},"name":"timestamp","qualname":"::format::parsed::Parsed::timestamp","value":"core::option::Option<i64>","parent":{"krate":0,"index":2339},"children":[],"decl_id":null,"docs":" The number of non-leap seconds since the midnight UTC on January 1, 1970.","sig":null,"attributes":[{"value":"/ The number of non-leap seconds since the midnight UTC on January 1, 1970.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":152066,"byte_end":152143,"line_start":100,"line_end":100,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":152148,"byte_end":152151,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ This can be off by one if [`second`](#structfield.second) is 60 (a leap second).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":152156,"byte_end":152240,"line_start":102,"line_end":102,"column_start":5,"column_end":89}}]},{"kind":"Field","id":{"krate":0,"index":2359},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":152337,"byte_end":152343,"line_start":106,"line_end":106,"column_start":9,"column_end":15},"name":"offset","qualname":"::format::parsed::Parsed::offset","value":"core::option::Option<i32>","parent":{"krate":0,"index":2339},"children":[],"decl_id":null,"docs":" Offset from the local time to UTC, in seconds.\n","sig":null,"attributes":[{"value":"/ Offset from the local time to UTC, in seconds.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":152278,"byte_end":152328,"line_start":105,"line_end":105,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":152978,"byte_end":152981,"line_start":130,"line_end":130,"column_start":12,"column_end":15},"name":"new","qualname":"<Parsed>::new","value":"fn new() -> Parsed","parent":null,"children":[],"decl_id":null,"docs":" Returns the initial value of parsed parts.\n","sig":null,"attributes":[{"value":"/ Returns the initial value of parsed parts.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":152920,"byte_end":152966,"line_start":129,"line_end":129,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":153131,"byte_end":153139,"line_start":136,"line_end":136,"column_start":12,"column_end":20},"name":"set_year","qualname":"<Parsed>::set_year","value":"fn set_year<'_>(&'_ mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`year`](#structfield.year) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`year`](#structfield.year) field from given value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":153033,"byte_end":153105,"line_start":134,"line_end":134,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":153110,"byte_end":153119,"line_start":135,"line_end":135,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":153388,"byte_end":153404,"line_start":142,"line_end":142,"column_start":12,"column_end":28},"name":"set_year_div_100","qualname":"<Parsed>::set_year_div_100","value":"fn set_year_div_100<'_>(&'_ mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`year_div_100`](#structfield.year_div_100) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`year_div_100`](#structfield.year_div_100) field from given value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":153274,"byte_end":153362,"line_start":140,"line_end":140,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":153367,"byte_end":153376,"line_start":141,"line_end":141,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":153732,"byte_end":153748,"line_start":151,"line_end":151,"column_start":12,"column_end":28},"name":"set_year_mod_100","qualname":"<Parsed>::set_year_mod_100","value":"fn set_year_mod_100<'_>(&'_ mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`year_mod_100`](#structfield.year_mod_100) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`year_mod_100`](#structfield.year_mod_100) field from given value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":153618,"byte_end":153706,"line_start":149,"line_end":149,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":153711,"byte_end":153720,"line_start":150,"line_end":150,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":154066,"byte_end":154077,"line_start":160,"line_end":160,"column_start":12,"column_end":23},"name":"set_isoyear","qualname":"<Parsed>::set_isoyear","value":"fn set_isoyear<'_>(&'_ mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`isoyear`](#structfield.isoyear) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`isoyear`](#structfield.isoyear) field from given value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":153962,"byte_end":154040,"line_start":158,"line_end":158,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":154045,"byte_end":154054,"line_start":159,"line_end":159,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":154335,"byte_end":154354,"line_start":166,"line_end":166,"column_start":12,"column_end":31},"name":"set_isoyear_div_100","qualname":"<Parsed>::set_isoyear_div_100","value":"fn set_isoyear_div_100<'_>(&'_ mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`isoyear_div_100`](#structfield.isoyear_div_100) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`isoyear_div_100`](#structfield.isoyear_div_100) field from given value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":154215,"byte_end":154309,"line_start":164,"line_end":164,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":154314,"byte_end":154323,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":154691,"byte_end":154710,"line_start":175,"line_end":175,"column_start":12,"column_end":31},"name":"set_isoyear_mod_100","qualname":"<Parsed>::set_isoyear_mod_100","value":"fn set_isoyear_mod_100<'_>(&'_ mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`isoyear_mod_100`](#structfield.isoyear_mod_100) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`isoyear_mod_100`](#structfield.isoyear_mod_100) field from given value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":154571,"byte_end":154665,"line_start":173,"line_end":173,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":154670,"byte_end":154679,"line_start":174,"line_end":174,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":155027,"byte_end":155036,"line_start":184,"line_end":184,"column_start":12,"column_end":21},"name":"set_month","qualname":"<Parsed>::set_month","value":"fn set_month<'_>(&'_ mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`month`](#structfield.month) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`month`](#structfield.month) field from given value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":154927,"byte_end":155001,"line_start":182,"line_end":182,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":155006,"byte_end":155015,"line_start":183,"line_end":183,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":155288,"byte_end":155305,"line_start":190,"line_end":190,"column_start":12,"column_end":29},"name":"set_week_from_sun","qualname":"<Parsed>::set_week_from_sun","value":"fn set_week_from_sun<'_>(&'_ mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`week_from_sun`](#structfield.week_from_sun) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`week_from_sun`](#structfield.week_from_sun) field from given value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":155172,"byte_end":155262,"line_start":188,"line_end":188,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":155267,"byte_end":155276,"line_start":189,"line_end":189,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":155565,"byte_end":155582,"line_start":196,"line_end":196,"column_start":12,"column_end":29},"name":"set_week_from_mon","qualname":"<Parsed>::set_week_from_mon","value":"fn set_week_from_mon<'_>(&'_ mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`week_from_mon`](#structfield.week_from_mon) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`week_from_mon`](#structfield.week_from_mon) field from given value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":155449,"byte_end":155539,"line_start":194,"line_end":194,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":155544,"byte_end":155553,"line_start":195,"line_end":195,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":155830,"byte_end":155841,"line_start":202,"line_end":202,"column_start":12,"column_end":23},"name":"set_isoweek","qualname":"<Parsed>::set_isoweek","value":"fn set_isoweek<'_>(&'_ mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`isoweek`](#structfield.isoweek) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`isoweek`](#structfield.isoweek) field from given value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":155726,"byte_end":155804,"line_start":200,"line_end":200,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":155809,"byte_end":155818,"line_start":201,"line_end":201,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":156083,"byte_end":156094,"line_start":208,"line_end":208,"column_start":12,"column_end":23},"name":"set_weekday","qualname":"<Parsed>::set_weekday","value":"fn set_weekday<'_>(&'_ mut Self, Weekday) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`weekday`](#structfield.weekday) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`weekday`](#structfield.weekday) field from given value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":155979,"byte_end":156057,"line_start":206,"line_end":206,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":156062,"byte_end":156071,"line_start":207,"line_end":207,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":156310,"byte_end":156321,"line_start":214,"line_end":214,"column_start":12,"column_end":23},"name":"set_ordinal","qualname":"<Parsed>::set_ordinal","value":"fn set_ordinal<'_>(&'_ mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`ordinal`](#structfield.ordinal) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`ordinal`](#structfield.ordinal) field from given value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":156206,"byte_end":156284,"line_start":212,"line_end":212,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":156289,"byte_end":156298,"line_start":213,"line_end":213,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":156555,"byte_end":156562,"line_start":220,"line_end":220,"column_start":12,"column_end":19},"name":"set_day","qualname":"<Parsed>::set_day","value":"fn set_day<'_>(&'_ mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`day`](#structfield.day) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`day`](#structfield.day) field from given value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":156459,"byte_end":156529,"line_start":218,"line_end":218,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":156534,"byte_end":156543,"line_start":219,"line_end":219,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":156848,"byte_end":156856,"line_start":227,"line_end":227,"column_start":12,"column_end":20},"name":"set_ampm","qualname":"<Parsed>::set_ampm","value":"fn set_ampm<'_>(&'_ mut Self, bool) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`hour_div_12`](#structfield.hour_div_12) field from given value.\n (`false` for AM, `true` for PM)\n","sig":null,"attributes":[{"value":"/ Tries to set the [`hour_div_12`](#structfield.hour_div_12) field from given value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":156696,"byte_end":156782,"line_start":224,"line_end":224,"column_start":5,"column_end":91}},{"value":"/ (`false` for AM, `true` for PM)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":156787,"byte_end":156822,"line_start":225,"line_end":225,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":156827,"byte_end":156836,"line_start":226,"line_end":226,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":157133,"byte_end":157143,"line_start":234,"line_end":234,"column_start":12,"column_end":22},"name":"set_hour12","qualname":"<Parsed>::set_hour12","value":"fn set_hour12<'_>(&'_ mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`hour_mod_12`](#structfield.hour_mod_12) field from\n given hour number in 12-hour clocks.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`hour_mod_12`](#structfield.hour_mod_12) field from","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":156989,"byte_end":157062,"line_start":231,"line_end":231,"column_start":5,"column_end":78}},{"value":"/ given hour number in 12-hour clocks.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":157067,"byte_end":157107,"line_start":232,"line_end":232,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":157112,"byte_end":157121,"line_start":233,"line_end":233,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":157523,"byte_end":157531,"line_start":244,"line_end":244,"column_start":12,"column_end":20},"name":"set_hour","qualname":"<Parsed>::set_hour","value":"fn set_hour<'_>(&'_ mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set both [`hour_div_12`](#structfield.hour_div_12) and\n [`hour_mod_12`](#structfield.hour_mod_12) fields from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set both [`hour_div_12`](#structfield.hour_div_12) and","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":157355,"byte_end":157422,"line_start":241,"line_end":241,"column_start":5,"column_end":72}},{"value":"/ [`hour_mod_12`](#structfield.hour_mod_12) fields from given value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":157427,"byte_end":157497,"line_start":242,"line_end":242,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":157502,"byte_end":157511,"line_start":243,"line_end":243,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":157875,"byte_end":157885,"line_start":253,"line_end":253,"column_start":12,"column_end":22},"name":"set_minute","qualname":"<Parsed>::set_minute","value":"fn set_minute<'_>(&'_ mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`minute`](#structfield.minute) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`minute`](#structfield.minute) field from given value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":157773,"byte_end":157849,"line_start":251,"line_end":251,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":157854,"byte_end":157863,"line_start":252,"line_end":252,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":158124,"byte_end":158134,"line_start":259,"line_end":259,"column_start":12,"column_end":22},"name":"set_second","qualname":"<Parsed>::set_second","value":"fn set_second<'_>(&'_ mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`second`](#structfield.second) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`second`](#structfield.second) field from given value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":158022,"byte_end":158098,"line_start":257,"line_end":257,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":158103,"byte_end":158112,"line_start":258,"line_end":258,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":158381,"byte_end":158395,"line_start":265,"line_end":265,"column_start":12,"column_end":26},"name":"set_nanosecond","qualname":"<Parsed>::set_nanosecond","value":"fn set_nanosecond<'_>(&'_ mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`nanosecond`](#structfield.nanosecond) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`nanosecond`](#structfield.nanosecond) field from given value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":158271,"byte_end":158355,"line_start":263,"line_end":263,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":158360,"byte_end":158369,"line_start":264,"line_end":264,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":158644,"byte_end":158657,"line_start":271,"line_end":271,"column_start":12,"column_end":25},"name":"set_timestamp","qualname":"<Parsed>::set_timestamp","value":"fn set_timestamp<'_>(&'_ mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`timestamp`](#structfield.timestamp) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`timestamp`](#structfield.timestamp) field from given value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":158536,"byte_end":158618,"line_start":269,"line_end":269,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":158623,"byte_end":158632,"line_start":270,"line_end":270,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":158869,"byte_end":158879,"line_start":277,"line_end":277,"column_start":12,"column_end":22},"name":"set_offset","qualname":"<Parsed>::set_offset","value":"fn set_offset<'_>(&'_ mut Self, i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`offset`](#structfield.offset) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`offset`](#structfield.offset) field from given value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":158767,"byte_end":158843,"line_start":275,"line_end":275,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":158848,"byte_end":158857,"line_start":276,"line_end":276,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":159523,"byte_end":159536,"line_start":292,"line_end":292,"column_start":12,"column_end":25},"name":"to_naive_date","qualname":"<Parsed>::to_naive_date","value":"fn to_naive_date<'_>(&'_ Self) -> ParseResult<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed naive date out of given fields.","sig":null,"attributes":[{"value":"/ Returns a parsed naive date out of given fields.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":159016,"byte_end":159068,"line_start":281,"line_end":281,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":159073,"byte_end":159076,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ This method is able to determine the date from given subset of fields:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":159081,"byte_end":159155,"line_start":283,"line_end":283,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":159160,"byte_end":159163,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ - Year, month, day.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":159168,"byte_end":159191,"line_start":285,"line_end":285,"column_start":5,"column_end":28}},{"value":"/ - Year, day of the year (ordinal).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":159196,"byte_end":159234,"line_start":286,"line_end":286,"column_start":5,"column_end":43}},{"value":"/ - Year, week number counted from Sunday or Monday, day of the week.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":159239,"byte_end":159310,"line_start":287,"line_end":287,"column_start":5,"column_end":76}},{"value":"/ - ISO week date.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":159315,"byte_end":159335,"line_start":288,"line_end":288,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":159340,"byte_end":159343,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ Gregorian year and ISO week date year can have their century number (`*_div_100`) omitted,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":159348,"byte_end":159442,"line_start":290,"line_end":290,"column_start":5,"column_end":99}},{"value":"/ the two-digit year is used to guess the century number then.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":159447,"byte_end":159511,"line_start":291,"line_end":291,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":715},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":168855,"byte_end":168868,"line_start":500,"line_end":500,"column_start":12,"column_end":25},"name":"to_naive_time","qualname":"<Parsed>::to_naive_time","value":"fn to_naive_time<'_>(&'_ Self) -> ParseResult<NaiveTime>","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed naive time out of given fields.","sig":null,"attributes":[{"value":"/ Returns a parsed naive time out of given fields.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":168452,"byte_end":168504,"line_start":491,"line_end":491,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":168509,"byte_end":168512,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ This method is able to determine the time from given subset of fields:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":168517,"byte_end":168591,"line_start":493,"line_end":493,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":168596,"byte_end":168599,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ - Hour, minute. (second and nanosecond assumed to be 0)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":168604,"byte_end":168663,"line_start":495,"line_end":495,"column_start":5,"column_end":64}},{"value":"/ - Hour, minute, second. (nanosecond assumed to be 0)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":168668,"byte_end":168724,"line_start":496,"line_end":496,"column_start":5,"column_end":61}},{"value":"/ - Hour, minute, second, nanosecond.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":168729,"byte_end":168768,"line_start":497,"line_end":497,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":168773,"byte_end":168776,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ It is able to handle leap seconds when given second is 60.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":168781,"byte_end":168843,"line_start":499,"line_end":499,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":170651,"byte_end":170680,"line_start":542,"line_end":542,"column_start":12,"column_end":41},"name":"to_naive_datetime_with_offset","qualname":"<Parsed>::to_naive_datetime_with_offset","value":"fn to_naive_datetime_with_offset<'_>(&'_ Self, i32)\n-> ParseResult<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed naive date and time out of given fields,\n except for the [`offset`](#structfield.offset) field (assumed to have a given value).\n This is required for parsing a local time or other known-timezone inputs.","sig":null,"attributes":[{"value":"/ Returns a parsed naive date and time out of given fields,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":170166,"byte_end":170227,"line_start":535,"line_end":535,"column_start":5,"column_end":66}},{"value":"/ except for the [`offset`](#structfield.offset) field (assumed to have a given value).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":170232,"byte_end":170321,"line_start":536,"line_end":536,"column_start":5,"column_end":94}},{"value":"/ This is required for parsing a local time or other known-timezone inputs.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":170326,"byte_end":170403,"line_start":537,"line_end":537,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":170408,"byte_end":170411,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ This method is able to determine the combined date and time","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":170416,"byte_end":170479,"line_start":539,"line_end":539,"column_start":5,"column_end":68}},{"value":"/ from date and time fields or a single [`timestamp`](#structfield.timestamp) field.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":170484,"byte_end":170570,"line_start":540,"line_end":540,"column_start":5,"column_end":91}},{"value":"/ Either way those fields have to be consistent to each other.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":170575,"byte_end":170639,"line_start":541,"line_end":541,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":174098,"byte_end":174113,"line_start":615,"line_end":615,"column_start":12,"column_end":27},"name":"to_fixed_offset","qualname":"<Parsed>::to_fixed_offset","value":"fn to_fixed_offset<'_>(&'_ Self) -> ParseResult<FixedOffset>","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed fixed time zone offset out of given fields.\n","sig":null,"attributes":[{"value":"/ Returns a parsed fixed time zone offset out of given fields.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":174022,"byte_end":174086,"line_start":614,"line_end":614,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":174585,"byte_end":174596,"line_start":625,"line_end":625,"column_start":12,"column_end":23},"name":"to_datetime","qualname":"<Parsed>::to_datetime","value":"fn to_datetime<'_>(&'_ Self) -> ParseResult<DateTime<FixedOffset>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed timezone-aware date and time out of given fields.","sig":null,"attributes":[{"value":"/ Returns a parsed timezone-aware date and time out of given fields.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":174234,"byte_end":174304,"line_start":619,"line_end":619,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":174309,"byte_end":174312,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ This method is able to determine the combined date and time","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":174317,"byte_end":174380,"line_start":621,"line_end":621,"column_start":5,"column_end":68}},{"value":"/ from date and time fields or a single [`timestamp`](#structfield.timestamp) field,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":174385,"byte_end":174471,"line_start":622,"line_end":622,"column_start":5,"column_end":91}},{"value":"/ plus a time zone offset.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":174476,"byte_end":174504,"line_start":623,"line_end":623,"column_start":5,"column_end":33}},{"value":"/ Either way those fields have to be consistent to each other.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":174509,"byte_end":174573,"line_start":624,"line_end":624,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":729},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":175862,"byte_end":175887,"line_start":651,"line_end":651,"column_start":12,"column_end":37},"name":"to_datetime_with_timezone","qualname":"<Parsed>::to_datetime_with_timezone","value":"fn to_datetime_with_timezone<Tz, '_, '_>(&'_ Self, &'_ Tz)\n-> ParseResult<DateTime<Tz>> where Tz: TimeZone","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed timezone-aware date and time out of given fields,\n with an additional `TimeZone` used to interpret and validate the local date.","sig":null,"attributes":[{"value":"/ Returns a parsed timezone-aware date and time out of given fields,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":175305,"byte_end":175375,"line_start":642,"line_end":642,"column_start":5,"column_end":75}},{"value":"/ with an additional `TimeZone` used to interpret and validate the local date.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":175380,"byte_end":175460,"line_start":643,"line_end":643,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":175465,"byte_end":175468,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ This method is able to determine the combined date and time","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":175473,"byte_end":175536,"line_start":645,"line_end":645,"column_start":5,"column_end":68}},{"value":"/ from date and time fields or a single [`timestamp`](#structfield.timestamp) field,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":175541,"byte_end":175627,"line_start":646,"line_end":646,"column_start":5,"column_end":91}},{"value":"/ plus a time zone offset.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":175632,"byte_end":175660,"line_start":647,"line_end":647,"column_start":5,"column_end":33}},{"value":"/ Either way those fields have to be consistent to each other.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":175665,"byte_end":175729,"line_start":648,"line_end":648,"column_start":5,"column_end":69}},{"value":"/ If parsed fields include an UTC offset, it also has to be consistent to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":175734,"byte_end":175809,"line_start":649,"line_end":649,"column_start":5,"column_end":80}},{"value":"/ [`offset`](#structfield.offset).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":175814,"byte_end":175850,"line_start":650,"line_end":650,"column_start":5,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":814},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parse.rs","byte_start":213445,"byte_end":213450,"line_start":243,"line_end":243,"column_start":8,"column_end":13},"name":"parse","qualname":"::format::parse::parse","value":"fn parse<'a, I, B, '_, '_>(&'_ mut Parsed, &'_ str, I) -> ParseResult<()>\nwhere I: Iterator<Item = B>, B: Borrow<Item>","parent":null,"children":[],"decl_id":null,"docs":" Tries to parse given string into `parsed` with given formatting items.\n Returns `Ok` when the entire string has been parsed (otherwise `parsed` should not be used).\n There should be no trailing string after parsing;\n use a stray [`Item::Space`](./enum.Item.html#variant.Space) to trim whitespaces.","sig":null,"attributes":[{"value":"/ Tries to parse given string into `parsed` with given formatting items.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parse.rs","byte_start":212542,"byte_end":212616,"line_start":227,"line_end":227,"column_start":1,"column_end":75}},{"value":"/ Returns `Ok` when the entire string has been parsed (otherwise `parsed` should not be used).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parse.rs","byte_start":212617,"byte_end":212713,"line_start":228,"line_end":228,"column_start":1,"column_end":97}},{"value":"/ There should be no trailing string after parsing;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parse.rs","byte_start":212714,"byte_end":212767,"line_start":229,"line_end":229,"column_start":1,"column_end":54}},{"value":"/ use a stray [`Item::Space`](./enum.Item.html#variant.Space) to trim whitespaces.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parse.rs","byte_start":212768,"byte_end":212852,"line_start":230,"line_end":230,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parse.rs","byte_start":212853,"byte_end":212856,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/ This particular date and time parser is:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parse.rs","byte_start":212857,"byte_end":212901,"line_start":232,"line_end":232,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parse.rs","byte_start":212902,"byte_end":212905,"line_start":233,"line_end":233,"column_start":1,"column_end":4}},{"value":"/ - Greedy. It will consume the longest possible prefix.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parse.rs","byte_start":212906,"byte_end":212964,"line_start":234,"line_end":234,"column_start":1,"column_end":59}},{"value":"/   For example, `April` is always consumed entirely when the long month name is requested;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parse.rs","byte_start":212965,"byte_end":213058,"line_start":235,"line_end":235,"column_start":1,"column_end":94}},{"value":"/   it equally accepts `Apr`, but prefers the longer prefix in this case.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parse.rs","byte_start":213059,"byte_end":213134,"line_start":236,"line_end":236,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parse.rs","byte_start":213135,"byte_end":213138,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ - Padding-agnostic (for numeric items).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parse.rs","byte_start":213139,"byte_end":213182,"line_start":238,"line_end":238,"column_start":1,"column_end":44}},{"value":"/   The [`Pad`](./enum.Pad.html) field is completely ignored,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parse.rs","byte_start":213183,"byte_end":213246,"line_start":239,"line_end":239,"column_start":1,"column_end":64}},{"value":"/   so one can prepend any number of whitespace then any number of zeroes before numbers.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parse.rs","byte_start":213247,"byte_end":213338,"line_start":240,"line_end":240,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parse.rs","byte_start":213339,"byte_end":213342,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"/ - (Still) obeying the intrinsic parsing width. This allows, for example, parsing `HHMMSS`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parse.rs","byte_start":213343,"byte_end":213437,"line_start":242,"line_end":242,"column_start":1,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":844},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parse.rs","byte_start":223014,"byte_end":223022,"line_start":481,"line_end":481,"column_start":8,"column_end":16},"name":"from_str","qualname":"<DateTime<FixedOffset> as core::str::FromStr>::from_str","value":"fn from_str<'_>(&'_ str) -> ParseResult<DateTime<FixedOffset>>","parent":{"krate":1,"index":12989},"children":[],"decl_id":{"krate":1,"index":12991},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":913},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/strftime.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"strftime","qualname":"::format::strftime","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/strftime.rs","parent":null,"children":[{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":918},{"krate":0,"index":921},{"krate":0,"index":924},{"krate":0,"index":927},{"krate":0,"index":930},{"krate":0,"index":933},{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":2375},{"krate":0,"index":2382},{"krate":0,"index":2385},{"krate":0,"index":938},{"krate":0,"index":944},{"krate":0,"index":945}],"decl_id":null,"docs":"`strftime`/`strptime`-inspired date and time formatting syntax.","sig":null,"attributes":[{"value":"*\n`strftime`/`strptime`-inspired date and time formatting syntax.\n\n## Specifiers\n\nThe following specifiers are available both to formatting and parsing.\n\n| Spec. | Example  | Description                                                                |\n|-------|----------|----------------------------------------------------------------------------|\n|       |          | **DATE SPECIFIERS:**                                                       |\n| `%Y`  | `2001`   | The full proleptic Gregorian year, zero-padded to 4 digits. chrono supports years from -262144 to 262143. |\n| `%C`  | `20`     | The proleptic Gregorian year divided by 100, zero-padded to 2 digits. [^1] |\n| `%y`  | `01`     | The proleptic Gregorian year modulo 100, zero-padded to 2 digits. [^1]     |\n|       |          |                                                                            |\n| `%m`  | `07`     | Month number (01--12), zero-padded to 2 digits.                            |\n| `%b`  | `Jul`    | Abbreviated month name. Always 3 letters.                                  |\n| `%B`  | `July`   | Full month name. Also accepts corresponding abbreviation in parsing.       |\n| `%h`  | `Jul`    | Same as `%b`.                                                              |\n|       |          |                                                                            |\n| `%d`  | `08`     | Day number (01--31), zero-padded to 2 digits.                              |\n| `%e`  | ` 8`     | Same as `%d` but space-padded. Same as `%_d`.                              |\n|       |          |                                                                            |\n| `%a`  | `Sun`    | Abbreviated weekday name. Always 3 letters.                                |\n| `%A`  | `Sunday` | Full weekday name. Also accepts corresponding abbreviation in parsing.     |\n| `%w`  | `0`      | Sunday = 0, Monday = 1, ..., Saturday = 6.                                 |\n| `%u`  | `7`      | Monday = 1, Tuesday = 2, ..., Sunday = 7. (ISO 8601)                       |\n|       |          |                                                                            |\n| `%U`  | `28`     | Week number starting with Sunday (00--53), zero-padded to 2 digits. [^2]   |\n| `%W`  | `27`     | Same as `%U`, but week 1 starts with the first Monday in that year instead.|\n|       |          |                                                                            |\n| `%G`  | `2001`   | Same as `%Y` but uses the year number in ISO 8601 week date. [^3]          |\n| `%g`  | `01`     | Same as `%y` but uses the year number in ISO 8601 week date. [^3]          |\n| `%V`  | `27`     | Same as `%U` but uses the week number in ISO 8601 week date (01--53). [^3] |\n|       |          |                                                                            |\n| `%j`  | `189`    | Day of the year (001--366), zero-padded to 3 digits.                       |\n|       |          |                                                                            |\n| `%D`  | `07/08/01`    | Month-day-year format. Same as `%m/%d/%y`.                            |\n| `%x`  | `07/08/01`    | Locale's date representation (e.g., 12/31/99).                        |\n| `%F`  | `2001-07-08`  | Year-month-day format (ISO 8601). Same as `%Y-%m-%d`.                 |\n| `%v`  | ` 8-Jul-2001` | Day-month-year format. Same as `%e-%b-%Y`.                            |\n|       |          |                                                                            |\n|       |          | **TIME SPECIFIERS:**                                                       |\n| `%H`  | `00`     | Hour number (00--23), zero-padded to 2 digits.                             |\n| `%k`  | ` 0`     | Same as `%H` but space-padded. Same as `%_H`.                              |\n| `%I`  | `12`     | Hour number in 12-hour clocks (01--12), zero-padded to 2 digits.           |\n| `%l`  | `12`     | Same as `%I` but space-padded. Same as `%_I`.                              |\n|       |          |                                                                            |\n| `%P`  | `am`     | `am` or `pm` in 12-hour clocks.                                            |\n| `%p`  | `AM`     | `AM` or `PM` in 12-hour clocks.                                            |\n|       |          |                                                                            |\n| `%M`  | `34`     | Minute number (00--59), zero-padded to 2 digits.                           |\n| `%S`  | `60`     | Second number (00--60), zero-padded to 2 digits. [^4]                      |\n| `%f`  | `026490000`   | The fractional seconds (in nanoseconds) since last whole second. [^7] |\n| `%.f` | `.026490`| Similar to `.%f` but left-aligned. These all consume the leading dot. [^7] |\n| `%.3f`| `.026`        | Similar to `.%f` but left-aligned but fixed to a length of 3. [^7]    |\n| `%.6f`| `.026490`     | Similar to `.%f` but left-aligned but fixed to a length of 6. [^7]    |\n| `%.9f`| `.026490000`  | Similar to `.%f` but left-aligned but fixed to a length of 9. [^7]    |\n| `%3f` | `026`         | Similar to `%.3f` but without the leading dot. [^7]                   |\n| `%6f` | `026490`      | Similar to `%.6f` but without the leading dot. [^7]                   |\n| `%9f` | `026490000`   | Similar to `%.9f` but without the leading dot. [^7]                   |\n|       |               |                                                                       |\n| `%R`  | `00:34`       | Hour-minute format. Same as `%H:%M`.                                  |\n| `%T`  | `00:34:60`    | Hour-minute-second format. Same as `%H:%M:%S`.                        |\n| `%X`  | `00:34:60`    | Locale's time representation (e.g., 23:13:48).                        |\n| `%r`  | `12:34:60 AM` | Hour-minute-second format in 12-hour clocks. Same as `%I:%M:%S %p`.   |\n|       |          |                                                                            |\n|       |          | **TIME ZONE SPECIFIERS:**                                                  |\n| `%Z`  | `ACST`   | Local time zone name. Skips all non-whitespace characters during parsing. [^8] |\n| `%z`  | `+0930`  | Offset from the local time to UTC (with UTC being `+0000`).                |\n| `%:z` | `+09:30` | Same as `%z` but with a colon.                                             |\n| `%#z` | `+09`    | *Parsing only:* Same as `%z` but allows minutes to be missing or present.  |\n|       |          |                                                                            |\n|       |          | **DATE & TIME SPECIFIERS:**                                                |\n|`%c`|`Sun Jul  8 00:34:60 2001`|Locale's date and time (e.g., Thu Mar  3 23:05:25 2005).       |\n| `%+`  | `2001-07-08T00:34:60.026490+09:30` | ISO 8601 / RFC 3339 date & time format. [^5]     |\n|       |               |                                                                       |\n| `%s`  | `994518299`   | UNIX timestamp, the number of seconds since 1970-01-01 00:00 UTC. [^6]|\n|       |          |                                                                            |\n|       |          | **SPECIAL SPECIFIERS:**                                                    |\n| `%t`  |          | Literal tab (`\\t`).                                                        |\n| `%n`  |          | Literal newline (`\\n`).                                                    |\n| `%%`  |          | Literal percent sign.                                                      |\n\nIt is possible to override the default padding behavior of numeric specifiers `%?`.\nThis is not allowed for other specifiers and will result in the `BAD_FORMAT` error.\n\nModifier | Description\n-------- | -----------\n`%-?`    | Suppresses any padding including spaces and zeroes. (e.g. `%j` = `012`, `%-j` = `12`)\n`%_?`    | Uses spaces as a padding. (e.g. `%j` = `012`, `%_j` = ` 12`)\n`%0?`    | Uses zeroes as a padding. (e.g. `%e` = ` 9`, `%0e` = `09`)\n\nNotes:\n\n[^1]: `%C`, `%y`:\n   This is floor division, so 100 BCE (year number -99) will print `-1` and `99` respectively.\n\n[^2]: `%U`:\n   Week 1 starts with the first Sunday in that year.\n   It is possible to have week 0 for days before the first Sunday.\n\n[^3]: `%G`, `%g`, `%V`:\n   Week 1 is the first week with at least 4 days in that year.\n   Week 0 does not exist, so this should be used with `%G` or `%g`.\n\n[^4]: `%S`:\n   It accounts for leap seconds, so `60` is possible.\n\n[^5]: `%+`: Same as `%Y-%m-%dT%H:%M:%S%.f%:z`, i.e. 0, 3, 6 or 9 fractional\n   digits for seconds and colons in the time zone offset.\n   <br>\n   <br>\n   The typical `strftime` implementations have different (and locale-dependent)\n   formats for this specifier. While Chrono's format for `%+` is far more\n   stable, it is best to avoid this specifier if you want to control the exact\n   output.\n\n[^6]: `%s`:\n   This is not padded and can be negative.\n   For the purpose of Chrono, it only accounts for non-leap seconds\n   so it slightly differs from ISO C `strftime` behavior.\n\n[^7]: `%f`, `%.f`, `%.3f`, `%.6f`, `%.9f`, `%3f`, `%6f`, `%9f`:\n   <br>\n   The default `%f` is right-aligned and always zero-padded to 9 digits\n   for the compatibility with glibc and others,\n   so it always counts the number of nanoseconds since the last whole second.\n   E.g. 7ms after the last second will print `007000000`,\n   and parsing `7000000` will yield the same.\n   <br>\n   <br>\n   The variant `%.f` is left-aligned and print 0, 3, 6 or 9 fractional digits\n   according to the precision.\n   E.g. 70ms after the last second under `%.f` will print `.070` (note: not `.07`),\n   and parsing `.07`, `.070000` etc. will yield the same.\n   Note that they can print or read nothing if the fractional part is zero or\n   the next character is not `.`.\n   <br>\n   <br>\n   The variant `%.3f`, `%.6f` and `%.9f` are left-aligned and print 3, 6 or 9 fractional digits\n   according to the number preceding `f`.\n   E.g. 70ms after the last second under `%.3f` will print `.070` (note: not `.07`),\n   and parsing `.07`, `.070000` etc. will yield the same.\n   Note that they can read nothing if the fractional part is zero or\n   the next character is not `.` however will print with the specified length.\n   <br>\n   <br>\n   The variant `%3f`, `%6f` and `%9f` are left-aligned and print 3, 6 or 9 fractional digits\n   according to the number preceding `f`, but without the leading dot.\n   E.g. 70ms after the last second under `%3f` will print `070` (note: not `07`),\n   and parsing `07`, `070000` etc. will yield the same.\n   Note that they can read nothing if the fractional part is zero.\n\n[^8]: `%Z`:\n   Offset will not be populated from the parsed data, nor will it be validated.\n   Timezone is completely ignored. Similar to the glibc `strptime` treatment of\n   this format code.\n   <br>\n   <br>\n   It is not possible to reliably convert from an abbreviation to an offset,\n   for example CDT can mean either Central Daylight Time (North America) or\n   China Daylight Time.\n*/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/strftime.rs","byte_start":261329,"byte_end":272353,"line_start":4,"line_end":166,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":2375},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/strftime.rs","byte_start":273217,"byte_end":273230,"line_start":198,"line_end":198,"column_start":12,"column_end":25},"name":"StrftimeItems","qualname":"::format::strftime::StrftimeItems","value":"StrftimeItems {  }","parent":null,"children":[{"krate":0,"index":2377},{"krate":0,"index":2378},{"krate":0,"index":2379},{"krate":0,"index":2380},{"krate":0,"index":2381}],"decl_id":null,"docs":" Parsing iterator for `strftime`-like format strings.\n","sig":null,"attributes":[{"value":"/ Parsing iterator for `strftime`-like format strings.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/strftime.rs","byte_start":273125,"byte_end":273181,"line_start":196,"line_end":196,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":940},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/strftime.rs","byte_start":273820,"byte_end":273823,"line_start":215,"line_end":215,"column_start":12,"column_end":15},"name":"new","qualname":"<StrftimeItems>::new","value":"fn new(&'a str) -> StrftimeItems","parent":null,"children":[],"decl_id":null,"docs":" Creates a new parsing iterator from the `strftime`-like format string.\n","sig":null,"attributes":[{"value":"/ Creates a new parsing iterator from the `strftime`-like format string.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/strftime.rs","byte_start":273734,"byte_end":273808,"line_start":214,"line_end":214,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":948},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/strftime.rs","byte_start":275164,"byte_end":275168,"line_start":259,"line_end":259,"column_start":8,"column_end":12},"name":"next","qualname":"<StrftimeItems as core::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Item>","parent":{"krate":1,"index":8596},"children":[],"decl_id":{"krate":1,"index":8598},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":956},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":145552,"byte_end":145560,"line_start":876,"line_end":876,"column_start":8,"column_end":16},"name":"from_str","qualname":"<Weekday as core::str::FromStr>::from_str","value":"fn from_str<'_>(&'_ str) -> Result<Self, Self::Err>","parent":{"krate":1,"index":12989},"children":[],"decl_id":{"krate":1,"index":12991},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":959},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":147507,"byte_end":147515,"line_start":950,"line_end":950,"column_start":8,"column_end":16},"name":"from_str","qualname":"<Month as core::str::FromStr>::from_str","value":"fn from_str<'_>(&'_ str) -> Result<Self, Self::Err>","parent":{"krate":1,"index":12989},"children":[],"decl_id":{"krate":1,"index":12991},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":967},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"naive","qualname":"::naive","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/mod.rs","parent":null,"children":[{"krate":0,"index":968},{"krate":0,"index":1185},{"krate":0,"index":1359},{"krate":0,"index":1447},{"krate":0,"index":1468},{"krate":0,"index":1583},{"krate":0,"index":1584},{"krate":0,"index":1587},{"krate":0,"index":1590},{"krate":0,"index":1593},{"krate":0,"index":1596},{"krate":0,"index":1597},{"krate":0,"index":1600},{"krate":0,"index":1603},{"krate":0,"index":1606},{"krate":0,"index":1609}],"decl_id":null,"docs":" Date and time types unconcerned with timezones.","sig":null,"attributes":[{"value":"/ Date and time types unconcerned with timezones.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/mod.rs","byte_start":291922,"byte_end":291973,"line_start":1,"line_end":1,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/mod.rs","byte_start":291974,"byte_end":291977,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ They are primarily building blocks for other types","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/mod.rs","byte_start":291978,"byte_end":292032,"line_start":3,"line_end":3,"column_start":1,"column_end":55}},{"value":"/ (e.g. [`TimeZone`](../offset/trait.TimeZone.html)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/mod.rs","byte_start":292033,"byte_end":292088,"line_start":4,"line_end":4,"column_start":1,"column_end":56}},{"value":"/ but can be also used for the simpler date and time handling.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/mod.rs","byte_start":292089,"byte_end":292153,"line_start":5,"line_end":5,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":2394},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":295198,"byte_end":295207,"line_start":57,"line_end":57,"column_start":12,"column_end":21},"name":"NaiveWeek","qualname":"::naive::date::NaiveWeek","value":"NaiveWeek {  }","parent":null,"children":[{"krate":0,"index":2395},{"krate":0,"index":2396}],"decl_id":null,"docs":" A week represented by a [`NaiveDate`] and a [`Weekday`] which is the first\n day of the week.\n","sig":null,"attributes":[{"value":"/ A week represented by a [`NaiveDate`] and a [`Weekday`] which is the first","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":295070,"byte_end":295148,"line_start":54,"line_end":54,"column_start":1,"column_end":79}},{"value":"/ day of the week.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":295149,"byte_end":295169,"line_start":55,"line_end":55,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1072},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":295608,"byte_end":295617,"line_start":75,"line_end":75,"column_start":12,"column_end":21},"name":"first_day","qualname":"<NaiveWeek>::first_day","value":"fn first_day<'_>(&'_ Self) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Returns a date representing the first day of the week.","sig":null,"attributes":[{"value":"/ Returns a date representing the first day of the week.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":295275,"byte_end":295333,"line_start":63,"line_end":63,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":295338,"byte_end":295341,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":295346,"byte_end":295360,"line_start":65,"line_end":65,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":295365,"byte_end":295368,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":295373,"byte_end":295380,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Weekday};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":295385,"byte_end":295422,"line_start":68,"line_end":68,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":295427,"byte_end":295430,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ let date = NaiveDate::from_ymd(2022, 4, 18);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":295435,"byte_end":295483,"line_start":70,"line_end":70,"column_start":5,"column_end":53}},{"value":"/ let week = date.week(Weekday::Mon);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":295488,"byte_end":295527,"line_start":71,"line_end":71,"column_start":5,"column_end":44}},{"value":"/ assert!(week.first_day() <= date);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":295532,"byte_end":295570,"line_start":72,"line_end":72,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":295575,"byte_end":295582,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":295587,"byte_end":295596,"line_start":74,"line_end":74,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1073},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":296223,"byte_end":296231,"line_start":94,"line_end":94,"column_start":12,"column_end":20},"name":"last_day","qualname":"<NaiveWeek>::last_day","value":"fn last_day<'_>(&'_ Self) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Returns a date representing the last day of the week.","sig":null,"attributes":[{"value":"/ Returns a date representing the last day of the week.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":295892,"byte_end":295949,"line_start":82,"line_end":82,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":295954,"byte_end":295957,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":295962,"byte_end":295976,"line_start":84,"line_end":84,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":295981,"byte_end":295984,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":295989,"byte_end":295996,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Weekday};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":296001,"byte_end":296038,"line_start":87,"line_end":87,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":296043,"byte_end":296046,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let date = NaiveDate::from_ymd(2022, 4, 18);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":296051,"byte_end":296099,"line_start":89,"line_end":89,"column_start":5,"column_end":53}},{"value":"/ let week = date.week(Weekday::Mon);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":296104,"byte_end":296143,"line_start":90,"line_end":90,"column_start":5,"column_end":44}},{"value":"/ assert!(week.last_day() >= date);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":296148,"byte_end":296185,"line_start":91,"line_end":91,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":296190,"byte_end":296197,"line_start":92,"line_end":92,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":296202,"byte_end":296211,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1074},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":296824,"byte_end":296828,"line_start":113,"line_end":113,"column_start":12,"column_end":16},"name":"days","qualname":"<NaiveWeek>::days","value":"fn days<'_>(&'_ Self) -> RangeInclusive<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Returns a [`RangeInclusive<T>`] representing the whole week bounded by\n [first_day](./struct.NaiveWeek.html#method.first_day) and\n [last_day](./struct.NaiveWeek.html#method.last_day) functions.","sig":null,"attributes":[{"value":"/ Returns a [`RangeInclusive<T>`] representing the whole week bounded by","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":296310,"byte_end":296384,"line_start":98,"line_end":98,"column_start":5,"column_end":79}},{"value":"/ [first_day](./struct.NaiveWeek.html#method.first_day) and","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":296389,"byte_end":296450,"line_start":99,"line_end":99,"column_start":5,"column_end":66}},{"value":"/ [last_day](./struct.NaiveWeek.html#method.last_day) functions.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":296455,"byte_end":296521,"line_start":100,"line_end":100,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":296526,"byte_end":296529,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":296534,"byte_end":296548,"line_start":102,"line_end":102,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":296553,"byte_end":296556,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":296561,"byte_end":296568,"line_start":104,"line_end":104,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Weekday};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":296573,"byte_end":296610,"line_start":105,"line_end":105,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":296615,"byte_end":296618,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ let date = NaiveDate::from_ymd(2022, 4, 18);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":296623,"byte_end":296671,"line_start":107,"line_end":107,"column_start":5,"column_end":53}},{"value":"/ let week = date.week(Weekday::Mon);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":296676,"byte_end":296715,"line_start":108,"line_end":108,"column_start":5,"column_end":44}},{"value":"/ let days = week.days();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":296720,"byte_end":296747,"line_start":109,"line_end":109,"column_start":5,"column_end":32}},{"value":"/ assert!(days.contains(&date));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":296752,"byte_end":296786,"line_start":110,"line_end":110,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":296791,"byte_end":296798,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":296803,"byte_end":296812,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2399},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":299568,"byte_end":299577,"line_start":168,"line_end":168,"column_start":12,"column_end":21},"name":"NaiveDate","qualname":"::naive::date::NaiveDate","value":"NaiveDate {  }","parent":null,"children":[{"krate":0,"index":2400}],"decl_id":null,"docs":" ISO 8601 calendar date without timezone.\n Allows for every [proleptic Gregorian date](#calendar-date)\n from Jan 1, 262145 BCE to Dec 31, 262143 CE.\n Also supports the conversion from ISO 8601 ordinal and week date.","sig":null,"attributes":[{"value":"/ ISO 8601 calendar date without timezone.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":296919,"byte_end":296963,"line_start":118,"line_end":118,"column_start":1,"column_end":45}},{"value":"/ Allows for every [proleptic Gregorian date](#calendar-date)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":296964,"byte_end":297027,"line_start":119,"line_end":119,"column_start":1,"column_end":64}},{"value":"/ from Jan 1, 262145 BCE to Dec 31, 262143 CE.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":297028,"byte_end":297076,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/ Also supports the conversion from ISO 8601 ordinal and week date.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":297077,"byte_end":297146,"line_start":121,"line_end":121,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":297147,"byte_end":297150,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ # Calendar Date","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":297151,"byte_end":297170,"line_start":123,"line_end":123,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":297171,"byte_end":297174,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ The ISO 8601 **calendar date** follows the proleptic Gregorian calendar.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":297175,"byte_end":297251,"line_start":125,"line_end":125,"column_start":1,"column_end":77}},{"value":"/ It is like a normal civil calendar but note some slight differences:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":297252,"byte_end":297324,"line_start":126,"line_end":126,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":297325,"byte_end":297328,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ * Dates before the Gregorian calendar's inception in 1582 are defined via the extrapolation.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":297329,"byte_end":297425,"line_start":128,"line_end":128,"column_start":1,"column_end":97}},{"value":"/   Be careful, as historical dates are often noted in the Julian calendar and others","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":297426,"byte_end":297513,"line_start":129,"line_end":129,"column_start":1,"column_end":88}},{"value":"/   and the transition to Gregorian may differ across countries (as late as early 20C).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":297514,"byte_end":297603,"line_start":130,"line_end":130,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":297604,"byte_end":297607,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/   (Some example: Both Shakespeare from Britain and Cervantes from Spain seemingly died","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":297608,"byte_end":297698,"line_start":132,"line_end":132,"column_start":1,"column_end":91}},{"value":"/   on the same calendar date---April 23, 1616---but in the different calendar.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":297699,"byte_end":297780,"line_start":133,"line_end":133,"column_start":1,"column_end":82}},{"value":"/   Britain used the Julian calendar at that time, so Shakespeare's death is later.)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":297781,"byte_end":297867,"line_start":134,"line_end":134,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":297868,"byte_end":297871,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ * ISO 8601 calendars has the year 0, which is 1 BCE (a year before 1 CE).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":297872,"byte_end":297949,"line_start":136,"line_end":136,"column_start":1,"column_end":78}},{"value":"/   If you need a typical BCE/BC and CE/AD notation for year numbers,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":297950,"byte_end":298021,"line_start":137,"line_end":137,"column_start":1,"column_end":72}},{"value":"/   use the [`Datelike::year_ce`](../trait.Datelike.html#method.year_ce) method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":298022,"byte_end":298104,"line_start":138,"line_end":138,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":298105,"byte_end":298108,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ # Week Date","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":298109,"byte_end":298124,"line_start":140,"line_end":140,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":298125,"byte_end":298128,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/ The ISO 8601 **week date** is a triple of year number, week number","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":298129,"byte_end":298199,"line_start":142,"line_end":142,"column_start":1,"column_end":71}},{"value":"/ and [day of the week](../enum.Weekday.html) with the following rules:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":298200,"byte_end":298273,"line_start":143,"line_end":143,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":298274,"byte_end":298277,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ * A week consists of Monday through Sunday, and is always numbered within some year.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":298278,"byte_end":298366,"line_start":145,"line_end":145,"column_start":1,"column_end":89}},{"value":"/   The week number ranges from 1 to 52 or 53 depending on the year.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":298367,"byte_end":298437,"line_start":146,"line_end":146,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":298438,"byte_end":298441,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ * The week 1 of given year is defined as the first week containing January 4 of that year,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":298442,"byte_end":298536,"line_start":148,"line_end":148,"column_start":1,"column_end":95}},{"value":"/   or equivalently, the first week containing four or more days in that year.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":298537,"byte_end":298617,"line_start":149,"line_end":149,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":298618,"byte_end":298621,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ * The year number in the week date may *not* correspond to the actual Gregorian year.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":298622,"byte_end":298711,"line_start":151,"line_end":151,"column_start":1,"column_end":90}},{"value":"/   For example, January 3, 2016 (Sunday) was on the last (53rd) week of 2015.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":298712,"byte_end":298792,"line_start":152,"line_end":152,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":298793,"byte_end":298796,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ Chrono's date types default to the ISO 8601 [calendar date](#calendar-date),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":298797,"byte_end":298877,"line_start":154,"line_end":154,"column_start":1,"column_end":81}},{"value":"/ but [`Datelike::iso_week`](../trait.Datelike.html#tymethod.iso_week) and","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":298878,"byte_end":298954,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ [`Datelike::weekday`](../trait.Datelike.html#tymethod.weekday) methods","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":298955,"byte_end":299029,"line_start":156,"line_end":156,"column_start":1,"column_end":75}},{"value":"/ can be used to get the corresponding week date.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":299030,"byte_end":299081,"line_start":157,"line_end":157,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":299082,"byte_end":299085,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ # Ordinal Date","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":299086,"byte_end":299104,"line_start":159,"line_end":159,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":299105,"byte_end":299108,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The ISO 8601 **ordinal date** is a pair of year number and day of the year (\"ordinal\").","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":299109,"byte_end":299200,"line_start":161,"line_end":161,"column_start":1,"column_end":92}},{"value":"/ The ordinal number ranges from 1 to 365 or 366 depending on the year.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":299201,"byte_end":299274,"line_start":162,"line_end":162,"column_start":1,"column_end":74}},{"value":"/ The year number is the same as that of the [calendar date](#calendar-date).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":299275,"byte_end":299354,"line_start":163,"line_end":163,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":299355,"byte_end":299358,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ This is currently the internal format of Chrono's date types.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":299359,"byte_end":299424,"line_start":165,"line_end":165,"column_start":1,"column_end":66}}]},{"kind":"Const","id":{"krate":0,"index":1075},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":299765,"byte_end":299773,"line_start":174,"line_end":174,"column_start":11,"column_end":19},"name":"MIN_DATE","qualname":"::naive::date::MIN_DATE","value":"NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" The minimum possible `NaiveDate` (January 1, 262145 BCE).\n","sig":null,"attributes":[{"value":"/ The minimum possible `NaiveDate` (January 1, 262145 BCE).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":299624,"byte_end":299685,"line_start":172,"line_end":172,"column_start":1,"column_end":62}},{"value":"deprecated(since = \"0.4.20\", note = \"Use NaiveDate::MIN instead\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":299686,"byte_end":299754,"line_start":173,"line_end":173,"column_start":1,"column_end":69}}]},{"kind":"Const","id":{"krate":0,"index":1076},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":299945,"byte_end":299953,"line_start":177,"line_end":177,"column_start":11,"column_end":19},"name":"MAX_DATE","qualname":"::naive::date::MAX_DATE","value":"NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" The maximum possible `NaiveDate` (December 31, 262143 CE).\n","sig":null,"attributes":[{"value":"/ The maximum possible `NaiveDate` (December 31, 262143 CE).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":299803,"byte_end":299865,"line_start":175,"line_end":175,"column_start":1,"column_end":63}},{"value":"deprecated(since = \"0.4.20\", note = \"Use NaiveDate::MAX instead\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":299866,"byte_end":299934,"line_start":176,"line_end":176,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302316,"byte_end":302324,"line_start":243,"line_end":243,"column_start":12,"column_end":20},"name":"from_ymd","qualname":"<NaiveDate>::from_ymd","value":"fn from_ymd(i32, u32, u32) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from the [calendar date](#calendar-date)\n (year, month and day).","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` from the [calendar date](#calendar-date)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":301588,"byte_end":301656,"line_start":223,"line_end":223,"column_start":5,"column_end":73}},{"value":"/ (year, month and day).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":301661,"byte_end":301687,"line_start":224,"line_end":224,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":301692,"byte_end":301695,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-range date, invalid month and/or day.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":301700,"byte_end":301762,"line_start":226,"line_end":226,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":301767,"byte_end":301770,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":301775,"byte_end":301788,"line_start":228,"line_end":228,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":301793,"byte_end":301796,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":301801,"byte_end":301808,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike, Weekday};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":301813,"byte_end":301860,"line_start":231,"line_end":231,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":301865,"byte_end":301868,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 3, 14);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":301873,"byte_end":301918,"line_start":233,"line_end":233,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(d.year(), 2015);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":301923,"byte_end":301954,"line_start":234,"line_end":234,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(d.month(), 3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":301959,"byte_end":301988,"line_start":235,"line_end":235,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(d.day(), 14);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":301993,"byte_end":302021,"line_start":236,"line_end":236,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(d.ordinal(), 73); // day of year","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302026,"byte_end":302073,"line_start":237,"line_end":237,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(d.iso_week().year(), 2015);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302078,"byte_end":302120,"line_start":238,"line_end":238,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(d.iso_week().week(), 11);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302125,"byte_end":302165,"line_start":239,"line_end":239,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(d.weekday(), Weekday::Sat);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302170,"byte_end":302212,"line_start":240,"line_end":240,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(d.num_days_from_ce(), 735671); // days since January 1, 1 CE","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302217,"byte_end":302292,"line_start":241,"line_end":241,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302297,"byte_end":302304,"line_start":242,"line_end":242,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1081},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":303173,"byte_end":303185,"line_start":266,"line_end":266,"column_start":12,"column_end":24},"name":"from_ymd_opt","qualname":"<NaiveDate>::from_ymd_opt","value":"fn from_ymd_opt(i32, u32, u32) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from the [calendar date](#calendar-date)\n (year, month and day).","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` from the [calendar date](#calendar-date)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302473,"byte_end":302541,"line_start":247,"line_end":247,"column_start":5,"column_end":73}},{"value":"/ (year, month and day).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302546,"byte_end":302572,"line_start":248,"line_end":248,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302577,"byte_end":302580,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on the out-of-range date, invalid month and/or day.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302585,"byte_end":302655,"line_start":250,"line_end":250,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302660,"byte_end":302663,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302668,"byte_end":302681,"line_start":252,"line_end":252,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302686,"byte_end":302689,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302694,"byte_end":302701,"line_start":254,"line_end":254,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302706,"byte_end":302732,"line_start":255,"line_end":255,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302737,"byte_end":302740,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ let from_ymd_opt = NaiveDate::from_ymd_opt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302745,"byte_end":302792,"line_start":257,"line_end":257,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302797,"byte_end":302800,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ assert!(from_ymd_opt(2015, 3, 14).is_some());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302805,"byte_end":302854,"line_start":259,"line_end":259,"column_start":5,"column_end":54}},{"value":"/ assert!(from_ymd_opt(2015, 0, 14).is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302859,"byte_end":302908,"line_start":260,"line_end":260,"column_start":5,"column_end":54}},{"value":"/ assert!(from_ymd_opt(2015, 2, 29).is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302913,"byte_end":302962,"line_start":261,"line_end":261,"column_start":5,"column_end":54}},{"value":"/ assert!(from_ymd_opt(-4, 2, 29).is_some()); // 5 BCE is a leap year","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":302967,"byte_end":303038,"line_start":262,"line_end":262,"column_start":5,"column_end":76}},{"value":"/ assert!(from_ymd_opt(400000, 1, 1).is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":303043,"byte_end":303093,"line_start":263,"line_end":263,"column_start":5,"column_end":55}},{"value":"/ assert!(from_ymd_opt(-400000, 1, 1).is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":303098,"byte_end":303149,"line_start":264,"line_end":264,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":303154,"byte_end":303161,"line_start":265,"line_end":265,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1082},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":304077,"byte_end":304084,"line_start":291,"line_end":291,"column_start":12,"column_end":19},"name":"from_yo","qualname":"<NaiveDate>::from_yo","value":"fn from_yo(i32, u32) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from the [ordinal date](#ordinal-date)\n (year and day of the year).","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` from the [ordinal date](#ordinal-date)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":303364,"byte_end":303430,"line_start":271,"line_end":271,"column_start":5,"column_end":71}},{"value":"/ (year and day of the year).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":303435,"byte_end":303466,"line_start":272,"line_end":272,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":303471,"byte_end":303474,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-range date and/or invalid day of year.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":303479,"byte_end":303542,"line_start":274,"line_end":274,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":303547,"byte_end":303550,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":303555,"byte_end":303568,"line_start":276,"line_end":276,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":303573,"byte_end":303576,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":303581,"byte_end":303588,"line_start":278,"line_end":278,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike, Weekday};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":303593,"byte_end":303640,"line_start":279,"line_end":279,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":303645,"byte_end":303648,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_yo(2015, 73);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":303653,"byte_end":303694,"line_start":281,"line_end":281,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(d.ordinal(), 73);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":303699,"byte_end":303731,"line_start":282,"line_end":282,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(d.year(), 2015);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":303736,"byte_end":303767,"line_start":283,"line_end":283,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(d.month(), 3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":303772,"byte_end":303801,"line_start":284,"line_end":284,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(d.day(), 14);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":303806,"byte_end":303834,"line_start":285,"line_end":285,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(d.iso_week().year(), 2015);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":303839,"byte_end":303881,"line_start":286,"line_end":286,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(d.iso_week().week(), 11);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":303886,"byte_end":303926,"line_start":287,"line_end":287,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(d.weekday(), Weekday::Sat);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":303931,"byte_end":303973,"line_start":288,"line_end":288,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(d.num_days_from_ce(), 735671); // days since January 1, 1 CE","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":303978,"byte_end":304053,"line_start":289,"line_end":289,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":304058,"byte_end":304065,"line_start":290,"line_end":290,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1083},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":304952,"byte_end":304963,"line_start":315,"line_end":315,"column_start":12,"column_end":23},"name":"from_yo_opt","qualname":"<NaiveDate>::from_yo_opt","value":"fn from_yo_opt(i32, u32) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from the [ordinal date](#ordinal-date)\n (year and day of the year).","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` from the [ordinal date](#ordinal-date)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":304221,"byte_end":304287,"line_start":295,"line_end":295,"column_start":5,"column_end":71}},{"value":"/ (year and day of the year).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":304292,"byte_end":304323,"line_start":296,"line_end":296,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":304328,"byte_end":304331,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on the out-of-range date and/or invalid day of year.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":304336,"byte_end":304407,"line_start":298,"line_end":298,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":304412,"byte_end":304415,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":304420,"byte_end":304433,"line_start":300,"line_end":300,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":304438,"byte_end":304441,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":304446,"byte_end":304453,"line_start":302,"line_end":302,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":304458,"byte_end":304484,"line_start":303,"line_end":303,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":304489,"byte_end":304492,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ let from_yo_opt = NaiveDate::from_yo_opt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":304497,"byte_end":304542,"line_start":305,"line_end":305,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":304547,"byte_end":304550,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ assert!(from_yo_opt(2015, 100).is_some());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":304555,"byte_end":304601,"line_start":307,"line_end":307,"column_start":5,"column_end":51}},{"value":"/ assert!(from_yo_opt(2015, 0).is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":304606,"byte_end":304650,"line_start":308,"line_end":308,"column_start":5,"column_end":49}},{"value":"/ assert!(from_yo_opt(2015, 365).is_some());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":304655,"byte_end":304701,"line_start":309,"line_end":309,"column_start":5,"column_end":51}},{"value":"/ assert!(from_yo_opt(2015, 366).is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":304706,"byte_end":304752,"line_start":310,"line_end":310,"column_start":5,"column_end":51}},{"value":"/ assert!(from_yo_opt(-4, 366).is_some()); // 5 BCE is a leap year","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":304757,"byte_end":304825,"line_start":311,"line_end":311,"column_start":5,"column_end":73}},{"value":"/ assert!(from_yo_opt(400000, 1).is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":304830,"byte_end":304876,"line_start":312,"line_end":312,"column_start":5,"column_end":51}},{"value":"/ assert!(from_yo_opt(-400000, 1).is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":304881,"byte_end":304928,"line_start":313,"line_end":313,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":304933,"byte_end":304940,"line_start":314,"line_end":314,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1084},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":305967,"byte_end":305978,"line_start":341,"line_end":341,"column_start":12,"column_end":23},"name":"from_isoywd","qualname":"<NaiveDate>::from_isoywd","value":"fn from_isoywd(i32, u32, Weekday) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from the [ISO week date](#week-date)\n (year, week number and day of the week).\n The resulting `NaiveDate` may have a different year from the input year.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` from the [ISO week date](#week-date)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":305129,"byte_end":305193,"line_start":320,"line_end":320,"column_start":5,"column_end":69}},{"value":"/ (year, week number and day of the week).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":305198,"byte_end":305242,"line_start":321,"line_end":321,"column_start":5,"column_end":49}},{"value":"/ The resulting `NaiveDate` may have a different year from the input year.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":305247,"byte_end":305323,"line_start":322,"line_end":322,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":305328,"byte_end":305331,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-range date and/or invalid week number.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":305336,"byte_end":305399,"line_start":324,"line_end":324,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":305404,"byte_end":305407,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":305412,"byte_end":305425,"line_start":326,"line_end":326,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":305430,"byte_end":305433,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":305438,"byte_end":305445,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike, Weekday};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":305450,"byte_end":305497,"line_start":329,"line_end":329,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":305502,"byte_end":305505,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_isoywd(2015, 11, Weekday::Sat);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":305510,"byte_end":305569,"line_start":331,"line_end":331,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(d.iso_week().year(), 2015);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":305574,"byte_end":305616,"line_start":332,"line_end":332,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(d.iso_week().week(), 11);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":305621,"byte_end":305661,"line_start":333,"line_end":333,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(d.weekday(), Weekday::Sat);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":305666,"byte_end":305708,"line_start":334,"line_end":334,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(d.year(), 2015);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":305713,"byte_end":305744,"line_start":335,"line_end":335,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(d.month(), 3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":305749,"byte_end":305778,"line_start":336,"line_end":336,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(d.day(), 14);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":305783,"byte_end":305811,"line_start":337,"line_end":337,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(d.ordinal(), 73); // day of year","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":305816,"byte_end":305863,"line_start":338,"line_end":338,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(d.num_days_from_ce(), 735671); // days since January 1, 1 CE","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":305868,"byte_end":305943,"line_start":339,"line_end":339,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":305948,"byte_end":305955,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1085},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":308337,"byte_end":308352,"line_start":389,"line_end":389,"column_start":12,"column_end":27},"name":"from_isoywd_opt","qualname":"<NaiveDate>::from_isoywd_opt","value":"fn from_isoywd_opt(i32, u32, Weekday) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from the [ISO week date](#week-date)\n (year, week number and day of the week).\n The resulting `NaiveDate` may have a different year from the input year.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` from the [ISO week date](#week-date)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":306140,"byte_end":306204,"line_start":345,"line_end":345,"column_start":5,"column_end":69}},{"value":"/ (year, week number and day of the week).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":306209,"byte_end":306253,"line_start":346,"line_end":346,"column_start":5,"column_end":49}},{"value":"/ The resulting `NaiveDate` may have a different year from the input year.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":306258,"byte_end":306334,"line_start":347,"line_end":347,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":306339,"byte_end":306342,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on the out-of-range date and/or invalid week number.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":306347,"byte_end":306418,"line_start":349,"line_end":349,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":306423,"byte_end":306426,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":306431,"byte_end":306444,"line_start":351,"line_end":351,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":306449,"byte_end":306452,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":306457,"byte_end":306464,"line_start":353,"line_end":353,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Weekday};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":306469,"byte_end":306506,"line_start":354,"line_end":354,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":306511,"byte_end":306514,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":306519,"byte_end":306558,"line_start":356,"line_end":356,"column_start":5,"column_end":44}},{"value":"/ let from_isoywd_opt = NaiveDate::from_isoywd_opt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":306563,"byte_end":306616,"line_start":357,"line_end":357,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":306621,"byte_end":306624,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from_isoywd_opt(2015, 0, Weekday::Sun), None);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":306629,"byte_end":306690,"line_start":359,"line_end":359,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(from_isoywd_opt(2015, 10, Weekday::Sun), Some(from_ymd(2015, 3, 8)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":306695,"byte_end":306779,"line_start":360,"line_end":360,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(from_isoywd_opt(2015, 30, Weekday::Mon), Some(from_ymd(2015, 7, 20)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":306784,"byte_end":306869,"line_start":361,"line_end":361,"column_start":5,"column_end":90}},{"value":"/ assert_eq!(from_isoywd_opt(2015, 60, Weekday::Mon), None);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":306874,"byte_end":306936,"line_start":362,"line_end":362,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":306941,"byte_end":306944,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from_isoywd_opt(400000, 10, Weekday::Fri), None);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":306949,"byte_end":307013,"line_start":364,"line_end":364,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(from_isoywd_opt(-400000, 10, Weekday::Sat), None);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":307018,"byte_end":307083,"line_start":365,"line_end":365,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":307088,"byte_end":307095,"line_start":366,"line_end":366,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":307100,"byte_end":307103,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ The year number of ISO week date may differ from that of the calendar date.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":307108,"byte_end":307187,"line_start":368,"line_end":368,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":307192,"byte_end":307195,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":307200,"byte_end":307207,"line_start":370,"line_end":370,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{NaiveDate, Weekday};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":307212,"byte_end":307251,"line_start":371,"line_end":371,"column_start":5,"column_end":44}},{"value":"/ # let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":307256,"byte_end":307297,"line_start":372,"line_end":372,"column_start":5,"column_end":46}},{"value":"/ # let from_isoywd_opt = NaiveDate::from_isoywd_opt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":307302,"byte_end":307357,"line_start":373,"line_end":373,"column_start":5,"column_end":60}},{"value":"/ //           Mo Tu We Th Fr Sa Su","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":307362,"byte_end":307399,"line_start":374,"line_end":374,"column_start":5,"column_end":42}},{"value":"/ // 2014-W52  22 23 24 25 26 27 28    has 4+ days of new year,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":307404,"byte_end":307469,"line_start":375,"line_end":375,"column_start":5,"column_end":70}},{"value":"/ // 2015-W01  29 30 31  1  2  3  4 <- so this is the first week","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":307474,"byte_end":307540,"line_start":376,"line_end":376,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(from_isoywd_opt(2014, 52, Weekday::Sun), Some(from_ymd(2014, 12, 28)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":307545,"byte_end":307631,"line_start":377,"line_end":377,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(from_isoywd_opt(2014, 53, Weekday::Mon), None);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":307636,"byte_end":307698,"line_start":378,"line_end":378,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(from_isoywd_opt(2015, 1, Weekday::Mon), Some(from_ymd(2014, 12, 29)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":307703,"byte_end":307788,"line_start":379,"line_end":379,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":307793,"byte_end":307796,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ // 2015-W52  21 22 23 24 25 26 27    has 4+ days of old year,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":307801,"byte_end":307866,"line_start":381,"line_end":381,"column_start":5,"column_end":70}},{"value":"/ // 2015-W53  28 29 30 31  1  2  3 <- so this is the last week","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":307871,"byte_end":307936,"line_start":382,"line_end":382,"column_start":5,"column_end":70}},{"value":"/ // 2016-W01   4  5  6  7  8  9 10","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":307941,"byte_end":307978,"line_start":383,"line_end":383,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(from_isoywd_opt(2015, 52, Weekday::Sun), Some(from_ymd(2015, 12, 27)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":307983,"byte_end":308069,"line_start":384,"line_end":384,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(from_isoywd_opt(2015, 53, Weekday::Sun), Some(from_ymd(2016, 1, 3)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":308074,"byte_end":308158,"line_start":385,"line_end":385,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(from_isoywd_opt(2015, 54, Weekday::Mon), None);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":308163,"byte_end":308225,"line_start":386,"line_end":386,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(from_isoywd_opt(2016, 1, Weekday::Mon), Some(from_ymd(2016, 1, 4)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":308230,"byte_end":308313,"line_start":387,"line_end":387,"column_start":5,"column_end":88}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":308318,"byte_end":308325,"line_start":388,"line_end":388,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1086},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":311291,"byte_end":311312,"line_start":464,"line_end":464,"column_start":12,"column_end":33},"name":"from_num_days_from_ce","qualname":"<NaiveDate>::from_num_days_from_ce","value":"fn from_num_days_from_ce(i32) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from a day's number in the proleptic Gregorian calendar, with\n January 1, 1 being day 1.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` from a day's number in the proleptic Gregorian calendar, with","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":309564,"byte_end":309653,"line_start":420,"line_end":420,"column_start":5,"column_end":94}},{"value":"/ January 1, 1 being day 1.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":309658,"byte_end":309687,"line_start":421,"line_end":421,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":309692,"byte_end":309695,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ Panics if the date is out of range.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":309700,"byte_end":309739,"line_start":423,"line_end":423,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":309744,"byte_end":309747,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":309752,"byte_end":309765,"line_start":425,"line_end":425,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":309770,"byte_end":309773,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":309778,"byte_end":309785,"line_start":427,"line_end":427,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike, Weekday};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":309790,"byte_end":309837,"line_start":428,"line_end":428,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":309842,"byte_end":309845,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_num_days_from_ce(735671);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":309850,"byte_end":309903,"line_start":430,"line_end":430,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(d.num_days_from_ce(), 735671); // days since January 1, 1 CE","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":309908,"byte_end":309983,"line_start":431,"line_end":431,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(d.year(), 2015);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":309988,"byte_end":310019,"line_start":432,"line_end":432,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(d.month(), 3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":310024,"byte_end":310053,"line_start":433,"line_end":433,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(d.day(), 14);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":310058,"byte_end":310086,"line_start":434,"line_end":434,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(d.ordinal(), 73); // day of year","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":310091,"byte_end":310138,"line_start":435,"line_end":435,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(d.iso_week().year(), 2015);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":310143,"byte_end":310185,"line_start":436,"line_end":436,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(d.iso_week().week(), 11);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":310190,"byte_end":310230,"line_start":437,"line_end":437,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(d.weekday(), Weekday::Sat);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":310235,"byte_end":310277,"line_start":438,"line_end":438,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":310282,"byte_end":310289,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":310294,"byte_end":310297,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ While not directly supported by Chrono,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":310302,"byte_end":310345,"line_start":441,"line_end":441,"column_start":5,"column_end":48}},{"value":"/ it is easy to convert from the Julian day number","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":310350,"byte_end":310402,"line_start":442,"line_end":442,"column_start":5,"column_end":57}},{"value":"/ (January 1, 4713 BCE in the *Julian* calendar being Day 0)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":310407,"byte_end":310469,"line_start":443,"line_end":443,"column_start":5,"column_end":67}},{"value":"/ to Gregorian with this method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":310474,"byte_end":310508,"line_start":444,"line_end":444,"column_start":5,"column_end":39}},{"value":"/ (Note that this panics when `jd` is out of range.)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":310513,"byte_end":310567,"line_start":445,"line_end":445,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":310572,"byte_end":310575,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":310580,"byte_end":310587,"line_start":447,"line_end":447,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":310592,"byte_end":310618,"line_start":448,"line_end":448,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":310623,"byte_end":310626,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ fn jd_to_date(jd: i32) -> NaiveDate {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":310631,"byte_end":310672,"line_start":450,"line_end":450,"column_start":5,"column_end":46}},{"value":"/     // keep in mind that the Julian day number is 0-based","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":310677,"byte_end":310738,"line_start":451,"line_end":451,"column_start":5,"column_end":66}},{"value":"/     // while this method requires an 1-based number.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":310743,"byte_end":310799,"line_start":452,"line_end":452,"column_start":5,"column_end":61}},{"value":"/     NaiveDate::from_num_days_from_ce(jd - 1721425)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":310804,"byte_end":310858,"line_start":453,"line_end":453,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":310863,"byte_end":310868,"line_start":454,"line_end":454,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":310873,"byte_end":310876,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ // January 1, 4713 BCE in Julian = November 24, 4714 BCE in Gregorian","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":310881,"byte_end":310954,"line_start":456,"line_end":456,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(jd_to_date(0), NaiveDate::from_ymd(-4713, 11, 24));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":310959,"byte_end":311025,"line_start":457,"line_end":457,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":311030,"byte_end":311033,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(jd_to_date(1721426), NaiveDate::from_ymd(1, 1, 1));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":311038,"byte_end":311104,"line_start":459,"line_end":459,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(jd_to_date(2450000), NaiveDate::from_ymd(1995, 10, 9));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":311109,"byte_end":311179,"line_start":460,"line_end":460,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(jd_to_date(2451545), NaiveDate::from_ymd(2000, 1, 1));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":311184,"byte_end":311253,"line_start":461,"line_end":461,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":311258,"byte_end":311265,"line_start":462,"line_end":462,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":311270,"byte_end":311279,"line_start":463,"line_end":463,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1087},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":312259,"byte_end":312284,"line_start":488,"line_end":488,"column_start":12,"column_end":37},"name":"from_num_days_from_ce_opt","qualname":"<NaiveDate>::from_num_days_from_ce_opt","value":"fn from_num_days_from_ce_opt(i32) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from a day's number in the proleptic Gregorian calendar, with\n January 1, 1 being day 1.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` from a day's number in the proleptic Gregorian calendar, with","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":311429,"byte_end":311518,"line_start":468,"line_end":468,"column_start":5,"column_end":94}},{"value":"/ January 1, 1 being day 1.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":311523,"byte_end":311552,"line_start":469,"line_end":469,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":311557,"byte_end":311560,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the date is out of range.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":311565,"byte_end":311612,"line_start":471,"line_end":471,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":311617,"byte_end":311620,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":311625,"byte_end":311638,"line_start":473,"line_end":473,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":311643,"byte_end":311646,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":311651,"byte_end":311658,"line_start":475,"line_end":475,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":311663,"byte_end":311689,"line_start":476,"line_end":476,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":311694,"byte_end":311697,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ let from_ndays_opt = NaiveDate::from_num_days_from_ce_opt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":311702,"byte_end":311764,"line_start":478,"line_end":478,"column_start":5,"column_end":67}},{"value":"/ let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":311769,"byte_end":311808,"line_start":479,"line_end":479,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":311813,"byte_end":311816,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from_ndays_opt(730_000),      Some(from_ymd(1999, 9, 3)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":311821,"byte_end":311894,"line_start":481,"line_end":481,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(from_ndays_opt(1),            Some(from_ymd(1, 1, 1)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":311899,"byte_end":311969,"line_start":482,"line_end":482,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(from_ndays_opt(0),            Some(from_ymd(0, 12, 31)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":311974,"byte_end":312046,"line_start":483,"line_end":483,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(from_ndays_opt(-1),           Some(from_ymd(0, 12, 30)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":312051,"byte_end":312123,"line_start":484,"line_end":484,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(from_ndays_opt(100_000_000),  None);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":312128,"byte_end":312179,"line_start":485,"line_end":485,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(from_ndays_opt(-100_000_000), None);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":312184,"byte_end":312235,"line_start":486,"line_end":486,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":312240,"byte_end":312247,"line_start":487,"line_end":487,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1088},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":313992,"byte_end":314013,"line_start":521,"line_end":521,"column_start":12,"column_end":33},"name":"from_weekday_of_month","qualname":"<NaiveDate>::from_weekday_of_month","value":"fn from_weekday_of_month(i32, u32, Weekday, u8) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` by counting the number of occurrences of a particular day-of-week\n since the beginning of the given month.  For instance, if you want the 2nd Friday of March\n 2017, you would use `NaiveDate::from_weekday_of_month(2017, 3, Weekday::Fri, 2)`.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` by counting the number of occurrences of a particular day-of-week","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":312710,"byte_end":312803,"line_start":496,"line_end":496,"column_start":5,"column_end":98}},{"value":"/ since the beginning of the given month.  For instance, if you want the 2nd Friday of March","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":312808,"byte_end":312902,"line_start":497,"line_end":497,"column_start":5,"column_end":99}},{"value":"/ 2017, you would use `NaiveDate::from_weekday_of_month(2017, 3, Weekday::Fri, 2)`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":312907,"byte_end":312992,"line_start":498,"line_end":498,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":312997,"byte_end":313000,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":313005,"byte_end":313017,"line_start":500,"line_end":500,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":313022,"byte_end":313025,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ The resulting `NaiveDate` is guaranteed to be in `month`.  If `n` is larger than the number","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":313030,"byte_end":313125,"line_start":502,"line_end":502,"column_start":5,"column_end":100}},{"value":"/ of `weekday` in `month` (eg. the 6th Friday of March 2017) then this function will panic.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":313130,"byte_end":313223,"line_start":503,"line_end":503,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":313228,"byte_end":313231,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ `n` is 1-indexed.  Passing `n=0` will cause a panic.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":313236,"byte_end":313292,"line_start":505,"line_end":505,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":313297,"byte_end":313300,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":313305,"byte_end":313318,"line_start":507,"line_end":507,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":313323,"byte_end":313326,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":313331,"byte_end":313338,"line_start":509,"line_end":509,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Weekday};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":313343,"byte_end":313380,"line_start":510,"line_end":510,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":313385,"byte_end":313388,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ let from_weekday_of_month = NaiveDate::from_weekday_of_month;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":313393,"byte_end":313458,"line_start":512,"line_end":512,"column_start":5,"column_end":70}},{"value":"/ let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":313463,"byte_end":313502,"line_start":513,"line_end":513,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":313507,"byte_end":313510,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from_weekday_of_month(2018, 8, Weekday::Wed, 1), from_ymd(2018, 8, 1));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":313515,"byte_end":313601,"line_start":515,"line_end":515,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(from_weekday_of_month(2018, 8, Weekday::Fri, 1), from_ymd(2018, 8, 3));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":313606,"byte_end":313692,"line_start":516,"line_end":516,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(from_weekday_of_month(2018, 8, Weekday::Tue, 2), from_ymd(2018, 8, 14));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":313697,"byte_end":313784,"line_start":517,"line_end":517,"column_start":5,"column_end":92}},{"value":"/ assert_eq!(from_weekday_of_month(2018, 8, Weekday::Fri, 4), from_ymd(2018, 8, 24));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":313789,"byte_end":313876,"line_start":518,"line_end":518,"column_start":5,"column_end":92}},{"value":"/ assert_eq!(from_weekday_of_month(2018, 8, Weekday::Fri, 5), from_ymd(2018, 8, 31));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":313881,"byte_end":313968,"line_start":519,"line_end":519,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":313973,"byte_end":313980,"line_start":520,"line_end":520,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1089},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":314886,"byte_end":314911,"line_start":537,"line_end":537,"column_start":12,"column_end":37},"name":"from_weekday_of_month_opt","qualname":"<NaiveDate>::from_weekday_of_month_opt","value":"fn from_weekday_of_month_opt(i32, u32, Weekday, u8) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` by counting the number of occurrences of a particular day-of-week\n since the beginning of the given month.  For instance, if you want the 2nd Friday of March\n 2017, you would use `NaiveDate::from_weekday_of_month(2017, 3, Weekday::Fri, 2)`.  `n` is 1-indexed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` by counting the number of occurrences of a particular day-of-week","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":314186,"byte_end":314279,"line_start":525,"line_end":525,"column_start":5,"column_end":98}},{"value":"/ since the beginning of the given month.  For instance, if you want the 2nd Friday of March","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":314284,"byte_end":314378,"line_start":526,"line_end":526,"column_start":5,"column_end":99}},{"value":"/ 2017, you would use `NaiveDate::from_weekday_of_month(2017, 3, Weekday::Fri, 2)`.  `n` is 1-indexed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":314383,"byte_end":314487,"line_start":527,"line_end":527,"column_start":5,"column_end":109}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":314492,"byte_end":314495,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":314500,"byte_end":314507,"line_start":529,"line_end":529,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Weekday};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":314512,"byte_end":314549,"line_start":530,"line_end":530,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(NaiveDate::from_weekday_of_month_opt(2017, 3, Weekday::Fri, 2),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":314554,"byte_end":314632,"line_start":531,"line_end":531,"column_start":5,"column_end":83}},{"value":"/            NaiveDate::from_ymd_opt(2017, 3, 10))","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":314637,"byte_end":314689,"line_start":532,"line_end":532,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":314694,"byte_end":314701,"line_start":533,"line_end":533,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":314706,"byte_end":314709,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `n` out-of-range; ie. if `n` is larger than the number of `weekday` in","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":314714,"byte_end":314806,"line_start":535,"line_end":535,"column_start":5,"column_end":97}},{"value":"/ `month` (eg. the 6th Friday of March 2017), or if `n == 0`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":314811,"byte_end":314874,"line_start":536,"line_end":536,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1090},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":316923,"byte_end":316937,"line_start":594,"line_end":594,"column_start":12,"column_end":26},"name":"parse_from_str","qualname":"<NaiveDate>::parse_from_str","value":"fn parse_from_str<'_, '_>(&'_ str, &'_ str) -> ParseResult<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Parses a string with the specified format string and returns a new `NaiveDate`.\n See the [`format::strftime` module](../format/strftime/index.html)\n on the supported escape sequences.","sig":null,"attributes":[{"value":"/ Parses a string with the specified format string and returns a new `NaiveDate`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":315362,"byte_end":315445,"line_start":552,"line_end":552,"column_start":5,"column_end":88}},{"value":"/ See the [`format::strftime` module](../format/strftime/index.html)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":315450,"byte_end":315520,"line_start":553,"line_end":553,"column_start":5,"column_end":75}},{"value":"/ on the supported escape sequences.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":315525,"byte_end":315563,"line_start":554,"line_end":554,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":315568,"byte_end":315571,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":315576,"byte_end":315589,"line_start":556,"line_end":556,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":315594,"byte_end":315597,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":315602,"byte_end":315609,"line_start":558,"line_end":558,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":315614,"byte_end":315640,"line_start":559,"line_end":559,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":315645,"byte_end":315648,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ let parse_from_str = NaiveDate::parse_from_str;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":315653,"byte_end":315704,"line_start":561,"line_end":561,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":315709,"byte_end":315712,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(parse_from_str(\"2015-09-05\", \"%Y-%m-%d\"),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":315717,"byte_end":315773,"line_start":563,"line_end":563,"column_start":5,"column_end":61}},{"value":"/            Ok(NaiveDate::from_ymd(2015, 9, 5)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":315778,"byte_end":315830,"line_start":564,"line_end":564,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(parse_from_str(\"5sep2015\", \"%d%b%Y\"),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":315835,"byte_end":315887,"line_start":565,"line_end":565,"column_start":5,"column_end":57}},{"value":"/            Ok(NaiveDate::from_ymd(2015, 9, 5)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":315892,"byte_end":315944,"line_start":566,"line_end":566,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":315949,"byte_end":315956,"line_start":567,"line_end":567,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":315961,"byte_end":315964,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ Time and offset is ignored for the purpose of parsing.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":315969,"byte_end":316027,"line_start":569,"line_end":569,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":316032,"byte_end":316035,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":316040,"byte_end":316047,"line_start":571,"line_end":571,"column_start":5,"column_end":12}},{"value":"/ # use chrono::NaiveDate;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":316052,"byte_end":316080,"line_start":572,"line_end":572,"column_start":5,"column_end":33}},{"value":"/ # let parse_from_str = NaiveDate::parse_from_str;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":316085,"byte_end":316138,"line_start":573,"line_end":573,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(parse_from_str(\"2014-5-17T12:34:56+09:30\", \"%Y-%m-%dT%H:%M:%S%z\"),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":316143,"byte_end":316224,"line_start":574,"line_end":574,"column_start":5,"column_end":86}},{"value":"/            Ok(NaiveDate::from_ymd(2014, 5, 17)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":316229,"byte_end":316282,"line_start":575,"line_end":575,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":316287,"byte_end":316294,"line_start":576,"line_end":576,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":316299,"byte_end":316302,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ Out-of-bound dates or insufficient fields are errors.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":316307,"byte_end":316364,"line_start":578,"line_end":578,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":316369,"byte_end":316372,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":316377,"byte_end":316384,"line_start":580,"line_end":580,"column_start":5,"column_end":12}},{"value":"/ # use chrono::NaiveDate;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":316389,"byte_end":316417,"line_start":581,"line_end":581,"column_start":5,"column_end":33}},{"value":"/ # let parse_from_str = NaiveDate::parse_from_str;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":316422,"byte_end":316475,"line_start":582,"line_end":582,"column_start":5,"column_end":58}},{"value":"/ assert!(parse_from_str(\"2015/9\", \"%Y/%m\").is_err());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":316480,"byte_end":316536,"line_start":583,"line_end":583,"column_start":5,"column_end":61}},{"value":"/ assert!(parse_from_str(\"2015/9/31\", \"%Y/%m/%d\").is_err());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":316541,"byte_end":316603,"line_start":584,"line_end":584,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":316608,"byte_end":316615,"line_start":585,"line_end":585,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":316620,"byte_end":316623,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ All parsed fields should be consistent to each other, otherwise it's an error.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":316628,"byte_end":316710,"line_start":587,"line_end":587,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":316715,"byte_end":316718,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":316723,"byte_end":316730,"line_start":589,"line_end":589,"column_start":5,"column_end":12}},{"value":"/ # use chrono::NaiveDate;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":316735,"byte_end":316763,"line_start":590,"line_end":590,"column_start":5,"column_end":33}},{"value":"/ # let parse_from_str = NaiveDate::parse_from_str;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":316768,"byte_end":316821,"line_start":591,"line_end":591,"column_start":5,"column_end":58}},{"value":"/ assert!(parse_from_str(\"Sat, 09 Aug 2013\", \"%a, %d %b %Y\").is_err());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":316826,"byte_end":316899,"line_start":592,"line_end":592,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":316904,"byte_end":316911,"line_start":593,"line_end":593,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1091},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":317765,"byte_end":317783,"line_start":617,"line_end":617,"column_start":12,"column_end":30},"name":"checked_add_months","qualname":"<NaiveDate>::checked_add_months","value":"fn checked_add_months(Self, Months) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Add a duration in [`Months`] to the date","sig":null,"attributes":[{"value":"/ Add a duration in [`Months`] to the date","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":317125,"byte_end":317169,"line_start":600,"line_end":600,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":317174,"byte_end":317177,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ If the day would be out of range for the resulting month, use the last day for that month.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":317182,"byte_end":317276,"line_start":602,"line_end":602,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":317281,"byte_end":317284,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the resulting date would be out of range.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":317289,"byte_end":317352,"line_start":604,"line_end":604,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":317357,"byte_end":317360,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":317365,"byte_end":317372,"line_start":606,"line_end":606,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{NaiveDate, Months};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":317377,"byte_end":317415,"line_start":607,"line_end":607,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":317420,"byte_end":317435,"line_start":608,"line_end":608,"column_start":5,"column_end":20}},{"value":"/     NaiveDate::from_ymd(2022, 2, 20).checked_add_months(Months::new(6)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":317440,"byte_end":317516,"line_start":609,"line_end":609,"column_start":5,"column_end":81}},{"value":"/     Some(NaiveDate::from_ymd(2022, 8, 20))","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":317521,"byte_end":317567,"line_start":610,"line_end":610,"column_start":5,"column_end":51}},{"value":"/ );","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":317572,"byte_end":317578,"line_start":611,"line_end":611,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":317583,"byte_end":317598,"line_start":612,"line_end":612,"column_start":5,"column_end":20}},{"value":"/     NaiveDate::from_ymd(2022, 7, 31).checked_add_months(Months::new(2)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":317603,"byte_end":317679,"line_start":613,"line_end":613,"column_start":5,"column_end":81}},{"value":"/     Some(NaiveDate::from_ymd(2022, 9, 30))","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":317684,"byte_end":317730,"line_start":614,"line_end":614,"column_start":5,"column_end":51}},{"value":"/ );","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":317735,"byte_end":317741,"line_start":615,"line_end":615,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":317746,"byte_end":317753,"line_start":616,"line_end":616,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1092},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":318530,"byte_end":318548,"line_start":641,"line_end":641,"column_start":12,"column_end":30},"name":"checked_sub_months","qualname":"<NaiveDate>::checked_sub_months","value":"fn checked_sub_months(Self, Months) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Subtract a duration in [`Months`] from the date","sig":null,"attributes":[{"value":"/ Subtract a duration in [`Months`] from the date","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":318046,"byte_end":318097,"line_start":628,"line_end":628,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":318102,"byte_end":318105,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ If the day would be out of range for the resulting month, use the last day for that month.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":318110,"byte_end":318204,"line_start":630,"line_end":630,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":318209,"byte_end":318212,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the resulting date would be out of range.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":318217,"byte_end":318280,"line_start":632,"line_end":632,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":318285,"byte_end":318288,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":318293,"byte_end":318300,"line_start":634,"line_end":634,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{NaiveDate, Months};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":318305,"byte_end":318343,"line_start":635,"line_end":635,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":318348,"byte_end":318363,"line_start":636,"line_end":636,"column_start":5,"column_end":20}},{"value":"/     NaiveDate::from_ymd(2022, 2, 20).checked_sub_months(Months::new(6)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":318368,"byte_end":318444,"line_start":637,"line_end":637,"column_start":5,"column_end":81}},{"value":"/     Some(NaiveDate::from_ymd(2021, 8, 20))","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":318449,"byte_end":318495,"line_start":638,"line_end":638,"column_start":5,"column_end":51}},{"value":"/ );","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":318500,"byte_end":318506,"line_start":639,"line_end":639,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":318511,"byte_end":318518,"line_start":640,"line_end":640,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1094},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":320592,"byte_end":320600,"line_start":710,"line_end":710,"column_start":12,"column_end":20},"name":"and_time","qualname":"<NaiveDate>::and_time","value":"fn and_time<'_>(&'_ Self, NaiveTime) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date and given `NaiveTime`.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from the current date and given `NaiveTime`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":320133,"byte_end":320209,"line_start":695,"line_end":695,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":320214,"byte_end":320217,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":320222,"byte_end":320235,"line_start":697,"line_end":697,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":320240,"byte_end":320243,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":320248,"byte_end":320255,"line_start":699,"line_end":699,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveTime, NaiveDateTime};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":320260,"byte_end":320314,"line_start":700,"line_end":700,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":320319,"byte_end":320322,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":320327,"byte_end":320371,"line_start":702,"line_end":702,"column_start":5,"column_end":49}},{"value":"/ let t = NaiveTime::from_hms_milli(12, 34, 56, 789);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":320376,"byte_end":320431,"line_start":703,"line_end":703,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":320436,"byte_end":320439,"line_start":704,"line_end":704,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = d.and_time(t);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":320444,"byte_end":320486,"line_start":705,"line_end":705,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(dt.date(), d);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":320491,"byte_end":320520,"line_start":706,"line_end":706,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(dt.time(), t);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":320525,"byte_end":320554,"line_start":707,"line_end":707,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":320559,"byte_end":320566,"line_start":708,"line_end":708,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":320571,"byte_end":320580,"line_start":709,"line_end":709,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1095},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":321414,"byte_end":321421,"line_start":734,"line_end":734,"column_start":12,"column_end":19},"name":"and_hms","qualname":"<NaiveDate>::and_hms","value":"fn and_hms<'_>(&'_ Self, u32, u32, u32) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute and second.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from the current date, hour, minute and second.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":320695,"byte_end":320774,"line_start":714,"line_end":714,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":320779,"byte_end":320782,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ No [leap second](./struct.NaiveTime.html#leap-second-handling) is allowed here;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":320787,"byte_end":320870,"line_start":716,"line_end":716,"column_start":5,"column_end":88}},{"value":"/ use `NaiveDate::and_hms_*` methods with a subsecond parameter instead.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":320875,"byte_end":320949,"line_start":717,"line_end":717,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":320954,"byte_end":320957,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute and/or second.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":320962,"byte_end":321011,"line_start":719,"line_end":719,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":321016,"byte_end":321019,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":321024,"byte_end":321037,"line_start":721,"line_end":721,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":321042,"byte_end":321045,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":321050,"byte_end":321057,"line_start":723,"line_end":723,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike, Timelike, Weekday};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":321062,"byte_end":321134,"line_start":724,"line_end":724,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":321139,"byte_end":321142,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":321147,"byte_end":321191,"line_start":726,"line_end":726,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":321196,"byte_end":321199,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = d.and_hms(12, 34, 56);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":321204,"byte_end":321254,"line_start":728,"line_end":728,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(dt.year(), 2015);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":321259,"byte_end":321291,"line_start":729,"line_end":729,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(dt.weekday(), Weekday::Wed);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":321296,"byte_end":321339,"line_start":730,"line_end":730,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(dt.second(), 56);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":321344,"byte_end":321376,"line_start":731,"line_end":731,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":321381,"byte_end":321388,"line_start":732,"line_end":732,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":321393,"byte_end":321402,"line_start":733,"line_end":733,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":322305,"byte_end":322316,"line_start":757,"line_end":757,"column_start":12,"column_end":23},"name":"and_hms_opt","qualname":"<NaiveDate>::and_hms_opt","value":"fn and_hms_opt<'_>(&'_ Self, u32, u32, u32) -> Option<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute and second.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from the current date, hour, minute and second.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":321554,"byte_end":321633,"line_start":738,"line_end":738,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":321638,"byte_end":321641,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ No [leap second](./struct.NaiveTime.html#leap-second-handling) is allowed here;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":321646,"byte_end":321729,"line_start":740,"line_end":740,"column_start":5,"column_end":88}},{"value":"/ use `NaiveDate::and_hms_*_opt` methods with a subsecond parameter instead.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":321734,"byte_end":321812,"line_start":741,"line_end":741,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":321817,"byte_end":321820,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute and/or second.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":321825,"byte_end":321882,"line_start":743,"line_end":743,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":321887,"byte_end":321890,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":321895,"byte_end":321908,"line_start":745,"line_end":745,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":321913,"byte_end":321916,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":321921,"byte_end":321928,"line_start":747,"line_end":747,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":321933,"byte_end":321959,"line_start":748,"line_end":748,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":321964,"byte_end":321967,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":321972,"byte_end":322016,"line_start":750,"line_end":750,"column_start":5,"column_end":49}},{"value":"/ assert!(d.and_hms_opt(12, 34, 56).is_some());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":322021,"byte_end":322070,"line_start":751,"line_end":751,"column_start":5,"column_end":54}},{"value":"/ assert!(d.and_hms_opt(12, 34, 60).is_none()); // use `and_hms_milli_opt` instead","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":322075,"byte_end":322159,"line_start":752,"line_end":752,"column_start":5,"column_end":89}},{"value":"/ assert!(d.and_hms_opt(12, 60, 56).is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":322164,"byte_end":322213,"line_start":753,"line_end":753,"column_start":5,"column_end":54}},{"value":"/ assert!(d.and_hms_opt(24, 34, 56).is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":322218,"byte_end":322267,"line_start":754,"line_end":754,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":322272,"byte_end":322279,"line_start":755,"line_end":755,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":322284,"byte_end":322293,"line_start":756,"line_end":756,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1098},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":323253,"byte_end":323266,"line_start":782,"line_end":782,"column_start":12,"column_end":25},"name":"and_hms_milli","qualname":"<NaiveDate>::and_hms_milli","value":"fn and_hms_milli<'_>(&'_ Self, u32, u32, u32, u32) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":322473,"byte_end":322565,"line_start":761,"line_end":761,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":322570,"byte_end":322573,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ The millisecond part can exceed 1,000","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":322578,"byte_end":322619,"line_start":763,"line_end":763,"column_start":5,"column_end":46}},{"value":"/ in order to represent the [leap second](./struct.NaiveTime.html#leap-second-handling).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":322624,"byte_end":322714,"line_start":764,"line_end":764,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":322719,"byte_end":322722,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute, second and/or millisecond.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":322727,"byte_end":322789,"line_start":766,"line_end":766,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":322794,"byte_end":322797,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":322802,"byte_end":322815,"line_start":768,"line_end":768,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":322820,"byte_end":322823,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":322828,"byte_end":322835,"line_start":770,"line_end":770,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike, Timelike, Weekday};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":322840,"byte_end":322912,"line_start":771,"line_end":771,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":322917,"byte_end":322920,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":322925,"byte_end":322969,"line_start":773,"line_end":773,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":322974,"byte_end":322977,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = d.and_hms_milli(12, 34, 56, 789);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":322982,"byte_end":323043,"line_start":775,"line_end":775,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(dt.year(), 2015);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":323048,"byte_end":323080,"line_start":776,"line_end":776,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(dt.weekday(), Weekday::Wed);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":323085,"byte_end":323128,"line_start":777,"line_end":777,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(dt.second(), 56);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":323133,"byte_end":323165,"line_start":778,"line_end":778,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(dt.nanosecond(), 789_000_000);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":323170,"byte_end":323215,"line_start":779,"line_end":779,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":323220,"byte_end":323227,"line_start":780,"line_end":780,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":323232,"byte_end":323241,"line_start":781,"line_end":781,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1099},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":324337,"byte_end":324354,"line_start":807,"line_end":807,"column_start":12,"column_end":29},"name":"and_hms_milli_opt","qualname":"<NaiveDate>::and_hms_milli_opt","value":"fn and_hms_milli_opt<'_>(&'_ Self, u32, u32, u32, u32)\n-> Option<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":323424,"byte_end":323516,"line_start":786,"line_end":786,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":323521,"byte_end":323524,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ The millisecond part can exceed 1,000","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":323529,"byte_end":323570,"line_start":788,"line_end":788,"column_start":5,"column_end":46}},{"value":"/ in order to represent the [leap second](./struct.NaiveTime.html#leap-second-handling).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":323575,"byte_end":323665,"line_start":789,"line_end":789,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":323670,"byte_end":323673,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute, second and/or millisecond.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":323678,"byte_end":323748,"line_start":791,"line_end":791,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":323753,"byte_end":323756,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":323761,"byte_end":323774,"line_start":793,"line_end":793,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":323779,"byte_end":323782,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":323787,"byte_end":323794,"line_start":795,"line_end":795,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":323799,"byte_end":323825,"line_start":796,"line_end":796,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":323830,"byte_end":323833,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":323838,"byte_end":323882,"line_start":798,"line_end":798,"column_start":5,"column_end":49}},{"value":"/ assert!(d.and_hms_milli_opt(12, 34, 56,   789).is_some());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":323887,"byte_end":323949,"line_start":799,"line_end":799,"column_start":5,"column_end":67}},{"value":"/ assert!(d.and_hms_milli_opt(12, 34, 59, 1_789).is_some()); // leap second","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":323954,"byte_end":324031,"line_start":800,"line_end":800,"column_start":5,"column_end":82}},{"value":"/ assert!(d.and_hms_milli_opt(12, 34, 59, 2_789).is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":324036,"byte_end":324098,"line_start":801,"line_end":801,"column_start":5,"column_end":67}},{"value":"/ assert!(d.and_hms_milli_opt(12, 34, 60,   789).is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":324103,"byte_end":324165,"line_start":802,"line_end":802,"column_start":5,"column_end":67}},{"value":"/ assert!(d.and_hms_milli_opt(12, 60, 56,   789).is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":324170,"byte_end":324232,"line_start":803,"line_end":803,"column_start":5,"column_end":67}},{"value":"/ assert!(d.and_hms_milli_opt(24, 34, 56,   789).is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":324237,"byte_end":324299,"line_start":804,"line_end":804,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":324304,"byte_end":324311,"line_start":805,"line_end":805,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":324316,"byte_end":324325,"line_start":806,"line_end":806,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1101},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":325371,"byte_end":325384,"line_start":838,"line_end":838,"column_start":12,"column_end":25},"name":"and_hms_micro","qualname":"<NaiveDate>::and_hms_micro","value":"fn and_hms_micro<'_>(&'_ Self, u32, u32, u32, u32) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":324583,"byte_end":324675,"line_start":817,"line_end":817,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":324680,"byte_end":324683,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ The microsecond part can exceed 1,000,000","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":324688,"byte_end":324733,"line_start":819,"line_end":819,"column_start":5,"column_end":50}},{"value":"/ in order to represent the [leap second](./struct.NaiveTime.html#leap-second-handling).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":324738,"byte_end":324828,"line_start":820,"line_end":820,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":324833,"byte_end":324836,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute, second and/or microsecond.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":324841,"byte_end":324903,"line_start":822,"line_end":822,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":324908,"byte_end":324911,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":324916,"byte_end":324929,"line_start":824,"line_end":824,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":324934,"byte_end":324937,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":324942,"byte_end":324949,"line_start":826,"line_end":826,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike, Timelike, Weekday};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":324954,"byte_end":325026,"line_start":827,"line_end":827,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":325031,"byte_end":325034,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":325039,"byte_end":325083,"line_start":829,"line_end":829,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":325088,"byte_end":325091,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = d.and_hms_micro(12, 34, 56, 789_012);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":325096,"byte_end":325161,"line_start":831,"line_end":831,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(dt.year(), 2015);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":325166,"byte_end":325198,"line_start":832,"line_end":832,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(dt.weekday(), Weekday::Wed);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":325203,"byte_end":325246,"line_start":833,"line_end":833,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(dt.second(), 56);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":325251,"byte_end":325283,"line_start":834,"line_end":834,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(dt.nanosecond(), 789_012_000);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":325288,"byte_end":325333,"line_start":835,"line_end":835,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":325338,"byte_end":325345,"line_start":836,"line_end":836,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":325350,"byte_end":325359,"line_start":837,"line_end":837,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1102},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":326483,"byte_end":326500,"line_start":863,"line_end":863,"column_start":12,"column_end":29},"name":"and_hms_micro_opt","qualname":"<NaiveDate>::and_hms_micro_opt","value":"fn and_hms_micro_opt<'_>(&'_ Self, u32, u32, u32, u32)\n-> Option<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":325542,"byte_end":325634,"line_start":842,"line_end":842,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":325639,"byte_end":325642,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ The microsecond part can exceed 1,000,000","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":325647,"byte_end":325692,"line_start":844,"line_end":844,"column_start":5,"column_end":50}},{"value":"/ in order to represent the [leap second](./struct.NaiveTime.html#leap-second-handling).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":325697,"byte_end":325787,"line_start":845,"line_end":845,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":325792,"byte_end":325795,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute, second and/or microsecond.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":325800,"byte_end":325870,"line_start":847,"line_end":847,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":325875,"byte_end":325878,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":325883,"byte_end":325896,"line_start":849,"line_end":849,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":325901,"byte_end":325904,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":325909,"byte_end":325916,"line_start":851,"line_end":851,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":325921,"byte_end":325947,"line_start":852,"line_end":852,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":325952,"byte_end":325955,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":325960,"byte_end":326004,"line_start":854,"line_end":854,"column_start":5,"column_end":49}},{"value":"/ assert!(d.and_hms_micro_opt(12, 34, 56,   789_012).is_some());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":326009,"byte_end":326075,"line_start":855,"line_end":855,"column_start":5,"column_end":71}},{"value":"/ assert!(d.and_hms_micro_opt(12, 34, 59, 1_789_012).is_some()); // leap second","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":326080,"byte_end":326161,"line_start":856,"line_end":856,"column_start":5,"column_end":86}},{"value":"/ assert!(d.and_hms_micro_opt(12, 34, 59, 2_789_012).is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":326166,"byte_end":326232,"line_start":857,"line_end":857,"column_start":5,"column_end":71}},{"value":"/ assert!(d.and_hms_micro_opt(12, 34, 60,   789_012).is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":326237,"byte_end":326303,"line_start":858,"line_end":858,"column_start":5,"column_end":71}},{"value":"/ assert!(d.and_hms_micro_opt(12, 60, 56,   789_012).is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":326308,"byte_end":326374,"line_start":859,"line_end":859,"column_start":5,"column_end":71}},{"value":"/ assert!(d.and_hms_micro_opt(24, 34, 56,   789_012).is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":326379,"byte_end":326445,"line_start":860,"line_end":860,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":326450,"byte_end":326457,"line_start":861,"line_end":861,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":326462,"byte_end":326471,"line_start":862,"line_end":862,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1104},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":327521,"byte_end":327533,"line_start":894,"line_end":894,"column_start":12,"column_end":24},"name":"and_hms_nano","qualname":"<NaiveDate>::and_hms_nano","value":"fn and_hms_nano<'_>(&'_ Self, u32, u32, u32, u32) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":326729,"byte_end":326820,"line_start":873,"line_end":873,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":326825,"byte_end":326828,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/ The nanosecond part can exceed 1,000,000,000","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":326833,"byte_end":326881,"line_start":875,"line_end":875,"column_start":5,"column_end":53}},{"value":"/ in order to represent the [leap second](./struct.NaiveTime.html#leap-second-handling).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":326886,"byte_end":326976,"line_start":876,"line_end":876,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":326981,"byte_end":326984,"line_start":877,"line_end":877,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute, second and/or nanosecond.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":326989,"byte_end":327050,"line_start":878,"line_end":878,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":327055,"byte_end":327058,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":327063,"byte_end":327076,"line_start":880,"line_end":880,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":327081,"byte_end":327084,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":327089,"byte_end":327096,"line_start":882,"line_end":882,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike, Timelike, Weekday};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":327101,"byte_end":327173,"line_start":883,"line_end":883,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":327178,"byte_end":327181,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":327186,"byte_end":327230,"line_start":885,"line_end":885,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":327235,"byte_end":327238,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = d.and_hms_nano(12, 34, 56, 789_012_345);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":327243,"byte_end":327311,"line_start":887,"line_end":887,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(dt.year(), 2015);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":327316,"byte_end":327348,"line_start":888,"line_end":888,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(dt.weekday(), Weekday::Wed);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":327353,"byte_end":327396,"line_start":889,"line_end":889,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(dt.second(), 56);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":327401,"byte_end":327433,"line_start":890,"line_end":890,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(dt.nanosecond(), 789_012_345);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":327438,"byte_end":327483,"line_start":891,"line_end":891,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":327488,"byte_end":327495,"line_start":892,"line_end":892,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":327500,"byte_end":327509,"line_start":893,"line_end":893,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1105},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":328648,"byte_end":328664,"line_start":919,"line_end":919,"column_start":12,"column_end":28},"name":"and_hms_nano_opt","qualname":"<NaiveDate>::and_hms_nano_opt","value":"fn and_hms_nano_opt<'_>(&'_ Self, u32, u32, u32, u32) -> Option<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":327688,"byte_end":327779,"line_start":898,"line_end":898,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":327784,"byte_end":327787,"line_start":899,"line_end":899,"column_start":5,"column_end":8}},{"value":"/ The nanosecond part can exceed 1,000,000,000","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":327792,"byte_end":327840,"line_start":900,"line_end":900,"column_start":5,"column_end":53}},{"value":"/ in order to represent the [leap second](./struct.NaiveTime.html#leap-second-handling).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":327845,"byte_end":327935,"line_start":901,"line_end":901,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":327940,"byte_end":327943,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute, second and/or nanosecond.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":327948,"byte_end":328017,"line_start":903,"line_end":903,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":328022,"byte_end":328025,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":328030,"byte_end":328043,"line_start":905,"line_end":905,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":328048,"byte_end":328051,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":328056,"byte_end":328063,"line_start":907,"line_end":907,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":328068,"byte_end":328094,"line_start":908,"line_end":908,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":328099,"byte_end":328102,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":328107,"byte_end":328151,"line_start":910,"line_end":910,"column_start":5,"column_end":49}},{"value":"/ assert!(d.and_hms_nano_opt(12, 34, 56,   789_012_345).is_some());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":328156,"byte_end":328225,"line_start":911,"line_end":911,"column_start":5,"column_end":74}},{"value":"/ assert!(d.and_hms_nano_opt(12, 34, 59, 1_789_012_345).is_some()); // leap second","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":328230,"byte_end":328314,"line_start":912,"line_end":912,"column_start":5,"column_end":89}},{"value":"/ assert!(d.and_hms_nano_opt(12, 34, 59, 2_789_012_345).is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":328319,"byte_end":328388,"line_start":913,"line_end":913,"column_start":5,"column_end":74}},{"value":"/ assert!(d.and_hms_nano_opt(12, 34, 60,   789_012_345).is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":328393,"byte_end":328462,"line_start":914,"line_end":914,"column_start":5,"column_end":74}},{"value":"/ assert!(d.and_hms_nano_opt(12, 60, 56,   789_012_345).is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":328467,"byte_end":328536,"line_start":915,"line_end":915,"column_start":5,"column_end":74}},{"value":"/ assert!(d.and_hms_nano_opt(24, 34, 56,   789_012_345).is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":328541,"byte_end":328610,"line_start":916,"line_end":916,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":328615,"byte_end":328622,"line_start":917,"line_end":917,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":328627,"byte_end":328636,"line_start":918,"line_end":918,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1111},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":330354,"byte_end":330358,"line_start":976,"line_end":976,"column_start":12,"column_end":16},"name":"succ","qualname":"<NaiveDate>::succ","value":"fn succ<'_>(&'_ Self) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` for the next calendar date.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` for the next calendar date.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":329824,"byte_end":329879,"line_start":962,"line_end":962,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":329884,"byte_end":329887,"line_start":963,"line_end":963,"column_start":5,"column_end":8}},{"value":"/ Panics when `self` is the last representable date.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":329892,"byte_end":329946,"line_start":964,"line_end":964,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":329951,"byte_end":329954,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":329959,"byte_end":329972,"line_start":966,"line_end":966,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":329977,"byte_end":329980,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":329985,"byte_end":329992,"line_start":968,"line_end":968,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":329997,"byte_end":330023,"line_start":969,"line_end":969,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":330028,"byte_end":330031,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015,  6,  3).succ(), NaiveDate::from_ymd(2015, 6, 4));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":330036,"byte_end":330126,"line_start":971,"line_end":971,"column_start":5,"column_end":95}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015,  6, 30).succ(), NaiveDate::from_ymd(2015, 7, 1));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":330131,"byte_end":330221,"line_start":972,"line_end":972,"column_start":5,"column_end":95}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 12, 31).succ(), NaiveDate::from_ymd(2016, 1, 1));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":330226,"byte_end":330316,"line_start":973,"line_end":973,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":330321,"byte_end":330328,"line_start":974,"line_end":974,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":330333,"byte_end":330342,"line_start":975,"line_end":975,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1112},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":330867,"byte_end":330875,"line_start":994,"line_end":994,"column_start":12,"column_end":20},"name":"succ_opt","qualname":"<NaiveDate>::succ_opt","value":"fn succ_opt<'_>(&'_ Self) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` for the next calendar date.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` for the next calendar date.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":330439,"byte_end":330494,"line_start":980,"line_end":980,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":330499,"byte_end":330502,"line_start":981,"line_end":981,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when `self` is the last representable date.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":330507,"byte_end":330569,"line_start":982,"line_end":982,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":330574,"byte_end":330577,"line_start":983,"line_end":983,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":330582,"byte_end":330595,"line_start":984,"line_end":984,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":330600,"byte_end":330603,"line_start":985,"line_end":985,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":330608,"byte_end":330615,"line_start":986,"line_end":986,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":330620,"byte_end":330646,"line_start":987,"line_end":987,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":330651,"byte_end":330654,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 6, 3).succ_opt(),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":330659,"byte_end":330717,"line_start":989,"line_end":989,"column_start":5,"column_end":63}},{"value":"/            Some(NaiveDate::from_ymd(2015, 6, 4)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":330722,"byte_end":330776,"line_start":990,"line_end":990,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(NaiveDate::MAX.succ_opt(), None);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":330781,"byte_end":330829,"line_start":991,"line_end":991,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":330834,"byte_end":330841,"line_start":992,"line_end":992,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":330846,"byte_end":330855,"line_start":993,"line_end":993,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1114},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":331550,"byte_end":331554,"line_start":1012,"line_end":1012,"column_start":12,"column_end":16},"name":"pred","qualname":"<NaiveDate>::pred","value":"fn pred<'_>(&'_ Self) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` for the previous calendar date.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` for the previous calendar date.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":331015,"byte_end":331074,"line_start":998,"line_end":998,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":331079,"byte_end":331082,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ Panics when `self` is the first representable date.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":331087,"byte_end":331142,"line_start":1000,"line_end":1000,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":331147,"byte_end":331150,"line_start":1001,"line_end":1001,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":331155,"byte_end":331168,"line_start":1002,"line_end":1002,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":331173,"byte_end":331176,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":331181,"byte_end":331188,"line_start":1004,"line_end":1004,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":331193,"byte_end":331219,"line_start":1005,"line_end":1005,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":331224,"byte_end":331227,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 6, 3).pred(), NaiveDate::from_ymd(2015,  6,  2));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":331232,"byte_end":331322,"line_start":1007,"line_end":1007,"column_start":5,"column_end":95}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 6, 1).pred(), NaiveDate::from_ymd(2015,  5, 31));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":331327,"byte_end":331417,"line_start":1008,"line_end":1008,"column_start":5,"column_end":95}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 1, 1).pred(), NaiveDate::from_ymd(2014, 12, 31));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":331422,"byte_end":331512,"line_start":1009,"line_end":1009,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":331517,"byte_end":331524,"line_start":1010,"line_end":1010,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":331529,"byte_end":331538,"line_start":1011,"line_end":1011,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1115},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":332068,"byte_end":332076,"line_start":1030,"line_end":1030,"column_start":12,"column_end":20},"name":"pred_opt","qualname":"<NaiveDate>::pred_opt","value":"fn pred_opt<'_>(&'_ Self) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` for the previous calendar date.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` for the previous calendar date.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":331635,"byte_end":331694,"line_start":1016,"line_end":1016,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":331699,"byte_end":331702,"line_start":1017,"line_end":1017,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when `self` is the first representable date.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":331707,"byte_end":331770,"line_start":1018,"line_end":1018,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":331775,"byte_end":331778,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":331783,"byte_end":331796,"line_start":1020,"line_end":1020,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":331801,"byte_end":331804,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":331809,"byte_end":331816,"line_start":1022,"line_end":1022,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":331821,"byte_end":331847,"line_start":1023,"line_end":1023,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":331852,"byte_end":331855,"line_start":1024,"line_end":1024,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 6, 3).pred_opt(),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":331860,"byte_end":331918,"line_start":1025,"line_end":1025,"column_start":5,"column_end":63}},{"value":"/            Some(NaiveDate::from_ymd(2015, 6, 2)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":331923,"byte_end":331977,"line_start":1026,"line_end":1026,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(NaiveDate::MIN.pred_opt(), None);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":331982,"byte_end":332030,"line_start":1027,"line_end":1027,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":332035,"byte_end":332042,"line_start":1028,"line_end":1028,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":332047,"byte_end":332056,"line_start":1029,"line_end":1029,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1117},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":333000,"byte_end":333018,"line_start":1052,"line_end":1052,"column_start":12,"column_end":30},"name":"checked_add_signed","qualname":"<NaiveDate>::checked_add_signed","value":"fn checked_add_signed(Self, OldDuration) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Adds the `days` part of given `Duration` to the current date.","sig":null,"attributes":[{"value":"/ Adds the `days` part of given `Duration` to the current date.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":332218,"byte_end":332283,"line_start":1034,"line_end":1034,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":332288,"byte_end":332291,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when it will result in overflow.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":332296,"byte_end":332347,"line_start":1036,"line_end":1036,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":332352,"byte_end":332355,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":332360,"byte_end":332373,"line_start":1038,"line_end":1038,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":332378,"byte_end":332381,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":332386,"byte_end":332393,"line_start":1040,"line_end":1040,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Duration, NaiveDate};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":332398,"byte_end":332436,"line_start":1041,"line_end":1041,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":332441,"byte_end":332444,"line_start":1042,"line_end":1042,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 9, 5);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":332449,"byte_end":332493,"line_start":1043,"line_end":1043,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(d.checked_add_signed(Duration::days(40)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":332498,"byte_end":332554,"line_start":1044,"line_end":1044,"column_start":5,"column_end":61}},{"value":"/            Some(NaiveDate::from_ymd(2015, 10, 15)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":332559,"byte_end":332615,"line_start":1045,"line_end":1045,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(d.checked_add_signed(Duration::days(-40)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":332620,"byte_end":332677,"line_start":1046,"line_end":1046,"column_start":5,"column_end":62}},{"value":"/            Some(NaiveDate::from_ymd(2015, 7, 27)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":332682,"byte_end":332737,"line_start":1047,"line_end":1047,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(d.checked_add_signed(Duration::days(1_000_000_000)), None);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":332742,"byte_end":332816,"line_start":1048,"line_end":1048,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(d.checked_add_signed(Duration::days(-1_000_000_000)), None);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":332821,"byte_end":332896,"line_start":1049,"line_end":1049,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(NaiveDate::MAX.checked_add_signed(Duration::days(1)), None);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":332901,"byte_end":332976,"line_start":1050,"line_end":1050,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":332981,"byte_end":332988,"line_start":1051,"line_end":1051,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1118},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":334483,"byte_end":334501,"line_start":1083,"line_end":1083,"column_start":12,"column_end":30},"name":"checked_sub_signed","qualname":"<NaiveDate>::checked_sub_signed","value":"fn checked_sub_signed(Self, OldDuration) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Subtracts the `days` part of given `Duration` from the current date.","sig":null,"attributes":[{"value":"/ Subtracts the `days` part of given `Duration` from the current date.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":333694,"byte_end":333766,"line_start":1065,"line_end":1065,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":333771,"byte_end":333774,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when it will result in overflow.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":333779,"byte_end":333830,"line_start":1067,"line_end":1067,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":333835,"byte_end":333838,"line_start":1068,"line_end":1068,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":333843,"byte_end":333856,"line_start":1069,"line_end":1069,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":333861,"byte_end":333864,"line_start":1070,"line_end":1070,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":333869,"byte_end":333876,"line_start":1071,"line_end":1071,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Duration, NaiveDate};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":333881,"byte_end":333919,"line_start":1072,"line_end":1072,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":333924,"byte_end":333927,"line_start":1073,"line_end":1073,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 9, 5);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":333932,"byte_end":333976,"line_start":1074,"line_end":1074,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(d.checked_sub_signed(Duration::days(40)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":333981,"byte_end":334037,"line_start":1075,"line_end":1075,"column_start":5,"column_end":61}},{"value":"/            Some(NaiveDate::from_ymd(2015, 7, 27)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":334042,"byte_end":334097,"line_start":1076,"line_end":1076,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(d.checked_sub_signed(Duration::days(-40)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":334102,"byte_end":334159,"line_start":1077,"line_end":1077,"column_start":5,"column_end":62}},{"value":"/            Some(NaiveDate::from_ymd(2015, 10, 15)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":334164,"byte_end":334220,"line_start":1078,"line_end":1078,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(d.checked_sub_signed(Duration::days(1_000_000_000)), None);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":334225,"byte_end":334299,"line_start":1079,"line_end":1079,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(d.checked_sub_signed(Duration::days(-1_000_000_000)), None);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":334304,"byte_end":334379,"line_start":1080,"line_end":1080,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(NaiveDate::MIN.checked_sub_signed(Duration::days(1)), None);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":334384,"byte_end":334459,"line_start":1081,"line_end":1081,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":334464,"byte_end":334471,"line_start":1082,"line_end":1082,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1119},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":336290,"byte_end":336311,"line_start":1118,"line_end":1118,"column_start":12,"column_end":33},"name":"signed_duration_since","qualname":"<NaiveDate>::signed_duration_since","value":"fn signed_duration_since(Self, NaiveDate) -> OldDuration","parent":null,"children":[],"decl_id":null,"docs":" Subtracts another `NaiveDate` from the current date.\n Returns a `Duration` of integral numbers.","sig":null,"attributes":[{"value":"/ Subtracts another `NaiveDate` from the current date.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":335177,"byte_end":335233,"line_start":1096,"line_end":1096,"column_start":5,"column_end":61}},{"value":"/ Returns a `Duration` of integral numbers.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":335238,"byte_end":335283,"line_start":1097,"line_end":1097,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":335288,"byte_end":335291,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ This does not overflow or underflow at all,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":335296,"byte_end":335343,"line_start":1099,"line_end":1099,"column_start":5,"column_end":52}},{"value":"/ as all possible output fits in the range of `Duration`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":335348,"byte_end":335407,"line_start":1100,"line_end":1100,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":335412,"byte_end":335415,"line_start":1101,"line_end":1101,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":335420,"byte_end":335433,"line_start":1102,"line_end":1102,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":335438,"byte_end":335441,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":335446,"byte_end":335453,"line_start":1104,"line_end":1104,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Duration, NaiveDate};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":335458,"byte_end":335496,"line_start":1105,"line_end":1105,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":335501,"byte_end":335504,"line_start":1106,"line_end":1106,"column_start":5,"column_end":8}},{"value":"/ let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":335509,"byte_end":335548,"line_start":1107,"line_end":1107,"column_start":5,"column_end":44}},{"value":"/ let since = NaiveDate::signed_duration_since;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":335553,"byte_end":335602,"line_start":1108,"line_end":1108,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":335607,"byte_end":335610,"line_start":1109,"line_end":1109,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2014, 1, 1)), Duration::zero());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":335615,"byte_end":335699,"line_start":1110,"line_end":1110,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2013, 12, 31)), Duration::days(1));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":335704,"byte_end":335791,"line_start":1111,"line_end":1111,"column_start":5,"column_end":92}},{"value":"/ assert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2014, 1, 2)), Duration::days(-1));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":335796,"byte_end":335882,"line_start":1112,"line_end":1112,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2013, 9, 23)), Duration::days(100));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":335887,"byte_end":335975,"line_start":1113,"line_end":1113,"column_start":5,"column_end":93}},{"value":"/ assert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2013, 1, 1)), Duration::days(365));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":335980,"byte_end":336067,"line_start":1114,"line_end":1114,"column_start":5,"column_end":92}},{"value":"/ assert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2010, 1, 1)), Duration::days(365*4 + 1));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":336072,"byte_end":336165,"line_start":1115,"line_end":1115,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(since(from_ymd(2014, 1, 1), from_ymd(1614, 1, 1)), Duration::days(365*400 + 97));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":336170,"byte_end":336266,"line_start":1116,"line_end":1116,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":336271,"byte_end":336278,"line_start":1117,"line_end":1117,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1120},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":340716,"byte_end":340725,"line_start":1232,"line_end":1232,"column_start":12,"column_end":21},"name":"iter_days","qualname":"<NaiveDate>::iter_days","value":"fn iter_days<'_>(&'_ Self) -> NaiveDateDaysIterator","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that steps by days across all representable dates.","sig":null,"attributes":[{"value":"/ Returns an iterator that steps by days across all representable dates.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":339905,"byte_end":339979,"line_start":1205,"line_end":1205,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":339984,"byte_end":339987,"line_start":1206,"line_end":1206,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":339992,"byte_end":340005,"line_start":1207,"line_end":1207,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":340010,"byte_end":340013,"line_start":1208,"line_end":1208,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":340018,"byte_end":340025,"line_start":1209,"line_end":1209,"column_start":5,"column_end":12}},{"value":"/ # use chrono::NaiveDate;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":340030,"byte_end":340058,"line_start":1210,"line_end":1210,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":340063,"byte_end":340066,"line_start":1211,"line_end":1211,"column_start":5,"column_end":8}},{"value":"/ let expected = [","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":340071,"byte_end":340091,"line_start":1212,"line_end":1212,"column_start":5,"column_end":25}},{"value":"/     NaiveDate::from_ymd(2016, 2, 27),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":340096,"byte_end":340137,"line_start":1213,"line_end":1213,"column_start":5,"column_end":46}},{"value":"/     NaiveDate::from_ymd(2016, 2, 28),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":340142,"byte_end":340183,"line_start":1214,"line_end":1214,"column_start":5,"column_end":46}},{"value":"/     NaiveDate::from_ymd(2016, 2, 29),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":340188,"byte_end":340229,"line_start":1215,"line_end":1215,"column_start":5,"column_end":46}},{"value":"/     NaiveDate::from_ymd(2016, 3, 1),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":340234,"byte_end":340274,"line_start":1216,"line_end":1216,"column_start":5,"column_end":45}},{"value":"/ ];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":340279,"byte_end":340285,"line_start":1217,"line_end":1217,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":340290,"byte_end":340293,"line_start":1218,"line_end":1218,"column_start":5,"column_end":8}},{"value":"/ let mut count = 0;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":340298,"byte_end":340320,"line_start":1219,"line_end":1219,"column_start":5,"column_end":27}},{"value":"/ for (idx, d) in NaiveDate::from_ymd(2016, 2, 27).iter_days().take(4).enumerate() {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":340325,"byte_end":340411,"line_start":1220,"line_end":1220,"column_start":5,"column_end":91}},{"value":"/    assert_eq!(d, expected[idx]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":340416,"byte_end":340452,"line_start":1221,"line_end":1221,"column_start":5,"column_end":41}},{"value":"/    count += 1;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":340457,"byte_end":340475,"line_start":1222,"line_end":1222,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":340480,"byte_end":340485,"line_start":1223,"line_end":1223,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(count, 4);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":340490,"byte_end":340515,"line_start":1224,"line_end":1224,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":340520,"byte_end":340523,"line_start":1225,"line_end":1225,"column_start":5,"column_end":8}},{"value":"/ for d in NaiveDate::from_ymd(2016, 3, 1).iter_days().rev().take(4) {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":340528,"byte_end":340600,"line_start":1226,"line_end":1226,"column_start":5,"column_end":77}},{"value":"/     count -= 1;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":340605,"byte_end":340624,"line_start":1227,"line_end":1227,"column_start":5,"column_end":24}},{"value":"/     assert_eq!(d, expected[count]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":340629,"byte_end":340668,"line_start":1228,"line_end":1228,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":340673,"byte_end":340678,"line_start":1229,"line_end":1229,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":340683,"byte_end":340690,"line_start":1230,"line_end":1230,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":340695,"byte_end":340704,"line_start":1231,"line_end":1231,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1121},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":341633,"byte_end":341643,"line_start":1263,"line_end":1263,"column_start":12,"column_end":22},"name":"iter_weeks","qualname":"<NaiveDate>::iter_weeks","value":"fn iter_weeks<'_>(&'_ Self) -> NaiveDateWeeksIterator","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that steps by weeks across all representable dates.","sig":null,"attributes":[{"value":"/ Returns an iterator that steps by weeks across all representable dates.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":340818,"byte_end":340893,"line_start":1236,"line_end":1236,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":340898,"byte_end":340901,"line_start":1237,"line_end":1237,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":340906,"byte_end":340919,"line_start":1238,"line_end":1238,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":340924,"byte_end":340927,"line_start":1239,"line_end":1239,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":340932,"byte_end":340939,"line_start":1240,"line_end":1240,"column_start":5,"column_end":12}},{"value":"/ # use chrono::NaiveDate;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":340944,"byte_end":340972,"line_start":1241,"line_end":1241,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":340977,"byte_end":340980,"line_start":1242,"line_end":1242,"column_start":5,"column_end":8}},{"value":"/ let expected = [","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":340985,"byte_end":341005,"line_start":1243,"line_end":1243,"column_start":5,"column_end":25}},{"value":"/     NaiveDate::from_ymd(2016, 2, 27),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":341010,"byte_end":341051,"line_start":1244,"line_end":1244,"column_start":5,"column_end":46}},{"value":"/     NaiveDate::from_ymd(2016, 3, 5),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":341056,"byte_end":341096,"line_start":1245,"line_end":1245,"column_start":5,"column_end":45}},{"value":"/     NaiveDate::from_ymd(2016, 3, 12),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":341101,"byte_end":341142,"line_start":1246,"line_end":1246,"column_start":5,"column_end":46}},{"value":"/     NaiveDate::from_ymd(2016, 3, 19),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":341147,"byte_end":341188,"line_start":1247,"line_end":1247,"column_start":5,"column_end":46}},{"value":"/ ];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":341193,"byte_end":341199,"line_start":1248,"line_end":1248,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":341204,"byte_end":341207,"line_start":1249,"line_end":1249,"column_start":5,"column_end":8}},{"value":"/ let mut count = 0;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":341212,"byte_end":341234,"line_start":1250,"line_end":1250,"column_start":5,"column_end":27}},{"value":"/ for (idx, d) in NaiveDate::from_ymd(2016, 2, 27).iter_weeks().take(4).enumerate() {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":341239,"byte_end":341326,"line_start":1251,"line_end":1251,"column_start":5,"column_end":92}},{"value":"/    assert_eq!(d, expected[idx]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":341331,"byte_end":341367,"line_start":1252,"line_end":1252,"column_start":5,"column_end":41}},{"value":"/    count += 1;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":341372,"byte_end":341390,"line_start":1253,"line_end":1253,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":341395,"byte_end":341400,"line_start":1254,"line_end":1254,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(count, 4);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":341405,"byte_end":341430,"line_start":1255,"line_end":1255,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":341435,"byte_end":341438,"line_start":1256,"line_end":1256,"column_start":5,"column_end":8}},{"value":"/ for d in NaiveDate::from_ymd(2016, 3, 19).iter_weeks().rev().take(4) {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":341443,"byte_end":341517,"line_start":1257,"line_end":1257,"column_start":5,"column_end":79}},{"value":"/     count -= 1;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":341522,"byte_end":341541,"line_start":1258,"line_end":1258,"column_start":5,"column_end":24}},{"value":"/     assert_eq!(d, expected[count]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":341546,"byte_end":341585,"line_start":1259,"line_end":1259,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":341590,"byte_end":341595,"line_start":1260,"line_end":1260,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":341600,"byte_end":341607,"line_start":1261,"line_end":1261,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":341612,"byte_end":341621,"line_start":1262,"line_end":1262,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1122},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":341868,"byte_end":341872,"line_start":1270,"line_end":1270,"column_start":12,"column_end":16},"name":"week","qualname":"<NaiveDate>::week","value":"fn week<'_>(&'_ Self, Weekday) -> NaiveWeek","parent":null,"children":[],"decl_id":null,"docs":" Returns the [`NaiveWeek`] that the date belongs to, starting with the [`Weekday`]\n specified.\n","sig":null,"attributes":[{"value":"/ Returns the [`NaiveWeek`] that the date belongs to, starting with the [`Weekday`]","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":341738,"byte_end":341823,"line_start":1267,"line_end":1267,"column_start":5,"column_end":90}},{"value":"/ specified.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":341828,"byte_end":341842,"line_start":1268,"line_end":1268,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":341847,"byte_end":341856,"line_start":1269,"line_end":1269,"column_start":5,"column_end":14}}]},{"kind":"Const","id":{"krate":0,"index":1123},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":342039,"byte_end":342042,"line_start":1275,"line_end":1275,"column_start":15,"column_end":18},"name":"MIN","qualname":"::naive::date::NaiveDate::MIN","value":"NaiveDate","parent":{"krate":0,"index":1077},"children":[],"decl_id":null,"docs":" The minimum possible `NaiveDate` (January 1, 262145 BCE).\n","sig":null,"attributes":[{"value":"/ The minimum possible `NaiveDate` (January 1, 262145 BCE).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":341963,"byte_end":342024,"line_start":1274,"line_end":1274,"column_start":5,"column_end":66}}]},{"kind":"Const","id":{"krate":0,"index":1124},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":342200,"byte_end":342203,"line_start":1277,"line_end":1277,"column_start":15,"column_end":18},"name":"MAX","qualname":"::naive::date::NaiveDate::MAX","value":"NaiveDate","parent":{"krate":0,"index":1077},"children":[],"decl_id":null,"docs":" The maximum possible `NaiveDate` (December 31, 262143 CE).\n","sig":null,"attributes":[{"value":"/ The maximum possible `NaiveDate` (December 31, 262143 CE).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":342123,"byte_end":342185,"line_start":1276,"line_end":1276,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1126},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":342660,"byte_end":342664,"line_start":1292,"line_end":1292,"column_start":8,"column_end":12},"name":"year","qualname":"<NaiveDate as traits::Datelike>::year","value":"fn year<'_>(&'_ Self) -> i32","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":1987},"docs":" Returns the year number in the [calendar date](#calendar-date).","sig":null,"attributes":[{"value":"/ Returns the year number in the [calendar date](#calendar-date).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":342318,"byte_end":342385,"line_start":1281,"line_end":1281,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":342390,"byte_end":342393,"line_start":1282,"line_end":1282,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":342398,"byte_end":342411,"line_start":1283,"line_end":1283,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":342416,"byte_end":342419,"line_start":1284,"line_end":1284,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":342424,"byte_end":342431,"line_start":1285,"line_end":1285,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":342436,"byte_end":342474,"line_start":1286,"line_end":1286,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":342479,"byte_end":342482,"line_start":1287,"line_end":1287,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).year(), 2015);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":342487,"byte_end":342548,"line_start":1288,"line_end":1288,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(NaiveDate::from_ymd(-308, 3, 14).year(), -308); // 309 BCE","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":342553,"byte_end":342626,"line_start":1289,"line_end":1289,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":342631,"byte_end":342638,"line_start":1290,"line_end":1290,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":342643,"byte_end":342652,"line_start":1291,"line_end":1291,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1127},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343075,"byte_end":343080,"line_start":1309,"line_end":1309,"column_start":8,"column_end":13},"name":"month","qualname":"<NaiveDate as traits::Datelike>::month","value":"fn month<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":1989},"docs":" Returns the month number starting from 1.","sig":null,"attributes":[{"value":"/ Returns the month number starting from 1.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":342716,"byte_end":342761,"line_start":1296,"line_end":1296,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":342766,"byte_end":342769,"line_start":1297,"line_end":1297,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 1 to 12.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":342774,"byte_end":342815,"line_start":1298,"line_end":1298,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":342820,"byte_end":342823,"line_start":1299,"line_end":1299,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":342828,"byte_end":342841,"line_start":1300,"line_end":1300,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":342846,"byte_end":342849,"line_start":1301,"line_end":1301,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":342854,"byte_end":342861,"line_start":1302,"line_end":1302,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":342866,"byte_end":342904,"line_start":1303,"line_end":1303,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":342909,"byte_end":342912,"line_start":1304,"line_end":1304,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).month(), 9);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":342917,"byte_end":342976,"line_start":1305,"line_end":1305,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(NaiveDate::from_ymd(-308, 3, 14).month(), 3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":342981,"byte_end":343041,"line_start":1306,"line_end":1306,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343046,"byte_end":343053,"line_start":1307,"line_end":1307,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343058,"byte_end":343067,"line_start":1308,"line_end":1308,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1128},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343496,"byte_end":343502,"line_start":1326,"line_end":1326,"column_start":8,"column_end":14},"name":"month0","qualname":"<NaiveDate as traits::Datelike>::month0","value":"fn month0<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":1990},"docs":" Returns the month number starting from 0.","sig":null,"attributes":[{"value":"/ Returns the month number starting from 0.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343135,"byte_end":343180,"line_start":1313,"line_end":1313,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343185,"byte_end":343188,"line_start":1314,"line_end":1314,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 11.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343193,"byte_end":343234,"line_start":1315,"line_end":1315,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343239,"byte_end":343242,"line_start":1316,"line_end":1316,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343247,"byte_end":343260,"line_start":1317,"line_end":1317,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343265,"byte_end":343268,"line_start":1318,"line_end":1318,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343273,"byte_end":343280,"line_start":1319,"line_end":1319,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343285,"byte_end":343323,"line_start":1320,"line_end":1320,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343328,"byte_end":343331,"line_start":1321,"line_end":1321,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).month0(), 8);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343336,"byte_end":343396,"line_start":1322,"line_end":1322,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(NaiveDate::from_ymd(-308, 3, 14).month0(), 2);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343401,"byte_end":343462,"line_start":1323,"line_end":1323,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343467,"byte_end":343474,"line_start":1324,"line_end":1324,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343479,"byte_end":343488,"line_start":1325,"line_end":1325,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1129},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":344848,"byte_end":344851,"line_start":1366,"line_end":1366,"column_start":8,"column_end":11},"name":"day","qualname":"<NaiveDate as traits::Datelike>::day","value":"fn day<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":1991},"docs":" Returns the day of month starting from 1.","sig":null,"attributes":[{"value":"/ Returns the day of month starting from 1.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343561,"byte_end":343606,"line_start":1330,"line_end":1330,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343611,"byte_end":343614,"line_start":1331,"line_end":1331,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 1 to 31. (The last day of month differs by months.)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343619,"byte_end":343703,"line_start":1332,"line_end":1332,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343708,"byte_end":343711,"line_start":1333,"line_end":1333,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343716,"byte_end":343729,"line_start":1334,"line_end":1334,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343734,"byte_end":343737,"line_start":1335,"line_end":1335,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343742,"byte_end":343749,"line_start":1336,"line_end":1336,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343754,"byte_end":343792,"line_start":1337,"line_end":1337,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343797,"byte_end":343800,"line_start":1338,"line_end":1338,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).day(), 8);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343805,"byte_end":343862,"line_start":1339,"line_end":1339,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(NaiveDate::from_ymd(-308, 3, 14).day(), 14);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343867,"byte_end":343926,"line_start":1340,"line_end":1340,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343931,"byte_end":343938,"line_start":1341,"line_end":1341,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343943,"byte_end":343946,"line_start":1342,"line_end":1342,"column_start":5,"column_end":8}},{"value":"/ Combined with [`NaiveDate::pred`](#method.pred),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":343951,"byte_end":344003,"line_start":1343,"line_end":1343,"column_start":5,"column_end":57}},{"value":"/ one can determine the number of days in a particular month.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":344008,"byte_end":344071,"line_start":1344,"line_end":1344,"column_start":5,"column_end":68}},{"value":"/ (Note that this panics when `year` is out of range.)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":344076,"byte_end":344132,"line_start":1345,"line_end":1345,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":344137,"byte_end":344140,"line_start":1346,"line_end":1346,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":344145,"byte_end":344152,"line_start":1347,"line_end":1347,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":344157,"byte_end":344195,"line_start":1348,"line_end":1348,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":344200,"byte_end":344203,"line_start":1349,"line_end":1349,"column_start":5,"column_end":8}},{"value":"/ fn ndays_in_month(year: i32, month: u32) -> u32 {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":344208,"byte_end":344261,"line_start":1350,"line_end":1350,"column_start":5,"column_end":58}},{"value":"/     // the first day of the next month...","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":344266,"byte_end":344311,"line_start":1351,"line_end":1351,"column_start":5,"column_end":50}},{"value":"/     let (y, m) = if month == 12 { (year + 1, 1) } else { (year, month + 1) };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":344316,"byte_end":344397,"line_start":1352,"line_end":1352,"column_start":5,"column_end":86}},{"value":"/     let d = NaiveDate::from_ymd(y, m, 1);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":344402,"byte_end":344447,"line_start":1353,"line_end":1353,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":344452,"byte_end":344455,"line_start":1354,"line_end":1354,"column_start":5,"column_end":8}},{"value":"/     // ...is preceded by the last day of the original month","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":344460,"byte_end":344523,"line_start":1355,"line_end":1355,"column_start":5,"column_end":68}},{"value":"/     d.pred().day()","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":344528,"byte_end":344550,"line_start":1356,"line_end":1356,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":344555,"byte_end":344560,"line_start":1357,"line_end":1357,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":344565,"byte_end":344568,"line_start":1358,"line_end":1358,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(ndays_in_month(2015, 8), 31);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":344573,"byte_end":344617,"line_start":1359,"line_end":1359,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(ndays_in_month(2015, 9), 30);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":344622,"byte_end":344666,"line_start":1360,"line_end":1360,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(ndays_in_month(2015, 12), 31);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":344671,"byte_end":344716,"line_start":1361,"line_end":1361,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(ndays_in_month(2016, 2), 29);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":344721,"byte_end":344765,"line_start":1362,"line_end":1362,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(ndays_in_month(2017, 2), 28);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":344770,"byte_end":344814,"line_start":1363,"line_end":1363,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":344819,"byte_end":344826,"line_start":1364,"line_end":1364,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":344831,"byte_end":344840,"line_start":1365,"line_end":1365,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1130},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345305,"byte_end":345309,"line_start":1383,"line_end":1383,"column_start":8,"column_end":12},"name":"day0","qualname":"<NaiveDate as traits::Datelike>::day0","value":"fn day0<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":1992},"docs":" Returns the day of month starting from 0.","sig":null,"attributes":[{"value":"/ Returns the day of month starting from 0.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":344904,"byte_end":344949,"line_start":1370,"line_end":1370,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":344954,"byte_end":344957,"line_start":1371,"line_end":1371,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 30. (The last day of month differs by months.)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":344962,"byte_end":345046,"line_start":1372,"line_end":1372,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345051,"byte_end":345054,"line_start":1373,"line_end":1373,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345059,"byte_end":345072,"line_start":1374,"line_end":1374,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345077,"byte_end":345080,"line_start":1375,"line_end":1375,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345085,"byte_end":345092,"line_start":1376,"line_end":1376,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345097,"byte_end":345135,"line_start":1377,"line_end":1377,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345140,"byte_end":345143,"line_start":1378,"line_end":1378,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).day0(), 7);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345148,"byte_end":345206,"line_start":1379,"line_end":1379,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(NaiveDate::from_ymd(-308, 3, 14).day0(), 13);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345211,"byte_end":345271,"line_start":1380,"line_end":1380,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345276,"byte_end":345283,"line_start":1381,"line_end":1381,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345288,"byte_end":345297,"line_start":1382,"line_end":1382,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1131},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346554,"byte_end":346561,"line_start":1422,"line_end":1422,"column_start":8,"column_end":15},"name":"ordinal","qualname":"<NaiveDate as traits::Datelike>::ordinal","value":"fn ordinal<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":1993},"docs":" Returns the day of year starting from 1.","sig":null,"attributes":[{"value":"/ Returns the day of year starting from 1.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345366,"byte_end":345410,"line_start":1387,"line_end":1387,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345415,"byte_end":345418,"line_start":1388,"line_end":1388,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 1 to 366. (The last day of year differs by years.)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345423,"byte_end":345506,"line_start":1389,"line_end":1389,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345511,"byte_end":345514,"line_start":1390,"line_end":1390,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345519,"byte_end":345532,"line_start":1391,"line_end":1391,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345537,"byte_end":345540,"line_start":1392,"line_end":1392,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345545,"byte_end":345552,"line_start":1393,"line_end":1393,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345557,"byte_end":345595,"line_start":1394,"line_end":1394,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345600,"byte_end":345603,"line_start":1395,"line_end":1395,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).ordinal(), 251);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345608,"byte_end":345671,"line_start":1396,"line_end":1396,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(NaiveDate::from_ymd(-308, 3, 14).ordinal(), 74);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345676,"byte_end":345739,"line_start":1397,"line_end":1397,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345744,"byte_end":345751,"line_start":1398,"line_end":1398,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345756,"byte_end":345759,"line_start":1399,"line_end":1399,"column_start":5,"column_end":8}},{"value":"/ Combined with [`NaiveDate::pred`](#method.pred),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345764,"byte_end":345816,"line_start":1400,"line_end":1400,"column_start":5,"column_end":57}},{"value":"/ one can determine the number of days in a particular year.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345821,"byte_end":345883,"line_start":1401,"line_end":1401,"column_start":5,"column_end":67}},{"value":"/ (Note that this panics when `year` is out of range.)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345888,"byte_end":345944,"line_start":1402,"line_end":1402,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345949,"byte_end":345952,"line_start":1403,"line_end":1403,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345957,"byte_end":345964,"line_start":1404,"line_end":1404,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":345969,"byte_end":346007,"line_start":1405,"line_end":1405,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346012,"byte_end":346015,"line_start":1406,"line_end":1406,"column_start":5,"column_end":8}},{"value":"/ fn ndays_in_year(year: i32) -> u32 {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346020,"byte_end":346060,"line_start":1407,"line_end":1407,"column_start":5,"column_end":45}},{"value":"/     // the first day of the next year...","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346065,"byte_end":346109,"line_start":1408,"line_end":1408,"column_start":5,"column_end":49}},{"value":"/     let d = NaiveDate::from_ymd(year + 1, 1, 1);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346114,"byte_end":346166,"line_start":1409,"line_end":1409,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346171,"byte_end":346174,"line_start":1410,"line_end":1410,"column_start":5,"column_end":8}},{"value":"/     // ...is preceded by the last day of the original year","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346179,"byte_end":346241,"line_start":1411,"line_end":1411,"column_start":5,"column_end":67}},{"value":"/     d.pred().ordinal()","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346246,"byte_end":346272,"line_start":1412,"line_end":1412,"column_start":5,"column_end":31}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346277,"byte_end":346282,"line_start":1413,"line_end":1413,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346287,"byte_end":346290,"line_start":1414,"line_end":1414,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(ndays_in_year(2015), 365);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346295,"byte_end":346336,"line_start":1415,"line_end":1415,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(ndays_in_year(2016), 366);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346341,"byte_end":346382,"line_start":1416,"line_end":1416,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(ndays_in_year(2017), 365);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346387,"byte_end":346428,"line_start":1417,"line_end":1417,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(ndays_in_year(2000), 366);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346433,"byte_end":346474,"line_start":1418,"line_end":1418,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(ndays_in_year(2100), 365);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346479,"byte_end":346520,"line_start":1419,"line_end":1419,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346525,"byte_end":346532,"line_start":1420,"line_end":1420,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346537,"byte_end":346546,"line_start":1421,"line_end":1421,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1132},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347026,"byte_end":347034,"line_start":1439,"line_end":1439,"column_start":8,"column_end":16},"name":"ordinal0","qualname":"<NaiveDate as traits::Datelike>::ordinal0","value":"fn ordinal0<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":1994},"docs":" Returns the day of year starting from 0.","sig":null,"attributes":[{"value":"/ Returns the day of year starting from 0.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346617,"byte_end":346661,"line_start":1426,"line_end":1426,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346666,"byte_end":346669,"line_start":1427,"line_end":1427,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 365. (The last day of year differs by years.)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346674,"byte_end":346757,"line_start":1428,"line_end":1428,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346762,"byte_end":346765,"line_start":1429,"line_end":1429,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346770,"byte_end":346783,"line_start":1430,"line_end":1430,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346788,"byte_end":346791,"line_start":1431,"line_end":1431,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346796,"byte_end":346803,"line_start":1432,"line_end":1432,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346808,"byte_end":346846,"line_start":1433,"line_end":1433,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346851,"byte_end":346854,"line_start":1434,"line_end":1434,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).ordinal0(), 250);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346859,"byte_end":346923,"line_start":1435,"line_end":1435,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(NaiveDate::from_ymd(-308, 3, 14).ordinal0(), 73);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346928,"byte_end":346992,"line_start":1436,"line_end":1436,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":346997,"byte_end":347004,"line_start":1437,"line_end":1437,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347009,"byte_end":347018,"line_start":1438,"line_end":1438,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1133},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347417,"byte_end":347424,"line_start":1454,"line_end":1454,"column_start":8,"column_end":15},"name":"weekday","qualname":"<NaiveDate as traits::Datelike>::weekday","value":"fn weekday<'_>(&'_ Self) -> Weekday","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":1995},"docs":" Returns the day of week.","sig":null,"attributes":[{"value":"/ Returns the day of week.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347094,"byte_end":347122,"line_start":1443,"line_end":1443,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347127,"byte_end":347130,"line_start":1444,"line_end":1444,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347135,"byte_end":347148,"line_start":1445,"line_end":1445,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347153,"byte_end":347156,"line_start":1446,"line_end":1446,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347161,"byte_end":347168,"line_start":1447,"line_end":1447,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike, Weekday};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347173,"byte_end":347220,"line_start":1448,"line_end":1448,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347225,"byte_end":347228,"line_start":1449,"line_end":1449,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).weekday(), Weekday::Tue);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347233,"byte_end":347305,"line_start":1450,"line_end":1450,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(NaiveDate::from_ymd(-308, 3, 14).weekday(), Weekday::Fri);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347310,"byte_end":347383,"line_start":1451,"line_end":1451,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347388,"byte_end":347395,"line_start":1452,"line_end":1452,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347400,"byte_end":347409,"line_start":1453,"line_end":1453,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1134},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347501,"byte_end":347509,"line_start":1459,"line_end":1459,"column_start":8,"column_end":16},"name":"iso_week","qualname":"<NaiveDate as traits::Datelike>::iso_week","value":"fn iso_week<'_>(&'_ Self) -> IsoWeek","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":1996},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347484,"byte_end":347493,"line_start":1458,"line_end":1458,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1135},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":348448,"byte_end":348457,"line_start":1486,"line_end":1486,"column_start":8,"column_end":17},"name":"with_year","qualname":"<NaiveDate as traits::Datelike>::with_year","value":"fn with_year<'_>(&'_ Self, i32) -> Option<NaiveDate>","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":1997},"docs":" Makes a new `NaiveDate` with the year number changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` with the year number changed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347600,"byte_end":347657,"line_start":1463,"line_end":1463,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347662,"byte_end":347665,"line_start":1464,"line_end":1464,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDate` would be invalid.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347670,"byte_end":347737,"line_start":1465,"line_end":1465,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347742,"byte_end":347745,"line_start":1466,"line_end":1466,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347750,"byte_end":347763,"line_start":1467,"line_end":1467,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347768,"byte_end":347771,"line_start":1468,"line_end":1468,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347776,"byte_end":347783,"line_start":1469,"line_end":1469,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347788,"byte_end":347826,"line_start":1470,"line_end":1470,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347831,"byte_end":347834,"line_start":1471,"line_end":1471,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).with_year(2016),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347839,"byte_end":347902,"line_start":1472,"line_end":1472,"column_start":5,"column_end":68}},{"value":"/            Some(NaiveDate::from_ymd(2016, 9, 8)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347907,"byte_end":347961,"line_start":1473,"line_end":1473,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).with_year(-308),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":347966,"byte_end":348029,"line_start":1474,"line_end":1474,"column_start":5,"column_end":68}},{"value":"/            Some(NaiveDate::from_ymd(-308, 9, 8)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":348034,"byte_end":348088,"line_start":1475,"line_end":1475,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":348093,"byte_end":348100,"line_start":1476,"line_end":1476,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":348105,"byte_end":348108,"line_start":1477,"line_end":1477,"column_start":5,"column_end":8}},{"value":"/ A leap day (February 29) is a good example that this method can return `None`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":348113,"byte_end":348195,"line_start":1478,"line_end":1478,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":348200,"byte_end":348203,"line_start":1479,"line_end":1479,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":348208,"byte_end":348215,"line_start":1480,"line_end":1480,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":348220,"byte_end":348260,"line_start":1481,"line_end":1481,"column_start":5,"column_end":45}},{"value":"/ assert!(NaiveDate::from_ymd(2016, 2, 29).with_year(2015).is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":348265,"byte_end":348337,"line_start":1482,"line_end":1482,"column_start":5,"column_end":77}},{"value":"/ assert!(NaiveDate::from_ymd(2016, 2, 29).with_year(2020).is_some());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":348342,"byte_end":348414,"line_start":1483,"line_end":1483,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":348419,"byte_end":348426,"line_start":1484,"line_end":1484,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":348431,"byte_end":348440,"line_start":1485,"line_end":1485,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1136},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349396,"byte_end":349406,"line_start":1512,"line_end":1512,"column_start":8,"column_end":18},"name":"with_month","qualname":"<NaiveDate as traits::Datelike>::with_month","value":"fn with_month<'_>(&'_ Self, u32) -> Option<NaiveDate>","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":1998},"docs":" Makes a new `NaiveDate` with the month number (starting from 1) changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` with the month number (starting from 1) changed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":348801,"byte_end":348877,"line_start":1497,"line_end":1497,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":348882,"byte_end":348885,"line_start":1498,"line_end":1498,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDate` would be invalid.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":348890,"byte_end":348957,"line_start":1499,"line_end":1499,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":348962,"byte_end":348965,"line_start":1500,"line_end":1500,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":348970,"byte_end":348983,"line_start":1501,"line_end":1501,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":348988,"byte_end":348991,"line_start":1502,"line_end":1502,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":348996,"byte_end":349003,"line_start":1503,"line_end":1503,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349008,"byte_end":349046,"line_start":1504,"line_end":1504,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349051,"byte_end":349054,"line_start":1505,"line_end":1505,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).with_month(10),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349059,"byte_end":349121,"line_start":1506,"line_end":1506,"column_start":5,"column_end":67}},{"value":"/            Some(NaiveDate::from_ymd(2015, 10, 8)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349126,"byte_end":349181,"line_start":1507,"line_end":1507,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).with_month(13), None); // no month 13","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349186,"byte_end":349270,"line_start":1508,"line_end":1508,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 30).with_month(2), None); // no February 30","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349275,"byte_end":349362,"line_start":1509,"line_end":1509,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349367,"byte_end":349374,"line_start":1510,"line_end":1510,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349379,"byte_end":349388,"line_start":1511,"line_end":1511,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1137},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":350109,"byte_end":350120,"line_start":1531,"line_end":1531,"column_start":8,"column_end":19},"name":"with_month0","qualname":"<NaiveDate as traits::Datelike>::with_month0","value":"fn with_month0<'_>(&'_ Self, u32) -> Option<NaiveDate>","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":1999},"docs":" Makes a new `NaiveDate` with the month number (starting from 0) changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` with the month number (starting from 0) changed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349512,"byte_end":349588,"line_start":1516,"line_end":1516,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349593,"byte_end":349596,"line_start":1517,"line_end":1517,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDate` would be invalid.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349601,"byte_end":349668,"line_start":1518,"line_end":1518,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349673,"byte_end":349676,"line_start":1519,"line_end":1519,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349681,"byte_end":349694,"line_start":1520,"line_end":1520,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349699,"byte_end":349702,"line_start":1521,"line_end":1521,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349707,"byte_end":349714,"line_start":1522,"line_end":1522,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349719,"byte_end":349757,"line_start":1523,"line_end":1523,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349762,"byte_end":349765,"line_start":1524,"line_end":1524,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).with_month0(9),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349770,"byte_end":349832,"line_start":1525,"line_end":1525,"column_start":5,"column_end":67}},{"value":"/            Some(NaiveDate::from_ymd(2015, 10, 8)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349837,"byte_end":349892,"line_start":1526,"line_end":1526,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).with_month0(12), None); // no month 13","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349897,"byte_end":349982,"line_start":1527,"line_end":1527,"column_start":5,"column_end":90}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 30).with_month0(1), None); // no February 30","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":349987,"byte_end":350075,"line_start":1528,"line_end":1528,"column_start":5,"column_end":93}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":350080,"byte_end":350087,"line_start":1529,"line_end":1529,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":350092,"byte_end":350101,"line_start":1530,"line_end":1530,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1138},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":350754,"byte_end":350762,"line_start":1550,"line_end":1550,"column_start":8,"column_end":16},"name":"with_day","qualname":"<NaiveDate as traits::Datelike>::with_day","value":"fn with_day<'_>(&'_ Self, u32) -> Option<NaiveDate>","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":2000},"docs":" Makes a new `NaiveDate` with the day of month (starting from 1) changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` with the day of month (starting from 1) changed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":350232,"byte_end":350308,"line_start":1535,"line_end":1535,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":350313,"byte_end":350316,"line_start":1536,"line_end":1536,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDate` would be invalid.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":350321,"byte_end":350388,"line_start":1537,"line_end":1537,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":350393,"byte_end":350396,"line_start":1538,"line_end":1538,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":350401,"byte_end":350414,"line_start":1539,"line_end":1539,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":350419,"byte_end":350422,"line_start":1540,"line_end":1540,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":350427,"byte_end":350434,"line_start":1541,"line_end":1541,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":350439,"byte_end":350477,"line_start":1542,"line_end":1542,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":350482,"byte_end":350485,"line_start":1543,"line_end":1543,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).with_day(30),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":350490,"byte_end":350550,"line_start":1544,"line_end":1544,"column_start":5,"column_end":65}},{"value":"/            Some(NaiveDate::from_ymd(2015, 9, 30)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":350555,"byte_end":350610,"line_start":1545,"line_end":1545,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).with_day(31),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":350615,"byte_end":350675,"line_start":1546,"line_end":1546,"column_start":5,"column_end":65}},{"value":"/            None); // no September 31","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":350680,"byte_end":350720,"line_start":1547,"line_end":1547,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":350725,"byte_end":350732,"line_start":1548,"line_end":1548,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":350737,"byte_end":350746,"line_start":1549,"line_end":1549,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1139},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351386,"byte_end":351395,"line_start":1569,"line_end":1569,"column_start":8,"column_end":17},"name":"with_day0","qualname":"<NaiveDate as traits::Datelike>::with_day0","value":"fn with_day0<'_>(&'_ Self, u32) -> Option<NaiveDate>","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":2001},"docs":" Makes a new `NaiveDate` with the day of month (starting from 0) changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` with the day of month (starting from 0) changed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":350862,"byte_end":350938,"line_start":1554,"line_end":1554,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":350943,"byte_end":350946,"line_start":1555,"line_end":1555,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDate` would be invalid.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":350951,"byte_end":351018,"line_start":1556,"line_end":1556,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351023,"byte_end":351026,"line_start":1557,"line_end":1557,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351031,"byte_end":351044,"line_start":1558,"line_end":1558,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351049,"byte_end":351052,"line_start":1559,"line_end":1559,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351057,"byte_end":351064,"line_start":1560,"line_end":1560,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351069,"byte_end":351107,"line_start":1561,"line_end":1561,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351112,"byte_end":351115,"line_start":1562,"line_end":1562,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).with_day0(29),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351120,"byte_end":351181,"line_start":1563,"line_end":1563,"column_start":5,"column_end":66}},{"value":"/            Some(NaiveDate::from_ymd(2015, 9, 30)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351186,"byte_end":351241,"line_start":1564,"line_end":1564,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 9, 8).with_day0(30),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351246,"byte_end":351307,"line_start":1565,"line_end":1565,"column_start":5,"column_end":66}},{"value":"/            None); // no September 31","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351312,"byte_end":351352,"line_start":1566,"line_end":1566,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351357,"byte_end":351364,"line_start":1567,"line_end":1567,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351369,"byte_end":351378,"line_start":1568,"line_end":1568,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1140},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352305,"byte_end":352317,"line_start":1593,"line_end":1593,"column_start":8,"column_end":20},"name":"with_ordinal","qualname":"<NaiveDate as traits::Datelike>::with_ordinal","value":"fn with_ordinal<'_>(&'_ Self, u32) -> Option<NaiveDate>","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":2002},"docs":" Makes a new `NaiveDate` with the day of year (starting from 1) changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` with the day of year (starting from 1) changed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351501,"byte_end":351576,"line_start":1573,"line_end":1573,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351581,"byte_end":351584,"line_start":1574,"line_end":1574,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDate` would be invalid.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351589,"byte_end":351656,"line_start":1575,"line_end":1575,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351661,"byte_end":351664,"line_start":1576,"line_end":1576,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351669,"byte_end":351682,"line_start":1577,"line_end":1577,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351687,"byte_end":351690,"line_start":1578,"line_end":1578,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351695,"byte_end":351702,"line_start":1579,"line_end":1579,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351707,"byte_end":351745,"line_start":1580,"line_end":1580,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351750,"byte_end":351753,"line_start":1581,"line_end":1581,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 1, 1).with_ordinal(60),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351758,"byte_end":351822,"line_start":1582,"line_end":1582,"column_start":5,"column_end":69}},{"value":"/            Some(NaiveDate::from_ymd(2015, 3, 1)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351827,"byte_end":351881,"line_start":1583,"line_end":1583,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 1, 1).with_ordinal(366),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351886,"byte_end":351951,"line_start":1584,"line_end":1584,"column_start":5,"column_end":70}},{"value":"/            None); // 2015 had only 365 days","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":351956,"byte_end":352003,"line_start":1585,"line_end":1585,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352008,"byte_end":352011,"line_start":1586,"line_end":1586,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2016, 1, 1).with_ordinal(60),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352016,"byte_end":352080,"line_start":1587,"line_end":1587,"column_start":5,"column_end":69}},{"value":"/            Some(NaiveDate::from_ymd(2016, 2, 29)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352085,"byte_end":352140,"line_start":1588,"line_end":1588,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2016, 1, 1).with_ordinal(366),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352145,"byte_end":352210,"line_start":1589,"line_end":1589,"column_start":5,"column_end":70}},{"value":"/            Some(NaiveDate::from_ymd(2016, 12, 31)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352215,"byte_end":352271,"line_start":1590,"line_end":1590,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352276,"byte_end":352283,"line_start":1591,"line_end":1591,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352288,"byte_end":352297,"line_start":1592,"line_end":1592,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1141},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":353235,"byte_end":353248,"line_start":1617,"line_end":1617,"column_start":8,"column_end":21},"name":"with_ordinal0","qualname":"<NaiveDate as traits::Datelike>::with_ordinal0","value":"fn with_ordinal0<'_>(&'_ Self, u32) -> Option<NaiveDate>","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":2003},"docs":" Makes a new `NaiveDate` with the day of year (starting from 0) changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` with the day of year (starting from 0) changed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352427,"byte_end":352502,"line_start":1597,"line_end":1597,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352507,"byte_end":352510,"line_start":1598,"line_end":1598,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDate` would be invalid.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352515,"byte_end":352582,"line_start":1599,"line_end":1599,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352587,"byte_end":352590,"line_start":1600,"line_end":1600,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352595,"byte_end":352608,"line_start":1601,"line_end":1601,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352613,"byte_end":352616,"line_start":1602,"line_end":1602,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352621,"byte_end":352628,"line_start":1603,"line_end":1603,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352633,"byte_end":352671,"line_start":1604,"line_end":1604,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352676,"byte_end":352679,"line_start":1605,"line_end":1605,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 1, 1).with_ordinal0(59),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352684,"byte_end":352749,"line_start":1606,"line_end":1606,"column_start":5,"column_end":70}},{"value":"/            Some(NaiveDate::from_ymd(2015, 3, 1)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352754,"byte_end":352808,"line_start":1607,"line_end":1607,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 1, 1).with_ordinal0(365),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352813,"byte_end":352879,"line_start":1608,"line_end":1608,"column_start":5,"column_end":71}},{"value":"/            None); // 2015 had only 365 days","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352884,"byte_end":352931,"line_start":1609,"line_end":1609,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352936,"byte_end":352939,"line_start":1610,"line_end":1610,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2016, 1, 1).with_ordinal0(59),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":352944,"byte_end":353009,"line_start":1611,"line_end":1611,"column_start":5,"column_end":70}},{"value":"/            Some(NaiveDate::from_ymd(2016, 2, 29)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":353014,"byte_end":353069,"line_start":1612,"line_end":1612,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2016, 1, 1).with_ordinal0(365),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":353074,"byte_end":353140,"line_start":1613,"line_end":1613,"column_start":5,"column_end":71}},{"value":"/            Some(NaiveDate::from_ymd(2016, 12, 31)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":353145,"byte_end":353201,"line_start":1614,"line_end":1614,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":353206,"byte_end":353213,"line_start":1615,"line_end":1615,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":353218,"byte_end":353227,"line_start":1616,"line_end":1616,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1144},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":354590,"byte_end":354593,"line_start":1648,"line_end":1648,"column_start":8,"column_end":11},"name":"add","qualname":"<NaiveDate as core::ops::Add>::add","value":"fn add(Self, OldDuration) -> NaiveDate","parent":{"krate":1,"index":3331},"children":[],"decl_id":{"krate":1,"index":3334},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":354573,"byte_end":354582,"line_start":1647,"line_end":1647,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1146},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":354788,"byte_end":354798,"line_start":1655,"line_end":1655,"column_start":8,"column_end":18},"name":"add_assign","qualname":"<NaiveDate as core::ops::AddAssign>::add_assign","value":"fn add_assign<'_>(&'_ mut Self, OldDuration)","parent":{"krate":1,"index":3362},"children":[],"decl_id":{"krate":1,"index":3364},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":354771,"byte_end":354780,"line_start":1654,"line_end":1654,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1149},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":355783,"byte_end":355786,"line_start":1683,"line_end":1683,"column_start":8,"column_end":11},"name":"add","qualname":"<NaiveDate as core::ops::Add>::add","value":"fn add(Self, Months) -> Self::Output","parent":{"krate":1,"index":3331},"children":[],"decl_id":{"krate":1,"index":3334},"docs":" An addition of months to `NaiveDate` clamped to valid days in resulting month.","sig":null,"attributes":[{"value":"/ An addition of months to `NaiveDate` clamped to valid days in resulting month.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":354937,"byte_end":355019,"line_start":1663,"line_end":1663,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":355024,"byte_end":355027,"line_start":1664,"line_end":1664,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":355032,"byte_end":355044,"line_start":1665,"line_end":1665,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":355049,"byte_end":355052,"line_start":1666,"line_end":1666,"column_start":5,"column_end":8}},{"value":"/ Panics if the resulting date would be out of range.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":355057,"byte_end":355112,"line_start":1667,"line_end":1667,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":355117,"byte_end":355120,"line_start":1668,"line_end":1668,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":355125,"byte_end":355138,"line_start":1669,"line_end":1669,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":355143,"byte_end":355146,"line_start":1670,"line_end":1670,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":355151,"byte_end":355158,"line_start":1671,"line_end":1671,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Duration, NaiveDate, Months};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":355163,"byte_end":355209,"line_start":1672,"line_end":1672,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":355214,"byte_end":355217,"line_start":1673,"line_end":1673,"column_start":5,"column_end":8}},{"value":"/ let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":355222,"byte_end":355261,"line_start":1674,"line_end":1674,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":355266,"byte_end":355269,"line_start":1675,"line_end":1675,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from_ymd(2014, 1, 1) + Months::new(1), from_ymd(2014, 2, 1));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":355274,"byte_end":355350,"line_start":1676,"line_end":1676,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(from_ymd(2014, 1, 1) + Months::new(11), from_ymd(2014, 12, 1));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":355355,"byte_end":355433,"line_start":1677,"line_end":1677,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(from_ymd(2014, 1, 1) + Months::new(12), from_ymd(2015, 1, 1));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":355438,"byte_end":355515,"line_start":1678,"line_end":1678,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(from_ymd(2014, 1, 1) + Months::new(13), from_ymd(2015, 2, 1));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":355520,"byte_end":355597,"line_start":1679,"line_end":1679,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(from_ymd(2014, 1, 31) + Months::new(1), from_ymd(2014, 2, 28));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":355602,"byte_end":355680,"line_start":1680,"line_end":1680,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(from_ymd(2020, 1, 31) + Months::new(1), from_ymd(2020, 2, 29));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":355685,"byte_end":355763,"line_start":1681,"line_end":1681,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":355768,"byte_end":355775,"line_start":1682,"line_end":1682,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1152},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":356555,"byte_end":356558,"line_start":1708,"line_end":1708,"column_start":8,"column_end":11},"name":"sub","qualname":"<NaiveDate as core::ops::Sub>::sub","value":"fn sub(Self, Months) -> Self::Output","parent":{"krate":1,"index":3336},"children":[],"decl_id":{"krate":1,"index":3339},"docs":" A subtraction of Months from `NaiveDate` clamped to valid days in resulting month.","sig":null,"attributes":[{"value":"/ A subtraction of Months from `NaiveDate` clamped to valid days in resulting month.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":355952,"byte_end":356038,"line_start":1691,"line_end":1691,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":356043,"byte_end":356046,"line_start":1692,"line_end":1692,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":356051,"byte_end":356063,"line_start":1693,"line_end":1693,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":356068,"byte_end":356071,"line_start":1694,"line_end":1694,"column_start":5,"column_end":8}},{"value":"/ Panics if the resulting date would be out of range.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":356076,"byte_end":356131,"line_start":1695,"line_end":1695,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":356136,"byte_end":356139,"line_start":1696,"line_end":1696,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":356144,"byte_end":356157,"line_start":1697,"line_end":1697,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":356162,"byte_end":356165,"line_start":1698,"line_end":1698,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":356170,"byte_end":356177,"line_start":1699,"line_end":1699,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Duration, NaiveDate, Months};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":356182,"byte_end":356228,"line_start":1700,"line_end":1700,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":356233,"byte_end":356236,"line_start":1701,"line_end":1701,"column_start":5,"column_end":8}},{"value":"/ let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":356241,"byte_end":356280,"line_start":1702,"line_end":1702,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":356285,"byte_end":356288,"line_start":1703,"line_end":1703,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from_ymd(2014, 1, 1) - Months::new(11), from_ymd(2013, 2, 1));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":356293,"byte_end":356370,"line_start":1704,"line_end":1704,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(from_ymd(2014, 1, 1) - Months::new(12), from_ymd(2013, 1, 1));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":356375,"byte_end":356452,"line_start":1705,"line_end":1705,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(from_ymd(2014, 1, 1) - Months::new(13), from_ymd(2012, 12, 1));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":356457,"byte_end":356535,"line_start":1706,"line_end":1706,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":356540,"byte_end":356547,"line_start":1707,"line_end":1707,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1155},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":357949,"byte_end":357952,"line_start":1740,"line_end":1740,"column_start":8,"column_end":11},"name":"sub","qualname":"<NaiveDate as core::ops::Sub>::sub","value":"fn sub(Self, OldDuration) -> NaiveDate","parent":{"krate":1,"index":3336},"children":[],"decl_id":{"krate":1,"index":3339},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":357932,"byte_end":357941,"line_start":1739,"line_end":1739,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1157},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":358147,"byte_end":358157,"line_start":1747,"line_end":1747,"column_start":8,"column_end":18},"name":"sub_assign","qualname":"<NaiveDate as core::ops::SubAssign>::sub_assign","value":"fn sub_assign<'_>(&'_ mut Self, OldDuration)","parent":{"krate":1,"index":3366},"children":[],"decl_id":{"krate":1,"index":3368},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":358130,"byte_end":358139,"line_start":1746,"line_end":1746,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1160},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":359364,"byte_end":359367,"line_start":1780,"line_end":1780,"column_start":8,"column_end":11},"name":"sub","qualname":"<NaiveDate as core::ops::Sub>::sub","value":"fn sub(Self, NaiveDate) -> OldDuration","parent":{"krate":1,"index":3336},"children":[],"decl_id":{"krate":1,"index":3339},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":359347,"byte_end":359356,"line_start":1779,"line_end":1779,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2418},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":359594,"byte_end":359615,"line_start":1787,"line_end":1787,"column_start":12,"column_end":33},"name":"NaiveDateDaysIterator","qualname":"::naive::date::NaiveDateDaysIterator","value":"NaiveDateDaysIterator {  }","parent":null,"children":[{"krate":0,"index":2419}],"decl_id":null,"docs":" Iterator over `NaiveDate` with a step size of one day.\n","sig":null,"attributes":[{"value":"/ Iterator over `NaiveDate` with a step size of one day.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":359456,"byte_end":359514,"line_start":1785,"line_end":1785,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1163},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":359720,"byte_end":359724,"line_start":1794,"line_end":1794,"column_start":8,"column_end":12},"name":"next","qualname":"<NaiveDateDaysIterator as core::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":1,"index":8596},"children":[],"decl_id":{"krate":1,"index":8598},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1164},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":360059,"byte_end":360068,"line_start":1805,"line_end":1805,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<NaiveDateDaysIterator as core::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":1,"index":8596},"children":[],"decl_id":{"krate":1,"index":8602},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1167},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":360369,"byte_end":360378,"line_start":1814,"line_end":1814,"column_start":8,"column_end":17},"name":"next_back","qualname":"<NaiveDateDaysIterator as core::iter::DoubleEndedIterator>::next_back","value":"fn next_back<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":1,"index":8442},"children":[],"decl_id":{"krate":1,"index":8443},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2439},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":360672,"byte_end":360694,"line_start":1825,"line_end":1825,"column_start":12,"column_end":34},"name":"NaiveDateWeeksIterator","qualname":"::naive::date::NaiveDateWeeksIterator","value":"NaiveDateWeeksIterator {  }","parent":null,"children":[{"krate":0,"index":2440}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1170},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":360800,"byte_end":360804,"line_start":1832,"line_end":1832,"column_start":8,"column_end":12},"name":"next","qualname":"<NaiveDateWeeksIterator as core::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":1,"index":8596},"children":[],"decl_id":{"krate":1,"index":8598},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1171},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":361064,"byte_end":361073,"line_start":1841,"line_end":1841,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<NaiveDateWeeksIterator as core::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":1,"index":8596},"children":[],"decl_id":{"krate":1,"index":8602},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1174},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":361377,"byte_end":361386,"line_start":1850,"line_end":1850,"column_start":8,"column_end":17},"name":"next_back","qualname":"<NaiveDateWeeksIterator as core::iter::DoubleEndedIterator>::next_back","value":"fn next_back<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":1,"index":8442},"children":[],"decl_id":{"krate":1,"index":8443},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1176},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":362698,"byte_end":362701,"line_start":1887,"line_end":1887,"column_start":8,"column_end":11},"name":"fmt","qualname":"<NaiveDate as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10288},"children":[],"decl_id":{"krate":1,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1178},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":363963,"byte_end":363966,"line_start":1922,"line_end":1922,"column_start":8,"column_end":11},"name":"fmt","qualname":"<NaiveDate as core::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1181},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":364600,"byte_end":364608,"line_start":1946,"line_end":1946,"column_start":8,"column_end":16},"name":"from_str","qualname":"<NaiveDate as core::str::FromStr>::from_str","value":"fn from_str<'_>(&'_ str) -> ParseResult<NaiveDate>","parent":{"krate":1,"index":12989},"children":[],"decl_id":{"krate":1,"index":12991},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1184},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":365416,"byte_end":365423,"line_start":1975,"line_end":1975,"column_start":8,"column_end":15},"name":"default","qualname":"<NaiveDate as core::default::Default>::default","value":"fn default() -> Self","parent":{"krate":1,"index":3241},"children":[],"decl_id":{"krate":1,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1274},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":399716,"byte_end":399728,"line_start":44,"line_end":44,"column_start":11,"column_end":23},"name":"MIN_DATETIME","qualname":"::naive::datetime::MIN_DATETIME","value":"NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" The minimum possible `NaiveDateTime`.\n","sig":null,"attributes":[{"value":"/ The minimum possible `NaiveDateTime`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":399591,"byte_end":399632,"line_start":42,"line_end":42,"column_start":1,"column_end":42}},{"value":"deprecated(since = \"0.4.20\", note = \"Use NaiveDateTime::MIN instead\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":399633,"byte_end":399705,"line_start":43,"line_end":43,"column_start":1,"column_end":73}}]},{"kind":"Const","id":{"krate":0,"index":1275},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":399891,"byte_end":399903,"line_start":47,"line_end":47,"column_start":11,"column_end":23},"name":"MAX_DATETIME","qualname":"::naive::datetime::MAX_DATETIME","value":"NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" The maximum possible `NaiveDateTime`.\n","sig":null,"attributes":[{"value":"/ The maximum possible `NaiveDateTime`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":399766,"byte_end":399807,"line_start":45,"line_end":45,"column_start":1,"column_end":42}},{"value":"deprecated(since = \"0.4.20\", note = \"Use NaiveDateTime::MAX instead\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":399808,"byte_end":399880,"line_start":46,"line_end":46,"column_start":1,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":2460},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":400879,"byte_end":400892,"line_start":76,"line_end":76,"column_start":12,"column_end":25},"name":"NaiveDateTime","qualname":"::naive::datetime::NaiveDateTime","value":"NaiveDateTime {  }","parent":null,"children":[{"krate":0,"index":2461},{"krate":0,"index":2462}],"decl_id":null,"docs":" ISO 8601 combined date and time without timezone.","sig":null,"attributes":[{"value":"/ ISO 8601 combined date and time without timezone.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":399942,"byte_end":399995,"line_start":49,"line_end":49,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":399996,"byte_end":399999,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":400000,"byte_end":400013,"line_start":51,"line_end":51,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":400014,"byte_end":400017,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ `NaiveDateTime` is commonly created from [`NaiveDate`](./struct.NaiveDate.html).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":400018,"byte_end":400102,"line_start":53,"line_end":53,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":400103,"byte_end":400106,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":400107,"byte_end":400114,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":400115,"byte_end":400158,"line_start":56,"line_end":56,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":400159,"byte_end":400162,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2016, 7, 8).and_hms(9, 10, 11);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":400163,"byte_end":400242,"line_start":58,"line_end":58,"column_start":1,"column_end":80}},{"value":"/ # let _ = dt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":400243,"byte_end":400260,"line_start":59,"line_end":59,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":400261,"byte_end":400268,"line_start":60,"line_end":60,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":400269,"byte_end":400272,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ You can use typical [date-like](../trait.Datelike.html) and","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":400273,"byte_end":400336,"line_start":62,"line_end":62,"column_start":1,"column_end":64}},{"value":"/ [time-like](../trait.Timelike.html) methods,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":400337,"byte_end":400385,"line_start":63,"line_end":63,"column_start":1,"column_end":49}},{"value":"/ provided that relevant traits are in the scope.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":400386,"byte_end":400437,"line_start":64,"line_end":64,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":400438,"byte_end":400441,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":400442,"byte_end":400449,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/ # use chrono::{NaiveDate, NaiveDateTime};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":400450,"byte_end":400495,"line_start":67,"line_end":67,"column_start":1,"column_end":46}},{"value":"/ # let dt: NaiveDateTime = NaiveDate::from_ymd(2016, 7, 8).and_hms(9, 10, 11);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":400496,"byte_end":400577,"line_start":68,"line_end":68,"column_start":1,"column_end":82}},{"value":"/ use chrono::{Datelike, Timelike, Weekday};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":400578,"byte_end":400624,"line_start":69,"line_end":69,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":400625,"byte_end":400628,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(dt.weekday(), Weekday::Fri);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":400629,"byte_end":400672,"line_start":71,"line_end":71,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(dt.num_seconds_from_midnight(), 33011);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":400673,"byte_end":400727,"line_start":72,"line_end":72,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":400728,"byte_end":400735,"line_start":73,"line_end":73,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1277},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":401552,"byte_end":401555,"line_start":99,"line_end":99,"column_start":12,"column_end":15},"name":"new","qualname":"<NaiveDateTime>::new","value":"fn new(NaiveDate, NaiveTime) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from date and time components.\n Equivalent to [`date.and_time(time)`](./struct.NaiveDate.html#method.and_time)\n and many other helper constructors on `NaiveDate`.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from date and time components.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":400965,"byte_end":401027,"line_start":82,"line_end":82,"column_start":5,"column_end":67}},{"value":"/ Equivalent to [`date.and_time(time)`](./struct.NaiveDate.html#method.and_time)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":401032,"byte_end":401114,"line_start":83,"line_end":83,"column_start":5,"column_end":87}},{"value":"/ and many other helper constructors on `NaiveDate`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":401119,"byte_end":401173,"line_start":84,"line_end":84,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":401178,"byte_end":401181,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":401186,"byte_end":401199,"line_start":86,"line_end":86,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":401204,"byte_end":401207,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":401212,"byte_end":401219,"line_start":88,"line_end":88,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveTime, NaiveDateTime};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":401224,"byte_end":401278,"line_start":89,"line_end":89,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":401283,"byte_end":401286,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":401291,"byte_end":401335,"line_start":91,"line_end":91,"column_start":5,"column_end":49}},{"value":"/ let t = NaiveTime::from_hms_milli(12, 34, 56, 789);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":401340,"byte_end":401395,"line_start":92,"line_end":92,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":401400,"byte_end":401403,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDateTime::new(d, t);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":401408,"byte_end":401446,"line_start":94,"line_end":94,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(dt.date(), d);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":401451,"byte_end":401480,"line_start":95,"line_end":95,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(dt.time(), t);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":401485,"byte_end":401514,"line_start":96,"line_end":96,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":401519,"byte_end":401526,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":401531,"byte_end":401540,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1278},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":402824,"byte_end":402838,"line_start":129,"line_end":129,"column_start":12,"column_end":26},"name":"from_timestamp","qualname":"<NaiveDateTime>::from_timestamp","value":"fn from_timestamp(i64, u32) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` corresponding to a UTC date and time,\n from the number of non-leap seconds\n since the midnight UTC on January 1, 1970 (aka \"UNIX timestamp\")\n and the number of nanoseconds since the last whole non-leap second.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` corresponding to a UTC date and time,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":401657,"byte_end":401726,"line_start":103,"line_end":103,"column_start":5,"column_end":74}},{"value":"/ from the number of non-leap seconds","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":401731,"byte_end":401770,"line_start":104,"line_end":104,"column_start":5,"column_end":44}},{"value":"/ since the midnight UTC on January 1, 1970 (aka \"UNIX timestamp\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":401775,"byte_end":401843,"line_start":105,"line_end":105,"column_start":5,"column_end":73}},{"value":"/ and the number of nanoseconds since the last whole non-leap second.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":401848,"byte_end":401919,"line_start":106,"line_end":106,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":401924,"byte_end":401927,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ For a non-naive version of this function see","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":401932,"byte_end":401980,"line_start":108,"line_end":108,"column_start":5,"column_end":53}},{"value":"/ [`TimeZone::timestamp`](../offset/trait.TimeZone.html#method.timestamp).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":401985,"byte_end":402061,"line_start":109,"line_end":109,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":402066,"byte_end":402069,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ The nanosecond part can exceed 1,000,000,000 in order to represent the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":402074,"byte_end":402148,"line_start":111,"line_end":111,"column_start":5,"column_end":79}},{"value":"/ [leap second](./struct.NaiveTime.html#leap-second-handling). (The true \"UNIX","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":402153,"byte_end":402233,"line_start":112,"line_end":112,"column_start":5,"column_end":85}},{"value":"/ timestamp\" cannot represent a leap second unambiguously.)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":402238,"byte_end":402299,"line_start":113,"line_end":113,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":402304,"byte_end":402307,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-range number of seconds and/or invalid nanosecond.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":402312,"byte_end":402387,"line_start":115,"line_end":115,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":402392,"byte_end":402395,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":402400,"byte_end":402413,"line_start":117,"line_end":117,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":402418,"byte_end":402421,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":402426,"byte_end":402433,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDateTime, NaiveDate};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":402438,"byte_end":402481,"line_start":120,"line_end":120,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":402486,"byte_end":402489,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDateTime::from_timestamp(0, 42_000_000);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":402494,"byte_end":402552,"line_start":122,"line_end":122,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(dt, NaiveDate::from_ymd(1970, 1, 1).and_hms_milli(0, 0, 0, 42));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":402557,"byte_end":402636,"line_start":123,"line_end":123,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":402641,"byte_end":402644,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDateTime::from_timestamp(1_000_000_000, 0);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":402649,"byte_end":402710,"line_start":125,"line_end":125,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(dt, NaiveDate::from_ymd(2001, 9, 9).and_hms(1, 46, 40));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":402715,"byte_end":402786,"line_start":126,"line_end":126,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":402791,"byte_end":402798,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":402803,"byte_end":402812,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1279},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":404178,"byte_end":404196,"line_start":160,"line_end":160,"column_start":12,"column_end":30},"name":"from_timestamp_opt","qualname":"<NaiveDateTime>::from_timestamp_opt","value":"fn from_timestamp_opt(i64, u32) -> Option<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` corresponding to a UTC date and time,\n from the number of non-leap seconds\n since the midnight UTC on January 1, 1970 (aka \"UNIX timestamp\")\n and the number of nanoseconds since the last whole non-leap second.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` corresponding to a UTC date and time,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":403023,"byte_end":403092,"line_start":134,"line_end":134,"column_start":5,"column_end":74}},{"value":"/ from the number of non-leap seconds","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":403097,"byte_end":403136,"line_start":135,"line_end":135,"column_start":5,"column_end":44}},{"value":"/ since the midnight UTC on January 1, 1970 (aka \"UNIX timestamp\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":403141,"byte_end":403209,"line_start":136,"line_end":136,"column_start":5,"column_end":73}},{"value":"/ and the number of nanoseconds since the last whole non-leap second.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":403214,"byte_end":403285,"line_start":137,"line_end":137,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":403290,"byte_end":403293,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ The nanosecond part can exceed 1,000,000,000","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":403298,"byte_end":403346,"line_start":139,"line_end":139,"column_start":5,"column_end":53}},{"value":"/ in order to represent the [leap second](./struct.NaiveTime.html#leap-second-handling).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":403351,"byte_end":403441,"line_start":140,"line_end":140,"column_start":5,"column_end":95}},{"value":"/ (The true \"UNIX timestamp\" cannot represent a leap second unambiguously.)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":403446,"byte_end":403523,"line_start":141,"line_end":141,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":403528,"byte_end":403531,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on the out-of-range number of seconds and/or invalid nanosecond.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":403536,"byte_end":403619,"line_start":143,"line_end":143,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":403624,"byte_end":403627,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":403632,"byte_end":403645,"line_start":145,"line_end":145,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":403650,"byte_end":403653,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":403658,"byte_end":403665,"line_start":147,"line_end":147,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDateTime, NaiveDate};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":403670,"byte_end":403713,"line_start":148,"line_end":148,"column_start":5,"column_end":48}},{"value":"/ use std::i64;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":403718,"byte_end":403735,"line_start":149,"line_end":149,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":403740,"byte_end":403743,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ let from_timestamp_opt = NaiveDateTime::from_timestamp_opt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":403748,"byte_end":403811,"line_start":151,"line_end":151,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":403816,"byte_end":403819,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ assert!(from_timestamp_opt(0, 0).is_some());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":403824,"byte_end":403872,"line_start":153,"line_end":153,"column_start":5,"column_end":53}},{"value":"/ assert!(from_timestamp_opt(0, 999_999_999).is_some());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":403877,"byte_end":403935,"line_start":154,"line_end":154,"column_start":5,"column_end":63}},{"value":"/ assert!(from_timestamp_opt(0, 1_500_000_000).is_some()); // leap second","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":403940,"byte_end":404015,"line_start":155,"line_end":155,"column_start":5,"column_end":80}},{"value":"/ assert!(from_timestamp_opt(0, 2_000_000_000).is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":404020,"byte_end":404080,"line_start":156,"line_end":156,"column_start":5,"column_end":65}},{"value":"/ assert!(from_timestamp_opt(i64::MAX, 0).is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":404085,"byte_end":404140,"line_start":157,"line_end":157,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":404145,"byte_end":404152,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":404157,"byte_end":404166,"line_start":159,"line_end":159,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1281},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":407559,"byte_end":407573,"line_start":234,"line_end":234,"column_start":12,"column_end":26},"name":"parse_from_str","qualname":"<NaiveDateTime>::parse_from_str","value":"fn parse_from_str<'_, '_>(&'_ str, &'_ str) -> ParseResult<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Parses a string with the specified format string and returns a new `NaiveDateTime`.\n See the [`format::strftime` module](../format/strftime/index.html)\n on the supported escape sequences.","sig":null,"attributes":[{"value":"/ Parses a string with the specified format string and returns a new `NaiveDateTime`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":404706,"byte_end":404793,"line_start":173,"line_end":173,"column_start":5,"column_end":92}},{"value":"/ See the [`format::strftime` module](../format/strftime/index.html)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":404798,"byte_end":404868,"line_start":174,"line_end":174,"column_start":5,"column_end":75}},{"value":"/ on the supported escape sequences.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":404873,"byte_end":404911,"line_start":175,"line_end":175,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":404916,"byte_end":404919,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":404924,"byte_end":404937,"line_start":177,"line_end":177,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":404942,"byte_end":404945,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":404950,"byte_end":404957,"line_start":179,"line_end":179,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDateTime, NaiveDate};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":404962,"byte_end":405005,"line_start":180,"line_end":180,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":405010,"byte_end":405013,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ let parse_from_str = NaiveDateTime::parse_from_str;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":405018,"byte_end":405073,"line_start":182,"line_end":182,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":405078,"byte_end":405081,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(parse_from_str(\"2015-09-05 23:56:04\", \"%Y-%m-%d %H:%M:%S\"),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":405086,"byte_end":405160,"line_start":184,"line_end":184,"column_start":5,"column_end":79}},{"value":"/            Ok(NaiveDate::from_ymd(2015, 9, 5).and_hms(23, 56, 4)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":405165,"byte_end":405236,"line_start":185,"line_end":185,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(parse_from_str(\"5sep2015pm012345.6789\", \"%d%b%Y%p%I%M%S%.f\"),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":405241,"byte_end":405317,"line_start":186,"line_end":186,"column_start":5,"column_end":81}},{"value":"/            Ok(NaiveDate::from_ymd(2015, 9, 5).and_hms_micro(13, 23, 45, 678_900)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":405322,"byte_end":405409,"line_start":187,"line_end":187,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":405414,"byte_end":405421,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":405426,"byte_end":405429,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Offset is ignored for the purpose of parsing.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":405434,"byte_end":405483,"line_start":190,"line_end":190,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":405488,"byte_end":405491,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":405496,"byte_end":405503,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{NaiveDateTime, NaiveDate};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":405508,"byte_end":405553,"line_start":193,"line_end":193,"column_start":5,"column_end":50}},{"value":"/ # let parse_from_str = NaiveDateTime::parse_from_str;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":405558,"byte_end":405615,"line_start":194,"line_end":194,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(parse_from_str(\"2014-5-17T12:34:56+09:30\", \"%Y-%m-%dT%H:%M:%S%z\"),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":405620,"byte_end":405701,"line_start":195,"line_end":195,"column_start":5,"column_end":86}},{"value":"/            Ok(NaiveDate::from_ymd(2014, 5, 17).and_hms(12, 34, 56)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":405706,"byte_end":405779,"line_start":196,"line_end":196,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":405784,"byte_end":405791,"line_start":197,"line_end":197,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":405796,"byte_end":405799,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ [Leap seconds](./struct.NaiveTime.html#leap-second-handling) are correctly handled by","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":405804,"byte_end":405893,"line_start":199,"line_end":199,"column_start":5,"column_end":94}},{"value":"/ treating any time of the form `hh:mm:60` as a leap second.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":405898,"byte_end":405960,"line_start":200,"line_end":200,"column_start":5,"column_end":67}},{"value":"/ (This equally applies to the formatting, so the round trip is possible.)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":405965,"byte_end":406041,"line_start":201,"line_end":201,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":406046,"byte_end":406049,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":406054,"byte_end":406061,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{NaiveDateTime, NaiveDate};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":406066,"byte_end":406111,"line_start":204,"line_end":204,"column_start":5,"column_end":50}},{"value":"/ # let parse_from_str = NaiveDateTime::parse_from_str;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":406116,"byte_end":406173,"line_start":205,"line_end":205,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(parse_from_str(\"2015-07-01 08:59:60.123\", \"%Y-%m-%d %H:%M:%S%.f\"),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":406178,"byte_end":406259,"line_start":206,"line_end":206,"column_start":5,"column_end":86}},{"value":"/            Ok(NaiveDate::from_ymd(2015, 7, 1).and_hms_milli(8, 59, 59, 1_123)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":406264,"byte_end":406348,"line_start":207,"line_end":207,"column_start":5,"column_end":89}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":406353,"byte_end":406360,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":406365,"byte_end":406368,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ Missing seconds are assumed to be zero,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":406373,"byte_end":406416,"line_start":210,"line_end":210,"column_start":5,"column_end":48}},{"value":"/ but out-of-bound times or insufficient fields are errors otherwise.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":406421,"byte_end":406492,"line_start":211,"line_end":211,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":406497,"byte_end":406500,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":406505,"byte_end":406512,"line_start":213,"line_end":213,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{NaiveDateTime, NaiveDate};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":406517,"byte_end":406562,"line_start":214,"line_end":214,"column_start":5,"column_end":50}},{"value":"/ # let parse_from_str = NaiveDateTime::parse_from_str;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":406567,"byte_end":406624,"line_start":215,"line_end":215,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(parse_from_str(\"94/9/4 7:15\", \"%y/%m/%d %H:%M\"),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":406629,"byte_end":406692,"line_start":216,"line_end":216,"column_start":5,"column_end":68}},{"value":"/            Ok(NaiveDate::from_ymd(1994, 9, 4).and_hms(7, 15, 0)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":406697,"byte_end":406767,"line_start":217,"line_end":217,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":406772,"byte_end":406775,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ assert!(parse_from_str(\"04m33s\", \"%Mm%Ss\").is_err());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":406780,"byte_end":406837,"line_start":219,"line_end":219,"column_start":5,"column_end":62}},{"value":"/ assert!(parse_from_str(\"94/9/4 12\", \"%y/%m/%d %H\").is_err());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":406842,"byte_end":406907,"line_start":220,"line_end":220,"column_start":5,"column_end":70}},{"value":"/ assert!(parse_from_str(\"94/9/4 17:60\", \"%y/%m/%d %H:%M\").is_err());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":406912,"byte_end":406983,"line_start":221,"line_end":221,"column_start":5,"column_end":76}},{"value":"/ assert!(parse_from_str(\"94/9/4 24:00:00\", \"%y/%m/%d %H:%M:%S\").is_err());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":406988,"byte_end":407065,"line_start":222,"line_end":222,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":407070,"byte_end":407077,"line_start":223,"line_end":223,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":407082,"byte_end":407085,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ All parsed fields should be consistent to each other, otherwise it's an error.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":407090,"byte_end":407172,"line_start":225,"line_end":225,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":407177,"byte_end":407180,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":407185,"byte_end":407192,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/ # use chrono::NaiveDateTime;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":407197,"byte_end":407229,"line_start":228,"line_end":228,"column_start":5,"column_end":37}},{"value":"/ # let parse_from_str = NaiveDateTime::parse_from_str;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":407234,"byte_end":407291,"line_start":229,"line_end":229,"column_start":5,"column_end":62}},{"value":"/ let fmt = \"%Y-%m-%d %H:%M:%S = UNIX timestamp %s\";","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":407296,"byte_end":407350,"line_start":230,"line_end":230,"column_start":5,"column_end":59}},{"value":"/ assert!(parse_from_str(\"2001-09-09 01:46:39 = UNIX timestamp 999999999\", fmt).is_ok());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":407355,"byte_end":407446,"line_start":231,"line_end":231,"column_start":5,"column_end":96}},{"value":"/ assert!(parse_from_str(\"1970-01-01 00:00:00 = UNIX timestamp 1\", fmt).is_err());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":407451,"byte_end":407535,"line_start":232,"line_end":232,"column_start":5,"column_end":89}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":407540,"byte_end":407547,"line_start":233,"line_end":233,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1282},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408093,"byte_end":408097,"line_start":251,"line_end":251,"column_start":12,"column_end":16},"name":"date","qualname":"<NaiveDateTime>::date","value":"fn date<'_>(&'_ Self) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Retrieves a date component.","sig":null,"attributes":[{"value":"/ Retrieves a date component.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":407806,"byte_end":407837,"line_start":240,"line_end":240,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":407842,"byte_end":407845,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":407850,"byte_end":407863,"line_start":242,"line_end":242,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":407868,"byte_end":407871,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":407876,"byte_end":407883,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":407888,"byte_end":407914,"line_start":245,"line_end":245,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":407919,"byte_end":407922,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2016, 7, 8).and_hms(9, 10, 11);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":407927,"byte_end":407991,"line_start":247,"line_end":247,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(dt.date(), NaiveDate::from_ymd(2016, 7, 8));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":407996,"byte_end":408055,"line_start":248,"line_end":248,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408060,"byte_end":408067,"line_start":249,"line_end":249,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408072,"byte_end":408081,"line_start":250,"line_end":250,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1283},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408448,"byte_end":408452,"line_start":266,"line_end":266,"column_start":12,"column_end":16},"name":"time","qualname":"<NaiveDateTime>::time","value":"fn time<'_>(&'_ Self) -> NaiveTime","parent":null,"children":[],"decl_id":null,"docs":" Retrieves a time component.","sig":null,"attributes":[{"value":"/ Retrieves a time component.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408149,"byte_end":408180,"line_start":255,"line_end":255,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408185,"byte_end":408188,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408193,"byte_end":408206,"line_start":257,"line_end":257,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408211,"byte_end":408214,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408219,"byte_end":408226,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveTime};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408231,"byte_end":408270,"line_start":260,"line_end":260,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408275,"byte_end":408278,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2016, 7, 8).and_hms(9, 10, 11);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408283,"byte_end":408347,"line_start":262,"line_end":262,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(dt.time(), NaiveTime::from_hms(9, 10, 11));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408352,"byte_end":408410,"line_start":263,"line_end":263,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408415,"byte_end":408422,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408427,"byte_end":408436,"line_start":265,"line_end":265,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1284},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":409357,"byte_end":409366,"line_start":293,"line_end":293,"column_start":12,"column_end":21},"name":"timestamp","qualname":"<NaiveDateTime>::timestamp","value":"fn timestamp<'_>(&'_ Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of non-leap seconds since the midnight on January 1, 1970.","sig":null,"attributes":[{"value":"/ Returns the number of non-leap seconds since the midnight on January 1, 1970.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408504,"byte_end":408585,"line_start":270,"line_end":270,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408590,"byte_end":408593,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ Note that this does *not* account for the timezone!","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408598,"byte_end":408653,"line_start":272,"line_end":272,"column_start":5,"column_end":60}},{"value":"/ The true \"UNIX timestamp\" would count seconds since the midnight *UTC* on the epoch.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408658,"byte_end":408746,"line_start":273,"line_end":273,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408751,"byte_end":408754,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408759,"byte_end":408772,"line_start":275,"line_end":275,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408777,"byte_end":408780,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408785,"byte_end":408792,"line_start":277,"line_end":277,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408797,"byte_end":408823,"line_start":278,"line_end":278,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408828,"byte_end":408831,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(1970, 1, 1).and_hms_milli(0, 0, 1, 980);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408836,"byte_end":408909,"line_start":280,"line_end":280,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(dt.timestamp(), 1);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408914,"byte_end":408948,"line_start":281,"line_end":281,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408953,"byte_end":408956,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2001, 9, 9).and_hms(1, 46, 40);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":408961,"byte_end":409025,"line_start":283,"line_end":283,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(dt.timestamp(), 1_000_000_000);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":409030,"byte_end":409076,"line_start":284,"line_end":284,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":409081,"byte_end":409084,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(1969, 12, 31).and_hms(23, 59, 59);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":409089,"byte_end":409156,"line_start":286,"line_end":286,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(dt.timestamp(), -1);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":409161,"byte_end":409196,"line_start":287,"line_end":287,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":409201,"byte_end":409204,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(-1, 1, 1).and_hms(0, 0, 0);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":409209,"byte_end":409269,"line_start":289,"line_end":289,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(dt.timestamp(), -62198755200);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":409274,"byte_end":409319,"line_start":290,"line_end":290,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":409324,"byte_end":409331,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":409336,"byte_end":409345,"line_start":292,"line_end":292,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1286},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":410742,"byte_end":410758,"line_start":325,"line_end":325,"column_start":12,"column_end":28},"name":"timestamp_millis","qualname":"<NaiveDateTime>::timestamp_millis","value":"fn timestamp_millis<'_>(&'_ Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of non-leap *milliseconds* since midnight on January 1, 1970.","sig":null,"attributes":[{"value":"/ Returns the number of non-leap *milliseconds* since midnight on January 1, 1970.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":409668,"byte_end":409752,"line_start":300,"line_end":300,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":409757,"byte_end":409760,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ Note that this does *not* account for the timezone!","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":409765,"byte_end":409820,"line_start":302,"line_end":302,"column_start":5,"column_end":60}},{"value":"/ The true \"UNIX timestamp\" would count seconds since the midnight *UTC* on the epoch.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":409825,"byte_end":409913,"line_start":303,"line_end":303,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":409918,"byte_end":409921,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ Note also that this does reduce the number of years that can be","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":409926,"byte_end":409993,"line_start":305,"line_end":305,"column_start":5,"column_end":72}},{"value":"/ represented from ~584 Billion to ~584 Million. (If this is a problem,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":409998,"byte_end":410071,"line_start":306,"line_end":306,"column_start":5,"column_end":78}},{"value":"/ please file an issue to let me know what domain needs millisecond","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":410076,"byte_end":410145,"line_start":307,"line_end":307,"column_start":5,"column_end":74}},{"value":"/ precision over billions of years, I'm curious.)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":410150,"byte_end":410201,"line_start":308,"line_end":308,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":410206,"byte_end":410209,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":410214,"byte_end":410227,"line_start":310,"line_end":310,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":410232,"byte_end":410235,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":410240,"byte_end":410247,"line_start":312,"line_end":312,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":410252,"byte_end":410278,"line_start":313,"line_end":313,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":410283,"byte_end":410286,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(1970, 1, 1).and_hms_milli(0, 0, 1, 444);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":410291,"byte_end":410364,"line_start":315,"line_end":315,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(dt.timestamp_millis(), 1_444);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":410369,"byte_end":410414,"line_start":316,"line_end":316,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":410419,"byte_end":410422,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2001, 9, 9).and_hms_milli(1, 46, 40, 555);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":410427,"byte_end":410502,"line_start":318,"line_end":318,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(dt.timestamp_millis(), 1_000_000_000_555);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":410507,"byte_end":410564,"line_start":319,"line_end":319,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":410569,"byte_end":410572,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(1969, 12, 31).and_hms_milli(23, 59, 59, 100);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":410577,"byte_end":410655,"line_start":321,"line_end":321,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(dt.timestamp_millis(), -900);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":410660,"byte_end":410704,"line_start":322,"line_end":322,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":410709,"byte_end":410716,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":410721,"byte_end":410730,"line_start":324,"line_end":324,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1287},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":411824,"byte_end":411840,"line_start":352,"line_end":352,"column_start":12,"column_end":28},"name":"timestamp_micros","qualname":"<NaiveDateTime>::timestamp_micros","value":"fn timestamp_micros<'_>(&'_ Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of non-leap *microseconds* since midnight on January 1, 1970.","sig":null,"attributes":[{"value":"/ Returns the number of non-leap *microseconds* since midnight on January 1, 1970.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":410889,"byte_end":410973,"line_start":330,"line_end":330,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":410978,"byte_end":410981,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ Note that this does *not* account for the timezone!","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":410986,"byte_end":411041,"line_start":332,"line_end":332,"column_start":5,"column_end":60}},{"value":"/ The true \"UNIX timestamp\" would count seconds since the midnight *UTC* on the epoch.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":411046,"byte_end":411134,"line_start":333,"line_end":333,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":411139,"byte_end":411142,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ Note also that this does reduce the number of years that can be","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":411147,"byte_end":411214,"line_start":335,"line_end":335,"column_start":5,"column_end":72}},{"value":"/ represented from ~584 Billion to ~584 Thousand. (If this is a problem,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":411219,"byte_end":411293,"line_start":336,"line_end":336,"column_start":5,"column_end":79}},{"value":"/ please file an issue to let me know what domain needs microsecond","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":411298,"byte_end":411367,"line_start":337,"line_end":337,"column_start":5,"column_end":74}},{"value":"/ precision over millennia, I'm curious.)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":411372,"byte_end":411415,"line_start":338,"line_end":338,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":411420,"byte_end":411423,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":411428,"byte_end":411441,"line_start":340,"line_end":340,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":411446,"byte_end":411449,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":411454,"byte_end":411461,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":411466,"byte_end":411492,"line_start":343,"line_end":343,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":411497,"byte_end":411500,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(1970, 1, 1).and_hms_micro(0, 0, 1, 444);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":411505,"byte_end":411578,"line_start":345,"line_end":345,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(dt.timestamp_micros(), 1_000_444);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":411583,"byte_end":411632,"line_start":346,"line_end":346,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":411637,"byte_end":411640,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2001, 9, 9).and_hms_micro(1, 46, 40, 555);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":411645,"byte_end":411720,"line_start":348,"line_end":348,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(dt.timestamp_micros(), 1_000_000_000_000_555);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":411725,"byte_end":411786,"line_start":349,"line_end":349,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":411791,"byte_end":411798,"line_start":350,"line_end":350,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":411803,"byte_end":411812,"line_start":351,"line_end":351,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1288},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":413311,"byte_end":413326,"line_start":391,"line_end":391,"column_start":12,"column_end":27},"name":"timestamp_nanos","qualname":"<NaiveDateTime>::timestamp_nanos","value":"fn timestamp_nanos<'_>(&'_ Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of non-leap *nanoseconds* since midnight on January 1, 1970.","sig":null,"attributes":[{"value":"/ Returns the number of non-leap *nanoseconds* since midnight on January 1, 1970.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":411976,"byte_end":412059,"line_start":357,"line_end":357,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":412064,"byte_end":412067,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ Note that this does *not* account for the timezone!","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":412072,"byte_end":412127,"line_start":359,"line_end":359,"column_start":5,"column_end":60}},{"value":"/ The true \"UNIX timestamp\" would count seconds since the midnight *UTC* on the epoch.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":412132,"byte_end":412220,"line_start":360,"line_end":360,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":412225,"byte_end":412228,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":412233,"byte_end":412245,"line_start":362,"line_end":362,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":412250,"byte_end":412253,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ Note also that this does reduce the number of years that can be","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":412258,"byte_end":412325,"line_start":364,"line_end":364,"column_start":5,"column_end":72}},{"value":"/ represented from ~584 Billion to ~584 years. The dates that can be","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":412330,"byte_end":412400,"line_start":365,"line_end":365,"column_start":5,"column_end":75}},{"value":"/ represented as nanoseconds are between 1677-09-21T00:12:44.0 and","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":412405,"byte_end":412473,"line_start":366,"line_end":366,"column_start":5,"column_end":73}},{"value":"/ 2262-04-11T23:47:16.854775804.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":412478,"byte_end":412512,"line_start":367,"line_end":367,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":412517,"byte_end":412520,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ (If this is a problem, please file an issue to let me know what domain","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":412525,"byte_end":412599,"line_start":369,"line_end":369,"column_start":5,"column_end":79}},{"value":"/ needs nanosecond precision over millennia, I'm curious.)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":412604,"byte_end":412664,"line_start":370,"line_end":370,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":412669,"byte_end":412672,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":412677,"byte_end":412690,"line_start":372,"line_end":372,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":412695,"byte_end":412698,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":412703,"byte_end":412710,"line_start":374,"line_end":374,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":412715,"byte_end":412758,"line_start":375,"line_end":375,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":412763,"byte_end":412766,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(1970, 1, 1).and_hms_nano(0, 0, 1, 444);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":412771,"byte_end":412843,"line_start":377,"line_end":377,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(dt.timestamp_nanos(), 1_000_000_444);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":412848,"byte_end":412900,"line_start":378,"line_end":378,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":412905,"byte_end":412908,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2001, 9, 9).and_hms_nano(1, 46, 40, 555);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":412913,"byte_end":412987,"line_start":380,"line_end":380,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":412992,"byte_end":412995,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ const A_BILLION: i64 = 1_000_000_000;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":413000,"byte_end":413041,"line_start":382,"line_end":382,"column_start":5,"column_end":46}},{"value":"/ let nanos = dt.timestamp_nanos();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":413046,"byte_end":413083,"line_start":383,"line_end":383,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(nanos, 1_000_000_000_000_000_555);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":413088,"byte_end":413137,"line_start":384,"line_end":384,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":413142,"byte_end":413157,"line_start":385,"line_end":385,"column_start":5,"column_end":20}},{"value":"/     dt,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":413162,"byte_end":413173,"line_start":386,"line_end":386,"column_start":5,"column_end":16}},{"value":"/     NaiveDateTime::from_timestamp(nanos / A_BILLION, (nanos % A_BILLION) as u32)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":413178,"byte_end":413262,"line_start":387,"line_end":387,"column_start":5,"column_end":89}},{"value":"/ );","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":413267,"byte_end":413273,"line_start":388,"line_end":388,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":413278,"byte_end":413285,"line_start":389,"line_end":389,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":413290,"byte_end":413299,"line_start":390,"line_end":390,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1289},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414102,"byte_end":414125,"line_start":413,"line_end":413,"column_start":12,"column_end":35},"name":"timestamp_subsec_millis","qualname":"<NaiveDateTime>::timestamp_subsec_millis","value":"fn timestamp_subsec_millis<'_>(&'_ Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of milliseconds since the last whole non-leap second.","sig":null,"attributes":[{"value":"/ Returns the number of milliseconds since the last whole non-leap second.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":413465,"byte_end":413541,"line_start":396,"line_end":396,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":413546,"byte_end":413549,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 999,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":413554,"byte_end":413596,"line_start":398,"line_end":398,"column_start":5,"column_end":47}},{"value":"/ or for [leap seconds](./struct.NaiveTime.html#leap-second-handling), to 1,999.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":413601,"byte_end":413683,"line_start":399,"line_end":399,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":413688,"byte_end":413691,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":413696,"byte_end":413709,"line_start":401,"line_end":401,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":413714,"byte_end":413717,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":413722,"byte_end":413729,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":413734,"byte_end":413760,"line_start":404,"line_end":404,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":413765,"byte_end":413768,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2016, 7, 8).and_hms_nano(9, 10, 11, 123_456_789);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":413773,"byte_end":413855,"line_start":406,"line_end":406,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(dt.timestamp_subsec_millis(), 123);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":413860,"byte_end":413910,"line_start":407,"line_end":407,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":413915,"byte_end":413918,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2015, 7, 1).and_hms_nano(8, 59, 59, 1_234_567_890);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":413923,"byte_end":414007,"line_start":409,"line_end":409,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(dt.timestamp_subsec_millis(), 1_234);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414012,"byte_end":414064,"line_start":410,"line_end":410,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414069,"byte_end":414076,"line_start":411,"line_end":411,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414081,"byte_end":414090,"line_start":412,"line_end":412,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1290},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414856,"byte_end":414879,"line_start":434,"line_end":434,"column_start":12,"column_end":35},"name":"timestamp_subsec_micros","qualname":"<NaiveDateTime>::timestamp_subsec_micros","value":"fn timestamp_subsec_micros<'_>(&'_ Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of microseconds since the last whole non-leap second.","sig":null,"attributes":[{"value":"/ Returns the number of microseconds since the last whole non-leap second.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414203,"byte_end":414279,"line_start":417,"line_end":417,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414284,"byte_end":414287,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 999,999,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414292,"byte_end":414338,"line_start":419,"line_end":419,"column_start":5,"column_end":51}},{"value":"/ or for [leap seconds](./struct.NaiveTime.html#leap-second-handling), to 1,999,999.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414343,"byte_end":414429,"line_start":420,"line_end":420,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414434,"byte_end":414437,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414442,"byte_end":414455,"line_start":422,"line_end":422,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414460,"byte_end":414463,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414468,"byte_end":414475,"line_start":424,"line_end":424,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414480,"byte_end":414506,"line_start":425,"line_end":425,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414511,"byte_end":414514,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2016, 7, 8).and_hms_nano(9, 10, 11, 123_456_789);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414519,"byte_end":414601,"line_start":427,"line_end":427,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(dt.timestamp_subsec_micros(), 123_456);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414606,"byte_end":414660,"line_start":428,"line_end":428,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414665,"byte_end":414668,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2015, 7, 1).and_hms_nano(8, 59, 59, 1_234_567_890);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414673,"byte_end":414757,"line_start":430,"line_end":430,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(dt.timestamp_subsec_micros(), 1_234_567);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414762,"byte_end":414818,"line_start":431,"line_end":431,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414823,"byte_end":414830,"line_start":432,"line_end":432,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414835,"byte_end":414844,"line_start":433,"line_end":433,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1291},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":415619,"byte_end":415641,"line_start":455,"line_end":455,"column_start":12,"column_end":34},"name":"timestamp_subsec_nanos","qualname":"<NaiveDateTime>::timestamp_subsec_nanos","value":"fn timestamp_subsec_nanos<'_>(&'_ Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of nanoseconds since the last whole non-leap second.","sig":null,"attributes":[{"value":"/ Returns the number of nanoseconds since the last whole non-leap second.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":414953,"byte_end":415028,"line_start":438,"line_end":438,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":415033,"byte_end":415036,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 999,999,999,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":415041,"byte_end":415091,"line_start":440,"line_end":440,"column_start":5,"column_end":55}},{"value":"/ or for [leap seconds](./struct.NaiveTime.html#leap-second-handling), to 1,999,999,999.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":415096,"byte_end":415186,"line_start":441,"line_end":441,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":415191,"byte_end":415194,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":415199,"byte_end":415212,"line_start":443,"line_end":443,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":415217,"byte_end":415220,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":415225,"byte_end":415232,"line_start":445,"line_end":445,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":415237,"byte_end":415263,"line_start":446,"line_end":446,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":415268,"byte_end":415271,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2016, 7, 8).and_hms_nano(9, 10, 11, 123_456_789);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":415276,"byte_end":415358,"line_start":448,"line_end":448,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(dt.timestamp_subsec_nanos(), 123_456_789);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":415363,"byte_end":415420,"line_start":449,"line_end":449,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":415425,"byte_end":415428,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2015, 7, 1).and_hms_nano(8, 59, 59, 1_234_567_890);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":415433,"byte_end":415517,"line_start":451,"line_end":451,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(dt.timestamp_subsec_nanos(), 1_234_567_890);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":415522,"byte_end":415581,"line_start":452,"line_end":452,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":415586,"byte_end":415593,"line_start":453,"line_end":453,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":415598,"byte_end":415607,"line_start":454,"line_end":454,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1292},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":418740,"byte_end":418758,"line_start":524,"line_end":524,"column_start":12,"column_end":30},"name":"checked_add_signed","qualname":"<NaiveDateTime>::checked_add_signed","value":"fn checked_add_signed(Self, OldDuration) -> Option<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Adds given `Duration` to the current date and time.","sig":null,"attributes":[{"value":"/ Adds given `Duration` to the current date and time.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":415700,"byte_end":415755,"line_start":459,"line_end":459,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":415760,"byte_end":415763,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ As a part of Chrono's [leap second handling](./struct.NaiveTime.html#leap-second-handling),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":415768,"byte_end":415863,"line_start":461,"line_end":461,"column_start":5,"column_end":100}},{"value":"/ the addition assumes that **there is no leap second ever**,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":415868,"byte_end":415931,"line_start":462,"line_end":462,"column_start":5,"column_end":68}},{"value":"/ except when the `NaiveDateTime` itself represents a leap second","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":415936,"byte_end":416003,"line_start":463,"line_end":463,"column_start":5,"column_end":72}},{"value":"/ in which case the assumption becomes that **there is exactly a single leap second ever**.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":416008,"byte_end":416101,"line_start":464,"line_end":464,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":416106,"byte_end":416109,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when it will result in overflow.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":416114,"byte_end":416165,"line_start":466,"line_end":466,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":416170,"byte_end":416173,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":416178,"byte_end":416191,"line_start":468,"line_end":468,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":416196,"byte_end":416199,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":416204,"byte_end":416211,"line_start":470,"line_end":470,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Duration, NaiveDate};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":416216,"byte_end":416254,"line_start":471,"line_end":471,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":416259,"byte_end":416262,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":416267,"byte_end":416306,"line_start":473,"line_end":473,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":416311,"byte_end":416314,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let d = from_ymd(2016, 7, 8);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":416319,"byte_end":416352,"line_start":475,"line_end":475,"column_start":5,"column_end":38}},{"value":"/ let hms = |h, m, s| d.and_hms(h, m, s);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":416357,"byte_end":416400,"line_start":476,"line_end":476,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_add_signed(Duration::zero()),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":416405,"byte_end":416470,"line_start":477,"line_end":477,"column_start":5,"column_end":70}},{"value":"/            Some(hms(3, 5, 7)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":416475,"byte_end":416510,"line_start":478,"line_end":478,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_add_signed(Duration::seconds(1)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":416515,"byte_end":416584,"line_start":479,"line_end":479,"column_start":5,"column_end":74}},{"value":"/            Some(hms(3, 5, 8)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":416589,"byte_end":416624,"line_start":480,"line_end":480,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_add_signed(Duration::seconds(-1)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":416629,"byte_end":416699,"line_start":481,"line_end":481,"column_start":5,"column_end":75}},{"value":"/            Some(hms(3, 5, 6)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":416704,"byte_end":416739,"line_start":482,"line_end":482,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_add_signed(Duration::seconds(3600 + 60)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":416744,"byte_end":416821,"line_start":483,"line_end":483,"column_start":5,"column_end":82}},{"value":"/            Some(hms(4, 6, 7)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":416826,"byte_end":416861,"line_start":484,"line_end":484,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_add_signed(Duration::seconds(86_400)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":416866,"byte_end":416940,"line_start":485,"line_end":485,"column_start":5,"column_end":79}},{"value":"/            Some(from_ymd(2016, 7, 9).and_hms(3, 5, 7)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":416945,"byte_end":417005,"line_start":486,"line_end":486,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":417010,"byte_end":417013,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ let hmsm = |h, m, s, milli| d.and_hms_milli(h, m, s, milli);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":417018,"byte_end":417082,"line_start":488,"line_end":488,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(hmsm(3, 5, 7, 980).checked_add_signed(Duration::milliseconds(450)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":417087,"byte_end":417169,"line_start":489,"line_end":489,"column_start":5,"column_end":87}},{"value":"/            Some(hmsm(3, 5, 8, 430)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":417174,"byte_end":417215,"line_start":490,"line_end":490,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":417220,"byte_end":417227,"line_start":491,"line_end":491,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":417232,"byte_end":417235,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ Overflow returns `None`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":417240,"byte_end":417268,"line_start":493,"line_end":493,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":417273,"byte_end":417276,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":417281,"byte_end":417288,"line_start":495,"line_end":495,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{Duration, NaiveDate};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":417293,"byte_end":417333,"line_start":496,"line_end":496,"column_start":5,"column_end":45}},{"value":"/ # let hms = |h, m, s| NaiveDate::from_ymd(2016, 7, 8).and_hms(h, m, s);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":417338,"byte_end":417413,"line_start":497,"line_end":497,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_add_signed(Duration::days(1_000_000_000)), None);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":417418,"byte_end":417503,"line_start":498,"line_end":498,"column_start":5,"column_end":90}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":417508,"byte_end":417515,"line_start":499,"line_end":499,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":417520,"byte_end":417523,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ Leap seconds are handled,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":417528,"byte_end":417557,"line_start":501,"line_end":501,"column_start":5,"column_end":34}},{"value":"/ but the addition assumes that it is the only leap second happened.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":417562,"byte_end":417632,"line_start":502,"line_end":502,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":417637,"byte_end":417640,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":417645,"byte_end":417652,"line_start":504,"line_end":504,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{Duration, NaiveDate};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":417657,"byte_end":417697,"line_start":505,"line_end":505,"column_start":5,"column_end":45}},{"value":"/ # let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":417702,"byte_end":417743,"line_start":506,"line_end":506,"column_start":5,"column_end":46}},{"value":"/ # let hmsm = |h, m, s, milli| from_ymd(2016, 7, 8).and_hms_milli(h, m, s, milli);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":417748,"byte_end":417833,"line_start":507,"line_end":507,"column_start":5,"column_end":90}},{"value":"/ let leap = hmsm(3, 5, 59, 1_300);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":417838,"byte_end":417875,"line_start":508,"line_end":508,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(leap.checked_add_signed(Duration::zero()),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":417880,"byte_end":417937,"line_start":509,"line_end":509,"column_start":5,"column_end":62}},{"value":"/            Some(hmsm(3, 5, 59, 1_300)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":417942,"byte_end":417986,"line_start":510,"line_end":510,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(leap.checked_add_signed(Duration::milliseconds(-500)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":417991,"byte_end":418060,"line_start":511,"line_end":511,"column_start":5,"column_end":74}},{"value":"/            Some(hmsm(3, 5, 59, 800)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":418065,"byte_end":418107,"line_start":512,"line_end":512,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(leap.checked_add_signed(Duration::milliseconds(500)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":418112,"byte_end":418180,"line_start":513,"line_end":513,"column_start":5,"column_end":73}},{"value":"/            Some(hmsm(3, 5, 59, 1_800)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":418185,"byte_end":418229,"line_start":514,"line_end":514,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(leap.checked_add_signed(Duration::milliseconds(800)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":418234,"byte_end":418302,"line_start":515,"line_end":515,"column_start":5,"column_end":73}},{"value":"/            Some(hmsm(3, 6, 0, 100)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":418307,"byte_end":418348,"line_start":516,"line_end":516,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(leap.checked_add_signed(Duration::seconds(10)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":418353,"byte_end":418415,"line_start":517,"line_end":517,"column_start":5,"column_end":67}},{"value":"/            Some(hmsm(3, 6, 9, 300)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":418420,"byte_end":418461,"line_start":518,"line_end":518,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(leap.checked_add_signed(Duration::seconds(-10)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":418466,"byte_end":418529,"line_start":519,"line_end":519,"column_start":5,"column_end":68}},{"value":"/            Some(hmsm(3, 5, 50, 300)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":418534,"byte_end":418576,"line_start":520,"line_end":520,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(leap.checked_add_signed(Duration::days(1)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":418581,"byte_end":418639,"line_start":521,"line_end":521,"column_start":5,"column_end":63}},{"value":"/            Some(from_ymd(2016, 7, 9).and_hms_milli(3, 5, 59, 300)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":418644,"byte_end":418716,"line_start":522,"line_end":522,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":418721,"byte_end":418728,"line_start":523,"line_end":523,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1293},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":422001,"byte_end":422019,"line_start":597,"line_end":597,"column_start":12,"column_end":30},"name":"checked_sub_signed","qualname":"<NaiveDateTime>::checked_sub_signed","value":"fn checked_sub_signed(Self, OldDuration) -> Option<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Subtracts given `Duration` from the current date and time.","sig":null,"attributes":[{"value":"/ Subtracts given `Duration` from the current date and time.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":419184,"byte_end":419246,"line_start":536,"line_end":536,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":419251,"byte_end":419254,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ As a part of Chrono's [leap second handling](./struct.NaiveTime.html#leap-second-handling),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":419259,"byte_end":419354,"line_start":538,"line_end":538,"column_start":5,"column_end":100}},{"value":"/ the subtraction assumes that **there is no leap second ever**,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":419359,"byte_end":419425,"line_start":539,"line_end":539,"column_start":5,"column_end":71}},{"value":"/ except when the `NaiveDateTime` itself represents a leap second","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":419430,"byte_end":419497,"line_start":540,"line_end":540,"column_start":5,"column_end":72}},{"value":"/ in which case the assumption becomes that **there is exactly a single leap second ever**.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":419502,"byte_end":419595,"line_start":541,"line_end":541,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":419600,"byte_end":419603,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when it will result in overflow.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":419608,"byte_end":419659,"line_start":543,"line_end":543,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":419664,"byte_end":419667,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":419672,"byte_end":419685,"line_start":545,"line_end":545,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":419690,"byte_end":419693,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":419698,"byte_end":419705,"line_start":547,"line_end":547,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Duration, NaiveDate};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":419710,"byte_end":419748,"line_start":548,"line_end":548,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":419753,"byte_end":419756,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":419761,"byte_end":419800,"line_start":550,"line_end":550,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":419805,"byte_end":419808,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ let d = from_ymd(2016, 7, 8);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":419813,"byte_end":419846,"line_start":552,"line_end":552,"column_start":5,"column_end":38}},{"value":"/ let hms = |h, m, s| d.and_hms(h, m, s);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":419851,"byte_end":419894,"line_start":553,"line_end":553,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::zero()),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":419899,"byte_end":419964,"line_start":554,"line_end":554,"column_start":5,"column_end":70}},{"value":"/            Some(hms(3, 5, 7)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":419969,"byte_end":420004,"line_start":555,"line_end":555,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::seconds(1)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":420009,"byte_end":420078,"line_start":556,"line_end":556,"column_start":5,"column_end":74}},{"value":"/            Some(hms(3, 5, 6)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":420083,"byte_end":420118,"line_start":557,"line_end":557,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::seconds(-1)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":420123,"byte_end":420193,"line_start":558,"line_end":558,"column_start":5,"column_end":75}},{"value":"/            Some(hms(3, 5, 8)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":420198,"byte_end":420233,"line_start":559,"line_end":559,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::seconds(3600 + 60)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":420238,"byte_end":420315,"line_start":560,"line_end":560,"column_start":5,"column_end":82}},{"value":"/            Some(hms(2, 4, 7)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":420320,"byte_end":420355,"line_start":561,"line_end":561,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::seconds(86_400)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":420360,"byte_end":420434,"line_start":562,"line_end":562,"column_start":5,"column_end":79}},{"value":"/            Some(from_ymd(2016, 7, 7).and_hms(3, 5, 7)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":420439,"byte_end":420499,"line_start":563,"line_end":563,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":420504,"byte_end":420507,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ let hmsm = |h, m, s, milli| d.and_hms_milli(h, m, s, milli);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":420512,"byte_end":420576,"line_start":565,"line_end":565,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(hmsm(3, 5, 7, 450).checked_sub_signed(Duration::milliseconds(670)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":420581,"byte_end":420663,"line_start":566,"line_end":566,"column_start":5,"column_end":87}},{"value":"/            Some(hmsm(3, 5, 6, 780)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":420668,"byte_end":420709,"line_start":567,"line_end":567,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":420714,"byte_end":420721,"line_start":568,"line_end":568,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":420726,"byte_end":420729,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ Overflow returns `None`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":420734,"byte_end":420762,"line_start":570,"line_end":570,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":420767,"byte_end":420770,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":420775,"byte_end":420782,"line_start":572,"line_end":572,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{Duration, NaiveDate};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":420787,"byte_end":420827,"line_start":573,"line_end":573,"column_start":5,"column_end":45}},{"value":"/ # let hms = |h, m, s| NaiveDate::from_ymd(2016, 7, 8).and_hms(h, m, s);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":420832,"byte_end":420907,"line_start":574,"line_end":574,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::days(1_000_000_000)), None);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":420912,"byte_end":420997,"line_start":575,"line_end":575,"column_start":5,"column_end":90}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":421002,"byte_end":421009,"line_start":576,"line_end":576,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":421014,"byte_end":421017,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ Leap seconds are handled,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":421022,"byte_end":421051,"line_start":578,"line_end":578,"column_start":5,"column_end":34}},{"value":"/ but the subtraction assumes that it is the only leap second happened.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":421056,"byte_end":421129,"line_start":579,"line_end":579,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":421134,"byte_end":421137,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":421142,"byte_end":421149,"line_start":581,"line_end":581,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{Duration, NaiveDate};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":421154,"byte_end":421194,"line_start":582,"line_end":582,"column_start":5,"column_end":45}},{"value":"/ # let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":421199,"byte_end":421240,"line_start":583,"line_end":583,"column_start":5,"column_end":46}},{"value":"/ # let hmsm = |h, m, s, milli| from_ymd(2016, 7, 8).and_hms_milli(h, m, s, milli);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":421245,"byte_end":421330,"line_start":584,"line_end":584,"column_start":5,"column_end":90}},{"value":"/ let leap = hmsm(3, 5, 59, 1_300);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":421335,"byte_end":421372,"line_start":585,"line_end":585,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(leap.checked_sub_signed(Duration::zero()),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":421377,"byte_end":421434,"line_start":586,"line_end":586,"column_start":5,"column_end":62}},{"value":"/            Some(hmsm(3, 5, 59, 1_300)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":421439,"byte_end":421483,"line_start":587,"line_end":587,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(leap.checked_sub_signed(Duration::milliseconds(200)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":421488,"byte_end":421556,"line_start":588,"line_end":588,"column_start":5,"column_end":73}},{"value":"/            Some(hmsm(3, 5, 59, 1_100)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":421561,"byte_end":421605,"line_start":589,"line_end":589,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(leap.checked_sub_signed(Duration::milliseconds(500)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":421610,"byte_end":421678,"line_start":590,"line_end":590,"column_start":5,"column_end":73}},{"value":"/            Some(hmsm(3, 5, 59, 800)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":421683,"byte_end":421725,"line_start":591,"line_end":591,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(leap.checked_sub_signed(Duration::seconds(60)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":421730,"byte_end":421792,"line_start":592,"line_end":592,"column_start":5,"column_end":67}},{"value":"/            Some(hmsm(3, 5, 0, 300)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":421797,"byte_end":421838,"line_start":593,"line_end":593,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(leap.checked_sub_signed(Duration::days(1)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":421843,"byte_end":421901,"line_start":594,"line_end":594,"column_start":5,"column_end":63}},{"value":"/            Some(from_ymd(2016, 7, 7).and_hms_milli(3, 6, 0, 300)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":421906,"byte_end":421977,"line_start":595,"line_end":595,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":421982,"byte_end":421989,"line_start":596,"line_end":596,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1294},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":424221,"byte_end":424242,"line_start":647,"line_end":647,"column_start":12,"column_end":33},"name":"signed_duration_since","qualname":"<NaiveDateTime>::signed_duration_since","value":"fn signed_duration_since(Self, NaiveDateTime) -> OldDuration","parent":null,"children":[],"decl_id":null,"docs":" Subtracts another `NaiveDateTime` from the current date and time.\n This does not overflow or underflow at all.","sig":null,"attributes":[{"value":"/ Subtracts another `NaiveDateTime` from the current date and time.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":422445,"byte_end":422514,"line_start":609,"line_end":609,"column_start":5,"column_end":74}},{"value":"/ This does not overflow or underflow at all.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":422519,"byte_end":422566,"line_start":610,"line_end":610,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":422571,"byte_end":422574,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ As a part of Chrono's [leap second handling](./struct.NaiveTime.html#leap-second-handling),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":422579,"byte_end":422674,"line_start":612,"line_end":612,"column_start":5,"column_end":100}},{"value":"/ the subtraction assumes that **there is no leap second ever**,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":422679,"byte_end":422745,"line_start":613,"line_end":613,"column_start":5,"column_end":71}},{"value":"/ except when any of the `NaiveDateTime`s themselves represents a leap second","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":422750,"byte_end":422829,"line_start":614,"line_end":614,"column_start":5,"column_end":84}},{"value":"/ in which case the assumption becomes that","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":422834,"byte_end":422879,"line_start":615,"line_end":615,"column_start":5,"column_end":50}},{"value":"/ **there are exactly one (or two) leap second(s) ever**.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":422884,"byte_end":422943,"line_start":616,"line_end":616,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":422948,"byte_end":422951,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":422956,"byte_end":422969,"line_start":618,"line_end":618,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":422974,"byte_end":422977,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":422982,"byte_end":422989,"line_start":620,"line_end":620,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Duration, NaiveDate};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":422994,"byte_end":423032,"line_start":621,"line_end":621,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":423037,"byte_end":423040,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":423045,"byte_end":423084,"line_start":623,"line_end":623,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":423089,"byte_end":423092,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ let d = from_ymd(2016, 7, 8);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":423097,"byte_end":423130,"line_start":625,"line_end":625,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(d.and_hms(3, 5, 7).signed_duration_since(d.and_hms(2, 4, 6)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":423135,"byte_end":423211,"line_start":626,"line_end":626,"column_start":5,"column_end":81}},{"value":"/            Duration::seconds(3600 + 60 + 1));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":423216,"byte_end":423265,"line_start":627,"line_end":627,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":423270,"byte_end":423273,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ // July 8 is 190th day in the year 2016","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":423278,"byte_end":423321,"line_start":629,"line_end":629,"column_start":5,"column_end":48}},{"value":"/ let d0 = from_ymd(2016, 1, 1);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":423326,"byte_end":423360,"line_start":630,"line_end":630,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(d.and_hms_milli(0, 7, 6, 500).signed_duration_since(d0.and_hms(0, 0, 0)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":423365,"byte_end":423453,"line_start":631,"line_end":631,"column_start":5,"column_end":93}},{"value":"/            Duration::seconds(189 * 86_400 + 7 * 60 + 6) + Duration::milliseconds(500));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":423458,"byte_end":423549,"line_start":632,"line_end":632,"column_start":5,"column_end":96}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":423554,"byte_end":423561,"line_start":633,"line_end":633,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":423566,"byte_end":423569,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ Leap seconds are handled, but the subtraction assumes that","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":423574,"byte_end":423636,"line_start":635,"line_end":635,"column_start":5,"column_end":67}},{"value":"/ there were no other leap seconds happened.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":423641,"byte_end":423687,"line_start":636,"line_end":636,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":423692,"byte_end":423695,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":423700,"byte_end":423707,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{Duration, NaiveDate};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":423712,"byte_end":423752,"line_start":639,"line_end":639,"column_start":5,"column_end":45}},{"value":"/ # let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":423757,"byte_end":423798,"line_start":640,"line_end":640,"column_start":5,"column_end":46}},{"value":"/ let leap = from_ymd(2015, 6, 30).and_hms_milli(23, 59, 59, 1_500);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":423803,"byte_end":423873,"line_start":641,"line_end":641,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(leap.signed_duration_since(from_ymd(2015, 6, 30).and_hms(23, 0, 0)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":423878,"byte_end":423961,"line_start":642,"line_end":642,"column_start":5,"column_end":88}},{"value":"/            Duration::seconds(3600) + Duration::milliseconds(500));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":423966,"byte_end":424036,"line_start":643,"line_end":643,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(from_ymd(2015, 7, 1).and_hms(1, 0, 0).signed_duration_since(leap),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":424041,"byte_end":424122,"line_start":644,"line_end":644,"column_start":5,"column_end":86}},{"value":"/            Duration::seconds(3600) - Duration::milliseconds(500));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":424127,"byte_end":424197,"line_start":645,"line_end":645,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":424202,"byte_end":424209,"line_start":646,"line_end":646,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1295},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":428534,"byte_end":428552,"line_start":743,"line_end":743,"column_start":12,"column_end":30},"name":"and_local_timezone","qualname":"<NaiveDateTime>::and_local_timezone","value":"fn and_local_timezone<Tz, '_>(&'_ Self, Tz) -> LocalResult<DateTime<Tz>> where\nTz: TimeZone","parent":null,"children":[],"decl_id":null,"docs":" Converts the `NaiveDateTime` into the timezone-aware `DateTime<Tz>`\n with the provided timezone, if possible.","sig":null,"attributes":[{"value":"/ Converts the `NaiveDateTime` into the timezone-aware `DateTime<Tz>`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":427631,"byte_end":427702,"line_start":726,"line_end":726,"column_start":5,"column_end":76}},{"value":"/ with the provided timezone, if possible.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":427707,"byte_end":427751,"line_start":727,"line_end":727,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":427756,"byte_end":427759,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ This can fail in cases where the local time represented by the `NaiveDateTime`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":427764,"byte_end":427846,"line_start":729,"line_end":729,"column_start":5,"column_end":87}},{"value":"/ is not a valid local timestamp in the target timezone due to an offset transition","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":427851,"byte_end":427936,"line_start":730,"line_end":730,"column_start":5,"column_end":90}},{"value":"/ for example if the target timezone had a change from +00:00 to +01:00","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":427941,"byte_end":428014,"line_start":731,"line_end":731,"column_start":5,"column_end":78}},{"value":"/ occuring at 2015-09-05 22:59:59, then a local time of 2015-09-05 23:56:04","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":428019,"byte_end":428096,"line_start":732,"line_end":732,"column_start":5,"column_end":82}},{"value":"/ could never occur. Similarly, if the offset transitioned in the opposite direction","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":428101,"byte_end":428187,"line_start":733,"line_end":733,"column_start":5,"column_end":91}},{"value":"/ then there would be two local times of 2015-09-05 23:56:04, one at +00:00 and one","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":428192,"byte_end":428277,"line_start":734,"line_end":734,"column_start":5,"column_end":90}},{"value":"/ at +01:00.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":428282,"byte_end":428296,"line_start":735,"line_end":735,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":428301,"byte_end":428304,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":428309,"byte_end":428322,"line_start":737,"line_end":737,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":428327,"byte_end":428330,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":428335,"byte_end":428342,"line_start":739,"line_end":739,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Utc};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":428347,"byte_end":428380,"line_start":740,"line_end":740,"column_start":5,"column_end":38}},{"value":"/ let dt = NaiveDate::from_ymd(2015, 9, 5).and_hms(23, 56, 4).and_local_timezone(Utc).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":428385,"byte_end":428482,"line_start":741,"line_end":741,"column_start":5,"column_end":102}},{"value":"/ assert_eq!(dt.timezone(), Utc);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":428487,"byte_end":428522,"line_start":742,"line_end":742,"column_start":5,"column_end":40}}]},{"kind":"Const","id":{"krate":0,"index":1297},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":428717,"byte_end":428720,"line_start":748,"line_end":748,"column_start":15,"column_end":18},"name":"MIN","qualname":"::naive::datetime::NaiveDateTime::MIN","value":"Self","parent":{"krate":0,"index":1276},"children":[],"decl_id":null,"docs":" The minimum possible `NaiveDateTime`.\n","sig":null,"attributes":[{"value":"/ The minimum possible `NaiveDateTime`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":428661,"byte_end":428702,"line_start":747,"line_end":747,"column_start":5,"column_end":46}}]},{"kind":"Const","id":{"krate":0,"index":1298},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":428842,"byte_end":428845,"line_start":750,"line_end":750,"column_start":15,"column_end":18},"name":"MAX","qualname":"::naive::datetime::NaiveDateTime::MAX","value":"Self","parent":{"krate":0,"index":1276},"children":[],"decl_id":null,"docs":" The maximum possible `NaiveDateTime`.\n","sig":null,"attributes":[{"value":"/ The maximum possible `NaiveDateTime`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":428786,"byte_end":428827,"line_start":749,"line_end":749,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1300},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429353,"byte_end":429357,"line_start":767,"line_end":767,"column_start":8,"column_end":12},"name":"year","qualname":"<NaiveDateTime as traits::Datelike>::year","value":"fn year<'_>(&'_ Self) -> i32","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":1987},"docs":" Returns the year number in the [calendar date](./index.html#calendar-date).","sig":null,"attributes":[{"value":"/ Returns the year number in the [calendar date](./index.html#calendar-date).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":428948,"byte_end":429027,"line_start":754,"line_end":754,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429032,"byte_end":429035,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveDate::year`] method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429040,"byte_end":429084,"line_start":756,"line_end":756,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429089,"byte_end":429092,"line_start":757,"line_end":757,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429097,"byte_end":429110,"line_start":758,"line_end":758,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429115,"byte_end":429118,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429123,"byte_end":429130,"line_start":760,"line_end":760,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429135,"byte_end":429188,"line_start":761,"line_end":761,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429193,"byte_end":429196,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 25).and_hms(12, 34, 56);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429201,"byte_end":429282,"line_start":763,"line_end":763,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(dt.year(), 2015);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429287,"byte_end":429319,"line_start":764,"line_end":764,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429324,"byte_end":429331,"line_start":765,"line_end":765,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429336,"byte_end":429345,"line_start":766,"line_end":766,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1301},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429872,"byte_end":429877,"line_start":786,"line_end":786,"column_start":8,"column_end":13},"name":"month","qualname":"<NaiveDateTime as traits::Datelike>::month","value":"fn month<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":1989},"docs":" Returns the month number starting from 1.","sig":null,"attributes":[{"value":"/ Returns the month number starting from 1.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429410,"byte_end":429455,"line_start":771,"line_end":771,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429460,"byte_end":429463,"line_start":772,"line_end":772,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 1 to 12.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429468,"byte_end":429509,"line_start":773,"line_end":773,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429514,"byte_end":429517,"line_start":774,"line_end":774,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveDate::month`](./struct.NaiveDate.html#method.month) method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429522,"byte_end":429605,"line_start":775,"line_end":775,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429610,"byte_end":429613,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429618,"byte_end":429631,"line_start":777,"line_end":777,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429636,"byte_end":429639,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429644,"byte_end":429651,"line_start":779,"line_end":779,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429656,"byte_end":429709,"line_start":780,"line_end":780,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429714,"byte_end":429717,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 25).and_hms(12, 34, 56);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429722,"byte_end":429803,"line_start":782,"line_end":782,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(dt.month(), 9);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429808,"byte_end":429838,"line_start":783,"line_end":783,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429843,"byte_end":429850,"line_start":784,"line_end":784,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429855,"byte_end":429864,"line_start":785,"line_end":785,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1302},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":430396,"byte_end":430402,"line_start":805,"line_end":805,"column_start":8,"column_end":14},"name":"month0","qualname":"<NaiveDateTime as traits::Datelike>::month0","value":"fn month0<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":1990},"docs":" Returns the month number starting from 0.","sig":null,"attributes":[{"value":"/ Returns the month number starting from 0.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429931,"byte_end":429976,"line_start":790,"line_end":790,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429981,"byte_end":429984,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 11.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":429989,"byte_end":430030,"line_start":792,"line_end":792,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":430035,"byte_end":430038,"line_start":793,"line_end":793,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveDate::month0`](./struct.NaiveDate.html#method.month0) method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":430043,"byte_end":430128,"line_start":794,"line_end":794,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":430133,"byte_end":430136,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":430141,"byte_end":430154,"line_start":796,"line_end":796,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":430159,"byte_end":430162,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":430167,"byte_end":430174,"line_start":798,"line_end":798,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":430179,"byte_end":430232,"line_start":799,"line_end":799,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":430237,"byte_end":430240,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 25).and_hms(12, 34, 56);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":430245,"byte_end":430326,"line_start":801,"line_end":801,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(dt.month0(), 8);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":430331,"byte_end":430362,"line_start":802,"line_end":802,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":430367,"byte_end":430374,"line_start":803,"line_end":803,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":430379,"byte_end":430388,"line_start":804,"line_end":804,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1303},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":430957,"byte_end":430960,"line_start":824,"line_end":824,"column_start":8,"column_end":11},"name":"day","qualname":"<NaiveDateTime as traits::Datelike>::day","value":"fn day<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":1991},"docs":" Returns the day of month starting from 1.","sig":null,"attributes":[{"value":"/ Returns the day of month starting from 1.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":430457,"byte_end":430502,"line_start":809,"line_end":809,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":430507,"byte_end":430510,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 1 to 31. (The last day of month differs by months.)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":430515,"byte_end":430599,"line_start":811,"line_end":811,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":430604,"byte_end":430607,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveDate::day`](./struct.NaiveDate.html#method.day) method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":430612,"byte_end":430691,"line_start":813,"line_end":813,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":430696,"byte_end":430699,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":430704,"byte_end":430717,"line_start":815,"line_end":815,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":430722,"byte_end":430725,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":430730,"byte_end":430737,"line_start":817,"line_end":817,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":430742,"byte_end":430795,"line_start":818,"line_end":818,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":430800,"byte_end":430803,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 25).and_hms(12, 34, 56);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":430808,"byte_end":430889,"line_start":820,"line_end":820,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(dt.day(), 25);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":430894,"byte_end":430923,"line_start":821,"line_end":821,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":430928,"byte_end":430935,"line_start":822,"line_end":822,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":430940,"byte_end":430949,"line_start":823,"line_end":823,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1304},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":431515,"byte_end":431519,"line_start":843,"line_end":843,"column_start":8,"column_end":12},"name":"day0","qualname":"<NaiveDateTime as traits::Datelike>::day0","value":"fn day0<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":1992},"docs":" Returns the day of month starting from 0.","sig":null,"attributes":[{"value":"/ Returns the day of month starting from 0.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":431012,"byte_end":431057,"line_start":828,"line_end":828,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":431062,"byte_end":431065,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 30. (The last day of month differs by months.)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":431070,"byte_end":431154,"line_start":830,"line_end":830,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":431159,"byte_end":431162,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveDate::day0`](./struct.NaiveDate.html#method.day0) method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":431167,"byte_end":431248,"line_start":832,"line_end":832,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":431253,"byte_end":431256,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":431261,"byte_end":431274,"line_start":834,"line_end":834,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":431279,"byte_end":431282,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":431287,"byte_end":431294,"line_start":836,"line_end":836,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":431299,"byte_end":431352,"line_start":837,"line_end":837,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":431357,"byte_end":431360,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 25).and_hms(12, 34, 56);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":431365,"byte_end":431446,"line_start":839,"line_end":839,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(dt.day0(), 24);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":431451,"byte_end":431481,"line_start":840,"line_end":840,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":431486,"byte_end":431493,"line_start":841,"line_end":841,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":431498,"byte_end":431507,"line_start":842,"line_end":842,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1305},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432083,"byte_end":432090,"line_start":862,"line_end":862,"column_start":8,"column_end":15},"name":"ordinal","qualname":"<NaiveDateTime as traits::Datelike>::ordinal","value":"fn ordinal<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":1993},"docs":" Returns the day of year starting from 1.","sig":null,"attributes":[{"value":"/ Returns the day of year starting from 1.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":431572,"byte_end":431616,"line_start":847,"line_end":847,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":431621,"byte_end":431624,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 1 to 366. (The last day of year differs by years.)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":431629,"byte_end":431712,"line_start":849,"line_end":849,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":431717,"byte_end":431720,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveDate::ordinal`](./struct.NaiveDate.html#method.ordinal) method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":431725,"byte_end":431812,"line_start":851,"line_end":851,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":431817,"byte_end":431820,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":431825,"byte_end":431838,"line_start":853,"line_end":853,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":431843,"byte_end":431846,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":431851,"byte_end":431858,"line_start":855,"line_end":855,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":431863,"byte_end":431916,"line_start":856,"line_end":856,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":431921,"byte_end":431924,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 25).and_hms(12, 34, 56);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":431929,"byte_end":432010,"line_start":858,"line_end":858,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(dt.ordinal(), 268);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432015,"byte_end":432049,"line_start":859,"line_end":859,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432054,"byte_end":432061,"line_start":860,"line_end":860,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432066,"byte_end":432075,"line_start":861,"line_end":861,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1306},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432660,"byte_end":432668,"line_start":881,"line_end":881,"column_start":8,"column_end":16},"name":"ordinal0","qualname":"<NaiveDateTime as traits::Datelike>::ordinal0","value":"fn ordinal0<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":1994},"docs":" Returns the day of year starting from 0.","sig":null,"attributes":[{"value":"/ Returns the day of year starting from 0.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432146,"byte_end":432190,"line_start":866,"line_end":866,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432195,"byte_end":432198,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 365. (The last day of year differs by years.)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432203,"byte_end":432286,"line_start":868,"line_end":868,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432291,"byte_end":432294,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveDate::ordinal0`](./struct.NaiveDate.html#method.ordinal0) method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432299,"byte_end":432388,"line_start":870,"line_end":870,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432393,"byte_end":432396,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432401,"byte_end":432414,"line_start":872,"line_end":872,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432419,"byte_end":432422,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432427,"byte_end":432434,"line_start":874,"line_end":874,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432439,"byte_end":432492,"line_start":875,"line_end":875,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432497,"byte_end":432500,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 25).and_hms(12, 34, 56);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432505,"byte_end":432586,"line_start":877,"line_end":877,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(dt.ordinal0(), 267);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432591,"byte_end":432626,"line_start":878,"line_end":878,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432631,"byte_end":432638,"line_start":879,"line_end":879,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432643,"byte_end":432652,"line_start":880,"line_end":880,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1307},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":433142,"byte_end":433149,"line_start":898,"line_end":898,"column_start":8,"column_end":15},"name":"weekday","qualname":"<NaiveDateTime as traits::Datelike>::weekday","value":"fn weekday<'_>(&'_ Self) -> Weekday","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":1995},"docs":" Returns the day of week.","sig":null,"attributes":[{"value":"/ Returns the day of week.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432725,"byte_end":432753,"line_start":885,"line_end":885,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432758,"byte_end":432761,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveDate::weekday`](./struct.NaiveDate.html#method.weekday) method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432766,"byte_end":432853,"line_start":887,"line_end":887,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432858,"byte_end":432861,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432866,"byte_end":432879,"line_start":889,"line_end":889,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432884,"byte_end":432887,"line_start":890,"line_end":890,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432892,"byte_end":432899,"line_start":891,"line_end":891,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike, Weekday};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432904,"byte_end":432966,"line_start":892,"line_end":892,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432971,"byte_end":432974,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 25).and_hms(12, 34, 56);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":432979,"byte_end":433060,"line_start":894,"line_end":894,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(dt.weekday(), Weekday::Fri);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":433065,"byte_end":433108,"line_start":895,"line_end":895,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":433113,"byte_end":433120,"line_start":896,"line_end":896,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":433125,"byte_end":433134,"line_start":897,"line_end":897,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1308},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":433226,"byte_end":433234,"line_start":903,"line_end":903,"column_start":8,"column_end":16},"name":"iso_week","qualname":"<NaiveDateTime as traits::Datelike>::iso_week","value":"fn iso_week<'_>(&'_ Self) -> IsoWeek","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":1996},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":433209,"byte_end":433218,"line_start":902,"line_end":902,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1309},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":433934,"byte_end":433943,"line_start":923,"line_end":923,"column_start":8,"column_end":17},"name":"with_year","qualname":"<NaiveDateTime as traits::Datelike>::with_year","value":"fn with_year<'_>(&'_ Self, i32) -> Option<NaiveDateTime>","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":1997},"docs":" Makes a new `NaiveDateTime` with the year number changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` with the year number changed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":433295,"byte_end":433356,"line_start":907,"line_end":907,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":433361,"byte_end":433364,"line_start":908,"line_end":908,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDateTime` would be invalid.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":433369,"byte_end":433440,"line_start":909,"line_end":909,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":433445,"byte_end":433448,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveDate::with_year`] method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":433453,"byte_end":433502,"line_start":911,"line_end":911,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":433507,"byte_end":433510,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":433515,"byte_end":433528,"line_start":913,"line_end":913,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":433533,"byte_end":433536,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":433541,"byte_end":433548,"line_start":915,"line_end":915,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":433553,"byte_end":433606,"line_start":916,"line_end":916,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":433611,"byte_end":433614,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 25).and_hms(12, 34, 56);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":433619,"byte_end":433700,"line_start":918,"line_end":918,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(dt.with_year(2016), Some(NaiveDate::from_ymd(2016, 9, 25).and_hms(12, 34, 56)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":433705,"byte_end":433800,"line_start":919,"line_end":919,"column_start":5,"column_end":100}},{"value":"/ assert_eq!(dt.with_year(-308), Some(NaiveDate::from_ymd(-308, 9, 25).and_hms(12, 34, 56)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":433805,"byte_end":433900,"line_start":920,"line_end":920,"column_start":5,"column_end":100}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":433905,"byte_end":433912,"line_start":921,"line_end":921,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":433917,"byte_end":433926,"line_start":922,"line_end":922,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1311},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":434759,"byte_end":434769,"line_start":944,"line_end":944,"column_start":8,"column_end":18},"name":"with_month","qualname":"<NaiveDateTime as traits::Datelike>::with_month","value":"fn with_month<'_>(&'_ Self, u32) -> Option<NaiveDateTime>","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":1998},"docs":" Makes a new `NaiveDateTime` with the month number (starting from 1) changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` with the month number (starting from 1) changed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":434078,"byte_end":434158,"line_start":927,"line_end":927,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":434163,"byte_end":434166,"line_start":928,"line_end":928,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDateTime` would be invalid.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":434171,"byte_end":434242,"line_start":929,"line_end":929,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":434247,"byte_end":434250,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveDate::with_month`] method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":434255,"byte_end":434305,"line_start":931,"line_end":931,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":434310,"byte_end":434313,"line_start":932,"line_end":932,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":434318,"byte_end":434331,"line_start":933,"line_end":933,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":434336,"byte_end":434339,"line_start":934,"line_end":934,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":434344,"byte_end":434351,"line_start":935,"line_end":935,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":434356,"byte_end":434409,"line_start":936,"line_end":936,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":434414,"byte_end":434417,"line_start":937,"line_end":937,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 30).and_hms(12, 34, 56);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":434422,"byte_end":434503,"line_start":938,"line_end":938,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(dt.with_month(10), Some(NaiveDate::from_ymd(2015, 10, 30).and_hms(12, 34, 56)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":434508,"byte_end":434603,"line_start":939,"line_end":939,"column_start":5,"column_end":100}},{"value":"/ assert_eq!(dt.with_month(13), None); // no month 13","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":434608,"byte_end":434663,"line_start":940,"line_end":940,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(dt.with_month(2), None); // no February 30","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":434668,"byte_end":434725,"line_start":941,"line_end":941,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":434730,"byte_end":434737,"line_start":942,"line_end":942,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":434742,"byte_end":434751,"line_start":943,"line_end":943,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1313},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435591,"byte_end":435602,"line_start":965,"line_end":965,"column_start":8,"column_end":19},"name":"with_month0","qualname":"<NaiveDateTime as traits::Datelike>::with_month0","value":"fn with_month0<'_>(&'_ Self, u32) -> Option<NaiveDateTime>","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":1999},"docs":" Makes a new `NaiveDateTime` with the month number (starting from 0) changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` with the month number (starting from 0) changed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":434907,"byte_end":434987,"line_start":948,"line_end":948,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":434992,"byte_end":434995,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDateTime` would be invalid.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435000,"byte_end":435071,"line_start":950,"line_end":950,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435076,"byte_end":435079,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveDate::with_month0`] method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435084,"byte_end":435135,"line_start":952,"line_end":952,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435140,"byte_end":435143,"line_start":953,"line_end":953,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435148,"byte_end":435161,"line_start":954,"line_end":954,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435166,"byte_end":435169,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435174,"byte_end":435181,"line_start":956,"line_end":956,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435186,"byte_end":435239,"line_start":957,"line_end":957,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435244,"byte_end":435247,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 30).and_hms(12, 34, 56);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435252,"byte_end":435333,"line_start":959,"line_end":959,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(dt.with_month0(9), Some(NaiveDate::from_ymd(2015, 10, 30).and_hms(12, 34, 56)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435338,"byte_end":435433,"line_start":960,"line_end":960,"column_start":5,"column_end":100}},{"value":"/ assert_eq!(dt.with_month0(12), None); // no month 13","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435438,"byte_end":435494,"line_start":961,"line_end":961,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(dt.with_month0(1), None); // no February 30","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435499,"byte_end":435557,"line_start":962,"line_end":962,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435562,"byte_end":435569,"line_start":963,"line_end":963,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435574,"byte_end":435583,"line_start":964,"line_end":964,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1315},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436358,"byte_end":436366,"line_start":985,"line_end":985,"column_start":8,"column_end":16},"name":"with_day","qualname":"<NaiveDateTime as traits::Datelike>::with_day","value":"fn with_day<'_>(&'_ Self, u32) -> Option<NaiveDateTime>","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":2000},"docs":" Makes a new `NaiveDateTime` with the day of month (starting from 1) changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` with the day of month (starting from 1) changed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435743,"byte_end":435823,"line_start":969,"line_end":969,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435828,"byte_end":435831,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDateTime` would be invalid.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435836,"byte_end":435907,"line_start":971,"line_end":971,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435912,"byte_end":435915,"line_start":972,"line_end":972,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveDate::with_day`] method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435920,"byte_end":435968,"line_start":973,"line_end":973,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435973,"byte_end":435976,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435981,"byte_end":435994,"line_start":975,"line_end":975,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":435999,"byte_end":436002,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436007,"byte_end":436014,"line_start":977,"line_end":977,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436019,"byte_end":436072,"line_start":978,"line_end":978,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436077,"byte_end":436080,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 8).and_hms(12, 34, 56);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436085,"byte_end":436165,"line_start":980,"line_end":980,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(dt.with_day(30), Some(NaiveDate::from_ymd(2015, 9, 30).and_hms(12, 34, 56)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436170,"byte_end":436262,"line_start":981,"line_end":981,"column_start":5,"column_end":97}},{"value":"/ assert_eq!(dt.with_day(31), None); // no September 31","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436267,"byte_end":436324,"line_start":982,"line_end":982,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436329,"byte_end":436336,"line_start":983,"line_end":983,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436341,"byte_end":436350,"line_start":984,"line_end":984,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1317},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437116,"byte_end":437125,"line_start":1005,"line_end":1005,"column_start":8,"column_end":17},"name":"with_day0","qualname":"<NaiveDateTime as traits::Datelike>::with_day0","value":"fn with_day0<'_>(&'_ Self, u32) -> Option<NaiveDateTime>","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":2001},"docs":" Makes a new `NaiveDateTime` with the day of month (starting from 0) changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` with the day of month (starting from 0) changed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436498,"byte_end":436578,"line_start":989,"line_end":989,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436583,"byte_end":436586,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDateTime` would be invalid.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436591,"byte_end":436662,"line_start":991,"line_end":991,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436667,"byte_end":436670,"line_start":992,"line_end":992,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveDate::with_day0`] method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436675,"byte_end":436724,"line_start":993,"line_end":993,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436729,"byte_end":436732,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436737,"byte_end":436750,"line_start":995,"line_end":995,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436755,"byte_end":436758,"line_start":996,"line_end":996,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436763,"byte_end":436770,"line_start":997,"line_end":997,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436775,"byte_end":436828,"line_start":998,"line_end":998,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436833,"byte_end":436836,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 8).and_hms(12, 34, 56);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436841,"byte_end":436921,"line_start":1000,"line_end":1000,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(dt.with_day0(29), Some(NaiveDate::from_ymd(2015, 9, 30).and_hms(12, 34, 56)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":436926,"byte_end":437019,"line_start":1001,"line_end":1001,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(dt.with_day0(30), None); // no September 31","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437024,"byte_end":437082,"line_start":1002,"line_end":1002,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437087,"byte_end":437094,"line_start":1003,"line_end":1003,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437099,"byte_end":437108,"line_start":1004,"line_end":1004,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1319},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":438247,"byte_end":438259,"line_start":1032,"line_end":1032,"column_start":8,"column_end":20},"name":"with_ordinal","qualname":"<NaiveDateTime as traits::Datelike>::with_ordinal","value":"fn with_ordinal<'_>(&'_ Self, u32) -> Option<NaiveDateTime>","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":2002},"docs":" Makes a new `NaiveDateTime` with the day of year (starting from 1) changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` with the day of year (starting from 1) changed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437260,"byte_end":437339,"line_start":1009,"line_end":1009,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437344,"byte_end":437347,"line_start":1010,"line_end":1010,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDateTime` would be invalid.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437352,"byte_end":437423,"line_start":1011,"line_end":1011,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437428,"byte_end":437431,"line_start":1012,"line_end":1012,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveDate::with_ordinal`] method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437436,"byte_end":437488,"line_start":1013,"line_end":1013,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437493,"byte_end":437496,"line_start":1014,"line_end":1014,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437501,"byte_end":437514,"line_start":1015,"line_end":1015,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437519,"byte_end":437522,"line_start":1016,"line_end":1016,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437527,"byte_end":437534,"line_start":1017,"line_end":1017,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437539,"byte_end":437592,"line_start":1018,"line_end":1018,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437597,"byte_end":437600,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 8).and_hms(12, 34, 56);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437605,"byte_end":437685,"line_start":1020,"line_end":1020,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(dt.with_ordinal(60),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437690,"byte_end":437725,"line_start":1021,"line_end":1021,"column_start":5,"column_end":40}},{"value":"/            Some(NaiveDate::from_ymd(2015, 3, 1).and_hms(12, 34, 56)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437730,"byte_end":437804,"line_start":1022,"line_end":1022,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(dt.with_ordinal(366), None); // 2015 had only 365 days","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437809,"byte_end":437878,"line_start":1023,"line_end":1023,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437883,"byte_end":437886,"line_start":1024,"line_end":1024,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2016, 9, 8).and_hms(12, 34, 56);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437891,"byte_end":437971,"line_start":1025,"line_end":1025,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(dt.with_ordinal(60),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":437976,"byte_end":438011,"line_start":1026,"line_end":1026,"column_start":5,"column_end":40}},{"value":"/            Some(NaiveDate::from_ymd(2016, 2, 29).and_hms(12, 34, 56)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":438016,"byte_end":438091,"line_start":1027,"line_end":1027,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(dt.with_ordinal(366),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":438096,"byte_end":438132,"line_start":1028,"line_end":1028,"column_start":5,"column_end":41}},{"value":"/            Some(NaiveDate::from_ymd(2016, 12, 31).and_hms(12, 34, 56)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":438137,"byte_end":438213,"line_start":1029,"line_end":1029,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":438218,"byte_end":438225,"line_start":1030,"line_end":1030,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":438230,"byte_end":438239,"line_start":1031,"line_end":1031,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1321},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439395,"byte_end":439408,"line_start":1059,"line_end":1059,"column_start":8,"column_end":21},"name":"with_ordinal0","qualname":"<NaiveDateTime as traits::Datelike>::with_ordinal0","value":"fn with_ordinal0<'_>(&'_ Self, u32) -> Option<NaiveDateTime>","parent":{"krate":0,"index":1986},"children":[],"decl_id":{"krate":0,"index":2003},"docs":" Makes a new `NaiveDateTime` with the day of year (starting from 0) changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` with the day of year (starting from 0) changed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":438403,"byte_end":438482,"line_start":1036,"line_end":1036,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":438487,"byte_end":438490,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDateTime` would be invalid.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":438495,"byte_end":438566,"line_start":1038,"line_end":1038,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":438571,"byte_end":438574,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveDate::with_ordinal0`] method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":438579,"byte_end":438632,"line_start":1040,"line_end":1040,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":438637,"byte_end":438640,"line_start":1041,"line_end":1041,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":438645,"byte_end":438658,"line_start":1042,"line_end":1042,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":438663,"byte_end":438666,"line_start":1043,"line_end":1043,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":438671,"byte_end":438678,"line_start":1044,"line_end":1044,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":438683,"byte_end":438736,"line_start":1045,"line_end":1045,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":438741,"byte_end":438744,"line_start":1046,"line_end":1046,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 8).and_hms(12, 34, 56);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":438749,"byte_end":438829,"line_start":1047,"line_end":1047,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(dt.with_ordinal0(59),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":438834,"byte_end":438870,"line_start":1048,"line_end":1048,"column_start":5,"column_end":41}},{"value":"/            Some(NaiveDate::from_ymd(2015, 3, 1).and_hms(12, 34, 56)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":438875,"byte_end":438949,"line_start":1049,"line_end":1049,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(dt.with_ordinal0(365), None); // 2015 had only 365 days","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":438954,"byte_end":439024,"line_start":1050,"line_end":1050,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439029,"byte_end":439032,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2016, 9, 8).and_hms(12, 34, 56);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439037,"byte_end":439117,"line_start":1052,"line_end":1052,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(dt.with_ordinal0(59),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439122,"byte_end":439158,"line_start":1053,"line_end":1053,"column_start":5,"column_end":41}},{"value":"/            Some(NaiveDate::from_ymd(2016, 2, 29).and_hms(12, 34, 56)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439163,"byte_end":439238,"line_start":1054,"line_end":1054,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(dt.with_ordinal0(365),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439243,"byte_end":439280,"line_start":1055,"line_end":1055,"column_start":5,"column_end":42}},{"value":"/            Some(NaiveDate::from_ymd(2016, 12, 31).and_hms(12, 34, 56)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439285,"byte_end":439361,"line_start":1056,"line_end":1056,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439366,"byte_end":439373,"line_start":1057,"line_end":1057,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439378,"byte_end":439387,"line_start":1058,"line_end":1058,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1324},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439966,"byte_end":439970,"line_start":1078,"line_end":1078,"column_start":8,"column_end":12},"name":"hour","qualname":"<NaiveDateTime as traits::Timelike>::hour","value":"fn hour<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":2005},"children":[],"decl_id":{"krate":0,"index":2006},"docs":" Returns the hour number from 0 to 23.","sig":null,"attributes":[{"value":"/ Returns the hour number from 0 to 23.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439591,"byte_end":439632,"line_start":1065,"line_end":1065,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439637,"byte_end":439640,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveTime::hour`] method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439645,"byte_end":439689,"line_start":1067,"line_end":1067,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439694,"byte_end":439697,"line_start":1068,"line_end":1068,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439702,"byte_end":439715,"line_start":1069,"line_end":1069,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439720,"byte_end":439723,"line_start":1070,"line_end":1070,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439728,"byte_end":439735,"line_start":1071,"line_end":1071,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Timelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439740,"byte_end":439793,"line_start":1072,"line_end":1072,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439798,"byte_end":439801,"line_start":1073,"line_end":1073,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 8).and_hms_milli(12, 34, 56, 789);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439806,"byte_end":439897,"line_start":1074,"line_end":1074,"column_start":5,"column_end":96}},{"value":"/ assert_eq!(dt.hour(), 12);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439902,"byte_end":439932,"line_start":1075,"line_end":1075,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439937,"byte_end":439944,"line_start":1076,"line_end":1076,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439949,"byte_end":439958,"line_start":1077,"line_end":1077,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1325},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440404,"byte_end":440410,"line_start":1095,"line_end":1095,"column_start":8,"column_end":14},"name":"minute","qualname":"<NaiveDateTime as traits::Timelike>::minute","value":"fn minute<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":2005},"children":[],"decl_id":{"krate":0,"index":2008},"docs":" Returns the minute number from 0 to 59.","sig":null,"attributes":[{"value":"/ Returns the minute number from 0 to 59.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440023,"byte_end":440066,"line_start":1082,"line_end":1082,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440071,"byte_end":440074,"line_start":1083,"line_end":1083,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveTime::minute`] method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440079,"byte_end":440125,"line_start":1084,"line_end":1084,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440130,"byte_end":440133,"line_start":1085,"line_end":1085,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440138,"byte_end":440151,"line_start":1086,"line_end":1086,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440156,"byte_end":440159,"line_start":1087,"line_end":1087,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440164,"byte_end":440171,"line_start":1088,"line_end":1088,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Timelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440176,"byte_end":440229,"line_start":1089,"line_end":1089,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440234,"byte_end":440237,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 8).and_hms_milli(12, 34, 56, 789);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440242,"byte_end":440333,"line_start":1091,"line_end":1091,"column_start":5,"column_end":96}},{"value":"/ assert_eq!(dt.minute(), 34);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440338,"byte_end":440370,"line_start":1092,"line_end":1092,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440375,"byte_end":440382,"line_start":1093,"line_end":1093,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440387,"byte_end":440396,"line_start":1094,"line_end":1094,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1326},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440846,"byte_end":440852,"line_start":1112,"line_end":1112,"column_start":8,"column_end":14},"name":"second","qualname":"<NaiveDateTime as traits::Timelike>::second","value":"fn second<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":2005},"children":[],"decl_id":{"krate":0,"index":2009},"docs":" Returns the second number from 0 to 59.","sig":null,"attributes":[{"value":"/ Returns the second number from 0 to 59.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440465,"byte_end":440508,"line_start":1099,"line_end":1099,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440513,"byte_end":440516,"line_start":1100,"line_end":1100,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveTime::second`] method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440521,"byte_end":440567,"line_start":1101,"line_end":1101,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440572,"byte_end":440575,"line_start":1102,"line_end":1102,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440580,"byte_end":440593,"line_start":1103,"line_end":1103,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440598,"byte_end":440601,"line_start":1104,"line_end":1104,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440606,"byte_end":440613,"line_start":1105,"line_end":1105,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Timelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440618,"byte_end":440671,"line_start":1106,"line_end":1106,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440676,"byte_end":440679,"line_start":1107,"line_end":1107,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 8).and_hms_milli(12, 34, 56, 789);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440684,"byte_end":440775,"line_start":1108,"line_end":1108,"column_start":5,"column_end":96}},{"value":"/ assert_eq!(dt.second(), 56);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440780,"byte_end":440812,"line_start":1109,"line_end":1109,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440817,"byte_end":440824,"line_start":1110,"line_end":1110,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440829,"byte_end":440838,"line_start":1111,"line_end":1111,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1327},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":441470,"byte_end":441480,"line_start":1131,"line_end":1131,"column_start":8,"column_end":18},"name":"nanosecond","qualname":"<NaiveDateTime as traits::Timelike>::nanosecond","value":"fn nanosecond<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":2005},"children":[],"decl_id":{"krate":0,"index":2010},"docs":" Returns the number of nanoseconds since the whole non-leap second.\n The range from 1,000,000,000 to 1,999,999,999 represents\n the [leap second](./struct.NaiveTime.html#leap-second-handling).","sig":null,"attributes":[{"value":"/ Returns the number of nanoseconds since the whole non-leap second.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440907,"byte_end":440977,"line_start":1116,"line_end":1116,"column_start":5,"column_end":75}},{"value":"/ The range from 1,000,000,000 to 1,999,999,999 represents","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":440982,"byte_end":441042,"line_start":1117,"line_end":1117,"column_start":5,"column_end":65}},{"value":"/ the [leap second](./struct.NaiveTime.html#leap-second-handling).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":441047,"byte_end":441115,"line_start":1118,"line_end":1118,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":441120,"byte_end":441123,"line_start":1119,"line_end":1119,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveTime::nanosecond`] method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":441128,"byte_end":441178,"line_start":1120,"line_end":1120,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":441183,"byte_end":441186,"line_start":1121,"line_end":1121,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":441191,"byte_end":441204,"line_start":1122,"line_end":1122,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":441209,"byte_end":441212,"line_start":1123,"line_end":1123,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":441217,"byte_end":441224,"line_start":1124,"line_end":1124,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Timelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":441229,"byte_end":441282,"line_start":1125,"line_end":1125,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":441287,"byte_end":441290,"line_start":1126,"line_end":1126,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 8).and_hms_milli(12, 34, 56, 789);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":441295,"byte_end":441386,"line_start":1127,"line_end":1127,"column_start":5,"column_end":96}},{"value":"/ assert_eq!(dt.nanosecond(), 789_000_000);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":441391,"byte_end":441436,"line_start":1128,"line_end":1128,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":441441,"byte_end":441448,"line_start":1129,"line_end":1129,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":441453,"byte_end":441462,"line_start":1130,"line_end":1130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1328},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":442157,"byte_end":442166,"line_start":1152,"line_end":1152,"column_start":8,"column_end":17},"name":"with_hour","qualname":"<NaiveDateTime as traits::Timelike>::with_hour","value":"fn with_hour<'_>(&'_ Self, u32) -> Option<NaiveDateTime>","parent":{"krate":0,"index":2005},"children":[],"decl_id":{"krate":0,"index":2011},"docs":" Makes a new `NaiveDateTime` with the hour number changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` with the hour number changed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":441539,"byte_end":441600,"line_start":1135,"line_end":1135,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":441605,"byte_end":441608,"line_start":1136,"line_end":1136,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDateTime` would be invalid.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":441613,"byte_end":441684,"line_start":1137,"line_end":1137,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":441689,"byte_end":441692,"line_start":1138,"line_end":1138,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveTime::with_hour`] method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":441697,"byte_end":441746,"line_start":1139,"line_end":1139,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":441751,"byte_end":441754,"line_start":1140,"line_end":1140,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":441759,"byte_end":441772,"line_start":1141,"line_end":1141,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":441777,"byte_end":441780,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":441785,"byte_end":441792,"line_start":1143,"line_end":1143,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Timelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":441797,"byte_end":441850,"line_start":1144,"line_end":1144,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":441855,"byte_end":441858,"line_start":1145,"line_end":1145,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 8).and_hms_milli(12, 34, 56, 789);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":441863,"byte_end":441954,"line_start":1146,"line_end":1146,"column_start":5,"column_end":96}},{"value":"/ assert_eq!(dt.with_hour(7),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":441959,"byte_end":441990,"line_start":1147,"line_end":1147,"column_start":5,"column_end":36}},{"value":"/            Some(NaiveDate::from_ymd(2015, 9, 8).and_hms_milli(7, 34, 56, 789)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":441995,"byte_end":442079,"line_start":1148,"line_end":1148,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(dt.with_hour(24), None);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":442084,"byte_end":442123,"line_start":1149,"line_end":1149,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":442128,"byte_end":442135,"line_start":1150,"line_end":1150,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":442140,"byte_end":442149,"line_start":1151,"line_end":1151,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1330},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":442937,"byte_end":442948,"line_start":1174,"line_end":1174,"column_start":8,"column_end":19},"name":"with_minute","qualname":"<NaiveDateTime as traits::Timelike>::with_minute","value":"fn with_minute<'_>(&'_ Self, u32) -> Option<NaiveDateTime>","parent":{"krate":0,"index":2005},"children":[],"decl_id":{"krate":0,"index":2012},"docs":" Makes a new `NaiveDateTime` with the minute number changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` with the minute number changed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":442301,"byte_end":442364,"line_start":1156,"line_end":1156,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":442369,"byte_end":442372,"line_start":1157,"line_end":1157,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDateTime` would be invalid.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":442377,"byte_end":442448,"line_start":1158,"line_end":1158,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":442453,"byte_end":442456,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ See also the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":442461,"byte_end":442477,"line_start":1160,"line_end":1160,"column_start":5,"column_end":21}},{"value":"/ [`NaiveTime::with_minute`] method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":442482,"byte_end":442520,"line_start":1161,"line_end":1161,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":442525,"byte_end":442528,"line_start":1162,"line_end":1162,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":442533,"byte_end":442546,"line_start":1163,"line_end":1163,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":442551,"byte_end":442554,"line_start":1164,"line_end":1164,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":442559,"byte_end":442566,"line_start":1165,"line_end":1165,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Timelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":442571,"byte_end":442624,"line_start":1166,"line_end":1166,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":442629,"byte_end":442632,"line_start":1167,"line_end":1167,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 8).and_hms_milli(12, 34, 56, 789);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":442637,"byte_end":442728,"line_start":1168,"line_end":1168,"column_start":5,"column_end":96}},{"value":"/ assert_eq!(dt.with_minute(45),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":442733,"byte_end":442767,"line_start":1169,"line_end":1169,"column_start":5,"column_end":39}},{"value":"/            Some(NaiveDate::from_ymd(2015, 9, 8).and_hms_milli(12, 45, 56, 789)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":442772,"byte_end":442857,"line_start":1170,"line_end":1170,"column_start":5,"column_end":90}},{"value":"/ assert_eq!(dt.with_minute(60), None);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":442862,"byte_end":442903,"line_start":1171,"line_end":1171,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":442908,"byte_end":442915,"line_start":1172,"line_end":1172,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":442920,"byte_end":442929,"line_start":1173,"line_end":1173,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1332},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":443820,"byte_end":443831,"line_start":1197,"line_end":1197,"column_start":8,"column_end":19},"name":"with_second","qualname":"<NaiveDateTime as traits::Timelike>::with_second","value":"fn with_second<'_>(&'_ Self, u32) -> Option<NaiveDateTime>","parent":{"krate":0,"index":2005},"children":[],"decl_id":{"krate":0,"index":2013},"docs":" Makes a new `NaiveDateTime` with the second number changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` with the second number changed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":443083,"byte_end":443146,"line_start":1178,"line_end":1178,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":443151,"byte_end":443154,"line_start":1179,"line_end":1179,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDateTime` would be invalid. As","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":443159,"byte_end":443233,"line_start":1180,"line_end":1180,"column_start":5,"column_end":79}},{"value":"/ with the [`NaiveDateTime::second`] method, the input range is","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":443238,"byte_end":443303,"line_start":1181,"line_end":1181,"column_start":5,"column_end":70}},{"value":"/ restricted to 0 through 59.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":443308,"byte_end":443339,"line_start":1182,"line_end":1182,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":443344,"byte_end":443347,"line_start":1183,"line_end":1183,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveTime::with_second`] method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":443352,"byte_end":443403,"line_start":1184,"line_end":1184,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":443408,"byte_end":443411,"line_start":1185,"line_end":1185,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":443416,"byte_end":443429,"line_start":1186,"line_end":1186,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":443434,"byte_end":443437,"line_start":1187,"line_end":1187,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":443442,"byte_end":443449,"line_start":1188,"line_end":1188,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Timelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":443454,"byte_end":443507,"line_start":1189,"line_end":1189,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":443512,"byte_end":443515,"line_start":1190,"line_end":1190,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 8).and_hms_milli(12, 34, 56, 789);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":443520,"byte_end":443611,"line_start":1191,"line_end":1191,"column_start":5,"column_end":96}},{"value":"/ assert_eq!(dt.with_second(17),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":443616,"byte_end":443650,"line_start":1192,"line_end":1192,"column_start":5,"column_end":39}},{"value":"/            Some(NaiveDate::from_ymd(2015, 9, 8).and_hms_milli(12, 34, 17, 789)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":443655,"byte_end":443740,"line_start":1193,"line_end":1193,"column_start":5,"column_end":90}},{"value":"/ assert_eq!(dt.with_second(60), None);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":443745,"byte_end":443786,"line_start":1194,"line_end":1194,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":443791,"byte_end":443798,"line_start":1195,"line_end":1195,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":443803,"byte_end":443812,"line_start":1196,"line_end":1196,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1334},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":444952,"byte_end":444967,"line_start":1222,"line_end":1222,"column_start":8,"column_end":23},"name":"with_nanosecond","qualname":"<NaiveDateTime as traits::Timelike>::with_nanosecond","value":"fn with_nanosecond<'_>(&'_ Self, u32) -> Option<NaiveDateTime>","parent":{"krate":0,"index":2005},"children":[],"decl_id":{"krate":0,"index":2014},"docs":" Makes a new `NaiveDateTime` with nanoseconds since the whole non-leap second changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` with nanoseconds since the whole non-leap second changed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":443966,"byte_end":444055,"line_start":1201,"line_end":1201,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":444060,"byte_end":444063,"line_start":1202,"line_end":1202,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveDateTime` would be invalid.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":444068,"byte_end":444139,"line_start":1203,"line_end":1203,"column_start":5,"column_end":76}},{"value":"/ As with the [`NaiveDateTime::nanosecond`] method,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":444144,"byte_end":444197,"line_start":1204,"line_end":1204,"column_start":5,"column_end":58}},{"value":"/ the input range can exceed 1,000,000,000 for leap seconds.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":444202,"byte_end":444264,"line_start":1205,"line_end":1205,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":444269,"byte_end":444272,"line_start":1206,"line_end":1206,"column_start":5,"column_end":8}},{"value":"/ See also the [`NaiveTime::with_nanosecond`] method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":444277,"byte_end":444332,"line_start":1207,"line_end":1207,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":444337,"byte_end":444340,"line_start":1208,"line_end":1208,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":444345,"byte_end":444358,"line_start":1209,"line_end":1209,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":444363,"byte_end":444366,"line_start":1210,"line_end":1210,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":444371,"byte_end":444378,"line_start":1211,"line_end":1211,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Timelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":444383,"byte_end":444436,"line_start":1212,"line_end":1212,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":444441,"byte_end":444444,"line_start":1213,"line_end":1213,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2015, 9, 8).and_hms_milli(12, 34, 56, 789);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":444449,"byte_end":444540,"line_start":1214,"line_end":1214,"column_start":5,"column_end":96}},{"value":"/ assert_eq!(dt.with_nanosecond(333_333_333),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":444545,"byte_end":444592,"line_start":1215,"line_end":1215,"column_start":5,"column_end":52}},{"value":"/            Some(NaiveDate::from_ymd(2015, 9, 8).and_hms_nano(12, 34, 56, 333_333_333)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":444597,"byte_end":444689,"line_start":1216,"line_end":1216,"column_start":5,"column_end":97}},{"value":"/ assert_eq!(dt.with_nanosecond(1_333_333_333), // leap second","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":444694,"byte_end":444758,"line_start":1217,"line_end":1217,"column_start":5,"column_end":69}},{"value":"/            Some(NaiveDate::from_ymd(2015, 9, 8).and_hms_nano(12, 34, 56, 1_333_333_333)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":444763,"byte_end":444857,"line_start":1218,"line_end":1218,"column_start":5,"column_end":99}},{"value":"/ assert_eq!(dt.with_nanosecond(2_000_000_000), None);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":444862,"byte_end":444918,"line_start":1219,"line_end":1219,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":444923,"byte_end":444930,"line_start":1220,"line_end":1220,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":444935,"byte_end":444944,"line_start":1221,"line_end":1221,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1338},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":447475,"byte_end":447478,"line_start":1280,"line_end":1280,"column_start":8,"column_end":11},"name":"add","qualname":"<NaiveDateTime as core::ops::Add>::add","value":"fn add(Self, OldDuration) -> NaiveDateTime","parent":{"krate":1,"index":3331},"children":[],"decl_id":{"krate":1,"index":3334},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":447458,"byte_end":447467,"line_start":1279,"line_end":1279,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1340},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":447685,"byte_end":447695,"line_start":1287,"line_end":1287,"column_start":8,"column_end":18},"name":"add_assign","qualname":"<NaiveDateTime as core::ops::AddAssign>::add_assign","value":"fn add_assign<'_>(&'_ mut Self, OldDuration)","parent":{"krate":1,"index":3362},"children":[],"decl_id":{"krate":1,"index":3364},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":447668,"byte_end":447677,"line_start":1286,"line_end":1286,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1343},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":450053,"byte_end":450056,"line_start":1344,"line_end":1344,"column_start":8,"column_end":11},"name":"sub","qualname":"<NaiveDateTime as core::ops::Sub>::sub","value":"fn sub(Self, OldDuration) -> NaiveDateTime","parent":{"krate":1,"index":3336},"children":[],"decl_id":{"krate":1,"index":3339},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":450036,"byte_end":450045,"line_start":1343,"line_end":1343,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1345},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":450263,"byte_end":450273,"line_start":1351,"line_end":1351,"column_start":8,"column_end":18},"name":"sub_assign","qualname":"<NaiveDateTime as core::ops::SubAssign>::sub_assign","value":"fn sub_assign<'_>(&'_ mut Self, OldDuration)","parent":{"krate":1,"index":3366},"children":[],"decl_id":{"krate":1,"index":3368},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":450246,"byte_end":450255,"line_start":1350,"line_end":1350,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1348},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":452038,"byte_end":452041,"line_start":1399,"line_end":1399,"column_start":8,"column_end":11},"name":"sub","qualname":"<NaiveDateTime as core::ops::Sub>::sub","value":"fn sub(Self, NaiveDateTime) -> OldDuration","parent":{"krate":1,"index":3336},"children":[],"decl_id":{"krate":1,"index":3339},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":452021,"byte_end":452030,"line_start":1398,"line_end":1398,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1350},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":453203,"byte_end":453206,"line_start":1432,"line_end":1432,"column_start":8,"column_end":11},"name":"fmt","qualname":"<NaiveDateTime as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10288},"children":[],"decl_id":{"krate":1,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1352},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":454304,"byte_end":454307,"line_start":1463,"line_end":1463,"column_start":8,"column_end":11},"name":"fmt","qualname":"<NaiveDateTime as core::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1355},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":455075,"byte_end":455083,"line_start":1487,"line_end":1487,"column_start":8,"column_end":16},"name":"from_str","qualname":"<NaiveDateTime as core::str::FromStr>::from_str","value":"fn from_str<'_>(&'_ str) -> ParseResult<NaiveDateTime>","parent":{"krate":1,"index":12989},"children":[],"decl_id":{"krate":1,"index":12991},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1358},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":456407,"byte_end":456414,"line_start":1527,"line_end":1527,"column_start":8,"column_end":15},"name":"default","qualname":"<NaiveDateTime as core::default::Default>::default","value":"fn default() -> Self","parent":{"krate":1,"index":3241},"children":[],"decl_id":{"krate":1,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2517},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":493844,"byte_end":493851,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"name":"IsoWeek","qualname":"::naive::isoweek::IsoWeek","value":"IsoWeek {  }","parent":null,"children":[{"krate":0,"index":2518}],"decl_id":null,"docs":" ISO 8601 week.","sig":null,"attributes":[{"value":"/ ISO 8601 week.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":493366,"byte_end":493384,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":493385,"byte_end":493388,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ This type, combined with [`Weekday`](../enum.Weekday.html),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":493389,"byte_end":493452,"line_start":15,"line_end":15,"column_start":1,"column_end":64}},{"value":"/ constitutes the ISO 8601 [week date](./struct.NaiveDate.html#week-date).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":493453,"byte_end":493529,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ One can retrieve this type from the existing [`Datelike`](../trait.Datelike.html) types","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":493530,"byte_end":493621,"line_start":17,"line_end":17,"column_start":1,"column_end":92}},{"value":"/ via the [`Datelike::iso_week`](../trait.Datelike.html#tymethod.iso_week) method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":493622,"byte_end":493706,"line_start":18,"line_end":18,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1463},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":495812,"byte_end":495816,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"year","qualname":"<IsoWeek>::year","value":"fn year<'_>(&'_ Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the year number for this ISO week.","sig":null,"attributes":[{"value":"/ Returns the year number for this ISO week.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":495158,"byte_end":495204,"line_start":53,"line_end":53,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":495209,"byte_end":495212,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":495217,"byte_end":495230,"line_start":55,"line_end":55,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":495235,"byte_end":495238,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":495243,"byte_end":495250,"line_start":57,"line_end":57,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike, Weekday};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":495255,"byte_end":495302,"line_start":58,"line_end":58,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":495307,"byte_end":495310,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_isoywd(2015, 1, Weekday::Mon);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":495315,"byte_end":495373,"line_start":60,"line_end":60,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(d.iso_week().year(), 2015);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":495378,"byte_end":495420,"line_start":61,"line_end":61,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":495425,"byte_end":495432,"line_start":62,"line_end":62,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":495437,"byte_end":495440,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ This year number might not match the calendar year number.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":495445,"byte_end":495507,"line_start":64,"line_end":64,"column_start":5,"column_end":67}},{"value":"/ Continuing the example...","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":495512,"byte_end":495541,"line_start":65,"line_end":65,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":495546,"byte_end":495549,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":495554,"byte_end":495561,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{NaiveDate, Datelike, Weekday};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":495566,"byte_end":495615,"line_start":68,"line_end":68,"column_start":5,"column_end":54}},{"value":"/ # let d = NaiveDate::from_isoywd(2015, 1, Weekday::Mon);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":495620,"byte_end":495680,"line_start":69,"line_end":69,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(d.year(), 2014);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":495685,"byte_end":495716,"line_start":70,"line_end":70,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(d, NaiveDate::from_ymd(2014, 12, 29));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":495721,"byte_end":495774,"line_start":71,"line_end":71,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":495779,"byte_end":495786,"line_start":72,"line_end":72,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":495791,"byte_end":495800,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1464},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":496264,"byte_end":496268,"line_start":91,"line_end":91,"column_start":12,"column_end":16},"name":"week","qualname":"<IsoWeek>::week","value":"fn week<'_>(&'_ Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the ISO week number starting from 1.","sig":null,"attributes":[{"value":"/ Returns the ISO week number starting from 1.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":495867,"byte_end":495915,"line_start":78,"line_end":78,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":495920,"byte_end":495923,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 1 to 53. (The last week of year differs by years.)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":495928,"byte_end":496011,"line_start":80,"line_end":80,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":496016,"byte_end":496019,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":496024,"byte_end":496037,"line_start":82,"line_end":82,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":496042,"byte_end":496045,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":496050,"byte_end":496057,"line_start":84,"line_end":84,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike, Weekday};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":496062,"byte_end":496109,"line_start":85,"line_end":85,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":496114,"byte_end":496117,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_isoywd(2015, 15, Weekday::Mon);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":496122,"byte_end":496181,"line_start":87,"line_end":87,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(d.iso_week().week(), 15);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":496186,"byte_end":496226,"line_start":88,"line_end":88,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":496231,"byte_end":496238,"line_start":89,"line_end":89,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":496243,"byte_end":496252,"line_start":90,"line_end":90,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1465},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":496734,"byte_end":496739,"line_start":108,"line_end":108,"column_start":12,"column_end":17},"name":"week0","qualname":"<IsoWeek>::week0","value":"fn week0<'_>(&'_ Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the ISO week number starting from 0.","sig":null,"attributes":[{"value":"/ Returns the ISO week number starting from 0.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":496336,"byte_end":496384,"line_start":95,"line_end":95,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":496389,"byte_end":496392,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 52. (The last week of year differs by years.)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":496397,"byte_end":496480,"line_start":97,"line_end":97,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":496485,"byte_end":496488,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":496493,"byte_end":496506,"line_start":99,"line_end":99,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":496511,"byte_end":496514,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":496519,"byte_end":496526,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike, Weekday};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":496531,"byte_end":496578,"line_start":102,"line_end":102,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":496583,"byte_end":496586,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_isoywd(2015, 15, Weekday::Mon);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":496591,"byte_end":496650,"line_start":104,"line_end":104,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(d.iso_week().week0(), 14);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":496655,"byte_end":496696,"line_start":105,"line_end":105,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":496701,"byte_end":496708,"line_start":106,"line_end":106,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":496713,"byte_end":496722,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1467},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":497702,"byte_end":497705,"line_start":135,"line_end":135,"column_start":8,"column_end":11},"name":"fmt","qualname":"<IsoWeek as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10288},"children":[],"decl_id":{"krate":1,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2533},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":506829,"byte_end":506838,"line_start":192,"line_end":192,"column_start":12,"column_end":21},"name":"NaiveTime","qualname":"::naive::time::NaiveTime","value":"NaiveTime {  }","parent":null,"children":[{"krate":0,"index":2534},{"krate":0,"index":2535}],"decl_id":null,"docs":" ISO 8601 time without timezone.\n Allows for the nanosecond precision and optional leap second representation.","sig":null,"attributes":[{"value":"/ ISO 8601 time without timezone.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":499547,"byte_end":499582,"line_start":31,"line_end":31,"column_start":1,"column_end":36}},{"value":"/ Allows for the nanosecond precision and optional leap second representation.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":499583,"byte_end":499663,"line_start":32,"line_end":32,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":499664,"byte_end":499667,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Leap Second Handling","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":499668,"byte_end":499694,"line_start":34,"line_end":34,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":499695,"byte_end":499698,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Since 1960s, the manmade atomic clock has been so accurate that","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":499699,"byte_end":499766,"line_start":36,"line_end":36,"column_start":1,"column_end":68}},{"value":"/ it is much more accurate than Earth's own motion.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":499767,"byte_end":499820,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ It became desirable to define the civil time in terms of the atomic clock,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":499821,"byte_end":499899,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ but that risks the desynchronization of the civil time from Earth.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":499900,"byte_end":499970,"line_start":39,"line_end":39,"column_start":1,"column_end":71}},{"value":"/ To account for this, the designers of the Coordinated Universal Time (UTC)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":499971,"byte_end":500049,"line_start":40,"line_end":40,"column_start":1,"column_end":79}},{"value":"/ made that the UTC should be kept within 0.9 seconds of the observed Earth-bound time.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":500050,"byte_end":500139,"line_start":41,"line_end":41,"column_start":1,"column_end":90}},{"value":"/ When the mean solar day is longer than the ideal (86,400 seconds),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":500140,"byte_end":500210,"line_start":42,"line_end":42,"column_start":1,"column_end":71}},{"value":"/ the error slowly accumulates and it is necessary to add a **leap second**","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":500211,"byte_end":500288,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ to slow the UTC down a bit.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":500289,"byte_end":500320,"line_start":44,"line_end":44,"column_start":1,"column_end":32}},{"value":"/ (We may also remove a second to speed the UTC up a bit, but it never happened.)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":500321,"byte_end":500404,"line_start":45,"line_end":45,"column_start":1,"column_end":84}},{"value":"/ The leap second, if any, follows 23:59:59 of June 30 or December 31 in the UTC.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":500405,"byte_end":500488,"line_start":46,"line_end":46,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":500489,"byte_end":500492,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Fast forward to the 21st century,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":500493,"byte_end":500530,"line_start":48,"line_end":48,"column_start":1,"column_end":38}},{"value":"/ we have seen 26 leap seconds from January 1972 to December 2015.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":500531,"byte_end":500599,"line_start":49,"line_end":49,"column_start":1,"column_end":69}},{"value":"/ Yes, 26 seconds. Probably you can read this paragraph within 26 seconds.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":500600,"byte_end":500676,"line_start":50,"line_end":50,"column_start":1,"column_end":77}},{"value":"/ But those 26 seconds, and possibly more in the future, are never predictable,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":500677,"byte_end":500758,"line_start":51,"line_end":51,"column_start":1,"column_end":82}},{"value":"/ and whether to add a leap second or not is known only before 6 months.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":500759,"byte_end":500833,"line_start":52,"line_end":52,"column_start":1,"column_end":75}},{"value":"/ Internet-based clocks (via NTP) do account for known leap seconds,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":500834,"byte_end":500904,"line_start":53,"line_end":53,"column_start":1,"column_end":71}},{"value":"/ but the system API normally doesn't (and often can't, with no network connection)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":500905,"byte_end":500990,"line_start":54,"line_end":54,"column_start":1,"column_end":86}},{"value":"/ and there is no reliable way to retrieve leap second information.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":500991,"byte_end":501060,"line_start":55,"line_end":55,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":501061,"byte_end":501064,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ Chrono does not try to accurately implement leap seconds; it is impossible.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":501065,"byte_end":501144,"line_start":57,"line_end":57,"column_start":1,"column_end":80}},{"value":"/ Rather, **it allows for leap seconds but behaves as if there are *no other* leap seconds.**","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":501145,"byte_end":501240,"line_start":58,"line_end":58,"column_start":1,"column_end":96}},{"value":"/ Various operations will ignore any possible leap second(s)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":501241,"byte_end":501303,"line_start":59,"line_end":59,"column_start":1,"column_end":63}},{"value":"/ except when any of the operands were actually leap seconds.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":501304,"byte_end":501367,"line_start":60,"line_end":60,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":501368,"byte_end":501371,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ If you cannot tolerate this behavior,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":501372,"byte_end":501413,"line_start":62,"line_end":62,"column_start":1,"column_end":42}},{"value":"/ you must use a separate `TimeZone` for the International Atomic Time (TAI).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":501414,"byte_end":501493,"line_start":63,"line_end":63,"column_start":1,"column_end":80}},{"value":"/ TAI is like UTC but has no leap seconds, and thus slightly differs from UTC.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":501494,"byte_end":501574,"line_start":64,"line_end":64,"column_start":1,"column_end":81}},{"value":"/ Chrono does not yet provide such implementation, but it is planned.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":501575,"byte_end":501646,"line_start":65,"line_end":65,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":501647,"byte_end":501650,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ## Representing Leap Seconds","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":501651,"byte_end":501683,"line_start":67,"line_end":67,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":501684,"byte_end":501687,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ The leap second is indicated via fractional seconds more than 1 second.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":501688,"byte_end":501763,"line_start":69,"line_end":69,"column_start":1,"column_end":76}},{"value":"/ This makes possible to treat a leap second as the prior non-leap second","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":501764,"byte_end":501839,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ if you don't care about sub-second accuracy.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":501840,"byte_end":501888,"line_start":71,"line_end":71,"column_start":1,"column_end":49}},{"value":"/ You should use the proper formatting to get the raw leap second.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":501889,"byte_end":501957,"line_start":72,"line_end":72,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":501958,"byte_end":501961,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ All methods accepting fractional seconds will accept such values.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":501962,"byte_end":502031,"line_start":74,"line_end":74,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":502032,"byte_end":502035,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":502036,"byte_end":502043,"line_start":76,"line_end":76,"column_start":1,"column_end":8}},{"value":"/ use chrono::{NaiveDate, NaiveTime, Utc, TimeZone};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":502044,"byte_end":502098,"line_start":77,"line_end":77,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":502099,"byte_end":502102,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ let t = NaiveTime::from_hms_milli(8, 59, 59, 1_000);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":502103,"byte_end":502159,"line_start":79,"line_end":79,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":502160,"byte_end":502163,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ let dt1 = NaiveDate::from_ymd(2015, 7, 1).and_hms_micro(8, 59, 59, 1_000_000);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":502164,"byte_end":502246,"line_start":81,"line_end":81,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":502247,"byte_end":502250,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ let dt2 = Utc.ymd(2015, 6, 30).and_hms_nano(23, 59, 59, 1_000_000_000);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":502251,"byte_end":502326,"line_start":83,"line_end":83,"column_start":1,"column_end":76}},{"value":"/ # let _ = (t, dt1, dt2);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":502327,"byte_end":502355,"line_start":84,"line_end":84,"column_start":1,"column_end":29}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":502356,"byte_end":502363,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":502364,"byte_end":502367,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ Note that the leap second can happen anytime given an appropriate time zone;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":502368,"byte_end":502448,"line_start":87,"line_end":87,"column_start":1,"column_end":81}},{"value":"/ 2015-07-01 01:23:60 would be a proper leap second if UTC+01:24 had existed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":502449,"byte_end":502528,"line_start":88,"line_end":88,"column_start":1,"column_end":80}},{"value":"/ Practically speaking, though, by the time of the first leap second on 1972-06-30,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":502529,"byte_end":502614,"line_start":89,"line_end":89,"column_start":1,"column_end":86}},{"value":"/ every time zone offset around the world has standardized to the 5-minute alignment.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":502615,"byte_end":502702,"line_start":90,"line_end":90,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":502703,"byte_end":502706,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ## Date And Time Arithmetics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":502707,"byte_end":502739,"line_start":92,"line_end":92,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":502740,"byte_end":502743,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ As a concrete example, let's assume that `03:00:60` and `04:00:60` are leap seconds.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":502744,"byte_end":502832,"line_start":94,"line_end":94,"column_start":1,"column_end":89}},{"value":"/ In reality, of course, leap seconds are separated by at least 6 months.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":502833,"byte_end":502908,"line_start":95,"line_end":95,"column_start":1,"column_end":76}},{"value":"/ We will also use some intuitive concise notations for the explanation.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":502909,"byte_end":502983,"line_start":96,"line_end":96,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":502984,"byte_end":502987,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ `Time + Duration`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":502988,"byte_end":503009,"line_start":98,"line_end":98,"column_start":1,"column_end":22}},{"value":"/ (short for [`NaiveTime::overflowing_add_signed`](#method.overflowing_add_signed)):","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":503010,"byte_end":503096,"line_start":99,"line_end":99,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":503097,"byte_end":503100,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ - `03:00:00 + 1s = 03:00:01`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":503101,"byte_end":503134,"line_start":101,"line_end":101,"column_start":1,"column_end":34}},{"value":"/ - `03:00:59 + 60s = 03:02:00`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":503135,"byte_end":503169,"line_start":102,"line_end":102,"column_start":1,"column_end":35}},{"value":"/ - `03:00:59 + 1s = 03:01:00`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":503170,"byte_end":503203,"line_start":103,"line_end":103,"column_start":1,"column_end":34}},{"value":"/ - `03:00:60 + 1s = 03:01:00`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":503204,"byte_end":503237,"line_start":104,"line_end":104,"column_start":1,"column_end":34}},{"value":"/   Note that the sum is identical to the previous.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":503238,"byte_end":503291,"line_start":105,"line_end":105,"column_start":1,"column_end":54}},{"value":"/ - `03:00:60 + 60s = 03:01:59`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":503292,"byte_end":503326,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/ - `03:00:60 + 61s = 03:02:00`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":503327,"byte_end":503361,"line_start":107,"line_end":107,"column_start":1,"column_end":35}},{"value":"/ - `03:00:60.1 + 0.8s = 03:00:60.9`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":503362,"byte_end":503401,"line_start":108,"line_end":108,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":503402,"byte_end":503405,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ `Time - Duration`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":503406,"byte_end":503427,"line_start":110,"line_end":110,"column_start":1,"column_end":22}},{"value":"/ (short for [`NaiveTime::overflowing_sub_signed`](#method.overflowing_sub_signed)):","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":503428,"byte_end":503514,"line_start":111,"line_end":111,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":503515,"byte_end":503518,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ - `03:00:00 - 1s = 02:59:59`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":503519,"byte_end":503552,"line_start":113,"line_end":113,"column_start":1,"column_end":34}},{"value":"/ - `03:01:00 - 1s = 03:00:59`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":503553,"byte_end":503586,"line_start":114,"line_end":114,"column_start":1,"column_end":34}},{"value":"/ - `03:01:00 - 60s = 03:00:00`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":503587,"byte_end":503621,"line_start":115,"line_end":115,"column_start":1,"column_end":35}},{"value":"/ - `03:00:60 - 60s = 03:00:00`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":503622,"byte_end":503656,"line_start":116,"line_end":116,"column_start":1,"column_end":35}},{"value":"/   Note that the result is identical to the previous.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":503657,"byte_end":503713,"line_start":117,"line_end":117,"column_start":1,"column_end":57}},{"value":"/ - `03:00:60.7 - 0.4s = 03:00:60.3`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":503714,"byte_end":503753,"line_start":118,"line_end":118,"column_start":1,"column_end":40}},{"value":"/ - `03:00:60.7 - 0.9s = 03:00:59.8`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":503754,"byte_end":503793,"line_start":119,"line_end":119,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":503794,"byte_end":503797,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ `Time - Time`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":503798,"byte_end":503815,"line_start":121,"line_end":121,"column_start":1,"column_end":18}},{"value":"/ (short for [`NaiveTime::signed_duration_since`](#method.signed_duration_since)):","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":503816,"byte_end":503900,"line_start":122,"line_end":122,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":503901,"byte_end":503904,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ - `04:00:00 - 03:00:00 = 3600s`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":503905,"byte_end":503941,"line_start":124,"line_end":124,"column_start":1,"column_end":37}},{"value":"/ - `03:01:00 - 03:00:00 = 60s`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":503942,"byte_end":503976,"line_start":125,"line_end":125,"column_start":1,"column_end":35}},{"value":"/ - `03:00:60 - 03:00:00 = 60s`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":503977,"byte_end":504011,"line_start":126,"line_end":126,"column_start":1,"column_end":35}},{"value":"/   Note that the difference is identical to the previous.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":504012,"byte_end":504072,"line_start":127,"line_end":127,"column_start":1,"column_end":61}},{"value":"/ - `03:00:60.6 - 03:00:59.4 = 1.2s`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":504073,"byte_end":504112,"line_start":128,"line_end":128,"column_start":1,"column_end":40}},{"value":"/ - `03:01:00 - 03:00:59.8 = 0.2s`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":504113,"byte_end":504150,"line_start":129,"line_end":129,"column_start":1,"column_end":38}},{"value":"/ - `03:01:00 - 03:00:60.5 = 0.5s`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":504151,"byte_end":504188,"line_start":130,"line_end":130,"column_start":1,"column_end":38}},{"value":"/   Note that the difference is larger than the previous,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":504189,"byte_end":504248,"line_start":131,"line_end":131,"column_start":1,"column_end":60}},{"value":"/   even though the leap second clearly follows the previous whole second.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":504249,"byte_end":504325,"line_start":132,"line_end":132,"column_start":1,"column_end":77}},{"value":"/ - `04:00:60.9 - 03:00:60.1 =","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":504326,"byte_end":504358,"line_start":133,"line_end":133,"column_start":1,"column_end":33}},{"value":"/   (04:00:60.9 - 04:00:00) + (04:00:00 - 03:01:00) + (03:01:00 - 03:00:60.1) =","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":504359,"byte_end":504440,"line_start":134,"line_end":134,"column_start":1,"column_end":82}},{"value":"/   60.9s + 3540s + 0.9s = 3601.8s`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":504441,"byte_end":504479,"line_start":135,"line_end":135,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":504480,"byte_end":504483,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ In general,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":504484,"byte_end":504499,"line_start":137,"line_end":137,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":504500,"byte_end":504503,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ - `Time + Duration` unconditionally equals to `Duration + Time`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":504504,"byte_end":504572,"line_start":139,"line_end":139,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":504573,"byte_end":504576,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ - `Time - Duration` unconditionally equals to `Time + (-Duration)`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":504577,"byte_end":504648,"line_start":141,"line_end":141,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":504649,"byte_end":504652,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ - `Time1 - Time2` unconditionally equals to `-(Time2 - Time1)`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":504653,"byte_end":504720,"line_start":143,"line_end":143,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":504721,"byte_end":504724,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ - Associativity does not generally hold, because","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":504725,"byte_end":504777,"line_start":145,"line_end":145,"column_start":1,"column_end":53}},{"value":"/   `(Time + Duration1) - Duration2` no longer equals to `Time + (Duration1 - Duration2)`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":504778,"byte_end":504869,"line_start":146,"line_end":146,"column_start":1,"column_end":92}},{"value":"/   for two positive durations.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":504870,"byte_end":504903,"line_start":147,"line_end":147,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":504904,"byte_end":504907,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/     - As a special case, `(Time + Duration) - Duration` also does not equal to `Time`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":504908,"byte_end":504998,"line_start":149,"line_end":149,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":504999,"byte_end":505002,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/     - If you can assume that all durations have the same sign, however,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":505003,"byte_end":505078,"line_start":151,"line_end":151,"column_start":1,"column_end":76}},{"value":"/       then the associativity holds:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":505079,"byte_end":505118,"line_start":152,"line_end":152,"column_start":1,"column_end":40}},{"value":"/       `(Time + Duration1) + Duration2` equals to `Time + (Duration1 + Duration2)`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":505119,"byte_end":505204,"line_start":153,"line_end":153,"column_start":1,"column_end":86}},{"value":"/       for two positive durations.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":505205,"byte_end":505242,"line_start":154,"line_end":154,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":505243,"byte_end":505246,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ ## Reading And Writing Leap Seconds","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":505247,"byte_end":505286,"line_start":156,"line_end":156,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":505287,"byte_end":505290,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ The \"typical\" leap seconds on the minute boundary are","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":505291,"byte_end":505348,"line_start":158,"line_end":158,"column_start":1,"column_end":58}},{"value":"/ correctly handled both in the formatting and parsing.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":505349,"byte_end":505406,"line_start":159,"line_end":159,"column_start":1,"column_end":58}},{"value":"/ The leap second in the human-readable representation","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":505407,"byte_end":505463,"line_start":160,"line_end":160,"column_start":1,"column_end":57}},{"value":"/ will be represented as the second part being 60, as required by ISO 8601.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":505464,"byte_end":505541,"line_start":161,"line_end":161,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":505542,"byte_end":505545,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":505546,"byte_end":505553,"line_start":163,"line_end":163,"column_start":1,"column_end":8}},{"value":"/ use chrono::{Utc, TimeZone};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":505554,"byte_end":505586,"line_start":164,"line_end":164,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":505587,"byte_end":505590,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ let dt = Utc.ymd(2015, 6, 30).and_hms_milli(23, 59, 59, 1_000);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":505591,"byte_end":505658,"line_start":166,"line_end":166,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(format!(\"{:?}\", dt), \"2015-06-30T23:59:60Z\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":505659,"byte_end":505719,"line_start":167,"line_end":167,"column_start":1,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":505720,"byte_end":505727,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":505728,"byte_end":505731,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ There are hypothetical leap seconds not on the minute boundary","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":505732,"byte_end":505798,"line_start":170,"line_end":170,"column_start":1,"column_end":67}},{"value":"/ nevertheless supported by Chrono.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":505799,"byte_end":505836,"line_start":171,"line_end":171,"column_start":1,"column_end":38}},{"value":"/ They are allowed for the sake of completeness and consistency;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":505837,"byte_end":505903,"line_start":172,"line_end":172,"column_start":1,"column_end":67}},{"value":"/ there were several \"exotic\" time zone offsets with fractional minutes prior to UTC after all.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":505904,"byte_end":506001,"line_start":173,"line_end":173,"column_start":1,"column_end":98}},{"value":"/ For such cases the human-readable representation is ambiguous","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":506002,"byte_end":506067,"line_start":174,"line_end":174,"column_start":1,"column_end":66}},{"value":"/ and would be read back to the next non-leap second.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":506068,"byte_end":506123,"line_start":175,"line_end":175,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":506124,"byte_end":506127,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":506128,"byte_end":506135,"line_start":177,"line_end":177,"column_start":1,"column_end":8}},{"value":"/ use chrono::{DateTime, Utc, TimeZone};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":506136,"byte_end":506178,"line_start":178,"line_end":178,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":506179,"byte_end":506182,"line_start":179,"line_end":179,"column_start":1,"column_end":4}},{"value":"/ let dt = Utc.ymd(2015, 6, 30).and_hms_milli(23, 56, 4, 1_000);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":506183,"byte_end":506249,"line_start":180,"line_end":180,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(format!(\"{:?}\", dt), \"2015-06-30T23:56:05Z\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":506250,"byte_end":506310,"line_start":181,"line_end":181,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":506311,"byte_end":506314,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ let dt = Utc.ymd(2015, 6, 30).and_hms(23, 56, 5);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":506315,"byte_end":506368,"line_start":183,"line_end":183,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(format!(\"{:?}\", dt), \"2015-06-30T23:56:05Z\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":506369,"byte_end":506429,"line_start":184,"line_end":184,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(DateTime::parse_from_rfc3339(\"2015-06-30T23:56:05Z\").unwrap(), dt);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":506430,"byte_end":506512,"line_start":185,"line_end":185,"column_start":1,"column_end":83}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":506513,"byte_end":506520,"line_start":186,"line_end":186,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":506521,"byte_end":506524,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ Since Chrono alone cannot determine any existence of leap seconds,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":506525,"byte_end":506595,"line_start":188,"line_end":188,"column_start":1,"column_end":71}},{"value":"/ **there is absolutely no guarantee that the leap second read has actually happened**.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":506596,"byte_end":506685,"line_start":189,"line_end":189,"column_start":1,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":1528},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":507494,"byte_end":507502,"line_start":217,"line_end":217,"column_start":12,"column_end":20},"name":"from_hms","qualname":"<NaiveTime>::from_hms","value":"fn from_hms(u32, u32, u32) -> NaiveTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute and second.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from hour, minute and second.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":506895,"byte_end":506952,"line_start":198,"line_end":198,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":506957,"byte_end":506960,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ No [leap second](#leap-second-handling) is allowed here;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":506965,"byte_end":507025,"line_start":200,"line_end":200,"column_start":5,"column_end":65}},{"value":"/ use `NaiveTime::from_hms_*` methods with a subsecond parameter instead.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":507030,"byte_end":507105,"line_start":201,"line_end":201,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":507110,"byte_end":507113,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute and/or second.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":507118,"byte_end":507167,"line_start":203,"line_end":203,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":507172,"byte_end":507175,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":507180,"byte_end":507193,"line_start":205,"line_end":205,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":507198,"byte_end":507201,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":507206,"byte_end":507213,"line_start":207,"line_end":207,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":507218,"byte_end":507256,"line_start":208,"line_end":208,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":507261,"byte_end":507264,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ let t = NaiveTime::from_hms(23, 56, 4);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":507269,"byte_end":507312,"line_start":210,"line_end":210,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(t.hour(), 23);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":507317,"byte_end":507346,"line_start":211,"line_end":211,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(t.minute(), 56);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":507351,"byte_end":507382,"line_start":212,"line_end":212,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(t.second(), 4);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":507387,"byte_end":507417,"line_start":213,"line_end":213,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(t.nanosecond(), 0);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":507422,"byte_end":507456,"line_start":214,"line_end":214,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":507461,"byte_end":507468,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":507473,"byte_end":507482,"line_start":216,"line_end":216,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1529},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":508357,"byte_end":508369,"line_start":242,"line_end":242,"column_start":12,"column_end":24},"name":"from_hms_opt","qualname":"<NaiveTime>::from_hms_opt","value":"fn from_hms_opt(u32, u32, u32) -> Option<NaiveTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute and second.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from hour, minute and second.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":507631,"byte_end":507688,"line_start":221,"line_end":221,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":507693,"byte_end":507696,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ No [leap second](#leap-second-handling) is allowed here;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":507701,"byte_end":507761,"line_start":223,"line_end":223,"column_start":5,"column_end":65}},{"value":"/ use `NaiveTime::from_hms_*_opt` methods with a subsecond parameter instead.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":507766,"byte_end":507845,"line_start":224,"line_end":224,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":507850,"byte_end":507853,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute and/or second.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":507858,"byte_end":507915,"line_start":226,"line_end":226,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":507920,"byte_end":507923,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":507928,"byte_end":507941,"line_start":228,"line_end":228,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":507946,"byte_end":507949,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":507954,"byte_end":507961,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveTime;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":507966,"byte_end":507992,"line_start":231,"line_end":231,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":507997,"byte_end":508000,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ let from_hms_opt = NaiveTime::from_hms_opt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":508005,"byte_end":508052,"line_start":233,"line_end":233,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":508057,"byte_end":508060,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ assert!(from_hms_opt(0, 0, 0).is_some());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":508065,"byte_end":508110,"line_start":235,"line_end":235,"column_start":5,"column_end":50}},{"value":"/ assert!(from_hms_opt(23, 59, 59).is_some());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":508115,"byte_end":508163,"line_start":236,"line_end":236,"column_start":5,"column_end":53}},{"value":"/ assert!(from_hms_opt(24, 0, 0).is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":508168,"byte_end":508214,"line_start":237,"line_end":237,"column_start":5,"column_end":51}},{"value":"/ assert!(from_hms_opt(23, 60, 0).is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":508219,"byte_end":508266,"line_start":238,"line_end":238,"column_start":5,"column_end":52}},{"value":"/ assert!(from_hms_opt(23, 59, 60).is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":508271,"byte_end":508319,"line_start":239,"line_end":239,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":508324,"byte_end":508331,"line_start":240,"line_end":240,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":508336,"byte_end":508345,"line_start":241,"line_end":241,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1530},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":509108,"byte_end":509122,"line_start":265,"line_end":265,"column_start":12,"column_end":26},"name":"from_hms_milli","qualname":"<NaiveTime>::from_hms_milli","value":"fn from_hms_milli(u32, u32, u32, u32) -> NaiveTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute, second and millisecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from hour, minute, second and millisecond.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":508491,"byte_end":508561,"line_start":246,"line_end":246,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":508566,"byte_end":508569,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ The millisecond part can exceed 1,000","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":508574,"byte_end":508615,"line_start":248,"line_end":248,"column_start":5,"column_end":46}},{"value":"/ in order to represent the [leap second](#leap-second-handling).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":508620,"byte_end":508687,"line_start":249,"line_end":249,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":508692,"byte_end":508695,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute, second and/or millisecond.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":508700,"byte_end":508762,"line_start":251,"line_end":251,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":508767,"byte_end":508770,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":508775,"byte_end":508788,"line_start":253,"line_end":253,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":508793,"byte_end":508796,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":508801,"byte_end":508808,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":508813,"byte_end":508851,"line_start":256,"line_end":256,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":508856,"byte_end":508859,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ let t = NaiveTime::from_hms_milli(23, 56, 4, 12);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":508864,"byte_end":508917,"line_start":258,"line_end":258,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(t.hour(), 23);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":508922,"byte_end":508951,"line_start":259,"line_end":259,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(t.minute(), 56);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":508956,"byte_end":508987,"line_start":260,"line_end":260,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(t.second(), 4);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":508992,"byte_end":509022,"line_start":261,"line_end":261,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(t.nanosecond(), 12_000_000);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":509027,"byte_end":509070,"line_start":262,"line_end":262,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":509075,"byte_end":509082,"line_start":263,"line_end":263,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":509087,"byte_end":509096,"line_start":264,"line_end":264,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1531},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":510180,"byte_end":510198,"line_start":292,"line_end":292,"column_start":12,"column_end":30},"name":"from_hms_milli_opt","qualname":"<NaiveTime>::from_hms_milli_opt","value":"fn from_hms_milli_opt(u32, u32, u32, u32) -> Option<NaiveTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute, second and millisecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from hour, minute, second and millisecond.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":509276,"byte_end":509346,"line_start":269,"line_end":269,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":509351,"byte_end":509354,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ The millisecond part can exceed 1,000","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":509359,"byte_end":509400,"line_start":271,"line_end":271,"column_start":5,"column_end":46}},{"value":"/ in order to represent the [leap second](#leap-second-handling).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":509405,"byte_end":509472,"line_start":272,"line_end":272,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":509477,"byte_end":509480,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute, second and/or millisecond.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":509485,"byte_end":509555,"line_start":274,"line_end":274,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":509560,"byte_end":509563,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":509568,"byte_end":509581,"line_start":276,"line_end":276,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":509586,"byte_end":509589,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":509594,"byte_end":509601,"line_start":278,"line_end":278,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveTime;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":509606,"byte_end":509632,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":509637,"byte_end":509640,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ let from_hmsm_opt = NaiveTime::from_hms_milli_opt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":509645,"byte_end":509699,"line_start":281,"line_end":281,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":509704,"byte_end":509707,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ assert!(from_hmsm_opt(0, 0, 0, 0).is_some());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":509712,"byte_end":509761,"line_start":283,"line_end":283,"column_start":5,"column_end":54}},{"value":"/ assert!(from_hmsm_opt(23, 59, 59, 999).is_some());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":509766,"byte_end":509820,"line_start":284,"line_end":284,"column_start":5,"column_end":59}},{"value":"/ assert!(from_hmsm_opt(23, 59, 59, 1_999).is_some()); // a leap second after 23:59:59","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":509825,"byte_end":509913,"line_start":285,"line_end":285,"column_start":5,"column_end":93}},{"value":"/ assert!(from_hmsm_opt(24, 0, 0, 0).is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":509918,"byte_end":509968,"line_start":286,"line_end":286,"column_start":5,"column_end":55}},{"value":"/ assert!(from_hmsm_opt(23, 60, 0, 0).is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":509973,"byte_end":510024,"line_start":287,"line_end":287,"column_start":5,"column_end":56}},{"value":"/ assert!(from_hmsm_opt(23, 59, 60, 0).is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":510029,"byte_end":510081,"line_start":288,"line_end":288,"column_start":5,"column_end":57}},{"value":"/ assert!(from_hmsm_opt(23, 59, 59, 2_000).is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":510086,"byte_end":510142,"line_start":289,"line_end":289,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":510147,"byte_end":510154,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":510159,"byte_end":510168,"line_start":291,"line_end":291,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1533},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":511032,"byte_end":511046,"line_start":317,"line_end":317,"column_start":12,"column_end":26},"name":"from_hms_micro","qualname":"<NaiveTime>::from_hms_micro","value":"fn from_hms_micro(u32, u32, u32, u32) -> NaiveTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute, second and microsecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from hour, minute, second and microsecond.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":510407,"byte_end":510477,"line_start":298,"line_end":298,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":510482,"byte_end":510485,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ The microsecond part can exceed 1,000,000","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":510490,"byte_end":510535,"line_start":300,"line_end":300,"column_start":5,"column_end":50}},{"value":"/ in order to represent the [leap second](#leap-second-handling).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":510540,"byte_end":510607,"line_start":301,"line_end":301,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":510612,"byte_end":510615,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute, second and/or microsecond.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":510620,"byte_end":510682,"line_start":303,"line_end":303,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":510687,"byte_end":510690,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":510695,"byte_end":510708,"line_start":305,"line_end":305,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":510713,"byte_end":510716,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":510721,"byte_end":510728,"line_start":307,"line_end":307,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":510733,"byte_end":510771,"line_start":308,"line_end":308,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":510776,"byte_end":510779,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ let t = NaiveTime::from_hms_micro(23, 56, 4, 12_345);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":510784,"byte_end":510841,"line_start":310,"line_end":310,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(t.hour(), 23);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":510846,"byte_end":510875,"line_start":311,"line_end":311,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(t.minute(), 56);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":510880,"byte_end":510911,"line_start":312,"line_end":312,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(t.second(), 4);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":510916,"byte_end":510946,"line_start":313,"line_end":313,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(t.nanosecond(), 12_345_000);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":510951,"byte_end":510994,"line_start":314,"line_end":314,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":510999,"byte_end":511006,"line_start":315,"line_end":315,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":511011,"byte_end":511020,"line_start":316,"line_end":316,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1534},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":512120,"byte_end":512138,"line_start":344,"line_end":344,"column_start":12,"column_end":30},"name":"from_hms_micro_opt","qualname":"<NaiveTime>::from_hms_micro_opt","value":"fn from_hms_micro_opt(u32, u32, u32, u32) -> Option<NaiveTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute, second and microsecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from hour, minute, second and microsecond.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":511200,"byte_end":511270,"line_start":321,"line_end":321,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":511275,"byte_end":511278,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ The microsecond part can exceed 1,000,000","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":511283,"byte_end":511328,"line_start":323,"line_end":323,"column_start":5,"column_end":50}},{"value":"/ in order to represent the [leap second](#leap-second-handling).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":511333,"byte_end":511400,"line_start":324,"line_end":324,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":511405,"byte_end":511408,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute, second and/or microsecond.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":511413,"byte_end":511483,"line_start":326,"line_end":326,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":511488,"byte_end":511491,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":511496,"byte_end":511509,"line_start":328,"line_end":328,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":511514,"byte_end":511517,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":511522,"byte_end":511529,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveTime;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":511534,"byte_end":511560,"line_start":331,"line_end":331,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":511565,"byte_end":511568,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ let from_hmsu_opt = NaiveTime::from_hms_micro_opt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":511573,"byte_end":511627,"line_start":333,"line_end":333,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":511632,"byte_end":511635,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ assert!(from_hmsu_opt(0, 0, 0, 0).is_some());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":511640,"byte_end":511689,"line_start":335,"line_end":335,"column_start":5,"column_end":54}},{"value":"/ assert!(from_hmsu_opt(23, 59, 59, 999_999).is_some());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":511694,"byte_end":511752,"line_start":336,"line_end":336,"column_start":5,"column_end":63}},{"value":"/ assert!(from_hmsu_opt(23, 59, 59, 1_999_999).is_some()); // a leap second after 23:59:59","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":511757,"byte_end":511849,"line_start":337,"line_end":337,"column_start":5,"column_end":97}},{"value":"/ assert!(from_hmsu_opt(24, 0, 0, 0).is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":511854,"byte_end":511904,"line_start":338,"line_end":338,"column_start":5,"column_end":55}},{"value":"/ assert!(from_hmsu_opt(23, 60, 0, 0).is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":511909,"byte_end":511960,"line_start":339,"line_end":339,"column_start":5,"column_end":56}},{"value":"/ assert!(from_hmsu_opt(23, 59, 60, 0).is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":511965,"byte_end":512017,"line_start":340,"line_end":340,"column_start":5,"column_end":57}},{"value":"/ assert!(from_hmsu_opt(23, 59, 59, 2_000_000).is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":512022,"byte_end":512082,"line_start":341,"line_end":341,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":512087,"byte_end":512094,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":512099,"byte_end":512108,"line_start":343,"line_end":343,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1536},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":512946,"byte_end":512959,"line_start":367,"line_end":367,"column_start":12,"column_end":25},"name":"from_hms_nano","qualname":"<NaiveTime>::from_hms_nano","value":"fn from_hms_nano(u32, u32, u32, u32) -> NaiveTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute, second and nanosecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from hour, minute, second and nanosecond.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":512317,"byte_end":512386,"line_start":348,"line_end":348,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":512391,"byte_end":512394,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ The nanosecond part can exceed 1,000,000,000","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":512399,"byte_end":512447,"line_start":350,"line_end":350,"column_start":5,"column_end":53}},{"value":"/ in order to represent the [leap second](#leap-second-handling).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":512452,"byte_end":512519,"line_start":351,"line_end":351,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":512524,"byte_end":512527,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute, second and/or nanosecond.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":512532,"byte_end":512593,"line_start":353,"line_end":353,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":512598,"byte_end":512601,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":512606,"byte_end":512619,"line_start":355,"line_end":355,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":512624,"byte_end":512627,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":512632,"byte_end":512639,"line_start":357,"line_end":357,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":512644,"byte_end":512682,"line_start":358,"line_end":358,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":512687,"byte_end":512690,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ let t = NaiveTime::from_hms_nano(23, 56, 4, 12_345_678);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":512695,"byte_end":512755,"line_start":360,"line_end":360,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(t.hour(), 23);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":512760,"byte_end":512789,"line_start":361,"line_end":361,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(t.minute(), 56);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":512794,"byte_end":512825,"line_start":362,"line_end":362,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(t.second(), 4);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":512830,"byte_end":512860,"line_start":363,"line_end":363,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(t.nanosecond(), 12_345_678);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":512865,"byte_end":512908,"line_start":364,"line_end":364,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":512913,"byte_end":512920,"line_start":365,"line_end":365,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":512925,"byte_end":512934,"line_start":366,"line_end":366,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1537},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":514042,"byte_end":514059,"line_start":394,"line_end":394,"column_start":12,"column_end":29},"name":"from_hms_nano_opt","qualname":"<NaiveTime>::from_hms_nano_opt","value":"fn from_hms_nano_opt(u32, u32, u32, u32) -> Option<NaiveTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute, second and nanosecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from hour, minute, second and nanosecond.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":513110,"byte_end":513179,"line_start":371,"line_end":371,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":513184,"byte_end":513187,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ The nanosecond part can exceed 1,000,000,000","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":513192,"byte_end":513240,"line_start":373,"line_end":373,"column_start":5,"column_end":53}},{"value":"/ in order to represent the [leap second](#leap-second-handling).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":513245,"byte_end":513312,"line_start":374,"line_end":374,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":513317,"byte_end":513320,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute, second and/or nanosecond.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":513325,"byte_end":513394,"line_start":376,"line_end":376,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":513399,"byte_end":513402,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":513407,"byte_end":513420,"line_start":378,"line_end":378,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":513425,"byte_end":513428,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":513433,"byte_end":513440,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveTime;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":513445,"byte_end":513471,"line_start":381,"line_end":381,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":513476,"byte_end":513479,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ let from_hmsn_opt = NaiveTime::from_hms_nano_opt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":513484,"byte_end":513537,"line_start":383,"line_end":383,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":513542,"byte_end":513545,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ assert!(from_hmsn_opt(0, 0, 0, 0).is_some());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":513550,"byte_end":513599,"line_start":385,"line_end":385,"column_start":5,"column_end":54}},{"value":"/ assert!(from_hmsn_opt(23, 59, 59, 999_999_999).is_some());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":513604,"byte_end":513666,"line_start":386,"line_end":386,"column_start":5,"column_end":67}},{"value":"/ assert!(from_hmsn_opt(23, 59, 59, 1_999_999_999).is_some()); // a leap second after 23:59:59","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":513671,"byte_end":513767,"line_start":387,"line_end":387,"column_start":5,"column_end":101}},{"value":"/ assert!(from_hmsn_opt(24, 0, 0, 0).is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":513772,"byte_end":513822,"line_start":388,"line_end":388,"column_start":5,"column_end":55}},{"value":"/ assert!(from_hmsn_opt(23, 60, 0, 0).is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":513827,"byte_end":513878,"line_start":389,"line_end":389,"column_start":5,"column_end":56}},{"value":"/ assert!(from_hmsn_opt(23, 59, 60, 0).is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":513883,"byte_end":513935,"line_start":390,"line_end":390,"column_start":5,"column_end":57}},{"value":"/ assert!(from_hmsn_opt(23, 59, 59, 2_000_000_000).is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":513940,"byte_end":514004,"line_start":391,"line_end":391,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":514009,"byte_end":514016,"line_start":392,"line_end":392,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":514021,"byte_end":514030,"line_start":393,"line_end":393,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1538},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":514995,"byte_end":515025,"line_start":421,"line_end":421,"column_start":12,"column_end":42},"name":"from_num_seconds_from_midnight","qualname":"<NaiveTime>::from_num_seconds_from_midnight","value":"fn from_num_seconds_from_midnight(u32, u32) -> NaiveTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":514340,"byte_end":514425,"line_start":402,"line_end":402,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":514430,"byte_end":514433,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ The nanosecond part can exceed 1,000,000,000","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":514438,"byte_end":514486,"line_start":404,"line_end":404,"column_start":5,"column_end":53}},{"value":"/ in order to represent the [leap second](#leap-second-handling).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":514491,"byte_end":514558,"line_start":405,"line_end":405,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":514563,"byte_end":514566,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid number of seconds and/or nanosecond.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":514571,"byte_end":514629,"line_start":407,"line_end":407,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":514634,"byte_end":514637,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":514642,"byte_end":514655,"line_start":409,"line_end":409,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":514660,"byte_end":514663,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":514668,"byte_end":514675,"line_start":411,"line_end":411,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":514680,"byte_end":514718,"line_start":412,"line_end":412,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":514723,"byte_end":514726,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ let t = NaiveTime::from_num_seconds_from_midnight(86164, 12_345_678);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":514731,"byte_end":514804,"line_start":414,"line_end":414,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(t.hour(), 23);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":514809,"byte_end":514838,"line_start":415,"line_end":415,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(t.minute(), 56);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":514843,"byte_end":514874,"line_start":416,"line_end":416,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(t.second(), 4);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":514879,"byte_end":514909,"line_start":417,"line_end":417,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(t.nanosecond(), 12_345_678);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":514914,"byte_end":514957,"line_start":418,"line_end":418,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":514962,"byte_end":514969,"line_start":419,"line_end":419,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":514974,"byte_end":514983,"line_start":420,"line_end":420,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1539},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":515995,"byte_end":516029,"line_start":446,"line_end":446,"column_start":12,"column_end":46},"name":"from_num_seconds_from_midnight_opt","qualname":"<NaiveTime>::from_num_seconds_from_midnight_opt","value":"fn from_num_seconds_from_midnight_opt(u32, u32) -> Option<NaiveTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":515163,"byte_end":515248,"line_start":425,"line_end":425,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":515253,"byte_end":515256,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ The nanosecond part can exceed 1,000,000,000","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":515261,"byte_end":515309,"line_start":427,"line_end":427,"column_start":5,"column_end":53}},{"value":"/ in order to represent the [leap second](#leap-second-handling).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":515314,"byte_end":515381,"line_start":428,"line_end":428,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":515386,"byte_end":515389,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid number of seconds and/or nanosecond.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":515394,"byte_end":515460,"line_start":430,"line_end":430,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":515465,"byte_end":515468,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":515473,"byte_end":515486,"line_start":432,"line_end":432,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":515491,"byte_end":515494,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":515499,"byte_end":515506,"line_start":434,"line_end":434,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveTime;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":515511,"byte_end":515537,"line_start":435,"line_end":435,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":515542,"byte_end":515545,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ let from_nsecs_opt = NaiveTime::from_num_seconds_from_midnight_opt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":515550,"byte_end":515621,"line_start":437,"line_end":437,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":515626,"byte_end":515629,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ assert!(from_nsecs_opt(0, 0).is_some());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":515634,"byte_end":515678,"line_start":439,"line_end":439,"column_start":5,"column_end":49}},{"value":"/ assert!(from_nsecs_opt(86399, 999_999_999).is_some());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":515683,"byte_end":515741,"line_start":440,"line_end":440,"column_start":5,"column_end":63}},{"value":"/ assert!(from_nsecs_opt(86399, 1_999_999_999).is_some()); // a leap second after 23:59:59","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":515746,"byte_end":515838,"line_start":441,"line_end":441,"column_start":5,"column_end":97}},{"value":"/ assert!(from_nsecs_opt(86_400, 0).is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":515843,"byte_end":515892,"line_start":442,"line_end":442,"column_start":5,"column_end":54}},{"value":"/ assert!(from_nsecs_opt(86399, 2_000_000_000).is_none());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":515897,"byte_end":515957,"line_start":443,"line_end":443,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":515962,"byte_end":515969,"line_start":444,"line_end":444,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":515974,"byte_end":515983,"line_start":445,"line_end":445,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1540},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":518683,"byte_end":518697,"line_start":514,"line_end":514,"column_start":12,"column_end":26},"name":"parse_from_str","qualname":"<NaiveTime>::parse_from_str","value":"fn parse_from_str<'_, '_>(&'_ str, &'_ str) -> ParseResult<NaiveTime>","parent":null,"children":[],"decl_id":null,"docs":" Parses a string with the specified format string and returns a new `NaiveTime`.\n See the [`format::strftime` module](../format/strftime/index.html)\n on the supported escape sequences.","sig":null,"attributes":[{"value":"/ Parses a string with the specified format string and returns a new `NaiveTime`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":516219,"byte_end":516302,"line_start":453,"line_end":453,"column_start":5,"column_end":88}},{"value":"/ See the [`format::strftime` module](../format/strftime/index.html)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":516307,"byte_end":516377,"line_start":454,"line_end":454,"column_start":5,"column_end":75}},{"value":"/ on the supported escape sequences.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":516382,"byte_end":516420,"line_start":455,"line_end":455,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":516425,"byte_end":516428,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":516433,"byte_end":516446,"line_start":457,"line_end":457,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":516451,"byte_end":516454,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":516459,"byte_end":516466,"line_start":459,"line_end":459,"column_start":5,"column_end":12}},{"value":"/ use chrono::NaiveTime;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":516471,"byte_end":516497,"line_start":460,"line_end":460,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":516502,"byte_end":516505,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ let parse_from_str = NaiveTime::parse_from_str;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":516510,"byte_end":516561,"line_start":462,"line_end":462,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":516566,"byte_end":516569,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(parse_from_str(\"23:56:04\", \"%H:%M:%S\"),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":516574,"byte_end":516628,"line_start":464,"line_end":464,"column_start":5,"column_end":59}},{"value":"/            Ok(NaiveTime::from_hms(23, 56, 4)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":516633,"byte_end":516684,"line_start":465,"line_end":465,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(parse_from_str(\"pm012345.6789\", \"%p%I%M%S%.f\"),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":516689,"byte_end":516751,"line_start":466,"line_end":466,"column_start":5,"column_end":67}},{"value":"/            Ok(NaiveTime::from_hms_micro(13, 23, 45, 678_900)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":516756,"byte_end":516823,"line_start":467,"line_end":467,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":516828,"byte_end":516835,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":516840,"byte_end":516843,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ Date and offset is ignored for the purpose of parsing.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":516848,"byte_end":516906,"line_start":470,"line_end":470,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":516911,"byte_end":516914,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":516919,"byte_end":516926,"line_start":472,"line_end":472,"column_start":5,"column_end":12}},{"value":"/ # use chrono::NaiveTime;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":516931,"byte_end":516959,"line_start":473,"line_end":473,"column_start":5,"column_end":33}},{"value":"/ # let parse_from_str = NaiveTime::parse_from_str;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":516964,"byte_end":517017,"line_start":474,"line_end":474,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(parse_from_str(\"2014-5-17T12:34:56+09:30\", \"%Y-%m-%dT%H:%M:%S%z\"),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":517022,"byte_end":517103,"line_start":475,"line_end":475,"column_start":5,"column_end":86}},{"value":"/            Ok(NaiveTime::from_hms(12, 34, 56)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":517108,"byte_end":517160,"line_start":476,"line_end":476,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":517165,"byte_end":517172,"line_start":477,"line_end":477,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":517177,"byte_end":517180,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ [Leap seconds](#leap-second-handling) are correctly handled by","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":517185,"byte_end":517251,"line_start":479,"line_end":479,"column_start":5,"column_end":71}},{"value":"/ treating any time of the form `hh:mm:60` as a leap second.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":517256,"byte_end":517318,"line_start":480,"line_end":480,"column_start":5,"column_end":67}},{"value":"/ (This equally applies to the formatting, so the round trip is possible.)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":517323,"byte_end":517399,"line_start":481,"line_end":481,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":517404,"byte_end":517407,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":517412,"byte_end":517419,"line_start":483,"line_end":483,"column_start":5,"column_end":12}},{"value":"/ # use chrono::NaiveTime;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":517424,"byte_end":517452,"line_start":484,"line_end":484,"column_start":5,"column_end":33}},{"value":"/ # let parse_from_str = NaiveTime::parse_from_str;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":517457,"byte_end":517510,"line_start":485,"line_end":485,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(parse_from_str(\"08:59:60.123\", \"%H:%M:%S%.f\"),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":517515,"byte_end":517576,"line_start":486,"line_end":486,"column_start":5,"column_end":66}},{"value":"/            Ok(NaiveTime::from_hms_milli(8, 59, 59, 1_123)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":517581,"byte_end":517645,"line_start":487,"line_end":487,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":517650,"byte_end":517657,"line_start":488,"line_end":488,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":517662,"byte_end":517665,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ Missing seconds are assumed to be zero,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":517670,"byte_end":517713,"line_start":490,"line_end":490,"column_start":5,"column_end":48}},{"value":"/ but out-of-bound times or insufficient fields are errors otherwise.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":517718,"byte_end":517789,"line_start":491,"line_end":491,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":517794,"byte_end":517797,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":517802,"byte_end":517809,"line_start":493,"line_end":493,"column_start":5,"column_end":12}},{"value":"/ # use chrono::NaiveTime;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":517814,"byte_end":517842,"line_start":494,"line_end":494,"column_start":5,"column_end":33}},{"value":"/ # let parse_from_str = NaiveTime::parse_from_str;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":517847,"byte_end":517900,"line_start":495,"line_end":495,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(parse_from_str(\"7:15\", \"%H:%M\"),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":517905,"byte_end":517952,"line_start":496,"line_end":496,"column_start":5,"column_end":52}},{"value":"/            Ok(NaiveTime::from_hms(7, 15, 0)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":517957,"byte_end":518007,"line_start":497,"line_end":497,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":518012,"byte_end":518015,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ assert!(parse_from_str(\"04m33s\", \"%Mm%Ss\").is_err());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":518020,"byte_end":518077,"line_start":499,"line_end":499,"column_start":5,"column_end":62}},{"value":"/ assert!(parse_from_str(\"12\", \"%H\").is_err());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":518082,"byte_end":518131,"line_start":500,"line_end":500,"column_start":5,"column_end":54}},{"value":"/ assert!(parse_from_str(\"17:60\", \"%H:%M\").is_err());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":518136,"byte_end":518191,"line_start":501,"line_end":501,"column_start":5,"column_end":60}},{"value":"/ assert!(parse_from_str(\"24:00:00\", \"%H:%M:%S\").is_err());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":518196,"byte_end":518257,"line_start":502,"line_end":502,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":518262,"byte_end":518269,"line_start":503,"line_end":503,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":518274,"byte_end":518277,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ All parsed fields should be consistent to each other, otherwise it's an error.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":518282,"byte_end":518364,"line_start":505,"line_end":505,"column_start":5,"column_end":87}},{"value":"/ Here `%H` is for 24-hour clocks, unlike `%I`,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":518369,"byte_end":518418,"line_start":506,"line_end":506,"column_start":5,"column_end":54}},{"value":"/ and thus can be independently determined without AM/PM.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":518423,"byte_end":518482,"line_start":507,"line_end":507,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":518487,"byte_end":518490,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":518495,"byte_end":518502,"line_start":509,"line_end":509,"column_start":5,"column_end":12}},{"value":"/ # use chrono::NaiveTime;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":518507,"byte_end":518535,"line_start":510,"line_end":510,"column_start":5,"column_end":33}},{"value":"/ # let parse_from_str = NaiveTime::parse_from_str;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":518540,"byte_end":518593,"line_start":511,"line_end":511,"column_start":5,"column_end":58}},{"value":"/ assert!(parse_from_str(\"13:07 AM\", \"%H:%M %p\").is_err());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":518598,"byte_end":518659,"line_start":512,"line_end":512,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":518664,"byte_end":518671,"line_start":513,"line_end":513,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1541},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":519696,"byte_end":519718,"line_start":539,"line_end":539,"column_start":12,"column_end":34},"name":"overflowing_add_signed","qualname":"<NaiveTime>::overflowing_add_signed","value":"fn overflowing_add_signed<'_>(&'_ Self, OldDuration) -> (NaiveTime, i64)","parent":null,"children":[],"decl_id":null,"docs":" Adds given `Duration` to the current time,\n and also returns the number of *seconds*\n in the integral number of days ignored from the addition.\n (We cannot return `Duration` because it is subject to overflow or underflow.)","sig":null,"attributes":[{"value":"/ Adds given `Duration` to the current time,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":518885,"byte_end":518931,"line_start":520,"line_end":520,"column_start":5,"column_end":51}},{"value":"/ and also returns the number of *seconds*","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":518936,"byte_end":518980,"line_start":521,"line_end":521,"column_start":5,"column_end":49}},{"value":"/ in the integral number of days ignored from the addition.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":518985,"byte_end":519046,"line_start":522,"line_end":522,"column_start":5,"column_end":66}},{"value":"/ (We cannot return `Duration` because it is subject to overflow or underflow.)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":519051,"byte_end":519132,"line_start":523,"line_end":523,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":519137,"byte_end":519140,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":519145,"byte_end":519158,"line_start":525,"line_end":525,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":519163,"byte_end":519166,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":519171,"byte_end":519178,"line_start":527,"line_end":527,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Duration, NaiveTime};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":519183,"byte_end":519221,"line_start":528,"line_end":528,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":519226,"byte_end":519229,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ let from_hms = NaiveTime::from_hms;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":519234,"byte_end":519273,"line_start":530,"line_end":530,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":519278,"byte_end":519281,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from_hms(3, 4, 5).overflowing_add_signed(Duration::hours(11)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":519286,"byte_end":519363,"line_start":532,"line_end":532,"column_start":5,"column_end":82}},{"value":"/            (from_hms(14, 4, 5), 0));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":519368,"byte_end":519408,"line_start":533,"line_end":533,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(from_hms(3, 4, 5).overflowing_add_signed(Duration::hours(23)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":519413,"byte_end":519490,"line_start":534,"line_end":534,"column_start":5,"column_end":82}},{"value":"/            (from_hms(2, 4, 5), 86_400));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":519495,"byte_end":519539,"line_start":535,"line_end":535,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(from_hms(3, 4, 5).overflowing_add_signed(Duration::hours(-7)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":519544,"byte_end":519621,"line_start":536,"line_end":536,"column_start":5,"column_end":82}},{"value":"/            (from_hms(20, 4, 5), -86_400));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":519626,"byte_end":519672,"line_start":537,"line_end":537,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":519677,"byte_end":519684,"line_start":538,"line_end":538,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1542},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":523126,"byte_end":523148,"line_start":622,"line_end":622,"column_start":12,"column_end":34},"name":"overflowing_sub_signed","qualname":"<NaiveTime>::overflowing_sub_signed","value":"fn overflowing_sub_signed<'_>(&'_ Self, OldDuration) -> (NaiveTime, i64)","parent":null,"children":[],"decl_id":null,"docs":" Subtracts given `Duration` from the current time,\n and also returns the number of *seconds*\n in the integral number of days ignored from the subtraction.\n (We cannot return `Duration` because it is subject to overflow or underflow.)","sig":null,"attributes":[{"value":"/ Subtracts given `Duration` from the current time,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":522292,"byte_end":522345,"line_start":602,"line_end":602,"column_start":5,"column_end":58}},{"value":"/ and also returns the number of *seconds*","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":522350,"byte_end":522394,"line_start":603,"line_end":603,"column_start":5,"column_end":49}},{"value":"/ in the integral number of days ignored from the subtraction.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":522399,"byte_end":522463,"line_start":604,"line_end":604,"column_start":5,"column_end":69}},{"value":"/ (We cannot return `Duration` because it is subject to overflow or underflow.)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":522468,"byte_end":522549,"line_start":605,"line_end":605,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":522554,"byte_end":522557,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":522562,"byte_end":522575,"line_start":607,"line_end":607,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":522580,"byte_end":522583,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":522588,"byte_end":522595,"line_start":609,"line_end":609,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Duration, NaiveTime};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":522600,"byte_end":522638,"line_start":610,"line_end":610,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":522643,"byte_end":522646,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ let from_hms = NaiveTime::from_hms;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":522651,"byte_end":522690,"line_start":612,"line_end":612,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":522695,"byte_end":522698,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from_hms(3, 4, 5).overflowing_sub_signed(Duration::hours(2)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":522703,"byte_end":522779,"line_start":614,"line_end":614,"column_start":5,"column_end":81}},{"value":"/            (from_hms(1, 4, 5), 0));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":522784,"byte_end":522823,"line_start":615,"line_end":615,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(from_hms(3, 4, 5).overflowing_sub_signed(Duration::hours(17)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":522828,"byte_end":522905,"line_start":616,"line_end":616,"column_start":5,"column_end":82}},{"value":"/            (from_hms(10, 4, 5), 86_400));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":522910,"byte_end":522955,"line_start":617,"line_end":617,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(from_hms(3, 4, 5).overflowing_sub_signed(Duration::hours(-22)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":522960,"byte_end":523038,"line_start":618,"line_end":618,"column_start":5,"column_end":83}},{"value":"/            (from_hms(1, 4, 5), -86_400));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":523043,"byte_end":523088,"line_start":619,"line_end":619,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":523093,"byte_end":523100,"line_start":620,"line_end":620,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":523105,"byte_end":523114,"line_start":621,"line_end":621,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1543},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":526016,"byte_end":526037,"line_start":681,"line_end":681,"column_start":12,"column_end":33},"name":"signed_duration_since","qualname":"<NaiveTime>::signed_duration_since","value":"fn signed_duration_since(Self, NaiveTime) -> OldDuration","parent":null,"children":[],"decl_id":null,"docs":" Subtracts another `NaiveTime` from the current time.\n Returns a `Duration` within +/- 1 day.\n This does not overflow or underflow at all.","sig":null,"attributes":[{"value":"/ Subtracts another `NaiveTime` from the current time.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":523340,"byte_end":523396,"line_start":627,"line_end":627,"column_start":5,"column_end":61}},{"value":"/ Returns a `Duration` within +/- 1 day.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":523401,"byte_end":523443,"line_start":628,"line_end":628,"column_start":5,"column_end":47}},{"value":"/ This does not overflow or underflow at all.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":523448,"byte_end":523495,"line_start":629,"line_end":629,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":523500,"byte_end":523503,"line_start":630,"line_end":630,"column_start":5,"column_end":8}},{"value":"/ As a part of Chrono's [leap second handling](#leap-second-handling),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":523508,"byte_end":523580,"line_start":631,"line_end":631,"column_start":5,"column_end":77}},{"value":"/ the subtraction assumes that **there is no leap second ever**,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":523585,"byte_end":523651,"line_start":632,"line_end":632,"column_start":5,"column_end":71}},{"value":"/ except when any of the `NaiveTime`s themselves represents a leap second","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":523656,"byte_end":523731,"line_start":633,"line_end":633,"column_start":5,"column_end":80}},{"value":"/ in which case the assumption becomes that","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":523736,"byte_end":523781,"line_start":634,"line_end":634,"column_start":5,"column_end":50}},{"value":"/ **there are exactly one (or two) leap second(s) ever**.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":523786,"byte_end":523845,"line_start":635,"line_end":635,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":523850,"byte_end":523853,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":523858,"byte_end":523871,"line_start":637,"line_end":637,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":523876,"byte_end":523879,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":523884,"byte_end":523891,"line_start":639,"line_end":639,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Duration, NaiveTime};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":523896,"byte_end":523934,"line_start":640,"line_end":640,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":523939,"byte_end":523942,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ let from_hmsm = NaiveTime::from_hms_milli;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":523947,"byte_end":523993,"line_start":642,"line_end":642,"column_start":5,"column_end":51}},{"value":"/ let since = NaiveTime::signed_duration_since;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":523998,"byte_end":524047,"line_start":643,"line_end":643,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":524052,"byte_end":524055,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 5, 7, 900)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":524060,"byte_end":524131,"line_start":645,"line_end":645,"column_start":5,"column_end":76}},{"value":"/            Duration::zero());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":524136,"byte_end":524169,"line_start":646,"line_end":646,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 5, 7, 875)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":524174,"byte_end":524245,"line_start":647,"line_end":647,"column_start":5,"column_end":76}},{"value":"/            Duration::milliseconds(25));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":524250,"byte_end":524293,"line_start":648,"line_end":648,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 5, 6, 925)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":524298,"byte_end":524369,"line_start":649,"line_end":649,"column_start":5,"column_end":76}},{"value":"/            Duration::milliseconds(975));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":524374,"byte_end":524418,"line_start":650,"line_end":650,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 5, 0, 900)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":524423,"byte_end":524494,"line_start":651,"line_end":651,"column_start":5,"column_end":76}},{"value":"/            Duration::seconds(7));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":524499,"byte_end":524536,"line_start":652,"line_end":652,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 0, 7, 900)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":524541,"byte_end":524612,"line_start":653,"line_end":653,"column_start":5,"column_end":76}},{"value":"/            Duration::seconds(5 * 60));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":524617,"byte_end":524659,"line_start":654,"line_end":654,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(0, 5, 7, 900)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":524664,"byte_end":524735,"line_start":655,"line_end":655,"column_start":5,"column_end":76}},{"value":"/            Duration::seconds(3 * 3600));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":524740,"byte_end":524784,"line_start":656,"line_end":656,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(4, 5, 7, 900)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":524789,"byte_end":524860,"line_start":657,"line_end":657,"column_start":5,"column_end":76}},{"value":"/            Duration::seconds(-3600));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":524865,"byte_end":524906,"line_start":658,"line_end":658,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(2, 4, 6, 800)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":524911,"byte_end":524982,"line_start":659,"line_end":659,"column_start":5,"column_end":76}},{"value":"/            Duration::seconds(3600 + 60 + 1) + Duration::milliseconds(100));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":524987,"byte_end":525066,"line_start":660,"line_end":660,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":525071,"byte_end":525078,"line_start":661,"line_end":661,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":525083,"byte_end":525086,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ Leap seconds are handled, but the subtraction assumes that","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":525091,"byte_end":525153,"line_start":663,"line_end":663,"column_start":5,"column_end":67}},{"value":"/ there were no other leap seconds happened.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":525158,"byte_end":525204,"line_start":664,"line_end":664,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":525209,"byte_end":525212,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":525217,"byte_end":525224,"line_start":666,"line_end":666,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{Duration, NaiveTime};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":525229,"byte_end":525269,"line_start":667,"line_end":667,"column_start":5,"column_end":45}},{"value":"/ # let from_hmsm = NaiveTime::from_hms_milli;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":525274,"byte_end":525322,"line_start":668,"line_end":668,"column_start":5,"column_end":53}},{"value":"/ # let since = NaiveTime::signed_duration_since;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":525327,"byte_end":525378,"line_start":669,"line_end":669,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(since(from_hmsm(3, 0, 59, 1_000), from_hmsm(3, 0, 59, 0)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":525383,"byte_end":525456,"line_start":670,"line_end":670,"column_start":5,"column_end":78}},{"value":"/            Duration::seconds(1));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":525461,"byte_end":525498,"line_start":671,"line_end":671,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(since(from_hmsm(3, 0, 59, 1_500), from_hmsm(3, 0, 59, 0)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":525503,"byte_end":525576,"line_start":672,"line_end":672,"column_start":5,"column_end":78}},{"value":"/            Duration::milliseconds(1500));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":525581,"byte_end":525626,"line_start":673,"line_end":673,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(since(from_hmsm(3, 0, 59, 1_000), from_hmsm(3, 0, 0, 0)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":525631,"byte_end":525703,"line_start":674,"line_end":674,"column_start":5,"column_end":77}},{"value":"/            Duration::seconds(60));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":525708,"byte_end":525746,"line_start":675,"line_end":675,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(since(from_hmsm(3, 0, 0, 0), from_hmsm(2, 59, 59, 1_000)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":525751,"byte_end":525824,"line_start":676,"line_end":676,"column_start":5,"column_end":78}},{"value":"/            Duration::seconds(1));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":525829,"byte_end":525866,"line_start":677,"line_end":677,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(since(from_hmsm(3, 0, 59, 1_000), from_hmsm(2, 59, 59, 1_000)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":525871,"byte_end":525949,"line_start":678,"line_end":678,"column_start":5,"column_end":83}},{"value":"/            Duration::seconds(61));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":525954,"byte_end":525992,"line_start":679,"line_end":679,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":525997,"byte_end":526004,"line_start":680,"line_end":680,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1551},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":531401,"byte_end":531405,"line_start":819,"line_end":819,"column_start":8,"column_end":12},"name":"hour","qualname":"<NaiveTime as traits::Timelike>::hour","value":"fn hour<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":2005},"children":[],"decl_id":{"krate":0,"index":2006},"docs":" Returns the hour number from 0 to 23.","sig":null,"attributes":[{"value":"/ Returns the hour number from 0 to 23.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":531089,"byte_end":531130,"line_start":808,"line_end":808,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":531135,"byte_end":531138,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":531143,"byte_end":531156,"line_start":810,"line_end":810,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":531161,"byte_end":531164,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":531169,"byte_end":531176,"line_start":812,"line_end":812,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":531181,"byte_end":531219,"line_start":813,"line_end":813,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":531224,"byte_end":531227,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveTime::from_hms(0, 0, 0).hour(), 0);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":531232,"byte_end":531287,"line_start":815,"line_end":815,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(NaiveTime::from_hms_nano(23, 56, 4, 12_345_678).hour(), 23);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":531292,"byte_end":531367,"line_start":816,"line_end":816,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":531372,"byte_end":531379,"line_start":817,"line_end":817,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":531384,"byte_end":531393,"line_start":818,"line_end":818,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1552},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":531772,"byte_end":531778,"line_start":834,"line_end":834,"column_start":8,"column_end":14},"name":"minute","qualname":"<NaiveTime as traits::Timelike>::minute","value":"fn minute<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":2005},"children":[],"decl_id":{"krate":0,"index":2008},"docs":" Returns the minute number from 0 to 59.","sig":null,"attributes":[{"value":"/ Returns the minute number from 0 to 59.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":531454,"byte_end":531497,"line_start":823,"line_end":823,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":531502,"byte_end":531505,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":531510,"byte_end":531523,"line_start":825,"line_end":825,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":531528,"byte_end":531531,"line_start":826,"line_end":826,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":531536,"byte_end":531543,"line_start":827,"line_end":827,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":531548,"byte_end":531586,"line_start":828,"line_end":828,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":531591,"byte_end":531594,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveTime::from_hms(0, 0, 0).minute(), 0);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":531599,"byte_end":531656,"line_start":830,"line_end":830,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(NaiveTime::from_hms_nano(23, 56, 4, 12_345_678).minute(), 56);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":531661,"byte_end":531738,"line_start":831,"line_end":831,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":531743,"byte_end":531750,"line_start":832,"line_end":832,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":531755,"byte_end":531764,"line_start":833,"line_end":833,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1553},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":532609,"byte_end":532615,"line_start":860,"line_end":860,"column_start":8,"column_end":14},"name":"second","qualname":"<NaiveTime as traits::Timelike>::second","value":"fn second<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":2005},"children":[],"decl_id":{"krate":0,"index":2009},"docs":" Returns the second number from 0 to 59.","sig":null,"attributes":[{"value":"/ Returns the second number from 0 to 59.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":531827,"byte_end":531870,"line_start":838,"line_end":838,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":531875,"byte_end":531878,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":531883,"byte_end":531896,"line_start":840,"line_end":840,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":531901,"byte_end":531904,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":531909,"byte_end":531916,"line_start":842,"line_end":842,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":531921,"byte_end":531959,"line_start":843,"line_end":843,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":531964,"byte_end":531967,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveTime::from_hms(0, 0, 0).second(), 0);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":531972,"byte_end":532029,"line_start":845,"line_end":845,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(NaiveTime::from_hms_nano(23, 56, 4, 12_345_678).second(), 4);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":532034,"byte_end":532110,"line_start":846,"line_end":846,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":532115,"byte_end":532122,"line_start":847,"line_end":847,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":532127,"byte_end":532130,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ This method never returns 60 even when it is a leap second.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":532135,"byte_end":532198,"line_start":849,"line_end":849,"column_start":5,"column_end":68}},{"value":"/ ([Why?](#leap-second-handling))","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":532203,"byte_end":532238,"line_start":850,"line_end":850,"column_start":5,"column_end":40}},{"value":"/ Use the proper [formatting method](#method.format) to get a human-readable representation.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":532243,"byte_end":532337,"line_start":851,"line_end":851,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":532342,"byte_end":532345,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":532350,"byte_end":532357,"line_start":853,"line_end":853,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":532362,"byte_end":532402,"line_start":854,"line_end":854,"column_start":5,"column_end":45}},{"value":"/ let leap = NaiveTime::from_hms_milli(23, 59, 59, 1_000);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":532407,"byte_end":532467,"line_start":855,"line_end":855,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(leap.second(), 59);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":532472,"byte_end":532506,"line_start":856,"line_end":856,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(leap.format(\"%H:%M:%S\").to_string(), \"23:59:60\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":532511,"byte_end":532575,"line_start":857,"line_end":857,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":532580,"byte_end":532587,"line_start":858,"line_end":858,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":532592,"byte_end":532601,"line_start":859,"line_end":859,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1554},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":533672,"byte_end":533682,"line_start":888,"line_end":888,"column_start":8,"column_end":18},"name":"nanosecond","qualname":"<NaiveTime as traits::Timelike>::nanosecond","value":"fn nanosecond<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":2005},"children":[],"decl_id":{"krate":0,"index":2010},"docs":" Returns the number of nanoseconds since the whole non-leap second.\n The range from 1,000,000,000 to 1,999,999,999 represents\n the [leap second](#leap-second-handling).","sig":null,"attributes":[{"value":"/ Returns the number of nanoseconds since the whole non-leap second.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":532664,"byte_end":532734,"line_start":864,"line_end":864,"column_start":5,"column_end":75}},{"value":"/ The range from 1,000,000,000 to 1,999,999,999 represents","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":532739,"byte_end":532799,"line_start":865,"line_end":865,"column_start":5,"column_end":65}},{"value":"/ the [leap second](#leap-second-handling).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":532804,"byte_end":532849,"line_start":866,"line_end":866,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":532854,"byte_end":532857,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":532862,"byte_end":532875,"line_start":868,"line_end":868,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":532880,"byte_end":532883,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":532888,"byte_end":532895,"line_start":870,"line_end":870,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":532900,"byte_end":532938,"line_start":871,"line_end":871,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":532943,"byte_end":532946,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveTime::from_hms(0, 0, 0).nanosecond(), 0);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":532951,"byte_end":533012,"line_start":873,"line_end":873,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(NaiveTime::from_hms_nano(23, 56, 4, 12_345_678).nanosecond(), 12_345_678);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":533017,"byte_end":533106,"line_start":874,"line_end":874,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":533111,"byte_end":533118,"line_start":875,"line_end":875,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":533123,"byte_end":533126,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ Leap seconds may have seemingly out-of-range return values.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":533131,"byte_end":533194,"line_start":877,"line_end":877,"column_start":5,"column_end":68}},{"value":"/ You can reduce the range with `time.nanosecond() % 1_000_000_000`, or","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":533199,"byte_end":533272,"line_start":878,"line_end":878,"column_start":5,"column_end":78}},{"value":"/ use the proper [formatting method](#method.format) to get a human-readable representation.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":533277,"byte_end":533371,"line_start":879,"line_end":879,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":533376,"byte_end":533379,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":533384,"byte_end":533391,"line_start":881,"line_end":881,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":533396,"byte_end":533436,"line_start":882,"line_end":882,"column_start":5,"column_end":45}},{"value":"/ let leap = NaiveTime::from_hms_milli(23, 59, 59, 1_000);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":533441,"byte_end":533501,"line_start":883,"line_end":883,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(leap.nanosecond(), 1_000_000_000);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":533506,"byte_end":533555,"line_start":884,"line_end":884,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(leap.format(\"%H:%M:%S%.9f\").to_string(), \"23:59:60.000000000\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":533560,"byte_end":533638,"line_start":885,"line_end":885,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":533643,"byte_end":533650,"line_start":886,"line_end":886,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":533655,"byte_end":533664,"line_start":887,"line_end":887,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1555},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":534197,"byte_end":534206,"line_start":906,"line_end":906,"column_start":8,"column_end":17},"name":"with_hour","qualname":"<NaiveTime as traits::Timelike>::with_hour","value":"fn with_hour<'_>(&'_ Self, u32) -> Option<NaiveTime>","parent":{"krate":0,"index":2005},"children":[],"decl_id":{"krate":0,"index":2011},"docs":" Makes a new `NaiveTime` with the hour number changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` with the hour number changed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":533728,"byte_end":533785,"line_start":892,"line_end":892,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":533790,"byte_end":533793,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveTime` would be invalid.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":533798,"byte_end":533865,"line_start":894,"line_end":894,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":533870,"byte_end":533873,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":533878,"byte_end":533891,"line_start":896,"line_end":896,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":533896,"byte_end":533899,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":533904,"byte_end":533911,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":533916,"byte_end":533954,"line_start":899,"line_end":899,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":533959,"byte_end":533962,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveTime::from_hms_nano(23, 56, 4, 12_345_678);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":533967,"byte_end":534028,"line_start":901,"line_end":901,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(dt.with_hour(7), Some(NaiveTime::from_hms_nano(7, 56, 4, 12_345_678)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":534033,"byte_end":534119,"line_start":902,"line_end":902,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(dt.with_hour(24), None);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":534124,"byte_end":534163,"line_start":903,"line_end":903,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":534168,"byte_end":534175,"line_start":904,"line_end":904,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":534180,"byte_end":534189,"line_start":905,"line_end":905,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1556},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":534888,"byte_end":534899,"line_start":928,"line_end":928,"column_start":8,"column_end":19},"name":"with_minute","qualname":"<NaiveTime as traits::Timelike>::with_minute","value":"fn with_minute<'_>(&'_ Self, u32) -> Option<NaiveTime>","parent":{"krate":0,"index":2005},"children":[],"decl_id":{"krate":0,"index":2012},"docs":" Makes a new `NaiveTime` with the minute number changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` with the minute number changed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":534411,"byte_end":534470,"line_start":914,"line_end":914,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":534475,"byte_end":534478,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveTime` would be invalid.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":534483,"byte_end":534550,"line_start":916,"line_end":916,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":534555,"byte_end":534558,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":534563,"byte_end":534576,"line_start":918,"line_end":918,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":534581,"byte_end":534584,"line_start":919,"line_end":919,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":534589,"byte_end":534596,"line_start":920,"line_end":920,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":534601,"byte_end":534639,"line_start":921,"line_end":921,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":534644,"byte_end":534647,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveTime::from_hms_nano(23, 56, 4, 12_345_678);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":534652,"byte_end":534713,"line_start":923,"line_end":923,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(dt.with_minute(45), Some(NaiveTime::from_hms_nano(23, 45, 4, 12_345_678)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":534718,"byte_end":534808,"line_start":924,"line_end":924,"column_start":5,"column_end":95}},{"value":"/ assert_eq!(dt.with_minute(60), None);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":534813,"byte_end":534854,"line_start":925,"line_end":925,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":534859,"byte_end":534866,"line_start":926,"line_end":926,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":534871,"byte_end":534880,"line_start":927,"line_end":927,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1557},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":535711,"byte_end":535722,"line_start":952,"line_end":952,"column_start":8,"column_end":19},"name":"with_second","qualname":"<NaiveTime as traits::Timelike>::with_second","value":"fn with_second<'_>(&'_ Self, u32) -> Option<NaiveTime>","parent":{"krate":0,"index":2005},"children":[],"decl_id":{"krate":0,"index":2013},"docs":" Makes a new `NaiveTime` with the second number changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` with the second number changed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":535123,"byte_end":535182,"line_start":936,"line_end":936,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":535187,"byte_end":535190,"line_start":937,"line_end":937,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveTime` would be invalid.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":535195,"byte_end":535262,"line_start":938,"line_end":938,"column_start":5,"column_end":72}},{"value":"/ As with the [`second`](#method.second) method,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":535267,"byte_end":535317,"line_start":939,"line_end":939,"column_start":5,"column_end":55}},{"value":"/ the input range is restricted to 0 through 59.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":535322,"byte_end":535372,"line_start":940,"line_end":940,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":535377,"byte_end":535380,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":535385,"byte_end":535398,"line_start":942,"line_end":942,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":535403,"byte_end":535406,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":535411,"byte_end":535418,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":535423,"byte_end":535461,"line_start":945,"line_end":945,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":535466,"byte_end":535469,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveTime::from_hms_nano(23, 56, 4, 12_345_678);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":535474,"byte_end":535535,"line_start":947,"line_end":947,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(dt.with_second(17), Some(NaiveTime::from_hms_nano(23, 56, 17, 12_345_678)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":535540,"byte_end":535631,"line_start":948,"line_end":948,"column_start":5,"column_end":96}},{"value":"/ assert_eq!(dt.with_second(60), None);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":535636,"byte_end":535677,"line_start":949,"line_end":949,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":535682,"byte_end":535689,"line_start":950,"line_end":950,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":535694,"byte_end":535703,"line_start":951,"line_end":951,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1558},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":537165,"byte_end":537180,"line_start":989,"line_end":989,"column_start":8,"column_end":23},"name":"with_nanosecond","qualname":"<NaiveTime as traits::Timelike>::with_nanosecond","value":"fn with_nanosecond<'_>(&'_ Self, u32) -> Option<NaiveTime>","parent":{"krate":0,"index":2005},"children":[],"decl_id":{"krate":0,"index":2014},"docs":" Makes a new `NaiveTime` with nanoseconds since the whole non-leap second changed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` with nanoseconds since the whole non-leap second changed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":535920,"byte_end":536005,"line_start":960,"line_end":960,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":536010,"byte_end":536013,"line_start":961,"line_end":961,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting `NaiveTime` would be invalid.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":536018,"byte_end":536085,"line_start":962,"line_end":962,"column_start":5,"column_end":72}},{"value":"/ As with the [`nanosecond`](#method.nanosecond) method,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":536090,"byte_end":536148,"line_start":963,"line_end":963,"column_start":5,"column_end":63}},{"value":"/ the input range can exceed 1,000,000,000 for leap seconds.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":536153,"byte_end":536215,"line_start":964,"line_end":964,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":536220,"byte_end":536223,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":536228,"byte_end":536241,"line_start":966,"line_end":966,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":536246,"byte_end":536249,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":536254,"byte_end":536261,"line_start":968,"line_end":968,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":536266,"byte_end":536304,"line_start":969,"line_end":969,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":536309,"byte_end":536312,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveTime::from_hms_nano(23, 56, 4, 12_345_678);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":536317,"byte_end":536378,"line_start":971,"line_end":971,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(dt.with_nanosecond(333_333_333),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":536383,"byte_end":536430,"line_start":972,"line_end":972,"column_start":5,"column_end":52}},{"value":"/            Some(NaiveTime::from_hms_nano(23, 56, 4, 333_333_333)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":536435,"byte_end":536506,"line_start":973,"line_end":973,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(dt.with_nanosecond(2_000_000_000), None);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":536511,"byte_end":536567,"line_start":974,"line_end":974,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":536572,"byte_end":536579,"line_start":975,"line_end":975,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":536584,"byte_end":536587,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ Leap seconds can theoretically follow *any* whole second.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":536592,"byte_end":536653,"line_start":977,"line_end":977,"column_start":5,"column_end":66}},{"value":"/ The following would be a proper leap second at the time zone offset of UTC-00:03:57","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":536658,"byte_end":536745,"line_start":978,"line_end":978,"column_start":5,"column_end":92}},{"value":"/ (there are several historical examples comparable to this \"non-sense\" offset),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":536750,"byte_end":536832,"line_start":979,"line_end":979,"column_start":5,"column_end":87}},{"value":"/ and therefore is allowed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":536837,"byte_end":536866,"line_start":980,"line_end":980,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":536871,"byte_end":536874,"line_start":981,"line_end":981,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":536879,"byte_end":536886,"line_start":982,"line_end":982,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":536891,"byte_end":536931,"line_start":983,"line_end":983,"column_start":5,"column_end":45}},{"value":"/ # let dt = NaiveTime::from_hms_nano(23, 56, 4, 12_345_678);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":536936,"byte_end":536999,"line_start":984,"line_end":984,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(dt.with_nanosecond(1_333_333_333),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":537004,"byte_end":537053,"line_start":985,"line_end":985,"column_start":5,"column_end":54}},{"value":"/            Some(NaiveTime::from_hms_nano(23, 56, 4, 1_333_333_333)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":537058,"byte_end":537131,"line_start":986,"line_end":986,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":537136,"byte_end":537143,"line_start":987,"line_end":987,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":537148,"byte_end":537157,"line_start":988,"line_end":988,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1559},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":537894,"byte_end":537919,"line_start":1011,"line_end":1011,"column_start":8,"column_end":33},"name":"num_seconds_from_midnight","qualname":"<NaiveTime as traits::Timelike>::num_seconds_from_midnight","value":"fn num_seconds_from_midnight<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":2005},"children":[],"decl_id":{"krate":0,"index":2015},"docs":" Returns the number of non-leap seconds past the last midnight.","sig":null,"attributes":[{"value":"/ Returns the number of non-leap seconds past the last midnight.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":537351,"byte_end":537417,"line_start":996,"line_end":996,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":537422,"byte_end":537425,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":537430,"byte_end":537443,"line_start":998,"line_end":998,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":537448,"byte_end":537451,"line_start":999,"line_end":999,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":537456,"byte_end":537463,"line_start":1000,"line_end":1000,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":537468,"byte_end":537506,"line_start":1001,"line_end":1001,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":537511,"byte_end":537514,"line_start":1002,"line_end":1002,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveTime::from_hms(1, 2, 3).num_seconds_from_midnight(),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":537519,"byte_end":537591,"line_start":1003,"line_end":1003,"column_start":5,"column_end":77}},{"value":"/            3723);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":537596,"byte_end":537617,"line_start":1004,"line_end":1004,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(NaiveTime::from_hms_nano(23, 56, 4, 12_345_678).num_seconds_from_midnight(),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":537622,"byte_end":537713,"line_start":1005,"line_end":1005,"column_start":5,"column_end":96}},{"value":"/            86164);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":537718,"byte_end":537740,"line_start":1006,"line_end":1006,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(NaiveTime::from_hms_milli(23, 59, 59, 1_000).num_seconds_from_midnight(),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":537745,"byte_end":537833,"line_start":1007,"line_end":1007,"column_start":5,"column_end":93}},{"value":"/            86399);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":537838,"byte_end":537860,"line_start":1008,"line_end":1008,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":537865,"byte_end":537872,"line_start":1009,"line_end":1009,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":537877,"byte_end":537886,"line_start":1010,"line_end":1010,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1562},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":540696,"byte_end":540699,"line_start":1069,"line_end":1069,"column_start":8,"column_end":11},"name":"add","qualname":"<NaiveTime as core::ops::Add>::add","value":"fn add(Self, OldDuration) -> NaiveTime","parent":{"krate":1,"index":3331},"children":[],"decl_id":{"krate":1,"index":3334},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":540679,"byte_end":540688,"line_start":1068,"line_end":1068,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1564},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":540856,"byte_end":540866,"line_start":1076,"line_end":1076,"column_start":8,"column_end":18},"name":"add_assign","qualname":"<NaiveTime as core::ops::AddAssign>::add_assign","value":"fn add_assign<'_>(&'_ mut Self, OldDuration)","parent":{"krate":1,"index":3362},"children":[],"decl_id":{"krate":1,"index":3364},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":540839,"byte_end":540848,"line_start":1075,"line_end":1075,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1567},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":543254,"byte_end":543257,"line_start":1130,"line_end":1130,"column_start":8,"column_end":11},"name":"sub","qualname":"<NaiveTime as core::ops::Sub>::sub","value":"fn sub(Self, OldDuration) -> NaiveTime","parent":{"krate":1,"index":3336},"children":[],"decl_id":{"krate":1,"index":3339},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":543237,"byte_end":543246,"line_start":1129,"line_end":1129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1569},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":543414,"byte_end":543424,"line_start":1137,"line_end":1137,"column_start":8,"column_end":18},"name":"sub_assign","qualname":"<NaiveTime as core::ops::SubAssign>::sub_assign","value":"fn sub_assign<'_>(&'_ mut Self, OldDuration)","parent":{"krate":1,"index":3366},"children":[],"decl_id":{"krate":1,"index":3368},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":543397,"byte_end":543406,"line_start":1136,"line_end":1136,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1572},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":545828,"byte_end":545831,"line_start":1191,"line_end":1191,"column_start":8,"column_end":11},"name":"sub","qualname":"<NaiveTime as core::ops::Sub>::sub","value":"fn sub(Self, NaiveTime) -> OldDuration","parent":{"krate":1,"index":3336},"children":[],"decl_id":{"krate":1,"index":3339},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":545811,"byte_end":545820,"line_start":1190,"line_end":1190,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1574},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":547175,"byte_end":547178,"line_start":1225,"line_end":1225,"column_start":8,"column_end":11},"name":"fmt","qualname":"<NaiveTime as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10288},"children":[],"decl_id":{"krate":1,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1576},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":549033,"byte_end":549036,"line_start":1275,"line_end":1275,"column_start":8,"column_end":11},"name":"fmt","qualname":"<NaiveTime as core::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1579},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":549840,"byte_end":549848,"line_start":1302,"line_end":1302,"column_start":8,"column_end":16},"name":"from_str","qualname":"<NaiveTime as core::str::FromStr>::from_str","value":"fn from_str<'_>(&'_ str) -> ParseResult<NaiveTime>","parent":{"krate":1,"index":12989},"children":[],"decl_id":{"krate":1,"index":12991},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1582},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":550708,"byte_end":550715,"line_start":1332,"line_end":1332,"column_start":8,"column_end":15},"name":"default","qualname":"<NaiveTime as core::default::Default>::default","value":"fn default() -> Self","parent":{"krate":1,"index":3241},"children":[],"decl_id":{"krate":1,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1628},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"offset","qualname":"::offset","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","parent":null,"children":[{"krate":0,"index":1629},{"krate":0,"index":1632},{"krate":0,"index":1633},{"krate":0,"index":1636},{"krate":0,"index":1639},{"krate":0,"index":1642},{"krate":0,"index":1645},{"krate":0,"index":1646},{"krate":0,"index":1649},{"krate":0,"index":1652},{"krate":0,"index":1655},{"krate":0,"index":1658},{"krate":0,"index":1659},{"krate":0,"index":1662},{"krate":0,"index":1665},{"krate":0,"index":1750},{"krate":0,"index":1753},{"krate":0,"index":1790},{"krate":0,"index":1791},{"krate":0,"index":2579},{"krate":0,"index":2590},{"krate":0,"index":2593},{"krate":0,"index":2595},{"krate":0,"index":2599},{"krate":0,"index":2602},{"krate":0,"index":2604},{"krate":0,"index":2606},{"krate":0,"index":2609},{"krate":0,"index":1793},{"krate":0,"index":1801},{"krate":0,"index":1808},{"krate":0,"index":1811},{"krate":0,"index":1813}],"decl_id":null,"docs":" The time zone, which calculates offsets from the local time to UTC.","sig":null,"attributes":[{"value":"/ The time zone, which calculates offsets from the local time to UTC.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":554078,"byte_end":554149,"line_start":4,"line_end":4,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":554150,"byte_end":554153,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ There are four operations provided by the `TimeZone` trait:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":554154,"byte_end":554217,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":554218,"byte_end":554221,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ 1. Converting the local `NaiveDateTime` to `DateTime<Tz>`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":554222,"byte_end":554283,"line_start":8,"line_end":8,"column_start":1,"column_end":62}},{"value":"/ 2. Converting the UTC `NaiveDateTime` to `DateTime<Tz>`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":554284,"byte_end":554343,"line_start":9,"line_end":9,"column_start":1,"column_end":60}},{"value":"/ 3. Converting `DateTime<Tz>` to the local `NaiveDateTime`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":554344,"byte_end":554405,"line_start":10,"line_end":10,"column_start":1,"column_end":62}},{"value":"/ 4. Constructing `DateTime<Tz>` objects from various offsets","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":554406,"byte_end":554469,"line_start":11,"line_end":11,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":554470,"byte_end":554473,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ 1 is used for constructors. 2 is used for the `with_timezone` method of date and time types.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":554474,"byte_end":554570,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ 3 is used for other methods, e.g. `year()` or `format()`, and provided by an associated type","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":554571,"byte_end":554667,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"/ which implements `Offset` (which then passed to `TimeZone` for actual implementations).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":554668,"byte_end":554759,"line_start":15,"line_end":15,"column_start":1,"column_end":92}},{"value":"/ Technically speaking `TimeZone` has a total knowledge about given timescale,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":554760,"byte_end":554840,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ but `Offset` is used as a cache to avoid the repeated conversion","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":554841,"byte_end":554909,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/ and provides implementations for 1 and 3.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":554910,"byte_end":554955,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"/ An `TimeZone` instance can be reconstructed from the corresponding `Offset` instance.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":554956,"byte_end":555045,"line_start":19,"line_end":19,"column_start":1,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":2553},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":575869,"byte_end":575880,"line_start":27,"line_end":27,"column_start":12,"column_end":23},"name":"FixedOffset","qualname":"::offset::fixed::FixedOffset","value":"FixedOffset {  }","parent":null,"children":[{"krate":0,"index":2554}],"decl_id":null,"docs":" The time zone with fixed offset, from UTC-23:59:59 to UTC+23:59:59.","sig":null,"attributes":[{"value":"/ The time zone with fixed offset, from UTC-23:59:59 to UTC+23:59:59.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":575422,"byte_end":575493,"line_start":19,"line_end":19,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":575494,"byte_end":575497,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Using the [`TimeZone`](./trait.TimeZone.html) methods","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":575498,"byte_end":575555,"line_start":21,"line_end":21,"column_start":1,"column_end":58}},{"value":"/ on a `FixedOffset` struct is the preferred way to construct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":575556,"byte_end":575619,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ `DateTime<FixedOffset>` instances. See the [`east`](#method.east) and","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":575620,"byte_end":575693,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/ [`west`](#method.west) methods for examples.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":575694,"byte_end":575742,"line_start":24,"line_end":24,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1709},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":576482,"byte_end":576486,"line_start":46,"line_end":46,"column_start":12,"column_end":16},"name":"east","qualname":"<FixedOffset>::east","value":"fn east(i32) -> FixedOffset","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference.\n The negative `secs` means the Western Hemisphere.","sig":null,"attributes":[{"value":"/ Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":575935,"byte_end":576023,"line_start":32,"line_end":32,"column_start":5,"column_end":93}},{"value":"/ The negative `secs` means the Western Hemisphere.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":576028,"byte_end":576081,"line_start":33,"line_end":33,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":576086,"byte_end":576089,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-bound `secs`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":576094,"byte_end":576132,"line_start":35,"line_end":35,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":576137,"byte_end":576140,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":576145,"byte_end":576158,"line_start":37,"line_end":37,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":576163,"byte_end":576166,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":576171,"byte_end":576178,"line_start":39,"line_end":39,"column_start":5,"column_end":12}},{"value":"/ use chrono::{FixedOffset, TimeZone};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":576183,"byte_end":576223,"line_start":40,"line_end":40,"column_start":5,"column_end":45}},{"value":"/ let hour = 3600;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":576228,"byte_end":576248,"line_start":41,"line_end":41,"column_start":5,"column_end":25}},{"value":"/ let datetime = FixedOffset::east(5 * hour).ymd(2016, 11, 08)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":576253,"byte_end":576317,"line_start":42,"line_end":42,"column_start":5,"column_end":69}},{"value":"/                                           .and_hms(0, 0, 0);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":576322,"byte_end":576386,"line_start":43,"line_end":43,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(&datetime.to_rfc3339(), \"2016-11-08T00:00:00+05:00\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":576391,"byte_end":576458,"line_start":44,"line_end":44,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":576463,"byte_end":576470,"line_start":45,"line_end":45,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1710},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":576821,"byte_end":576829,"line_start":54,"line_end":54,"column_start":12,"column_end":20},"name":"east_opt","qualname":"<FixedOffset>::east_opt","value":"fn east_opt(i32) -> Option<FixedOffset>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference.\n The negative `secs` means the Western Hemisphere.","sig":null,"attributes":[{"value":"/ Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":576604,"byte_end":576692,"line_start":50,"line_end":50,"column_start":5,"column_end":93}},{"value":"/ The negative `secs` means the Western Hemisphere.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":576697,"byte_end":576750,"line_start":51,"line_end":51,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":576755,"byte_end":576758,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on the out-of-bound `secs`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":576763,"byte_end":576809,"line_start":53,"line_end":53,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1711},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":577569,"byte_end":577573,"line_start":76,"line_end":76,"column_start":12,"column_end":16},"name":"west","qualname":"<FixedOffset>::west","value":"fn west(i32) -> FixedOffset","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference.\n The negative `secs` means the Eastern Hemisphere.","sig":null,"attributes":[{"value":"/ Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":577022,"byte_end":577110,"line_start":62,"line_end":62,"column_start":5,"column_end":93}},{"value":"/ The negative `secs` means the Eastern Hemisphere.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":577115,"byte_end":577168,"line_start":63,"line_end":63,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":577173,"byte_end":577176,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-bound `secs`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":577181,"byte_end":577219,"line_start":65,"line_end":65,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":577224,"byte_end":577227,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":577232,"byte_end":577245,"line_start":67,"line_end":67,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":577250,"byte_end":577253,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":577258,"byte_end":577265,"line_start":69,"line_end":69,"column_start":5,"column_end":12}},{"value":"/ use chrono::{FixedOffset, TimeZone};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":577270,"byte_end":577310,"line_start":70,"line_end":70,"column_start":5,"column_end":45}},{"value":"/ let hour = 3600;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":577315,"byte_end":577335,"line_start":71,"line_end":71,"column_start":5,"column_end":25}},{"value":"/ let datetime = FixedOffset::west(5 * hour).ymd(2016, 11, 08)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":577340,"byte_end":577404,"line_start":72,"line_end":72,"column_start":5,"column_end":69}},{"value":"/                                           .and_hms(0, 0, 0);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":577409,"byte_end":577473,"line_start":73,"line_end":73,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(&datetime.to_rfc3339(), \"2016-11-08T00:00:00-05:00\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":577478,"byte_end":577545,"line_start":74,"line_end":74,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":577550,"byte_end":577557,"line_start":75,"line_end":75,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1712},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":577908,"byte_end":577916,"line_start":84,"line_end":84,"column_start":12,"column_end":20},"name":"west_opt","qualname":"<FixedOffset>::west_opt","value":"fn west_opt(i32) -> Option<FixedOffset>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference.\n The negative `secs` means the Eastern Hemisphere.","sig":null,"attributes":[{"value":"/ Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":577691,"byte_end":577779,"line_start":80,"line_end":80,"column_start":5,"column_end":93}},{"value":"/ The negative `secs` means the Eastern Hemisphere.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":577784,"byte_end":577837,"line_start":81,"line_end":81,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":577842,"byte_end":577845,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on the out-of-bound `secs`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":577850,"byte_end":577896,"line_start":83,"line_end":83,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1713},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":578215,"byte_end":578230,"line_start":94,"line_end":94,"column_start":12,"column_end":27},"name":"local_minus_utc","qualname":"<FixedOffset>::local_minus_utc","value":"fn local_minus_utc<'_>(&'_ Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of seconds to add to convert from UTC to the local time.\n","sig":null,"attributes":[{"value":"/ Returns the number of seconds to add to convert from UTC to the local time.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":578110,"byte_end":578189,"line_start":92,"line_end":92,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":578194,"byte_end":578203,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1714},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":578392,"byte_end":578407,"line_start":100,"line_end":100,"column_start":12,"column_end":27},"name":"utc_minus_local","qualname":"<FixedOffset>::utc_minus_local","value":"fn utc_minus_local<'_>(&'_ Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of seconds to add to convert from the local time to UTC.\n","sig":null,"attributes":[{"value":"/ Returns the number of seconds to add to convert from the local time to UTC.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":578287,"byte_end":578366,"line_start":98,"line_end":98,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":578371,"byte_end":578380,"line_start":99,"line_end":99,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1717},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":578534,"byte_end":578545,"line_start":108,"line_end":108,"column_start":8,"column_end":19},"name":"from_offset","qualname":"<FixedOffset as offset::TimeZone>::from_offset","value":"fn from_offset<'_>(&'_ FixedOffset) -> FixedOffset","parent":{"krate":0,"index":1813},"children":[],"decl_id":{"krate":0,"index":1827},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1718},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":578615,"byte_end":578637,"line_start":112,"line_end":112,"column_start":8,"column_end":30},"name":"offset_from_local_date","qualname":"<FixedOffset as offset::TimeZone>::offset_from_local_date","value":"fn offset_from_local_date<'_, '_>(&'_ Self, &'_ NaiveDate)\n-> LocalResult<FixedOffset>","parent":{"krate":0,"index":1813},"children":[],"decl_id":{"krate":0,"index":1828},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1719},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":578743,"byte_end":578769,"line_start":115,"line_end":115,"column_start":8,"column_end":34},"name":"offset_from_local_datetime","qualname":"<FixedOffset as offset::TimeZone>::offset_from_local_datetime","value":"fn offset_from_local_datetime<'_, '_>(&'_ Self, &'_ NaiveDateTime)\n-> LocalResult<FixedOffset>","parent":{"krate":0,"index":1813},"children":[],"decl_id":{"krate":0,"index":1829},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1720},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":578880,"byte_end":578900,"line_start":119,"line_end":119,"column_start":8,"column_end":28},"name":"offset_from_utc_date","qualname":"<FixedOffset as offset::TimeZone>::offset_from_utc_date","value":"fn offset_from_utc_date<'_, '_>(&'_ Self, &'_ NaiveDate) -> FixedOffset","parent":{"krate":0,"index":1813},"children":[],"decl_id":{"krate":0,"index":1834},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1721},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":578970,"byte_end":578994,"line_start":122,"line_end":122,"column_start":8,"column_end":32},"name":"offset_from_utc_datetime","qualname":"<FixedOffset as offset::TimeZone>::offset_from_utc_datetime","value":"fn offset_from_utc_datetime<'_, '_>(&'_ Self, &'_ NaiveDateTime)\n-> FixedOffset","parent":{"krate":0,"index":1813},"children":[],"decl_id":{"krate":0,"index":1835},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1723},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":579101,"byte_end":579104,"line_start":128,"line_end":128,"column_start":8,"column_end":11},"name":"fix","qualname":"<FixedOffset as offset::Offset>::fix","value":"fn fix<'_>(&'_ Self) -> FixedOffset","parent":{"krate":0,"index":1811},"children":[],"decl_id":{"krate":0,"index":1812},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1725},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":579193,"byte_end":579196,"line_start":134,"line_end":134,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FixedOffset as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10288},"children":[],"decl_id":{"krate":1,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1727},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":579702,"byte_end":579705,"line_start":148,"line_end":148,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FixedOffset as core::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1732},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":580523,"byte_end":580526,"line_start":172,"line_end":172,"column_start":8,"column_end":11},"name":"add","qualname":"<NaiveTime as core::ops::Add>::add","value":"fn add(Self, FixedOffset) -> NaiveTime","parent":{"krate":1,"index":3331},"children":[],"decl_id":{"krate":1,"index":3334},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":580506,"byte_end":580515,"line_start":171,"line_end":171,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1735},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":580720,"byte_end":580723,"line_start":181,"line_end":181,"column_start":8,"column_end":11},"name":"sub","qualname":"<NaiveTime as core::ops::Sub>::sub","value":"fn sub(Self, FixedOffset) -> NaiveTime","parent":{"krate":1,"index":3336},"children":[],"decl_id":{"krate":1,"index":3339},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":580703,"byte_end":580712,"line_start":180,"line_end":180,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1738},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":580926,"byte_end":580929,"line_start":190,"line_end":190,"column_start":8,"column_end":11},"name":"add","qualname":"<NaiveDateTime as core::ops::Add>::add","value":"fn add(Self, FixedOffset) -> NaiveDateTime","parent":{"krate":1,"index":3331},"children":[],"decl_id":{"krate":1,"index":3334},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":580909,"byte_end":580918,"line_start":189,"line_end":189,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1741},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":581135,"byte_end":581138,"line_start":199,"line_end":199,"column_start":8,"column_end":11},"name":"sub","qualname":"<NaiveDateTime as core::ops::Sub>::sub","value":"fn sub(Self, FixedOffset) -> NaiveDateTime","parent":{"krate":1,"index":3336},"children":[],"decl_id":{"krate":1,"index":3339},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":581118,"byte_end":581127,"line_start":198,"line_end":198,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1745},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":581357,"byte_end":581360,"line_start":208,"line_end":208,"column_start":8,"column_end":11},"name":"add","qualname":"<DateTime<Tz> as core::ops::Add>::add","value":"fn add(Self, FixedOffset) -> DateTime<Tz>","parent":{"krate":1,"index":3331},"children":[],"decl_id":{"krate":1,"index":3334},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":581340,"byte_end":581349,"line_start":207,"line_end":207,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1749},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":581577,"byte_end":581580,"line_start":217,"line_end":217,"column_start":8,"column_end":11},"name":"sub","qualname":"<DateTime<Tz> as core::ops::Sub>::sub","value":"fn sub(Self, FixedOffset) -> DateTime<Tz>","parent":{"krate":1,"index":3336},"children":[],"decl_id":{"krate":1,"index":3339},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":581560,"byte_end":581569,"line_start":216,"line_end":216,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2568},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":583906,"byte_end":583909,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"Utc","qualname":"::offset::utc::Utc","value":"","parent":null,"children":[],"decl_id":null,"docs":" The UTC time zone. This is the most efficient time zone when you don't need the local time.\n It is also used as an offset (which is also a dummy type).","sig":null,"attributes":[{"value":"/ The UTC time zone. This is the most efficient time zone when you don't need the local time.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":583191,"byte_end":583286,"line_start":25,"line_end":25,"column_start":1,"column_end":96}},{"value":"/ It is also used as an offset (which is also a dummy type).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":583287,"byte_end":583349,"line_start":26,"line_end":26,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":583350,"byte_end":583353,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Using the [`TimeZone`](./trait.TimeZone.html) methods","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":583354,"byte_end":583411,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/ on the UTC struct is the preferred way to construct `DateTime<Utc>`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":583412,"byte_end":583483,"line_start":29,"line_end":29,"column_start":1,"column_end":72}},{"value":"/ instances.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":583484,"byte_end":583498,"line_start":30,"line_end":30,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":583499,"byte_end":583502,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":583503,"byte_end":583516,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":583517,"byte_end":583520,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":583521,"byte_end":583528,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ use chrono::{DateTime, TimeZone, NaiveDateTime, Utc};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":583529,"byte_end":583586,"line_start":35,"line_end":35,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":583587,"byte_end":583590,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let dt = DateTime::<Utc>::from_utc(NaiveDateTime::from_timestamp(61, 0), Utc);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":583591,"byte_end":583673,"line_start":37,"line_end":37,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":583674,"byte_end":583677,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Utc.timestamp(61, 0), dt);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":583678,"byte_end":583719,"line_start":39,"line_end":39,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(Utc.ymd(1970, 1, 1).and_hms(0, 1, 1), dt);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":583720,"byte_end":583777,"line_start":40,"line_end":40,"column_start":1,"column_end":58}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":583778,"byte_end":583785,"line_start":41,"line_end":41,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1779},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":585009,"byte_end":585020,"line_start":81,"line_end":81,"column_start":8,"column_end":19},"name":"from_offset","qualname":"<Utc as offset::TimeZone>::from_offset","value":"fn from_offset<'_>(&'_ Utc) -> Utc","parent":{"krate":0,"index":1813},"children":[],"decl_id":{"krate":0,"index":1827},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1780},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":585070,"byte_end":585092,"line_start":85,"line_end":85,"column_start":8,"column_end":30},"name":"offset_from_local_date","qualname":"<Utc as offset::TimeZone>::offset_from_local_date","value":"fn offset_from_local_date<'_, '_>(&'_ Self, &'_ NaiveDate) -> LocalResult<Utc>","parent":{"krate":0,"index":1813},"children":[],"decl_id":{"krate":0,"index":1828},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1781},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":585188,"byte_end":585214,"line_start":88,"line_end":88,"column_start":8,"column_end":34},"name":"offset_from_local_datetime","qualname":"<Utc as offset::TimeZone>::offset_from_local_datetime","value":"fn offset_from_local_datetime<'_, '_>(&'_ Self, &'_ NaiveDateTime)\n-> LocalResult<Utc>","parent":{"krate":0,"index":1813},"children":[],"decl_id":{"krate":0,"index":1829},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1782},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":585315,"byte_end":585335,"line_start":92,"line_end":92,"column_start":8,"column_end":28},"name":"offset_from_utc_date","qualname":"<Utc as offset::TimeZone>::offset_from_utc_date","value":"fn offset_from_utc_date<'_, '_>(&'_ Self, &'_ NaiveDate) -> Utc","parent":{"krate":0,"index":1813},"children":[],"decl_id":{"krate":0,"index":1834},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1783},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":585395,"byte_end":585419,"line_start":95,"line_end":95,"column_start":8,"column_end":32},"name":"offset_from_utc_datetime","qualname":"<Utc as offset::TimeZone>::offset_from_utc_datetime","value":"fn offset_from_utc_datetime<'_, '_>(&'_ Self, &'_ NaiveDateTime) -> Utc","parent":{"krate":0,"index":1813},"children":[],"decl_id":{"krate":0,"index":1835},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1785},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":585508,"byte_end":585511,"line_start":101,"line_end":101,"column_start":8,"column_end":11},"name":"fix","qualname":"<Utc as offset::Offset>::fix","value":"fn fix<'_>(&'_ Self) -> FixedOffset","parent":{"krate":0,"index":1811},"children":[],"decl_id":{"krate":0,"index":1812},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1787},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":585607,"byte_end":585610,"line_start":107,"line_end":107,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Utc as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10288},"children":[],"decl_id":{"krate":1,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1789},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":585726,"byte_end":585729,"line_start":113,"line_end":113,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Utc as core::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2581},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":555699,"byte_end":555703,"line_start":44,"line_end":44,"column_start":5,"column_end":9},"name":"None","qualname":"::offset::LocalResult::None","value":"LocalResult::None","parent":{"krate":0,"index":2579},"children":[],"decl_id":null,"docs":" Given local time representation is invalid.\n This can occur when, for example, the positive timezone transition.\n","sig":null,"attributes":[{"value":"/ Given local time representation is invalid.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":555571,"byte_end":555618,"line_start":42,"line_end":42,"column_start":5,"column_end":52}},{"value":"/ This can occur when, for example, the positive timezone transition.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":555623,"byte_end":555694,"line_start":43,"line_end":43,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2583},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":555777,"byte_end":555783,"line_start":46,"line_end":46,"column_start":5,"column_end":11},"name":"Single","qualname":"::offset::LocalResult::Single","value":"LocalResult::Single(T)","parent":{"krate":0,"index":2579},"children":[],"decl_id":null,"docs":" Given local time representation has a single unique result.\n","sig":null,"attributes":[{"value":"/ Given local time representation has a single unique result.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":555709,"byte_end":555772,"line_start":45,"line_end":45,"column_start":5,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":2585},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":555784,"byte_end":555785,"line_start":46,"line_end":46,"column_start":12,"column_end":13},"name":"0","qualname":"::offset::LocalResult::Single::0","value":"T","parent":{"krate":0,"index":2583},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2586},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":555949,"byte_end":555958,"line_start":49,"line_end":49,"column_start":5,"column_end":14},"name":"Ambiguous","qualname":"::offset::LocalResult::Ambiguous","value":"LocalResult::Ambiguous(T, T)","parent":{"krate":0,"index":2579},"children":[],"decl_id":null,"docs":" Given local time representation has multiple results and thus ambiguous.\n This can occur when, for example, the negative timezone transition.\n","sig":null,"attributes":[{"value":"/ Given local time representation has multiple results and thus ambiguous.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":555792,"byte_end":555868,"line_start":47,"line_end":47,"column_start":5,"column_end":81}},{"value":"/ This can occur when, for example, the negative timezone transition.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":555873,"byte_end":555944,"line_start":48,"line_end":48,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":2588},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":555959,"byte_end":555960,"line_start":49,"line_end":49,"column_start":15,"column_end":16},"name":"0","qualname":"::offset::LocalResult::Ambiguous::0","value":"T","parent":{"krate":0,"index":2586},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2589},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":555970,"byte_end":555971,"line_start":49,"line_end":49,"column_start":26,"column_end":27},"name":"1","qualname":"::offset::LocalResult::Ambiguous::1","value":"T","parent":{"krate":0,"index":2586},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2579},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":555550,"byte_end":555561,"line_start":41,"line_end":41,"column_start":10,"column_end":21},"name":"LocalResult","qualname":"::offset::LocalResult","value":"enum LocalResult<T> { None, Single(T), Ambiguous(T, T), }","parent":null,"children":[{"krate":0,"index":2581},{"krate":0,"index":2583},{"krate":0,"index":2586}],"decl_id":null,"docs":" The conversion result from the local time to the timezone-aware datetime types.\n","sig":null,"attributes":[{"value":"/ The conversion result from the local time to the timezone-aware datetime types.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":555406,"byte_end":555489,"line_start":39,"line_end":39,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1795},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":556108,"byte_end":556114,"line_start":54,"line_end":54,"column_start":12,"column_end":18},"name":"single","qualname":"<LocalResult<T>>::single","value":"fn single(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some` only when the conversion result is unique, or `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some` only when the conversion result is unique, or `None` otherwise.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":556014,"byte_end":556096,"line_start":53,"line_end":53,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1796},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":556342,"byte_end":556350,"line_start":62,"line_end":62,"column_start":12,"column_end":20},"name":"earliest","qualname":"<LocalResult<T>>::earliest","value":"fn earliest(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some` for the earliest possible conversion result, or `None` if none.\n","sig":null,"attributes":[{"value":"/ Returns `Some` for the earliest possible conversion result, or `None` if none.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":556248,"byte_end":556330,"line_start":61,"line_end":61,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1797},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":556607,"byte_end":556613,"line_start":70,"line_end":70,"column_start":12,"column_end":18},"name":"latest","qualname":"<LocalResult<T>>::latest","value":"fn latest(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some` for the latest possible conversion result, or `None` if none.\n","sig":null,"attributes":[{"value":"/ Returns `Some` for the latest possible conversion result, or `None` if none.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":556515,"byte_end":556595,"line_start":69,"line_end":69,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1798},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":556860,"byte_end":556863,"line_start":78,"line_end":78,"column_start":12,"column_end":15},"name":"map","qualname":"<LocalResult<T>>::map","value":"fn map<U, F>(Self, F) -> LocalResult<U> where F: FnMut(T) -> U","parent":null,"children":[],"decl_id":null,"docs":" Maps a `LocalResult<T>` into `LocalResult<U>` with given function.\n","sig":null,"attributes":[{"value":"/ Maps a `LocalResult<T>` into `LocalResult<U>` with given function.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":556778,"byte_end":556848,"line_start":77,"line_end":77,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1803},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":557438,"byte_end":557446,"line_start":93,"line_end":93,"column_start":12,"column_end":20},"name":"and_time","qualname":"<LocalResult<Date<Tz>>>::and_time","value":"fn and_time(Self, NaiveTime) -> LocalResult<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date and given `NaiveTime`.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date and given `NaiveTime`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":557213,"byte_end":557284,"line_start":88,"line_end":88,"column_start":5,"column_end":76}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":557289,"byte_end":557337,"line_start":89,"line_end":89,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":557342,"byte_end":557345,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Propagates any error. Ambiguous result would be discarded.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":557350,"byte_end":557412,"line_start":91,"line_end":91,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":557417,"byte_end":557426,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1804},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":557941,"byte_end":557952,"line_start":107,"line_end":107,"column_start":12,"column_end":23},"name":"and_hms_opt","qualname":"<LocalResult<Date<Tz>>>::and_hms_opt","value":"fn and_hms_opt(Self, u32, u32, u32) -> LocalResult<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute and second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute and second.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":557713,"byte_end":557787,"line_start":102,"line_end":102,"column_start":5,"column_end":79}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":557792,"byte_end":557840,"line_start":103,"line_end":103,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":557845,"byte_end":557848,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ Propagates any error. Ambiguous result would be discarded.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":557853,"byte_end":557915,"line_start":105,"line_end":105,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":557920,"byte_end":557929,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1805},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":558572,"byte_end":558589,"line_start":122,"line_end":122,"column_start":12,"column_end":29},"name":"and_hms_milli_opt","qualname":"<LocalResult<Date<Tz>>>::and_hms_milli_opt","value":"fn and_hms_milli_opt(Self, u32, u32, u32, u32) -> LocalResult<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\n The millisecond part can exceed 1,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute, second and millisecond.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":558246,"byte_end":558333,"line_start":116,"line_end":116,"column_start":5,"column_end":92}},{"value":"/ The millisecond part can exceed 1,000 in order to represent the leap second.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":558338,"byte_end":558418,"line_start":117,"line_end":117,"column_start":5,"column_end":85}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":558423,"byte_end":558471,"line_start":118,"line_end":118,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":558476,"byte_end":558479,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Propagates any error. Ambiguous result would be discarded.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":558484,"byte_end":558546,"line_start":120,"line_end":120,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":558551,"byte_end":558560,"line_start":121,"line_end":121,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1806},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":559288,"byte_end":559305,"line_start":143,"line_end":143,"column_start":12,"column_end":29},"name":"and_hms_micro_opt","qualname":"<LocalResult<Date<Tz>>>::and_hms_micro_opt","value":"fn and_hms_micro_opt(Self, u32, u32, u32, u32) -> LocalResult<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\n The microsecond part can exceed 1,000,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute, second and microsecond.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":558958,"byte_end":559045,"line_start":137,"line_end":137,"column_start":5,"column_end":92}},{"value":"/ The microsecond part can exceed 1,000,000 in order to represent the leap second.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":559050,"byte_end":559134,"line_start":138,"line_end":138,"column_start":5,"column_end":89}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":559139,"byte_end":559187,"line_start":139,"line_end":139,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":559192,"byte_end":559195,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Propagates any error. Ambiguous result would be discarded.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":559200,"byte_end":559262,"line_start":141,"line_end":141,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":559267,"byte_end":559276,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1807},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":560006,"byte_end":560022,"line_start":164,"line_end":164,"column_start":12,"column_end":28},"name":"and_hms_nano_opt","qualname":"<LocalResult<Date<Tz>>>::and_hms_nano_opt","value":"fn and_hms_nano_opt(Self, u32, u32, u32, u32) -> LocalResult<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\n The nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":559674,"byte_end":559760,"line_start":158,"line_end":158,"column_start":5,"column_end":91}},{"value":"/ The nanosecond part can exceed 1,000,000,000 in order to represent the leap second.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":559765,"byte_end":559852,"line_start":159,"line_end":159,"column_start":5,"column_end":92}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":559857,"byte_end":559905,"line_start":160,"line_end":160,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":559910,"byte_end":559913,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Propagates any error. Ambiguous result would be discarded.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":559918,"byte_end":559980,"line_start":162,"line_end":162,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":559985,"byte_end":559994,"line_start":163,"line_end":163,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1810},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":560510,"byte_end":560516,"line_start":182,"line_end":182,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<LocalResult<T>>::unwrap","value":"fn unwrap(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the single unique conversion result, or panics accordingly.\n","sig":null,"attributes":[{"value":"/ Returns the single unique conversion result, or panics accordingly.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":560427,"byte_end":560498,"line_start":181,"line_end":181,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":1811},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":560871,"byte_end":560877,"line_start":194,"line_end":194,"column_start":11,"column_end":17},"name":"Offset","qualname":"::offset::Offset","value":"Offset: Sized + Clone + fmt::Debug","parent":null,"children":[{"krate":0,"index":1812}],"decl_id":null,"docs":" The offset from the local time to UTC.\n","sig":null,"attributes":[{"value":"/ The offset from the local time to UTC.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":560818,"byte_end":560860,"line_start":193,"line_end":193,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1812},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":560983,"byte_end":560986,"line_start":196,"line_end":196,"column_start":8,"column_end":11},"name":"fix","qualname":"::offset::Offset::fix","value":"fn fix<'_>(&'_ Self) -> FixedOffset","parent":{"krate":0,"index":1811},"children":[],"decl_id":null,"docs":" Returns the fixed offset from UTC to the local time stored.\n","sig":null,"attributes":[{"value":"/ Returns the fixed offset from UTC to the local time stored.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":560912,"byte_end":560975,"line_start":195,"line_end":195,"column_start":5,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":1813},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":561185,"byte_end":561193,"line_start":203,"line_end":203,"column_start":11,"column_end":19},"name":"TimeZone","qualname":"::offset::TimeZone","value":"TimeZone: Sized + Clone","parent":null,"children":[{"krate":0,"index":1814},{"krate":0,"index":1815},{"krate":0,"index":1816},{"krate":0,"index":1817},{"krate":0,"index":1818},{"krate":0,"index":1819},{"krate":0,"index":1820},{"krate":0,"index":1821},{"krate":0,"index":1822},{"krate":0,"index":1823},{"krate":0,"index":1824},{"krate":0,"index":1825},{"krate":0,"index":1826},{"krate":0,"index":1827},{"krate":0,"index":1828},{"krate":0,"index":1829},{"krate":0,"index":1830},{"krate":0,"index":1832},{"krate":0,"index":1834},{"krate":0,"index":1835},{"krate":0,"index":1836},{"krate":0,"index":1837}],"decl_id":null,"docs":" The time zone.","sig":null,"attributes":[{"value":"/ The time zone.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":561013,"byte_end":561031,"line_start":199,"line_end":199,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":561032,"byte_end":561035,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ The methods here are the primarily constructors for [`Date`](../struct.Date.html) and","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":561036,"byte_end":561125,"line_start":201,"line_end":201,"column_start":1,"column_end":90}},{"value":"/ [`DateTime`](../struct.DateTime.html) types.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":561126,"byte_end":561174,"line_start":202,"line_end":202,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1814},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":561416,"byte_end":561422,"line_start":207,"line_end":207,"column_start":10,"column_end":16},"name":"Offset","qualname":"::offset::TimeZone::Offset","value":"type Offset: Offset;","parent":{"krate":0,"index":1813},"children":[],"decl_id":null,"docs":" An associated offset type.\n This type is used to store the actual offset in date and time types.\n The original `TimeZone` value can be recovered via `TimeZone::from_offset`.\n","sig":null,"attributes":[{"value":"/ An associated offset type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":561215,"byte_end":561245,"line_start":204,"line_end":204,"column_start":5,"column_end":35}},{"value":"/ This type is used to store the actual offset in date and time types.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":561250,"byte_end":561322,"line_start":205,"line_end":205,"column_start":5,"column_end":77}},{"value":"/ The original `TimeZone` value can be recovered via `TimeZone::from_offset`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":561327,"byte_end":561406,"line_start":206,"line_end":206,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1815},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":562037,"byte_end":562040,"line_start":224,"line_end":224,"column_start":8,"column_end":11},"name":"ymd","qualname":"::offset::TimeZone::ymd","value":"fn ymd<'_>(&'_ Self, i32, u32, u32) -> Date<Self>","parent":{"krate":0,"index":1813},"children":[],"decl_id":null,"docs":" Makes a new `Date` from year, month, day and the current time zone.\n This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","sig":null,"attributes":[{"value":"/ Makes a new `Date` from year, month, day and the current time zone.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":561437,"byte_end":561508,"line_start":209,"line_end":209,"column_start":5,"column_end":76}},{"value":"/ This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":561513,"byte_end":561592,"line_start":210,"line_end":210,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":561597,"byte_end":561600,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ The time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":561605,"byte_end":561698,"line_start":212,"line_end":212,"column_start":5,"column_end":98}},{"value":"/ but it will propagate to the `DateTime` values constructed via this date.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":561703,"byte_end":561780,"line_start":213,"line_end":213,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":561785,"byte_end":561788,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-range date, invalid month and/or day.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":561793,"byte_end":561855,"line_start":215,"line_end":215,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":561860,"byte_end":561863,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":561868,"byte_end":561881,"line_start":217,"line_end":217,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":561886,"byte_end":561889,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":561894,"byte_end":561901,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Utc, TimeZone};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":561906,"byte_end":561938,"line_start":220,"line_end":220,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":561943,"byte_end":561946,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Utc.ymd(2015, 5, 15).to_string(), \"2015-05-15UTC\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":561951,"byte_end":562017,"line_start":222,"line_end":222,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":562022,"byte_end":562029,"line_start":223,"line_end":223,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1816},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":562854,"byte_end":562861,"line_start":244,"line_end":244,"column_start":8,"column_end":15},"name":"ymd_opt","qualname":"::offset::TimeZone::ymd_opt","value":"fn ymd_opt<'_>(&'_ Self, i32, u32, u32) -> LocalResult<Date<Self>>","parent":{"krate":0,"index":1813},"children":[],"decl_id":null,"docs":" Makes a new `Date` from year, month, day and the current time zone.\n This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","sig":null,"attributes":[{"value":"/ Makes a new `Date` from year, month, day and the current time zone.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":562156,"byte_end":562227,"line_start":228,"line_end":228,"column_start":5,"column_end":76}},{"value":"/ This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":562232,"byte_end":562311,"line_start":229,"line_end":229,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":562316,"byte_end":562319,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ The time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":562324,"byte_end":562417,"line_start":231,"line_end":231,"column_start":5,"column_end":98}},{"value":"/ but it will propagate to the `DateTime` values constructed via this date.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":562422,"byte_end":562499,"line_start":232,"line_end":232,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":562504,"byte_end":562507,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on the out-of-range date, invalid month and/or day.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":562512,"byte_end":562582,"line_start":234,"line_end":234,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":562587,"byte_end":562590,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":562595,"byte_end":562608,"line_start":236,"line_end":236,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":562613,"byte_end":562616,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":562621,"byte_end":562628,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Utc, LocalResult, TimeZone};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":562633,"byte_end":562678,"line_start":239,"line_end":239,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":562683,"byte_end":562686,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Utc.ymd_opt(2015, 5, 15).unwrap().to_string(), \"2015-05-15UTC\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":562691,"byte_end":562770,"line_start":241,"line_end":241,"column_start":5,"column_end":84}},{"value":"/ assert_eq!(Utc.ymd_opt(2000, 0, 0), LocalResult::None);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":562775,"byte_end":562834,"line_start":242,"line_end":242,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":562839,"byte_end":562846,"line_start":243,"line_end":243,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1817},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":563708,"byte_end":563710,"line_start":266,"line_end":266,"column_start":8,"column_end":10},"name":"yo","qualname":"::offset::TimeZone::yo","value":"fn yo<'_>(&'_ Self, i32, u32) -> Date<Self>","parent":{"krate":0,"index":1813},"children":[],"decl_id":null,"docs":" Makes a new `Date` from year, day of year (DOY or \"ordinal\") and the current time zone.\n This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","sig":null,"attributes":[{"value":"/ Makes a new `Date` from year, day of year (DOY or \"ordinal\") and the current time zone.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":563098,"byte_end":563189,"line_start":251,"line_end":251,"column_start":5,"column_end":96}},{"value":"/ This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":563194,"byte_end":563273,"line_start":252,"line_end":252,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":563278,"byte_end":563281,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ The time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":563286,"byte_end":563379,"line_start":254,"line_end":254,"column_start":5,"column_end":98}},{"value":"/ but it will propagate to the `DateTime` values constructed via this date.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":563384,"byte_end":563461,"line_start":255,"line_end":255,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":563466,"byte_end":563469,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-range date and/or invalid DOY.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":563474,"byte_end":563529,"line_start":257,"line_end":257,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":563534,"byte_end":563537,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":563542,"byte_end":563555,"line_start":259,"line_end":259,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":563560,"byte_end":563563,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":563568,"byte_end":563575,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Utc, TimeZone};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":563580,"byte_end":563612,"line_start":262,"line_end":262,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":563617,"byte_end":563620,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Utc.yo(2015, 135).to_string(), \"2015-05-15UTC\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":563625,"byte_end":563688,"line_start":264,"line_end":264,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":563693,"byte_end":563700,"line_start":265,"line_end":265,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1818},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":564261,"byte_end":564267,"line_start":277,"line_end":277,"column_start":8,"column_end":14},"name":"yo_opt","qualname":"::offset::TimeZone::yo_opt","value":"fn yo_opt<'_>(&'_ Self, i32, u32) -> LocalResult<Date<Self>>","parent":{"krate":0,"index":1813},"children":[],"decl_id":null,"docs":" Makes a new `Date` from year, day of year (DOY or \"ordinal\") and the current time zone.\n This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","sig":null,"attributes":[{"value":"/ Makes a new `Date` from year, day of year (DOY or \"ordinal\") and the current time zone.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":563814,"byte_end":563905,"line_start":270,"line_end":270,"column_start":5,"column_end":96}},{"value":"/ This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":563910,"byte_end":563989,"line_start":271,"line_end":271,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":563994,"byte_end":563997,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ The time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":564002,"byte_end":564095,"line_start":273,"line_end":273,"column_start":5,"column_end":98}},{"value":"/ but it will propagate to the `DateTime` values constructed via this date.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":564100,"byte_end":564177,"line_start":274,"line_end":274,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":564182,"byte_end":564185,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on the out-of-range date and/or invalid DOY.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":564190,"byte_end":564253,"line_start":276,"line_end":276,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1819},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":565243,"byte_end":565249,"line_start":301,"line_end":301,"column_start":8,"column_end":14},"name":"isoywd","qualname":"::offset::TimeZone::isoywd","value":"fn isoywd<'_>(&'_ Self, i32, u32, Weekday) -> Date<Self>","parent":{"krate":0,"index":1813},"children":[],"decl_id":null,"docs":" Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and\n the current time zone.\n This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\n The resulting `Date` may have a different year from the input year.","sig":null,"attributes":[{"value":"/ Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":564492,"byte_end":564583,"line_start":284,"line_end":284,"column_start":5,"column_end":96}},{"value":"/ the current time zone.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":564588,"byte_end":564614,"line_start":285,"line_end":285,"column_start":5,"column_end":31}},{"value":"/ This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":564619,"byte_end":564698,"line_start":286,"line_end":286,"column_start":5,"column_end":84}},{"value":"/ The resulting `Date` may have a different year from the input year.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":564703,"byte_end":564774,"line_start":287,"line_end":287,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":564779,"byte_end":564782,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ The time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":564787,"byte_end":564880,"line_start":289,"line_end":289,"column_start":5,"column_end":98}},{"value":"/ but it will propagate to the `DateTime` values constructed via this date.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":564885,"byte_end":564962,"line_start":290,"line_end":290,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":564967,"byte_end":564970,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-range date and/or invalid week number.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":564975,"byte_end":565038,"line_start":292,"line_end":292,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":565043,"byte_end":565046,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":565051,"byte_end":565064,"line_start":294,"line_end":294,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":565069,"byte_end":565072,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":565077,"byte_end":565084,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Utc, Weekday, TimeZone};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":565089,"byte_end":565130,"line_start":297,"line_end":297,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":565135,"byte_end":565138,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Utc.isoywd(2015, 20, Weekday::Fri).to_string(), \"2015-05-15UTC\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":565143,"byte_end":565223,"line_start":299,"line_end":299,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":565228,"byte_end":565235,"line_start":300,"line_end":300,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1820},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":565940,"byte_end":565950,"line_start":314,"line_end":314,"column_start":8,"column_end":18},"name":"isoywd_opt","qualname":"::offset::TimeZone::isoywd_opt","value":"fn isoywd_opt<'_>(&'_ Self, i32, u32, Weekday) -> LocalResult<Date<Self>>","parent":{"krate":0,"index":1813},"children":[],"decl_id":null,"docs":" Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and\n the current time zone.\n This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\n The resulting `Date` may have a different year from the input year.","sig":null,"attributes":[{"value":"/ Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":565378,"byte_end":565469,"line_start":305,"line_end":305,"column_start":5,"column_end":96}},{"value":"/ the current time zone.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":565474,"byte_end":565500,"line_start":306,"line_end":306,"column_start":5,"column_end":31}},{"value":"/ This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":565505,"byte_end":565584,"line_start":307,"line_end":307,"column_start":5,"column_end":84}},{"value":"/ The resulting `Date` may have a different year from the input year.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":565589,"byte_end":565660,"line_start":308,"line_end":308,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":565665,"byte_end":565668,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ The time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":565673,"byte_end":565766,"line_start":310,"line_end":310,"column_start":5,"column_end":98}},{"value":"/ but it will propagate to the `DateTime` values constructed via this date.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":565771,"byte_end":565848,"line_start":311,"line_end":311,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":565853,"byte_end":565856,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on the out-of-range date and/or invalid week number.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":565861,"byte_end":565932,"line_start":313,"line_end":313,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1821},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":566773,"byte_end":566782,"line_start":335,"line_end":335,"column_start":8,"column_end":17},"name":"timestamp","qualname":"::offset::TimeZone::timestamp","value":"fn timestamp<'_>(&'_ Self, i64, u32) -> DateTime<Self>","parent":{"krate":0,"index":1813},"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the number of non-leap seconds\n since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\")\n and the number of nanoseconds since the last whole non-leap second.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the number of non-leap seconds","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":566200,"byte_end":566262,"line_start":321,"line_end":321,"column_start":5,"column_end":67}},{"value":"/ since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":566267,"byte_end":566327,"line_start":322,"line_end":322,"column_start":5,"column_end":65}},{"value":"/ and the number of nanoseconds since the last whole non-leap second.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":566332,"byte_end":566403,"line_start":323,"line_end":323,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":566408,"byte_end":566411,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-range number of seconds and/or invalid nanosecond,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":566416,"byte_end":566491,"line_start":325,"line_end":325,"column_start":5,"column_end":80}},{"value":"/ for a non-panicking version see [`timestamp_opt`](#method.timestamp_opt).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":566496,"byte_end":566573,"line_start":326,"line_end":326,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":566578,"byte_end":566581,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":566586,"byte_end":566599,"line_start":328,"line_end":328,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":566604,"byte_end":566607,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":566612,"byte_end":566619,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Utc, TimeZone};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":566624,"byte_end":566656,"line_start":331,"line_end":331,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":566661,"byte_end":566664,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Utc.timestamp(1431648000, 0).to_string(), \"2015-05-15 00:00:00 UTC\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":566669,"byte_end":566753,"line_start":333,"line_end":333,"column_start":5,"column_end":89}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":566758,"byte_end":566765,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1822},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":567265,"byte_end":567278,"line_start":345,"line_end":345,"column_start":8,"column_end":21},"name":"timestamp_opt","qualname":"::offset::TimeZone::timestamp_opt","value":"fn timestamp_opt<'_>(&'_ Self, i64, u32) -> LocalResult<DateTime<Self>>","parent":{"krate":0,"index":1813},"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the number of non-leap seconds\n since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\")\n and the number of nanoseconds since the last whole non-leap second.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the number of non-leap seconds","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":566893,"byte_end":566955,"line_start":339,"line_end":339,"column_start":5,"column_end":67}},{"value":"/ since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":566960,"byte_end":567020,"line_start":340,"line_end":340,"column_start":5,"column_end":65}},{"value":"/ and the number of nanoseconds since the last whole non-leap second.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":567025,"byte_end":567096,"line_start":341,"line_end":341,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":567101,"byte_end":567104,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ Returns `LocalResult::None` on out-of-range number of seconds and/or","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":567109,"byte_end":567181,"line_start":343,"line_end":343,"column_start":5,"column_end":77}},{"value":"/ invalid nanosecond, otherwise always returns `LocalResult::Single`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":567186,"byte_end":567257,"line_start":344,"line_end":344,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1823},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":568016,"byte_end":568032,"line_start":365,"line_end":365,"column_start":8,"column_end":24},"name":"timestamp_millis","qualname":"::offset::TimeZone::timestamp_millis","value":"fn timestamp_millis<'_>(&'_ Self, i64) -> DateTime<Self>","parent":{"krate":0,"index":1813},"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the number of non-leap milliseconds\n since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the number of non-leap milliseconds","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":567539,"byte_end":567606,"line_start":352,"line_end":352,"column_start":5,"column_end":72}},{"value":"/ since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":567611,"byte_end":567672,"line_start":353,"line_end":353,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":567677,"byte_end":567680,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ Panics on out-of-range number of milliseconds for a non-panicking","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":567685,"byte_end":567754,"line_start":355,"line_end":355,"column_start":5,"column_end":74}},{"value":"/ version see [`timestamp_millis_opt`](#method.timestamp_millis_opt).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":567759,"byte_end":567830,"line_start":356,"line_end":356,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":567835,"byte_end":567838,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":567843,"byte_end":567856,"line_start":358,"line_end":358,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":567861,"byte_end":567864,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":567869,"byte_end":567876,"line_start":360,"line_end":360,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Utc, TimeZone};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":567881,"byte_end":567913,"line_start":361,"line_end":361,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":567918,"byte_end":567921,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Utc.timestamp_millis(1431648000).timestamp(), 1431648);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":567926,"byte_end":567996,"line_start":363,"line_end":363,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":568001,"byte_end":568008,"line_start":364,"line_end":364,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1824},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":568761,"byte_end":568781,"line_start":386,"line_end":386,"column_start":8,"column_end":28},"name":"timestamp_millis_opt","qualname":"::offset::TimeZone::timestamp_millis_opt","value":"fn timestamp_millis_opt<'_>(&'_ Self, i64) -> LocalResult<DateTime<Self>>","parent":{"krate":0,"index":1813},"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the number of non-leap milliseconds\n since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the number of non-leap milliseconds","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":568135,"byte_end":568202,"line_start":369,"line_end":369,"column_start":5,"column_end":72}},{"value":"/ since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":568207,"byte_end":568268,"line_start":370,"line_end":370,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":568273,"byte_end":568276,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":568281,"byte_end":568284,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ Returns `LocalResult::None` on out-of-range number of milliseconds","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":568289,"byte_end":568359,"line_start":373,"line_end":373,"column_start":5,"column_end":75}},{"value":"/ and/or invalid nanosecond, otherwise always returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":568364,"byte_end":568419,"line_start":374,"line_end":374,"column_start":5,"column_end":60}},{"value":"/ `LocalResult::Single`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":568424,"byte_end":568450,"line_start":375,"line_end":375,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":568455,"byte_end":568458,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":568463,"byte_end":568476,"line_start":377,"line_end":377,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":568481,"byte_end":568484,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":568489,"byte_end":568496,"line_start":379,"line_end":379,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Utc, TimeZone, LocalResult};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":568501,"byte_end":568546,"line_start":380,"line_end":380,"column_start":5,"column_end":50}},{"value":"/ match Utc.timestamp_millis_opt(1431648000) {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":568551,"byte_end":568599,"line_start":381,"line_end":381,"column_start":5,"column_end":53}},{"value":"/     LocalResult::Single(dt) => assert_eq!(dt.timestamp(), 1431648),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":568604,"byte_end":568675,"line_start":382,"line_end":382,"column_start":5,"column_end":76}},{"value":"/     _ => panic!(\"Incorrect timestamp_millis\"),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":568680,"byte_end":568730,"line_start":383,"line_end":383,"column_start":5,"column_end":55}},{"value":"/ };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":568735,"byte_end":568741,"line_start":384,"line_end":384,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":568746,"byte_end":568753,"line_start":385,"line_end":385,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1825},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":569481,"byte_end":569496,"line_start":408,"line_end":408,"column_start":8,"column_end":23},"name":"timestamp_nanos","qualname":"::offset::TimeZone::timestamp_nanos","value":"fn timestamp_nanos<'_>(&'_ Self, i64) -> DateTime<Self>","parent":{"krate":0,"index":1813},"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the number of non-leap nanoseconds\n since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the number of non-leap nanoseconds","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":569060,"byte_end":569126,"line_start":395,"line_end":395,"column_start":5,"column_end":71}},{"value":"/ since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":569131,"byte_end":569192,"line_start":396,"line_end":396,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":569197,"byte_end":569200,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ Unlike [`timestamp_millis`](#method.timestamp_millis), this never","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":569205,"byte_end":569274,"line_start":398,"line_end":398,"column_start":5,"column_end":74}},{"value":"/ panics.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":569279,"byte_end":569290,"line_start":399,"line_end":399,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":569295,"byte_end":569298,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":569303,"byte_end":569316,"line_start":401,"line_end":401,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":569321,"byte_end":569324,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":569329,"byte_end":569336,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ use chrono::{Utc, TimeZone};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":569341,"byte_end":569373,"line_start":404,"line_end":404,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":569378,"byte_end":569381,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Utc.timestamp_nanos(1431648000000000).timestamp(), 1431648);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":569386,"byte_end":569461,"line_start":406,"line_end":406,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":569466,"byte_end":569473,"line_start":407,"line_end":407,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1826},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":570269,"byte_end":570286,"line_start":428,"line_end":428,"column_start":8,"column_end":25},"name":"datetime_from_str","qualname":"::offset::TimeZone::datetime_from_str","value":"fn datetime_from_str<'_, '_, '_>(&'_ Self, &'_ str, &'_ str)\n-> ParseResult<DateTime<Self>>","parent":{"krate":0,"index":1813},"children":[],"decl_id":null,"docs":" Parses a string with the specified format string and returns a\n `DateTime` with the current offset.","sig":null,"attributes":[{"value":"/ Parses a string with the specified format string and returns a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":569779,"byte_end":569845,"line_start":417,"line_end":417,"column_start":5,"column_end":71}},{"value":"/ `DateTime` with the current offset.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":569850,"byte_end":569889,"line_start":418,"line_end":418,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":569894,"byte_end":569897,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ See the [`crate::format::strftime`] module on the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":569902,"byte_end":569955,"line_start":420,"line_end":420,"column_start":5,"column_end":58}},{"value":"/ supported escape sequences.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":569960,"byte_end":569991,"line_start":421,"line_end":421,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":569996,"byte_end":569999,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ If the to-be-parsed string includes an offset, it *must* match the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":570004,"byte_end":570074,"line_start":423,"line_end":423,"column_start":5,"column_end":75}},{"value":"/ offset of the TimeZone, otherwise an error will be returned.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":570079,"byte_end":570143,"line_start":424,"line_end":424,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":570148,"byte_end":570151,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ See also [`DateTime::parse_from_str`] which gives a [`DateTime`] with","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":570156,"byte_end":570229,"line_start":426,"line_end":426,"column_start":5,"column_end":78}},{"value":"/ parsed [`FixedOffset`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":570234,"byte_end":570261,"line_start":427,"line_end":427,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1827},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":570557,"byte_end":570568,"line_start":435,"line_end":435,"column_start":8,"column_end":19},"name":"from_offset","qualname":"::offset::TimeZone::from_offset","value":"fn from_offset<'_>(&'_ Self::Offset) -> Self","parent":{"krate":0,"index":1813},"children":[],"decl_id":null,"docs":" Reconstructs the time zone from the offset.\n","sig":null,"attributes":[{"value":"/ Reconstructs the time zone from the offset.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":570502,"byte_end":570549,"line_start":434,"line_end":434,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1828},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":570680,"byte_end":570702,"line_start":438,"line_end":438,"column_start":8,"column_end":30},"name":"offset_from_local_date","qualname":"::offset::TimeZone::offset_from_local_date","value":"fn offset_from_local_date<'_, '_>(&'_ Self, &'_ NaiveDate)\n-> LocalResult<Self::Offset>","parent":{"krate":0,"index":1813},"children":[],"decl_id":null,"docs":" Creates the offset(s) for given local `NaiveDate` if possible.\n","sig":null,"attributes":[{"value":"/ Creates the offset(s) for given local `NaiveDate` if possible.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":570606,"byte_end":570672,"line_start":437,"line_end":437,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1829},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":570842,"byte_end":570868,"line_start":441,"line_end":441,"column_start":8,"column_end":34},"name":"offset_from_local_datetime","qualname":"::offset::TimeZone::offset_from_local_datetime","value":"fn offset_from_local_datetime<'_, '_>(&'_ Self, &'_ NaiveDateTime)\n-> LocalResult<Self::Offset>","parent":{"krate":0,"index":1813},"children":[],"decl_id":null,"docs":" Creates the offset(s) for given local `NaiveDateTime` if possible.\n","sig":null,"attributes":[{"value":"/ Creates the offset(s) for given local `NaiveDateTime` if possible.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":570764,"byte_end":570834,"line_start":440,"line_end":440,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1830},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":571062,"byte_end":571077,"line_start":445,"line_end":445,"column_start":8,"column_end":23},"name":"from_local_date","qualname":"::offset::TimeZone::from_local_date","value":"fn from_local_date<'_, '_>(&'_ Self, &'_ NaiveDate) -> LocalResult<Date<Self>>","parent":{"krate":0,"index":1813},"children":[],"decl_id":null,"docs":" Converts the local `NaiveDate` to the timezone-aware `Date` if possible.\n","sig":null,"attributes":[{"value":"/ Converts the local `NaiveDate` to the timezone-aware `Date` if possible.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":570934,"byte_end":571010,"line_start":443,"line_end":443,"column_start":5,"column_end":81}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":571015,"byte_end":571054,"line_start":444,"line_end":444,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1832},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":571473,"byte_end":571492,"line_start":454,"line_end":454,"column_start":8,"column_end":27},"name":"from_local_datetime","qualname":"::offset::TimeZone::from_local_datetime","value":"fn from_local_datetime<'_, '_>(&'_ Self, &'_ NaiveDateTime)\n-> LocalResult<DateTime<Self>>","parent":{"krate":0,"index":1813},"children":[],"decl_id":null,"docs":" Converts the local `NaiveDateTime` to the timezone-aware `DateTime` if possible.\n","sig":null,"attributes":[{"value":"/ Converts the local `NaiveDateTime` to the timezone-aware `DateTime` if possible.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":571337,"byte_end":571421,"line_start":452,"line_end":452,"column_start":5,"column_end":89}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":571426,"byte_end":571465,"line_start":453,"line_end":453,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1834},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":571766,"byte_end":571786,"line_start":460,"line_end":460,"column_start":8,"column_end":28},"name":"offset_from_utc_date","qualname":"::offset::TimeZone::offset_from_utc_date","value":"fn offset_from_utc_date<'_, '_>(&'_ Self, &'_ NaiveDate) -> Self::Offset","parent":{"krate":0,"index":1813},"children":[],"decl_id":null,"docs":" Creates the offset for given UTC `NaiveDate`. This cannot fail.\n","sig":null,"attributes":[{"value":"/ Creates the offset for given UTC `NaiveDate`. This cannot fail.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":571691,"byte_end":571758,"line_start":459,"line_end":459,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1835},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":571912,"byte_end":571936,"line_start":463,"line_end":463,"column_start":8,"column_end":32},"name":"offset_from_utc_datetime","qualname":"::offset::TimeZone::offset_from_utc_datetime","value":"fn offset_from_utc_datetime<'_, '_>(&'_ Self, &'_ NaiveDateTime)\n-> Self::Offset","parent":{"krate":0,"index":1813},"children":[],"decl_id":null,"docs":" Creates the offset for given UTC `NaiveDateTime`. This cannot fail.\n","sig":null,"attributes":[{"value":"/ Creates the offset for given UTC `NaiveDateTime`. This cannot fail.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":571833,"byte_end":571904,"line_start":462,"line_end":462,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1836},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":572187,"byte_end":572200,"line_start":468,"line_end":468,"column_start":8,"column_end":21},"name":"from_utc_date","qualname":"::offset::TimeZone::from_utc_date","value":"fn from_utc_date<'_, '_>(&'_ Self, &'_ NaiveDate) -> Date<Self>","parent":{"krate":0,"index":1813},"children":[],"decl_id":null,"docs":" Converts the UTC `NaiveDate` to the local time.\n The UTC is continuous and thus this cannot fail (but can give the duplicate local time).\n","sig":null,"attributes":[{"value":"/ Converts the UTC `NaiveDate` to the local time.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":571987,"byte_end":572038,"line_start":465,"line_end":465,"column_start":5,"column_end":56}},{"value":"/ The UTC is continuous and thus this cannot fail (but can give the duplicate local time).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":572043,"byte_end":572135,"line_start":466,"line_end":466,"column_start":5,"column_end":97}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":572140,"byte_end":572179,"line_start":467,"line_end":467,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1837},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":572517,"byte_end":572534,"line_start":475,"line_end":475,"column_start":8,"column_end":25},"name":"from_utc_datetime","qualname":"::offset::TimeZone::from_utc_datetime","value":"fn from_utc_datetime<'_, '_>(&'_ Self, &'_ NaiveDateTime) -> DateTime<Self>","parent":{"krate":0,"index":1813},"children":[],"decl_id":null,"docs":" Converts the UTC `NaiveDateTime` to the local time.\n The UTC is continuous and thus this cannot fail (but can give the duplicate local time).\n","sig":null,"attributes":[{"value":"/ Converts the UTC `NaiveDateTime` to the local time.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":572313,"byte_end":572368,"line_start":472,"line_end":472,"column_start":5,"column_end":60}},{"value":"/ The UTC is continuous and thus this cannot fail (but can give the duplicate local time).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":572373,"byte_end":572465,"line_start":473,"line_end":473,"column_start":5,"column_end":97}},{"value":"allow(clippy :: wrong_self_convention)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":572470,"byte_end":572509,"line_start":474,"line_end":474,"column_start":5,"column_end":44}}]},{"kind":"Trait","id":{"krate":0,"index":1886},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":586515,"byte_end":586526,"line_start":20,"line_end":20,"column_start":11,"column_end":22},"name":"SubsecRound","qualname":"::round::SubsecRound","value":"SubsecRound","parent":null,"children":[{"krate":0,"index":1887},{"krate":0,"index":1888}],"decl_id":null,"docs":" Extension trait for subsecond rounding or truncation to a maximum number\n of digits. Rounding can be used to decrease the error variance when\n serializing/persisting to lower precision. Truncation is the default\n behavior in Chrono display formatting.  Either can be used to guarantee\n equality (e.g. for testing) when round-tripping through a lower precision\n format.\n","sig":null,"attributes":[{"value":"/ Extension trait for subsecond rounding or truncation to a maximum number","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":586117,"byte_end":586193,"line_start":14,"line_end":14,"column_start":1,"column_end":77}},{"value":"/ of digits. Rounding can be used to decrease the error variance when","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":586194,"byte_end":586265,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ serializing/persisting to lower precision. Truncation is the default","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":586266,"byte_end":586338,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ behavior in Chrono display formatting.  Either can be used to guarantee","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":586339,"byte_end":586414,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/ equality (e.g. for testing) when round-tripping through a lower precision","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":586415,"byte_end":586492,"line_start":18,"line_end":18,"column_start":1,"column_end":78}},{"value":"/ format.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":586493,"byte_end":586504,"line_start":19,"line_end":19,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1887},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":587056,"byte_end":587069,"line_start":32,"line_end":32,"column_start":8,"column_end":21},"name":"round_subsecs","qualname":"::round::SubsecRound::round_subsecs","value":"fn round_subsecs(Self, u16) -> Self","parent":{"krate":0,"index":1886},"children":[],"decl_id":null,"docs":" Return a copy rounded to the specified number of subsecond digits. With\n 9 or more digits, self is returned unmodified. Halfway values are\n rounded up (away from zero).","sig":null,"attributes":[{"value":"/ Return a copy rounded to the specified number of subsecond digits. With","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":586533,"byte_end":586608,"line_start":21,"line_end":21,"column_start":5,"column_end":80}},{"value":"/ 9 or more digits, self is returned unmodified. Halfway values are","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":586613,"byte_end":586682,"line_start":22,"line_end":22,"column_start":5,"column_end":74}},{"value":"/ rounded up (away from zero).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":586687,"byte_end":586719,"line_start":23,"line_end":23,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":586724,"byte_end":586727,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":586732,"byte_end":586745,"line_start":25,"line_end":25,"column_start":5,"column_end":18}},{"value":"/ ``` rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":586750,"byte_end":586762,"line_start":26,"line_end":26,"column_start":5,"column_end":17}},{"value":"/ # use chrono::{DateTime, SubsecRound, Timelike, TimeZone, Utc};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":586767,"byte_end":586834,"line_start":27,"line_end":27,"column_start":5,"column_end":72}},{"value":"/ let dt = Utc.ymd(2018, 1, 11).and_hms_milli(12, 0, 0, 154);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":586839,"byte_end":586902,"line_start":28,"line_end":28,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(dt.round_subsecs(2).nanosecond(), 150_000_000);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":586907,"byte_end":586969,"line_start":29,"line_end":29,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(dt.round_subsecs(1).nanosecond(), 200_000_000);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":586974,"byte_end":587036,"line_start":30,"line_end":30,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":587041,"byte_end":587048,"line_start":31,"line_end":31,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1888},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":587572,"byte_end":587585,"line_start":44,"line_end":44,"column_start":8,"column_end":21},"name":"trunc_subsecs","qualname":"::round::SubsecRound::trunc_subsecs","value":"fn trunc_subsecs(Self, u16) -> Self","parent":{"krate":0,"index":1886},"children":[],"decl_id":null,"docs":" Return a copy truncated to the specified number of subsecond\n digits. With 9 or more digits, self is returned unmodified.","sig":null,"attributes":[{"value":"/ Return a copy truncated to the specified number of subsecond","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":587103,"byte_end":587167,"line_start":34,"line_end":34,"column_start":5,"column_end":69}},{"value":"/ digits. With 9 or more digits, self is returned unmodified.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":587172,"byte_end":587235,"line_start":35,"line_end":35,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":587240,"byte_end":587243,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":587248,"byte_end":587261,"line_start":37,"line_end":37,"column_start":5,"column_end":18}},{"value":"/ ``` rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":587266,"byte_end":587278,"line_start":38,"line_end":38,"column_start":5,"column_end":17}},{"value":"/ # use chrono::{DateTime, SubsecRound, Timelike, TimeZone, Utc};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":587283,"byte_end":587350,"line_start":39,"line_end":39,"column_start":5,"column_end":72}},{"value":"/ let dt = Utc.ymd(2018, 1, 11).and_hms_milli(12, 0, 0, 154);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":587355,"byte_end":587418,"line_start":40,"line_end":40,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(dt.trunc_subsecs(2).nanosecond(), 150_000_000);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":587423,"byte_end":587485,"line_start":41,"line_end":41,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(dt.trunc_subsecs(1).nanosecond(), 100_000_000);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":587490,"byte_end":587552,"line_start":42,"line_end":42,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":587557,"byte_end":587564,"line_start":43,"line_end":43,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1891},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":587731,"byte_end":587744,"line_start":51,"line_end":51,"column_start":8,"column_end":21},"name":"round_subsecs","qualname":"<T as round::SubsecRound>::round_subsecs","value":"fn round_subsecs(Self, u16) -> T","parent":{"krate":0,"index":1886},"children":[],"decl_id":{"krate":0,"index":1887},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1892},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":588212,"byte_end":588225,"line_start":66,"line_end":66,"column_start":8,"column_end":21},"name":"trunc_subsecs","qualname":"<T as round::SubsecRound>::trunc_subsecs","value":"fn trunc_subsecs(Self, u16) -> T","parent":{"krate":0,"index":1886},"children":[],"decl_id":{"krate":0,"index":1888},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1894},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":589324,"byte_end":589337,"line_start":101,"line_end":101,"column_start":11,"column_end":24},"name":"DurationRound","qualname":"::round::DurationRound","value":"DurationRound: Sized","parent":null,"children":[{"krate":0,"index":1895},{"krate":0,"index":1896},{"krate":0,"index":1897}],"decl_id":null,"docs":" Extension trait for rounding or truncating a DateTime by a Duration.","sig":null,"attributes":[{"value":"/ Extension trait for rounding or truncating a DateTime by a Duration.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":588911,"byte_end":588983,"line_start":94,"line_end":94,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":588984,"byte_end":588987,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ # Limitations","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":588988,"byte_end":589005,"line_start":96,"line_end":96,"column_start":1,"column_end":18}},{"value":"/ Both rounding and truncating are done via [`Duration::num_nanoseconds`] and","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":589006,"byte_end":589085,"line_start":97,"line_end":97,"column_start":1,"column_end":80}},{"value":"/ [`DateTime::timestamp_nanos`]. This means that they will fail if either the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":589086,"byte_end":589165,"line_start":98,"line_end":98,"column_start":1,"column_end":80}},{"value":"/ `Duration` or the `DateTime` are too big to represented as nanoseconds. They","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":589166,"byte_end":589246,"line_start":99,"line_end":99,"column_start":1,"column_end":81}},{"value":"/ will also fail if the `Duration` is bigger than the timestamp.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":589247,"byte_end":589313,"line_start":100,"line_end":100,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":1895},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":589583,"byte_end":589586,"line_start":108,"line_end":108,"column_start":10,"column_end":13},"name":"Err","qualname":"::round::DurationRound::Err","value":"type Err: fmt::Debug + fmt::Display;","parent":{"krate":0,"index":1894},"children":[],"decl_id":null,"docs":" Error that can occur in rounding or truncating\n","sig":null,"attributes":[{"value":"/ Error that can occur in rounding or truncating","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":589479,"byte_end":589529,"line_start":106,"line_end":106,"column_start":5,"column_end":55}},{"value":"cfg(not(any(feature = \"std\", test)))","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":589534,"byte_end":589573,"line_start":107,"line_end":107,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1896},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":590156,"byte_end":590170,"line_start":125,"line_end":125,"column_start":8,"column_end":22},"name":"duration_round","qualname":"::round::DurationRound::duration_round","value":"fn duration_round(Self, Duration) -> Result<Self, Self::Err>","parent":{"krate":0,"index":1894},"children":[],"decl_id":null,"docs":" Return a copy rounded by Duration.","sig":null,"attributes":[{"value":"/ Return a copy rounded by Duration.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":589620,"byte_end":589658,"line_start":110,"line_end":110,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":589663,"byte_end":589666,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":589671,"byte_end":589684,"line_start":112,"line_end":112,"column_start":5,"column_end":18}},{"value":"/ ``` rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":589689,"byte_end":589701,"line_start":113,"line_end":113,"column_start":5,"column_end":17}},{"value":"/ # use chrono::{DateTime, DurationRound, Duration, TimeZone, Utc};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":589706,"byte_end":589775,"line_start":114,"line_end":114,"column_start":5,"column_end":74}},{"value":"/ let dt = Utc.ymd(2018, 1, 11).and_hms_milli(12, 0, 0, 154);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":589780,"byte_end":589843,"line_start":115,"line_end":115,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":589848,"byte_end":589863,"line_start":116,"line_end":116,"column_start":5,"column_end":20}},{"value":"/     dt.duration_round(Duration::milliseconds(10)).unwrap().to_string(),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":589868,"byte_end":589943,"line_start":117,"line_end":117,"column_start":5,"column_end":80}},{"value":"/     \"2018-01-11 12:00:00.150 UTC\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":589948,"byte_end":589985,"line_start":118,"line_end":118,"column_start":5,"column_end":42}},{"value":"/ );","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":589990,"byte_end":589996,"line_start":119,"line_end":119,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":590001,"byte_end":590016,"line_start":120,"line_end":120,"column_start":5,"column_end":20}},{"value":"/     dt.duration_round(Duration::days(1)).unwrap().to_string(),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":590021,"byte_end":590087,"line_start":121,"line_end":121,"column_start":5,"column_end":71}},{"value":"/     \"2018-01-12 00:00:00 UTC\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":590092,"byte_end":590125,"line_start":122,"line_end":122,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":590130,"byte_end":590136,"line_start":123,"line_end":123,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":590141,"byte_end":590148,"line_start":124,"line_end":124,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1897},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":590768,"byte_end":590782,"line_start":142,"line_end":142,"column_start":8,"column_end":22},"name":"duration_trunc","qualname":"::round::DurationRound::duration_trunc","value":"fn duration_trunc(Self, Duration) -> Result<Self, Self::Err>","parent":{"krate":0,"index":1894},"children":[],"decl_id":null,"docs":" Return a copy truncated by Duration.","sig":null,"attributes":[{"value":"/ Return a copy truncated by Duration.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":590230,"byte_end":590270,"line_start":127,"line_end":127,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":590275,"byte_end":590278,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":590283,"byte_end":590296,"line_start":129,"line_end":129,"column_start":5,"column_end":18}},{"value":"/ ``` rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":590301,"byte_end":590313,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/ # use chrono::{DateTime, DurationRound, Duration, TimeZone, Utc};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":590318,"byte_end":590387,"line_start":131,"line_end":131,"column_start":5,"column_end":74}},{"value":"/ let dt = Utc.ymd(2018, 1, 11).and_hms_milli(12, 0, 0, 154);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":590392,"byte_end":590455,"line_start":132,"line_end":132,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":590460,"byte_end":590475,"line_start":133,"line_end":133,"column_start":5,"column_end":20}},{"value":"/     dt.duration_trunc(Duration::milliseconds(10)).unwrap().to_string(),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":590480,"byte_end":590555,"line_start":134,"line_end":134,"column_start":5,"column_end":80}},{"value":"/     \"2018-01-11 12:00:00.150 UTC\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":590560,"byte_end":590597,"line_start":135,"line_end":135,"column_start":5,"column_end":42}},{"value":"/ );","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":590602,"byte_end":590608,"line_start":136,"line_end":136,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":590613,"byte_end":590628,"line_start":137,"line_end":137,"column_start":5,"column_end":20}},{"value":"/     dt.duration_trunc(Duration::days(1)).unwrap().to_string(),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":590633,"byte_end":590699,"line_start":138,"line_end":138,"column_start":5,"column_end":71}},{"value":"/     \"2018-01-11 00:00:00 UTC\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":590704,"byte_end":590737,"line_start":139,"line_end":139,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":590742,"byte_end":590748,"line_start":140,"line_end":140,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":590753,"byte_end":590760,"line_start":141,"line_end":141,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1902},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":591076,"byte_end":591090,"line_start":151,"line_end":151,"column_start":8,"column_end":22},"name":"duration_round","qualname":"<DateTime<Tz> as round::DurationRound>::duration_round","value":"fn duration_round(Self, Duration) -> Result<Self, Self::Err>","parent":{"krate":0,"index":1894},"children":[],"decl_id":{"krate":0,"index":1896},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1903},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":591219,"byte_end":591233,"line_start":155,"line_end":155,"column_start":8,"column_end":22},"name":"duration_trunc","qualname":"<DateTime<Tz> as round::DurationRound>::duration_trunc","value":"fn duration_trunc(Self, Duration) -> Result<Self, Self::Err>","parent":{"krate":0,"index":1894},"children":[],"decl_id":{"krate":0,"index":1897},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1906},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":591434,"byte_end":591448,"line_start":163,"line_end":163,"column_start":8,"column_end":22},"name":"duration_round","qualname":"<NaiveDateTime as round::DurationRound>::duration_round","value":"fn duration_round(Self, Duration) -> Result<Self, Self::Err>","parent":{"krate":0,"index":1894},"children":[],"decl_id":{"krate":0,"index":1896},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1907},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":591563,"byte_end":591577,"line_start":167,"line_end":167,"column_start":8,"column_end":22},"name":"duration_trunc","qualname":"<NaiveDateTime as round::DurationRound>::duration_trunc","value":"fn duration_trunc(Self, Duration) -> Result<Self, Self::Err>","parent":{"krate":0,"index":1894},"children":[],"decl_id":{"krate":0,"index":1897},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2614},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":594385,"byte_end":594409,"line_start":254,"line_end":254,"column_start":5,"column_end":29},"name":"DurationExceedsTimestamp","qualname":"::round::RoundingError::DurationExceedsTimestamp","value":"RoundingError::DurationExceedsTimestamp","parent":{"krate":0,"index":2613},"children":[],"decl_id":null,"docs":" Error when the Duration exceeds the Duration from or until the Unix epoch.","sig":null,"attributes":[{"value":"/ Error when the Duration exceeds the Duration from or until the Unix epoch.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":593970,"byte_end":594048,"line_start":243,"line_end":243,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":594053,"byte_end":594056,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ ``` rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":594061,"byte_end":594073,"line_start":245,"line_end":245,"column_start":5,"column_end":17}},{"value":"/ # use chrono::{DateTime, DurationRound, Duration, RoundingError, TimeZone, Utc};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":594078,"byte_end":594162,"line_start":246,"line_end":246,"column_start":5,"column_end":89}},{"value":"/ let dt = Utc.ymd(1970, 12, 12).and_hms(0, 0, 0);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":594167,"byte_end":594219,"line_start":247,"line_end":247,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":594224,"byte_end":594227,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":594232,"byte_end":594247,"line_start":249,"line_end":249,"column_start":5,"column_end":20}},{"value":"/     dt.duration_round(Duration::days(365)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":594252,"byte_end":594299,"line_start":250,"line_end":250,"column_start":5,"column_end":52}},{"value":"/     Err(RoundingError::DurationExceedsTimestamp),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":594304,"byte_end":594357,"line_start":251,"line_end":251,"column_start":5,"column_end":58}},{"value":"/ );","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":594362,"byte_end":594368,"line_start":252,"line_end":252,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":594373,"byte_end":594380,"line_start":253,"line_end":253,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2616},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":594836,"byte_end":594856,"line_start":267,"line_end":267,"column_start":5,"column_end":25},"name":"DurationExceedsLimit","qualname":"::round::RoundingError::DurationExceedsLimit","value":"RoundingError::DurationExceedsLimit","parent":{"krate":0,"index":2613},"children":[],"decl_id":null,"docs":" Error when `Duration.num_nanoseconds` exceeds the limit.","sig":null,"attributes":[{"value":"/ Error when `Duration.num_nanoseconds` exceeds the limit.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":594416,"byte_end":594476,"line_start":256,"line_end":256,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":594481,"byte_end":594484,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ ``` rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":594489,"byte_end":594501,"line_start":258,"line_end":258,"column_start":5,"column_end":17}},{"value":"/ # use chrono::{DateTime, DurationRound, Duration, RoundingError, TimeZone, Utc};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":594506,"byte_end":594590,"line_start":259,"line_end":259,"column_start":5,"column_end":89}},{"value":"/ let dt = Utc.ymd(2260, 12, 31).and_hms_nano(23, 59, 59, 1_75_500_000);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":594595,"byte_end":594669,"line_start":260,"line_end":260,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":594674,"byte_end":594677,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":594682,"byte_end":594697,"line_start":262,"line_end":262,"column_start":5,"column_end":20}},{"value":"/     dt.duration_round(Duration::days(300 * 365)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":594702,"byte_end":594755,"line_start":263,"line_end":263,"column_start":5,"column_end":58}},{"value":"/     Err(RoundingError::DurationExceedsLimit)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":594760,"byte_end":594808,"line_start":264,"line_end":264,"column_start":5,"column_end":53}},{"value":"/ );","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":594813,"byte_end":594819,"line_start":265,"line_end":265,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":594824,"byte_end":594831,"line_start":266,"line_end":266,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2618},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":595221,"byte_end":595242,"line_start":277,"line_end":277,"column_start":5,"column_end":26},"name":"TimestampExceedsLimit","qualname":"::round::RoundingError::TimestampExceedsLimit","value":"RoundingError::TimestampExceedsLimit","parent":{"krate":0,"index":2613},"children":[],"decl_id":null,"docs":" Error when `DateTime.timestamp_nanos` exceeds the limit.","sig":null,"attributes":[{"value":"/ Error when `DateTime.timestamp_nanos` exceeds the limit.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":594863,"byte_end":594923,"line_start":269,"line_end":269,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":594928,"byte_end":594931,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ ``` rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":594936,"byte_end":594948,"line_start":271,"line_end":271,"column_start":5,"column_end":17}},{"value":"/ # use chrono::{DateTime, DurationRound, Duration, RoundingError, TimeZone, Utc};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":594953,"byte_end":595037,"line_start":272,"line_end":272,"column_start":5,"column_end":89}},{"value":"/ let dt = Utc.ymd(2300, 12, 12).and_hms(0, 0, 0);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":595042,"byte_end":595094,"line_start":273,"line_end":273,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":595099,"byte_end":595102,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(dt.duration_round(Duration::days(1)), Err(RoundingError::TimestampExceedsLimit),);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":595107,"byte_end":595204,"line_start":275,"line_end":275,"column_start":5,"column_end":102}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":595209,"byte_end":595216,"line_start":276,"line_end":276,"column_start":5,"column_end":12}}]},{"kind":"Enum","id":{"krate":0,"index":2613},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":593950,"byte_end":593963,"line_start":242,"line_end":242,"column_start":10,"column_end":23},"name":"RoundingError","qualname":"::round::RoundingError","value":"enum RoundingError {\n    DurationExceedsTimestamp,\n    DurationExceedsLimit,\n    TimestampExceedsLimit,\n}","parent":null,"children":[{"krate":0,"index":2614},{"krate":0,"index":2616},{"krate":0,"index":2618}],"decl_id":null,"docs":" An error from rounding by `Duration`","sig":null,"attributes":[{"value":"/ An error from rounding by `Duration`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":593824,"byte_end":593864,"line_start":238,"line_end":238,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":593865,"byte_end":593868,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ See: [`DurationRound`]","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":593869,"byte_end":593895,"line_start":240,"line_end":240,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1913},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":595292,"byte_end":595295,"line_start":281,"line_end":281,"column_start":8,"column_end":11},"name":"fmt","qualname":"<RoundingError as core::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2632},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":608297,"byte_end":608300,"line_start":16,"line_end":16,"column_start":5,"column_end":8},"name":"Mon","qualname":"::weekday::Weekday::Mon","value":"Weekday::Mon","parent":{"krate":0,"index":2631},"children":[],"decl_id":null,"docs":" Monday.\n","sig":null,"attributes":[{"value":"/ Monday.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":608281,"byte_end":608292,"line_start":15,"line_end":15,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2635},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":608327,"byte_end":608330,"line_start":18,"line_end":18,"column_start":5,"column_end":8},"name":"Tue","qualname":"::weekday::Weekday::Tue","value":"Weekday::Tue","parent":{"krate":0,"index":2631},"children":[],"decl_id":null,"docs":" Tuesday.\n","sig":null,"attributes":[{"value":"/ Tuesday.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":608310,"byte_end":608322,"line_start":17,"line_end":17,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2638},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":608359,"byte_end":608362,"line_start":20,"line_end":20,"column_start":5,"column_end":8},"name":"Wed","qualname":"::weekday::Weekday::Wed","value":"Weekday::Wed","parent":{"krate":0,"index":2631},"children":[],"decl_id":null,"docs":" Wednesday.\n","sig":null,"attributes":[{"value":"/ Wednesday.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":608340,"byte_end":608354,"line_start":19,"line_end":19,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2641},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":608390,"byte_end":608393,"line_start":22,"line_end":22,"column_start":5,"column_end":8},"name":"Thu","qualname":"::weekday::Weekday::Thu","value":"Weekday::Thu","parent":{"krate":0,"index":2631},"children":[],"decl_id":null,"docs":" Thursday.\n","sig":null,"attributes":[{"value":"/ Thursday.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":608372,"byte_end":608385,"line_start":21,"line_end":21,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2644},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":608419,"byte_end":608422,"line_start":24,"line_end":24,"column_start":5,"column_end":8},"name":"Fri","qualname":"::weekday::Weekday::Fri","value":"Weekday::Fri","parent":{"krate":0,"index":2631},"children":[],"decl_id":null,"docs":" Friday.\n","sig":null,"attributes":[{"value":"/ Friday.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":608403,"byte_end":608414,"line_start":23,"line_end":23,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2647},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":608450,"byte_end":608453,"line_start":26,"line_end":26,"column_start":5,"column_end":8},"name":"Sat","qualname":"::weekday::Weekday::Sat","value":"Weekday::Sat","parent":{"krate":0,"index":2631},"children":[],"decl_id":null,"docs":" Saturday.\n","sig":null,"attributes":[{"value":"/ Saturday.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":608432,"byte_end":608445,"line_start":25,"line_end":25,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2650},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":608479,"byte_end":608482,"line_start":28,"line_end":28,"column_start":5,"column_end":8},"name":"Sun","qualname":"::weekday::Weekday::Sun","value":"Weekday::Sun","parent":{"krate":0,"index":2631},"children":[],"decl_id":null,"docs":" Sunday.\n","sig":null,"attributes":[{"value":"/ Sunday.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":608463,"byte_end":608474,"line_start":27,"line_end":27,"column_start":5,"column_end":16}}]},{"kind":"Enum","id":{"krate":0,"index":2631},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":608267,"byte_end":608274,"line_start":14,"line_end":14,"column_start":10,"column_end":17},"name":"Weekday","qualname":"::weekday::Weekday","value":"enum Weekday { Mon = , Tue = , Wed = , Thu = , Fri = , Sat = , Sun = , }","parent":null,"children":[{"krate":0,"index":2632},{"krate":0,"index":2635},{"krate":0,"index":2638},{"krate":0,"index":2641},{"krate":0,"index":2644},{"krate":0,"index":2647},{"krate":0,"index":2650}],"decl_id":null,"docs":" The day of week.","sig":null,"attributes":[{"value":"/ The day of week.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":607801,"byte_end":607821,"line_start":6,"line_end":6,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":607822,"byte_end":607825,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ The order of the days of week depends on the context.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":607826,"byte_end":607883,"line_start":8,"line_end":8,"column_start":1,"column_end":58}},{"value":"/ (This is why this type does *not* implement `PartialOrd` or `Ord` traits.)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":607884,"byte_end":607962,"line_start":9,"line_end":9,"column_start":1,"column_end":79}},{"value":"/ One should prefer `*_from_monday` or `*_from_sunday` methods to get the correct result.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":607963,"byte_end":608054,"line_start":10,"line_end":10,"column_start":1,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1929},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":608801,"byte_end":608805,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"succ","qualname":"<Weekday>::succ","value":"fn succ<'_>(&'_ Self) -> Weekday","parent":null,"children":[],"decl_id":null,"docs":" The next day in the week.","sig":null,"attributes":[{"value":"/ The next day in the week.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":608510,"byte_end":608539,"line_start":32,"line_end":32,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":608544,"byte_end":608547,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ `w`:        | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":608552,"byte_end":608623,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ ----------- | ----- | ----- | ----- | ----- | ----- | ----- | -----","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":608628,"byte_end":608699,"line_start":35,"line_end":35,"column_start":5,"column_end":76}},{"value":"/ `w.succ()`: | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun` | `Mon`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":608704,"byte_end":608775,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":608780,"byte_end":608789,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1930},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":609458,"byte_end":609462,"line_start":56,"line_end":56,"column_start":12,"column_end":16},"name":"pred","qualname":"<Weekday>::pred","value":"fn pred<'_>(&'_ Self) -> Weekday","parent":null,"children":[],"decl_id":null,"docs":" The previous day in the week.","sig":null,"attributes":[{"value":"/ The previous day in the week.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":609163,"byte_end":609196,"line_start":50,"line_end":50,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":609201,"byte_end":609204,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ `w`:        | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":609209,"byte_end":609280,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ ----------- | ----- | ----- | ----- | ----- | ----- | ----- | -----","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":609285,"byte_end":609356,"line_start":53,"line_end":53,"column_start":5,"column_end":76}},{"value":"/ `w.pred()`: | `Sun` | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":609361,"byte_end":609432,"line_start":54,"line_end":54,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":609437,"byte_end":609446,"line_start":55,"line_end":55,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1931},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":610204,"byte_end":610222,"line_start":74,"line_end":74,"column_start":12,"column_end":30},"name":"number_from_monday","qualname":"<Weekday>::number_from_monday","value":"fn number_from_monday<'_>(&'_ Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns a day-of-week number starting from Monday = 1. (ISO 8601 weekday number)","sig":null,"attributes":[{"value":"/ Returns a day-of-week number starting from Monday = 1. (ISO 8601 weekday number)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":609820,"byte_end":609904,"line_start":68,"line_end":68,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":609909,"byte_end":609912,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ `w`:                      | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":609917,"byte_end":610002,"line_start":70,"line_end":70,"column_start":5,"column_end":90}},{"value":"/ ------------------------- | ----- | ----- | ----- | ----- | ----- | ----- | -----","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":610007,"byte_end":610092,"line_start":71,"line_end":71,"column_start":5,"column_end":90}},{"value":"/ `w.number_from_monday()`: | 1     | 2     | 3     | 4     | 5     | 6     | 7","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":610097,"byte_end":610178,"line_start":72,"line_end":72,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":610183,"byte_end":610192,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1932},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":610857,"byte_end":610875,"line_start":92,"line_end":92,"column_start":12,"column_end":30},"name":"number_from_sunday","qualname":"<Weekday>::number_from_sunday","value":"fn number_from_sunday<'_>(&'_ Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns a day-of-week number starting from Sunday = 1.","sig":null,"attributes":[{"value":"/ Returns a day-of-week number starting from Sunday = 1.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":610499,"byte_end":610557,"line_start":86,"line_end":86,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":610562,"byte_end":610565,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ `w`:                      | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":610570,"byte_end":610655,"line_start":88,"line_end":88,"column_start":5,"column_end":90}},{"value":"/ ------------------------- | ----- | ----- | ----- | ----- | ----- | ----- | -----","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":610660,"byte_end":610745,"line_start":89,"line_end":89,"column_start":5,"column_end":90}},{"value":"/ `w.number_from_sunday()`: | 2     | 3     | 4     | 5     | 6     | 7     | 1","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":610750,"byte_end":610831,"line_start":90,"line_end":90,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":610836,"byte_end":610845,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1933},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":611516,"byte_end":611536,"line_start":110,"line_end":110,"column_start":12,"column_end":32},"name":"num_days_from_monday","qualname":"<Weekday>::num_days_from_monday","value":"fn num_days_from_monday<'_>(&'_ Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns a day-of-week number starting from Monday = 0.","sig":null,"attributes":[{"value":"/ Returns a day-of-week number starting from Monday = 0.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":611152,"byte_end":611210,"line_start":104,"line_end":104,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":611215,"byte_end":611218,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ `w`:                        | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":611223,"byte_end":611310,"line_start":106,"line_end":106,"column_start":5,"column_end":92}},{"value":"/ --------------------------- | ----- | ----- | ----- | ----- | ----- | ----- | -----","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":611315,"byte_end":611402,"line_start":107,"line_end":107,"column_start":5,"column_end":92}},{"value":"/ `w.num_days_from_monday()`: | 0     | 1     | 2     | 3     | 4     | 5     | 6","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":611407,"byte_end":611490,"line_start":108,"line_end":108,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":611495,"byte_end":611504,"line_start":109,"line_end":109,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1934},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":612177,"byte_end":612197,"line_start":128,"line_end":128,"column_start":12,"column_end":32},"name":"num_days_from_sunday","qualname":"<Weekday>::num_days_from_sunday","value":"fn num_days_from_sunday<'_>(&'_ Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns a day-of-week number starting from Sunday = 0.","sig":null,"attributes":[{"value":"/ Returns a day-of-week number starting from Sunday = 0.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":611813,"byte_end":611871,"line_start":122,"line_end":122,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":611876,"byte_end":611879,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ `w`:                        | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":611884,"byte_end":611971,"line_start":124,"line_end":124,"column_start":5,"column_end":92}},{"value":"/ --------------------------- | ----- | ----- | ----- | ----- | ----- | ----- | -----","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":611976,"byte_end":612063,"line_start":125,"line_end":125,"column_start":5,"column_end":92}},{"value":"/ `w.num_days_from_sunday()`: | 1     | 2     | 3     | 4     | 5     | 6     | 0","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":612068,"byte_end":612151,"line_start":126,"line_end":126,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":612156,"byte_end":612165,"line_start":127,"line_end":127,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1936},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":612511,"byte_end":612514,"line_start":142,"line_end":142,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Weekday as core::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1938},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":613180,"byte_end":613188,"line_start":160,"line_end":160,"column_start":8,"column_end":16},"name":"from_i64","qualname":"<Weekday as num_traits::FromPrimitive>::from_i64","value":"fn from_i64(i64) -> Option<Weekday>","parent":{"krate":5,"index":333},"children":[],"decl_id":{"krate":5,"index":338},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":613163,"byte_end":613172,"line_start":159,"line_end":159,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1939},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":613556,"byte_end":613564,"line_start":174,"line_end":174,"column_start":8,"column_end":16},"name":"from_u64","qualname":"<Weekday as num_traits::FromPrimitive>::from_u64","value":"fn from_u64(u64) -> Option<Weekday>","parent":{"krate":5,"index":333},"children":[],"decl_id":{"krate":5,"index":344},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":613539,"byte_end":613548,"line_start":173,"line_end":173,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2667},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":614024,"byte_end":614041,"line_start":190,"line_end":190,"column_start":12,"column_end":29},"name":"ParseWeekdayError","qualname":"::weekday::ParseWeekdayError","value":"ParseWeekdayError {  }","parent":null,"children":[{"krate":0,"index":2668}],"decl_id":null,"docs":" An error resulting from reading `Weekday` value with `FromStr`.\n","sig":null,"attributes":[{"value":"/ An error resulting from reading `Weekday` value with `FromStr`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":613913,"byte_end":613980,"line_start":188,"line_end":188,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1941},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":614196,"byte_end":614199,"line_start":198,"line_end":198,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ParseWeekdayError as core::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1943},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":614352,"byte_end":614355,"line_start":204,"line_end":204,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ParseWeekdayError as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10288},"children":[],"decl_id":{"krate":1,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2679},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":618519,"byte_end":618526,"line_start":35,"line_end":35,"column_start":5,"column_end":12},"name":"January","qualname":"::month::Month::January","value":"Month::January","parent":{"krate":0,"index":2678},"children":[],"decl_id":null,"docs":" January\n","sig":null,"attributes":[{"value":"/ January","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":618503,"byte_end":618514,"line_start":34,"line_end":34,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2682},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":618553,"byte_end":618561,"line_start":37,"line_end":37,"column_start":5,"column_end":13},"name":"February","qualname":"::month::Month::February","value":"Month::February","parent":{"krate":0,"index":2678},"children":[],"decl_id":null,"docs":" February\n","sig":null,"attributes":[{"value":"/ February","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":618536,"byte_end":618548,"line_start":36,"line_end":36,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2685},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":618585,"byte_end":618590,"line_start":39,"line_end":39,"column_start":5,"column_end":10},"name":"March","qualname":"::month::Month::March","value":"Month::March","parent":{"krate":0,"index":2678},"children":[],"decl_id":null,"docs":" March\n","sig":null,"attributes":[{"value":"/ March","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":618571,"byte_end":618580,"line_start":38,"line_end":38,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2688},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":618614,"byte_end":618619,"line_start":41,"line_end":41,"column_start":5,"column_end":10},"name":"April","qualname":"::month::Month::April","value":"Month::April","parent":{"krate":0,"index":2678},"children":[],"decl_id":null,"docs":" April\n","sig":null,"attributes":[{"value":"/ April","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":618600,"byte_end":618609,"line_start":40,"line_end":40,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2691},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":618641,"byte_end":618644,"line_start":43,"line_end":43,"column_start":5,"column_end":8},"name":"May","qualname":"::month::Month::May","value":"Month::May","parent":{"krate":0,"index":2678},"children":[],"decl_id":null,"docs":" May\n","sig":null,"attributes":[{"value":"/ May","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":618629,"byte_end":618636,"line_start":42,"line_end":42,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2694},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":618667,"byte_end":618671,"line_start":45,"line_end":45,"column_start":5,"column_end":9},"name":"June","qualname":"::month::Month::June","value":"Month::June","parent":{"krate":0,"index":2678},"children":[],"decl_id":null,"docs":" June\n","sig":null,"attributes":[{"value":"/ June","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":618654,"byte_end":618662,"line_start":44,"line_end":44,"column_start":5,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2697},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":618694,"byte_end":618698,"line_start":47,"line_end":47,"column_start":5,"column_end":9},"name":"July","qualname":"::month::Month::July","value":"Month::July","parent":{"krate":0,"index":2678},"children":[],"decl_id":null,"docs":" July\n","sig":null,"attributes":[{"value":"/ July","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":618681,"byte_end":618689,"line_start":46,"line_end":46,"column_start":5,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2700},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":618723,"byte_end":618729,"line_start":49,"line_end":49,"column_start":5,"column_end":11},"name":"August","qualname":"::month::Month::August","value":"Month::August","parent":{"krate":0,"index":2678},"children":[],"decl_id":null,"docs":" August\n","sig":null,"attributes":[{"value":"/ August","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":618708,"byte_end":618718,"line_start":48,"line_end":48,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2703},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":618757,"byte_end":618766,"line_start":51,"line_end":51,"column_start":5,"column_end":14},"name":"September","qualname":"::month::Month::September","value":"Month::September","parent":{"krate":0,"index":2678},"children":[],"decl_id":null,"docs":" September\n","sig":null,"attributes":[{"value":"/ September","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":618739,"byte_end":618752,"line_start":50,"line_end":50,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2706},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":618792,"byte_end":618799,"line_start":53,"line_end":53,"column_start":5,"column_end":12},"name":"October","qualname":"::month::Month::October","value":"Month::October","parent":{"krate":0,"index":2678},"children":[],"decl_id":null,"docs":" October\n","sig":null,"attributes":[{"value":"/ October","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":618776,"byte_end":618787,"line_start":52,"line_end":52,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2709},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":618826,"byte_end":618834,"line_start":55,"line_end":55,"column_start":5,"column_end":13},"name":"November","qualname":"::month::Month::November","value":"Month::November","parent":{"krate":0,"index":2678},"children":[],"decl_id":null,"docs":" November\n","sig":null,"attributes":[{"value":"/ November","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":618809,"byte_end":618821,"line_start":54,"line_end":54,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2712},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":618862,"byte_end":618870,"line_start":57,"line_end":57,"column_start":5,"column_end":13},"name":"December","qualname":"::month::Month::December","value":"Month::December","parent":{"krate":0,"index":2678},"children":[],"decl_id":null,"docs":" December\n","sig":null,"attributes":[{"value":"/ December","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":618845,"byte_end":618857,"line_start":56,"line_end":56,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":2678},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":618491,"byte_end":618496,"line_start":33,"line_end":33,"column_start":10,"column_end":15},"name":"Month","qualname":"::month::Month","value":"enum Month {\n    January = ,\n    February = ,\n    March = ,\n    April = ,\n    May = ,\n    June = ,\n    July = ,\n    August = ,\n    September = ,\n    October = ,\n    November = ,\n    December = ,\n}","parent":null,"children":[{"krate":0,"index":2679},{"krate":0,"index":2682},{"krate":0,"index":2685},{"krate":0,"index":2688},{"krate":0,"index":2691},{"krate":0,"index":2694},{"krate":0,"index":2697},{"krate":0,"index":2700},{"krate":0,"index":2703},{"krate":0,"index":2706},{"krate":0,"index":2709},{"krate":0,"index":2712}],"decl_id":null,"docs":" The month of the year.","sig":null,"attributes":[{"value":"/ The month of the year.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":617306,"byte_end":617332,"line_start":6,"line_end":6,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":617333,"byte_end":617336,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This enum is just a convenience implementation.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":617337,"byte_end":617388,"line_start":8,"line_end":8,"column_start":1,"column_end":52}},{"value":"/ The month in dates created by DateLike objects does not return this enum.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":617389,"byte_end":617466,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":617467,"byte_end":617470,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ It is possible to convert from a date to a month independently","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":617471,"byte_end":617537,"line_start":11,"line_end":11,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":617538,"byte_end":617545,"line_start":12,"line_end":12,"column_start":1,"column_end":8}},{"value":"/ use num_traits::FromPrimitive;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":617546,"byte_end":617580,"line_start":13,"line_end":13,"column_start":1,"column_end":35}},{"value":"/ use chrono::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":617581,"byte_end":617608,"line_start":14,"line_end":14,"column_start":1,"column_end":28}},{"value":"/ let date = Utc.ymd(2019, 10, 28).and_hms(9, 10, 11);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":617609,"byte_end":617665,"line_start":15,"line_end":15,"column_start":1,"column_end":57}},{"value":"/ // `2019-10-28T09:10:11Z`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":617666,"byte_end":617695,"line_start":16,"line_end":16,"column_start":1,"column_end":30}},{"value":"/ let month = Month::from_u32(date.month());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":617696,"byte_end":617742,"line_start":17,"line_end":17,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(month, Some(Month::October))","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":617743,"byte_end":617786,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":617787,"byte_end":617794,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ Or from a Month to an integer usable by dates","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":617795,"byte_end":617844,"line_start":20,"line_end":20,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":617845,"byte_end":617852,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # use chrono::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":617853,"byte_end":617882,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/ let month = Month::January;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":617883,"byte_end":617914,"line_start":23,"line_end":23,"column_start":1,"column_end":32}},{"value":"/ let dt = Utc.ymd(2019, month.number_from_month(), 28).and_hms(9, 10, 11);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":617915,"byte_end":617992,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ assert_eq!((dt.year(), dt.month(), dt.day()), (2019, 1, 28));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":617993,"byte_end":618058,"line_start":25,"line_end":25,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":618059,"byte_end":618066,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ Allows mapping from and to month, from 1-January to 12-December.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":618067,"byte_end":618135,"line_start":27,"line_end":27,"column_start":1,"column_end":69}},{"value":"/ Can be Serialized/Deserialized with serde","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":618136,"byte_end":618181,"line_start":28,"line_end":28,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1956},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":619147,"byte_end":619151,"line_start":67,"line_end":67,"column_start":12,"column_end":16},"name":"succ","qualname":"<Month>::succ","value":"fn succ<'_>(&'_ Self) -> Month","parent":null,"children":[],"decl_id":null,"docs":" The next month.","sig":null,"attributes":[{"value":"/ The next month.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":618897,"byte_end":618916,"line_start":61,"line_end":61,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":618921,"byte_end":618924,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ `m`:        | `January`  | `February` | `...` | `December`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":618929,"byte_end":618991,"line_start":63,"line_end":63,"column_start":5,"column_end":67}},{"value":"/ ----------- | ---------  | ---------- | --- | ---------","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":618996,"byte_end":619055,"line_start":64,"line_end":64,"column_start":5,"column_end":64}},{"value":"/ `m.succ()`: | `February` | `March`    | `...` | `January`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":619060,"byte_end":619121,"line_start":65,"line_end":65,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":619126,"byte_end":619135,"line_start":66,"line_end":66,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1957},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":620000,"byte_end":620004,"line_start":90,"line_end":90,"column_start":12,"column_end":16},"name":"pred","qualname":"<Month>::pred","value":"fn pred<'_>(&'_ Self) -> Month","parent":null,"children":[],"decl_id":null,"docs":" The previous month.","sig":null,"attributes":[{"value":"/ The previous month.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":619745,"byte_end":619768,"line_start":84,"line_end":84,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":619773,"byte_end":619776,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ `m`:        | `January`  | `February` | `...` | `December`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":619781,"byte_end":619843,"line_start":86,"line_end":86,"column_start":5,"column_end":67}},{"value":"/ ----------- | ---------  | ---------- | --- | ---------","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":619848,"byte_end":619907,"line_start":87,"line_end":87,"column_start":5,"column_end":64}},{"value":"/ `m.pred()`: | `December` | `January`  | `...` | `November`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":619912,"byte_end":619974,"line_start":88,"line_end":88,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":619979,"byte_end":619988,"line_start":89,"line_end":89,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1958},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":620915,"byte_end":620932,"line_start":113,"line_end":113,"column_start":12,"column_end":29},"name":"number_from_month","qualname":"<Month>::number_from_month","value":"fn number_from_month<'_>(&'_ Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns a month-of-year number starting from January = 1.","sig":null,"attributes":[{"value":"/ Returns a month-of-year number starting from January = 1.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":620598,"byte_end":620659,"line_start":107,"line_end":107,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":620664,"byte_end":620667,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ `m`:                     | `January` | `February` | `...` | `December`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":620672,"byte_end":620746,"line_start":109,"line_end":109,"column_start":5,"column_end":79}},{"value":"/ -------------------------| --------- | ---------- | --- | -----","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":620751,"byte_end":620818,"line_start":110,"line_end":110,"column_start":5,"column_end":72}},{"value":"/ `m.number_from_month()`: | 1         | 2          | `...` | 12","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":620823,"byte_end":620889,"line_start":111,"line_end":111,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":620894,"byte_end":620903,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1959},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":621542,"byte_end":621546,"line_start":137,"line_end":137,"column_start":12,"column_end":16},"name":"name","qualname":"<Month>::name","value":"fn name<'_>(&'_ Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Get the name of the month","sig":null,"attributes":[{"value":"/ Get the name of the month","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":621381,"byte_end":621410,"line_start":130,"line_end":130,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":621415,"byte_end":621418,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":621423,"byte_end":621430,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/ use chrono::Month;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":621435,"byte_end":621457,"line_start":133,"line_end":133,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":621462,"byte_end":621465,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Month::January.name(), \"January\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":621470,"byte_end":621518,"line_start":135,"line_end":135,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":621523,"byte_end":621530,"line_start":136,"line_end":136,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1961},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":622539,"byte_end":622547,"line_start":163,"line_end":163,"column_start":8,"column_end":16},"name":"from_u64","qualname":"<Month as num_traits::FromPrimitive>::from_u64","value":"fn from_u64(u64) -> Option<Month>","parent":{"krate":5,"index":333},"children":[],"decl_id":{"krate":5,"index":344},"docs":" Returns an Option<Month> from a i64, assuming a 1-index, January = 1.","sig":null,"attributes":[{"value":"/ Returns an Option<Month> from a i64, assuming a 1-index, January = 1.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":622132,"byte_end":622205,"line_start":156,"line_end":156,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":622210,"byte_end":622213,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ `Month::from_i64(n: i64)`: | `1`                  | `2`                   | ... | `12`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":622218,"byte_end":622308,"line_start":158,"line_end":158,"column_start":5,"column_end":95}},{"value":"/ ---------------------------| -------------------- | --------------------- | ... | -----","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":622313,"byte_end":622404,"line_start":159,"line_end":159,"column_start":5,"column_end":96}},{"value":"/ ``:                        | Some(Month::January) | Some(Month::February) | ... | Some(Month::December)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":622409,"byte_end":622516,"line_start":160,"line_end":160,"column_start":5,"column_end":112}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":622522,"byte_end":622531,"line_start":162,"line_end":162,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1962},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":622636,"byte_end":622644,"line_start":168,"line_end":168,"column_start":8,"column_end":16},"name":"from_i64","qualname":"<Month as num_traits::FromPrimitive>::from_i64","value":"fn from_i64(i64) -> Option<Month>","parent":{"krate":5,"index":333},"children":[],"decl_id":{"krate":5,"index":338},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":622619,"byte_end":622628,"line_start":167,"line_end":167,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1963},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":622733,"byte_end":622741,"line_start":173,"line_end":173,"column_start":8,"column_end":16},"name":"from_u32","qualname":"<Month as num_traits::FromPrimitive>::from_u32","value":"fn from_u32(u32) -> Option<Month>","parent":{"krate":5,"index":333},"children":[],"decl_id":{"krate":5,"index":343},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":622716,"byte_end":622725,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2729},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":623398,"byte_end":623404,"line_start":194,"line_end":194,"column_start":12,"column_end":18},"name":"Months","qualname":"::month::Months","value":"","parent":null,"children":[],"decl_id":null,"docs":" A duration in calendar months\n","sig":null,"attributes":[{"value":"/ A duration in calendar months","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":623290,"byte_end":623323,"line_start":192,"line_end":192,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1965},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":623505,"byte_end":623508,"line_start":198,"line_end":198,"column_start":12,"column_end":15},"name":"new","qualname":"<Months>::new","value":"fn new(u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `Months` from a number of months\n","sig":null,"attributes":[{"value":"/ Construct a new `Months` from a number of months","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":623441,"byte_end":623493,"line_start":197,"line_end":197,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":2749},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":623667,"byte_end":623682,"line_start":205,"line_end":205,"column_start":12,"column_end":27},"name":"ParseMonthError","qualname":"::month::ParseMonthError","value":"ParseMonthError {  }","parent":null,"children":[{"krate":0,"index":2750}],"decl_id":null,"docs":" An error resulting from reading `<Month>` value with `FromStr`.\n","sig":null,"attributes":[{"value":"/ An error resulting from reading `<Month>` value with `FromStr`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":623556,"byte_end":623623,"line_start":203,"line_end":203,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1967},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":623760,"byte_end":623763,"line_start":210,"line_end":210,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ParseMonthError as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10288},"children":[],"decl_id":{"krate":1,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1986},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":627976,"byte_end":627984,"line_start":4,"line_end":4,"column_start":11,"column_end":19},"name":"Datelike","qualname":"::traits::Datelike","value":"Datelike: Sized","parent":null,"children":[{"krate":0,"index":1987},{"krate":0,"index":1988},{"krate":0,"index":1989},{"krate":0,"index":1990},{"krate":0,"index":1991},{"krate":0,"index":1992},{"krate":0,"index":1993},{"krate":0,"index":1994},{"krate":0,"index":1995},{"krate":0,"index":1996},{"krate":0,"index":1997},{"krate":0,"index":1998},{"krate":0,"index":1999},{"krate":0,"index":2000},{"krate":0,"index":2001},{"krate":0,"index":2002},{"krate":0,"index":2003},{"krate":0,"index":2004}],"decl_id":null,"docs":" The common set of methods for date component.\n","sig":null,"attributes":[{"value":"/ The common set of methods for date component.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":627916,"byte_end":627965,"line_start":3,"line_end":3,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1987},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":628102,"byte_end":628106,"line_start":6,"line_end":6,"column_start":8,"column_end":12},"name":"year","qualname":"::traits::Datelike::year","value":"fn year<'_>(&'_ Self) -> i32","parent":{"krate":0,"index":1986},"children":[],"decl_id":null,"docs":" Returns the year number in the [calendar date](./naive/struct.NaiveDate.html#calendar-date).\n","sig":null,"attributes":[{"value":"/ Returns the year number in the [calendar date](./naive/struct.NaiveDate.html#calendar-date).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":627998,"byte_end":628094,"line_start":5,"line_end":5,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":1988},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":628315,"byte_end":628322,"line_start":11,"line_end":11,"column_start":8,"column_end":15},"name":"year_ce","qualname":"::traits::Datelike::year_ce","value":"fn year_ce<'_>(&'_ Self) -> (bool, u32)","parent":{"krate":0,"index":1986},"children":[],"decl_id":null,"docs":" Returns the absolute year number starting from 1 with a boolean flag,\n which is false when the year predates the epoch (BCE/BC) and true otherwise (CE/AD).\n","sig":null,"attributes":[{"value":"/ Returns the absolute year number starting from 1 with a boolean flag,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":628127,"byte_end":628200,"line_start":8,"line_end":8,"column_start":5,"column_end":78}},{"value":"/ which is false when the year predates the epoch (BCE/BC) and true otherwise (CE/AD).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":628205,"byte_end":628293,"line_start":9,"line_end":9,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":628298,"byte_end":628307,"line_start":10,"line_end":10,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1989},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":628617,"byte_end":628622,"line_start":23,"line_end":23,"column_start":8,"column_end":13},"name":"month","qualname":"::traits::Datelike::month","value":"fn month<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":1986},"children":[],"decl_id":null,"docs":" Returns the month number starting from 1.","sig":null,"attributes":[{"value":"/ Returns the month number starting from 1.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":628510,"byte_end":628555,"line_start":20,"line_end":20,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":628560,"byte_end":628563,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 1 to 12.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":628568,"byte_end":628609,"line_start":22,"line_end":22,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1990},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":628750,"byte_end":628756,"line_start":28,"line_end":28,"column_start":8,"column_end":14},"name":"month0","qualname":"::traits::Datelike::month0","value":"fn month0<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":1986},"children":[],"decl_id":null,"docs":" Returns the month number starting from 0.","sig":null,"attributes":[{"value":"/ Returns the month number starting from 0.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":628643,"byte_end":628688,"line_start":25,"line_end":25,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":628693,"byte_end":628696,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 11.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":628701,"byte_end":628742,"line_start":27,"line_end":27,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1991},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":628927,"byte_end":628930,"line_start":33,"line_end":33,"column_start":8,"column_end":11},"name":"day","qualname":"::traits::Datelike::day","value":"fn day<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":1986},"children":[],"decl_id":null,"docs":" Returns the day of month starting from 1.","sig":null,"attributes":[{"value":"/ Returns the day of month starting from 1.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":628777,"byte_end":628822,"line_start":30,"line_end":30,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":628827,"byte_end":628830,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 1 to 31. (The last day of month differs by months.)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":628835,"byte_end":628919,"line_start":32,"line_end":32,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1992},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":629101,"byte_end":629105,"line_start":38,"line_end":38,"column_start":8,"column_end":12},"name":"day0","qualname":"::traits::Datelike::day0","value":"fn day0<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":1986},"children":[],"decl_id":null,"docs":" Returns the day of month starting from 0.","sig":null,"attributes":[{"value":"/ Returns the day of month starting from 0.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":628951,"byte_end":628996,"line_start":35,"line_end":35,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":629001,"byte_end":629004,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 30. (The last day of month differs by months.)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":629009,"byte_end":629093,"line_start":37,"line_end":37,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1993},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":629274,"byte_end":629281,"line_start":43,"line_end":43,"column_start":8,"column_end":15},"name":"ordinal","qualname":"::traits::Datelike::ordinal","value":"fn ordinal<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":1986},"children":[],"decl_id":null,"docs":" Returns the day of year starting from 1.","sig":null,"attributes":[{"value":"/ Returns the day of year starting from 1.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":629126,"byte_end":629170,"line_start":40,"line_end":40,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":629175,"byte_end":629178,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 1 to 366. (The last day of year differs by years.)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":629183,"byte_end":629266,"line_start":42,"line_end":42,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1994},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":629450,"byte_end":629458,"line_start":48,"line_end":48,"column_start":8,"column_end":16},"name":"ordinal0","qualname":"::traits::Datelike::ordinal0","value":"fn ordinal0<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":1986},"children":[],"decl_id":null,"docs":" Returns the day of year starting from 0.","sig":null,"attributes":[{"value":"/ Returns the day of year starting from 0.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":629302,"byte_end":629346,"line_start":45,"line_end":45,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":629351,"byte_end":629354,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 365. (The last day of year differs by years.)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":629359,"byte_end":629442,"line_start":47,"line_end":47,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1995},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":629515,"byte_end":629522,"line_start":51,"line_end":51,"column_start":8,"column_end":15},"name":"weekday","qualname":"::traits::Datelike::weekday","value":"fn weekday<'_>(&'_ Self) -> Weekday","parent":{"krate":0,"index":1986},"children":[],"decl_id":null,"docs":" Returns the day of week.\n","sig":null,"attributes":[{"value":"/ Returns the day of week.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":629479,"byte_end":629507,"line_start":50,"line_end":50,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1996},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":629580,"byte_end":629588,"line_start":54,"line_end":54,"column_start":8,"column_end":16},"name":"iso_week","qualname":"::traits::Datelike::iso_week","value":"fn iso_week<'_>(&'_ Self) -> IsoWeek","parent":{"krate":0,"index":1986},"children":[],"decl_id":null,"docs":" Returns the ISO week.\n","sig":null,"attributes":[{"value":"/ Returns the ISO week.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":629547,"byte_end":629572,"line_start":53,"line_end":53,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1997},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":629746,"byte_end":629755,"line_start":59,"line_end":59,"column_start":8,"column_end":17},"name":"with_year","qualname":"::traits::Datelike::with_year","value":"fn with_year<'_>(&'_ Self, i32) -> Option<Self>","parent":{"krate":0,"index":1986},"children":[],"decl_id":null,"docs":" Makes a new value with the year number changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the year number changed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":629613,"byte_end":629664,"line_start":56,"line_end":56,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":629669,"byte_end":629672,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":629677,"byte_end":629738,"line_start":58,"line_end":58,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1998},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":629948,"byte_end":629958,"line_start":64,"line_end":64,"column_start":8,"column_end":18},"name":"with_month","qualname":"::traits::Datelike::with_month","value":"fn with_month<'_>(&'_ Self, u32) -> Option<Self>","parent":{"krate":0,"index":1986},"children":[],"decl_id":null,"docs":" Makes a new value with the month number (starting from 1) changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the month number (starting from 1) changed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":629796,"byte_end":629866,"line_start":61,"line_end":61,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":629871,"byte_end":629874,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":629879,"byte_end":629940,"line_start":63,"line_end":63,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1999},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":630152,"byte_end":630163,"line_start":69,"line_end":69,"column_start":8,"column_end":19},"name":"with_month0","qualname":"::traits::Datelike::with_month0","value":"fn with_month0<'_>(&'_ Self, u32) -> Option<Self>","parent":{"krate":0,"index":1986},"children":[],"decl_id":null,"docs":" Makes a new value with the month number (starting from 0) changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the month number (starting from 0) changed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":630000,"byte_end":630070,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":630075,"byte_end":630078,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":630083,"byte_end":630144,"line_start":68,"line_end":68,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2000},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":630358,"byte_end":630366,"line_start":74,"line_end":74,"column_start":8,"column_end":16},"name":"with_day","qualname":"::traits::Datelike::with_day","value":"fn with_day<'_>(&'_ Self, u32) -> Option<Self>","parent":{"krate":0,"index":1986},"children":[],"decl_id":null,"docs":" Makes a new value with the day of month (starting from 1) changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the day of month (starting from 1) changed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":630206,"byte_end":630276,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":630281,"byte_end":630284,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":630289,"byte_end":630350,"line_start":73,"line_end":73,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2001},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":630558,"byte_end":630567,"line_start":79,"line_end":79,"column_start":8,"column_end":17},"name":"with_day0","qualname":"::traits::Datelike::with_day0","value":"fn with_day0<'_>(&'_ Self, u32) -> Option<Self>","parent":{"krate":0,"index":1986},"children":[],"decl_id":null,"docs":" Makes a new value with the day of month (starting from 0) changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the day of month (starting from 0) changed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":630406,"byte_end":630476,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":630481,"byte_end":630484,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":630489,"byte_end":630550,"line_start":78,"line_end":78,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2002},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":630759,"byte_end":630771,"line_start":84,"line_end":84,"column_start":8,"column_end":20},"name":"with_ordinal","qualname":"::traits::Datelike::with_ordinal","value":"fn with_ordinal<'_>(&'_ Self, u32) -> Option<Self>","parent":{"krate":0,"index":1986},"children":[],"decl_id":null,"docs":" Makes a new value with the day of year (starting from 1) changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the day of year (starting from 1) changed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":630608,"byte_end":630677,"line_start":81,"line_end":81,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":630682,"byte_end":630685,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":630690,"byte_end":630751,"line_start":83,"line_end":83,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2003},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":630966,"byte_end":630979,"line_start":89,"line_end":89,"column_start":8,"column_end":21},"name":"with_ordinal0","qualname":"::traits::Datelike::with_ordinal0","value":"fn with_ordinal0<'_>(&'_ Self, u32) -> Option<Self>","parent":{"krate":0,"index":1986},"children":[],"decl_id":null,"docs":" Makes a new value with the day of year (starting from 0) changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the day of year (starting from 0) changed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":630815,"byte_end":630884,"line_start":86,"line_end":86,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":630889,"byte_end":630892,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":630897,"byte_end":630958,"line_start":88,"line_end":88,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2004},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":631538,"byte_end":631554,"line_start":103,"line_end":103,"column_start":8,"column_end":24},"name":"num_days_from_ce","qualname":"::traits::Datelike::num_days_from_ce","value":"fn num_days_from_ce<'_>(&'_ Self) -> i32","parent":{"krate":0,"index":1986},"children":[],"decl_id":null,"docs":" Counts the days in the proleptic Gregorian calendar, with January 1, Year 1 (CE) as day 1.","sig":null,"attributes":[{"value":"/ Counts the days in the proleptic Gregorian calendar, with January 1, Year 1 (CE) as day 1.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":631024,"byte_end":631118,"line_start":91,"line_end":91,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":631123,"byte_end":631126,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":631131,"byte_end":631145,"line_start":93,"line_end":93,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":631150,"byte_end":631153,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":631158,"byte_end":631165,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":631170,"byte_end":631208,"line_start":96,"line_end":96,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":631213,"byte_end":631216,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(1970, 1, 1).num_days_from_ce(), 719_163);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":631221,"byte_end":631297,"line_start":98,"line_end":98,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2, 1, 1).num_days_from_ce(), 366);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":631302,"byte_end":631371,"line_start":99,"line_end":99,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(NaiveDate::from_ymd(1, 1, 1).num_days_from_ce(), 1);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":631376,"byte_end":631443,"line_start":100,"line_end":100,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(NaiveDate::from_ymd(0, 1, 1).num_days_from_ce(), -365);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":631448,"byte_end":631518,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":631523,"byte_end":631530,"line_start":102,"line_end":102,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":2005},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":632212,"byte_end":632220,"line_start":122,"line_end":122,"column_start":11,"column_end":19},"name":"Timelike","qualname":"::traits::Timelike","value":"Timelike: Sized","parent":null,"children":[{"krate":0,"index":2006},{"krate":0,"index":2007},{"krate":0,"index":2008},{"krate":0,"index":2009},{"krate":0,"index":2010},{"krate":0,"index":2011},{"krate":0,"index":2012},{"krate":0,"index":2013},{"krate":0,"index":2014},{"krate":0,"index":2015}],"decl_id":null,"docs":" The common set of methods for time component.\n","sig":null,"attributes":[{"value":"/ The common set of methods for time component.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":632152,"byte_end":632201,"line_start":121,"line_end":121,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2006},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":632283,"byte_end":632287,"line_start":124,"line_end":124,"column_start":8,"column_end":12},"name":"hour","qualname":"::traits::Timelike::hour","value":"fn hour<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":2005},"children":[],"decl_id":null,"docs":" Returns the hour number from 0 to 23.\n","sig":null,"attributes":[{"value":"/ Returns the hour number from 0 to 23.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":632234,"byte_end":632275,"line_start":123,"line_end":123,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2007},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":632438,"byte_end":632444,"line_start":129,"line_end":129,"column_start":8,"column_end":14},"name":"hour12","qualname":"::traits::Timelike::hour12","value":"fn hour12<'_>(&'_ Self) -> (bool, u32)","parent":{"krate":0,"index":2005},"children":[],"decl_id":null,"docs":" Returns the hour number from 1 to 12 with a boolean flag,\n which is false for AM and true for PM.\n","sig":null,"attributes":[{"value":"/ Returns the hour number from 1 to 12 with a boolean flag,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":632308,"byte_end":632369,"line_start":126,"line_end":126,"column_start":5,"column_end":66}},{"value":"/ which is false for AM and true for PM.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":632374,"byte_end":632416,"line_start":127,"line_end":127,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":632421,"byte_end":632430,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2008},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":632688,"byte_end":632694,"line_start":139,"line_end":139,"column_start":8,"column_end":14},"name":"minute","qualname":"::traits::Timelike::minute","value":"fn minute<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":2005},"children":[],"decl_id":null,"docs":" Returns the minute number from 0 to 59.\n","sig":null,"attributes":[{"value":"/ Returns the minute number from 0 to 59.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":632637,"byte_end":632680,"line_start":138,"line_end":138,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2009},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":632766,"byte_end":632772,"line_start":142,"line_end":142,"column_start":8,"column_end":14},"name":"second","qualname":"::traits::Timelike::second","value":"fn second<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":2005},"children":[],"decl_id":null,"docs":" Returns the second number from 0 to 59.\n","sig":null,"attributes":[{"value":"/ Returns the second number from 0 to 59.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":632715,"byte_end":632758,"line_start":141,"line_end":141,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2010},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":633015,"byte_end":633025,"line_start":147,"line_end":147,"column_start":8,"column_end":18},"name":"nanosecond","qualname":"::traits::Timelike::nanosecond","value":"fn nanosecond<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":2005},"children":[],"decl_id":null,"docs":" Returns the number of nanoseconds since the whole non-leap second.\n The range from 1,000,000,000 to 1,999,999,999 represents\n the [leap second](./naive/struct.NaiveTime.html#leap-second-handling).\n","sig":null,"attributes":[{"value":"/ Returns the number of nanoseconds since the whole non-leap second.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":632793,"byte_end":632863,"line_start":144,"line_end":144,"column_start":5,"column_end":75}},{"value":"/ The range from 1,000,000,000 to 1,999,999,999 represents","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":632868,"byte_end":632928,"line_start":145,"line_end":145,"column_start":5,"column_end":65}},{"value":"/ the [leap second](./naive/struct.NaiveTime.html#leap-second-handling).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":632933,"byte_end":633007,"line_start":146,"line_end":146,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":2011},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":633179,"byte_end":633188,"line_start":152,"line_end":152,"column_start":8,"column_end":17},"name":"with_hour","qualname":"::traits::Timelike::with_hour","value":"fn with_hour<'_>(&'_ Self, u32) -> Option<Self>","parent":{"krate":0,"index":2005},"children":[],"decl_id":null,"docs":" Makes a new value with the hour number changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the hour number changed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":633046,"byte_end":633097,"line_start":149,"line_end":149,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":633102,"byte_end":633105,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":633110,"byte_end":633171,"line_start":151,"line_end":151,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2012},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":633364,"byte_end":633375,"line_start":157,"line_end":157,"column_start":8,"column_end":19},"name":"with_minute","qualname":"::traits::Timelike::with_minute","value":"fn with_minute<'_>(&'_ Self, u32) -> Option<Self>","parent":{"krate":0,"index":2005},"children":[],"decl_id":null,"docs":" Makes a new value with the minute number changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the minute number changed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":633229,"byte_end":633282,"line_start":154,"line_end":154,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":633287,"byte_end":633290,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":633295,"byte_end":633356,"line_start":156,"line_end":156,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2013},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":633662,"byte_end":633673,"line_start":164,"line_end":164,"column_start":8,"column_end":19},"name":"with_second","qualname":"::traits::Timelike::with_second","value":"fn with_second<'_>(&'_ Self, u32) -> Option<Self>","parent":{"krate":0,"index":2005},"children":[],"decl_id":null,"docs":" Makes a new value with the second number changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the second number changed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":633415,"byte_end":633468,"line_start":159,"line_end":159,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":633473,"byte_end":633476,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":633481,"byte_end":633542,"line_start":161,"line_end":161,"column_start":5,"column_end":66}},{"value":"/ As with the [`second`](#tymethod.second) method,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":633547,"byte_end":633599,"line_start":162,"line_end":162,"column_start":5,"column_end":57}},{"value":"/ the input range is restricted to 0 through 59.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":633604,"byte_end":633654,"line_start":163,"line_end":163,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2014},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":634006,"byte_end":634021,"line_start":171,"line_end":171,"column_start":8,"column_end":23},"name":"with_nanosecond","qualname":"::traits::Timelike::with_nanosecond","value":"fn with_nanosecond<'_>(&'_ Self, u32) -> Option<Self>","parent":{"krate":0,"index":2005},"children":[],"decl_id":null,"docs":" Makes a new value with nanoseconds since the whole non-leap second changed.","sig":null,"attributes":[{"value":"/ Makes a new value with nanoseconds since the whole non-leap second changed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":633713,"byte_end":633792,"line_start":166,"line_end":166,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":633797,"byte_end":633800,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":633805,"byte_end":633866,"line_start":168,"line_end":168,"column_start":5,"column_end":66}},{"value":"/ As with the [`nanosecond`](#tymethod.nanosecond) method,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":633871,"byte_end":633931,"line_start":169,"line_end":169,"column_start":5,"column_end":65}},{"value":"/ the input range can exceed 1,000,000,000 for leap seconds.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":633936,"byte_end":633998,"line_start":170,"line_end":170,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2015},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":634150,"byte_end":634175,"line_start":175,"line_end":175,"column_start":8,"column_end":33},"name":"num_seconds_from_midnight","qualname":"::traits::Timelike::num_seconds_from_midnight","value":"fn num_seconds_from_midnight<'_>(&'_ Self) -> u32","parent":{"krate":0,"index":2005},"children":[],"decl_id":null,"docs":" Returns the number of non-leap seconds past the last midnight.\n","sig":null,"attributes":[{"value":"/ Returns the number of non-leap seconds past the last midnight.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":634062,"byte_end":634128,"line_start":173,"line_end":173,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":634133,"byte_end":634142,"line_start":174,"line_end":174,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":25383,"byte_end":25391,"line_start":72,"line_end":72,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":34099,"byte_end":34107,"line_start":311,"line_end":311,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":34395,"byte_end":34403,"line_start":324,"line_end":324,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":34747,"byte_end":34755,"line_start":338,"line_end":338,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":35091,"byte_end":35099,"line_start":352,"line_end":352,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":35530,"byte_end":35538,"line_start":364,"line_end":364,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":36542,"byte_end":36550,"line_start":398,"line_end":398,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":38098,"byte_end":38113,"line_start":441,"line_end":441,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":54657,"byte_end":54661,"line_start":72,"line_end":72,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":63353,"byte_end":63357,"line_start":310,"line_end":310,"column_start":20,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":65449,"byte_end":65453,"line_start":378,"line_end":378,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":257},{"krate":0,"index":259},{"krate":0,"index":261},{"krate":0,"index":263},{"krate":0,"index":265},{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":67288,"byte_end":67292,"line_start":453,"line_end":453,"column_start":29,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":67372,"byte_end":67376,"line_start":454,"line_end":454,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":67481,"byte_end":67485,"line_start":456,"line_end":456,"column_start":60,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":67605,"byte_end":67609,"line_start":462,"line_end":462,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":67652,"byte_end":67656,"line_start":464,"line_end":464,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":67808,"byte_end":67812,"line_start":470,"line_end":470,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":67947,"byte_end":67951,"line_start":476,"line_end":476,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":68090,"byte_end":68094,"line_start":482,"line_end":482,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":68324,"byte_end":68328,"line_start":491,"line_end":491,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":68541,"byte_end":68545,"line_start":498,"line_end":498,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":298},{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":68775,"byte_end":68779,"line_start":507,"line_end":507,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":68989,"byte_end":68993,"line_start":514,"line_end":514,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":69178,"byte_end":69182,"line_start":523,"line_end":523,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":69356,"byte_end":69360,"line_start":529,"line_end":529,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":75925,"byte_end":75933,"line_start":98,"line_end":98,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":86044,"byte_end":86052,"line_start":384,"line_end":384,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":86326,"byte_end":86334,"line_start":397,"line_end":397,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":86569,"byte_end":86577,"line_start":404,"line_end":404,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":87501,"byte_end":87509,"line_start":426,"line_end":426,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":89587,"byte_end":89595,"line_start":480,"line_end":480,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":457},{"krate":0,"index":459},{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":92224,"byte_end":92232,"line_start":542,"line_end":542,"column_start":20,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":97875,"byte_end":97883,"line_start":695,"line_end":695,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":477},{"krate":0,"index":479},{"krate":0,"index":481},{"krate":0,"index":483},{"krate":0,"index":485},{"krate":0,"index":487}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":99740,"byte_end":99748,"line_start":769,"line_end":769,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":497},{"krate":0,"index":499},{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":100788,"byte_end":100796,"line_start":809,"line_end":809,"column_start":29,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":100876,"byte_end":100884,"line_start":810,"line_end":810,"column_start":36,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":100993,"byte_end":101001,"line_start":812,"line_end":812,"column_start":64,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":101133,"byte_end":101141,"line_start":818,"line_end":818,"column_start":27,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":101214,"byte_end":101222,"line_start":820,"line_end":820,"column_start":65,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":101961,"byte_end":101969,"line_start":841,"line_end":841,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":519}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":102116,"byte_end":102124,"line_start":847,"line_end":847,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":102267,"byte_end":102275,"line_start":853,"line_end":853,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":526},{"krate":0,"index":527}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":102517,"byte_end":102525,"line_start":862,"line_end":862,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":102844,"byte_end":102852,"line_start":872,"line_end":872,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":533},{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":103094,"byte_end":103102,"line_start":881,"line_end":881,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":103421,"byte_end":103429,"line_start":891,"line_end":891,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":540},{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":103618,"byte_end":103626,"line_start":900,"line_end":900,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":103800,"byte_end":103808,"line_start":906,"line_end":906,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":104441,"byte_end":104449,"line_start":926,"line_end":926,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":549},{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":118038,"byte_end":118053,"line_start":157,"line_end":157,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":118143,"byte_end":118158,"line_start":163,"line_end":163,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":118264,"byte_end":118279,"line_start":169,"line_end":169,"column_start":13,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":118304,"byte_end":118319,"line_start":171,"line_end":171,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":124301,"byte_end":124311,"line_start":339,"line_end":339,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":611}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":125859,"byte_end":125869,"line_start":385,"line_end":385,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":152907,"byte_end":152913,"line_start":128,"line_end":128,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parse.rs","byte_start":222955,"byte_end":222963,"line_start":478,"line_end":478,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":843},{"krate":0,"index":844}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/strftime.rs","byte_start":273710,"byte_end":273723,"line_start":213,"line_end":213,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":940},{"krate":0,"index":941}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/strftime.rs","byte_start":275110,"byte_end":275123,"line_start":256,"line_end":256,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":947},{"krate":0,"index":948}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":145500,"byte_end":145507,"line_start":873,"line_end":873,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":955},{"krate":0,"index":956}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":147459,"byte_end":147464,"line_start":947,"line_end":947,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":958},{"krate":0,"index":959}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":295259,"byte_end":295268,"line_start":62,"line_end":62,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1074}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":301007,"byte_end":301016,"line_start":207,"line_end":207,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1078},{"krate":0,"index":1079},{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1083},{"krate":0,"index":1084},{"krate":0,"index":1085},{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1090},{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1096},{"krate":0,"index":1098},{"krate":0,"index":1099},{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1107},{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1114},{"krate":0,"index":1115},{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1124}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":342302,"byte_end":342311,"line_start":1280,"line_end":1280,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1126},{"krate":0,"index":1127},{"krate":0,"index":1128},{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1131},{"krate":0,"index":1132},{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1135},{"krate":0,"index":1136},{"krate":0,"index":1137},{"krate":0,"index":1138},{"krate":0,"index":1139},{"krate":0,"index":1140},{"krate":0,"index":1141}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":354527,"byte_end":354536,"line_start":1644,"line_end":1644,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1143},{"krate":0,"index":1144}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":354755,"byte_end":354764,"line_start":1653,"line_end":1653,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1146}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":354891,"byte_end":354900,"line_start":1660,"line_end":1660,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1148},{"krate":0,"index":1149}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":355906,"byte_end":355915,"line_start":1688,"line_end":1688,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1151},{"krate":0,"index":1152}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":357886,"byte_end":357895,"line_start":1736,"line_end":1736,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1154},{"krate":0,"index":1155}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":358114,"byte_end":358123,"line_start":1745,"line_end":1745,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1157}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":359299,"byte_end":359308,"line_start":1776,"line_end":1776,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1159},{"krate":0,"index":1160}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":359661,"byte_end":359682,"line_start":1791,"line_end":1791,"column_start":19,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1162},{"krate":0,"index":1163},{"krate":0,"index":1164}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":360283,"byte_end":360304,"line_start":1811,"line_end":1811,"column_start":28,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":360338,"byte_end":360359,"line_start":1813,"line_end":1813,"column_start":30,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1167}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":360740,"byte_end":360762,"line_start":1829,"line_end":1829,"column_start":19,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1171}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":361289,"byte_end":361311,"line_start":1847,"line_end":1847,"column_start":28,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":361345,"byte_end":361367,"line_start":1849,"line_end":1849,"column_start":30,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1174}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":362679,"byte_end":362688,"line_start":1886,"line_end":1886,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1176}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":363944,"byte_end":363953,"line_start":1921,"line_end":1921,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1178}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":364553,"byte_end":364562,"line_start":1943,"line_end":1943,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1180},{"krate":0,"index":1181}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":365397,"byte_end":365406,"line_start":1974,"line_end":1974,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1184}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":400945,"byte_end":400958,"line_start":81,"line_end":81,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1281},{"krate":0,"index":1282},{"krate":0,"index":1283},{"krate":0,"index":1284},{"krate":0,"index":1286},{"krate":0,"index":1287},{"krate":0,"index":1288},{"krate":0,"index":1289},{"krate":0,"index":1290},{"krate":0,"index":1291},{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":1294},{"krate":0,"index":1295},{"krate":0,"index":1297},{"krate":0,"index":1298}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":428928,"byte_end":428941,"line_start":753,"line_end":753,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1300},{"krate":0,"index":1301},{"krate":0,"index":1302},{"krate":0,"index":1303},{"krate":0,"index":1304},{"krate":0,"index":1305},{"krate":0,"index":1306},{"krate":0,"index":1307},{"krate":0,"index":1308},{"krate":0,"index":1309},{"krate":0,"index":1311},{"krate":0,"index":1313},{"krate":0,"index":1315},{"krate":0,"index":1317},{"krate":0,"index":1319},{"krate":0,"index":1321}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439571,"byte_end":439584,"line_start":1064,"line_end":1064,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1324},{"krate":0,"index":1325},{"krate":0,"index":1326},{"krate":0,"index":1327},{"krate":0,"index":1328},{"krate":0,"index":1330},{"krate":0,"index":1332},{"krate":0,"index":1334}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":447404,"byte_end":447417,"line_start":1276,"line_end":1276,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1337},{"krate":0,"index":1338}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":447648,"byte_end":447661,"line_start":1285,"line_end":1285,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1340}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":449982,"byte_end":449995,"line_start":1340,"line_end":1340,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1342},{"krate":0,"index":1343}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":450226,"byte_end":450239,"line_start":1349,"line_end":1349,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1345}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":451969,"byte_end":451982,"line_start":1395,"line_end":1395,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1347},{"krate":0,"index":1348}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":453180,"byte_end":453193,"line_start":1431,"line_end":1431,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1350}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":454281,"byte_end":454294,"line_start":1462,"line_end":1462,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1352}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":455024,"byte_end":455037,"line_start":1484,"line_end":1484,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1354},{"krate":0,"index":1355}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":456384,"byte_end":456397,"line_start":1526,"line_end":1526,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1358}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/internals.rs","byte_start":467047,"byte_end":467056,"line_start":113,"line_end":113,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1404},{"krate":0,"index":1405},{"krate":0,"index":1406},{"krate":0,"index":1407},{"krate":0,"index":1408}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/internals.rs","byte_start":467995,"byte_end":468004,"line_start":150,"line_end":150,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1410}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/internals.rs","byte_start":476134,"byte_end":476136,"line_start":271,"line_end":271,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":1420},{"krate":0,"index":1421},{"krate":0,"index":1422},{"krate":0,"index":1423},{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1426},{"krate":0,"index":1427},{"krate":0,"index":1428},{"krate":0,"index":1429},{"krate":0,"index":1430},{"krate":0,"index":1431}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/internals.rs","byte_start":478214,"byte_end":478216,"line_start":355,"line_end":355,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1433}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/internals.rs","byte_start":478829,"byte_end":478832,"line_start":376,"line_end":376,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":1435},{"krate":0,"index":1436},{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":1439},{"krate":0,"index":1440},{"krate":0,"index":1441},{"krate":0,"index":1442},{"krate":0,"index":1443},{"krate":0,"index":1444}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/internals.rs","byte_start":480811,"byte_end":480814,"line_start":460,"line_end":460,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1446}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":495144,"byte_end":495151,"line_start":52,"line_end":52,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1463},{"krate":0,"index":1464},{"krate":0,"index":1465}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":497685,"byte_end":497692,"line_start":134,"line_end":134,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1467}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":506879,"byte_end":506888,"line_start":197,"line_end":197,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1528},{"krate":0,"index":1529},{"krate":0,"index":1530},{"krate":0,"index":1531},{"krate":0,"index":1533},{"krate":0,"index":1534},{"krate":0,"index":1536},{"krate":0,"index":1537},{"krate":0,"index":1538},{"krate":0,"index":1539},{"krate":0,"index":1540},{"krate":0,"index":1541},{"krate":0,"index":1542},{"krate":0,"index":1543},{"krate":0,"index":1547},{"krate":0,"index":1548},{"krate":0,"index":1549}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":531073,"byte_end":531082,"line_start":807,"line_end":807,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1551},{"krate":0,"index":1552},{"krate":0,"index":1553},{"krate":0,"index":1554},{"krate":0,"index":1555},{"krate":0,"index":1556},{"krate":0,"index":1557},{"krate":0,"index":1558},{"krate":0,"index":1559}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":540633,"byte_end":540642,"line_start":1065,"line_end":1065,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1561},{"krate":0,"index":1562}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":540823,"byte_end":540832,"line_start":1074,"line_end":1074,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1564}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":543191,"byte_end":543200,"line_start":1126,"line_end":1126,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1566},{"krate":0,"index":1567}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":543381,"byte_end":543390,"line_start":1135,"line_end":1135,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1569}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":545763,"byte_end":545772,"line_start":1187,"line_end":1187,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1571},{"krate":0,"index":1572}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":547156,"byte_end":547165,"line_start":1224,"line_end":1224,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1574}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":549014,"byte_end":549023,"line_start":1274,"line_end":1274,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1576}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":549793,"byte_end":549802,"line_start":1299,"line_end":1299,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1578},{"krate":0,"index":1579}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":550689,"byte_end":550698,"line_start":1331,"line_end":1331,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1582}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":575917,"byte_end":575928,"line_start":31,"line_end":31,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1709},{"krate":0,"index":1710},{"krate":0,"index":1711},{"krate":0,"index":1712},{"krate":0,"index":1713},{"krate":0,"index":1714}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":578481,"byte_end":578492,"line_start":105,"line_end":105,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1716},{"krate":0,"index":1717},{"krate":0,"index":1718},{"krate":0,"index":1719},{"krate":0,"index":1720},{"krate":0,"index":1721}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":579080,"byte_end":579091,"line_start":127,"line_end":127,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1723}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":579172,"byte_end":579183,"line_start":133,"line_end":133,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1725}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":579681,"byte_end":579692,"line_start":147,"line_end":147,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1727}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":580460,"byte_end":580469,"line_start":168,"line_end":168,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1731},{"krate":0,"index":1732}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":580657,"byte_end":580666,"line_start":177,"line_end":177,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1734},{"krate":0,"index":1735}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":580855,"byte_end":580868,"line_start":186,"line_end":186,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1737},{"krate":0,"index":1738}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":581064,"byte_end":581077,"line_start":195,"line_end":195,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1740},{"krate":0,"index":1741}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":581288,"byte_end":581296,"line_start":204,"line_end":204,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1744},{"krate":0,"index":1745}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":581508,"byte_end":581516,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1748},{"krate":0,"index":1749}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":584972,"byte_end":584975,"line_start":78,"line_end":78,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1778},{"krate":0,"index":1779},{"krate":0,"index":1780},{"krate":0,"index":1781},{"krate":0,"index":1782},{"krate":0,"index":1783}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":585495,"byte_end":585498,"line_start":100,"line_end":100,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1785}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":585594,"byte_end":585597,"line_start":106,"line_end":106,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1787}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":585713,"byte_end":585716,"line_start":112,"line_end":112,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1789}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":555993,"byte_end":556004,"line_start":52,"line_end":52,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1795},{"krate":0,"index":1796},{"krate":0,"index":1797},{"krate":0,"index":1798}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":557185,"byte_end":557196,"line_start":87,"line_end":87,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1803},{"krate":0,"index":1804},{"krate":0,"index":1805},{"krate":0,"index":1806},{"krate":0,"index":1807}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":560406,"byte_end":560417,"line_start":180,"line_end":180,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1810}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":587641,"byte_end":587642,"line_start":47,"line_end":47,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1891},{"krate":0,"index":1892}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":591023,"byte_end":591031,"line_start":148,"line_end":148,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1901},{"krate":0,"index":1902},{"krate":0,"index":1903}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":591380,"byte_end":591393,"line_start":160,"line_end":160,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1905},{"krate":0,"index":1906},{"krate":0,"index":1907}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":595269,"byte_end":595282,"line_start":280,"line_end":280,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1913}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":608496,"byte_end":608503,"line_start":31,"line_end":31,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1929},{"krate":0,"index":1930},{"krate":0,"index":1931},{"krate":0,"index":1932},{"krate":0,"index":1933},{"krate":0,"index":1934}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":612494,"byte_end":612501,"line_start":141,"line_end":141,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1936}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":613149,"byte_end":613156,"line_start":158,"line_end":158,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1938},{"krate":0,"index":1939}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":614169,"byte_end":614186,"line_start":197,"line_end":197,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1941}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":614325,"byte_end":614342,"line_start":203,"line_end":203,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1943}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":618885,"byte_end":618890,"line_start":60,"line_end":60,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1956},{"krate":0,"index":1957},{"krate":0,"index":1958},{"krate":0,"index":1959}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":622120,"byte_end":622125,"line_start":155,"line_end":155,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1961},{"krate":0,"index":1962},{"krate":0,"index":1963}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":623428,"byte_end":623434,"line_start":196,"line_end":196,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1965}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":623735,"byte_end":623750,"line_start":209,"line_end":209,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1967}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21539,"byte_end":21545,"line_start":476,"line_end":476,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":565}},{"kind":"Mod","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":141277,"byte_end":141285,"line_start":741,"line_end":741,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":913}},{"kind":"Mod","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21678,"byte_end":21683,"line_start":482,"line_end":482,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":967}},{"kind":"Mod","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/lib.rs","byte_start":21786,"byte_end":21792,"line_start":486,"line_end":486,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1628}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":25383,"byte_end":25391,"line_start":72,"line_end":72,"column_start":6,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":2023},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":34099,"byte_end":34107,"line_start":311,"line_end":311,"column_start":14,"column_end":22},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":2023},"to":{"krate":1,"index":3358}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":34395,"byte_end":34403,"line_start":324,"line_end":324,"column_start":14,"column_end":22},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":2023},"to":{"krate":1,"index":3331}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":34747,"byte_end":34755,"line_start":338,"line_end":338,"column_start":14,"column_end":22},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":2023},"to":{"krate":1,"index":3336}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":35091,"byte_end":35099,"line_start":352,"line_end":352,"column_start":19,"column_end":27},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":2023},"to":{"krate":1,"index":3341}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":35530,"byte_end":35538,"line_start":364,"line_end":364,"column_start":19,"column_end":27},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2023},"to":{"krate":1,"index":3346}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":36542,"byte_end":36550,"line_start":398,"line_end":398,"column_start":23,"column_end":31},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2023},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/oldtime.rs","byte_start":38098,"byte_end":38113,"line_start":441,"line_end":441,"column_start":23,"column_end":38},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2042},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":54657,"byte_end":54661,"line_start":72,"line_end":72,"column_start":20,"column_end":24},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2057},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":63353,"byte_end":63357,"line_start":310,"line_end":310,"column_start":20,"column_end":24},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":2057},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":65449,"byte_end":65453,"line_start":378,"line_end":378,"column_start":33,"column_end":37},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2057},"to":{"krate":0,"index":1986}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":67288,"byte_end":67292,"line_start":453,"line_end":453,"column_start":29,"column_end":33},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2057},"to":{"krate":1,"index":3273}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":67372,"byte_end":67376,"line_start":454,"line_end":454,"column_start":36,"column_end":40},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2057},"to":{"krate":1,"index":3263}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":67481,"byte_end":67485,"line_start":456,"line_end":456,"column_start":60,"column_end":64},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":2057},"to":{"krate":1,"index":2915}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":67605,"byte_end":67609,"line_start":462,"line_end":462,"column_start":27,"column_end":31},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":2057},"to":{"krate":1,"index":2920}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":67652,"byte_end":67656,"line_start":464,"line_end":464,"column_start":35,"column_end":39},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2057},"to":{"krate":1,"index":2961}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":67808,"byte_end":67812,"line_start":470,"line_end":470,"column_start":28,"column_end":32},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":2057},"to":{"krate":1,"index":2951}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":67947,"byte_end":67951,"line_start":476,"line_end":476,"column_start":35,"column_end":39},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":2057},"to":{"krate":1,"index":10526}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":68090,"byte_end":68094,"line_start":482,"line_end":482,"column_start":41,"column_end":45},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":2057},"to":{"krate":1,"index":3331}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":68324,"byte_end":68328,"line_start":491,"line_end":491,"column_start":47,"column_end":51},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":2057},"to":{"krate":1,"index":3362}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":68541,"byte_end":68545,"line_start":498,"line_end":498,"column_start":41,"column_end":45},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":2057},"to":{"krate":1,"index":3336}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":68775,"byte_end":68779,"line_start":507,"line_end":507,"column_start":47,"column_end":51},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":2057},"to":{"krate":1,"index":3366}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":68989,"byte_end":68993,"line_start":514,"line_end":514,"column_start":38,"column_end":42},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":2057},"to":{"krate":1,"index":3336}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":69178,"byte_end":69182,"line_start":523,"line_end":523,"column_start":35,"column_end":39},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":2057},"to":{"krate":1,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/date.rs","byte_start":69356,"byte_end":69360,"line_start":529,"line_end":529,"column_start":37,"column_end":41},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":2057},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":75925,"byte_end":75933,"line_start":98,"line_end":98,"column_start":20,"column_end":28},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":2088},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":86044,"byte_end":86052,"line_start":384,"line_end":384,"column_start":18,"column_end":26},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":2088},"to":{"krate":1,"index":3241}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":86326,"byte_end":86334,"line_start":397,"line_end":397,"column_start":18,"column_end":26},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":2088},"to":{"krate":1,"index":3241}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":86569,"byte_end":86577,"line_start":404,"line_end":404,"column_start":30,"column_end":38},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":2088},"to":{"krate":1,"index":3169}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":87501,"byte_end":87509,"line_start":426,"line_end":426,"column_start":38,"column_end":46},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":2088},"to":{"krate":1,"index":3169}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":89587,"byte_end":89595,"line_start":480,"line_end":480,"column_start":6,"column_end":14},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":2088},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":92224,"byte_end":92232,"line_start":542,"line_end":542,"column_start":20,"column_end":28},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":2088},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":97875,"byte_end":97883,"line_start":695,"line_end":695,"column_start":33,"column_end":41},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":2088},"to":{"krate":0,"index":1986}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":99740,"byte_end":99748,"line_start":769,"line_end":769,"column_start":33,"column_end":41},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":2088},"to":{"krate":0,"index":2005}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":100788,"byte_end":100796,"line_start":809,"line_end":809,"column_start":29,"column_end":37},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":2088},"to":{"krate":1,"index":3273}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":100876,"byte_end":100884,"line_start":810,"line_end":810,"column_start":36,"column_end":44},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":2088},"to":{"krate":1,"index":3263}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":100993,"byte_end":101001,"line_start":812,"line_end":812,"column_start":64,"column_end":72},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":2088},"to":{"krate":1,"index":2915}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":101133,"byte_end":101141,"line_start":818,"line_end":818,"column_start":27,"column_end":35},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":2088},"to":{"krate":1,"index":2920}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":101214,"byte_end":101222,"line_start":820,"line_end":820,"column_start":65,"column_end":73},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":2088},"to":{"krate":1,"index":2961}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":101961,"byte_end":101969,"line_start":841,"line_end":841,"column_start":28,"column_end":36},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":2088},"to":{"krate":1,"index":2951}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":102116,"byte_end":102124,"line_start":847,"line_end":847,"column_start":35,"column_end":43},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":2088},"to":{"krate":1,"index":10526}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":102267,"byte_end":102275,"line_start":853,"line_end":853,"column_start":41,"column_end":49},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":2088},"to":{"krate":1,"index":3331}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":102517,"byte_end":102525,"line_start":862,"line_end":862,"column_start":47,"column_end":55},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":2088},"to":{"krate":1,"index":3362}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":102844,"byte_end":102852,"line_start":872,"line_end":872,"column_start":41,"column_end":49},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":2088},"to":{"krate":1,"index":3336}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":103094,"byte_end":103102,"line_start":881,"line_end":881,"column_start":47,"column_end":55},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":2088},"to":{"krate":1,"index":3366}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":103421,"byte_end":103429,"line_start":891,"line_end":891,"column_start":42,"column_end":50},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":2088},"to":{"krate":1,"index":3336}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":103618,"byte_end":103626,"line_start":900,"line_end":900,"column_start":35,"column_end":43},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":2088},"to":{"krate":1,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":103800,"byte_end":103808,"line_start":906,"line_end":906,"column_start":37,"column_end":45},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":2088},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/datetime/mod.rs","byte_start":104441,"byte_end":104449,"line_start":926,"line_end":926,"column_start":23,"column_end":31},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":2088},"to":{"krate":1,"index":12989}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":118038,"byte_end":118053,"line_start":157,"line_end":157,"column_start":16,"column_end":31},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":594},"to":{"krate":1,"index":2882}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":118143,"byte_end":118158,"line_start":163,"line_end":163,"column_start":20,"column_end":35},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":594},"to":{"krate":1,"index":2915}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":118264,"byte_end":118279,"line_start":169,"line_end":169,"column_start":13,"column_end":28},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":594},"to":{"krate":1,"index":2920}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":118304,"byte_end":118319,"line_start":171,"line_end":171,"column_start":21,"column_end":36},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":594},"to":{"krate":1,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":124301,"byte_end":124311,"line_start":339,"line_end":339,"column_start":6,"column_end":16},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":2296},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":125859,"byte_end":125869,"line_start":385,"line_end":385,"column_start":23,"column_end":33},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":2296},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parsed.rs","byte_start":152907,"byte_end":152913,"line_start":128,"line_end":128,"column_start":6,"column_end":12},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":2339},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/parse.rs","byte_start":222955,"byte_end":222963,"line_start":478,"line_end":478,"column_start":23,"column_end":31},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":2088},"to":{"krate":1,"index":12989}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/strftime.rs","byte_start":273710,"byte_end":273723,"line_start":213,"line_end":213,"column_start":10,"column_end":23},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":2375},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/strftime.rs","byte_start":275110,"byte_end":275123,"line_start":256,"line_end":256,"column_start":23,"column_end":36},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":2375},"to":{"krate":1,"index":8596}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":145500,"byte_end":145507,"line_start":873,"line_end":873,"column_start":18,"column_end":25},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":2631},"to":{"krate":1,"index":12989}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/format/mod.rs","byte_start":147459,"byte_end":147464,"line_start":947,"line_end":947,"column_start":18,"column_end":23},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":2678},"to":{"krate":1,"index":12989}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":295259,"byte_end":295268,"line_start":62,"line_end":62,"column_start":6,"column_end":15},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":2394},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":301007,"byte_end":301016,"line_start":207,"line_end":207,"column_start":6,"column_end":15},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":2399},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":342302,"byte_end":342311,"line_start":1280,"line_end":1280,"column_start":19,"column_end":28},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":2399},"to":{"krate":0,"index":1986}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":354527,"byte_end":354536,"line_start":1644,"line_end":1644,"column_start":27,"column_end":36},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":2399},"to":{"krate":1,"index":3331}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":354755,"byte_end":354764,"line_start":1653,"line_end":1653,"column_start":33,"column_end":42},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":2399},"to":{"krate":1,"index":3362}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":354891,"byte_end":354900,"line_start":1660,"line_end":1660,"column_start":22,"column_end":31},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":2399},"to":{"krate":1,"index":3331}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":355906,"byte_end":355915,"line_start":1688,"line_end":1688,"column_start":22,"column_end":31},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":2399},"to":{"krate":1,"index":3336}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":357886,"byte_end":357895,"line_start":1736,"line_end":1736,"column_start":27,"column_end":36},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":2399},"to":{"krate":1,"index":3336}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":358114,"byte_end":358123,"line_start":1745,"line_end":1745,"column_start":33,"column_end":42},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":2399},"to":{"krate":1,"index":3366}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":359299,"byte_end":359308,"line_start":1776,"line_end":1776,"column_start":25,"column_end":34},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":2399},"to":{"krate":1,"index":3336}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":359661,"byte_end":359682,"line_start":1791,"line_end":1791,"column_start":19,"column_end":40},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":2418},"to":{"krate":1,"index":8596}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":360283,"byte_end":360304,"line_start":1811,"line_end":1811,"column_start":28,"column_end":49},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2418},"to":{"krate":1,"index":8467}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":360338,"byte_end":360359,"line_start":1813,"line_end":1813,"column_start":30,"column_end":51},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":2418},"to":{"krate":1,"index":8442}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":360740,"byte_end":360762,"line_start":1829,"line_end":1829,"column_start":19,"column_end":41},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":2439},"to":{"krate":1,"index":8596}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":361289,"byte_end":361311,"line_start":1847,"line_end":1847,"column_start":28,"column_end":50},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":2439},"to":{"krate":1,"index":8467}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":361345,"byte_end":361367,"line_start":1849,"line_end":1849,"column_start":30,"column_end":52},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":2439},"to":{"krate":1,"index":8442}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":362679,"byte_end":362688,"line_start":1886,"line_end":1886,"column_start":21,"column_end":30},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":2399},"to":{"krate":1,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":363944,"byte_end":363953,"line_start":1921,"line_end":1921,"column_start":23,"column_end":32},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":2399},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":364553,"byte_end":364562,"line_start":1943,"line_end":1943,"column_start":23,"column_end":32},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":2399},"to":{"krate":1,"index":12989}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/date.rs","byte_start":365397,"byte_end":365406,"line_start":1974,"line_end":1974,"column_start":18,"column_end":27},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":2399},"to":{"krate":1,"index":3241}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":400945,"byte_end":400958,"line_start":81,"line_end":81,"column_start":6,"column_end":19},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":2460},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":428928,"byte_end":428941,"line_start":753,"line_end":753,"column_start":19,"column_end":32},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2460},"to":{"krate":0,"index":1986}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":439571,"byte_end":439584,"line_start":1064,"line_end":1064,"column_start":19,"column_end":32},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":2460},"to":{"krate":0,"index":2005}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":447404,"byte_end":447417,"line_start":1276,"line_end":1276,"column_start":27,"column_end":40},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2460},"to":{"krate":1,"index":3331}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":447648,"byte_end":447661,"line_start":1285,"line_end":1285,"column_start":33,"column_end":46},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2460},"to":{"krate":1,"index":3362}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":449982,"byte_end":449995,"line_start":1340,"line_end":1340,"column_start":27,"column_end":40},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":2460},"to":{"krate":1,"index":3336}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":450226,"byte_end":450239,"line_start":1349,"line_end":1349,"column_start":33,"column_end":46},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2460},"to":{"krate":1,"index":3366}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":451969,"byte_end":451982,"line_start":1395,"line_end":1395,"column_start":29,"column_end":42},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2460},"to":{"krate":1,"index":3336}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":453180,"byte_end":453193,"line_start":1431,"line_end":1431,"column_start":21,"column_end":34},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":2460},"to":{"krate":1,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":454281,"byte_end":454294,"line_start":1462,"line_end":1462,"column_start":23,"column_end":36},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2460},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":455024,"byte_end":455037,"line_start":1484,"line_end":1484,"column_start":23,"column_end":36},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2460},"to":{"krate":1,"index":12989}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/datetime/mod.rs","byte_start":456384,"byte_end":456397,"line_start":1526,"line_end":1526,"column_start":18,"column_end":31},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":2460},"to":{"krate":1,"index":3241}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/internals.rs","byte_start":467047,"byte_end":467056,"line_start":113,"line_end":113,"column_start":6,"column_end":15},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2480},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/internals.rs","byte_start":467995,"byte_end":468004,"line_start":150,"line_end":150,"column_start":21,"column_end":30},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2480},"to":{"krate":1,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/internals.rs","byte_start":476134,"byte_end":476136,"line_start":271,"line_end":271,"column_start":6,"column_end":8},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/internals.rs","byte_start":478214,"byte_end":478216,"line_start":355,"line_end":355,"column_start":21,"column_end":23},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":2493},"to":{"krate":1,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/internals.rs","byte_start":478829,"byte_end":478832,"line_start":376,"line_end":376,"column_start":6,"column_end":9},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/internals.rs","byte_start":480811,"byte_end":480814,"line_start":460,"line_end":460,"column_start":21,"column_end":24},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2505},"to":{"krate":1,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":495144,"byte_end":495151,"line_start":52,"line_end":52,"column_start":6,"column_end":13},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2517},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/isoweek.rs","byte_start":497685,"byte_end":497692,"line_start":134,"line_end":134,"column_start":21,"column_end":28},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2517},"to":{"krate":1,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":506879,"byte_end":506888,"line_start":197,"line_end":197,"column_start":6,"column_end":15},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2533},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":531073,"byte_end":531082,"line_start":807,"line_end":807,"column_start":19,"column_end":28},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":2533},"to":{"krate":0,"index":2005}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":540633,"byte_end":540642,"line_start":1065,"line_end":1065,"column_start":27,"column_end":36},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":2533},"to":{"krate":1,"index":3331}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":540823,"byte_end":540832,"line_start":1074,"line_end":1074,"column_start":33,"column_end":42},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":2533},"to":{"krate":1,"index":3362}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":543191,"byte_end":543200,"line_start":1126,"line_end":1126,"column_start":27,"column_end":36},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":2533},"to":{"krate":1,"index":3336}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":543381,"byte_end":543390,"line_start":1135,"line_end":1135,"column_start":33,"column_end":42},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":2533},"to":{"krate":1,"index":3366}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":545763,"byte_end":545772,"line_start":1187,"line_end":1187,"column_start":25,"column_end":34},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":2533},"to":{"krate":1,"index":3336}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":547156,"byte_end":547165,"line_start":1224,"line_end":1224,"column_start":21,"column_end":30},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":2533},"to":{"krate":1,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":549014,"byte_end":549023,"line_start":1274,"line_end":1274,"column_start":23,"column_end":32},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":2533},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":549793,"byte_end":549802,"line_start":1299,"line_end":1299,"column_start":23,"column_end":32},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":2533},"to":{"krate":1,"index":12989}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/naive/time/mod.rs","byte_start":550689,"byte_end":550698,"line_start":1331,"line_end":1331,"column_start":18,"column_end":27},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":2533},"to":{"krate":1,"index":3241}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":575917,"byte_end":575928,"line_start":31,"line_end":31,"column_start":6,"column_end":17},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":2553},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":578481,"byte_end":578492,"line_start":105,"line_end":105,"column_start":19,"column_end":30},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":2553},"to":{"krate":0,"index":1813}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":579080,"byte_end":579091,"line_start":127,"line_end":127,"column_start":17,"column_end":28},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":2553},"to":{"krate":0,"index":1811}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":579172,"byte_end":579183,"line_start":133,"line_end":133,"column_start":21,"column_end":32},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2553},"to":{"krate":1,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":579681,"byte_end":579692,"line_start":147,"line_end":147,"column_start":23,"column_end":34},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2553},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":580460,"byte_end":580469,"line_start":168,"line_end":168,"column_start":27,"column_end":36},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2533},"to":{"krate":1,"index":3331}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":580657,"byte_end":580666,"line_start":177,"line_end":177,"column_start":27,"column_end":36},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2533},"to":{"krate":1,"index":3336}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":580855,"byte_end":580868,"line_start":186,"line_end":186,"column_start":27,"column_end":40},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":2460},"to":{"krate":1,"index":3331}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":581064,"byte_end":581077,"line_start":195,"line_end":195,"column_start":27,"column_end":40},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2460},"to":{"krate":1,"index":3336}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":581288,"byte_end":581296,"line_start":204,"line_end":204,"column_start":41,"column_end":49},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2088},"to":{"krate":1,"index":3331}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/fixed.rs","byte_start":581508,"byte_end":581516,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2088},"to":{"krate":1,"index":3336}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":584972,"byte_end":584975,"line_start":78,"line_end":78,"column_start":19,"column_end":22},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2568},"to":{"krate":0,"index":1813}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":585495,"byte_end":585498,"line_start":100,"line_end":100,"column_start":17,"column_end":20},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2568},"to":{"krate":0,"index":1811}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":585594,"byte_end":585597,"line_start":106,"line_end":106,"column_start":21,"column_end":24},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2568},"to":{"krate":1,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/utc.rs","byte_start":585713,"byte_end":585716,"line_start":112,"line_end":112,"column_start":23,"column_end":26},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":2568},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":555993,"byte_end":556004,"line_start":52,"line_end":52,"column_start":9,"column_end":20},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":2579},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":557185,"byte_end":557196,"line_start":87,"line_end":87,"column_start":20,"column_end":31},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2579},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":560406,"byte_end":560417,"line_start":180,"line_end":180,"column_start":21,"column_end":32},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2579},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":560879,"byte_end":560884,"line_start":194,"line_end":194,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":1,"index":3268},"to":{"krate":0,"index":1811}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":560887,"byte_end":560892,"line_start":194,"line_end":194,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":1,"index":2882},"to":{"krate":0,"index":1811}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":560900,"byte_end":560905,"line_start":194,"line_end":194,"column_start":40,"column_end":45},"kind":"SuperTrait","from":{"krate":1,"index":10288},"to":{"krate":0,"index":1811}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":561195,"byte_end":561200,"line_start":203,"line_end":203,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":1,"index":3268},"to":{"krate":0,"index":1813}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/offset/mod.rs","byte_start":561203,"byte_end":561208,"line_start":203,"line_end":203,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":1,"index":2882},"to":{"krate":0,"index":1813}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":587641,"byte_end":587642,"line_start":47,"line_end":47,"column_start":25,"column_end":26},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1890},"to":{"krate":0,"index":1886}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":589339,"byte_end":589344,"line_start":101,"line_end":101,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":3268},"to":{"krate":0,"index":1894}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":591023,"byte_end":591031,"line_start":148,"line_end":148,"column_start":38,"column_end":46},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2088},"to":{"krate":0,"index":1894}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":591380,"byte_end":591393,"line_start":160,"line_end":160,"column_start":24,"column_end":37},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2460},"to":{"krate":0,"index":1894}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/round.rs","byte_start":595269,"byte_end":595282,"line_start":280,"line_end":280,"column_start":23,"column_end":36},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2613},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":608496,"byte_end":608503,"line_start":31,"line_end":31,"column_start":6,"column_end":13},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2631},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":612494,"byte_end":612501,"line_start":141,"line_end":141,"column_start":23,"column_end":30},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":2631},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":613149,"byte_end":613156,"line_start":158,"line_end":158,"column_start":36,"column_end":43},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":2631},"to":{"krate":5,"index":333}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":614169,"byte_end":614186,"line_start":197,"line_end":197,"column_start":23,"column_end":40},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":2667},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/weekday.rs","byte_start":614325,"byte_end":614342,"line_start":203,"line_end":203,"column_start":21,"column_end":38},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":2667},"to":{"krate":1,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":618885,"byte_end":618890,"line_start":60,"line_end":60,"column_start":6,"column_end":11},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":2678},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":622120,"byte_end":622125,"line_start":155,"line_end":155,"column_start":36,"column_end":41},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":2678},"to":{"krate":5,"index":333}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":623428,"byte_end":623434,"line_start":196,"line_end":196,"column_start":6,"column_end":12},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":2729},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/month.rs","byte_start":623735,"byte_end":623750,"line_start":209,"line_end":209,"column_start":21,"column_end":36},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":2749},"to":{"krate":1,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":627986,"byte_end":627991,"line_start":4,"line_end":4,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":1,"index":3268},"to":{"krate":0,"index":1986}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.22/src/traits.rs","byte_start":632222,"byte_end":632227,"line_start":122,"line_end":122,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":1,"index":3268},"to":{"krate":0,"index":2005}}]}