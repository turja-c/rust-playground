{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25","program":"/Users/turjachowdhury/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","futures_util","--edition=2018","/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"async-await\"","--cfg","feature=\"async-await-macro\"","--cfg","feature=\"default\"","--cfg","feature=\"futures-io\"","--cfg","feature=\"futures-macro\"","--cfg","feature=\"io\"","--cfg","feature=\"memchr\"","--cfg","feature=\"slab\"","--cfg","feature=\"std\"","-C","metadata=dea35ca61872beb0","-C","extra-filename=-dea35ca61872beb0","--out-dir","/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps","-L","dependency=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps","--extern","futures_core=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libfutures_core-ff2cc71b1680ff21.rmeta","--extern","futures_io=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libfutures_io-1f4a6934c64143ca.rmeta","--extern","futures_macro=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libfutures_macro-523934a9f68ab29e.dylib","--extern","futures_task=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libfutures_task-8f5aecd6c32432b2.rmeta","--extern","memchr=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libmemchr-36e103b868e33c7a.rmeta","--extern","pin_project_lite=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libpin_project_lite-183d4419e3e5881f.rmeta","--extern","pin_utils=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libpin_utils-b468e14a5d84747e.rmeta","--extern","slab=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libslab-f96a2b2b74329012.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/turjachowdhury/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libfutures_util-dea35ca61872beb0.rmeta"},"prelude":{"crate_id":{"name":"futures_util","disambiguator":[13377393946723360603,0]},"crate_root":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src","external_crates":[{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3177202280525429736,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/async_await/poll.rs","num":2,"id":{"name":"core","disambiguator":[14771084576412554041,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2214913233095760658,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14062411168213242900,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12076482825092298057,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[14222321261015582298,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8777242437552039366,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17835652209006724865,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[8739993533421390330,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[14051958152740382928,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[10065303707608660519,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[11544620977869425193,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[6400271788769952154,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[15384311983005613458,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[18308402029100966730,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[6407954677654987270,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[15697432329694890830,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[8370702540642071065,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[13043233986326649044,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":20,"id":{"name":"futures_core","disambiguator":[8699272677329186135,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":21,"id":{"name":"pin_utils","disambiguator":[4137458827028393668,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/async_await/join_mod.rs","num":22,"id":{"name":"futures_macro","disambiguator":[9138652212337653651,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","num":23,"id":{"name":"futures_task","disambiguator":[18417935591013933675,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","num":24,"id":{"name":"pin_project_lite","disambiguator":[13538260751834456167,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","num":25,"id":{"name":"slab","disambiguator":[1632754967940313787,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","num":26,"id":{"name":"futures_io","disambiguator":[12892626021524678902,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/line_writer.rs","num":27,"id":{"name":"memchr","disambiguator":[13130618782193109137,0]}}],"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":0,"byte_end":11572,"line_start":1,"line_end":337,"column_start":1,"column_end":18}},"imports":[{"kind":"Use","ref_id":{"krate":20,"index":169},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":861,"byte_end":866,"line_start":29,"line_end":29,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":7},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":887,"byte_end":894,"line_start":30,"line_end":30,"column_start":20,"column_end":27},"alias_span":null,"name":"pin_mut","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/async_await/mod.rs","byte_start":11913,"byte_end":11914,"line_start":12,"line_end":12,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":10}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/async_await/mod.rs","byte_start":12042,"byte_end":12043,"line_start":17,"line_end":17,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":10}},{"kind":"Use","ref_id":{"krate":22,"index":170},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/async_await/join_mod.rs","byte_start":18637,"byte_end":18650,"line_start":84,"line_end":84,"column_start":24,"column_end":37},"alias_span":null,"name":"join_internal","value":"","parent":{"krate":0,"index":75}},{"kind":"Use","ref_id":{"krate":22,"index":171},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/async_await/join_mod.rs","byte_start":18717,"byte_end":18734,"line_start":88,"line_end":88,"column_start":24,"column_end":41},"alias_span":null,"name":"try_join_internal","value":"","parent":{"krate":0,"index":75}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/async_await/mod.rs","byte_start":12265,"byte_end":12266,"line_start":24,"line_end":24,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":10}},{"kind":"Use","ref_id":{"krate":22,"index":172},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/async_await/select_mod.rs","byte_start":31999,"byte_end":32014,"line_start":309,"line_end":309,"column_start":24,"column_end":39},"alias_span":null,"name":"select_internal","value":"","parent":{"krate":0,"index":84}},{"kind":"Use","ref_id":{"krate":22,"index":173},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/async_await/select_mod.rs","byte_start":32081,"byte_end":32103,"line_start":313,"line_end":313,"column_start":24,"column_end":46},"alias_span":null,"name":"select_biased_internal","value":"","parent":{"krate":0,"index":84}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/async_await/mod.rs","byte_start":12492,"byte_end":12493,"line_start":31,"line_end":31,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":10}},{"kind":"Use","ref_id":{"krate":22,"index":175},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/async_await/stream_select_mod.rs","byte_start":32759,"byte_end":32781,"line_start":6,"line_end":6,"column_start":24,"column_end":46},"alias_span":null,"name":"stream_select_internal","value":"","parent":{"krate":0,"index":93}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/async_await/mod.rs","byte_start":12733,"byte_end":12734,"line_start":38,"line_end":38,"column_start":34,"column_end":35},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":10}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/async_await/mod.rs","byte_start":12971,"byte_end":12972,"line_start":46,"line_end":46,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":10}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":1033,"byte_end":1034,"line_start":37,"line_end":37,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":1142,"byte_end":1143,"line_start":43,"line_end":43,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":47485},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":1181,"byte_end":1187,"line_start":45,"line_end":45,"column_start":17,"column_end":23},"alias_span":null,"name":"Option","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":47487},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":1196,"byte_end":1200,"line_start":45,"line_end":45,"column_start":32,"column_end":36},"alias_span":null,"name":"None","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":47488},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":1196,"byte_end":1200,"line_start":45,"line_end":45,"column_start":32,"column_end":36},"alias_span":null,"name":"None","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":47489},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":1202,"byte_end":1206,"line_start":45,"line_end":45,"column_start":38,"column_end":42},"alias_span":null,"name":"Some","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":47490},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":1202,"byte_end":1206,"line_start":45,"line_end":45,"column_start":38,"column_end":42},"alias_span":null,"name":"Some","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":47604},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":1222,"byte_end":1225,"line_start":46,"line_end":46,"column_start":14,"column_end":17},"alias_span":null,"name":"Pin","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":47618},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":1252,"byte_end":1255,"line_start":47,"line_end":47,"column_start":26,"column_end":29},"alias_span":null,"name":"Err","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":47619},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":1252,"byte_end":1255,"line_start":47,"line_end":47,"column_start":26,"column_end":29},"alias_span":null,"name":"Err","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":47615},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":1257,"byte_end":1259,"line_start":47,"line_end":47,"column_start":31,"column_end":33},"alias_span":null,"name":"Ok","value":"","parent":{"krate":0,"index":135}},{"kind":"Use","ref_id":{"krate":2,"index":47616},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":1257,"byte_end":1259,"line_start":47,"line_end":47,"column_start":31,"column_end":33},"alias_span":null,"name":"Ok","value":"","parent":{"krate":0,"index":135}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":1332,"byte_end":1333,"line_start":51,"line_end":51,"column_start":37,"column_end":38},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":158}},{"kind":"Use","ref_id":{"krate":2,"index":13763},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":35783,"byte_end":35789,"line_start":13,"line_end":13,"column_start":23,"column_end":29},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":20,"index":21},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":35849,"byte_end":35858,"line_start":16,"line_end":16,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxFuture","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":20,"index":24},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":35860,"byte_end":35874,"line_start":16,"line_end":16,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxFuture","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":20,"index":27},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":35908,"byte_end":35919,"line_start":17,"line_end":17,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedFuture","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":20,"index":44},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":35921,"byte_end":35930,"line_start":17,"line_end":17,"column_start":45,"column_end":54},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":23,"index":237},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":35956,"byte_end":35965,"line_start":18,"line_end":18,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":23,"index":203},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":35967,"byte_end":35981,"line_start":18,"line_end":18,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":23,"index":258},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":35983,"byte_end":35998,"line_start":18,"line_end":18,"column_start":51,"column_end":66},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":9111},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":40072,"byte_end":40076,"line_start":46,"line_end":46,"column_start":15,"column_end":19},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":195}},{"kind":"Use","ref_id":{"krate":0,"index":9699},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":41796,"byte_end":41807,"line_start":101,"line_end":101,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":195}},{"kind":"Use","ref_id":{"krate":0,"index":487},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":42324,"byte_end":42330,"line_start":117,"line_end":117,"column_start":24,"column_end":30},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":195}},{"kind":"Use","ref_id":{"krate":0,"index":498},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":42332,"byte_end":42342,"line_start":117,"line_end":117,"column_start":32,"column_end":42},"alias_span":null,"name":"WeakShared","value":"","parent":{"krate":0,"index":195}},{"kind":"Use","ref_id":{"krate":0,"index":9202},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":36113,"byte_end":36120,"line_start":24,"line_end":24,"column_start":5,"column_end":12},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":9111},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":36122,"byte_end":36126,"line_start":24,"line_end":24,"column_start":14,"column_end":18},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":583},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":36128,"byte_end":36137,"line_start":24,"line_end":24,"column_start":20,"column_end":29},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":9545},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":36139,"byte_end":36146,"line_start":24,"line_end":24,"column_start":31,"column_end":38},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":9360},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":36148,"byte_end":36158,"line_start":24,"line_end":24,"column_start":40,"column_end":50},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":9300},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":36160,"byte_end":36163,"line_start":24,"line_end":24,"column_start":52,"column_end":55},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":9410},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":36165,"byte_end":36172,"line_start":24,"line_end":24,"column_start":57,"column_end":64},"alias_span":null,"name":"MapInto","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":9605},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":36174,"byte_end":36184,"line_start":24,"line_end":24,"column_start":66,"column_end":76},"alias_span":null,"name":"NeverError","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":9472},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":36186,"byte_end":36190,"line_start":24,"line_end":24,"column_start":78,"column_end":82},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":9653},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":36192,"byte_end":36201,"line_start":24,"line_end":24,"column_start":84,"column_end":93},"alias_span":null,"name":"UnitError","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":9250},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":36297,"byte_end":36310,"line_start":28,"line_end":28,"column_start":23,"column_end":36},"alias_span":null,"name":"FlattenStream","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":9699},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":36359,"byte_end":36370,"line_start":31,"line_end":31,"column_start":23,"column_end":34},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":487},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":36570,"byte_end":36576,"line_start":39,"line_end":39,"column_start":24,"column_end":30},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":498},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":36578,"byte_end":36588,"line_start":39,"line_end":39,"column_start":32,"column_end":42},"alias_span":null,"name":"WeakShared","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":9735},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":83521,"byte_end":83531,"line_start":104,"line_end":104,"column_start":28,"column_end":38},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":656}},{"kind":"Use","ref_id":{"krate":0,"index":10040},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":36640,"byte_end":36647,"line_start":43,"line_end":43,"column_start":5,"column_end":12},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":10187},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":36649,"byte_end":36656,"line_start":43,"line_end":43,"column_start":14,"column_end":21},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":10370},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":36658,"byte_end":36668,"line_start":43,"line_end":43,"column_start":23,"column_end":33},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":10309},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":36670,"byte_end":36679,"line_start":43,"line_end":43,"column_start":35,"column_end":44},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":9735},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":36681,"byte_end":36691,"line_start":43,"line_end":43,"column_start":46,"column_end":56},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":10492},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":36693,"byte_end":36699,"line_start":43,"line_end":43,"column_start":58,"column_end":64},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":10431},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":36701,"byte_end":36706,"line_start":43,"line_end":43,"column_start":66,"column_end":71},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":10554},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":36708,"byte_end":36719,"line_start":43,"line_end":43,"column_start":73,"column_end":84},"alias_span":null,"name":"MapOkOrElse","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":10248},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":36721,"byte_end":36727,"line_start":43,"line_end":43,"column_start":86,"column_end":92},"alias_span":null,"name":"OkInto","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":10114},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":36733,"byte_end":36739,"line_start":44,"line_end":44,"column_start":5,"column_end":11},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":9868},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":36741,"byte_end":36751,"line_start":44,"line_end":44,"column_start":13,"column_end":23},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":9989},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":36753,"byte_end":36769,"line_start":44,"line_end":44,"column_start":25,"column_end":41},"alias_span":null,"name":"TryFlattenStream","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":862},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":36771,"byte_end":36783,"line_start":44,"line_end":44,"column_start":43,"column_end":55},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":10627},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":36785,"byte_end":36797,"line_start":44,"line_end":44,"column_start":57,"column_end":69},"alias_span":null,"name":"UnwrapOrElse","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":959},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":36969,"byte_end":36973,"line_start":54,"line_end":54,"column_start":22,"column_end":26},"alias_span":null,"name":"lazy","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":10685},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":36975,"byte_end":36979,"line_start":54,"line_end":54,"column_start":28,"column_end":32},"alias_span":null,"name":"Lazy","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":1005},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":37020,"byte_end":37027,"line_start":57,"line_end":57,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":10691},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":37029,"byte_end":37036,"line_start":57,"line_end":57,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":1052},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":37083,"byte_end":37093,"line_start":60,"line_end":60,"column_start":28,"column_end":38},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":10697},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":37095,"byte_end":37104,"line_start":60,"line_end":60,"column_start":40,"column_end":49},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":1104},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":37159,"byte_end":37173,"line_start":63,"line_end":63,"column_start":32,"column_end":46},"alias_span":null,"name":"try_maybe_done","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":10710},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":37175,"byte_end":37187,"line_start":63,"line_end":63,"column_start":48,"column_end":60},"alias_span":null,"name":"TryMaybeDone","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":10723},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":37225,"byte_end":37237,"line_start":66,"line_end":66,"column_start":23,"column_end":35},"alias_span":null,"name":"OptionFuture","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":1186},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":37277,"byte_end":37284,"line_start":69,"line_end":69,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":1181},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":37286,"byte_end":37292,"line_start":69,"line_end":69,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":1245},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":37347,"byte_end":37361,"line_start":72,"line_end":72,"column_start":32,"column_end":46},"alias_span":null,"name":"poll_immediate","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":10762},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":37363,"byte_end":37376,"line_start":72,"line_end":72,"column_start":48,"column_end":61},"alias_span":null,"name":"PollImmediate","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":1292},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":37413,"byte_end":37416,"line_start":75,"line_end":75,"column_start":23,"column_end":26},"alias_span":null,"name":"err","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":1289},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":37418,"byte_end":37420,"line_start":75,"line_end":75,"column_start":28,"column_end":30},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":1287},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":37422,"byte_end":37427,"line_start":75,"line_end":75,"column_start":32,"column_end":37},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":10801},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":37429,"byte_end":37434,"line_start":75,"line_end":75,"column_start":39,"column_end":44},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":1343},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":37469,"byte_end":37473,"line_start":78,"line_end":78,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":1346},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":37475,"byte_end":37480,"line_start":78,"line_end":78,"column_start":28,"column_end":33},"alias_span":null,"name":"join3","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":1350},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":37482,"byte_end":37487,"line_start":78,"line_end":78,"column_start":35,"column_end":40},"alias_span":null,"name":"join4","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":1355},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":37489,"byte_end":37494,"line_start":78,"line_end":78,"column_start":42,"column_end":47},"alias_span":null,"name":"join5","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":10903},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":37496,"byte_end":37500,"line_start":78,"line_end":78,"column_start":49,"column_end":53},"alias_span":null,"name":"Join","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":10948},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":37502,"byte_end":37507,"line_start":78,"line_end":78,"column_start":55,"column_end":60},"alias_span":null,"name":"Join3","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":11005},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":37509,"byte_end":37514,"line_start":78,"line_end":78,"column_start":62,"column_end":67},"alias_span":null,"name":"Join4","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":11074},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":37516,"byte_end":37521,"line_start":78,"line_end":78,"column_start":69,"column_end":74},"alias_span":null,"name":"Join5","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":1449},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":37616,"byte_end":37624,"line_start":83,"line_end":83,"column_start":26,"column_end":34},"alias_span":null,"name":"join_all","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":1436},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":37626,"byte_end":37633,"line_start":83,"line_end":83,"column_start":36,"column_end":43},"alias_span":null,"name":"JoinAll","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":1498},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":37672,"byte_end":37678,"line_start":86,"line_end":86,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":11155},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":37680,"byte_end":37686,"line_start":86,"line_end":86,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":1548},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":37785,"byte_end":37795,"line_start":91,"line_end":91,"column_start":28,"column_end":38},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":11163},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":37797,"byte_end":37806,"line_start":91,"line_end":91,"column_start":40,"column_end":49},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":1604},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":37854,"byte_end":37862,"line_start":95,"line_end":95,"column_start":5,"column_end":13},"alias_span":null,"name":"try_join","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":1607},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":37864,"byte_end":37873,"line_start":95,"line_end":95,"column_start":15,"column_end":24},"alias_span":null,"name":"try_join3","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":1611},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":37875,"byte_end":37884,"line_start":95,"line_end":95,"column_start":26,"column_end":35},"alias_span":null,"name":"try_join4","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":1616},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":37886,"byte_end":37895,"line_start":95,"line_end":95,"column_start":37,"column_end":46},"alias_span":null,"name":"try_join5","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":11239},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":37897,"byte_end":37904,"line_start":95,"line_end":95,"column_start":48,"column_end":55},"alias_span":null,"name":"TryJoin","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":11284},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":37906,"byte_end":37914,"line_start":95,"line_end":95,"column_start":57,"column_end":65},"alias_span":null,"name":"TryJoin3","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":11341},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":37916,"byte_end":37924,"line_start":95,"line_end":95,"column_start":67,"column_end":75},"alias_span":null,"name":"TryJoin4","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":11410},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":37926,"byte_end":37934,"line_start":95,"line_end":95,"column_start":77,"column_end":85},"alias_span":null,"name":"TryJoin5","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":1726},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":38039,"byte_end":38051,"line_start":101,"line_end":101,"column_start":30,"column_end":42},"alias_span":null,"name":"try_join_all","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":1714},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":38053,"byte_end":38063,"line_start":101,"line_end":101,"column_start":44,"column_end":54},"alias_span":null,"name":"TryJoinAll","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":1772},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":38110,"byte_end":38120,"line_start":104,"line_end":104,"column_start":28,"column_end":38},"alias_span":null,"name":"try_select","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":11491},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":38122,"byte_end":38131,"line_start":104,"line_end":104,"column_start":40,"column_end":49},"alias_span":null,"name":"TrySelect","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":1822},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":38228,"byte_end":38237,"line_start":109,"line_end":109,"column_start":27,"column_end":36},"alias_span":null,"name":"select_ok","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":11499},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":38239,"byte_end":38247,"line_start":109,"line_end":109,"column_start":38,"column_end":46},"alias_span":null,"name":"SelectOk","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":11505},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":38285,"byte_end":38291,"line_start":112,"line_end":112,"column_start":23,"column_end":29},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":16330},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":38458,"byte_end":38469,"line_start":119,"line_end":119,"column_start":28,"column_end":39},"alias_span":null,"name":"AbortHandle","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":16326},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":38471,"byte_end":38488,"line_start":119,"line_end":119,"column_start":41,"column_end":58},"alias_span":null,"name":"AbortRegistration","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":16283},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":38490,"byte_end":38499,"line_start":119,"line_end":119,"column_start":60,"column_end":69},"alias_span":null,"name":"Abortable","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":16341},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":38501,"byte_end":38508,"line_start":119,"line_end":119,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":16342},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":38501,"byte_end":38508,"line_start":119,"line_end":119,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":0,"index":1979},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":38591,"byte_end":38600,"line_start":122,"line_end":122,"column_start":20,"column_end":29},"alias_span":null,"name":"abortable","value":"","parent":{"krate":0,"index":167}},{"kind":"Use","ref_id":{"krate":2,"index":13763},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":10673,"byte_end":10679,"line_start":296,"line_end":296,"column_start":25,"column_end":31},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":583},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":10681,"byte_end":10690,"line_start":296,"line_end":296,"column_start":33,"column_end":42},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":44},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":10692,"byte_end":10701,"line_start":296,"line_end":296,"column_start":44,"column_end":53},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":862},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":10703,"byte_end":10715,"line_start":296,"line_end":296,"column_start":55,"column_end":67},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":90},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":172440,"byte_end":172449,"line_start":13,"line_end":13,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxStream","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":20,"index":93},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":172451,"byte_end":172465,"line_start":13,"line_end":13,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxStream","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":20,"index":110},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":172499,"byte_end":172510,"line_start":14,"line_end":14,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":20,"index":96},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":172512,"byte_end":172518,"line_start":14,"line_end":14,"column_start":45,"column_end":51},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":20,"index":127},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":172520,"byte_end":172529,"line_start":14,"line_end":14,"column_start":53,"column_end":62},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":11522},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":176835,"byte_end":176840,"line_start":29,"line_end":29,"column_start":22,"column_end":27},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":2031}},{"kind":"Use","ref_id":{"krate":0,"index":11571},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":176955,"byte_end":176962,"line_start":33,"line_end":33,"column_start":24,"column_end":31},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":2031}},{"kind":"Use","ref_id":{"krate":0,"index":11620},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177073,"byte_end":177078,"line_start":37,"line_end":37,"column_start":22,"column_end":27},"alias_span":null,"name":"Unzip","value":"","parent":{"krate":0,"index":2031}},{"kind":"Use","ref_id":{"krate":0,"index":11682},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177191,"byte_end":177197,"line_start":41,"line_end":41,"column_start":23,"column_end":29},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":2031}},{"kind":"Use","ref_id":{"krate":0,"index":11759},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177424,"byte_end":177429,"line_start":49,"line_end":49,"column_start":22,"column_end":27},"alias_span":null,"name":"Cycle","value":"","parent":{"krate":0,"index":2031}},{"kind":"Use","ref_id":{"krate":0,"index":11799},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177548,"byte_end":177557,"line_start":53,"line_end":53,"column_start":26,"column_end":35},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":2031}},{"kind":"Use","ref_id":{"krate":0,"index":11843},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177670,"byte_end":177676,"line_start":57,"line_end":57,"column_start":23,"column_end":29},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":2031}},{"kind":"Use","ref_id":{"krate":0,"index":11908},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177797,"byte_end":177806,"line_start":61,"line_end":61,"column_start":27,"column_end":36},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":2031}},{"kind":"Use","ref_id":{"krate":0,"index":12077},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178194,"byte_end":178198,"line_start":75,"line_end":75,"column_start":21,"column_end":25},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":2031}},{"kind":"Use","ref_id":{"krate":0,"index":12268},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178912,"byte_end":178919,"line_start":100,"line_end":100,"column_start":25,"column_end":32},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":2031}},{"kind":"Use","ref_id":{"krate":0,"index":12325},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179028,"byte_end":179032,"line_start":104,"line_end":104,"column_start":21,"column_end":25},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":2031}},{"kind":"Use","ref_id":{"krate":0,"index":12369},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179155,"byte_end":179167,"line_start":108,"line_end":108,"column_start":28,"column_end":40},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":2031}},{"kind":"Use","ref_id":{"krate":0,"index":12444},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179530,"byte_end":179533,"line_start":119,"line_end":119,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":2031}},{"kind":"Use","ref_id":{"krate":0,"index":12576},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179916,"byte_end":179920,"line_start":130,"line_end":130,"column_start":21,"column_end":25},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":2031}},{"kind":"Use","ref_id":{"krate":0,"index":12584},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180053,"byte_end":180067,"line_start":134,"line_end":134,"column_start":33,"column_end":47},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":2031}},{"kind":"Use","ref_id":{"krate":0,"index":12718},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180177,"byte_end":180183,"line_start":138,"line_end":138,"column_start":22,"column_end":28},"alias_span":null,"name":"NextIf","value":"","parent":{"krate":0,"index":2031}},{"kind":"Use","ref_id":{"krate":0,"index":12767},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180185,"byte_end":180193,"line_start":138,"line_end":138,"column_start":30,"column_end":38},"alias_span":null,"name":"NextIfEq","value":"","parent":{"krate":0,"index":2031}},{"kind":"Use","ref_id":{"krate":0,"index":12636},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180195,"byte_end":180199,"line_start":138,"line_end":138,"column_start":40,"column_end":44},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":2031}},{"kind":"Use","ref_id":{"krate":0,"index":12677},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180201,"byte_end":180208,"line_start":138,"line_end":138,"column_start":46,"column_end":53},"alias_span":null,"name":"PeekMut","value":"","parent":{"krate":0,"index":2031}},{"kind":"Use","ref_id":{"krate":0,"index":12592},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180210,"byte_end":180218,"line_start":138,"line_end":138,"column_start":55,"column_end":63},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":2031}},{"kind":"Use","ref_id":{"krate":0,"index":12816},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180328,"byte_end":180332,"line_start":142,"line_end":142,"column_start":21,"column_end":25},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":2031}},{"kind":"Use","ref_id":{"krate":0,"index":12860},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180453,"byte_end":180462,"line_start":146,"line_end":146,"column_start":27,"column_end":36},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":2031}},{"kind":"Use","ref_id":{"krate":0,"index":12929},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180571,"byte_end":180575,"line_start":150,"line_end":150,"column_start":21,"column_end":25},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":2031}},{"kind":"Use","ref_id":{"krate":0,"index":12973},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180696,"byte_end":180705,"line_start":154,"line_end":154,"column_start":27,"column_end":36},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":2031}},{"kind":"Use","ref_id":{"krate":0,"index":13042},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180826,"byte_end":180835,"line_start":158,"line_end":158,"column_start":27,"column_end":36},"alias_span":null,"name":"TakeUntil","value":"","parent":{"krate":0,"index":2031}},{"kind":"Use","ref_id":{"krate":0,"index":13099},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180944,"byte_end":180948,"line_start":162,"line_end":162,"column_start":21,"column_end":25},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":2031}},{"kind":"Use","ref_id":{"krate":0,"index":13160},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181055,"byte_end":181058,"line_start":166,"line_end":166,"column_start":20,"column_end":23},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":2031}},{"kind":"Use","ref_id":{"krate":0,"index":13217},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181223,"byte_end":181229,"line_start":172,"line_end":172,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":2031}},{"kind":"Use","ref_id":{"krate":0,"index":13265},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181406,"byte_end":181417,"line_start":178,"line_end":178,"column_start":29,"column_end":40},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":2031}},{"kind":"Use","ref_id":{"krate":0,"index":13313},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181526,"byte_end":181530,"line_start":182,"line_end":182,"column_start":21,"column_end":25},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":2031}},{"kind":"Use","ref_id":{"krate":0,"index":13382},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181785,"byte_end":181800,"line_start":190,"line_end":190,"column_start":33,"column_end":48},"alias_span":null,"name":"BufferUnordered","value":"","parent":{"krate":0,"index":2031}},{"kind":"Use","ref_id":{"krate":0,"index":13427},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":182039,"byte_end":182047,"line_start":198,"line_end":198,"column_start":25,"column_end":33},"alias_span":null,"name":"Buffered","value":"","parent":{"krate":0,"index":2031}},{"kind":"Use","ref_id":{"krate":0,"index":13655},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":182989,"byte_end":183006,"line_start":225,"line_end":225,"column_start":36,"column_end":53},"alias_span":null,"name":"ForEachConcurrent","value":"","parent":{"krate":0,"index":2031}},{"kind":"Use","ref_id":{"krate":0,"index":13716},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":183596,"byte_end":183607,"line_start":243,"line_end":243,"column_start":29,"column_end":40},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":2031}},{"kind":"Use","ref_id":{"krate":0,"index":11522},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":172645,"byte_end":172650,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":11571},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":172652,"byte_end":172659,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":11682},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":172661,"byte_end":172667,"line_start":21,"line_end":21,"column_start":21,"column_end":27},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":11759},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":172669,"byte_end":172674,"line_start":21,"line_end":21,"column_start":29,"column_end":34},"alias_span":null,"name":"Cycle","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":11799},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":172676,"byte_end":172685,"line_start":21,"line_end":21,"column_start":36,"column_end":45},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":11843},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":172687,"byte_end":172693,"line_start":21,"line_end":21,"column_start":47,"column_end":53},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":11908},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":172695,"byte_end":172704,"line_start":21,"line_end":21,"column_start":55,"column_end":64},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":12497},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":172706,"byte_end":172713,"line_start":21,"line_end":21,"column_start":66,"column_end":73},"alias_span":null,"name":"FlatMap","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":12024},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":172715,"byte_end":172722,"line_start":21,"line_end":21,"column_start":75,"column_end":82},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":12077},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":172724,"byte_end":172728,"line_start":21,"line_end":21,"column_start":84,"column_end":88},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":12268},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":172730,"byte_end":172737,"line_start":21,"line_end":21,"column_start":90,"column_end":97},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":12325},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":172743,"byte_end":172747,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":12378},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":172749,"byte_end":172756,"line_start":22,"line_end":22,"column_start":11,"column_end":18},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":12444},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":172758,"byte_end":172761,"line_start":22,"line_end":22,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":12576},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":172763,"byte_end":172767,"line_start":22,"line_end":22,"column_start":25,"column_end":29},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":12718},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":172769,"byte_end":172775,"line_start":22,"line_end":22,"column_start":31,"column_end":37},"alias_span":null,"name":"NextIf","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":12767},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":172777,"byte_end":172785,"line_start":22,"line_end":22,"column_start":39,"column_end":47},"alias_span":null,"name":"NextIfEq","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":12636},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":172787,"byte_end":172791,"line_start":22,"line_end":22,"column_start":49,"column_end":53},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":12677},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":172793,"byte_end":172800,"line_start":22,"line_end":22,"column_start":55,"column_end":62},"alias_span":null,"name":"PeekMut","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":12592},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":172802,"byte_end":172810,"line_start":22,"line_end":22,"column_start":64,"column_end":72},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":13313},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":172812,"byte_end":172816,"line_start":22,"line_end":22,"column_start":74,"column_end":78},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":12584},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":172818,"byte_end":172832,"line_start":22,"line_end":22,"column_start":80,"column_end":94},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":12816},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":172838,"byte_end":172842,"line_start":23,"line_end":23,"column_start":5,"column_end":9},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":12860},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":172844,"byte_end":172853,"line_start":23,"line_end":23,"column_start":11,"column_end":20},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":4030},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":172855,"byte_end":172864,"line_start":23,"line_end":23,"column_start":22,"column_end":31},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":12369},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":172866,"byte_end":172878,"line_start":23,"line_end":23,"column_start":33,"column_end":45},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":12929},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":172880,"byte_end":172884,"line_start":23,"line_end":23,"column_start":47,"column_end":51},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":13042},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":172886,"byte_end":172895,"line_start":23,"line_end":23,"column_start":53,"column_end":62},"alias_span":null,"name":"TakeUntil","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":12973},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":172897,"byte_end":172906,"line_start":23,"line_end":23,"column_start":64,"column_end":73},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":13099},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":172908,"byte_end":172912,"line_start":23,"line_end":23,"column_start":75,"column_end":79},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":11620},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":172914,"byte_end":172919,"line_start":23,"line_end":23,"column_start":81,"column_end":86},"alias_span":null,"name":"Unzip","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":13160},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":172921,"byte_end":172924,"line_start":23,"line_end":23,"column_start":88,"column_end":91},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":13716},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":172976,"byte_end":172987,"line_start":27,"line_end":27,"column_start":23,"column_end":34},"alias_span":null,"name":"CatchUnwind","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":13217},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":173038,"byte_end":173044,"line_start":30,"line_end":30,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":13265},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":173095,"byte_end":173106,"line_start":33,"line_end":33,"column_start":23,"column_end":34},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":13382},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":173298,"byte_end":173313,"line_start":41,"line_end":41,"column_start":24,"column_end":39},"alias_span":null,"name":"BufferUnordered","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":13427},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":173315,"byte_end":173323,"line_start":41,"line_end":41,"column_start":41,"column_end":49},"alias_span":null,"name":"Buffered","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":13655},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":173325,"byte_end":173342,"line_start":41,"line_end":41,"column_start":51,"column_end":68},"alias_span":null,"name":"ForEachConcurrent","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":13760},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":347389,"byte_end":347396,"line_start":26,"line_end":26,"column_start":25,"column_end":32},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":4239}},{"kind":"Use","ref_id":{"krate":0,"index":14028},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":348391,"byte_end":348401,"line_start":51,"line_end":51,"column_start":28,"column_end":38},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":4239}},{"kind":"Use","ref_id":{"krate":0,"index":14206},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":349081,"byte_end":349087,"line_start":69,"line_end":69,"column_start":24,"column_end":30},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":4239}},{"kind":"Use","ref_id":{"krate":0,"index":14267},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":349204,"byte_end":349211,"line_start":73,"line_end":73,"column_start":25,"column_end":32},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":4239}},{"kind":"Use","ref_id":{"krate":0,"index":14275},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":349336,"byte_end":349346,"line_start":77,"line_end":77,"column_start":29,"column_end":39},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":4239}},{"kind":"Use","ref_id":{"krate":0,"index":14332},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":349467,"byte_end":349476,"line_start":81,"line_end":81,"column_start":27,"column_end":36},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":4239}},{"kind":"Use","ref_id":{"krate":0,"index":14397},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":349605,"byte_end":349617,"line_start":85,"line_end":85,"column_start":31,"column_end":43},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":4239}},{"kind":"Use","ref_id":{"krate":0,"index":14458},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":349740,"byte_end":349750,"line_start":89,"line_end":89,"column_start":28,"column_end":38},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":4239}},{"kind":"Use","ref_id":{"krate":0,"index":14502},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":349873,"byte_end":349883,"line_start":93,"line_end":93,"column_start":28,"column_end":38},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":4239}},{"kind":"Use","ref_id":{"krate":0,"index":14551},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":350004,"byte_end":350013,"line_start":97,"line_end":97,"column_start":27,"column_end":36},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":4239}},{"kind":"Use","ref_id":{"krate":0,"index":14591},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":350187,"byte_end":350196,"line_start":103,"line_end":103,"column_start":28,"column_end":37},"alias_span":null,"name":"TryChunks","value":"","parent":{"krate":0,"index":4239}},{"kind":"Use","ref_id":{"krate":0,"index":14639},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":350198,"byte_end":350212,"line_start":103,"line_end":103,"column_start":39,"column_end":53},"alias_span":null,"name":"TryChunksError","value":"","parent":{"krate":0,"index":4239}},{"kind":"Use","ref_id":{"krate":0,"index":14640},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":350198,"byte_end":350212,"line_start":103,"line_end":103,"column_start":39,"column_end":53},"alias_span":null,"name":"TryChunksError","value":"","parent":{"krate":0,"index":4239}},{"kind":"Use","ref_id":{"krate":0,"index":14660},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":350330,"byte_end":350337,"line_start":107,"line_end":107,"column_start":25,"column_end":32},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":4239}},{"kind":"Use","ref_id":{"krate":0,"index":4963},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":350459,"byte_end":350469,"line_start":111,"line_end":111,"column_start":28,"column_end":38},"alias_span":null,"name":"try_unfold","value":"","parent":{"krate":0,"index":4239}},{"kind":"Use","ref_id":{"krate":0,"index":14729},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":350471,"byte_end":350480,"line_start":111,"line_end":111,"column_start":40,"column_end":49},"alias_span":null,"name":"TryUnfold","value":"","parent":{"krate":0,"index":4239}},{"kind":"Use","ref_id":{"krate":0,"index":14786},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":350610,"byte_end":350622,"line_start":115,"line_end":115,"column_start":31,"column_end":43},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":4239}},{"kind":"Use","ref_id":{"krate":0,"index":14855},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":350751,"byte_end":350763,"line_start":119,"line_end":119,"column_start":31,"column_end":43},"alias_span":null,"name":"TryTakeWhile","value":"","parent":{"krate":0,"index":4239}},{"kind":"Use","ref_id":{"krate":0,"index":14924},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":351026,"byte_end":351044,"line_start":127,"line_end":127,"column_start":37,"column_end":55},"alias_span":null,"name":"TryBufferUnordered","value":"","parent":{"krate":0,"index":4239}},{"kind":"Use","ref_id":{"krate":0,"index":14972},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":351291,"byte_end":351302,"line_start":135,"line_end":135,"column_start":29,"column_end":40},"alias_span":null,"name":"TryBuffered","value":"","parent":{"krate":0,"index":4239}},{"kind":"Use","ref_id":{"krate":0,"index":15020},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":351571,"byte_end":351591,"line_start":143,"line_end":143,"column_start":40,"column_end":60},"alias_span":null,"name":"TryForEachConcurrent","value":"","parent":{"krate":0,"index":4239}},{"kind":"Use","ref_id":{"krate":0,"index":15081},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":351862,"byte_end":351875,"line_start":152,"line_end":152,"column_start":32,"column_end":45},"alias_span":null,"name":"IntoAsyncRead","value":"","parent":{"krate":0,"index":4239}},{"kind":"Use","ref_id":{"krate":0,"index":4963},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":173591,"byte_end":173601,"line_start":51,"line_end":51,"column_start":5,"column_end":15},"alias_span":null,"name":"try_unfold","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":13760},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":173603,"byte_end":173610,"line_start":51,"line_end":51,"column_start":17,"column_end":24},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":13824},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":173612,"byte_end":173619,"line_start":51,"line_end":51,"column_start":26,"column_end":33},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":13962},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":173621,"byte_end":173631,"line_start":51,"line_end":51,"column_start":35,"column_end":45},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":13893},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":173633,"byte_end":173642,"line_start":51,"line_end":51,"column_start":47,"column_end":56},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":14028},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":173644,"byte_end":173654,"line_start":51,"line_end":51,"column_start":58,"column_end":68},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":14140},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":173656,"byte_end":173662,"line_start":51,"line_end":51,"column_start":70,"column_end":76},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":14071},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":173664,"byte_end":173669,"line_start":51,"line_end":51,"column_start":78,"column_end":83},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":14206},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":173671,"byte_end":173677,"line_start":51,"line_end":51,"column_start":85,"column_end":91},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":14502},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":173683,"byte_end":173693,"line_start":52,"line_end":52,"column_start":5,"column_end":15},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":14551},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":173695,"byte_end":173704,"line_start":52,"line_end":52,"column_start":17,"column_end":26},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":14332},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":173706,"byte_end":173715,"line_start":52,"line_end":52,"column_start":28,"column_end":37},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":14397},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":173717,"byte_end":173729,"line_start":52,"line_end":52,"column_start":39,"column_end":51},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":14458},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":173731,"byte_end":173741,"line_start":52,"line_end":52,"column_start":53,"column_end":63},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":14660},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":173743,"byte_end":173750,"line_start":52,"line_end":52,"column_start":65,"column_end":72},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":14275},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":173752,"byte_end":173762,"line_start":52,"line_end":52,"column_start":74,"column_end":84},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":14267},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":173764,"byte_end":173771,"line_start":52,"line_end":52,"column_start":86,"column_end":93},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":14786},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":173777,"byte_end":173789,"line_start":53,"line_end":53,"column_start":5,"column_end":17},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":5336},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":173791,"byte_end":173803,"line_start":53,"line_end":53,"column_start":19,"column_end":31},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":14855},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":173805,"byte_end":173817,"line_start":53,"line_end":53,"column_start":33,"column_end":45},"alias_span":null,"name":"TryTakeWhile","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":14729},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":173819,"byte_end":173828,"line_start":53,"line_end":53,"column_start":47,"column_end":56},"alias_span":null,"name":"TryUnfold","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":15081},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":173953,"byte_end":173966,"line_start":59,"line_end":59,"column_start":27,"column_end":40},"alias_span":null,"name":"IntoAsyncRead","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":14924},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":174057,"byte_end":174075,"line_start":63,"line_end":63,"column_start":28,"column_end":46},"alias_span":null,"name":"TryBufferUnordered","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":14972},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":174077,"byte_end":174088,"line_start":63,"line_end":63,"column_start":48,"column_end":59},"alias_span":null,"name":"TryBuffered","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":15020},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":174090,"byte_end":174110,"line_start":63,"line_end":63,"column_start":61,"column_end":81},"alias_span":null,"name":"TryForEachConcurrent","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":14591},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":174167,"byte_end":174176,"line_start":66,"line_end":66,"column_start":28,"column_end":37},"alias_span":null,"name":"TryChunks","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":14639},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":174178,"byte_end":174192,"line_start":66,"line_end":66,"column_start":39,"column_end":53},"alias_span":null,"name":"TryChunksError","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":14640},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":174178,"byte_end":174192,"line_start":66,"line_end":66,"column_start":39,"column_end":53},"alias_span":null,"name":"TryChunksError","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":5493},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":174249,"byte_end":174253,"line_start":71,"line_end":71,"column_start":22,"column_end":26},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":15133},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":174255,"byte_end":174259,"line_start":71,"line_end":71,"column_start":28,"column_end":32},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":5528},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":174298,"byte_end":174304,"line_start":74,"line_end":74,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":15142},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":174306,"byte_end":174312,"line_start":74,"line_end":74,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":5581},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":174361,"byte_end":174372,"line_start":77,"line_end":77,"column_start":29,"column_end":40},"alias_span":null,"name":"repeat_with","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":15151},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":174374,"byte_end":174384,"line_start":77,"line_end":77,"column_start":42,"column_end":52},"alias_span":null,"name":"RepeatWith","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":5615},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":174421,"byte_end":174426,"line_start":80,"line_end":80,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":15160},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":174428,"byte_end":174433,"line_start":80,"line_end":80,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":5667},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":174468,"byte_end":174472,"line_start":83,"line_end":83,"column_start":22,"column_end":26},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":15166},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":174474,"byte_end":174478,"line_start":83,"line_end":83,"column_start":28,"column_end":32},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":5711},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":174519,"byte_end":174526,"line_start":86,"line_end":86,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":15202},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":174528,"byte_end":174535,"line_start":86,"line_end":86,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":5761},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":174576,"byte_end":174583,"line_start":89,"line_end":89,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":5753},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":174585,"byte_end":174591,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":5802},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":174646,"byte_end":174660,"line_start":92,"line_end":92,"column_start":32,"column_end":46},"alias_span":null,"name":"poll_immediate","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":15208},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":174662,"byte_end":174675,"line_start":92,"line_end":92,"column_start":48,"column_end":61},"alias_span":null,"name":"PollImmediate","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":5845},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":174714,"byte_end":174720,"line_start":95,"line_end":95,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":15247},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":174722,"byte_end":174728,"line_start":95,"line_end":95,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":5916},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":174795,"byte_end":174815,"line_start":98,"line_end":98,"column_start":38,"column_end":58},"alias_span":null,"name":"select_with_strategy","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":15292},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":174817,"byte_end":174825,"line_start":98,"line_end":98,"column_start":60,"column_end":68},"alias_span":null,"name":"PollNext","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":15311},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":174827,"byte_end":174845,"line_start":98,"line_end":98,"column_start":70,"column_end":88},"alias_span":null,"name":"SelectWithStrategy","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":6005},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":174884,"byte_end":174890,"line_start":101,"line_end":101,"column_start":24,"column_end":30},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":15384},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":174892,"byte_end":174898,"line_start":101,"line_end":101,"column_start":32,"column_end":38},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":6105},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":175076,"byte_end":175090,"line_start":108,"line_end":108,"column_start":32,"column_end":46},"alias_span":null,"name":"FuturesOrdered","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":15516},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":477597,"byte_end":477605,"line_start":26,"line_end":26,"column_start":22,"column_end":30},"alias_span":null,"name":"IntoIter","value":"","parent":{"krate":0,"index":6147}},{"kind":"Use","ref_id":{"krate":0,"index":15507},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":477607,"byte_end":477611,"line_start":26,"line_end":26,"column_start":32,"column_end":36},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":6147}},{"kind":"Use","ref_id":{"krate":0,"index":15508},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":477607,"byte_end":477611,"line_start":26,"line_end":26,"column_start":32,"column_end":36},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":6147}},{"kind":"Use","ref_id":{"krate":0,"index":15487},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":477613,"byte_end":477620,"line_start":26,"line_end":26,"column_start":38,"column_end":45},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":6147}},{"kind":"Use","ref_id":{"krate":0,"index":15488},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":477613,"byte_end":477620,"line_start":26,"line_end":26,"column_start":38,"column_end":45},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":6147}},{"kind":"Use","ref_id":{"krate":0,"index":15477},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":477622,"byte_end":477632,"line_start":26,"line_end":26,"column_start":47,"column_end":57},"alias_span":null,"name":"IterPinMut","value":"","parent":{"krate":0,"index":6147}},{"kind":"Use","ref_id":{"krate":0,"index":15496},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":477634,"byte_end":477644,"line_start":26,"line_end":26,"column_start":59,"column_end":69},"alias_span":null,"name":"IterPinRef","value":"","parent":{"krate":0,"index":6147}},{"kind":"Use","ref_id":{"krate":0,"index":6468},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":175290,"byte_end":175306,"line_start":116,"line_end":116,"column_start":34,"column_end":50},"alias_span":null,"name":"FuturesUnordered","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":6628},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":175493,"byte_end":175503,"line_start":124,"line_end":124,"column_start":28,"column_end":38},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":15523},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":175505,"byte_end":175514,"line_start":124,"line_end":124,"column_start":40,"column_end":49},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":16330},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":175682,"byte_end":175693,"line_start":131,"line_end":131,"column_start":28,"column_end":39},"alias_span":null,"name":"AbortHandle","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":16326},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":175695,"byte_end":175712,"line_start":131,"line_end":131,"column_start":41,"column_end":58},"alias_span":null,"name":"AbortRegistration","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":16283},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":175714,"byte_end":175723,"line_start":131,"line_end":131,"column_start":60,"column_end":69},"alias_span":null,"name":"Abortable","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":16341},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":175725,"byte_end":175732,"line_start":131,"line_end":131,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":16342},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":175725,"byte_end":175732,"line_start":131,"line_end":131,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":0,"index":6699},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":175815,"byte_end":175824,"line_start":134,"line_end":134,"column_start":20,"column_end":29},"alias_span":null,"name":"abortable","value":"","parent":{"krate":0,"index":2013}},{"kind":"Use","ref_id":{"krate":20,"index":96},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":10777,"byte_end":10783,"line_start":300,"line_end":300,"column_start":25,"column_end":31},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4030},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":10785,"byte_end":10794,"line_start":300,"line_end":300,"column_start":33,"column_end":42},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":127},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":10796,"byte_end":10805,"line_start":300,"line_end":300,"column_start":44,"column_end":53},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5336},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":10807,"byte_end":10819,"line_start":300,"line_end":300,"column_start":55,"column_end":67},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":2,"index":14065},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":526398,"byte_end":526405,"line_start":14,"line_end":14,"column_start":22,"column_end":29},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":6733}},{"kind":"Use","ref_id":{"krate":2,"index":50416},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":526407,"byte_end":526411,"line_start":14,"line_end":14,"column_start":31,"column_end":35},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":6733}},{"kind":"Use","ref_id":{"krate":2,"index":50452},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":526413,"byte_end":526421,"line_start":14,"line_end":14,"column_start":37,"column_end":45},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":6733}},{"kind":"Use","ref_id":{"krate":2,"index":50461},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":526423,"byte_end":526437,"line_start":14,"line_end":14,"column_start":47,"column_end":61},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":6733}},{"kind":"Use","ref_id":{"krate":2,"index":14075},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":526439,"byte_end":526444,"line_start":14,"line_end":14,"column_start":63,"column_end":68},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":6733}},{"kind":"Use","ref_id":{"krate":23,"index":237},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":526471,"byte_end":526480,"line_start":16,"line_end":16,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":6733}},{"kind":"Use","ref_id":{"krate":23,"index":203},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":526482,"byte_end":526496,"line_start":16,"line_end":16,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":6733}},{"kind":"Use","ref_id":{"krate":23,"index":18},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":526498,"byte_end":526508,"line_start":16,"line_end":16,"column_start":51,"column_end":61},"alias_span":null,"name":"LocalSpawn","value":"","parent":{"krate":0,"index":6733}},{"kind":"Use","ref_id":{"krate":23,"index":15},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":526510,"byte_end":526515,"line_start":16,"line_end":16,"column_start":63,"column_end":68},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":6733}},{"kind":"Use","ref_id":{"krate":23,"index":21},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":526517,"byte_end":526527,"line_start":16,"line_end":16,"column_start":70,"column_end":80},"alias_span":null,"name":"SpawnError","value":"","parent":{"krate":0,"index":6733}},{"kind":"Use","ref_id":{"krate":23,"index":258},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":526529,"byte_end":526544,"line_start":16,"line_end":16,"column_start":82,"column_end":97},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":6733}},{"kind":"Use","ref_id":{"krate":23,"index":378},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":526570,"byte_end":526580,"line_start":18,"line_end":18,"column_start":23,"column_end":33},"alias_span":null,"name":"noop_waker","value":"","parent":{"krate":0,"index":6733}},{"kind":"Use","ref_id":{"krate":23,"index":379},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":526604,"byte_end":526618,"line_start":19,"line_end":19,"column_start":23,"column_end":37},"alias_span":null,"name":"noop_waker_ref","value":"","parent":{"krate":0,"index":6733}},{"kind":"Use","ref_id":{"krate":23,"index":94},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":526704,"byte_end":526711,"line_start":23,"line_end":23,"column_start":23,"column_end":30},"alias_span":null,"name":"ArcWake","value":"","parent":{"krate":0,"index":6733}},{"kind":"Use","ref_id":{"krate":23,"index":122},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":526797,"byte_end":526802,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"alias_span":null,"name":"waker","value":"","parent":{"krate":0,"index":6733}},{"kind":"Use","ref_id":{"krate":23,"index":170},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":526889,"byte_end":526898,"line_start":31,"line_end":31,"column_start":24,"column_end":33},"alias_span":null,"name":"waker_ref","value":"","parent":{"krate":0,"index":6733}},{"kind":"Use","ref_id":{"krate":23,"index":407},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":526900,"byte_end":526908,"line_start":31,"line_end":31,"column_start":35,"column_end":43},"alias_span":null,"name":"WakerRef","value":"","parent":{"krate":0,"index":6733}},{"kind":"Use","ref_id":{"krate":20,"index":194},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":526987,"byte_end":526998,"line_start":34,"line_end":34,"column_start":41,"column_end":52},"alias_span":null,"name":"AtomicWaker","value":"","parent":{"krate":0,"index":6733}},{"kind":"Use","ref_id":{"krate":0,"index":6822},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":527034,"byte_end":527047,"line_start":37,"line_end":37,"column_start":23,"column_end":36},"alias_span":null,"name":"LocalSpawnExt","value":"","parent":{"krate":0,"index":6733}},{"kind":"Use","ref_id":{"krate":0,"index":6819},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":527049,"byte_end":527057,"line_start":37,"line_end":37,"column_start":38,"column_end":46},"alias_span":null,"name":"SpawnExt","value":"","parent":{"krate":0,"index":6733}},{"kind":"Use","ref_id":{"krate":1,"index":4084},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":535285,"byte_end":535290,"line_start":29,"line_end":29,"column_start":19,"column_end":24},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":1,"index":10705},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":535292,"byte_end":535301,"line_start":29,"line_end":29,"column_start":26,"column_end":35},"alias_span":null,"name":"ErrorKind","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":1,"index":10829},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":535303,"byte_end":535310,"line_start":29,"line_end":29,"column_start":37,"column_end":44},"alias_span":null,"name":"IoSlice","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":1,"index":4685},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":535312,"byte_end":535322,"line_start":29,"line_end":29,"column_start":46,"column_end":56},"alias_span":null,"name":"IoSliceMut","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":1,"index":4082},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":535324,"byte_end":535330,"line_start":29,"line_end":29,"column_start":58,"column_end":64},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":1,"index":10841},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":535332,"byte_end":535340,"line_start":29,"line_end":29,"column_start":66,"column_end":74},"alias_span":null,"name":"SeekFrom","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":26,"index":49},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":535365,"byte_end":535377,"line_start":31,"line_end":31,"column_start":22,"column_end":34},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":26,"index":39},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":535379,"byte_end":535388,"line_start":31,"line_end":31,"column_start":36,"column_end":45},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":26,"index":47},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":535390,"byte_end":535399,"line_start":31,"line_end":31,"column_start":47,"column_end":56},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":26,"index":42},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":535401,"byte_end":535411,"line_start":31,"line_end":31,"column_start":58,"column_end":68},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":0,"index":15581},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":535838,"byte_end":535848,"line_start":46,"line_end":46,"column_start":26,"column_end":36},"alias_span":null,"name":"AllowStdIo","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":0,"index":15614},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":535894,"byte_end":535903,"line_start":49,"line_end":49,"column_start":28,"column_end":37},"alias_span":null,"name":"BufReader","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":0,"index":15667},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":535905,"byte_end":535917,"line_start":49,"line_end":49,"column_start":39,"column_end":51},"alias_span":null,"name":"SeeKRelative","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":0,"index":15677},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":535963,"byte_end":535972,"line_start":52,"line_end":52,"column_start":27,"column_end":36},"alias_span":null,"name":"BufWriter","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":0,"index":15726},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":536019,"byte_end":536029,"line_start":55,"line_end":55,"column_start":28,"column_end":38},"alias_span":null,"name":"LineWriter","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":0,"index":15762},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":536064,"byte_end":536069,"line_start":58,"line_end":58,"column_start":22,"column_end":27},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":0,"index":15811},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":536104,"byte_end":536109,"line_start":61,"line_end":61,"column_start":22,"column_end":27},"alias_span":null,"name":"Close","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":0,"index":7335},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":536143,"byte_end":536147,"line_start":64,"line_end":64,"column_start":22,"column_end":26},"alias_span":null,"name":"copy","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":0,"index":15819},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":536149,"byte_end":536153,"line_start":64,"line_end":64,"column_start":28,"column_end":32},"alias_span":null,"name":"Copy","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":0,"index":7380},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":536196,"byte_end":536204,"line_start":67,"line_end":67,"column_start":26,"column_end":34},"alias_span":null,"name":"copy_buf","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":0,"index":15873},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":536206,"byte_end":536213,"line_start":67,"line_end":67,"column_start":36,"column_end":43},"alias_span":null,"name":"CopyBuf","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":0,"index":7438},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":536276,"byte_end":536294,"line_start":70,"line_end":70,"column_start":36,"column_end":54},"alias_span":null,"name":"copy_buf_abortable","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":0,"index":15935},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":536296,"byte_end":536312,"line_start":70,"line_end":70,"column_start":56,"column_end":72},"alias_span":null,"name":"CopyBufAbortable","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":0,"index":16001},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":536350,"byte_end":536356,"line_start":73,"line_end":73,"column_start":23,"column_end":29},"alias_span":null,"name":"Cursor","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":0,"index":7543},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":536392,"byte_end":536397,"line_start":76,"line_end":76,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":0,"index":7541},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":536399,"byte_end":536404,"line_start":76,"line_end":76,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":0,"index":16029},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":536446,"byte_end":536453,"line_start":79,"line_end":79,"column_start":25,"column_end":32},"alias_span":null,"name":"FillBuf","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":0,"index":16037},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":536488,"byte_end":536493,"line_start":82,"line_end":82,"column_start":22,"column_end":27},"alias_span":null,"name":"Flush","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":0,"index":16045},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":536725,"byte_end":536730,"line_start":92,"line_end":92,"column_start":22,"column_end":27},"alias_span":null,"name":"Lines","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":0,"index":16093},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":536763,"byte_end":536767,"line_start":95,"line_end":95,"column_start":21,"column_end":25},"alias_span":null,"name":"Read","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":0,"index":16102},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":536818,"byte_end":536830,"line_start":98,"line_end":98,"column_start":30,"column_end":42},"alias_span":null,"name":"ReadVectored","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":0,"index":16111},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":536875,"byte_end":536884,"line_start":101,"line_end":101,"column_start":27,"column_end":36},"alias_span":null,"name":"ReadExact","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":0,"index":16120},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":536927,"byte_end":536935,"line_start":104,"line_end":104,"column_start":26,"column_end":34},"alias_span":null,"name":"ReadLine","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":0,"index":16131},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":536982,"byte_end":536991,"line_start":107,"line_end":107,"column_start":28,"column_end":37},"alias_span":null,"name":"ReadToEnd","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":0,"index":16141},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":537044,"byte_end":537056,"line_start":110,"line_end":110,"column_start":31,"column_end":43},"alias_span":null,"name":"ReadToString","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":0,"index":16152},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":537101,"byte_end":537110,"line_start":113,"line_end":113,"column_start":27,"column_end":36},"alias_span":null,"name":"ReadUntil","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":0,"index":7993},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":537148,"byte_end":537154,"line_start":116,"line_end":116,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":0,"index":7991},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":537156,"byte_end":537162,"line_start":116,"line_end":116,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":0,"index":16163},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":537196,"byte_end":537200,"line_start":119,"line_end":119,"column_start":21,"column_end":25},"alias_span":null,"name":"Seek","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":0,"index":8069},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":537234,"byte_end":537238,"line_start":122,"line_end":122,"column_start":22,"column_end":26},"alias_span":null,"name":"sink","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":0,"index":8067},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":537240,"byte_end":537244,"line_start":122,"line_end":122,"column_start":28,"column_end":32},"alias_span":null,"name":"Sink","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":0,"index":16172},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":537281,"byte_end":537289,"line_start":125,"line_end":125,"column_start":23,"column_end":31},"alias_span":null,"name":"ReadHalf","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":0,"index":8151},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":537291,"byte_end":537303,"line_start":125,"line_end":125,"column_start":33,"column_end":45},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":0,"index":8152},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":537291,"byte_end":537303,"line_start":125,"line_end":125,"column_start":33,"column_end":45},"alias_span":null,"name":"ReuniteError","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":0,"index":16178},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":537305,"byte_end":537314,"line_start":125,"line_end":125,"column_start":47,"column_end":56},"alias_span":null,"name":"WriteHalf","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":0,"index":16184},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":537348,"byte_end":537352,"line_start":128,"line_end":128,"column_start":21,"column_end":25},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":0,"index":16228},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":537389,"byte_end":537395,"line_start":131,"line_end":131,"column_start":23,"column_end":29},"alias_span":null,"name":"Window","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":0,"index":16235},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":537430,"byte_end":537435,"line_start":134,"line_end":134,"column_start":22,"column_end":27},"alias_span":null,"name":"Write","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":0,"index":16244},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":537488,"byte_end":537501,"line_start":137,"line_end":137,"column_start":31,"column_end":44},"alias_span":null,"name":"WriteVectored","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":0,"index":16253},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":537544,"byte_end":537552,"line_start":140,"line_end":140,"column_start":26,"column_end":34},"alias_span":null,"name":"WriteAll","value":"","parent":{"krate":0,"index":6834}},{"kind":"Use","ref_id":{"krate":26,"index":49},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":11312,"byte_end":11324,"line_start":325,"line_end":325,"column_start":5,"column_end":17},"alias_span":null,"name":"AsyncBufRead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8392},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":11326,"byte_end":11341,"line_start":325,"line_end":325,"column_start":19,"column_end":34},"alias_span":null,"name":"AsyncBufReadExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":39},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":11343,"byte_end":11352,"line_start":325,"line_end":325,"column_start":36,"column_end":45},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8359},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":11354,"byte_end":11366,"line_start":325,"line_end":325,"column_start":47,"column_end":59},"alias_span":null,"name":"AsyncReadExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":47},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":11368,"byte_end":11377,"line_start":325,"line_end":325,"column_start":61,"column_end":70},"alias_span":null,"name":"AsyncSeek","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8387},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":11379,"byte_end":11391,"line_start":325,"line_end":325,"column_start":72,"column_end":84},"alias_span":null,"name":"AsyncSeekExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":42},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":11393,"byte_end":11403,"line_start":325,"line_end":325,"column_start":86,"column_end":96},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8376},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":11409,"byte_end":11422,"line_start":326,"line_end":326,"column_start":5,"column_end":18},"alias_span":null,"name":"AsyncWriteExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":8710},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mod.rs","byte_start":645064,"byte_end":645080,"line_start":17,"line_end":17,"column_start":5,"column_end":21},"alias_span":null,"name":"MappedMutexGuard","value":"","parent":{"krate":0,"index":8431}},{"kind":"Use","ref_id":{"krate":0,"index":8596},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mod.rs","byte_start":645082,"byte_end":645087,"line_start":17,"line_end":17,"column_start":23,"column_end":28},"alias_span":null,"name":"Mutex","value":"","parent":{"krate":0,"index":8431}},{"kind":"Use","ref_id":{"krate":0,"index":8687},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mod.rs","byte_start":645089,"byte_end":645099,"line_start":17,"line_end":17,"column_start":30,"column_end":40},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":8431}},{"kind":"Use","ref_id":{"krate":0,"index":8668},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mod.rs","byte_start":645101,"byte_end":645116,"line_start":17,"line_end":17,"column_start":42,"column_end":57},"alias_span":null,"name":"MutexLockFuture","value":"","parent":{"krate":0,"index":8431}},{"kind":"Use","ref_id":{"krate":0,"index":8652},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mod.rs","byte_start":645118,"byte_end":645133,"line_start":17,"line_end":17,"column_start":59,"column_end":74},"alias_span":null,"name":"OwnedMutexGuard","value":"","parent":{"krate":0,"index":8431}},{"kind":"Use","ref_id":{"krate":0,"index":8635},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mod.rs","byte_start":645135,"byte_end":645155,"line_start":17,"line_end":17,"column_start":76,"column_end":96},"alias_span":null,"name":"OwnedMutexLockFuture","value":"","parent":{"krate":0,"index":8431}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":0,"byte_end":11572,"line_start":1,"line_end":337,"column_start":1,"column_end":18},"name":"","qualname":"::","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":2000},{"krate":0,"index":2001},{"krate":0,"index":2004},{"krate":0,"index":2007},{"krate":0,"index":2010},{"krate":0,"index":2013},{"krate":0,"index":6720},{"krate":0,"index":6721},{"krate":0,"index":6724},{"krate":0,"index":6727},{"krate":0,"index":6730},{"krate":0,"index":6733},{"krate":0,"index":6832},{"krate":0,"index":6834},{"krate":0,"index":8406},{"krate":0,"index":8407},{"krate":0,"index":8410},{"krate":0,"index":8413},{"krate":0,"index":8416},{"krate":0,"index":8419},{"krate":0,"index":8422},{"krate":0,"index":8425},{"krate":0,"index":8428},{"krate":0,"index":8431},{"krate":0,"index":8767},{"krate":0,"index":8829},{"krate":0,"index":9043}],"decl_id":null,"docs":" Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,\n and the `AsyncRead` and `AsyncWrite` traits.\n","sig":null,"attributes":[{"value":"/ Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ and the `AsyncRead` and `AsyncWrite` traits.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":78,"byte_end":126,"line_start":2,"line_end":2,"column_start":1,"column_end":49}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\nsingle_use_lifetimes, unreachable_pub)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":243,"byte_end":375,"line_start":6,"line_end":12,"column_start":1,"column_end":3}}]},{"kind":"Function","id":{"krate":0,"index":43},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/async_await/poll.rs","byte_start":14000,"byte_end":14004,"line_start":24,"line_end":24,"column_start":8,"column_end":12},"name":"poll","qualname":"::async_await::poll::poll","value":"fn poll<F>(F) -> PollOnce<F> where F: Future + Unpin","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":45},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/async_await/poll.rs","byte_start":14145,"byte_end":14153,"line_start":30,"line_end":30,"column_start":12,"column_end":20},"name":"PollOnce","qualname":"::async_await::poll::PollOnce","value":"PollOnce {  }","parent":null,"children":[{"krate":0,"index":47}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/async_await/poll.rs","byte_start":14079,"byte_end":14118,"line_start":28,"line_end":28,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/async_await/poll.rs","byte_start":14284,"byte_end":14288,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"poll","qualname":"<PollOnce<F> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":68},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/async_await/pending.rs","byte_start":15214,"byte_end":15226,"line_start":23,"line_end":23,"column_start":8,"column_end":20},"name":"pending_once","qualname":"::async_await::pending::pending_once","value":"fn pending_once() -> PendingOnce","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":69},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/async_await/pending.rs","byte_start":15351,"byte_end":15362,"line_start":29,"line_end":29,"column_start":12,"column_end":23},"name":"PendingOnce","qualname":"::async_await::pending::PendingOnce","value":"PendingOnce {  }","parent":null,"children":[{"krate":0,"index":70}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/async_await/pending.rs","byte_start":15285,"byte_end":15324,"line_start":27,"line_end":27,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/async_await/pending.rs","byte_start":15447,"byte_end":15451,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"poll","qualname":"<PendingOnce as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":120},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/async_await/random.rs","byte_start":34247,"byte_end":34254,"line_start":13,"line_end":13,"column_start":8,"column_end":15},"name":"shuffle","qualname":"::async_await::random::shuffle","value":"fn shuffle<T, '_>(&'_ mut [T])","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":128},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/async_await/mod.rs","byte_start":13015,"byte_end":13027,"line_start":50,"line_end":50,"column_start":8,"column_end":20},"name":"assert_unpin","qualname":"::async_await::assert_unpin","value":"fn assert_unpin<T, '_>(&'_ T) where T: Unpin","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/async_await/mod.rs","byte_start":12990,"byte_end":13007,"line_start":49,"line_end":49,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":130},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/async_await/mod.rs","byte_start":13089,"byte_end":13108,"line_start":54,"line_end":54,"column_start":8,"column_end":27},"name":"assert_fused_future","qualname":"::async_await::assert_fused_future","value":"fn assert_fused_future<T, '_>(&'_ T) where T: Future + FusedFuture","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/async_await/mod.rs","byte_start":13064,"byte_end":13081,"line_start":53,"line_end":53,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":132},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/async_await/mod.rs","byte_start":13185,"byte_end":13204,"line_start":58,"line_end":58,"column_start":8,"column_end":27},"name":"assert_fused_stream","qualname":"::async_await::assert_fused_stream","value":"fn assert_fused_stream<T, '_>(&'_ T) where T: Stream + FusedStream","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/async_await/mod.rs","byte_start":13160,"byte_end":13177,"line_start":57,"line_end":57,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":135},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":1111,"byte_end":1120,"line_start":42,"line_end":42,"column_start":9,"column_end":18},"name":"__private","qualname":"::__private","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":158}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"async-await\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":1056,"byte_end":1087,"line_start":40,"line_end":40,"column_start":1,"column_end":32}}]},{"kind":"Mod","id":{"krate":0,"index":158},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":1282,"byte_end":1293,"line_start":50,"line_end":50,"column_start":13,"column_end":24},"name":"async_await","qualname":"::__private::async_await","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","parent":null,"children":[{"krate":0,"index":159}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":167},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":175},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":182},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":616},{"krate":0,"index":619},{"krate":0,"index":622},{"krate":0,"index":625},{"krate":0,"index":628},{"krate":0,"index":631},{"krate":0,"index":634},{"krate":0,"index":637},{"krate":0,"index":640},{"krate":0,"index":643},{"krate":0,"index":646},{"krate":0,"index":649},{"krate":0,"index":650},{"krate":0,"index":653},{"krate":0,"index":656},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":897},{"krate":0,"index":900},{"krate":0,"index":903},{"krate":0,"index":906},{"krate":0,"index":909},{"krate":0,"index":912},{"krate":0,"index":915},{"krate":0,"index":918},{"krate":0,"index":921},{"krate":0,"index":924},{"krate":0,"index":927},{"krate":0,"index":930},{"krate":0,"index":933},{"krate":0,"index":936},{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":975},{"krate":0,"index":978},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1020},{"krate":0,"index":1023},{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1069},{"krate":0,"index":1072},{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1121},{"krate":0,"index":1124},{"krate":0,"index":1158},{"krate":0,"index":1161},{"krate":0,"index":1197},{"krate":0,"index":1198},{"krate":0,"index":1201},{"krate":0,"index":1204},{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1251},{"krate":0,"index":1254},{"krate":0,"index":1295},{"krate":0,"index":1296},{"krate":0,"index":1299},{"krate":0,"index":1302},{"krate":0,"index":1305},{"krate":0,"index":1308},{"krate":0,"index":1361},{"krate":0,"index":1362},{"krate":0,"index":1365},{"krate":0,"index":1368},{"krate":0,"index":1371},{"krate":0,"index":1374},{"krate":0,"index":1377},{"krate":0,"index":1380},{"krate":0,"index":1383},{"krate":0,"index":1386},{"krate":0,"index":1460},{"krate":0,"index":1461},{"krate":0,"index":1464},{"krate":0,"index":1467},{"krate":0,"index":1510},{"krate":0,"index":1511},{"krate":0,"index":1514},{"krate":0,"index":1517},{"krate":0,"index":1562},{"krate":0,"index":1563},{"krate":0,"index":1566},{"krate":0,"index":1569},{"krate":0,"index":1622},{"krate":0,"index":1623},{"krate":0,"index":1626},{"krate":0,"index":1629},{"krate":0,"index":1632},{"krate":0,"index":1635},{"krate":0,"index":1638},{"krate":0,"index":1641},{"krate":0,"index":1644},{"krate":0,"index":1647},{"krate":0,"index":1737},{"krate":0,"index":1738},{"krate":0,"index":1741},{"krate":0,"index":1744},{"krate":0,"index":1780},{"krate":0,"index":1781},{"krate":0,"index":1784},{"krate":0,"index":1787},{"krate":0,"index":1833},{"krate":0,"index":1834},{"krate":0,"index":1837},{"krate":0,"index":1840},{"krate":0,"index":1959},{"krate":0,"index":1962},{"krate":0,"index":1981},{"krate":0,"index":1982},{"krate":0,"index":1985},{"krate":0,"index":1988},{"krate":0,"index":1991},{"krate":0,"index":1992},{"krate":0,"index":1994},{"krate":0,"index":1997}],"decl_id":null,"docs":" Asynchronous values.","sig":null,"attributes":[{"value":"/ Asynchronous values.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":35316,"byte_end":35340,"line_start":1,"line_end":1,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":35341,"byte_end":35344,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":35345,"byte_end":35370,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":35371,"byte_end":35374,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Future`] trait.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":35375,"byte_end":35402,"line_start":5,"line_end":5,"column_start":1,"column_end":28}},{"value":"/ - The [`FutureExt`] and [`TryFutureExt`] trait, which provides adapters for","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":35403,"byte_end":35482,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/   chaining and composing futures.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":35483,"byte_end":35520,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/ - Top-level future combinators like [`lazy`](lazy()) which creates a future","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":35521,"byte_end":35600,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/   from a closure that defines its return value, and [`ready`](ready()),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":35601,"byte_end":35676,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/   which constructs a future with an immediate defined value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":35677,"byte_end":35741,"line_start":10,"line_end":10,"column_start":1,"column_end":65}}]},{"kind":"StructVariant","id":{"krate":0,"index":9067},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":59123,"byte_end":59128,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::future::flatten::Flatten::First","value":"Flatten::First { f }","parent":{"krate":0,"index":9064},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9068},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":59138,"byte_end":59139,"line_start":14,"line_end":14,"column_start":24,"column_end":25},"name":"f","qualname":"::future::future::flatten::Flatten::First::f","value":"Fut1","parent":{"krate":0,"index":9067},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":9069},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":59157,"byte_end":59163,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::future::flatten::Flatten::Second","value":"Flatten::Second { f }","parent":{"krate":0,"index":9064},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9070},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":59173,"byte_end":59174,"line_start":15,"line_end":15,"column_start":25,"column_end":26},"name":"f","qualname":"::future::future::flatten::Flatten::Second::f","value":"Fut2","parent":{"krate":0,"index":9069},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9071},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":59192,"byte_end":59197,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::future::flatten::Flatten::Empty","value":"Flatten::Empty","parent":{"krate":0,"index":9064},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9064},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":59093,"byte_end":59100,"line_start":13,"line_end":13,"column_start":14,"column_end":21},"name":"Flatten","qualname":"::future::future::flatten::Flatten","value":"enum Flatten<Fut1, Fut2> {\n    First {\n            f: Fut1,\n        },\n    Second {\n            f: Fut2,\n        },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":9067},{"krate":0,"index":9069},{"krate":0,"index":9071}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":59445,"byte_end":59458,"line_start":31,"line_end":31,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Flatten<Fut, Fut::Output> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":59729,"byte_end":59733,"line_start":46,"line_end":46,"column_start":8,"column_end":12},"name":"poll","qualname":"<Flatten<Fut, Fut::Output> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":60458,"byte_end":60471,"line_start":69,"line_end":69,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Flatten<Fut, Fut::Output> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":60738,"byte_end":60747,"line_start":84,"line_end":84,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Flatten<Fut, Fut::Output> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9111},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":63554,"byte_end":63558,"line_start":11,"line_end":11,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::future::future::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":9113}],"decl_id":null,"docs":" Future for the [`fuse`](super::FutureExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":65377,"byte_end":65387,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"name":"terminated","qualname":"<Fuse<Fut>>::terminated","value":"fn terminated() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Fuse`-wrapped future which is already terminated.","sig":null,"attributes":[{"value":"/ Creates a new `Fuse`-wrapped future which is already terminated.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":63755,"byte_end":63823,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":63828,"byte_end":63831,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ This can be useful in combination with looping and the `select!`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":63836,"byte_end":63904,"line_start":26,"line_end":26,"column_start":5,"column_end":73}},{"value":"/ macro, which bypasses terminated futures.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":63909,"byte_end":63954,"line_start":27,"line_end":27,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":63959,"byte_end":63962,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":63967,"byte_end":63981,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":63986,"byte_end":63989,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":63994,"byte_end":64001,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":64006,"byte_end":64047,"line_start":32,"line_end":32,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":64052,"byte_end":64083,"line_start":33,"line_end":33,"column_start":5,"column_end":36}},{"value":"/ use futures::future::{Fuse, FusedFuture, FutureExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":64088,"byte_end":64144,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/ use futures::select;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":64149,"byte_end":64173,"line_start":35,"line_end":35,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":64178,"byte_end":64213,"line_start":36,"line_end":36,"column_start":5,"column_end":40}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":64218,"byte_end":64243,"line_start":37,"line_end":37,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":64248,"byte_end":64251,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let (sender, mut stream) = mpsc::unbounded();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":64256,"byte_end":64305,"line_start":39,"line_end":39,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":64310,"byte_end":64313,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ // Send a few messages into the stream","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":64318,"byte_end":64360,"line_start":41,"line_end":41,"column_start":5,"column_end":47}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":64365,"byte_end":64404,"line_start":42,"line_end":42,"column_start":5,"column_end":44}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":64409,"byte_end":64448,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ drop(sender);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":64453,"byte_end":64470,"line_start":44,"line_end":44,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":64475,"byte_end":64478,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ // Use `Fuse::terminated()` to create an already-terminated future","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":64483,"byte_end":64553,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ // which may be instantiated later.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":64558,"byte_end":64597,"line_start":47,"line_end":47,"column_start":5,"column_end":44}},{"value":"/ let foo_printer = Fuse::terminated();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":64602,"byte_end":64643,"line_start":48,"line_end":48,"column_start":5,"column_end":46}},{"value":"/ pin_mut!(foo_printer);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":64648,"byte_end":64674,"line_start":49,"line_end":49,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":64679,"byte_end":64682,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":64687,"byte_end":64697,"line_start":51,"line_end":51,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":64702,"byte_end":64719,"line_start":52,"line_end":52,"column_start":5,"column_end":22}},{"value":"/         _ = foo_printer => {},","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":64724,"byte_end":64758,"line_start":53,"line_end":53,"column_start":5,"column_end":39}},{"value":"/         () = stream.select_next_some() => {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":64763,"byte_end":64810,"line_start":54,"line_end":54,"column_start":5,"column_end":52}},{"value":"/             if !foo_printer.is_terminated() {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":64815,"byte_end":64864,"line_start":55,"line_end":55,"column_start":5,"column_end":54}},{"value":"/                 println!(\"Foo is already being printed!\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":64869,"byte_end":64931,"line_start":56,"line_end":56,"column_start":5,"column_end":67}},{"value":"/             } else {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":64936,"byte_end":64960,"line_start":57,"line_end":57,"column_start":5,"column_end":29}},{"value":"/                 foo_printer.set(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":64965,"byte_end":65008,"line_start":58,"line_end":58,"column_start":5,"column_end":48}},{"value":"/                     // do some other async operations","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":65013,"byte_end":65070,"line_start":59,"line_end":59,"column_start":5,"column_end":62}},{"value":"/                     println!(\"Printing foo from `foo_printer` future\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":65075,"byte_end":65150,"line_start":60,"line_end":60,"column_start":5,"column_end":80}},{"value":"/                 }.fuse());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":65155,"byte_end":65185,"line_start":61,"line_end":61,"column_start":5,"column_end":35}},{"value":"/             }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":65190,"byte_end":65207,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":65212,"byte_end":65226,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/         complete => break, // `foo_printer` is terminated and the stream is done","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":65231,"byte_end":65315,"line_start":64,"line_end":64,"column_start":5,"column_end":89}},{"value":"/     }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":65320,"byte_end":65329,"line_start":65,"line_end":65,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":65334,"byte_end":65339,"line_start":66,"line_end":66,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":65344,"byte_end":65353,"line_start":67,"line_end":67,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":65358,"byte_end":65365,"line_start":68,"line_end":68,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":65491,"byte_end":65504,"line_start":75,"line_end":75,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Fuse<Fut> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":65640,"byte_end":65644,"line_start":83,"line_end":83,"column_start":8,"column_end":12},"name":"poll","qualname":"<Fuse<Fut> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Fut::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":9150},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":66445,"byte_end":66455,"line_start":16,"line_end":16,"column_start":9,"column_end":19},"name":"Incomplete","qualname":"::future::future::map::Map::Incomplete","value":"Map::Incomplete { future, f }","parent":{"krate":0,"index":9147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9151},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":66489,"byte_end":66495,"line_start":18,"line_end":18,"column_start":13,"column_end":19},"name":"future","qualname":"::future::future::map::Map::Incomplete::future","value":"Fut","parent":{"krate":0,"index":9150},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9152},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":66514,"byte_end":66515,"line_start":19,"line_end":19,"column_start":13,"column_end":14},"name":"f","qualname":"::future::future::map::Map::Incomplete::f","value":"F","parent":{"krate":0,"index":9150},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9153},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":66539,"byte_end":66547,"line_start":21,"line_end":21,"column_start":9,"column_end":17},"name":"Complete","qualname":"::future::future::map::Map::Complete","value":"Map::Complete","parent":{"krate":0,"index":9147},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9147},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":66423,"byte_end":66426,"line_start":15,"line_end":15,"column_start":14,"column_end":17},"name":"Map","qualname":"::future::future::map::Map","value":"enum Map<Fut, F> {\n    Incomplete {\n            future: Fut,\n            f: F,\n        },\n    Complete,\n}","parent":null,"children":[{"krate":0,"index":9150},{"krate":0,"index":9153}],"decl_id":null,"docs":" Internal Map future\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14925051,"byte_end":14925060,"line_start":659,"line_end":659,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":66828,"byte_end":66841,"line_start":37,"line_end":37,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Map<Fut, F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":67115,"byte_end":67119,"line_start":52,"line_end":52,"column_start":8,"column_end":12},"name":"poll","qualname":"<Map<Fut, F> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<T>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9202},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":39549,"byte_end":39556,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::future::future::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":9204}],"decl_id":null,"docs":" Future for the [`flatten`](super::FutureExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9250},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":39807,"byte_end":39820,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"FlattenStream","qualname":"::future::future::FlattenStream","value":"FlattenStream {  }","parent":null,"children":[{"krate":0,"index":9252}],"decl_id":null,"docs":" Stream for the [`flatten_stream`](FutureExt::flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9300},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":40160,"byte_end":40163,"line_start":50,"line_end":50,"column_start":5,"column_end":8},"name":"Map","qualname":"::future::future::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":9303}],"decl_id":null,"docs":" Future for the [`map`](super::FutureExt::map) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9360},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":40370,"byte_end":40380,"line_start":57,"line_end":57,"column_start":5,"column_end":15},"name":"IntoStream","qualname":"::future::future::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":9362}],"decl_id":null,"docs":" Stream for the [`into_stream`](FutureExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9410},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":40586,"byte_end":40593,"line_start":64,"line_end":64,"column_start":5,"column_end":12},"name":"MapInto","qualname":"::future::future::MapInto","value":"MapInto {  }","parent":null,"children":[{"krate":0,"index":9413}],"decl_id":null,"docs":" Future for the [`map_into`](FutureExt::map_into) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9472},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":40786,"byte_end":40790,"line_start":71,"line_end":71,"column_start":5,"column_end":9},"name":"Then","qualname":"::future::future::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":9476}],"decl_id":null,"docs":" Future for the [`then`](FutureExt::then) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9545},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":41035,"byte_end":41042,"line_start":78,"line_end":78,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::future::future::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":9548}],"decl_id":null,"docs":" Future for the [`inspect`](FutureExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9605},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":41283,"byte_end":41293,"line_start":85,"line_end":85,"column_start":5,"column_end":15},"name":"NeverError","qualname":"::future::future::NeverError","value":"NeverError {  }","parent":null,"children":[{"krate":0,"index":9607}],"decl_id":null,"docs":" Future for the [`never_error`](super::FutureExt::never_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9653},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":41506,"byte_end":41515,"line_start":92,"line_end":92,"column_start":5,"column_end":14},"name":"UnitError","qualname":"::future::future::UnitError","value":"UnitError {  }","parent":null,"children":[{"krate":0,"index":9655}],"decl_id":null,"docs":" Future for the [`unit_error`](super::FutureExt::unit_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9699},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/catch_unwind.rs","byte_start":68143,"byte_end":68154,"line_start":13,"line_end":13,"column_start":16,"column_end":27},"name":"CatchUnwind","qualname":"::future::future::catch_unwind::CatchUnwind","value":"CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":9701}],"decl_id":null,"docs":" Future for the [`catch_unwind`](super::FutureExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/catch_unwind.rs","byte_start":68494,"byte_end":68498,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"poll","qualname":"<CatchUnwind<Fut> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":487},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":69157,"byte_end":69163,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Shared","qualname":"::future::future::shared::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":489},{"krate":0,"index":490}],"decl_id":null,"docs":" Future for the [`shared`](super::FutureExt::shared) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`shared`](super::FutureExt::shared) method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":69014,"byte_end":69077,"line_start":12,"line_end":12,"column_start":1,"column_end":64}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":69078,"byte_end":69145,"line_start":13,"line_end":13,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":498},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":69537,"byte_end":69547,"line_start":30,"line_end":30,"column_start":12,"column_end":22},"name":"WeakShared","qualname":"::future::future::shared::WeakShared","value":"","parent":null,"children":[],"decl_id":null,"docs":" A weak reference to a [`Shared`] that can be upgraded much like an `Arc`.\n","sig":null,"attributes":[{"value":"/ A weak reference to a [`Shared`] that can be upgraded much like an `Arc`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":69448,"byte_end":69525,"line_start":29,"line_end":29,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":69634,"byte_end":69639,"line_start":33,"line_end":33,"column_start":8,"column_end":13},"name":"clone","qualname":"<WeakShared<Fut> as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":509},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":69890,"byte_end":69893,"line_start":43,"line_end":43,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Shared<Fut> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":70317,"byte_end":70320,"line_start":58,"line_end":58,"column_start":8,"column_end":11},"name":"fmt","qualname":"<WeakShared<Fut> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":71649,"byte_end":71653,"line_start":112,"line_end":112,"column_start":12,"column_end":16},"name":"peek","qualname":"<Shared<Fut>>::peek","value":"fn peek<'_>(&'_ Self) -> Option<&'_ Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns [`Some`] containing a reference to this [`Shared`]'s output if\n it has already been computed by a clone or [`None`] if it hasn't been\n computed yet or this [`Shared`] already returned its output from\n [`poll`](Future::poll).\n","sig":null,"attributes":[{"value":"/ Returns [`Some`] containing a reference to this [`Shared`]'s output if","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":71380,"byte_end":71454,"line_start":108,"line_end":108,"column_start":5,"column_end":79}},{"value":"/ it has already been computed by a clone or [`None`] if it hasn't been","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":71459,"byte_end":71532,"line_start":109,"line_end":109,"column_start":5,"column_end":78}},{"value":"/ computed yet or this [`Shared`] already returned its output from","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":71537,"byte_end":71605,"line_start":110,"line_end":110,"column_start":5,"column_end":73}},{"value":"/ [`poll`](Future::poll).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":71610,"byte_end":71637,"line_start":111,"line_end":111,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":72148,"byte_end":72157,"line_start":126,"line_end":126,"column_start":12,"column_end":21},"name":"downgrade","qualname":"<Shared<Fut>>::downgrade","value":"fn downgrade<'_>(&'_ Self) -> Option<WeakShared<Fut>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`WeakShared`] for this [`Shared`].","sig":null,"attributes":[{"value":"/ Creates a new [`WeakShared`] for this [`Shared`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":72005,"byte_end":72058,"line_start":123,"line_end":123,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":72063,"byte_end":72066,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if it has already been polled to completion.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":72071,"byte_end":72136,"line_start":125,"line_end":125,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":72751,"byte_end":72763,"line_start":142,"line_end":142,"column_start":12,"column_end":24},"name":"strong_count","qualname":"<Shared<Fut>>::strong_count","value":"fn strong_count<'_>(&'_ Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of strong pointers to this allocation.","sig":null,"attributes":[{"value":"/ Gets the number of strong pointers to this allocation.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":72339,"byte_end":72397,"line_start":133,"line_end":133,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":72402,"byte_end":72405,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if it has already been polled to completion.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":72410,"byte_end":72475,"line_start":135,"line_end":135,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":72480,"byte_end":72483,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":72488,"byte_end":72500,"line_start":137,"line_end":137,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":72505,"byte_end":72508,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ This method by itself is safe, but using it correctly requires extra care. Another thread","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":72513,"byte_end":72606,"line_start":139,"line_end":139,"column_start":5,"column_end":98}},{"value":"/ can change the strong count at any time, including potentially between calling this method","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":72611,"byte_end":72705,"line_start":140,"line_end":140,"column_start":5,"column_end":99}},{"value":"/ and acting on the result.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":72710,"byte_end":72739,"line_start":141,"line_end":141,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":73271,"byte_end":73281,"line_start":155,"line_end":155,"column_start":12,"column_end":22},"name":"weak_count","qualname":"<Shared<Fut>>::weak_count","value":"fn weak_count<'_>(&'_ Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Gets the number of weak pointers to this allocation.","sig":null,"attributes":[{"value":"/ Gets the number of weak pointers to this allocation.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":72863,"byte_end":72919,"line_start":146,"line_end":146,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":72924,"byte_end":72927,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if it has already been polled to completion.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":72932,"byte_end":72997,"line_start":148,"line_end":148,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":73002,"byte_end":73005,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":73010,"byte_end":73022,"line_start":150,"line_end":150,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":73027,"byte_end":73030,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ This method by itself is safe, but using it correctly requires extra care. Another thread","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":73035,"byte_end":73128,"line_start":152,"line_end":152,"column_start":5,"column_end":98}},{"value":"/ can change the weak count at any time, including potentially between calling this method","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":73133,"byte_end":73225,"line_start":153,"line_end":153,"column_start":5,"column_end":97}},{"value":"/ and acting on the result.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":73230,"byte_end":73259,"line_start":154,"line_end":154,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":75156,"byte_end":75169,"line_start":214,"line_end":214,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Shared<Fut> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":75346,"byte_end":75350,"line_start":226,"line_end":226,"column_start":8,"column_end":12},"name":"poll","qualname":"<Shared<Fut> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":78747,"byte_end":78752,"line_start":332,"line_end":332,"column_start":8,"column_end":13},"name":"clone","qualname":"<Shared<Fut> as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":78912,"byte_end":78916,"line_start":341,"line_end":341,"column_start":8,"column_end":12},"name":"drop","qualname":"<Shared<Fut> as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":79881,"byte_end":79888,"line_start":372,"line_end":372,"column_start":12,"column_end":19},"name":"upgrade","qualname":"<WeakShared<Fut>>::upgrade","value":"fn upgrade<'_>(&'_ Self) -> Option<Shared<Fut>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to upgrade this [`WeakShared`] into a [`Shared`].","sig":null,"attributes":[{"value":"/ Attempts to upgrade this [`WeakShared`] into a [`Shared`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":79691,"byte_end":79753,"line_start":368,"line_end":368,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":79758,"byte_end":79761,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ Returns [`None`] if all clones of the [`Shared`] have been dropped or polled","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":79766,"byte_end":79846,"line_start":370,"line_end":370,"column_start":5,"column_end":85}},{"value":"/ to completion.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":79851,"byte_end":79869,"line_start":371,"line_end":371,"column_start":5,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":583},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":42497,"byte_end":42506,"line_start":123,"line_end":123,"column_start":11,"column_end":20},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[{"krate":0,"index":584},{"krate":0,"index":587},{"krate":0,"index":589},{"krate":0,"index":592},{"krate":0,"index":594},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":606},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611}],"decl_id":null,"docs":" An extension trait for `Future`s that provides a variety of convenient\n adapters.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Future`s that provides a variety of convenient","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":42398,"byte_end":42472,"line_start":121,"line_end":121,"column_start":1,"column_end":75}},{"value":"/ adapters.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":42473,"byte_end":42486,"line_start":122,"line_end":122,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":43338,"byte_end":43341,"line_start":146,"line_end":146,"column_start":8,"column_end":11},"name":"map","qualname":"::future::future::FutureExt::map","value":"fn map<U, F>(Self, F) -> Map<Self, F> where F: FnOnce(Self::Output) -> U,\nSelf: Sized","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":42521,"byte_end":42596,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":42601,"byte_end":42624,"line_start":125,"line_end":125,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":42629,"byte_end":42632,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function is similar to the `Option::map` or `Iterator::map` where","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":42637,"byte_end":42711,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ it will change the type of the underlying future. This is useful to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":42716,"byte_end":42787,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ chain along a computation once a future has been resolved.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":42792,"byte_end":42854,"line_start":129,"line_end":129,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":42859,"byte_end":42862,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":42867,"byte_end":42938,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":42943,"byte_end":43014,"line_start":132,"line_end":132,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":43019,"byte_end":43040,"line_start":133,"line_end":133,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":43045,"byte_end":43048,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":43053,"byte_end":43067,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":43072,"byte_end":43075,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":43080,"byte_end":43087,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":43092,"byte_end":43133,"line_start":138,"line_end":138,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":43138,"byte_end":43173,"line_start":139,"line_end":139,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":43178,"byte_end":43181,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":43186,"byte_end":43215,"line_start":141,"line_end":141,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.map(|x| x + 3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":43220,"byte_end":43263,"line_start":142,"line_end":142,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(new_future.await, 4);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":43268,"byte_end":43304,"line_start":143,"line_end":143,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":43309,"byte_end":43318,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":43323,"byte_end":43330,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":43738,"byte_end":43746,"line_start":159,"line_end":159,"column_start":8,"column_end":16},"name":"map_into","qualname":"::future::future::FutureExt::map_into","value":"fn map_into<U>(Self) -> MapInto<Self, U> where Self::Output: Into<U>,\nSelf: Sized","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":43511,"byte_end":43586,"line_start":154,"line_end":154,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":43591,"byte_end":43614,"line_start":155,"line_end":155,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":43619,"byte_end":43622,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `map(Into::into)` but allows naming","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":43627,"byte_end":43705,"line_start":157,"line_end":157,"column_start":5,"column_end":83}},{"value":"/ the return type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":43710,"byte_end":43730,"line_start":158,"line_end":158,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":44758,"byte_end":44762,"line_start":191,"line_end":191,"column_start":8,"column_end":12},"name":"then","qualname":"::future::future::FutureExt::then","value":"fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where F: FnOnce(Self::Output)\n-> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":" Chain on a computation for when a future finished, passing the result of\n the future to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a future finished, passing the result of","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":43905,"byte_end":43981,"line_start":167,"line_end":167,"column_start":5,"column_end":81}},{"value":"/ the future to the provided closure `f`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":43986,"byte_end":44029,"line_start":168,"line_end":168,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":44034,"byte_end":44037,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `Future` trait","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":44042,"byte_end":44113,"line_start":170,"line_end":170,"column_start":5,"column_end":76}},{"value":"/ and can represent some more work to be done before the composed future","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":44118,"byte_end":44192,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":44197,"byte_end":44213,"line_start":172,"line_end":172,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":44218,"byte_end":44221,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is only run *after* successful completion of the `self`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":44226,"byte_end":44301,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/ future.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":44306,"byte_end":44317,"line_start":175,"line_end":175,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":44322,"byte_end":44325,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":44330,"byte_end":44401,"line_start":177,"line_end":177,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":44406,"byte_end":44432,"line_start":178,"line_end":178,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":44437,"byte_end":44440,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":44445,"byte_end":44459,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":44464,"byte_end":44467,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":44472,"byte_end":44479,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":44484,"byte_end":44525,"line_start":183,"line_end":183,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":44530,"byte_end":44565,"line_start":184,"line_end":184,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":44570,"byte_end":44573,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ let future_of_1 = async { 1 };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":44578,"byte_end":44612,"line_start":186,"line_end":186,"column_start":5,"column_end":39}},{"value":"/ let future_of_4 = future_of_1.then(|x| async move { x + 3 });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":44617,"byte_end":44682,"line_start":187,"line_end":187,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(future_of_4.await, 4);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":44687,"byte_end":44724,"line_start":188,"line_end":188,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":44729,"byte_end":44738,"line_start":189,"line_end":189,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":44743,"byte_end":44750,"line_start":190,"line_end":190,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":45632,"byte_end":45643,"line_start":222,"line_end":222,"column_start":8,"column_end":19},"name":"left_future","qualname":"::future::future::FutureExt::left_future","value":"fn left_future<B>(Self) -> Either<Self, B> where B: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the left-hand variant","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":44974,"byte_end":45049,"line_start":200,"line_end":200,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":45054,"byte_end":45075,"line_start":201,"line_end":201,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":45080,"byte_end":45083,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_future` method to write `if`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":45088,"byte_end":45168,"line_start":203,"line_end":203,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":45173,"byte_end":45245,"line_start":204,"line_end":204,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":45250,"byte_end":45253,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":45258,"byte_end":45272,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":45277,"byte_end":45280,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":45285,"byte_end":45292,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":45297,"byte_end":45338,"line_start":209,"line_end":209,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":45343,"byte_end":45378,"line_start":210,"line_end":210,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":45383,"byte_end":45386,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":45391,"byte_end":45405,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/ let future = if x < 10 {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":45410,"byte_end":45438,"line_start":213,"line_end":213,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":45443,"byte_end":45479,"line_start":214,"line_end":214,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":45484,"byte_end":45496,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":45501,"byte_end":45539,"line_start":216,"line_end":216,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":45544,"byte_end":45550,"line_start":217,"line_end":217,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":45555,"byte_end":45558,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, true);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":45563,"byte_end":45598,"line_start":219,"line_end":219,"column_start":5,"column_end":40}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":45603,"byte_end":45612,"line_start":220,"line_end":220,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":45617,"byte_end":45624,"line_start":221,"line_end":221,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":46482,"byte_end":46494,"line_start":252,"line_end":252,"column_start":8,"column_end":20},"name":"right_future","qualname":"::future::future::FutureExt::right_future","value":"fn right_future<A>(Self) -> Either<A, Self> where A: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the right-hand variant","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":45823,"byte_end":45899,"line_start":230,"line_end":230,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":45904,"byte_end":45925,"line_start":231,"line_end":231,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":45930,"byte_end":45933,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_future` method to write `if`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":45938,"byte_end":46017,"line_start":233,"line_end":233,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":46022,"byte_end":46094,"line_start":234,"line_end":234,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":46099,"byte_end":46102,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":46107,"byte_end":46121,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":46126,"byte_end":46129,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":46134,"byte_end":46141,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":46146,"byte_end":46187,"line_start":239,"line_end":239,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":46192,"byte_end":46227,"line_start":240,"line_end":240,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":46232,"byte_end":46235,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":46240,"byte_end":46254,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/ let future = if x > 10 {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":46259,"byte_end":46287,"line_start":243,"line_end":243,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":46292,"byte_end":46328,"line_start":244,"line_end":244,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":46333,"byte_end":46345,"line_start":245,"line_end":245,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":46350,"byte_end":46388,"line_start":246,"line_end":246,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":46393,"byte_end":46399,"line_start":247,"line_end":247,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":46404,"byte_end":46407,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, false);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":46412,"byte_end":46448,"line_start":249,"line_end":249,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":46453,"byte_end":46462,"line_start":250,"line_end":250,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":46467,"byte_end":46474,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":47273,"byte_end":47284,"line_start":278,"line_end":278,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::future::future::FutureExt::into_stream","value":"fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":" Convert this future into a single element stream.","sig":null,"attributes":[{"value":"/ Convert this future into a single element stream.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":46675,"byte_end":46728,"line_start":260,"line_end":260,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":46733,"byte_end":46736,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ The returned stream contains single success if this future resolves to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":46741,"byte_end":46815,"line_start":262,"line_end":262,"column_start":5,"column_end":79}},{"value":"/ success or single error if this future resolves into error.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":46820,"byte_end":46883,"line_start":263,"line_end":263,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":46888,"byte_end":46891,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":46896,"byte_end":46910,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":46915,"byte_end":46918,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":46923,"byte_end":46930,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":46935,"byte_end":46976,"line_start":268,"line_end":268,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":46981,"byte_end":47016,"line_start":269,"line_end":269,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":47021,"byte_end":47056,"line_start":270,"line_end":270,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":47061,"byte_end":47064,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let future = async { 17 };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":47069,"byte_end":47099,"line_start":272,"line_end":272,"column_start":5,"column_end":35}},{"value":"/ let stream = future.into_stream();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":47104,"byte_end":47142,"line_start":273,"line_end":273,"column_start":5,"column_end":43}},{"value":"/ let collected: Vec<_> = stream.collect().await;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":47147,"byte_end":47198,"line_start":274,"line_end":274,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":47203,"byte_end":47239,"line_start":275,"line_end":275,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":47244,"byte_end":47253,"line_start":276,"line_end":276,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":47258,"byte_end":47265,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":48149,"byte_end":48156,"line_start":307,"line_end":307,"column_start":8,"column_end":15},"name":"flatten","qualname":"::future::future::FutureExt::flatten","value":"fn flatten(Self) -> Flatten<Self> where Self::Output: Future, Self: Sized","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the output of this\n future is itself another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the output of this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":47423,"byte_end":47487,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"/ future is itself another future.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":47492,"byte_end":47528,"line_start":286,"line_end":286,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":47533,"byte_end":47536,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This can be useful when combining futures together to flatten the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":47541,"byte_end":47610,"line_start":288,"line_end":288,"column_start":5,"column_end":74}},{"value":"/ computation out the final result.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":47615,"byte_end":47652,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":47657,"byte_end":47660,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This method is roughly equivalent to `self.then(|x| x)`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":47665,"byte_end":47725,"line_start":291,"line_end":291,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":47730,"byte_end":47733,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":47738,"byte_end":47809,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":47814,"byte_end":47840,"line_start":294,"line_end":294,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":47845,"byte_end":47848,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":47853,"byte_end":47867,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":47872,"byte_end":47875,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":47880,"byte_end":47887,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":47892,"byte_end":47933,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":47938,"byte_end":47973,"line_start":300,"line_end":300,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":47978,"byte_end":47981,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ let nested_future = async { async { 1 } };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":47986,"byte_end":48032,"line_start":302,"line_end":302,"column_start":5,"column_end":51}},{"value":"/ let future = nested_future.flatten();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":48037,"byte_end":48078,"line_start":303,"line_end":303,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(future.await, 1);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":48083,"byte_end":48115,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":48120,"byte_end":48129,"line_start":305,"line_end":305,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":48134,"byte_end":48141,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":49261,"byte_end":49275,"line_start":341,"line_end":341,"column_start":8,"column_end":22},"name":"flatten_stream","qualname":"::future::future::FutureExt::flatten_stream","value":"fn flatten_stream(Self) -> FlattenStream<Self> where Self::Output: Stream,\nSelf: Sized","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":48370,"byte_end":48445,"line_start":316,"line_end":316,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":48450,"byte_end":48473,"line_start":317,"line_end":317,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":48478,"byte_end":48481,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":48486,"byte_end":48558,"line_start":319,"line_end":319,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":48563,"byte_end":48636,"line_start":320,"line_end":320,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":48641,"byte_end":48655,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":48660,"byte_end":48663,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":48668,"byte_end":48738,"line_start":323,"line_end":323,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":48743,"byte_end":48761,"line_start":324,"line_end":324,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":48766,"byte_end":48769,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":48774,"byte_end":48788,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":48793,"byte_end":48796,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":48801,"byte_end":48808,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":48813,"byte_end":48854,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":48859,"byte_end":48894,"line_start":330,"line_end":330,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":48899,"byte_end":48942,"line_start":331,"line_end":331,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":48947,"byte_end":48950,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":48955,"byte_end":48995,"line_start":333,"line_end":333,"column_start":5,"column_end":45}},{"value":"/ let future_of_a_stream = async { stream::iter(stream_items) };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":49000,"byte_end":49066,"line_start":334,"line_end":334,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":49071,"byte_end":49074,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.flatten_stream();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":49079,"byte_end":49132,"line_start":336,"line_end":336,"column_start":5,"column_end":58}},{"value":"/ let list: Vec<_> = stream.collect().await;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":49137,"byte_end":49183,"line_start":337,"line_end":337,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(list, vec![17, 18, 19]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":49188,"byte_end":49227,"line_start":338,"line_end":338,"column_start":5,"column_end":44}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":49232,"byte_end":49241,"line_start":339,"line_end":339,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":49246,"byte_end":49253,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":50363,"byte_end":50367,"line_start":365,"line_end":365,"column_start":8,"column_end":12},"name":"fuse","qualname":"::future::future::FutureExt::fuse","value":"fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":" Fuse a future such that `poll` will never again be called once it has\n completed. This method can be used to turn any `Future` into a\n `FusedFuture`.","sig":null,"attributes":[{"value":"/ Fuse a future such that `poll` will never again be called once it has","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":49468,"byte_end":49541,"line_start":349,"line_end":349,"column_start":5,"column_end":78}},{"value":"/ completed. This method can be used to turn any `Future` into a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":49546,"byte_end":49612,"line_start":350,"line_end":350,"column_start":5,"column_end":71}},{"value":"/ `FusedFuture`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":49617,"byte_end":49635,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":49640,"byte_end":49643,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Normally, once a future has returned `Poll::Ready` from `poll`,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":49648,"byte_end":49715,"line_start":353,"line_end":353,"column_start":5,"column_end":72}},{"value":"/ any further calls could exhibit bad behavior such as blocking","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":49720,"byte_end":49785,"line_start":354,"line_end":354,"column_start":5,"column_end":70}},{"value":"/ forever, panicking, never returning, etc. If it is known that `poll`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":49790,"byte_end":49862,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/ may be called too often then this method can be used to ensure that it","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":49867,"byte_end":49941,"line_start":356,"line_end":356,"column_start":5,"column_end":79}},{"value":"/ has defined semantics.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":49946,"byte_end":49972,"line_start":357,"line_end":357,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":49977,"byte_end":49980,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ If a `fuse`d future is `poll`ed after having returned `Poll::Ready`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":49985,"byte_end":50056,"line_start":359,"line_end":359,"column_start":5,"column_end":76}},{"value":"/ previously, it will return `Poll::Pending`, from `poll` again (and will","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":50061,"byte_end":50136,"line_start":360,"line_end":360,"column_start":5,"column_end":80}},{"value":"/ continue to do so for all future calls to `poll`).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":50141,"byte_end":50195,"line_start":361,"line_end":361,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":50200,"byte_end":50203,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ This combinator will drop the underlying future as soon as it has been","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":50208,"byte_end":50282,"line_start":363,"line_end":363,"column_start":5,"column_end":79}},{"value":"/ completed to ensure resources are reclaimed as soon as possible.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":50287,"byte_end":50355,"line_start":364,"line_end":364,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":51207,"byte_end":51214,"line_start":391,"line_end":391,"column_start":8,"column_end":15},"name":"inspect","qualname":"::future::future::FutureExt::inspect","value":"fn inspect<F>(Self, F) -> Inspect<Self, F> where\nF: for<'_> FnOnce(&'_ Self::Output) -> (), Self: Sized","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":" Do something with the output of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the output of a future before passing it on.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":50513,"byte_end":50579,"line_start":373,"line_end":373,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":50584,"byte_end":50587,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":50592,"byte_end":50667,"line_start":375,"line_end":375,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":50672,"byte_end":50745,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":50750,"byte_end":50819,"line_start":377,"line_end":377,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":50824,"byte_end":50874,"line_start":378,"line_end":378,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":50879,"byte_end":50882,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":50887,"byte_end":50901,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":50906,"byte_end":50909,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":50914,"byte_end":50921,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":50926,"byte_end":50967,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":50972,"byte_end":51007,"line_start":384,"line_end":384,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":51012,"byte_end":51015,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":51020,"byte_end":51049,"line_start":386,"line_end":386,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.inspect(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":51054,"byte_end":51132,"line_start":387,"line_end":387,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(new_future.await, 1);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":51137,"byte_end":51173,"line_start":388,"line_end":388,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":51178,"byte_end":51187,"line_start":389,"line_end":389,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":51192,"byte_end":51199,"line_start":390,"line_end":390,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":52752,"byte_end":52764,"line_start":431,"line_end":431,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::future::future::FutureExt::catch_unwind","value":"fn catch_unwind(Self) -> CatchUnwind<Self> where Self: Sized +\n::std::panic::UnwindSafe","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the future.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the future.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":51396,"byte_end":51450,"line_start":399,"line_end":399,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":51455,"byte_end":51458,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a future can propagate all the way out to the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":51463,"byte_end":51538,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":51543,"byte_end":51617,"line_start":402,"line_end":402,"column_start":5,"column_end":79}},{"value":"/ the future itself. It's most commonly used within task executors. It's","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":51622,"byte_end":51696,"line_start":403,"line_end":403,"column_start":5,"column_end":79}},{"value":"/ not recommended to use this for error handling.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":51701,"byte_end":51752,"line_start":404,"line_end":404,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":51757,"byte_end":51760,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":51765,"byte_end":51840,"line_start":406,"line_end":406,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":51845,"byte_end":51915,"line_start":407,"line_end":407,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":51920,"byte_end":51987,"line_start":408,"line_end":408,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the `Future` trait is also","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":51992,"byte_end":52067,"line_start":409,"line_end":409,"column_start":5,"column_end":80}},{"value":"/ implemented for `AssertUnwindSafe<F>` where `F` implements `Future`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":52072,"byte_end":52144,"line_start":410,"line_end":410,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":52149,"byte_end":52152,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":52157,"byte_end":52221,"line_start":412,"line_end":412,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":52226,"byte_end":52283,"line_start":413,"line_end":413,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":52288,"byte_end":52291,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":52296,"byte_end":52310,"line_start":415,"line_end":415,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":52315,"byte_end":52318,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":52323,"byte_end":52330,"line_start":417,"line_end":417,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":52335,"byte_end":52376,"line_start":418,"line_end":418,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{self, FutureExt, Ready};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":52381,"byte_end":52431,"line_start":419,"line_end":419,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":52436,"byte_end":52439,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ let future = future::ready(2);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":52444,"byte_end":52478,"line_start":421,"line_end":421,"column_start":5,"column_end":39}},{"value":"/ assert!(future.catch_unwind().await.is_ok());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":52483,"byte_end":52532,"line_start":422,"line_end":422,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":52537,"byte_end":52540,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ let future = future::lazy(|_| -> Ready<i32> {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":52545,"byte_end":52594,"line_start":424,"line_end":424,"column_start":5,"column_end":54}},{"value":"/     unimplemented!()","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":52599,"byte_end":52623,"line_start":425,"line_end":425,"column_start":5,"column_end":29}},{"value":"/ });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":52628,"byte_end":52635,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/ assert!(future.catch_unwind().await.is_err());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":52640,"byte_end":52690,"line_start":427,"line_end":427,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":52695,"byte_end":52704,"line_start":428,"line_end":428,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":52709,"byte_end":52716,"line_start":429,"line_end":429,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":52721,"byte_end":52744,"line_start":430,"line_end":430,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":54516,"byte_end":54522,"line_start":486,"line_end":486,"column_start":8,"column_end":14},"name":"shared","qualname":"::future::future::FutureExt::shared","value":"fn shared(Self) -> Shared<Self> where Self: Sized, Self::Output: Clone","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":" Create a cloneable handle to this future where all handles will resolve\n to the same result.","sig":null,"attributes":[{"value":"/ Create a cloneable handle to this future where all handles will resolve","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":52994,"byte_end":53069,"line_start":440,"line_end":440,"column_start":5,"column_end":80}},{"value":"/ to the same result.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":53074,"byte_end":53097,"line_start":441,"line_end":441,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":53102,"byte_end":53105,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ The `shared` combinator method provides a method to convert any future","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":53110,"byte_end":53184,"line_start":443,"line_end":443,"column_start":5,"column_end":79}},{"value":"/ into a cloneable future. It enables a future to be polled by multiple","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":53189,"byte_end":53262,"line_start":444,"line_end":444,"column_start":5,"column_end":78}},{"value":"/ threads.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":53267,"byte_end":53279,"line_start":445,"line_end":445,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":53284,"byte_end":53287,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":53292,"byte_end":53356,"line_start":447,"line_end":447,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":53361,"byte_end":53418,"line_start":448,"line_end":448,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":53423,"byte_end":53426,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":53431,"byte_end":53445,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":53450,"byte_end":53453,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":53458,"byte_end":53465,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":53470,"byte_end":53511,"line_start":453,"line_end":453,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":53516,"byte_end":53551,"line_start":454,"line_end":454,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":53556,"byte_end":53559,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":53564,"byte_end":53593,"line_start":456,"line_end":456,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":53598,"byte_end":53632,"line_start":457,"line_end":457,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":53637,"byte_end":53671,"line_start":458,"line_end":458,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":53676,"byte_end":53679,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":53684,"byte_end":53717,"line_start":460,"line_end":460,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(6, shared2.await);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":53722,"byte_end":53755,"line_start":461,"line_end":461,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":53760,"byte_end":53769,"line_start":462,"line_end":462,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":53774,"byte_end":53781,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":53786,"byte_end":53789,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":53794,"byte_end":53801,"line_start":465,"line_end":465,"column_start":5,"column_end":12}},{"value":"/ // Note, unlike most examples this is written in the context of a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":53806,"byte_end":53875,"line_start":466,"line_end":466,"column_start":5,"column_end":74}},{"value":"/ // synchronous function to better illustrate the cross-thread aspect of","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":53880,"byte_end":53955,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ // the `shared` combinator.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":53960,"byte_end":53991,"line_start":468,"line_end":468,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":53996,"byte_end":53999,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":54004,"byte_end":54045,"line_start":470,"line_end":470,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":54050,"byte_end":54085,"line_start":471,"line_end":471,"column_start":5,"column_end":40}},{"value":"/ use futures::executor::block_on;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":54090,"byte_end":54126,"line_start":472,"line_end":472,"column_start":5,"column_end":41}},{"value":"/ use std::thread;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":54131,"byte_end":54151,"line_start":473,"line_end":473,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":54156,"byte_end":54159,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let future = async { 6 };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":54164,"byte_end":54193,"line_start":475,"line_end":475,"column_start":5,"column_end":34}},{"value":"/ let shared1 = future.shared();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":54198,"byte_end":54232,"line_start":476,"line_end":476,"column_start":5,"column_end":39}},{"value":"/ let shared2 = shared1.clone();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":54237,"byte_end":54271,"line_start":477,"line_end":477,"column_start":5,"column_end":39}},{"value":"/ let join_handle = thread::spawn(move || {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":54276,"byte_end":54321,"line_start":478,"line_end":478,"column_start":5,"column_end":50}},{"value":"/     assert_eq!(6, block_on(shared2));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":54326,"byte_end":54367,"line_start":479,"line_end":479,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":54372,"byte_end":54379,"line_start":480,"line_end":480,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(6, shared1.await);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":54384,"byte_end":54417,"line_start":481,"line_end":481,"column_start":5,"column_end":38}},{"value":"/ join_handle.join().unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":54422,"byte_end":54454,"line_start":482,"line_end":482,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":54459,"byte_end":54468,"line_start":483,"line_end":483,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":54473,"byte_end":54480,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":54485,"byte_end":54508,"line_start":485,"line_end":485,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":55684,"byte_end":55689,"line_start":518,"line_end":518,"column_start":8,"column_end":13},"name":"boxed","qualname":"::future::future::FutureExt::boxed","value":"fn boxed<'a>(Self) -> BoxFuture where Self: Sized + Send + 'a","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":55455,"byte_end":55496,"line_start":513,"line_end":513,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":55501,"byte_end":55504,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":55509,"byte_end":55584,"line_start":515,"line_end":515,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":55589,"byte_end":55646,"line_start":516,"line_end":516,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":55651,"byte_end":55676,"line_start":517,"line_end":517,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":56149,"byte_end":56160,"line_start":532,"line_end":532,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::future::future::FutureExt::boxed_local","value":"fn boxed_local<'a>(Self) -> LocalBoxFuture where Self: Sized + 'a","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":55848,"byte_end":55889,"line_start":525,"line_end":525,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":55894,"byte_end":55897,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":55902,"byte_end":55961,"line_start":527,"line_end":527,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":55966,"byte_end":55969,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":55974,"byte_end":56049,"line_start":529,"line_end":529,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":56054,"byte_end":56111,"line_start":530,"line_end":530,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":56116,"byte_end":56141,"line_start":531,"line_end":531,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":56450,"byte_end":56460,"line_start":541,"line_end":541,"column_start":8,"column_end":18},"name":"unit_error","qualname":"::future::future::FutureExt::unit_error","value":"fn unit_error(Self) -> UnitError<Self> where Self: Sized","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":56317,"byte_end":56366,"line_start":539,"line_end":539,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":56371,"byte_end":56442,"line_start":540,"line_end":540,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":56745,"byte_end":56756,"line_start":550,"line_end":550,"column_start":8,"column_end":19},"name":"never_error","qualname":"::future::future::FutureExt::never_error","value":"fn never_error(Self) -> NeverError<Self> where Self: Sized","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":56609,"byte_end":56658,"line_start":548,"line_end":548,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":56663,"byte_end":56737,"line_start":549,"line_end":549,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":56987,"byte_end":56997,"line_start":558,"line_end":558,"column_start":8,"column_end":18},"name":"poll_unpin","qualname":"::future::future::FutureExt::poll_unpin","value":"fn poll_unpin<'_, '_, '_>(&'_ mut Self, &'_ mut Context) -> Poll<Self::Output>\nwhere Self: Unpin","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":" A convenience for calling `Future::poll` on `Unpin` future types.\n","sig":null,"attributes":[{"value":"/ A convenience for calling `Future::poll` on `Unpin` future types.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":56910,"byte_end":56979,"line_start":557,"line_end":557,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":58393,"byte_end":58405,"line_start":596,"line_end":596,"column_start":8,"column_end":20},"name":"now_or_never","qualname":"::future::future::FutureExt::now_or_never","value":"fn now_or_never(Self) -> Option<Self::Output> where Self: Sized","parent":{"krate":0,"index":583},"children":[],"decl_id":null,"docs":" Evaluates and consumes the future, returning the resulting output if\n the future is ready after the first call to `Future::poll`.","sig":null,"attributes":[{"value":"/ Evaluates and consumes the future, returning the resulting output if","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":57133,"byte_end":57205,"line_start":565,"line_end":565,"column_start":5,"column_end":77}},{"value":"/ the future is ready after the first call to `Future::poll`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":57210,"byte_end":57273,"line_start":566,"line_end":566,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":57278,"byte_end":57281,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ If `poll` instead returns `Poll::Pending`, `None` is returned.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":57286,"byte_end":57352,"line_start":568,"line_end":568,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":57357,"byte_end":57360,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ This method is useful in cases where immediacy is more important than","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":57365,"byte_end":57438,"line_start":570,"line_end":570,"column_start":5,"column_end":78}},{"value":"/ waiting for a result. It is also convenient for quickly obtaining","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":57443,"byte_end":57512,"line_start":571,"line_end":571,"column_start":5,"column_end":74}},{"value":"/ the value of a future that is known to always resolve immediately.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":57517,"byte_end":57587,"line_start":572,"line_end":572,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":57592,"byte_end":57595,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":57600,"byte_end":57614,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":57619,"byte_end":57622,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":57627,"byte_end":57634,"line_start":576,"line_end":576,"column_start":5,"column_end":12}},{"value":"/ # use futures::prelude::*;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":57639,"byte_end":57669,"line_start":577,"line_end":577,"column_start":5,"column_end":35}},{"value":"/ use futures::{future::ready, future::pending};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":57674,"byte_end":57724,"line_start":578,"line_end":578,"column_start":5,"column_end":55}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":57729,"byte_end":57768,"line_start":579,"line_end":579,"column_start":5,"column_end":44}},{"value":"/ let future_pending = pending::<&'static str>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":57773,"byte_end":57824,"line_start":580,"line_end":580,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":57829,"byte_end":57832,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never(), Some(\"foobar\"));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":57837,"byte_end":57897,"line_start":582,"line_end":582,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(future_pending.now_or_never(), None);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":57902,"byte_end":57954,"line_start":583,"line_end":583,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":57959,"byte_end":57966,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":57971,"byte_end":57974,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ In cases where it is absolutely known that a future should always","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":57979,"byte_end":58048,"line_start":586,"line_end":586,"column_start":5,"column_end":74}},{"value":"/ resolve immediately and never return `Poll::Pending`, this method can","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":58053,"byte_end":58126,"line_start":587,"line_end":587,"column_start":5,"column_end":78}},{"value":"/ be combined with `expect()`:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":58131,"byte_end":58163,"line_start":588,"line_end":588,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":58168,"byte_end":58171,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":58176,"byte_end":58183,"line_start":590,"line_end":590,"column_start":5,"column_end":12}},{"value":"/ # use futures::{prelude::*, future::ready};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":58188,"byte_end":58235,"line_start":591,"line_end":591,"column_start":5,"column_end":52}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":58240,"byte_end":58279,"line_start":592,"line_end":592,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":58284,"byte_end":58287,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never().expect(\"Future not ready\"), \"foobar\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":58292,"byte_end":58373,"line_start":594,"line_end":594,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":58378,"byte_end":58385,"line_start":595,"line_end":595,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":9735},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/into_future.rs","byte_start":102180,"byte_end":102190,"line_start":10,"line_end":10,"column_start":16,"column_end":26},"name":"IntoFuture","qualname":"::future::try_future::into_future::IntoFuture","value":"IntoFuture {  }","parent":null,"children":[{"krate":0,"index":9737}],"decl_id":null,"docs":" Future for the [`into_future`](super::TryFutureExt::into_future) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/into_future.rs","byte_start":102439,"byte_end":102452,"line_start":24,"line_end":24,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<IntoFuture<Fut> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":763},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/into_future.rs","byte_start":102634,"byte_end":102638,"line_start":33,"line_end":33,"column_start":8,"column_end":12},"name":"poll","qualname":"<IntoFuture<Fut> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/into_future.rs","byte_start":102617,"byte_end":102626,"line_start":32,"line_end":32,"column_start":5,"column_end":14}}]},{"kind":"StructVariant","id":{"krate":0,"index":9774},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":103164,"byte_end":103169,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten::TryFlatten::First","value":"TryFlatten::First { f }","parent":{"krate":0,"index":9771},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9775},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":103179,"byte_end":103180,"line_start":14,"line_end":14,"column_start":24,"column_end":25},"name":"f","qualname":"::future::try_future::try_flatten::TryFlatten::First::f","value":"Fut1","parent":{"krate":0,"index":9774},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":9776},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":103198,"byte_end":103204,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten::TryFlatten::Second","value":"TryFlatten::Second { f }","parent":{"krate":0,"index":9771},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9777},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":103214,"byte_end":103215,"line_start":15,"line_end":15,"column_start":25,"column_end":26},"name":"f","qualname":"::future::try_future::try_flatten::TryFlatten::Second::f","value":"Fut2","parent":{"krate":0,"index":9776},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9778},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":103233,"byte_end":103238,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten::TryFlatten::Empty","value":"TryFlatten::Empty","parent":{"krate":0,"index":9771},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9771},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":103131,"byte_end":103141,"line_start":13,"line_end":13,"column_start":14,"column_end":24},"name":"TryFlatten","qualname":"::future::try_future::try_flatten::TryFlatten","value":"enum TryFlatten<Fut1, Fut2> {\n    First {\n            f: Fut1,\n        },\n    Second {\n            f: Fut2,\n        },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":9774},{"krate":0,"index":9776},{"krate":0,"index":9778}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":103510,"byte_end":103523,"line_start":31,"line_end":31,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryFlatten<Fut, Fut::Ok> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":103830,"byte_end":103834,"line_start":46,"line_end":46,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryFlatten<Fut, Fut::Ok> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":814},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":104726,"byte_end":104739,"line_start":72,"line_end":72,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryFlatten<Fut, Fut::Ok> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":818},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":105044,"byte_end":105053,"line_start":87,"line_end":87,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryFlatten<Fut, Fut::Ok> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":9821},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":108107,"byte_end":108112,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::First","value":"TryFlattenErr::First { f }","parent":{"krate":0,"index":9818},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9822},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":108122,"byte_end":108123,"line_start":11,"line_end":11,"column_start":24,"column_end":25},"name":"f","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::First::f","value":"Fut1","parent":{"krate":0,"index":9821},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":9823},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":108141,"byte_end":108147,"line_start":12,"line_end":12,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Second","value":"TryFlattenErr::Second { f }","parent":{"krate":0,"index":9818},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":9824},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":108157,"byte_end":108158,"line_start":12,"line_end":12,"column_start":25,"column_end":26},"name":"f","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Second::f","value":"Fut2","parent":{"krate":0,"index":9823},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9825},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":108176,"byte_end":108181,"line_start":13,"line_end":13,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Empty","value":"TryFlattenErr::Empty","parent":{"krate":0,"index":9818},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":9818},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":108071,"byte_end":108084,"line_start":10,"line_end":10,"column_start":14,"column_end":27},"name":"TryFlattenErr","qualname":"::future::try_future::try_flatten_err::TryFlattenErr","value":"enum TryFlattenErr<Fut1, Fut2> {\n    First {\n            f: Fut1,\n        },\n    Second {\n            f: Fut2,\n        },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":9821},{"krate":0,"index":9823},{"krate":0,"index":9825}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":108459,"byte_end":108472,"line_start":28,"line_end":28,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryFlattenErr<Fut, Fut::Error> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":856},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":108785,"byte_end":108789,"line_start":43,"line_end":43,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryFlattenErr<Fut, Fut::Error> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9868},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":80867,"byte_end":80877,"line_start":32,"line_end":32,"column_start":5,"column_end":15},"name":"TryFlatten","qualname":"::future::try_future::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":9871}],"decl_id":null,"docs":" Future for the [`try_flatten`](TryFutureExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9929},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":81125,"byte_end":81138,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"TryFlattenErr","qualname":"::future::try_future::TryFlattenErr","value":"TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":9932}],"decl_id":null,"docs":" Future for the [`try_flatten_err`](TryFutureExt::try_flatten_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9989},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":81406,"byte_end":81422,"line_start":46,"line_end":46,"column_start":5,"column_end":21},"name":"TryFlattenStream","qualname":"::future::try_future::TryFlattenStream","value":"TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":9991}],"decl_id":null,"docs":" Future for the [`try_flatten_stream`](TryFutureExt::try_flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10040},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":82010,"byte_end":82017,"line_start":63,"line_end":63,"column_start":5,"column_end":12},"name":"AndThen","qualname":"::future::try_future::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":10044}],"decl_id":null,"docs":" Future for the [`and_then`](TryFutureExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10114},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":82257,"byte_end":82263,"line_start":70,"line_end":70,"column_start":5,"column_end":11},"name":"OrElse","qualname":"::future::try_future::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":10118}],"decl_id":null,"docs":" Future for the [`or_else`](TryFutureExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10187},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":82513,"byte_end":82520,"line_start":77,"line_end":77,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::future::try_future::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":10190}],"decl_id":null,"docs":" Future for the [`err_into`](TryFutureExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10248},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":82728,"byte_end":82734,"line_start":84,"line_end":84,"column_start":5,"column_end":11},"name":"OkInto","qualname":"::future::try_future::OkInto","value":"OkInto {  }","parent":null,"children":[{"krate":0,"index":10251}],"decl_id":null,"docs":" Future for the [`ok_into`](TryFutureExt::ok_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10309},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":82953,"byte_end":82962,"line_start":91,"line_end":91,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::future::try_future::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":10312}],"decl_id":null,"docs":" Future for the [`inspect_ok`](super::TryFutureExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10370},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":83234,"byte_end":83244,"line_start":98,"line_end":98,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::future::try_future::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":10373}],"decl_id":null,"docs":" Future for the [`inspect_err`](super::TryFutureExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10431},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":83617,"byte_end":83622,"line_start":108,"line_end":108,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::future::try_future::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":10434}],"decl_id":null,"docs":" Future for the [`map_ok`](TryFutureExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10492},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":83863,"byte_end":83869,"line_start":115,"line_end":115,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::future::try_future::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":10495}],"decl_id":null,"docs":" Future for the [`map_err`](TryFutureExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10554},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":84126,"byte_end":84137,"line_start":122,"line_end":122,"column_start":5,"column_end":16},"name":"MapOkOrElse","qualname":"::future::try_future::MapOkOrElse","value":"MapOkOrElse {  }","parent":null,"children":[{"krate":0,"index":10558}],"decl_id":null,"docs":" Future for the [`map_ok_or_else`](TryFutureExt::map_ok_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10627},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":84421,"byte_end":84433,"line_start":129,"line_end":129,"column_start":5,"column_end":17},"name":"UnwrapOrElse","qualname":"::future::try_future::UnwrapOrElse","value":"UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":10630}],"decl_id":null,"docs":" Future for the [`unwrap_or_else`](TryFutureExt::unwrap_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":862},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":84723,"byte_end":84735,"line_start":137,"line_end":137,"column_start":11,"column_end":23},"name":"TryFutureExt","qualname":"::future::try_future::TryFutureExt","value":"TryFutureExt: TryFuture","parent":null,"children":[{"krate":0,"index":863},{"krate":0,"index":866},{"krate":0,"index":870},{"krate":0,"index":873},{"krate":0,"index":875},{"krate":0,"index":877},{"krate":0,"index":880},{"krate":0,"index":883},{"krate":0,"index":885},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":891},{"krate":0,"index":892}],"decl_id":null,"docs":" Adapters specific to [`Result`]-returning futures\n","sig":null,"attributes":[{"value":"/ Adapters specific to [`Result`]-returning futures","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":84659,"byte_end":84712,"line_start":136,"line_end":136,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":863},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":87495,"byte_end":87501,"line_start":217,"line_end":217,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::future::try_future::TryFutureExt::map_ok","value":"fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where F: FnOnce(Self::Ok) -> T,\nSelf: Sized","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":86123,"byte_end":86181,"line_start":179,"line_end":179,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":86186,"byte_end":86189,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Ok`](TryFuture::Ok) type of the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":86194,"byte_end":86269,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ future into a different type. It is similar to the [`Result::map`]","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":86274,"byte_end":86344,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ method. You can use this method to chain along a computation once the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":86349,"byte_end":86422,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ future has been resolved.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":86427,"byte_end":86456,"line_start":184,"line_end":184,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":86461,"byte_end":86464,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":86469,"byte_end":86544,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":86549,"byte_end":86624,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":86629,"byte_end":86676,"line_start":188,"line_end":188,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":86681,"byte_end":86684,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":86689,"byte_end":86764,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":86769,"byte_end":86795,"line_start":191,"line_end":191,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":86800,"byte_end":86803,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":86808,"byte_end":86822,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":86827,"byte_end":86830,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":86835,"byte_end":86842,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":86847,"byte_end":86885,"line_start":196,"line_end":196,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":86890,"byte_end":86893,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":86898,"byte_end":86939,"line_start":198,"line_end":198,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":86944,"byte_end":86989,"line_start":199,"line_end":199,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":86994,"byte_end":87036,"line_start":200,"line_end":200,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":87041,"byte_end":87077,"line_start":201,"line_end":201,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":87082,"byte_end":87091,"line_start":202,"line_end":202,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":87096,"byte_end":87103,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":87108,"byte_end":87111,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_ok`](TryFutureExt::map_ok) on an errored future has no","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":87116,"byte_end":87188,"line_start":205,"line_end":205,"column_start":5,"column_end":77}},{"value":"/ effect:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":87193,"byte_end":87204,"line_start":206,"line_end":206,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":87209,"byte_end":87212,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":87217,"byte_end":87224,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":87229,"byte_end":87267,"line_start":209,"line_end":209,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":87272,"byte_end":87275,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":87280,"byte_end":87321,"line_start":211,"line_end":211,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":87326,"byte_end":87372,"line_start":212,"line_end":212,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":87377,"byte_end":87419,"line_start":213,"line_end":213,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":87424,"byte_end":87461,"line_start":214,"line_end":214,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":87466,"byte_end":87475,"line_start":215,"line_end":215,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":87480,"byte_end":87487,"line_start":216,"line_end":216,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":89060,"byte_end":89074,"line_start":257,"line_end":257,"column_start":8,"column_end":22},"name":"map_ok_or_else","qualname":"::future::try_future::TryFutureExt::map_ok_or_else","value":"fn map_ok_or_else<T, E, F>(Self, E, F) -> MapOkOrElse<Self, F, E> where\nF: FnOnce(Self::Ok) -> T, E: FnOnce(Self::Error) -> T, Self: Sized","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value, and permits for error handling resulting in the same type.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value, and permits for error handling resulting in the same type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":87692,"byte_end":87809,"line_start":225,"line_end":225,"column_start":5,"column_end":122}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":87814,"byte_end":87817,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ This method can be used to coalesce your [`Ok`](TryFuture::Ok) type and [`Error`](TryFuture::Error) into another type,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":87822,"byte_end":87944,"line_start":227,"line_end":227,"column_start":5,"column_end":127}},{"value":"/ where that type is the same for both outcomes.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":87949,"byte_end":87999,"line_start":228,"line_end":228,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":88004,"byte_end":88007,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":88012,"byte_end":88087,"line_start":230,"line_end":230,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":88092,"byte_end":88167,"line_start":231,"line_end":231,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":88172,"byte_end":88219,"line_start":232,"line_end":232,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":88224,"byte_end":88227,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ The provided closure `e` will only be called if this future is resolved","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":88232,"byte_end":88307,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":88312,"byte_end":88387,"line_start":235,"line_end":235,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":88392,"byte_end":88439,"line_start":236,"line_end":236,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":88444,"byte_end":88447,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":88452,"byte_end":88527,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":88532,"byte_end":88558,"line_start":239,"line_end":239,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":88563,"byte_end":88566,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":88571,"byte_end":88585,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":88590,"byte_end":88593,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":88598,"byte_end":88605,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":88610,"byte_end":88648,"line_start":244,"line_end":244,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":88653,"byte_end":88656,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":88661,"byte_end":88702,"line_start":246,"line_end":246,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(5) };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":88707,"byte_end":88752,"line_start":247,"line_end":247,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":88757,"byte_end":88818,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 8);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":88823,"byte_end":88855,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":88860,"byte_end":88863,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<i32, i32>(5) };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":88868,"byte_end":88914,"line_start":251,"line_end":251,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":88919,"byte_end":88980,"line_start":252,"line_end":252,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 10);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":88985,"byte_end":89018,"line_start":253,"line_end":253,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":89023,"byte_end":89032,"line_start":254,"line_end":254,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":89037,"byte_end":89044,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":89049,"byte_end":89052,"line_start":256,"line_end":256,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":870},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":90831,"byte_end":90838,"line_start":308,"line_end":308,"column_start":8,"column_end":15},"name":"map_err","qualname":"::future::try_future::TryFutureExt::map_err","value":"fn map_err<E, F>(Self, F) -> MapErr<Self, F> where F: FnOnce(Self::Error) ->\nE, Self: Sized","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":" Maps this future's error value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's error value to a different value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":89308,"byte_end":89364,"line_start":266,"line_end":266,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":89369,"byte_end":89372,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Error`](TryFuture::Error) type","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":89377,"byte_end":89451,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ of the future into a different type. It is similar to the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":89456,"byte_end":89517,"line_start":269,"line_end":269,"column_start":5,"column_end":66}},{"value":"/ [`Result::map_err`] method. You can use this method for example to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":89522,"byte_end":89592,"line_start":270,"line_end":270,"column_start":5,"column_end":75}},{"value":"/ ensure that futures have the same [`Error`](TryFuture::Error) type when","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":89597,"byte_end":89672,"line_start":271,"line_end":271,"column_start":5,"column_end":80}},{"value":"/ using [`select!`] or [`join!`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":89677,"byte_end":89712,"line_start":272,"line_end":272,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":89717,"byte_end":89720,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":89725,"byte_end":89800,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":89805,"byte_end":89880,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":89885,"byte_end":89932,"line_start":276,"line_end":276,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":89937,"byte_end":89940,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":89945,"byte_end":90020,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":90025,"byte_end":90051,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":90056,"byte_end":90059,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":90064,"byte_end":90078,"line_start":281,"line_end":281,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":90083,"byte_end":90086,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":90091,"byte_end":90098,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":90103,"byte_end":90141,"line_start":284,"line_end":284,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":90146,"byte_end":90149,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":90154,"byte_end":90195,"line_start":286,"line_end":286,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":90200,"byte_end":90246,"line_start":287,"line_end":287,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":90251,"byte_end":90294,"line_start":288,"line_end":288,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":90299,"byte_end":90336,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":90341,"byte_end":90350,"line_start":290,"line_end":290,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":90355,"byte_end":90362,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":90367,"byte_end":90370,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_err`](TryFutureExt::map_err) on a successful future has","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":90375,"byte_end":90448,"line_start":293,"line_end":293,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":90453,"byte_end":90467,"line_start":294,"line_end":294,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":90472,"byte_end":90475,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":90480,"byte_end":90487,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":90492,"byte_end":90530,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":90535,"byte_end":90538,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":90543,"byte_end":90584,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":90589,"byte_end":90634,"line_start":300,"line_end":300,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":90639,"byte_end":90682,"line_start":301,"line_end":301,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":90687,"byte_end":90723,"line_start":302,"line_end":302,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":90728,"byte_end":90737,"line_start":303,"line_end":303,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":90742,"byte_end":90749,"line_start":304,"line_end":304,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":90754,"byte_end":90757,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ [`join!`]: crate::join","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":90762,"byte_end":90788,"line_start":306,"line_end":306,"column_start":5,"column_end":31}},{"value":"/ [`select!`]: crate::select","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":90793,"byte_end":90823,"line_start":307,"line_end":307,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":873},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":92002,"byte_end":92010,"line_start":341,"line_end":341,"column_start":8,"column_end":16},"name":"err_into","qualname":"::future::try_future::TryFutureExt::err_into","value":"fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":" Maps this future's [`Error`](TryFuture::Error) to a new error type\n using the [`Into`](std::convert::Into) trait.","sig":null,"attributes":[{"value":"/ Maps this future's [`Error`](TryFuture::Error) to a new error type","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":91031,"byte_end":91101,"line_start":316,"line_end":316,"column_start":5,"column_end":75}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":91106,"byte_end":91155,"line_start":317,"line_end":317,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":91160,"byte_end":91163,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This method does for futures what the `?`-operator does for","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":91168,"byte_end":91231,"line_start":319,"line_end":319,"column_start":5,"column_end":68}},{"value":"/ [`Result`]: It lets the compiler infer the type of the resulting","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":91236,"byte_end":91304,"line_start":320,"line_end":320,"column_start":5,"column_end":73}},{"value":"/ error. Just as [`map_err`](TryFutureExt::map_err), this is useful for","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":91309,"byte_end":91382,"line_start":321,"line_end":321,"column_start":5,"column_end":78}},{"value":"/ example to ensure that futures have the same [`Error`](TryFuture::Error)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":91387,"byte_end":91463,"line_start":322,"line_end":322,"column_start":5,"column_end":81}},{"value":"/ type when using [`select!`] or [`join!`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":91468,"byte_end":91513,"line_start":323,"line_end":323,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":91518,"byte_end":91521,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":91526,"byte_end":91601,"line_start":325,"line_end":325,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":91606,"byte_end":91632,"line_start":326,"line_end":326,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":91637,"byte_end":91640,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":91645,"byte_end":91659,"line_start":328,"line_end":328,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":91664,"byte_end":91667,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":91672,"byte_end":91679,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":91684,"byte_end":91722,"line_start":331,"line_end":331,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":91727,"byte_end":91730,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":91735,"byte_end":91776,"line_start":333,"line_end":333,"column_start":5,"column_end":46}},{"value":"/ let future_err_u8 = async { Err::<(), u8>(1) };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":91781,"byte_end":91832,"line_start":334,"line_end":334,"column_start":5,"column_end":56}},{"value":"/ let future_err_i32 = future_err_u8.err_into::<i32>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":91837,"byte_end":91894,"line_start":335,"line_end":335,"column_start":5,"column_end":62}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":91899,"byte_end":91908,"line_start":336,"line_end":336,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":91913,"byte_end":91920,"line_start":337,"line_end":337,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":91925,"byte_end":91928,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ [`join!`]: crate::join","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":91933,"byte_end":91959,"line_start":339,"line_end":339,"column_start":5,"column_end":31}},{"value":"/ [`select!`]: crate::select","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":91964,"byte_end":91994,"line_start":340,"line_end":340,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":875},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":92306,"byte_end":92313,"line_start":351,"line_end":351,"column_start":8,"column_end":15},"name":"ok_into","qualname":"::future::try_future::TryFutureExt::ok_into","value":"fn ok_into<U>(Self) -> OkInto<Self, U> where Self: Sized, Self::Ok: Into<U>","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":" Maps this future's [`Ok`](TryFuture::Ok) to a new type\n using the [`Into`](std::convert::Into) trait.\n","sig":null,"attributes":[{"value":"/ Maps this future's [`Ok`](TryFuture::Ok) to a new type","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":92186,"byte_end":92244,"line_start":349,"line_end":349,"column_start":5,"column_end":63}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":92249,"byte_end":92298,"line_start":350,"line_end":350,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":877},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":93868,"byte_end":93876,"line_start":395,"line_end":395,"column_start":8,"column_end":16},"name":"and_then","qualname":"::future::try_future::TryFutureExt::and_then","value":"fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnOnce(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":" Executes another future after this one resolves successfully. The\n success value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future after this one resolves successfully. The","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":92487,"byte_end":92556,"line_start":359,"line_end":359,"column_start":5,"column_end":74}},{"value":"/ success value is passed to a closure to create this subsequent future.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":92561,"byte_end":92635,"line_start":360,"line_end":360,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":92640,"byte_end":92643,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":92648,"byte_end":92723,"line_start":362,"line_end":362,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If this future resolves to an [`Err`], panics, or is","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":92728,"byte_end":92798,"line_start":363,"line_end":363,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":92803,"byte_end":92868,"line_start":364,"line_end":364,"column_start":5,"column_end":70}},{"value":"/ [`Error`](TryFuture::Error) type of this future and the future","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":92873,"byte_end":92939,"line_start":365,"line_end":365,"column_start":5,"column_end":71}},{"value":"/ returned by `f` have to match.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":92944,"byte_end":92978,"line_start":366,"line_end":366,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":92983,"byte_end":92986,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":92991,"byte_end":93066,"line_start":368,"line_end":368,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":93071,"byte_end":93097,"line_start":369,"line_end":369,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":93102,"byte_end":93105,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":93110,"byte_end":93124,"line_start":371,"line_end":371,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":93129,"byte_end":93132,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":93137,"byte_end":93144,"line_start":373,"line_end":373,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":93149,"byte_end":93187,"line_start":374,"line_end":374,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":93192,"byte_end":93195,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":93200,"byte_end":93241,"line_start":376,"line_end":376,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":93246,"byte_end":93291,"line_start":377,"line_end":377,"column_start":5,"column_end":50}},{"value":"/ let future = future.and_then(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":93296,"byte_end":93371,"line_start":378,"line_end":378,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":93376,"byte_end":93412,"line_start":379,"line_end":379,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":93417,"byte_end":93426,"line_start":380,"line_end":380,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":93431,"byte_end":93438,"line_start":381,"line_end":381,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":93443,"byte_end":93446,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ Calling [`and_then`](TryFutureExt::and_then) on an errored future has no","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":93451,"byte_end":93527,"line_start":383,"line_end":383,"column_start":5,"column_end":81}},{"value":"/ effect:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":93532,"byte_end":93543,"line_start":384,"line_end":384,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":93548,"byte_end":93551,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":93556,"byte_end":93563,"line_start":386,"line_end":386,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":93568,"byte_end":93606,"line_start":387,"line_end":387,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":93611,"byte_end":93614,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":93619,"byte_end":93660,"line_start":389,"line_end":389,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":93665,"byte_end":93711,"line_start":390,"line_end":390,"column_start":5,"column_end":51}},{"value":"/ let future = future.and_then(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":93716,"byte_end":93792,"line_start":391,"line_end":391,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":93797,"byte_end":93834,"line_start":392,"line_end":392,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":93839,"byte_end":93848,"line_start":393,"line_end":393,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":93853,"byte_end":93860,"line_start":394,"line_end":394,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":95497,"byte_end":95504,"line_start":440,"line_end":440,"column_start":8,"column_end":15},"name":"or_else","qualname":"::future::try_future::TryFutureExt::or_else","value":"fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnOnce(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":" Executes another future if this one resolves to an error. The\n error value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future if this one resolves to an error. The","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":94130,"byte_end":94195,"line_start":404,"line_end":404,"column_start":5,"column_end":70}},{"value":"/ error value is passed to a closure to create this subsequent future.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":94200,"byte_end":94272,"line_start":405,"line_end":405,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":94277,"byte_end":94280,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":94285,"byte_end":94360,"line_start":407,"line_end":407,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If this future resolves to an [`Ok`], panics, or is","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":94365,"byte_end":94435,"line_start":408,"line_end":408,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":94440,"byte_end":94505,"line_start":409,"line_end":409,"column_start":5,"column_end":70}},{"value":"/ [`Ok`](TryFuture::Ok) type of this future and the future returned by `f`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":94510,"byte_end":94586,"line_start":410,"line_end":410,"column_start":5,"column_end":81}},{"value":"/ have to match.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":94591,"byte_end":94609,"line_start":411,"line_end":411,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":94614,"byte_end":94617,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":94622,"byte_end":94697,"line_start":413,"line_end":413,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":94702,"byte_end":94728,"line_start":414,"line_end":414,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":94733,"byte_end":94736,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":94741,"byte_end":94755,"line_start":416,"line_end":416,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":94760,"byte_end":94763,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":94768,"byte_end":94775,"line_start":418,"line_end":418,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":94780,"byte_end":94818,"line_start":419,"line_end":419,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":94823,"byte_end":94826,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":94831,"byte_end":94872,"line_start":421,"line_end":421,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":94877,"byte_end":94923,"line_start":422,"line_end":422,"column_start":5,"column_end":51}},{"value":"/ let future = future.or_else(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":94928,"byte_end":95003,"line_start":423,"line_end":423,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":95008,"byte_end":95045,"line_start":424,"line_end":424,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":95050,"byte_end":95059,"line_start":425,"line_end":425,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":95064,"byte_end":95071,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":95076,"byte_end":95079,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ Calling [`or_else`](TryFutureExt::or_else) on a successful future has","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":95084,"byte_end":95157,"line_start":428,"line_end":428,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":95162,"byte_end":95176,"line_start":429,"line_end":429,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":95181,"byte_end":95184,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":95189,"byte_end":95196,"line_start":431,"line_end":431,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":95201,"byte_end":95239,"line_start":432,"line_end":432,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":95244,"byte_end":95247,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":95252,"byte_end":95293,"line_start":434,"line_end":434,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":95298,"byte_end":95343,"line_start":435,"line_end":435,"column_start":5,"column_end":50}},{"value":"/ let future = future.or_else(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":95348,"byte_end":95422,"line_start":436,"line_end":436,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":95427,"byte_end":95463,"line_start":437,"line_end":437,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":95468,"byte_end":95477,"line_start":438,"line_end":438,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":95482,"byte_end":95489,"line_start":439,"line_end":439,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":96480,"byte_end":96490,"line_start":467,"line_end":467,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::future::try_future::TryFutureExt::inspect_ok","value":"fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where\nF: for<'_> FnOnce(&'_ Self::Ok) -> (), Self: Sized","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":" Do something with the success value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of a future before passing it on.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":95753,"byte_end":95826,"line_start":449,"line_end":449,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":95831,"byte_end":95834,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":95839,"byte_end":95914,"line_start":451,"line_end":451,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":95919,"byte_end":95992,"line_start":452,"line_end":452,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":95997,"byte_end":96066,"line_start":453,"line_end":453,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_ok`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":96071,"byte_end":96124,"line_start":454,"line_end":454,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":96129,"byte_end":96132,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":96137,"byte_end":96151,"line_start":456,"line_end":456,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":96156,"byte_end":96159,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":96164,"byte_end":96171,"line_start":458,"line_end":458,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":96176,"byte_end":96217,"line_start":459,"line_end":459,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":96222,"byte_end":96260,"line_start":460,"line_end":460,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":96265,"byte_end":96268,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ let future = async { Ok::<_, ()>(1) };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":96273,"byte_end":96315,"line_start":462,"line_end":462,"column_start":5,"column_end":47}},{"value":"/ let new_future = future.inspect_ok(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":96320,"byte_end":96401,"line_start":463,"line_end":463,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(new_future.await, Ok(1));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":96406,"byte_end":96446,"line_start":464,"line_end":464,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":96451,"byte_end":96460,"line_start":465,"line_end":465,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":96465,"byte_end":96472,"line_start":466,"line_end":466,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":97416,"byte_end":97427,"line_start":493,"line_end":493,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::future::try_future::TryFutureExt::inspect_err","value":"fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: for<'_> FnOnce(&'_ Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":" Do something with the error value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of a future before passing it on.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":96689,"byte_end":96760,"line_start":475,"line_end":475,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":96765,"byte_end":96768,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":96773,"byte_end":96848,"line_start":477,"line_end":477,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":96853,"byte_end":96926,"line_start":478,"line_end":478,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":96931,"byte_end":97000,"line_start":479,"line_end":479,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_err`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":97005,"byte_end":97059,"line_start":480,"line_end":480,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":97064,"byte_end":97067,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":97072,"byte_end":97086,"line_start":482,"line_end":482,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":97091,"byte_end":97094,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":97099,"byte_end":97106,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":97111,"byte_end":97152,"line_start":485,"line_end":485,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":97157,"byte_end":97195,"line_start":486,"line_end":486,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":97200,"byte_end":97203,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<(), _>(1) };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":97208,"byte_end":97251,"line_start":488,"line_end":488,"column_start":5,"column_end":48}},{"value":"/ let new_future = future.inspect_err(|&x| println!(\"about to error: {}\", x));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":97256,"byte_end":97336,"line_start":489,"line_end":489,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(new_future.await, Err(1));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":97341,"byte_end":97382,"line_start":490,"line_end":490,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":97387,"byte_end":97396,"line_start":491,"line_end":491,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":97401,"byte_end":97408,"line_start":492,"line_end":492,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":97812,"byte_end":97823,"line_start":505,"line_end":505,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::future::try_future::TryFutureExt::try_flatten","value":"fn try_flatten(Self) -> TryFlatten<Self, Self::Ok> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":97631,"byte_end":97706,"line_start":501,"line_end":501,"column_start":5,"column_end":80}},{"value":"/ future is another future.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":97711,"byte_end":97740,"line_start":502,"line_end":502,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":97745,"byte_end":97748,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `future.and_then(|x| x)`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":97753,"byte_end":97804,"line_start":504,"line_end":504,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":99002,"byte_end":99020,"line_start":538,"line_end":538,"column_start":8,"column_end":26},"name":"try_flatten_stream","qualname":"::future::try_future::TryFutureExt::try_flatten_stream","value":"fn try_flatten_stream(Self) -> TryFlattenStream<Self> where\nSelf::Ok: TryStream<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":98058,"byte_end":98133,"line_start":513,"line_end":513,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":98138,"byte_end":98161,"line_start":514,"line_end":514,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":98166,"byte_end":98169,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":98174,"byte_end":98246,"line_start":516,"line_end":516,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":98251,"byte_end":98324,"line_start":517,"line_end":517,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":98329,"byte_end":98343,"line_start":518,"line_end":518,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":98348,"byte_end":98351,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":98356,"byte_end":98426,"line_start":520,"line_end":520,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":98431,"byte_end":98449,"line_start":521,"line_end":521,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":98454,"byte_end":98457,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":98462,"byte_end":98476,"line_start":523,"line_end":523,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":98481,"byte_end":98484,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":98489,"byte_end":98496,"line_start":525,"line_end":525,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":98501,"byte_end":98542,"line_start":526,"line_end":526,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":98547,"byte_end":98585,"line_start":527,"line_end":527,"column_start":5,"column_end":43}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":98590,"byte_end":98636,"line_start":528,"line_end":528,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":98641,"byte_end":98644,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19].into_iter().map(Ok);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":98649,"byte_end":98709,"line_start":530,"line_end":530,"column_start":5,"column_end":65}},{"value":"/ let future_of_a_stream = async { Ok::<_, ()>(stream::iter(stream_items)) };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":98714,"byte_end":98793,"line_start":531,"line_end":531,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":98798,"byte_end":98801,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.try_flatten_stream();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":98806,"byte_end":98863,"line_start":533,"line_end":533,"column_start":5,"column_end":62}},{"value":"/ let list = stream.try_collect::<Vec<_>>().await;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":98868,"byte_end":98920,"line_start":534,"line_end":534,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(list, Ok(vec![17, 18, 19]));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":98925,"byte_end":98968,"line_start":535,"line_end":535,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":98973,"byte_end":98982,"line_start":536,"line_end":536,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":98987,"byte_end":98994,"line_start":537,"line_end":537,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":100111,"byte_end":100125,"line_start":570,"line_end":570,"column_start":8,"column_end":22},"name":"unwrap_or_else","qualname":"::future::try_future::TryFutureExt::unwrap_or_else","value":"fn unwrap_or_else<F>(Self, F) -> UnwrapOrElse<Self, F> where Self: Sized,\nF: FnOnce(Self::Error) -> Self::Ok","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":" Unwraps this future's output, producing a future with this future's\n [`Ok`](TryFuture::Ok) type as its\n [`Output`](std::future::Future::Output) type.","sig":null,"attributes":[{"value":"/ Unwraps this future's output, producing a future with this future's","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":99280,"byte_end":99351,"line_start":548,"line_end":548,"column_start":5,"column_end":76}},{"value":"/ [`Ok`](TryFuture::Ok) type as its","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":99356,"byte_end":99393,"line_start":549,"line_end":549,"column_start":5,"column_end":42}},{"value":"/ [`Output`](std::future::Future::Output) type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":99398,"byte_end":99447,"line_start":550,"line_end":550,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":99452,"byte_end":99455,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ If this future is resolved successfully, the returned future will","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":99460,"byte_end":99529,"line_start":552,"line_end":552,"column_start":5,"column_end":74}},{"value":"/ contain the original future's success value as output. Otherwise, the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":99534,"byte_end":99607,"line_start":553,"line_end":553,"column_start":5,"column_end":78}},{"value":"/ closure `f` is called with the error value to produce an alternate","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":99612,"byte_end":99682,"line_start":554,"line_end":554,"column_start":5,"column_end":75}},{"value":"/ success value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":99687,"byte_end":99705,"line_start":555,"line_end":555,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":99710,"byte_end":99713,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ This method is similar to the [`Result::unwrap_or_else`] method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":99718,"byte_end":99786,"line_start":557,"line_end":557,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":99791,"byte_end":99794,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":99799,"byte_end":99813,"line_start":559,"line_end":559,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":99818,"byte_end":99821,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":99826,"byte_end":99833,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":99838,"byte_end":99876,"line_start":562,"line_end":562,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":99881,"byte_end":99884,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":99889,"byte_end":99930,"line_start":564,"line_end":564,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<(), &str>(\"Boom!\") };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":99935,"byte_end":99987,"line_start":565,"line_end":565,"column_start":5,"column_end":57}},{"value":"/ let future = future.unwrap_or_else(|_| ());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":99992,"byte_end":100039,"line_start":566,"line_end":566,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(future.await, ());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":100044,"byte_end":100077,"line_start":567,"line_end":567,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":100082,"byte_end":100091,"line_start":568,"line_end":568,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":100096,"byte_end":100103,"line_start":569,"line_end":569,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":101380,"byte_end":101391,"line_start":610,"line_end":610,"column_start":8,"column_end":19},"name":"into_future","qualname":"::future::try_future::TryFutureExt::into_future","value":"fn into_future(Self) -> IntoFuture<Self> where Self: Sized","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":" Wraps a [`TryFuture`] into a type that implements\n [`Future`](std::future::Future).","sig":null,"attributes":[{"value":"/ Wraps a [`TryFuture`] into a type that implements","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":100679,"byte_end":100732,"line_start":589,"line_end":589,"column_start":5,"column_end":58}},{"value":"/ [`Future`](std::future::Future).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":100737,"byte_end":100773,"line_start":590,"line_end":590,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":100778,"byte_end":100781,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ [`TryFuture`]s currently do not implement the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":100786,"byte_end":100835,"line_start":592,"line_end":592,"column_start":5,"column_end":54}},{"value":"/ [`Future`](std::future::Future) trait due to limitations of the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":100840,"byte_end":100907,"line_start":593,"line_end":593,"column_start":5,"column_end":72}},{"value":"/ compiler.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":100912,"byte_end":100925,"line_start":594,"line_end":594,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":100930,"byte_end":100933,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":100938,"byte_end":100952,"line_start":596,"line_end":596,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":100957,"byte_end":100960,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":100965,"byte_end":100972,"line_start":598,"line_end":598,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFuture, TryFutureExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":100977,"byte_end":101036,"line_start":599,"line_end":599,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":101041,"byte_end":101044,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":101049,"byte_end":101068,"line_start":601,"line_end":601,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":101073,"byte_end":101091,"line_start":602,"line_end":602,"column_start":5,"column_end":23}},{"value":"/ fn make_try_future() -> impl TryFuture<Ok = T, Error = E> { // ... }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":101096,"byte_end":101168,"line_start":603,"line_end":603,"column_start":5,"column_end":77}},{"value":"/ # async { Ok::<i32, ()>(1) }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":101173,"byte_end":101205,"line_start":604,"line_end":604,"column_start":5,"column_end":37}},{"value":"/ # }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":101210,"byte_end":101217,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"/ fn take_future(future: impl Future<Output = Result<T, E>>) { /* ... */ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":101222,"byte_end":101298,"line_start":606,"line_end":606,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":101303,"byte_end":101306,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ take_future(make_try_future().into_future());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":101311,"byte_end":101360,"line_start":608,"line_end":608,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":101365,"byte_end":101372,"line_start":609,"line_end":609,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":101650,"byte_end":101664,"line_start":619,"line_end":619,"column_start":8,"column_end":22},"name":"try_poll_unpin","qualname":"::future::try_future::TryFutureExt::try_poll_unpin","value":"fn try_poll_unpin<'_, '_, '_>(&'_ mut Self, &'_ mut Context)\n-> Poll<Result<Self::Ok, Self::Error>> where Self: Unpin","parent":{"krate":0,"index":862},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]\n future types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":101547,"byte_end":101620,"line_start":617,"line_end":617,"column_start":5,"column_end":78}},{"value":"/ future types.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":101625,"byte_end":101642,"line_start":618,"line_end":618,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":10685},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":109833,"byte_end":109837,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::future::lazy::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":10687}],"decl_id":null,"docs":" Future for the [`lazy`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`lazy`] function.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":109699,"byte_end":109736,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":109754,"byte_end":109821,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":959},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":110379,"byte_end":110383,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"lazy","qualname":"::future::lazy::lazy","value":"fn lazy<F, R>(F) -> Lazy<F> where F: for<'_, '_> FnOnce(&'_ mut Context) -> R","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future that allows delayed execution of a closure.","sig":null,"attributes":[{"value":"/ Creates a new future that allows delayed execution of a closure.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":109942,"byte_end":110010,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":110011,"byte_end":110014,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The provided closure is only run once the future is polled.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":110015,"byte_end":110078,"line_start":18,"line_end":18,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":110079,"byte_end":110082,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":110083,"byte_end":110097,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":110098,"byte_end":110101,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":110102,"byte_end":110109,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":110110,"byte_end":110151,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":110152,"byte_end":110176,"line_start":24,"line_end":24,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":110177,"byte_end":110180,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let a = future::lazy(|_| 1);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":110181,"byte_end":110213,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":110214,"byte_end":110241,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":110242,"byte_end":110245,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let b = future::lazy(|_| -> i32 {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":110246,"byte_end":110283,"line_start":29,"line_end":29,"column_start":1,"column_end":38}},{"value":"/     panic!(\"oh no!\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":110284,"byte_end":110308,"line_start":30,"line_end":30,"column_start":1,"column_end":25}},{"value":"/ });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":110309,"byte_end":110316,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ drop(b); // closure is never run","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":110317,"byte_end":110353,"line_start":32,"line_end":32,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":110354,"byte_end":110363,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":110364,"byte_end":110371,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":965},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":110591,"byte_end":110604,"line_start":46,"line_end":46,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Lazy<F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":970},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":110761,"byte_end":110765,"line_start":57,"line_end":57,"column_start":8,"column_end":12},"name":"poll","qualname":"<Lazy<F> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<R>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10691},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":111210,"byte_end":111217,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::future::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":10693}],"decl_id":null,"docs":" Future for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`pending()`] function.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":111071,"byte_end":111113,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":111131,"byte_end":111198,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1004},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":111305,"byte_end":111318,"line_start":15,"line_end":15,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Pending<T> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1005},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":111778,"byte_end":111785,"line_start":37,"line_end":37,"column_start":8,"column_end":15},"name":"pending","qualname":"::future::pending::pending","value":"fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which never resolves, representing a computation that never\n finishes.","sig":null,"attributes":[{"value":"/ Creates a future which never resolves, representing a computation that never","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":111358,"byte_end":111438,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ finishes.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":111439,"byte_end":111452,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":111453,"byte_end":111456,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The returned future will forever return [`Poll::Pending`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":111457,"byte_end":111519,"line_start":23,"line_end":23,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":111520,"byte_end":111523,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":111524,"byte_end":111538,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":111539,"byte_end":111542,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":111543,"byte_end":111556,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":111557,"byte_end":111598,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":111599,"byte_end":111623,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":111624,"byte_end":111627,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let future = future::pending();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":111628,"byte_end":111663,"line_start":31,"line_end":31,"column_start":1,"column_end":36}},{"value":"/ let () = future.await;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":111664,"byte_end":111690,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/ unreachable!();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":111691,"byte_end":111710,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":111711,"byte_end":111720,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":111721,"byte_end":111728,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":111937,"byte_end":111941,"line_start":44,"line_end":44,"column_start":8,"column_end":12},"name":"poll","qualname":"<Pending<T> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<T>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":112100,"byte_end":112105,"line_start":52,"line_end":52,"column_start":8,"column_end":13},"name":"clone","qualname":"<Pending<T> as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10699},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":112557,"byte_end":112563,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":10697},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":112522,"byte_end":112552,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":10701},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":112577,"byte_end":112580,"line_start":16,"line_end":16,"column_start":25,"column_end":28},"name":"0","qualname":"::future::maybe_done::MaybeDone::Future::0","value":"Fut","parent":{"krate":0,"index":10699},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10702},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":112630,"byte_end":112634,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":10697},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":112587,"byte_end":112625,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":10704},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":112635,"byte_end":112646,"line_start":18,"line_end":18,"column_start":10,"column_end":21},"name":"0","qualname":"::future::maybe_done::MaybeDone::Done::0","value":"<Fut as futures_core::Future>::Output","parent":{"krate":0,"index":10702},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10705},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":112796,"byte_end":112800,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":10697},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":112653,"byte_end":112719,"line_start":19,"line_end":19,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":112724,"byte_end":112791,"line_start":20,"line_end":20,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":10697},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":112493,"byte_end":112502,"line_start":14,"line_end":14,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"enum MaybeDone<Fut> where Fut: Future {\n    Future(Fut),\n    Done(Fut::Output),\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":10699},{"krate":0,"index":10702},{"krate":0,"index":10705}],"decl_id":null,"docs":" A future that may have completed.","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":112371,"byte_end":112408,"line_start":10,"line_end":10,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":112409,"byte_end":112412,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`maybe_done()`] function.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":112413,"byte_end":112466,"line_start":12,"line_end":12,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":1052},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":113321,"byte_end":113331,"line_start":43,"line_end":43,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"fn maybe_done<Fut>(Fut) -> MaybeDone<Fut> where Fut: Future","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":112860,"byte_end":112897,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":112898,"byte_end":112901,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":112902,"byte_end":112916,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":112917,"byte_end":112920,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":112921,"byte_end":112928,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":112929,"byte_end":112970,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":112971,"byte_end":112995,"line_start":32,"line_end":32,"column_start":1,"column_end":25}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":112996,"byte_end":113021,"line_start":33,"line_end":33,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":113022,"byte_end":113025,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let future = future::maybe_done(async { 5 });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":113026,"byte_end":113075,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ pin_mut!(future);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":113076,"byte_end":113097,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":113098,"byte_end":113150,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/ let () = future.as_mut().await;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":113151,"byte_end":113186,"line_start":38,"line_end":38,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(future.as_mut().take_output(), Some(5));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":113187,"byte_end":113242,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":113243,"byte_end":113295,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":113296,"byte_end":113305,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":113306,"byte_end":113313,"line_start":42,"line_end":42,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1056},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":113772,"byte_end":113782,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"fn output_mut<'_>(Pin<&'_ mut Self>) -> Option<&'_ mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":113474,"byte_end":113559,"line_start":48,"line_end":48,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":113564,"byte_end":113635,"line_start":49,"line_end":49,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":113640,"byte_end":113713,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":113718,"byte_end":113746,"line_start":51,"line_end":51,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":113751,"byte_end":113760,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1057},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":114130,"byte_end":114141,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"fn take_output<'_>(Pin<&'_ mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `MaybeDone` without driving it","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":114010,"byte_end":114076,"line_start":62,"line_end":62,"column_start":5,"column_end":71}},{"value":"/ towards completion.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":114081,"byte_end":114104,"line_start":63,"line_end":63,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":114109,"byte_end":114118,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1060},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":114584,"byte_end":114597,"line_start":80,"line_end":80,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<MaybeDone<Fut> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1064},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":114817,"byte_end":114821,"line_start":91,"line_end":91,"column_start":8,"column_end":12},"name":"poll","qualname":"<MaybeDone<Fut> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10712},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":115766,"byte_end":115772,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::try_maybe_done::TryMaybeDone::Future","value":"TryMaybeDone::Future(Fut)","parent":{"krate":0,"index":10710},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":115731,"byte_end":115761,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":10714},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":115786,"byte_end":115789,"line_start":16,"line_end":16,"column_start":25,"column_end":28},"name":"0","qualname":"::future::try_maybe_done::TryMaybeDone::Future::0","value":"Fut","parent":{"krate":0,"index":10712},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10715},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":115839,"byte_end":115843,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::try_maybe_done::TryMaybeDone::Done","value":"TryMaybeDone::Done(Fut::Ok)","parent":{"krate":0,"index":10710},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":115796,"byte_end":115834,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":10717},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":115844,"byte_end":115851,"line_start":18,"line_end":18,"column_start":10,"column_end":17},"name":"0","qualname":"::future::try_maybe_done::TryMaybeDone::Done::0","value":"<Fut as futures_core::TryFuture>::Ok","parent":{"krate":0,"index":10715},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":10718},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":116051,"byte_end":116055,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::try_maybe_done::TryMaybeDone::Gone","value":"TryMaybeDone::Gone","parent":{"krate":0,"index":10710},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`TryMaybeDone`] has been\n taken using the [`take_output`](TryMaybeDone::take_output) method,\n or if the future returned an error.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`TryMaybeDone`] has been","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":115858,"byte_end":115927,"line_start":19,"line_end":19,"column_start":5,"column_end":74}},{"value":"/ taken using the [`take_output`](TryMaybeDone::take_output) method,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":115932,"byte_end":116002,"line_start":20,"line_end":20,"column_start":5,"column_end":75}},{"value":"/ or if the future returned an error.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":116007,"byte_end":116046,"line_start":21,"line_end":21,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":10710},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":115696,"byte_end":115708,"line_start":14,"line_end":14,"column_start":10,"column_end":22},"name":"TryMaybeDone","qualname":"::future::try_maybe_done::TryMaybeDone","value":"enum TryMaybeDone<Fut> where Fut: TryFuture {\n    Future(Fut),\n    Done(Fut::Ok),\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":10712},{"krate":0,"index":10715},{"krate":0,"index":10718}],"decl_id":null,"docs":" A future that may have completed with an error.","sig":null,"attributes":[{"value":"/ A future that may have completed with an error.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":115556,"byte_end":115607,"line_start":10,"line_end":10,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":115608,"byte_end":115611,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`try_maybe_done()`] function.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":115612,"byte_end":115669,"line_start":12,"line_end":12,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":1104},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":116169,"byte_end":116183,"line_start":28,"line_end":28,"column_start":8,"column_end":22},"name":"try_maybe_done","qualname":"::future::try_maybe_done::try_maybe_done","value":"fn try_maybe_done<Fut>(Fut) -> TryMaybeDone<Fut> where Fut: TryFuture","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `TryMaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `TryMaybeDone`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":116121,"byte_end":116161,"line_start":27,"line_end":27,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1108},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":116670,"byte_end":116680,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<TryMaybeDone<Fut>>::output_mut","value":"fn output_mut<'_>(Pin<&'_ mut Self>) -> Option<&'_ mut Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has completed successfully and [`take_output`](TryMaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":116361,"byte_end":116446,"line_start":33,"line_end":33,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":116451,"byte_end":116522,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ future has completed successfully and [`take_output`](TryMaybeDone::take_output)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":116527,"byte_end":116611,"line_start":35,"line_end":35,"column_start":5,"column_end":89}},{"value":"/ has not yet been called.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":116616,"byte_end":116644,"line_start":36,"line_end":36,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":116649,"byte_end":116658,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1109},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":117030,"byte_end":117041,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"take_output","qualname":"<TryMaybeDone<Fut>>::take_output","value":"fn take_output<'_>(Pin<&'_ mut Self>) -> Option<Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `TryMaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `TryMaybeDone` without driving it","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":116907,"byte_end":116976,"line_start":47,"line_end":47,"column_start":5,"column_end":74}},{"value":"/ towards completion.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":116981,"byte_end":117004,"line_start":48,"line_end":48,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":117009,"byte_end":117018,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1112},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":117489,"byte_end":117502,"line_start":65,"line_end":65,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryMaybeDone<Fut> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1116},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":117748,"byte_end":117752,"line_start":76,"line_end":76,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryMaybeDone<Fut> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10723},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":119252,"byte_end":119264,"line_start":28,"line_end":28,"column_start":16,"column_end":28},"name":"OptionFuture","qualname":"::future::option::OptionFuture","value":"OptionFuture {  }","parent":null,"children":[{"krate":0,"index":10725}],"decl_id":null,"docs":" A future representing a value which may or may not be present.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1147},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":119365,"byte_end":119372,"line_start":35,"line_end":35,"column_start":8,"column_end":15},"name":"default","qualname":"<OptionFuture<F> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1151},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":119513,"byte_end":119517,"line_start":43,"line_end":43,"column_start":8,"column_end":12},"name":"poll","qualname":"<OptionFuture<F> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1154},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":119801,"byte_end":119814,"line_start":52,"line_end":52,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<OptionFuture<F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1157},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":120000,"byte_end":120004,"line_start":61,"line_end":61,"column_start":8,"column_end":12},"name":"from","qualname":"<OptionFuture<T> as std::convert::From>::from","value":"fn from(Option<T>) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1181},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":120382,"byte_end":120388,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":1183}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":120262,"byte_end":120302,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":120303,"byte_end":120370,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1186},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":120975,"byte_end":120982,"line_start":36,"line_end":36,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"fn poll_fn<T, F>(F) -> PollFn<F> where F: for<'_, '_> FnMut(&'_ mut Context)\n-> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":120439,"byte_end":120510,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":120511,"byte_end":120514,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":120515,"byte_end":120581,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":120582,"byte_end":120585,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":120586,"byte_end":120600,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":120601,"byte_end":120604,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":120605,"byte_end":120612,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":120613,"byte_end":120654,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":120655,"byte_end":120688,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/ use futures::task::{Context, Poll};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":120689,"byte_end":120728,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":120729,"byte_end":120732,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ fn read_line(_cx: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":120733,"byte_end":120790,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/     Poll::Ready(\"Hello, World!\".into())","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":120791,"byte_end":120834,"line_start":29,"line_end":29,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":120835,"byte_end":120840,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":120841,"byte_end":120844,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let read_future = poll_fn(read_line);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":120845,"byte_end":120886,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(read_future.await, \"Hello, World!\".to_owned());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":120887,"byte_end":120949,"line_start":33,"line_end":33,"column_start":1,"column_end":63}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":120950,"byte_end":120959,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":120960,"byte_end":120967,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1191},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":121144,"byte_end":121147,"line_start":44,"line_end":44,"column_start":8,"column_end":11},"name":"fmt","qualname":"<PollFn<F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1196},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":121363,"byte_end":121367,"line_start":55,"line_end":55,"column_start":8,"column_end":12},"name":"poll","qualname":"<PollFn<F> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<T>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10762},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":121916,"byte_end":121929,"line_start":13,"line_end":13,"column_start":16,"column_end":29},"name":"PollImmediate","qualname":"::future::poll_immediate::PollImmediate","value":"PollImmediate {  }","parent":null,"children":[{"krate":0,"index":10764}],"decl_id":null,"docs":" Future for the [`poll_immediate`](poll_immediate()) function.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1235},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":122110,"byte_end":122114,"line_start":26,"line_end":26,"column_start":8,"column_end":12},"name":"poll","qualname":"<PollImmediate<F> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Option<T>>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":122093,"byte_end":122102,"line_start":25,"line_end":25,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1238},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":122612,"byte_end":122625,"line_start":41,"line_end":41,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<PollImmediate<T> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1243},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":123704,"byte_end":123713,"line_start":76,"line_end":76,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<PollImmediate<F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1245},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":125337,"byte_end":125351,"line_start":124,"line_end":124,"column_start":8,"column_end":22},"name":"poll_immediate","qualname":"::future::poll_immediate::poll_immediate","value":"fn poll_immediate<F>(F) -> PollImmediate<F> where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with an Option of a value.\n Specifically this means that [poll](core::future::Future::poll()) always returns [Poll::Ready](core::task::Poll::Ready).","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with an Option of a value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":124149,"byte_end":124222,"line_start":89,"line_end":89,"column_start":1,"column_end":74}},{"value":"/ Specifically this means that [poll](core::future::Future::poll()) always returns [Poll::Ready](core::task::Poll::Ready).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":124223,"byte_end":124347,"line_start":90,"line_end":90,"column_start":1,"column_end":125}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":124348,"byte_end":124351,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ # Caution","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":124352,"byte_end":124365,"line_start":92,"line_end":92,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":124366,"byte_end":124369,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ When consuming the future by this function, note the following:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":124370,"byte_end":124437,"line_start":94,"line_end":94,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":124438,"byte_end":124441,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ - This function does not guarantee that the future will run to completion, so it is generally incompatible with passing the non-cancellation-safe future by value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":124442,"byte_end":124608,"line_start":96,"line_end":96,"column_start":1,"column_end":167}},{"value":"/ - Even if the future is cancellation-safe, creating and dropping new futures frequently may lead to performance problems.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":124609,"byte_end":124734,"line_start":97,"line_end":97,"column_start":1,"column_end":126}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":124735,"byte_end":124738,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":124739,"byte_end":124753,"line_start":99,"line_end":99,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":124754,"byte_end":124757,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":124758,"byte_end":124765,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":124766,"byte_end":124807,"line_start":102,"line_end":102,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":124808,"byte_end":124832,"line_start":103,"line_end":103,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":124833,"byte_end":124836,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ let r = future::poll_immediate(async { 1_u32 });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":124837,"byte_end":124889,"line_start":105,"line_end":105,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(r.await, Some(1));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":124890,"byte_end":124923,"line_start":106,"line_end":106,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":124924,"byte_end":124927,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ let p = future::poll_immediate(future::pending::<i32>());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":124928,"byte_end":124989,"line_start":108,"line_end":108,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(p.await, None);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":124990,"byte_end":125020,"line_start":109,"line_end":109,"column_start":1,"column_end":31}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":125021,"byte_end":125030,"line_start":110,"line_end":110,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":125031,"byte_end":125038,"line_start":111,"line_end":111,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":125039,"byte_end":125042,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ ### Reusing a future","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":125043,"byte_end":125067,"line_start":113,"line_end":113,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":125068,"byte_end":125071,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":125072,"byte_end":125079,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":125080,"byte_end":125121,"line_start":116,"line_end":116,"column_start":1,"column_end":42}},{"value":"/ use futures::{future, pin_mut};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":125122,"byte_end":125157,"line_start":117,"line_end":117,"column_start":1,"column_end":36}},{"value":"/ let f = async {futures::pending!(); 42_u8};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":125158,"byte_end":125205,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/ pin_mut!(f);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":125206,"byte_end":125222,"line_start":119,"line_end":119,"column_start":1,"column_end":17}},{"value":"/ assert_eq!(None, future::poll_immediate(&mut f).await);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":125223,"byte_end":125282,"line_start":120,"line_end":120,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(42, f.await);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":125283,"byte_end":125311,"line_start":121,"line_end":121,"column_start":1,"column_end":29}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":125312,"byte_end":125321,"line_start":122,"line_end":122,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":125322,"byte_end":125329,"line_start":123,"line_end":123,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10801},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":125774,"byte_end":125779,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ready`](ready()) function.\n","sig":null,"attributes":[{"value":"/ Future for the [`ready`](ready()) function.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":125623,"byte_end":125670,"line_start":6,"line_end":6,"column_start":1,"column_end":48}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":125695,"byte_end":125762,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1277},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":125902,"byte_end":125912,"line_start":14,"line_end":14,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Ready<T>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the value from this immediately ready future.\n","sig":null,"attributes":[{"value":"/ Unwraps the value from this immediately ready future.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":125819,"byte_end":125876,"line_start":12,"line_end":12,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":125881,"byte_end":125890,"line_start":13,"line_end":13,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1282},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":126043,"byte_end":126056,"line_start":22,"line_end":22,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Ready<T> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1286},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":126181,"byte_end":126185,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"poll","qualname":"<Ready<T> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<T>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":126164,"byte_end":126173,"line_start":30,"line_end":30,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":1287},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":126578,"byte_end":126583,"line_start":48,"line_end":48,"column_start":8,"column_end":13},"name":"ready","qualname":"::future::ready::ready","value":"fn ready<T>(T) -> Ready<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with a value.","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with a value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":126332,"byte_end":126392,"line_start":36,"line_end":36,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":126393,"byte_end":126396,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":126397,"byte_end":126411,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":126412,"byte_end":126415,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":126416,"byte_end":126423,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":126424,"byte_end":126465,"line_start":41,"line_end":41,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":126466,"byte_end":126490,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":126491,"byte_end":126494,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(1);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":126495,"byte_end":126524,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":126525,"byte_end":126552,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":126553,"byte_end":126562,"line_start":46,"line_end":46,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":126563,"byte_end":126570,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1289},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":126918,"byte_end":126920,"line_start":64,"line_end":64,"column_start":8,"column_end":10},"name":"ok","qualname":"::future::ready::ok","value":"fn ok<T, E>(T) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with a success value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with a success value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":126652,"byte_end":126719,"line_start":52,"line_end":52,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":126720,"byte_end":126723,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":126724,"byte_end":126738,"line_start":54,"line_end":54,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":126739,"byte_end":126742,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":126743,"byte_end":126750,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":126751,"byte_end":126792,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":126793,"byte_end":126817,"line_start":58,"line_end":58,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":126818,"byte_end":126821,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let a = future::ok::<i32, i32>(1);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":126822,"byte_end":126860,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(a.await, Ok(1));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":126861,"byte_end":126892,"line_start":61,"line_end":61,"column_start":1,"column_end":32}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":126893,"byte_end":126902,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":126903,"byte_end":126910,"line_start":63,"line_end":63,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1292},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":127251,"byte_end":127254,"line_start":80,"line_end":80,"column_start":8,"column_end":11},"name":"err","qualname":"::future::ready::err","value":"fn err<T, E>(E) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with an error value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with an error value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":126984,"byte_end":127050,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":127051,"byte_end":127054,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":127055,"byte_end":127069,"line_start":70,"line_end":70,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":127070,"byte_end":127073,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":127074,"byte_end":127081,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":127082,"byte_end":127123,"line_start":73,"line_end":73,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":127124,"byte_end":127148,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":127149,"byte_end":127152,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ let a = future::err::<i32, i32>(1);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":127153,"byte_end":127192,"line_start":76,"line_end":76,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(a.await, Err(1));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":127193,"byte_end":127225,"line_start":77,"line_end":77,"column_start":1,"column_end":33}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":127226,"byte_end":127235,"line_start":78,"line_end":78,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":127236,"byte_end":127243,"line_start":79,"line_end":79,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":10903},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":129540,"byte_end":129544,"line_start":78,"line_end":78,"column_start":6,"column_end":10},"name":"Join","qualname":"::future::join::Join","value":"Join {  }","parent":null,"children":[{"krate":0,"index":10906},{"krate":0,"index":10907}],"decl_id":null,"docs":" Future for the [`join`](join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10948},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":129610,"byte_end":129615,"line_start":81,"line_end":81,"column_start":6,"column_end":11},"name":"Join3","qualname":"::future::join::Join3","value":"Join3 {  }","parent":null,"children":[{"krate":0,"index":10952},{"krate":0,"index":10953},{"krate":0,"index":10954}],"decl_id":null,"docs":" Future for the [`join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11005},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":129687,"byte_end":129692,"line_start":84,"line_end":84,"column_start":6,"column_end":11},"name":"Join4","qualname":"::future::join::Join4","value":"Join4 {  }","parent":null,"children":[{"krate":0,"index":11010},{"krate":0,"index":11011},{"krate":0,"index":11012},{"krate":0,"index":11013}],"decl_id":null,"docs":" Future for the [`join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11074},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":129770,"byte_end":129775,"line_start":87,"line_end":87,"column_start":6,"column_end":11},"name":"Join5","qualname":"::future::join::Join5","value":"Join5 {  }","parent":null,"children":[{"krate":0,"index":11080},{"krate":0,"index":11081},{"krate":0,"index":11082},{"krate":0,"index":11083},{"krate":0,"index":11084}],"decl_id":null,"docs":" Future for the [`join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1343},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":130390,"byte_end":130394,"line_start":111,"line_end":111,"column_start":8,"column_end":12},"name":"join","qualname":"::future::join::join","value":"fn join<Fut1, Fut2>(Fut1, Fut2) -> Join<Fut1, Fut2> where Fut1: Future,\nFut2: Future","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":129813,"byte_end":129884,"line_start":90,"line_end":90,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":129885,"byte_end":129888,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":129889,"byte_end":129960,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/ complete. The returned future will finish with a tuple of both results.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":129961,"byte_end":130036,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":130037,"byte_end":130040,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":130041,"byte_end":130110,"line_start":95,"line_end":95,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":130111,"byte_end":130137,"line_start":96,"line_end":96,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":130138,"byte_end":130141,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":130142,"byte_end":130156,"line_start":98,"line_end":98,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":130157,"byte_end":130160,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":130161,"byte_end":130168,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":130169,"byte_end":130210,"line_start":101,"line_end":101,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":130211,"byte_end":130235,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":130236,"byte_end":130239,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":130240,"byte_end":130264,"line_start":104,"line_end":104,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":130265,"byte_end":130289,"line_start":105,"line_end":105,"column_start":1,"column_end":25}},{"value":"/ let pair = future::join(a, b);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":130290,"byte_end":130324,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":130325,"byte_end":130328,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, (1, 2));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":130329,"byte_end":130364,"line_start":108,"line_end":108,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":130365,"byte_end":130374,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":130375,"byte_end":130382,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1346},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":130940,"byte_end":130945,"line_start":136,"line_end":136,"column_start":8,"column_end":13},"name":"join3","qualname":"::future::join::join3","value":"fn join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3) -> Join3<Fut1, Fut2, Fut3> where\nFut1: Future, Fut2: Future, Fut3: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":130601,"byte_end":130653,"line_start":120,"line_end":120,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":130654,"byte_end":130657,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":130658,"byte_end":130672,"line_start":122,"line_end":122,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":130673,"byte_end":130676,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":130677,"byte_end":130684,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":130685,"byte_end":130726,"line_start":125,"line_end":125,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":130727,"byte_end":130751,"line_start":126,"line_end":126,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":130752,"byte_end":130755,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":130756,"byte_end":130780,"line_start":128,"line_end":128,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":130781,"byte_end":130805,"line_start":129,"line_end":129,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":130806,"byte_end":130830,"line_start":130,"line_end":130,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join3(a, b, c);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":130831,"byte_end":130870,"line_start":131,"line_end":131,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":130871,"byte_end":130874,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":130875,"byte_end":130914,"line_start":133,"line_end":133,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":130915,"byte_end":130924,"line_start":134,"line_end":134,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":130925,"byte_end":130932,"line_start":135,"line_end":135,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1350},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":131607,"byte_end":131612,"line_start":167,"line_end":167,"column_start":8,"column_end":13},"name":"join4","qualname":"::future::join::join4","value":"fn join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> Join4<Fut1, Fut2, Fut3, Fut4> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":131237,"byte_end":131289,"line_start":150,"line_end":150,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":131290,"byte_end":131293,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":131294,"byte_end":131308,"line_start":152,"line_end":152,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":131309,"byte_end":131312,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":131313,"byte_end":131320,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":131321,"byte_end":131362,"line_start":155,"line_end":155,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":131363,"byte_end":131387,"line_start":156,"line_end":156,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":131388,"byte_end":131391,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":131392,"byte_end":131416,"line_start":158,"line_end":158,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":131417,"byte_end":131441,"line_start":159,"line_end":159,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":131442,"byte_end":131466,"line_start":160,"line_end":160,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":131467,"byte_end":131491,"line_start":161,"line_end":161,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join4(a, b, c, d);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":131492,"byte_end":131534,"line_start":162,"line_end":162,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":131535,"byte_end":131538,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":131539,"byte_end":131581,"line_start":164,"line_end":164,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":131582,"byte_end":131591,"line_start":165,"line_end":165,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":131592,"byte_end":131599,"line_start":166,"line_end":166,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1355},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":132377,"byte_end":132382,"line_start":201,"line_end":201,"column_start":8,"column_end":13},"name":"join5","qualname":"::future::join::join5","value":"fn join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> Join5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future, Fut5: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":131976,"byte_end":132028,"line_start":183,"line_end":183,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":132029,"byte_end":132032,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":132033,"byte_end":132047,"line_start":185,"line_end":185,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":132048,"byte_end":132051,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":132052,"byte_end":132059,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":132060,"byte_end":132101,"line_start":188,"line_end":188,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":132102,"byte_end":132126,"line_start":189,"line_end":189,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":132127,"byte_end":132130,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":132131,"byte_end":132155,"line_start":191,"line_end":191,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":132156,"byte_end":132180,"line_start":192,"line_end":192,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":132181,"byte_end":132205,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":132206,"byte_end":132230,"line_start":194,"line_end":194,"column_start":1,"column_end":25}},{"value":"/ let e = async { 5 };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":132231,"byte_end":132255,"line_start":195,"line_end":195,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join5(a, b, c, d, e);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":132256,"byte_end":132301,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":132302,"byte_end":132305,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4, 5));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":132306,"byte_end":132351,"line_start":198,"line_end":198,"column_start":1,"column_end":46}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":132352,"byte_end":132361,"line_start":199,"line_end":199,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":132362,"byte_end":132369,"line_start":200,"line_end":200,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1436},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":133753,"byte_end":133760,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"JoinAll","qualname":"::future::join_all::JoinAll","value":"JoinAll {  }","parent":null,"children":[{"krate":0,"index":1438}],"decl_id":null,"docs":" Future for the [`join_all`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":133632,"byte_end":133699,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/ Future for the [`join_all`] function.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":133700,"byte_end":133741,"line_start":26,"line_end":26,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1448},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":134211,"byte_end":134214,"line_start":55,"line_end":55,"column_start":8,"column_end":11},"name":"fmt","qualname":"<JoinAll<F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1449},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":135855,"byte_end":135863,"line_start":102,"line_end":102,"column_start":8,"column_end":16},"name":"join_all","qualname":"::future::join_all::join_all","value":"fn join_all<I>(I) -> JoinAll<I::Item> where I: IntoIterator, I::Item: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents a collection of the outputs of the futures\n given.","sig":null,"attributes":[{"value":"/ Creates a future which represents a collection of the outputs of the futures","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":134569,"byte_end":134649,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/ given.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":134650,"byte_end":134660,"line_start":67,"line_end":67,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":134661,"byte_end":134664,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":134665,"byte_end":134744,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":134745,"byte_end":134825,"line_start":70,"line_end":70,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":134826,"byte_end":134844,"line_start":71,"line_end":71,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":134845,"byte_end":134848,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":134849,"byte_end":134926,"line_start":73,"line_end":73,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":134927,"byte_end":134984,"line_start":74,"line_end":74,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":134985,"byte_end":134988,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ # See Also","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":134989,"byte_end":135003,"line_start":76,"line_end":76,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":135004,"byte_end":135007,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ `join_all` will switch to the more powerful [`FuturesOrdered`] for performance","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":135008,"byte_end":135090,"line_start":78,"line_end":78,"column_start":1,"column_end":83}},{"value":"/ reasons if the number of futures is large. You may want to look into using it or","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":135091,"byte_end":135175,"line_start":79,"line_end":79,"column_start":1,"column_end":85}},{"value":"/ it's counterpart [`FuturesUnordered`][crate::stream::FuturesUnordered] directly.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":135176,"byte_end":135260,"line_start":80,"line_end":80,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":135261,"byte_end":135264,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ Some examples for additional functionality provided by these are:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":135265,"byte_end":135334,"line_start":82,"line_end":82,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":135335,"byte_end":135338,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/  * Adding new futures to the set even after it has been started.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":135339,"byte_end":135407,"line_start":84,"line_end":84,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":135408,"byte_end":135411,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/  * Only polling the specific futures that have been woken. In cases where","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":135412,"byte_end":135489,"line_start":86,"line_end":86,"column_start":1,"column_end":78}},{"value":"/    you have a lot of futures this will result in much more efficient polling.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":135490,"byte_end":135571,"line_start":87,"line_end":87,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":135572,"byte_end":135575,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":135576,"byte_end":135590,"line_start":89,"line_end":89,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":135591,"byte_end":135594,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":135595,"byte_end":135602,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":135603,"byte_end":135644,"line_start":92,"line_end":92,"column_start":1,"column_end":42}},{"value":"/ use futures::future::join_all;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":135645,"byte_end":135679,"line_start":93,"line_end":93,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":135680,"byte_end":135683,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ async fn foo(i: u32) -> u32 { i }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":135684,"byte_end":135721,"line_start":95,"line_end":95,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":135722,"byte_end":135725,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![foo(1), foo(2), foo(3)];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":135726,"byte_end":135773,"line_start":97,"line_end":97,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":135774,"byte_end":135777,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(join_all(futures).await, [1, 2, 3]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":135778,"byte_end":135829,"line_start":99,"line_end":99,"column_start":1,"column_end":52}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":135830,"byte_end":135839,"line_start":100,"line_end":100,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":135840,"byte_end":135847,"line_start":101,"line_end":101,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1454},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":136760,"byte_end":136764,"line_start":136,"line_end":136,"column_start":8,"column_end":12},"name":"poll","qualname":"<JoinAll<F> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1458},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":137699,"byte_end":137708,"line_start":163,"line_end":163,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<JoinAll<F> as std::iter::FromIterator>::from_iter","value":"fn from_iter<T>(T) -> Self where T: IntoIterator<Item = F>","parent":{"krate":2,"index":8394},"children":[],"decl_id":{"krate":2,"index":8396},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11155},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":138102,"byte_end":138108,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Select","qualname":"::future::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":11158}],"decl_id":null,"docs":" Future for the [`select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select()`] function.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":137964,"byte_end":138005,"line_start":7,"line_end":7,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":138006,"byte_end":138073,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1498},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":140372,"byte_end":140378,"line_start":84,"line_end":84,"column_start":8,"column_end":14},"name":"select","qualname":"::future::select::select","value":"fn select<A, B>(A, B) -> Select<A, B> where A: Future + Unpin, B: Future +\nUnpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":138199,"byte_end":138269,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":138270,"byte_end":138273,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":138274,"byte_end":138352,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":138353,"byte_end":138429,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":138430,"byte_end":138502,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":138503,"byte_end":138506,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":138507,"byte_end":138579,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":138580,"byte_end":138608,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":138609,"byte_end":138612,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":138613,"byte_end":138680,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/ output type you can use the `Either::factor_first` method to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":138681,"byte_end":138745,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":138746,"byte_end":138796,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":138797,"byte_end":138800,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":138801,"byte_end":138815,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":138816,"byte_end":138819,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A simple example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":138820,"byte_end":138840,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":138841,"byte_end":138844,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":138845,"byte_end":138852,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":138853,"byte_end":138894,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/ use futures::{","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":138895,"byte_end":138913,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/     pin_mut,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":138914,"byte_end":138930,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/     future::Either,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":138931,"byte_end":138954,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/     future::self,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":138955,"byte_end":138976,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/ };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":138977,"byte_end":138983,"line_start":39,"line_end":39,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":138984,"byte_end":138987,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // These two futures have different types even though their outputs have the same type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":138988,"byte_end":139079,"line_start":41,"line_end":41,"column_start":1,"column_end":92}},{"value":"/ let future1 = async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":139080,"byte_end":139105,"line_start":42,"line_end":42,"column_start":1,"column_end":26}},{"value":"/     future::pending::<()>().await; // will never finish","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":139106,"byte_end":139165,"line_start":43,"line_end":43,"column_start":1,"column_end":60}},{"value":"/     1","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":139166,"byte_end":139175,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":139176,"byte_end":139182,"line_start":45,"line_end":45,"column_start":1,"column_end":7}},{"value":"/ let future2 = async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":139183,"byte_end":139208,"line_start":46,"line_end":46,"column_start":1,"column_end":26}},{"value":"/     future::ready(2).await","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":139209,"byte_end":139239,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/ };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":139240,"byte_end":139246,"line_start":48,"line_end":48,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":139247,"byte_end":139250,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // 'select' requires Future + Unpin bounds","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":139251,"byte_end":139297,"line_start":50,"line_end":50,"column_start":1,"column_end":47}},{"value":"/ pin_mut!(future1);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":139298,"byte_end":139320,"line_start":51,"line_end":51,"column_start":1,"column_end":23}},{"value":"/ pin_mut!(future2);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":139321,"byte_end":139343,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":139344,"byte_end":139347,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ let value = match future::select(future1, future2).await {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":139348,"byte_end":139410,"line_start":54,"line_end":54,"column_start":1,"column_end":63}},{"value":"/     Either::Left((value1, _)) => value1,  // `value1` is resolved from `future1`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":139411,"byte_end":139495,"line_start":55,"line_end":55,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future2`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":139496,"byte_end":139569,"line_start":56,"line_end":56,"column_start":1,"column_end":74}},{"value":"/     Either::Right((value2, _)) => value2, // `value2` is resolved from `future2`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":139570,"byte_end":139654,"line_start":57,"line_end":57,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future1`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":139655,"byte_end":139728,"line_start":58,"line_end":58,"column_start":1,"column_end":74}},{"value":"/ };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":139729,"byte_end":139735,"line_start":59,"line_end":59,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":139736,"byte_end":139739,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ assert!(value == 2);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":139740,"byte_end":139764,"line_start":61,"line_end":61,"column_start":1,"column_end":25}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":139765,"byte_end":139774,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":139775,"byte_end":139782,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":139783,"byte_end":139786,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ A more complex example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":139787,"byte_end":139813,"line_start":65,"line_end":65,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":139814,"byte_end":139817,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":139818,"byte_end":139825,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":139826,"byte_end":139885,"line_start":68,"line_end":68,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":139886,"byte_end":139889,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's join implemented on top of select","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":139890,"byte_end":139943,"line_start":70,"line_end":70,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":139944,"byte_end":139947,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ fn join<A, B>(a: A, b: B) -> impl Future<Output=(A::Output, B::Output)>","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":139948,"byte_end":140023,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/     where A: Future + Unpin,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":140024,"byte_end":140056,"line_start":73,"line_end":73,"column_start":1,"column_end":33}},{"value":"/           B: Future + Unpin,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":140057,"byte_end":140089,"line_start":74,"line_end":74,"column_start":1,"column_end":33}},{"value":"/ {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":140090,"byte_end":140095,"line_start":75,"line_end":75,"column_start":1,"column_end":6}},{"value":"/     future::select(a, b).then(|either| {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":140096,"byte_end":140140,"line_start":76,"line_end":76,"column_start":1,"column_end":45}},{"value":"/         match either {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":140141,"byte_end":140167,"line_start":77,"line_end":77,"column_start":1,"column_end":27}},{"value":"/             Either::Left((x, b)) => b.map(move |y| (x, y)).left_future(),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":140168,"byte_end":140245,"line_start":78,"line_end":78,"column_start":1,"column_end":78}},{"value":"/             Either::Right((y, a)) => a.map(move |x| (x, y)).right_future(),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":140246,"byte_end":140325,"line_start":79,"line_end":79,"column_start":1,"column_end":80}},{"value":"/         }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":140326,"byte_end":140339,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":140340,"byte_end":140350,"line_start":81,"line_end":81,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":140351,"byte_end":140356,"line_start":82,"line_end":82,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":140357,"byte_end":140364,"line_start":83,"line_end":83,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1505},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":140757,"byte_end":140761,"line_start":101,"line_end":101,"column_start":8,"column_end":12},"name":"poll","qualname":"<Select<A, B> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1509},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":141326,"byte_end":141339,"line_start":122,"line_end":122,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Select<A, B> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11163},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":141753,"byte_end":141762,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"SelectAll","qualname":"::future::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":11165}],"decl_id":null,"docs":" Future for the [`select_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_all`] function.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":141613,"byte_end":141656,"line_start":10,"line_end":10,"column_start":1,"column_end":44}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":141674,"byte_end":141741,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1548},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":142542,"byte_end":142552,"line_start":34,"line_end":34,"column_start":8,"column_end":18},"name":"select_all","qualname":"::future::select_all::select_all","value":"fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Future + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select over a list of futures.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":141840,"byte_end":141906,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":141907,"byte_end":141910,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready. Upon","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":141911,"byte_end":141991,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ completion the item resolved will be returned, along with the index of the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":141992,"byte_end":142070,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ future that was ready and the list of all the remaining futures.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":142071,"byte_end":142139,"line_start":23,"line_end":23,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":142140,"byte_end":142143,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ There are no guarantees provided on the order of the list with the remaining","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":142144,"byte_end":142224,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ futures. They might be swapped around, reversed, or completely random.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":142225,"byte_end":142299,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":142300,"byte_end":142303,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":142304,"byte_end":142381,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":142382,"byte_end":142439,"line_start":29,"line_end":29,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":142440,"byte_end":142443,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":142444,"byte_end":142456,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":142457,"byte_end":142460,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":142461,"byte_end":142534,"line_start":33,"line_end":33,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1552},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":142933,"byte_end":142943,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SelectAll<Fut>>::into_inner","value":"fn into_inner(Self) -> Vec<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying futures.\n","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying futures.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":142858,"byte_end":142921,"line_start":45,"line_end":45,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1556},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":143104,"byte_end":143108,"line_start":54,"line_end":54,"column_start":8,"column_end":12},"name":"poll","qualname":"<SelectAll<Fut> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1560},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":143717,"byte_end":143726,"line_start":71,"line_end":71,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<SelectAll<Fut> as std::iter::FromIterator>::from_iter","value":"fn from_iter<T>(T) -> Self where T: IntoIterator<Item = Fut>","parent":{"krate":2,"index":8394},"children":[],"decl_id":{"krate":2,"index":8396},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11239},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":146689,"byte_end":146696,"line_start":94,"line_end":94,"column_start":6,"column_end":13},"name":"TryJoin","qualname":"::future::try_join::TryJoin","value":"TryJoin {  }","parent":null,"children":[{"krate":0,"index":11242},{"krate":0,"index":11243}],"decl_id":null,"docs":" Future for the [`try_join`](try_join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11284},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":146766,"byte_end":146774,"line_start":97,"line_end":97,"column_start":6,"column_end":14},"name":"TryJoin3","qualname":"::future::try_join::TryJoin3","value":"TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":11288},{"krate":0,"index":11289},{"krate":0,"index":11290}],"decl_id":null,"docs":" Future for the [`try_join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11341},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":146850,"byte_end":146858,"line_start":100,"line_end":100,"column_start":6,"column_end":14},"name":"TryJoin4","qualname":"::future::try_join::TryJoin4","value":"TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":11346},{"krate":0,"index":11347},{"krate":0,"index":11348},{"krate":0,"index":11349}],"decl_id":null,"docs":" Future for the [`try_join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11410},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":146940,"byte_end":146948,"line_start":103,"line_end":103,"column_start":6,"column_end":14},"name":"TryJoin5","qualname":"::future::try_join::TryJoin5","value":"TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":11416},{"krate":0,"index":11417},{"krate":0,"index":11418},{"krate":0,"index":11419},{"krate":0,"index":11420}],"decl_id":null,"docs":" Future for the [`try_join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1604},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":148221,"byte_end":148229,"line_start":148,"line_end":148,"column_start":8,"column_end":16},"name":"try_join","qualname":"::future::try_join::try_join","value":"fn try_join<Fut1, Fut2>(Fut1, Fut2) -> TryJoin<Fut1, Fut2> where\nFut1: TryFuture, Fut2: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete or\n for one to produce an error.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete or","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":146986,"byte_end":147059,"line_start":106,"line_end":106,"column_start":1,"column_end":74}},{"value":"/ for one to produce an error.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":147060,"byte_end":147092,"line_start":107,"line_end":107,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":147093,"byte_end":147096,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":147097,"byte_end":147168,"line_start":109,"line_end":109,"column_start":1,"column_end":72}},{"value":"/ complete. If successful, the returned future will finish with a tuple of","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":147169,"byte_end":147245,"line_start":110,"line_end":110,"column_start":1,"column_end":77}},{"value":"/ both results. If unsuccessful, it will complete with the first error","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":147246,"byte_end":147318,"line_start":111,"line_end":111,"column_start":1,"column_end":73}},{"value":"/ encountered.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":147319,"byte_end":147335,"line_start":112,"line_end":112,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":147336,"byte_end":147339,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":147340,"byte_end":147409,"line_start":114,"line_end":114,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":147410,"byte_end":147436,"line_start":115,"line_end":115,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":147437,"byte_end":147440,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":147441,"byte_end":147455,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":147456,"byte_end":147459,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ When used on multiple futures that return [`Ok`], `try_join` will return","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":147460,"byte_end":147536,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/ [`Ok`] of a tuple of the values:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":147537,"byte_end":147573,"line_start":120,"line_end":120,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":147574,"byte_end":147577,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":147578,"byte_end":147585,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":147586,"byte_end":147627,"line_start":123,"line_end":123,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":147628,"byte_end":147652,"line_start":124,"line_end":124,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":147653,"byte_end":147656,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":147657,"byte_end":147702,"line_start":126,"line_end":126,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":147703,"byte_end":147748,"line_start":127,"line_end":127,"column_start":1,"column_end":46}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":147749,"byte_end":147787,"line_start":128,"line_end":128,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":147788,"byte_end":147791,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Ok((1, 2)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":147792,"byte_end":147831,"line_start":130,"line_end":130,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":147832,"byte_end":147841,"line_start":131,"line_end":131,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":147842,"byte_end":147849,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":147850,"byte_end":147853,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ If one of the futures resolves to an error, `try_join` will return","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":147854,"byte_end":147924,"line_start":134,"line_end":134,"column_start":1,"column_end":71}},{"value":"/ that error:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":147925,"byte_end":147940,"line_start":135,"line_end":135,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":147941,"byte_end":147944,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":147945,"byte_end":147952,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":147953,"byte_end":147994,"line_start":138,"line_end":138,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":147995,"byte_end":148019,"line_start":139,"line_end":139,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":148020,"byte_end":148023,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":148024,"byte_end":148069,"line_start":141,"line_end":141,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Err::<i32, i32>(2));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":148070,"byte_end":148116,"line_start":142,"line_end":142,"column_start":1,"column_end":47}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":148117,"byte_end":148155,"line_start":143,"line_end":143,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":148156,"byte_end":148159,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Err(2));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":148160,"byte_end":148195,"line_start":145,"line_end":145,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":148196,"byte_end":148205,"line_start":146,"line_end":146,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":148206,"byte_end":148213,"line_start":147,"line_end":147,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1607},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":148885,"byte_end":148894,"line_start":172,"line_end":172,"column_start":8,"column_end":17},"name":"try_join3","qualname":"::future::try_join::try_join3","value":"fn try_join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3) -> TryJoin3<Fut1, Fut2, Fut3>\nwhere Fut1: TryFuture, Fut2: TryFuture<Error = Fut1::Error>,\nFut3: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":148467,"byte_end":148527,"line_start":156,"line_end":156,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":148528,"byte_end":148531,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":148532,"byte_end":148546,"line_start":158,"line_end":158,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":148547,"byte_end":148550,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":148551,"byte_end":148558,"line_start":160,"line_end":160,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":148559,"byte_end":148600,"line_start":161,"line_end":161,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":148601,"byte_end":148625,"line_start":162,"line_end":162,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":148626,"byte_end":148629,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":148630,"byte_end":148675,"line_start":164,"line_end":164,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":148676,"byte_end":148721,"line_start":165,"line_end":165,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":148722,"byte_end":148767,"line_start":166,"line_end":166,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join3(a, b, c);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":148768,"byte_end":148811,"line_start":167,"line_end":167,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":148812,"byte_end":148815,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":148816,"byte_end":148859,"line_start":169,"line_end":169,"column_start":1,"column_end":44}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":148860,"byte_end":148869,"line_start":170,"line_end":170,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":148870,"byte_end":148877,"line_start":171,"line_end":171,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1611},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":149722,"byte_end":149731,"line_start":204,"line_end":204,"column_start":8,"column_end":17},"name":"try_join4","qualname":"::future::try_join::try_join4","value":"fn try_join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> TryJoin4<Fut1, Fut2, Fut3, Fut4> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":149252,"byte_end":149312,"line_start":187,"line_end":187,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":149313,"byte_end":149316,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":149317,"byte_end":149331,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":149332,"byte_end":149335,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":149336,"byte_end":149343,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":149344,"byte_end":149385,"line_start":192,"line_end":192,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":149386,"byte_end":149410,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":149411,"byte_end":149414,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":149415,"byte_end":149460,"line_start":195,"line_end":195,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":149461,"byte_end":149506,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":149507,"byte_end":149552,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":149553,"byte_end":149598,"line_start":198,"line_end":198,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join4(a, b, c, d);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":149599,"byte_end":149645,"line_start":199,"line_end":199,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":149646,"byte_end":149649,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":149650,"byte_end":149696,"line_start":201,"line_end":201,"column_start":1,"column_end":47}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":149697,"byte_end":149706,"line_start":202,"line_end":202,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":149707,"byte_end":149714,"line_start":203,"line_end":203,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1616},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":150703,"byte_end":150712,"line_start":239,"line_end":239,"column_start":8,"column_end":17},"name":"try_join5","qualname":"::future::try_join::try_join5","value":"fn try_join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> TryJoin5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>, Fut5: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":150181,"byte_end":150241,"line_start":221,"line_end":221,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":150242,"byte_end":150245,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":150246,"byte_end":150260,"line_start":223,"line_end":223,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":150261,"byte_end":150264,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":150265,"byte_end":150272,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":150273,"byte_end":150314,"line_start":226,"line_end":226,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":150315,"byte_end":150339,"line_start":227,"line_end":227,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":150340,"byte_end":150343,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":150344,"byte_end":150389,"line_start":229,"line_end":229,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":150390,"byte_end":150435,"line_start":230,"line_end":230,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":150436,"byte_end":150481,"line_start":231,"line_end":231,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":150482,"byte_end":150527,"line_start":232,"line_end":232,"column_start":1,"column_end":46}},{"value":"/ let e = future::ready(Ok::<i32, i32>(5));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":150528,"byte_end":150573,"line_start":233,"line_end":233,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join5(a, b, c, d, e);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":150574,"byte_end":150623,"line_start":234,"line_end":234,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":150624,"byte_end":150627,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4, 5)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":150628,"byte_end":150677,"line_start":236,"line_end":236,"column_start":1,"column_end":50}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":150678,"byte_end":150687,"line_start":237,"line_end":237,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":150688,"byte_end":150695,"line_start":238,"line_end":238,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1714},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":151961,"byte_end":151971,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"name":"TryJoinAll","qualname":"::future::try_join_all::TryJoinAll","value":"TryJoinAll {  }","parent":null,"children":[{"krate":0,"index":1716}],"decl_id":null,"docs":" Future for the [`try_join_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_join_all`] function.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":151836,"byte_end":151881,"line_start":25,"line_end":25,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":151882,"byte_end":151949,"line_start":26,"line_end":26,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1725},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":152443,"byte_end":152446,"line_start":54,"line_end":54,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryJoinAll<F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1726},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":154059,"byte_end":154071,"line_start":103,"line_end":103,"column_start":8,"column_end":20},"name":"try_join_all","qualname":"::future::try_join_all::try_join_all","value":"fn try_join_all<I>(I) -> TryJoinAll<I::Item> where I: IntoIterator,\nI::Item: TryFuture","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents either a collection of the results of the\n futures given or an error.","sig":null,"attributes":[{"value":"/ Creates a future which represents either a collection of the results of the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":152810,"byte_end":152889,"line_start":65,"line_end":65,"column_start":1,"column_end":80}},{"value":"/ futures given or an error.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":152890,"byte_end":152920,"line_start":66,"line_end":66,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":152921,"byte_end":152924,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":152925,"byte_end":153004,"line_start":68,"line_end":68,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":153005,"byte_end":153085,"line_start":69,"line_end":69,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":153086,"byte_end":153104,"line_start":70,"line_end":70,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":153105,"byte_end":153108,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ If any future returns an error then all other futures will be canceled and","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":153109,"byte_end":153187,"line_start":72,"line_end":72,"column_start":1,"column_end":79}},{"value":"/ an error will be returned immediately. If all futures complete successfully,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":153188,"byte_end":153268,"line_start":73,"line_end":73,"column_start":1,"column_end":81}},{"value":"/ however, then the returned future will succeed with a `Vec` of all the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":153269,"byte_end":153343,"line_start":74,"line_end":74,"column_start":1,"column_end":75}},{"value":"/ successful results.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":153344,"byte_end":153367,"line_start":75,"line_end":75,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":153368,"byte_end":153371,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":153372,"byte_end":153449,"line_start":77,"line_end":77,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":153450,"byte_end":153507,"line_start":78,"line_end":78,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":153508,"byte_end":153511,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":153512,"byte_end":153526,"line_start":80,"line_end":80,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":153527,"byte_end":153530,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":153531,"byte_end":153538,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":153539,"byte_end":153580,"line_start":83,"line_end":83,"column_start":1,"column_end":42}},{"value":"/ use futures::future::{self, try_join_all};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":153581,"byte_end":153627,"line_start":84,"line_end":84,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":153628,"byte_end":153631,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":153632,"byte_end":153655,"line_start":86,"line_end":86,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":153656,"byte_end":153690,"line_start":87,"line_end":87,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(2),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":153691,"byte_end":153725,"line_start":88,"line_end":88,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":153726,"byte_end":153760,"line_start":89,"line_end":89,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":153761,"byte_end":153767,"line_start":90,"line_end":90,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":153768,"byte_end":153771,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Ok(vec![1, 2, 3]));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":153772,"byte_end":153835,"line_start":92,"line_end":92,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":153836,"byte_end":153839,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":153840,"byte_end":153863,"line_start":94,"line_end":94,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":153864,"byte_end":153898,"line_start":95,"line_end":95,"column_start":1,"column_end":35}},{"value":"/     future::err::<u32, u32>(2),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":153899,"byte_end":153934,"line_start":96,"line_end":96,"column_start":1,"column_end":36}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":153935,"byte_end":153969,"line_start":97,"line_end":97,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":153970,"byte_end":153976,"line_start":98,"line_end":98,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":153977,"byte_end":153980,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Err(2));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":153981,"byte_end":154033,"line_start":100,"line_end":100,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":154034,"byte_end":154043,"line_start":101,"line_end":101,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":154044,"byte_end":154051,"line_start":102,"line_end":102,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1731},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":155191,"byte_end":155195,"line_start":142,"line_end":142,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryJoinAll<F> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1735},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":156724,"byte_end":156733,"line_start":183,"line_end":183,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<TryJoinAll<F> as std::iter::FromIterator>::from_iter","value":"fn from_iter<T>(T) -> Self where T: IntoIterator<Item = F>","parent":{"krate":2,"index":8394},"children":[],"decl_id":{"krate":2,"index":8396},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11491},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":157110,"byte_end":157119,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"TrySelect","qualname":"::future::try_select::TrySelect","value":"TrySelect {  }","parent":null,"children":[{"krate":0,"index":11494}],"decl_id":null,"docs":" Future for the [`try_select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_select()`] function.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":156968,"byte_end":157013,"line_start":6,"line_end":6,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":157014,"byte_end":157081,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1772},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":158704,"byte_end":158714,"line_start":50,"line_end":50,"column_start":8,"column_end":18},"name":"try_select","qualname":"::future::try_select::try_select","value":"fn try_select<A, B>(A, B) -> TrySelect<A, B> where A: TryFuture + Unpin,\nB: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":157213,"byte_end":157283,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":157284,"byte_end":157287,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":157288,"byte_end":157366,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":157367,"byte_end":157443,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":157444,"byte_end":157516,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":157517,"byte_end":157520,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":157521,"byte_end":157593,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":157594,"byte_end":157622,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":157623,"byte_end":157626,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":157627,"byte_end":157694,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ success/error type you can use the `Either::factor_first` method to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":157695,"byte_end":157766,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":157767,"byte_end":157817,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":157818,"byte_end":157821,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":157822,"byte_end":157836,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":157837,"byte_end":157840,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":157841,"byte_end":157848,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt, TryFuture, TryFutureExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":157849,"byte_end":157933,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":157934,"byte_end":157937,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's try_join implemented on top of select","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":157938,"byte_end":157995,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":157996,"byte_end":157999,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn try_join<A, B, E>(a: A, b: B) -> impl TryFuture<Ok=(A::Ok, B::Ok), Error=E>","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":158000,"byte_end":158082,"line_start":35,"line_end":35,"column_start":1,"column_end":83}},{"value":"/      where A: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":158083,"byte_end":158140,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/            B: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":158141,"byte_end":158198,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/            E: 'static,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":158199,"byte_end":158225,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":158226,"byte_end":158231,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/     future::try_select(a, b).then(|res| -> Box<dyn Future<Output = Result<_, _>> + Unpin> {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":158232,"byte_end":158327,"line_start":40,"line_end":40,"column_start":1,"column_end":96}},{"value":"/         match res {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":158328,"byte_end":158351,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/             Ok(Either::Left((x, b))) => Box::new(b.map_ok(move |y| (x, y))),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":158352,"byte_end":158432,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/             Ok(Either::Right((y, a))) => Box::new(a.map_ok(move |x| (x, y))),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":158433,"byte_end":158514,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/             Err(Either::Left((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":158515,"byte_end":158585,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/             Err(Either::Right((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":158586,"byte_end":158657,"line_start":45,"line_end":45,"column_start":1,"column_end":72}},{"value":"/         }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":158658,"byte_end":158671,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":158672,"byte_end":158682,"line_start":47,"line_end":47,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":158683,"byte_end":158688,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":158689,"byte_end":158696,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1779},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":159243,"byte_end":159247,"line_start":69,"line_end":69,"column_start":8,"column_end":12},"name":"poll","qualname":"<TrySelect<A, B> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11499},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":160345,"byte_end":160353,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"SelectOk","qualname":"::future::select_ok::SelectOk","value":"SelectOk {  }","parent":null,"children":[{"krate":0,"index":11501}],"decl_id":null,"docs":" Future for the [`select_ok`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_ok`] function.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":160206,"byte_end":160248,"line_start":10,"line_end":10,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":160266,"byte_end":160333,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1822},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":161075,"byte_end":161084,"line_start":32,"line_end":32,"column_start":8,"column_end":17},"name":"select_ok","qualname":"::future::select_ok::select_ok","value":"fn select_ok<I>(I) -> SelectOk<I::Item> where I: IntoIterator,\nI::Item: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select the first successful future over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select the first successful future over a list of futures.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":160430,"byte_end":160524,"line_start":19,"line_end":19,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":160525,"byte_end":160528,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready and Ok. Unlike","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":160529,"byte_end":160618,"line_start":21,"line_end":21,"column_start":1,"column_end":90}},{"value":"/ `select_all`, this will only return the first successful completion, or the last","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":160619,"byte_end":160703,"line_start":22,"line_end":22,"column_start":1,"column_end":85}},{"value":"/ failure. This is useful in contexts where any success is desired and failures","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":160704,"byte_end":160785,"line_start":23,"line_end":23,"column_start":1,"column_end":82}},{"value":"/ are ignored, unless all the futures fail.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":160786,"byte_end":160831,"line_start":24,"line_end":24,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":160832,"byte_end":160835,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/  This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":160836,"byte_end":160914,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":160915,"byte_end":160972,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":160973,"byte_end":160976,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":160977,"byte_end":160989,"line_start":29,"line_end":29,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":160990,"byte_end":160993,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":160994,"byte_end":161067,"line_start":31,"line_end":31,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1827},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":161581,"byte_end":161585,"line_start":48,"line_end":48,"column_start":8,"column_end":12},"name":"poll","qualname":"<SelectOk<Fut> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1831},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":162945,"byte_end":162954,"line_start":82,"line_end":82,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<SelectOk<Fut> as std::iter::FromIterator>::from_iter","value":"fn from_iter<T>(T) -> Self where T: IntoIterator<Item = Fut>","parent":{"krate":2,"index":8394},"children":[],"decl_id":{"krate":2,"index":8396},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11508},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":163812,"byte_end":163816,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"name":"Left","qualname":"::future::either::Either::Left","value":"Either::Left(A)","parent":{"krate":0,"index":11505},"children":[],"decl_id":null,"docs":" First branch of the type\n","sig":null,"attributes":[{"value":"/ First branch of the type","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":163779,"byte_end":163807,"line_start":29,"line_end":29,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":11510},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":163830,"byte_end":163831,"line_start":30,"line_end":30,"column_start":23,"column_end":24},"name":"0","qualname":"::future::either::Either::Left::0","value":"A","parent":{"krate":0,"index":11508},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":11511},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":163872,"byte_end":163877,"line_start":32,"line_end":32,"column_start":5,"column_end":10},"name":"Right","qualname":"::future::either::Either::Right","value":"Either::Right(B)","parent":{"krate":0,"index":11505},"children":[],"decl_id":null,"docs":" Second branch of the type\n","sig":null,"attributes":[{"value":"/ Second branch of the type","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":163838,"byte_end":163867,"line_start":31,"line_end":31,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":11513},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":163891,"byte_end":163892,"line_start":32,"line_end":32,"column_start":24,"column_end":25},"name":"0","qualname":"::future::either::Either::Right::0","value":"B","parent":{"krate":0,"index":11511},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":11505},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":163760,"byte_end":163766,"line_start":28,"line_end":28,"column_start":10,"column_end":16},"name":"Either","qualname":"::future::either::Either","value":"enum Either<A, B> { Left(A), Right(B), }","parent":null,"children":[{"krate":0,"index":11508},{"krate":0,"index":11511}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":163237,"byte_end":163343,"line_start":8,"line_end":8,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":163344,"byte_end":163347,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is useful when conditionally choosing between two distinct future types:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":163348,"byte_end":163429,"line_start":10,"line_end":10,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":163430,"byte_end":163433,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":163434,"byte_end":163445,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/ use futures::future::Either;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":163446,"byte_end":163478,"line_start":13,"line_end":13,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":163479,"byte_end":163482,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":163483,"byte_end":163524,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/ let cond = true;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":163525,"byte_end":163545,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":163546,"byte_end":163549,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let fut = if cond {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":163550,"byte_end":163573,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"/     Either::Left(async move { 12 })","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":163574,"byte_end":163613,"line_start":19,"line_end":19,"column_start":1,"column_end":40}},{"value":"/ } else {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":163614,"byte_end":163626,"line_start":20,"line_end":20,"column_start":1,"column_end":13}},{"value":"/     Either::Right(async move { 44 })","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":163627,"byte_end":163667,"line_start":21,"line_end":21,"column_start":1,"column_end":41}},{"value":"/ };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":163668,"byte_end":163674,"line_start":22,"line_end":22,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":163675,"byte_end":163678,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(fut.await, 12);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":163679,"byte_end":163709,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/ # })","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":163710,"byte_end":163718,"line_start":25,"line_end":25,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":163719,"byte_end":163726,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1873},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":164431,"byte_end":164443,"line_start":50,"line_end":50,"column_start":12,"column_end":24},"name":"factor_first","qualname":"<Either<(T, A), (T, B)>>::factor_first","value":"fn factor_first(Self) -> (T, Either<A, B>)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":164283,"byte_end":164341,"line_start":47,"line_end":47,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":164346,"byte_end":164349,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the first element of the pairs.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":164354,"byte_end":164419,"line_start":49,"line_end":49,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1878},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":164823,"byte_end":164836,"line_start":62,"line_end":62,"column_start":12,"column_end":25},"name":"factor_second","qualname":"<Either<(A, T), (B, T)>>::factor_second","value":"fn factor_second(Self) -> (Either<A, B>, T)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":164674,"byte_end":164732,"line_start":59,"line_end":59,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":164737,"byte_end":164740,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the second element of the pairs.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":164745,"byte_end":164811,"line_start":61,"line_end":61,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1881},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":165124,"byte_end":165134,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Either<T, T>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extract the value of an either over two equivalent types.\n","sig":null,"attributes":[{"value":"/ Extract the value of an either over two equivalent types.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":165051,"byte_end":165112,"line_start":71,"line_end":71,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1886},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":165387,"byte_end":165391,"line_start":87,"line_end":87,"column_start":8,"column_end":12},"name":"poll","qualname":"<Either<A, B> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1890},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":165712,"byte_end":165725,"line_start":100,"line_end":100,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Either<A, B> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1895},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":166006,"byte_end":166015,"line_start":115,"line_end":115,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Either<A, B> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1896},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":166242,"byte_end":166251,"line_start":122,"line_end":122,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Either<A, B> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1900},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":166531,"byte_end":166544,"line_start":135,"line_end":135,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Either<A, B> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1941},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":168209,"byte_end":168218,"line_start":196,"line_end":196,"column_start":12,"column_end":21},"name":"poll_read","qualname":"<Either<A, B> as futures_io::AsyncRead>::poll_read","value":"fn poll_read<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [u8])\n-> Poll<Result<usize>>","parent":{"krate":26,"index":39},"children":[],"decl_id":{"krate":26,"index":40},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1942},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":168537,"byte_end":168555,"line_start":207,"line_end":207,"column_start":12,"column_end":30},"name":"poll_read_vectored","qualname":"<Either<A, B> as futures_io::AsyncRead>::poll_read_vectored","value":"fn poll_read_vectored<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [IoSliceMut])\n-> Poll<Result<usize>>","parent":{"krate":26,"index":39},"children":[],"decl_id":{"krate":26,"index":41},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1946},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":169018,"byte_end":169028,"line_start":224,"line_end":224,"column_start":12,"column_end":22},"name":"poll_write","qualname":"<Either<A, B> as futures_io::AsyncWrite>::poll_write","value":"fn poll_write<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [u8])\n-> Poll<Result<usize>>","parent":{"krate":26,"index":42},"children":[],"decl_id":{"krate":26,"index":43},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1947},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":169345,"byte_end":169364,"line_start":235,"line_end":235,"column_start":12,"column_end":31},"name":"poll_write_vectored","qualname":"<Either<A, B> as futures_io::AsyncWrite>::poll_write_vectored","value":"fn poll_write_vectored<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [IoSlice]) -> Poll<Result<usize>>","parent":{"krate":26,"index":42},"children":[],"decl_id":{"krate":26,"index":44},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1948},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":169711,"byte_end":169721,"line_start":246,"line_end":246,"column_start":12,"column_end":22},"name":"poll_flush","qualname":"<Either<A, B> as futures_io::AsyncWrite>::poll_flush","value":"fn poll_flush<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Result<()>>","parent":{"krate":26,"index":42},"children":[],"decl_id":{"krate":26,"index":45},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1949},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":169966,"byte_end":169976,"line_start":253,"line_end":253,"column_start":12,"column_end":22},"name":"poll_close","qualname":"<Either<A, B> as futures_io::AsyncWrite>::poll_close","value":"fn poll_close<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Result<()>>","parent":{"krate":26,"index":42},"children":[],"decl_id":{"krate":26,"index":46},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1953},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":170329,"byte_end":170338,"line_start":266,"line_end":266,"column_start":12,"column_end":21},"name":"poll_seek","qualname":"<Either<A, B> as futures_io::AsyncSeek>::poll_seek","value":"fn poll_seek<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, SeekFrom)\n-> Poll<Result<u64>>","parent":{"krate":26,"index":47},"children":[],"decl_id":{"krate":26,"index":48},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1957},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":170771,"byte_end":170784,"line_start":283,"line_end":283,"column_start":12,"column_end":25},"name":"poll_fill_buf","qualname":"<Either<A, B> as futures_io::AsyncBufRead>::poll_fill_buf","value":"fn poll_fill_buf<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Result<&'_ [u8]>>","parent":{"krate":26,"index":49},"children":[],"decl_id":{"krate":26,"index":50},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1958},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":171038,"byte_end":171045,"line_start":290,"line_end":290,"column_start":12,"column_end":19},"name":"consume","qualname":"<Either<A, B> as futures_io::AsyncBufRead>::consume","value":"fn consume<'_>(Pin<&'_ mut Self>, usize)","parent":{"krate":26,"index":49},"children":[],"decl_id":{"krate":26,"index":51},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1979},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/abortable.rs","byte_start":171738,"byte_end":171747,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"abortable","qualname":"::future::abortable::abortable","value":"fn abortable<Fut>(Fut) -> (Abortable<Fut>, AbortHandle) where Fut: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future and an `AbortHandle` which can be used to stop it.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future and an `AbortHandle` which can be used to stop it.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/abortable.rs","byte_start":171368,"byte_end":171455,"line_start":5,"line_end":5,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/abortable.rs","byte_start":171456,"byte_end":171459,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function is a convenient (but less flexible) alternative to calling","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/abortable.rs","byte_start":171460,"byte_end":171536,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ `AbortHandle::new` and `Abortable::new` manually.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/abortable.rs","byte_start":171537,"byte_end":171590,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/abortable.rs","byte_start":171591,"byte_end":171594,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/abortable.rs","byte_start":171595,"byte_end":171672,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/abortable.rs","byte_start":171673,"byte_end":171730,"line_start":11,"line_end":11,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":2013},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":2014},{"krate":0,"index":2015},{"krate":0,"index":2018},{"krate":0,"index":2021},{"krate":0,"index":2022},{"krate":0,"index":2025},{"krate":0,"index":2028},{"krate":0,"index":2031},{"krate":0,"index":4123},{"krate":0,"index":4124},{"krate":0,"index":4127},{"krate":0,"index":4130},{"krate":0,"index":4133},{"krate":0,"index":4136},{"krate":0,"index":4139},{"krate":0,"index":4142},{"krate":0,"index":4145},{"krate":0,"index":4148},{"krate":0,"index":4151},{"krate":0,"index":4154},{"krate":0,"index":4157},{"krate":0,"index":4160},{"krate":0,"index":4163},{"krate":0,"index":4166},{"krate":0,"index":4169},{"krate":0,"index":4172},{"krate":0,"index":4175},{"krate":0,"index":4178},{"krate":0,"index":4181},{"krate":0,"index":4184},{"krate":0,"index":4187},{"krate":0,"index":4190},{"krate":0,"index":4193},{"krate":0,"index":4196},{"krate":0,"index":4199},{"krate":0,"index":4202},{"krate":0,"index":4205},{"krate":0,"index":4208},{"krate":0,"index":4211},{"krate":0,"index":4214},{"krate":0,"index":4217},{"krate":0,"index":4220},{"krate":0,"index":4223},{"krate":0,"index":4226},{"krate":0,"index":4229},{"krate":0,"index":4230},{"krate":0,"index":4233},{"krate":0,"index":4236},{"krate":0,"index":4239},{"krate":0,"index":5390},{"krate":0,"index":5391},{"krate":0,"index":5394},{"krate":0,"index":5397},{"krate":0,"index":5400},{"krate":0,"index":5403},{"krate":0,"index":5406},{"krate":0,"index":5409},{"krate":0,"index":5412},{"krate":0,"index":5415},{"krate":0,"index":5418},{"krate":0,"index":5421},{"krate":0,"index":5424},{"krate":0,"index":5427},{"krate":0,"index":5430},{"krate":0,"index":5433},{"krate":0,"index":5436},{"krate":0,"index":5439},{"krate":0,"index":5442},{"krate":0,"index":5445},{"krate":0,"index":5448},{"krate":0,"index":5451},{"krate":0,"index":5454},{"krate":0,"index":5457},{"krate":0,"index":5458},{"krate":0,"index":5461},{"krate":0,"index":5464},{"krate":0,"index":5467},{"krate":0,"index":5468},{"krate":0,"index":5471},{"krate":0,"index":5472},{"krate":0,"index":5474},{"krate":0,"index":5500},{"krate":0,"index":5501},{"krate":0,"index":5504},{"krate":0,"index":5507},{"krate":0,"index":5540},{"krate":0,"index":5541},{"krate":0,"index":5544},{"krate":0,"index":5547},{"krate":0,"index":5584},{"krate":0,"index":5585},{"krate":0,"index":5588},{"krate":0,"index":5591},{"krate":0,"index":5630},{"krate":0,"index":5631},{"krate":0,"index":5634},{"krate":0,"index":5637},{"krate":0,"index":5680},{"krate":0,"index":5681},{"krate":0,"index":5684},{"krate":0,"index":5687},{"krate":0,"index":5726},{"krate":0,"index":5727},{"krate":0,"index":5730},{"krate":0,"index":5733},{"krate":0,"index":5769},{"krate":0,"index":5770},{"krate":0,"index":5773},{"krate":0,"index":5776},{"krate":0,"index":5804},{"krate":0,"index":5805},{"krate":0,"index":5808},{"krate":0,"index":5811},{"krate":0,"index":5865},{"krate":0,"index":5866},{"krate":0,"index":5869},{"krate":0,"index":5872},{"krate":0,"index":5959},{"krate":0,"index":5960},{"krate":0,"index":5963},{"krate":0,"index":5966},{"krate":0,"index":5969},{"krate":0,"index":6028},{"krate":0,"index":6029},{"krate":0,"index":6032},{"krate":0,"index":6035},{"krate":0,"index":6144},{"krate":0,"index":6147},{"krate":0,"index":6553},{"krate":0,"index":6556},{"krate":0,"index":6678},{"krate":0,"index":6679},{"krate":0,"index":6682},{"krate":0,"index":6685},{"krate":0,"index":6701},{"krate":0,"index":6702},{"krate":0,"index":6705},{"krate":0,"index":6708},{"krate":0,"index":6711},{"krate":0,"index":6712},{"krate":0,"index":6714},{"krate":0,"index":6717}],"decl_id":null,"docs":" Asynchronous streams.","sig":null,"attributes":[{"value":"/ Asynchronous streams.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":171999,"byte_end":172024,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":172025,"byte_end":172028,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":172029,"byte_end":172054,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":172055,"byte_end":172058,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Stream`] trait, for objects that can asynchronously produce a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":172059,"byte_end":172132,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/   sequence of values.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":172133,"byte_end":172158,"line_start":6,"line_end":6,"column_start":1,"column_end":26}},{"value":"/ - The [`StreamExt`] and [`TryStreamExt`] trait, which provides adapters for","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":172159,"byte_end":172238,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/   chaining and composing streams.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":172239,"byte_end":172276,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/ - Top-level stream constructors like [`iter`](iter()) which creates a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":172277,"byte_end":172350,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/   stream from an iterator.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":172351,"byte_end":172381,"line_start":10,"line_end":10,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":11522},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chain.rs","byte_start":234068,"byte_end":234073,"line_start":11,"line_end":11,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":11525},{"krate":0,"index":11526}],"decl_id":null,"docs":" Stream for the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2114},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chain.rs","byte_start":234584,"byte_end":234597,"line_start":35,"line_end":35,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Chain<St1, St2> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2119},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chain.rs","byte_start":234821,"byte_end":234830,"line_start":47,"line_end":47,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Chain<St1, St2> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2120},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chain.rs","byte_start":235220,"byte_end":235229,"line_start":58,"line_end":58,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Chain<St1, St2> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11571},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/collect.rs","byte_start":236198,"byte_end":236205,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Collect","qualname":"::stream::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":11574},{"krate":0,"index":11575}],"decl_id":null,"docs":" Future for the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2166},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/collect.rs","byte_start":236646,"byte_end":236659,"line_start":35,"line_end":35,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Collect<St, C> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2171},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/collect.rs","byte_start":236848,"byte_end":236852,"line_start":47,"line_end":47,"column_start":8,"column_end":12},"name":"poll","qualname":"<Collect<St, C> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<C>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11620},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/unzip.rs","byte_start":237616,"byte_end":237621,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Unzip","qualname":"::stream::stream::unzip::Unzip","value":"Unzip {  }","parent":null,"children":[{"krate":0,"index":11624},{"krate":0,"index":11625},{"krate":0,"index":11626}],"decl_id":null,"docs":" Future for the [`unzip`](super::StreamExt::unzip) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2221},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/unzip.rs","byte_start":238270,"byte_end":238283,"line_start":38,"line_end":38,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Unzip<St, FromA, FromB> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2229},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/unzip.rs","byte_start":238555,"byte_end":238559,"line_start":51,"line_end":51,"column_start":8,"column_end":12},"name":"poll","qualname":"<Unzip<St, FromA, FromB> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<(FromA, FromB)>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11682},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/concat.rs","byte_start":239409,"byte_end":239415,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Concat","qualname":"::stream::stream::concat::Concat","value":"Concat {  }","parent":null,"children":[{"krate":0,"index":11684},{"krate":0,"index":11685}],"decl_id":null,"docs":" Future for the [`concat`](super::StreamExt::concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2270},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/concat.rs","byte_start":239894,"byte_end":239898,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"poll","qualname":"<Concat<St> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2273},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/concat.rs","byte_start":240584,"byte_end":240597,"line_start":59,"line_end":59,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Concat<St> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11722},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/count.rs","byte_start":241087,"byte_end":241092,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Count","qualname":"::stream::stream::count::Count","value":"Count {  }","parent":null,"children":[{"krate":0,"index":11724},{"krate":0,"index":11725}],"decl_id":null,"docs":" Future for the [`count`](super::StreamExt::count) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2313},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/count.rs","byte_start":241233,"byte_end":241236,"line_start":23,"line_end":23,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Count<St> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2319},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/count.rs","byte_start":241570,"byte_end":241583,"line_start":35,"line_end":35,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Count<St> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2323},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/count.rs","byte_start":241719,"byte_end":241723,"line_start":43,"line_end":43,"column_start":8,"column_end":12},"name":"poll","qualname":"<Count<St> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11759},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/cycle.rs","byte_start":242402,"byte_end":242407,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Cycle","qualname":"::stream::stream::cycle::Cycle","value":"Cycle {  }","parent":null,"children":[{"krate":0,"index":11761},{"krate":0,"index":11762}],"decl_id":null,"docs":" Stream for the [`cycle`](super::StreamExt::cycle) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2360},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/cycle.rs","byte_start":242722,"byte_end":242731,"line_start":34,"line_end":34,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Cycle<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2361},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/cycle.rs","byte_start":243098,"byte_end":243107,"line_start":46,"line_end":46,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Cycle<St> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2364},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/cycle.rs","byte_start":243449,"byte_end":243462,"line_start":60,"line_end":60,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Cycle<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11799},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/enumerate.rs","byte_start":244054,"byte_end":244063,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":11801},{"krate":0,"index":11802}],"decl_id":null,"docs":" Stream for the [`enumerate`](super::StreamExt::enumerate) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2397},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/enumerate.rs","byte_start":244371,"byte_end":244384,"line_start":29,"line_end":29,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Enumerate<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2401},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/enumerate.rs","byte_start":244534,"byte_end":244543,"line_start":37,"line_end":37,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Enumerate<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2402},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/enumerate.rs","byte_start":244943,"byte_end":244952,"line_start":50,"line_end":50,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Enumerate<St> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11843},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":245695,"byte_end":245701,"line_start":15,"line_end":15,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":11847},{"krate":0,"index":11848},{"krate":0,"index":11849},{"krate":0,"index":11850}],"decl_id":null,"docs":" Stream for the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2443},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":246035,"byte_end":246038,"line_start":33,"line_end":33,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Filter<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2454},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":246861,"byte_end":246874,"line_start":62,"line_end":62,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Filter<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2461},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":247236,"byte_end":247245,"line_start":76,"line_end":76,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Filter<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<St::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2462},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":247975,"byte_end":247984,"line_start":95,"line_end":95,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Filter<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11908},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":249088,"byte_end":249097,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":11912},{"krate":0,"index":11913},{"krate":0,"index":11914}],"decl_id":null,"docs":" Stream for the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2503},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":249325,"byte_end":249328,"line_start":29,"line_end":29,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FilterMap<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2514},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":249972,"byte_end":249985,"line_start":56,"line_end":56,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<FilterMap<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2521},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":250254,"byte_end":250263,"line_start":69,"line_end":69,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<FilterMap<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<T>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2522},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":251051,"byte_end":251060,"line_start":89,"line_end":89,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<FilterMap<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11969},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten.rs","byte_start":252096,"byte_end":252103,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Flatten","qualname":"::stream::stream::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":11972},{"krate":0,"index":11973}],"decl_id":null,"docs":" Stream for the [`flatten`](super::StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2556},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten.rs","byte_start":252465,"byte_end":252478,"line_start":34,"line_end":34,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Flatten<St, St::Item> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2560},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten.rs","byte_start":252704,"byte_end":252713,"line_start":46,"line_end":46,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Flatten<St, St::Item> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12024},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177905,"byte_end":177912,"line_start":67,"line_end":67,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::stream::stream::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":12026}],"decl_id":null,"docs":" Stream for the [`flatten`](StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12077},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fold.rs","byte_start":253920,"byte_end":253924,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Fold","qualname":"::stream::stream::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":12082},{"krate":0,"index":12083},{"krate":0,"index":12084},{"krate":0,"index":12085}],"decl_id":null,"docs":" Future for the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2596},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fold.rs","byte_start":254200,"byte_end":254203,"line_start":28,"line_end":28,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Fold<St, Fut, T, F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2608},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fold.rs","byte_start":254844,"byte_end":254857,"line_start":54,"line_end":54,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Fold<St, Fut, T, F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2615},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fold.rs","byte_start":255105,"byte_end":255109,"line_start":67,"line_end":67,"column_start":8,"column_end":12},"name":"poll","qualname":"<Fold<St, Fut, T, F> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<T>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12146},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/any.rs","byte_start":256381,"byte_end":256384,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"Any","qualname":"::stream::stream::any::Any","value":"Any {  }","parent":null,"children":[{"krate":0,"index":12150},{"krate":0,"index":12151},{"krate":0,"index":12152},{"krate":0,"index":12153}],"decl_id":null,"docs":" Future for the [`any`](super::StreamExt::any) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2653},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/any.rs","byte_start":256634,"byte_end":256637,"line_start":27,"line_end":27,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Any<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2663},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/any.rs","byte_start":257261,"byte_end":257274,"line_start":53,"line_end":53,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Any<St, Fut, F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2669},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/any.rs","byte_start":257518,"byte_end":257522,"line_start":66,"line_end":66,"column_start":8,"column_end":12},"name":"poll","qualname":"<Any<St, Fut, F> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<bool>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12207},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/all.rs","byte_start":258957,"byte_end":258960,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"All","qualname":"::stream::stream::all::All","value":"All {  }","parent":null,"children":[{"krate":0,"index":12211},{"krate":0,"index":12212},{"krate":0,"index":12213},{"krate":0,"index":12214}],"decl_id":null,"docs":" Future for the [`all`](super::StreamExt::all) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2707},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/all.rs","byte_start":259210,"byte_end":259213,"line_start":27,"line_end":27,"column_start":8,"column_end":11},"name":"fmt","qualname":"<All<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2717},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/all.rs","byte_start":259836,"byte_end":259849,"line_start":53,"line_end":53,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<All<St, Fut, F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2723},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/all.rs","byte_start":260093,"byte_end":260097,"line_start":66,"line_end":66,"column_start":8,"column_end":12},"name":"poll","qualname":"<All<St, Fut, F> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<bool>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12268},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each.rs","byte_start":261559,"byte_end":261566,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"ForEach","qualname":"::stream::stream::for_each::ForEach","value":"ForEach {  }","parent":null,"children":[{"krate":0,"index":12272},{"krate":0,"index":12273},{"krate":0,"index":12274}],"decl_id":null,"docs":" Future for the [`for_each`](super::StreamExt::for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2765},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each.rs","byte_start":261791,"byte_end":261794,"line_start":26,"line_end":26,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ForEach<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2775},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each.rs","byte_start":262370,"byte_end":262383,"line_start":51,"line_end":51,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<ForEach<St, Fut, F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2781},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each.rs","byte_start":262634,"byte_end":262638,"line_start":64,"line_end":64,"column_start":8,"column_end":12},"name":"poll","qualname":"<ForEach<St, Fut, F> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<()>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12325},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":263523,"byte_end":263527,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":12327},{"krate":0,"index":12328}],"decl_id":null,"docs":" Stream for the [`fuse`](super::StreamExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2812},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":263979,"byte_end":263986,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"is_done","qualname":"<Fuse<St>>::is_done","value":"fn is_done<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the underlying stream has finished or not.","sig":null,"attributes":[{"value":"/ Returns whether the underlying stream has finished or not.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":263710,"byte_end":263772,"line_start":25,"line_end":25,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":263777,"byte_end":263780,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then all future calls to poll are","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":263785,"byte_end":263853,"line_start":27,"line_end":27,"column_start":5,"column_end":73}},{"value":"/ guaranteed to return `None`. If this returns `false`, then the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":263858,"byte_end":263924,"line_start":28,"line_end":28,"column_start":5,"column_end":71}},{"value":"/ underlying stream is still in use.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":263929,"byte_end":263967,"line_start":29,"line_end":29,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2815},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":264125,"byte_end":264138,"line_start":38,"line_end":38,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Fuse<S> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2819},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":264253,"byte_end":264262,"line_start":46,"line_end":46,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Fuse<S> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<S::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2820},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":264606,"byte_end":264615,"line_start":60,"line_end":60,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Fuse<S> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12369},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":265345,"byte_end":265357,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"StreamFuture","qualname":"::stream::stream::into_future::StreamFuture","value":"StreamFuture {  }","parent":null,"children":[{"krate":0,"index":12371}],"decl_id":null,"docs":" Future for the [`into_future`](super::StreamExt::into_future) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`into_future`](super::StreamExt::into_future) method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":265175,"byte_end":265248,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":265266,"byte_end":265333,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2854},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":265920,"byte_end":265927,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamFuture<St>>::get_ref","value":"fn get_ref<'_>(&'_ Self) -> Option<&'_ St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":265528,"byte_end":265601,"line_start":20,"line_end":20,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":265606,"byte_end":265623,"line_start":21,"line_end":21,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":265628,"byte_end":265631,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":265636,"byte_end":265717,"line_start":23,"line_end":23,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":265722,"byte_end":265804,"line_start":24,"line_end":24,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":265809,"byte_end":265888,"line_start":25,"line_end":25,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":265893,"byte_end":265908,"line_start":26,"line_end":26,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2855},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":266538,"byte_end":266545,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamFuture<St>>::get_mut","value":"fn get_mut<'_>(&'_ mut Self) -> Option<&'_ mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":265992,"byte_end":266059,"line_start":31,"line_end":31,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":266064,"byte_end":266095,"line_start":32,"line_end":32,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":266100,"byte_end":266103,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":266108,"byte_end":266181,"line_start":34,"line_end":34,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":266186,"byte_end":266241,"line_start":35,"line_end":35,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":266246,"byte_end":266249,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":266254,"byte_end":266335,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":266340,"byte_end":266422,"line_start":38,"line_end":38,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":266427,"byte_end":266506,"line_start":39,"line_end":39,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":266511,"byte_end":266526,"line_start":40,"line_end":40,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2856},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":267171,"byte_end":267182,"line_start":55,"line_end":55,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamFuture<St>>::get_pin_mut","value":"fn get_pin_mut<'_>(Pin<&'_ mut Self>) -> Option<Pin<&'_ mut St>>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":266618,"byte_end":266692,"line_start":45,"line_end":45,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":266697,"byte_end":266728,"line_start":46,"line_end":46,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":266733,"byte_end":266736,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":266741,"byte_end":266814,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":266819,"byte_end":266874,"line_start":49,"line_end":49,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":266879,"byte_end":266882,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":266887,"byte_end":266968,"line_start":51,"line_end":51,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":266973,"byte_end":267055,"line_start":52,"line_end":52,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":267060,"byte_end":267139,"line_start":53,"line_end":53,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":267144,"byte_end":267159,"line_start":54,"line_end":54,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2857},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":267815,"byte_end":267825,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamFuture<St>>::into_inner","value":"fn into_inner(Self) -> Option<St>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":267295,"byte_end":267357,"line_start":59,"line_end":59,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":267362,"byte_end":267365,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":267370,"byte_end":267442,"line_start":61,"line_end":61,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":267447,"byte_end":267518,"line_start":62,"line_end":62,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":267523,"byte_end":267526,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":267531,"byte_end":267612,"line_start":64,"line_end":64,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":267617,"byte_end":267699,"line_start":65,"line_end":65,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":267704,"byte_end":267783,"line_start":66,"line_end":66,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":267788,"byte_end":267803,"line_start":67,"line_end":67,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2860},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":267944,"byte_end":267957,"line_start":74,"line_end":74,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<StreamFuture<St> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2864},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":268119,"byte_end":268123,"line_start":82,"line_end":82,"column_start":8,"column_end":12},"name":"poll","qualname":"<StreamFuture<St> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12378},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179252,"byte_end":179259,"line_start":112,"line_end":112,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::stream::stream::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":12381}],"decl_id":null,"docs":" Stream for the [`inspect`](StreamExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12444},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":268849,"byte_end":268852,"line_start":15,"line_end":15,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":12447},{"krate":0,"index":12448}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2901},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":268993,"byte_end":268996,"line_start":26,"line_end":26,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Map<St, F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2909},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":269383,"byte_end":269396,"line_start":44,"line_end":44,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Map<St, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2914},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":269577,"byte_end":269586,"line_start":56,"line_end":56,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Map<St, F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2916},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":269829,"byte_end":269838,"line_start":62,"line_end":62,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Map<St, F> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12497},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179620,"byte_end":179627,"line_start":123,"line_end":123,"column_start":5,"column_end":12},"name":"FlatMap","qualname":"::stream::stream::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":12501}],"decl_id":null,"docs":" Stream for the [`flat_map`](StreamExt::flat_map) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":12576},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":270512,"byte_end":270516,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":12579}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":270356,"byte_end":270415,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":270433,"byte_end":270500,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2956},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":270829,"byte_end":270842,"line_start":23,"line_end":23,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Next as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2960},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":271009,"byte_end":271013,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"poll","qualname":"<Next as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12584},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/select_next_some.rs","byte_start":271524,"byte_end":271538,"line_start":12,"line_end":12,"column_start":12,"column_end":26},"name":"SelectNextSome","qualname":"::stream::stream::select_next_some::SelectNextSome","value":"SelectNextSome {  }","parent":null,"children":[{"krate":0,"index":12587}],"decl_id":null,"docs":" Future for the [`select_next_some`](super::StreamExt::select_next_some)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_next_some`](super::StreamExt::select_next_some)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/select_next_some.rs","byte_start":271340,"byte_end":271415,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/select_next_some.rs","byte_start":271416,"byte_end":271427,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/select_next_some.rs","byte_start":271445,"byte_end":271512,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2997},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/select_next_some.rs","byte_start":271802,"byte_end":271815,"line_start":23,"line_end":23,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<SelectNextSome as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3001},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/select_next_some.rs","byte_start":271989,"byte_end":271993,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"poll","qualname":"<SelectNextSome as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12592},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":273129,"byte_end":273137,"line_start":22,"line_end":22,"column_start":16,"column_end":24},"name":"Peekable","qualname":"::stream::stream::peek::Peekable","value":"Peekable {  }","parent":null,"children":[{"krate":0,"index":12594},{"krate":0,"index":12595}],"decl_id":null,"docs":" A `Stream` that implements a `peek` method.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3055},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":273570,"byte_end":273574,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"peek","qualname":"<Peekable<St>>::peek","value":"fn peek<'_>(Pin<&'_ mut Self>) -> Peek","parent":null,"children":[],"decl_id":null,"docs":" Produces a future which retrieves a reference to the next item\n in the stream, or `None` if the underlying stream terminates.\n","sig":null,"attributes":[{"value":"/ Produces a future which retrieves a reference to the next item","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":273422,"byte_end":273488,"line_start":36,"line_end":36,"column_start":5,"column_end":71}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":273493,"byte_end":273558,"line_start":37,"line_end":37,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3056},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":273899,"byte_end":273908,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<Peekable<St>>::poll_peek","value":"fn poll_peek<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<&'_ St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a reference to the next item in the stream.","sig":null,"attributes":[{"value":"/ Peek retrieves a reference to the next item in the stream.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":273661,"byte_end":273723,"line_start":42,"line_end":42,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":273728,"byte_end":273731,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This method polls the underlying stream and return either a reference","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":273736,"byte_end":273809,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ to the next item if the stream is ready or passes through any errors.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":273814,"byte_end":273887,"line_start":45,"line_end":45,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":3057},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":275223,"byte_end":275231,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"peek_mut","qualname":"<Peekable<St>>::peek_mut","value":"fn peek_mut<'_>(Pin<&'_ mut Self>) -> PeekMut","parent":null,"children":[],"decl_id":null,"docs":" Produces a future which retrieves a mutable reference to the next item\n in the stream, or `None` if the underlying stream terminates.","sig":null,"attributes":[{"value":"/ Produces a future which retrieves a mutable reference to the next item","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":274344,"byte_end":274418,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":274423,"byte_end":274488,"line_start":61,"line_end":61,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":274493,"byte_end":274496,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":274501,"byte_end":274515,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":274520,"byte_end":274523,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":274528,"byte_end":274535,"line_start":65,"line_end":65,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":274540,"byte_end":274581,"line_start":66,"line_end":66,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":274586,"byte_end":274629,"line_start":67,"line_end":67,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":274634,"byte_end":274659,"line_start":68,"line_end":68,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":274664,"byte_end":274667,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![1, 2, 3]).peekable();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":274672,"byte_end":274728,"line_start":70,"line_end":70,"column_start":5,"column_end":61}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":274733,"byte_end":274754,"line_start":71,"line_end":71,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":274759,"byte_end":274762,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.as_mut().peek_mut().await, Some(&mut 1));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":274767,"byte_end":274830,"line_start":73,"line_end":73,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(stream.as_mut().next().await, Some(1));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":274835,"byte_end":274889,"line_start":74,"line_end":74,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":274894,"byte_end":274897,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ // Peek into the stream and modify the value which will be returned next","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":274902,"byte_end":274978,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ if let Some(p) = stream.as_mut().peek_mut().await {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":274983,"byte_end":275038,"line_start":77,"line_end":77,"column_start":5,"column_end":60}},{"value":"/     if *p == 2 {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":275043,"byte_end":275063,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"/         *p = 5;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":275068,"byte_end":275087,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/     }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":275092,"byte_end":275101,"line_start":80,"line_end":80,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":275106,"byte_end":275111,"line_start":81,"line_end":81,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":275116,"byte_end":275119,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.collect::<Vec<_>>().await, vec![5, 3]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":275124,"byte_end":275185,"line_start":83,"line_end":83,"column_start":5,"column_end":66}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":275190,"byte_end":275199,"line_start":84,"line_end":84,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":275204,"byte_end":275211,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3058},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":275406,"byte_end":275419,"line_start":91,"line_end":91,"column_start":12,"column_end":25},"name":"poll_peek_mut","qualname":"<Peekable<St>>::poll_peek_mut","value":"fn poll_peek_mut<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<&'_ mut St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a mutable reference to the next item in the stream.\n","sig":null,"attributes":[{"value":"/ Peek retrieves a mutable reference to the next item in the stream.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":275324,"byte_end":275394,"line_start":90,"line_end":90,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3059},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":277410,"byte_end":277417,"line_start":149,"line_end":149,"column_start":12,"column_end":19},"name":"next_if","qualname":"<Peekable<St>>::next_if","value":"fn next_if<F, '_>(Pin<&'_ mut Self>, F) -> NextIf where\nF: for<'_> FnOnce(&'_ St::Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will consume and return the next value of this\n stream if a condition is true.","sig":null,"attributes":[{"value":"/ Creates a future which will consume and return the next value of this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":275882,"byte_end":275955,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ stream if a condition is true.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":275960,"byte_end":275994,"line_start":109,"line_end":109,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":275999,"byte_end":276002,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If `func` returns `true` for the next value of this stream, consume and","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":276007,"byte_end":276082,"line_start":111,"line_end":111,"column_start":5,"column_end":80}},{"value":"/ return it. Otherwise, return `None`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":276087,"byte_end":276127,"line_start":112,"line_end":112,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":276132,"byte_end":276135,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":276140,"byte_end":276154,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":276159,"byte_end":276162,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Consume a number if it's equal to 0.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":276167,"byte_end":276207,"line_start":116,"line_end":116,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":276212,"byte_end":276215,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":276220,"byte_end":276227,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":276232,"byte_end":276273,"line_start":119,"line_end":119,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":276278,"byte_end":276321,"line_start":120,"line_end":120,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":276326,"byte_end":276351,"line_start":121,"line_end":121,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":276356,"byte_end":276359,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(0..5).peekable();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":276364,"byte_end":276411,"line_start":123,"line_end":123,"column_start":5,"column_end":52}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":276416,"byte_end":276437,"line_start":124,"line_end":124,"column_start":5,"column_end":26}},{"value":"/ // The first item of the stream is 0; consume it.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":276442,"byte_end":276495,"line_start":125,"line_end":125,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.as_mut().next_if(|&x| x == 0).await, Some(0));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":276500,"byte_end":276568,"line_start":126,"line_end":126,"column_start":5,"column_end":73}},{"value":"/ // The next item returned is now 1, so `consume` will return `false`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":276573,"byte_end":276646,"line_start":127,"line_end":127,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.as_mut().next_if(|&x| x == 0).await, None);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":276651,"byte_end":276716,"line_start":128,"line_end":128,"column_start":5,"column_end":70}},{"value":"/ // `next_if` saves the value of the next item if it was not equal to `expected`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":276721,"byte_end":276805,"line_start":129,"line_end":129,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":276810,"byte_end":276855,"line_start":130,"line_end":130,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":276860,"byte_end":276869,"line_start":131,"line_end":131,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":276874,"byte_end":276881,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":276886,"byte_end":276889,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Consume any number less than 10.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":276894,"byte_end":276930,"line_start":134,"line_end":134,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":276935,"byte_end":276938,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":276943,"byte_end":276950,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":276955,"byte_end":276996,"line_start":137,"line_end":137,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":277001,"byte_end":277044,"line_start":138,"line_end":138,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":277049,"byte_end":277074,"line_start":139,"line_end":139,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":277079,"byte_end":277082,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..20).peekable();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":277087,"byte_end":277135,"line_start":141,"line_end":141,"column_start":5,"column_end":53}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":277140,"byte_end":277161,"line_start":142,"line_end":142,"column_start":5,"column_end":26}},{"value":"/ // Consume all numbers less than 10","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":277166,"byte_end":277205,"line_start":143,"line_end":143,"column_start":5,"column_end":44}},{"value":"/ while stream.as_mut().next_if(|&x| x < 10).await.is_some() {}","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":277210,"byte_end":277275,"line_start":144,"line_end":144,"column_start":5,"column_end":70}},{"value":"/ // The next value returned will be 10","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":277280,"byte_end":277321,"line_start":145,"line_end":145,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(stream.next().await, Some(10));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":277326,"byte_end":277372,"line_start":146,"line_end":146,"column_start":5,"column_end":51}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":277377,"byte_end":277386,"line_start":147,"line_end":147,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":277391,"byte_end":277398,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3061},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":278441,"byte_end":278451,"line_start":178,"line_end":178,"column_start":12,"column_end":22},"name":"next_if_eq","qualname":"<Peekable<St>>::next_if_eq","value":"fn next_if_eq<'a, T>(Pin<&'a mut Self>, &'a T) -> NextIfEq where T: ?Sized,\nSt::Item: PartialEq<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will consume and return the next item if it is\n equal to `expected`.","sig":null,"attributes":[{"value":"/ Creates a future which will consume and return the next item if it is","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":277583,"byte_end":277656,"line_start":156,"line_end":156,"column_start":5,"column_end":78}},{"value":"/ equal to `expected`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":277661,"byte_end":277685,"line_start":157,"line_end":157,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":277690,"byte_end":277693,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":277698,"byte_end":277711,"line_start":159,"line_end":159,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":277716,"byte_end":277719,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Consume a number if it's equal to 0.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":277724,"byte_end":277764,"line_start":161,"line_end":161,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":277769,"byte_end":277772,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":277777,"byte_end":277784,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":277789,"byte_end":277830,"line_start":164,"line_end":164,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":277835,"byte_end":277878,"line_start":165,"line_end":165,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":277883,"byte_end":277908,"line_start":166,"line_end":166,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":277913,"byte_end":277916,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(0..5).peekable();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":277921,"byte_end":277968,"line_start":168,"line_end":168,"column_start":5,"column_end":52}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":277973,"byte_end":277994,"line_start":169,"line_end":169,"column_start":5,"column_end":26}},{"value":"/ // The first item of the stream is 0; consume it.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":277999,"byte_end":278052,"line_start":170,"line_end":170,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.as_mut().next_if_eq(&0).await, Some(0));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":278057,"byte_end":278119,"line_start":171,"line_end":171,"column_start":5,"column_end":67}},{"value":"/ // The next item returned is now 1, so `consume` will return `false`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":278124,"byte_end":278197,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.as_mut().next_if_eq(&0).await, None);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":278202,"byte_end":278261,"line_start":173,"line_end":173,"column_start":5,"column_end":64}},{"value":"/ // `next_if_eq` saves the value of the next item if it was not equal to `expected`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":278266,"byte_end":278353,"line_start":174,"line_end":174,"column_start":5,"column_end":92}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":278358,"byte_end":278403,"line_start":175,"line_end":175,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":278408,"byte_end":278417,"line_start":176,"line_end":176,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":278422,"byte_end":278429,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3066},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":278780,"byte_end":278793,"line_start":190,"line_end":190,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Peekable<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3070},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":278955,"byte_end":278964,"line_start":198,"line_end":198,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Peekable<S> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3071},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":279225,"byte_end":279234,"line_start":206,"line_end":206,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Peekable<S> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12636},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":279962,"byte_end":279966,"line_start":232,"line_end":232,"column_start":16,"column_end":20},"name":"Peek","qualname":"::stream::stream::peek::Peek","value":"Peek {  }","parent":null,"children":[{"krate":0,"index":12639}],"decl_id":null,"docs":" Future for the [`Peekable::peek`](self::Peekable::peek) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3074},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":280151,"byte_end":280154,"line_start":242,"line_end":242,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Peek as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3077},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":280339,"byte_end":280352,"line_start":248,"line_end":248,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Peek as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3082},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":280517,"byte_end":280521,"line_start":259,"line_end":259,"column_start":8,"column_end":12},"name":"poll","qualname":"<Peek as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12677},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":281024,"byte_end":281031,"line_start":274,"line_end":274,"column_start":16,"column_end":23},"name":"PeekMut","qualname":"::stream::stream::peek::PeekMut","value":"PeekMut {  }","parent":null,"children":[{"krate":0,"index":12680}],"decl_id":null,"docs":" Future for the [`Peekable::peek_mut`](self::Peekable::peek_mut) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3085},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":281219,"byte_end":281222,"line_start":284,"line_end":284,"column_start":8,"column_end":11},"name":"fmt","qualname":"<PeekMut as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3088},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":281413,"byte_end":281426,"line_start":290,"line_end":290,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<PeekMut as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3093},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":281598,"byte_end":281602,"line_start":301,"line_end":301,"column_start":8,"column_end":12},"name":"poll","qualname":"<PeekMut as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12718},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":282114,"byte_end":282120,"line_start":316,"line_end":316,"column_start":16,"column_end":22},"name":"NextIf","qualname":"::stream::stream::peek::NextIf","value":"NextIf {  }","parent":null,"children":[{"krate":0,"index":12722}],"decl_id":null,"docs":" Future for the [`Peekable::next_if`](self::Peekable::next_if) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3097},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":282321,"byte_end":282324,"line_start":326,"line_end":326,"column_start":8,"column_end":11},"name":"fmt","qualname":"<NextIf as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3103},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":282693,"byte_end":282706,"line_start":337,"line_end":337,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<NextIf as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3109},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":283005,"byte_end":283009,"line_start":350,"line_end":350,"column_start":8,"column_end":12},"name":"poll","qualname":"<NextIf as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12767},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":283984,"byte_end":283992,"line_start":375,"line_end":375,"column_start":16,"column_end":24},"name":"NextIfEq","qualname":"::stream::stream::peek::NextIfEq","value":"NextIfEq {  }","parent":null,"children":[{"krate":0,"index":12771}],"decl_id":null,"docs":" Future for the [`Peekable::next_if_eq`](self::Peekable::next_if_eq) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3113},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":284238,"byte_end":284241,"line_start":387,"line_end":387,"column_start":8,"column_end":11},"name":"fmt","qualname":"<NextIfEq as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3118},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":284555,"byte_end":284568,"line_start":400,"line_end":400,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<NextIfEq as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3123},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":284784,"byte_end":284788,"line_start":413,"line_end":413,"column_start":8,"column_end":12},"name":"poll","qualname":"<NextIfEq as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12816},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip.rs","byte_start":285609,"byte_end":285613,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":12818},{"krate":0,"index":12819}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3180},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip.rs","byte_start":285920,"byte_end":285933,"line_start":29,"line_end":29,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Skip<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3184},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip.rs","byte_start":286069,"byte_end":286078,"line_start":37,"line_end":37,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Skip<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<St::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3185},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip.rs","byte_start":286471,"byte_end":286480,"line_start":51,"line_end":51,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Skip<St> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12860},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":287376,"byte_end":287385,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":12864},{"krate":0,"index":12865},{"krate":0,"index":12866},{"krate":0,"index":12867},{"krate":0,"index":12868}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3224},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":287738,"byte_end":287741,"line_start":31,"line_end":31,"column_start":8,"column_end":11},"name":"fmt","qualname":"<SkipWhile<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3234},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":288543,"byte_end":288556,"line_start":60,"line_end":60,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<SkipWhile<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3240},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":288822,"byte_end":288831,"line_start":73,"line_end":73,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<SkipWhile<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<St::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3241},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":289692,"byte_end":289701,"line_start":98,"line_end":98,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<SkipWhile<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12929},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take.rs","byte_start":290882,"byte_end":290886,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":12931},{"krate":0,"index":12932}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3278},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take.rs","byte_start":291224,"byte_end":291233,"line_start":35,"line_end":35,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Take<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<St::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3279},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take.rs","byte_start":291679,"byte_end":291688,"line_start":50,"line_end":50,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Take<St> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3282},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take.rs","byte_start":292151,"byte_end":292164,"line_start":72,"line_end":72,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Take<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12973},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":292895,"byte_end":292904,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":12977},{"krate":0,"index":12978},{"krate":0,"index":12979},{"krate":0,"index":12980},{"krate":0,"index":12981}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3320},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":293246,"byte_end":293249,"line_start":31,"line_end":31,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TakeWhile<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3331},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":294062,"byte_end":294071,"line_start":62,"line_end":62,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TakeWhile<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<St::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3332},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":294969,"byte_end":294978,"line_start":89,"line_end":89,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<TakeWhile<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3337},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":295561,"byte_end":295574,"line_start":110,"line_end":110,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TakeWhile<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13042},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":296377,"byte_end":296386,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"name":"TakeUntil","qualname":"::stream::stream::take_until::TakeUntil","value":"TakeUntil {  }","parent":null,"children":[{"krate":0,"index":13045},{"krate":0,"index":13046},{"krate":0,"index":13047},{"krate":0,"index":13048}],"decl_id":null,"docs":" Stream for the [`take_until`](super::StreamExt::take_until) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3374},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":296951,"byte_end":296954,"line_start":36,"line_end":36,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TakeUntil<St, Fut> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3379},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":297670,"byte_end":297681,"line_start":56,"line_end":56,"column_start":12,"column_end":23},"name":"take_future","qualname":"<TakeUntil<St, Fut>>::take_future","value":"fn take_future<'_>(&'_ mut Self) -> Option<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Extract the stopping future out of the combinator.\n The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.\n Taking out the future means the combinator will be yielding\n elements from the wrapped stream without ever stopping it.\n","sig":null,"attributes":[{"value":"/ Extract the stopping future out of the combinator.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":297370,"byte_end":297424,"line_start":52,"line_end":52,"column_start":5,"column_end":59}},{"value":"/ The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":297429,"byte_end":297523,"line_start":53,"line_end":53,"column_start":5,"column_end":99}},{"value":"/ Taking out the future means the combinator will be yielding","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":297528,"byte_end":297591,"line_start":54,"line_end":54,"column_start":5,"column_end":68}},{"value":"/ elements from the wrapped stream without ever stopping it.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":297596,"byte_end":297658,"line_start":55,"line_end":55,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3380},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":298965,"byte_end":298976,"line_start":100,"line_end":100,"column_start":12,"column_end":23},"name":"take_result","qualname":"<TakeUntil<St, Fut>>::take_result","value":"fn take_result<'_>(&'_ mut Self) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Once the stopping future is resolved, this method can be used\n to extract the value returned by the stopping future.","sig":null,"attributes":[{"value":"/ Once the stopping future is resolved, this method can be used","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":297818,"byte_end":297883,"line_start":64,"line_end":64,"column_start":5,"column_end":70}},{"value":"/ to extract the value returned by the stopping future.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":297888,"byte_end":297945,"line_start":65,"line_end":65,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":297950,"byte_end":297953,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This may be used to retrieve arbitrary data from the stopping","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":297958,"byte_end":298023,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/ future, for example a reason why the stream was stopped.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":298028,"byte_end":298088,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":298093,"byte_end":298096,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` if the future isn't resolved yet,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":298101,"byte_end":298169,"line_start":70,"line_end":70,"column_start":5,"column_end":73}},{"value":"/ or if the result was already taken out.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":298174,"byte_end":298217,"line_start":71,"line_end":71,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":298222,"byte_end":298225,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":298230,"byte_end":298244,"line_start":73,"line_end":73,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":298249,"byte_end":298252,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":298257,"byte_end":298264,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":298269,"byte_end":298310,"line_start":76,"line_end":76,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":298315,"byte_end":298339,"line_start":77,"line_end":77,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":298344,"byte_end":298387,"line_start":78,"line_end":78,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":298392,"byte_end":298420,"line_start":79,"line_end":79,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":298425,"byte_end":298428,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":298433,"byte_end":298471,"line_start":81,"line_end":81,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":298476,"byte_end":298479,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":298484,"byte_end":298502,"line_start":83,"line_end":83,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":298507,"byte_end":298549,"line_start":84,"line_end":84,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":298554,"byte_end":298569,"line_start":85,"line_end":85,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":298574,"byte_end":298593,"line_start":86,"line_end":86,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":298598,"byte_end":298623,"line_start":87,"line_end":87,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":298628,"byte_end":298644,"line_start":88,"line_end":88,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(\"reason\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":298649,"byte_end":298682,"line_start":89,"line_end":89,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":298687,"byte_end":298696,"line_start":90,"line_end":90,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":298701,"byte_end":298708,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":298713,"byte_end":298716,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.take_until(stop_fut);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":298721,"byte_end":298770,"line_start":93,"line_end":93,"column_start":5,"column_end":54}},{"value":"/ let _ = stream.by_ref().collect::<Vec<_>>().await;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":298775,"byte_end":298829,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":298834,"byte_end":298837,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ let result = stream.take_result().unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":298842,"byte_end":298889,"line_start":96,"line_end":96,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(result, \"reason\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":298894,"byte_end":298927,"line_start":97,"line_end":97,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":298932,"byte_end":298941,"line_start":98,"line_end":98,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":298946,"byte_end":298953,"line_start":99,"line_end":99,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3381},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":299152,"byte_end":299162,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"name":"is_stopped","qualname":"<TakeUntil<St, Fut>>::is_stopped","value":"fn is_stopped<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the stream was stopped yet by the stopping future\n being resolved.\n","sig":null,"attributes":[{"value":"/ Whether the stream was stopped yet by the stopping future","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":299055,"byte_end":299116,"line_start":104,"line_end":104,"column_start":5,"column_end":66}},{"value":"/ being resolved.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":299121,"byte_end":299140,"line_start":105,"line_end":105,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":3386},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":299349,"byte_end":299358,"line_start":118,"line_end":118,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TakeUntil<St, Fut> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<St::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3387},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":300105,"byte_end":300114,"line_start":141,"line_end":141,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<TakeUntil<St, Fut> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3391},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":300363,"byte_end":300376,"line_start":155,"line_end":155,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TakeUntil<St, Fut> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13099},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":301094,"byte_end":301098,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Then","qualname":"::stream::stream::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":13103},{"krate":0,"index":13104},{"krate":0,"index":13105}],"decl_id":null,"docs":" Stream for the [`then`](super::StreamExt::then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3429},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":301320,"byte_end":301323,"line_start":28,"line_end":28,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Then<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3439},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":301853,"byte_end":301866,"line_start":51,"line_end":51,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Then<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3445},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":302108,"byte_end":302117,"line_start":64,"line_end":64,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Then<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3446},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":302675,"byte_end":302684,"line_start":80,"line_end":80,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Then<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13160},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":303631,"byte_end":303634,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":13163},{"krate":0,"index":13164},{"krate":0,"index":13165},{"krate":0,"index":13166}],"decl_id":null,"docs":" Stream for the [`zip`](super::StreamExt::zip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3485},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":304152,"byte_end":304159,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Zip<St1, St2>>::get_ref","value":"fn get_ref<'_>(&'_ Self) -> (&'_ St1, &'_ St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":304044,"byte_end":304118,"line_start":27,"line_end":27,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":304123,"byte_end":304140,"line_start":28,"line_end":28,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3486},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":304515,"byte_end":304522,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Zip<St1, St2>>::get_mut","value":"fn get_mut<'_>(&'_ mut Self) -> (&'_ mut St1, &'_ mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":304253,"byte_end":304321,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":304326,"byte_end":304357,"line_start":34,"line_end":34,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":304362,"byte_end":304365,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":304370,"byte_end":304443,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":304448,"byte_end":304503,"line_start":37,"line_end":37,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3487},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":304897,"byte_end":304908,"line_start":47,"line_end":47,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Zip<St1, St2>>::get_pin_mut","value":"fn get_pin_mut<'_>(Pin<&'_ mut Self>) -> (Pin<&'_ mut St1>, Pin<&'_ mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":304628,"byte_end":304703,"line_start":42,"line_end":42,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":304708,"byte_end":304739,"line_start":43,"line_end":43,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":304744,"byte_end":304747,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":304752,"byte_end":304825,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":304830,"byte_end":304885,"line_start":46,"line_end":46,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3488},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":305314,"byte_end":305324,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Zip<St1, St2>>::into_inner","value":"fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":305078,"byte_end":305141,"line_start":52,"line_end":52,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":305146,"byte_end":305149,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":305154,"byte_end":305226,"line_start":54,"line_end":54,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":305231,"byte_end":305302,"line_start":55,"line_end":55,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3492},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":305513,"byte_end":305526,"line_start":66,"line_end":66,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Zip<St1, St2> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3497},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":305752,"byte_end":305761,"line_start":78,"line_end":78,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Zip<St1, St2> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3498},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":306716,"byte_end":306725,"line_start":104,"line_end":104,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Zip<St1, St2> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13217},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chunks.rs","byte_start":308139,"byte_end":308145,"line_start":16,"line_end":16,"column_start":16,"column_end":22},"name":"Chunks","qualname":"::stream::stream::chunks::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":13219},{"krate":0,"index":13220},{"krate":0,"index":13221}],"decl_id":null,"docs":" Stream for the [`chunks`](super::StreamExt::chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3542},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chunks.rs","byte_start":308876,"byte_end":308885,"line_start":46,"line_end":46,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Chunks<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3543},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chunks.rs","byte_start":310022,"byte_end":310031,"line_start":76,"line_end":76,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Chunks<St> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3546},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chunks.rs","byte_start":310458,"byte_end":310471,"line_start":89,"line_end":89,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Chunks<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13265},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/ready_chunks.rs","byte_start":311218,"byte_end":311229,"line_start":15,"line_end":15,"column_start":16,"column_end":27},"name":"ReadyChunks","qualname":"::stream::stream::ready_chunks::ReadyChunks","value":"ReadyChunks {  }","parent":null,"children":[{"krate":0,"index":13267},{"krate":0,"index":13268},{"krate":0,"index":13269}],"decl_id":null,"docs":" Stream for the [`ready_chunks`](super::StreamExt::ready_chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3586},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/ready_chunks.rs","byte_start":311814,"byte_end":311823,"line_start":40,"line_end":40,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<ReadyChunks<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3587},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/ready_chunks.rs","byte_start":313513,"byte_end":313522,"line_start":84,"line_end":84,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<ReadyChunks<St> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3590},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/ready_chunks.rs","byte_start":313954,"byte_end":313967,"line_start":97,"line_end":97,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<ReadyChunks<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13313},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":314745,"byte_end":314749,"line_start":19,"line_end":19,"column_start":16,"column_end":20},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":13318},{"krate":0,"index":13319},{"krate":0,"index":13320}],"decl_id":null,"docs":" Stream for the [`scan`](super::StreamExt::scan) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3634},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":315068,"byte_end":315071,"line_start":35,"line_end":35,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Scan<St, S, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3656},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":316109,"byte_end":316118,"line_start":73,"line_end":73,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Scan<St, S, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<B>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3657},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":316927,"byte_end":316936,"line_start":99,"line_end":99,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Scan<St, S, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3664},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":317325,"byte_end":317338,"line_start":114,"line_end":114,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Scan<St, S, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13382},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffer_unordered.rs","byte_start":318173,"byte_end":318188,"line_start":15,"line_end":15,"column_start":16,"column_end":31},"name":"BufferUnordered","qualname":"::stream::stream::buffer_unordered::BufferUnordered","value":"BufferUnordered {  }","parent":null,"children":[{"krate":0,"index":13384},{"krate":0,"index":13385},{"krate":0,"index":13386}],"decl_id":null,"docs":" Stream for the [`buffer_unordered`](super::StreamExt::buffer_unordered)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3707},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffer_unordered.rs","byte_start":318442,"byte_end":318445,"line_start":30,"line_end":30,"column_start":8,"column_end":11},"name":"fmt","qualname":"<BufferUnordered<St> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3714},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffer_unordered.rs","byte_start":319187,"byte_end":319196,"line_start":62,"line_end":62,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<BufferUnordered<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3715},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffer_unordered.rs","byte_start":320153,"byte_end":320162,"line_start":88,"line_end":88,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<BufferUnordered<St> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3718},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffer_unordered.rs","byte_start":320609,"byte_end":320622,"line_start":105,"line_end":105,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<BufferUnordered<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13427},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffered.rs","byte_start":321439,"byte_end":321447,"line_start":15,"line_end":15,"column_start":16,"column_end":24},"name":"Buffered","qualname":"::stream::stream::buffered::Buffered","value":"Buffered {  }","parent":null,"children":[{"krate":0,"index":13429},{"krate":0,"index":13430},{"krate":0,"index":13431}],"decl_id":null,"docs":" Stream for the [`buffered`](super::StreamExt::buffered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3760},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffered.rs","byte_start":321740,"byte_end":321743,"line_start":32,"line_end":32,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Buffered<St> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3767},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffered.rs","byte_start":322417,"byte_end":322426,"line_start":60,"line_end":60,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Buffered<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3768},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffered.rs","byte_start":323369,"byte_end":323378,"line_start":86,"line_end":86,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Buffered<St> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13511},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":334233,"byte_end":334249,"line_start":309,"line_end":309,"column_start":16,"column_end":32},"name":"FlattenUnordered","qualname":"::stream::stream::flatten_unordered::FlattenUnordered","value":"FlattenUnordered {  }","parent":null,"children":[{"krate":0,"index":13513},{"krate":0,"index":13514},{"krate":0,"index":13515},{"krate":0,"index":13516},{"krate":0,"index":13517},{"krate":0,"index":13518},{"krate":0,"index":13519}],"decl_id":null,"docs":" Stream for the [`flatten_unordered`](super::StreamExt::flatten_unordered)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3898},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":334711,"byte_end":334714,"line_start":327,"line_end":327,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FlattenUnordered<St> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3908},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":336435,"byte_end":336448,"line_start":383,"line_end":383,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<FlattenUnordered<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3912},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":336691,"byte_end":336700,"line_start":395,"line_end":395,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<FlattenUnordered<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13576},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":182439,"byte_end":182455,"line_start":213,"line_end":213,"column_start":5,"column_end":21},"name":"FlatMapUnordered","qualname":"::stream::stream::FlatMapUnordered","value":"FlatMapUnordered {  }","parent":null,"children":[{"krate":0,"index":13580}],"decl_id":null,"docs":" Stream for the [`flat_map_unordered`](StreamExt::flat_map_unordered) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13655},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each_concurrent.rs","byte_start":341802,"byte_end":341819,"line_start":14,"line_end":14,"column_start":16,"column_end":33},"name":"ForEachConcurrent","qualname":"::stream::stream::for_each_concurrent::ForEachConcurrent","value":"ForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":13659},{"krate":0,"index":13660},{"krate":0,"index":13661},{"krate":0,"index":13662}],"decl_id":null,"docs":" Future for the [`for_each_concurrent`](super::StreamExt::for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3957},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each_concurrent.rs","byte_start":342095,"byte_end":342098,"line_start":28,"line_end":28,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ForEachConcurrent<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3967},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each_concurrent.rs","byte_start":342944,"byte_end":342957,"line_start":60,"line_end":60,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<ForEachConcurrent<St, Fut, F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3973},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each_concurrent.rs","byte_start":343214,"byte_end":343218,"line_start":73,"line_end":73,"column_start":8,"column_end":12},"name":"poll","qualname":"<ForEachConcurrent<St, Fut, F> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<()>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13716},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/catch_unwind.rs","byte_start":345325,"byte_end":345336,"line_start":12,"line_end":12,"column_start":16,"column_end":27},"name":"CatchUnwind","qualname":"::stream::stream::catch_unwind::CatchUnwind","value":"CatchUnwind {  }","parent":null,"children":[{"krate":0,"index":13718},{"krate":0,"index":13719}],"decl_id":null,"docs":" Stream for the [`catch_unwind`](super::StreamExt::catch_unwind) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4018},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/catch_unwind.rs","byte_start":345730,"byte_end":345739,"line_start":30,"line_end":30,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<CatchUnwind<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4021},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/catch_unwind.rs","byte_start":346287,"byte_end":346296,"line_start":48,"line_end":48,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<CatchUnwind<St> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4024},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/catch_unwind.rs","byte_start":346537,"byte_end":346550,"line_start":58,"line_end":58,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<CatchUnwind<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4030},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":183773,"byte_end":183782,"line_start":249,"line_end":249,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":4031},{"krate":0,"index":4032},{"krate":0,"index":4033},{"krate":0,"index":4036},{"krate":0,"index":4037},{"krate":0,"index":4040},{"krate":0,"index":4044},{"krate":0,"index":4047},{"krate":0,"index":4049},{"krate":0,"index":4054},{"krate":0,"index":4055},{"krate":0,"index":4056},{"krate":0,"index":4057},{"krate":0,"index":4061},{"krate":0,"index":4064},{"krate":0,"index":4067},{"krate":0,"index":4068},{"krate":0,"index":4070},{"krate":0,"index":4073},{"krate":0,"index":4077},{"krate":0,"index":4082},{"krate":0,"index":4085},{"krate":0,"index":4088},{"krate":0,"index":4090},{"krate":0,"index":4093},{"krate":0,"index":4097},{"krate":0,"index":4098},{"krate":0,"index":4099},{"krate":0,"index":4100},{"krate":0,"index":4101},{"krate":0,"index":4102},{"krate":0,"index":4104},{"krate":0,"index":4106},{"krate":0,"index":4107},{"krate":0,"index":4108},{"krate":0,"index":4110},{"krate":0,"index":4112},{"krate":0,"index":4113},{"krate":0,"index":4114},{"krate":0,"index":4115},{"krate":0,"index":4117},{"krate":0,"index":4119},{"krate":0,"index":4121},{"krate":0,"index":4122}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":183662,"byte_end":183736,"line_start":247,"line_end":247,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":183737,"byte_end":183762,"line_start":248,"line_end":248,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":4031},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184692,"byte_end":184696,"line_start":273,"line_end":273,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"fn next<'_>(&'_ mut Self) -> Next where Self: Unpin","parent":{"krate":0,"index":4030},"children":[],"decl_id":null,"docs":" Creates a future that resolves to the next item in the stream.","sig":null,"attributes":[{"value":"/ Creates a future that resolves to the next item in the stream.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":183797,"byte_end":183863,"line_start":250,"line_end":250,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":183868,"byte_end":183871,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":183876,"byte_end":183944,"line_start":252,"line_end":252,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":183949,"byte_end":184024,"line_start":253,"line_end":253,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184029,"byte_end":184104,"line_start":254,"line_end":254,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184109,"byte_end":184163,"line_start":255,"line_end":255,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184168,"byte_end":184243,"line_start":256,"line_end":256,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184248,"byte_end":184258,"line_start":257,"line_end":257,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184263,"byte_end":184266,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184271,"byte_end":184285,"line_start":259,"line_end":259,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184290,"byte_end":184293,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184298,"byte_end":184305,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184310,"byte_end":184351,"line_start":262,"line_end":262,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184356,"byte_end":184399,"line_start":263,"line_end":263,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184404,"byte_end":184407,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184412,"byte_end":184453,"line_start":265,"line_end":265,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184458,"byte_end":184461,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184466,"byte_end":184511,"line_start":267,"line_end":267,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184516,"byte_end":184561,"line_start":268,"line_end":268,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184566,"byte_end":184611,"line_start":269,"line_end":269,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184616,"byte_end":184658,"line_start":270,"line_end":270,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184663,"byte_end":184672,"line_start":271,"line_end":271,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184677,"byte_end":184684,"line_start":272,"line_end":272,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4032},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185935,"byte_end":185946,"line_start":308,"line_end":308,"column_start":8,"column_end":19},"name":"into_future","qualname":"::stream::stream::StreamExt::into_future","value":"fn into_future(Self) -> StreamFuture<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":4030},"children":[],"decl_id":null,"docs":" Converts this stream into a future of `(next_item, tail_of_stream)`.\n If the stream terminates, then the next item is [`None`].","sig":null,"attributes":[{"value":"/ Converts this stream into a future of `(next_item, tail_of_stream)`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184838,"byte_end":184910,"line_start":280,"line_end":280,"column_start":5,"column_end":77}},{"value":"/ If the stream terminates, then the next item is [`None`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184915,"byte_end":184976,"line_start":281,"line_end":281,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184981,"byte_end":184984,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ The returned future can be used to compose streams and futures together","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184989,"byte_end":185064,"line_start":283,"line_end":283,"column_start":5,"column_end":80}},{"value":"/ by placing everything into the \"world of futures\".","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185069,"byte_end":185123,"line_start":284,"line_end":284,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185128,"byte_end":185131,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_future` moves the stream, the [`Stream`] type","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185136,"byte_end":185209,"line_start":286,"line_end":286,"column_start":5,"column_end":78}},{"value":"/ must be [`Unpin`]. If you want to use `into_future` with a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185214,"byte_end":185276,"line_start":287,"line_end":287,"column_start":5,"column_end":67}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185281,"byte_end":185356,"line_start":288,"line_end":288,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185361,"byte_end":185415,"line_start":289,"line_end":289,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185420,"byte_end":185495,"line_start":290,"line_end":290,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185500,"byte_end":185510,"line_start":291,"line_end":291,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185515,"byte_end":185518,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185523,"byte_end":185537,"line_start":293,"line_end":293,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185542,"byte_end":185545,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185550,"byte_end":185557,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185562,"byte_end":185603,"line_start":296,"line_end":296,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185608,"byte_end":185651,"line_start":297,"line_end":297,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185656,"byte_end":185659,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185664,"byte_end":185701,"line_start":299,"line_end":299,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185706,"byte_end":185709,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185714,"byte_end":185766,"line_start":301,"line_end":301,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(1), item);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185771,"byte_end":185801,"line_start":302,"line_end":302,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185806,"byte_end":185809,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185814,"byte_end":185866,"line_start":304,"line_end":304,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(2), item);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185871,"byte_end":185901,"line_start":305,"line_end":305,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185906,"byte_end":185915,"line_start":306,"line_end":306,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185920,"byte_end":185927,"line_start":307,"line_end":307,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4033},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186947,"byte_end":186950,"line_start":338,"line_end":338,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"fn map<T, F>(Self, F) -> Map<Self, F> where F: FnMut(Self::Item) -> T,\nSelf: Sized","parent":{"krate":0,"index":4030},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186111,"byte_end":186186,"line_start":315,"line_end":315,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186191,"byte_end":186214,"line_start":316,"line_end":316,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186219,"byte_end":186222,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186227,"byte_end":186299,"line_start":318,"line_end":318,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186304,"byte_end":186368,"line_start":319,"line_end":319,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186373,"byte_end":186410,"line_start":320,"line_end":320,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186415,"byte_end":186418,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186423,"byte_end":186499,"line_start":322,"line_end":322,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186504,"byte_end":186575,"line_start":323,"line_end":323,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186580,"byte_end":186601,"line_start":324,"line_end":324,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186606,"byte_end":186609,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186614,"byte_end":186628,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186633,"byte_end":186636,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186641,"byte_end":186648,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186653,"byte_end":186694,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186699,"byte_end":186742,"line_start":330,"line_end":330,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186747,"byte_end":186750,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186755,"byte_end":186792,"line_start":332,"line_end":332,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.map(|x| x + 3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186797,"byte_end":186836,"line_start":333,"line_end":333,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186841,"byte_end":186844,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186849,"byte_end":186913,"line_start":335,"line_end":335,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186918,"byte_end":186927,"line_start":336,"line_end":336,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186932,"byte_end":186939,"line_start":337,"line_end":337,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4036},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188510,"byte_end":188519,"line_start":384,"line_end":384,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"fn enumerate(Self) -> Enumerate<Self> where Self: Sized","parent":{"krate":0,"index":4030},"children":[],"decl_id":null,"docs":" Creates a stream which gives the current iteration count as well as\n the next value.","sig":null,"attributes":[{"value":"/ Creates a stream which gives the current iteration count as well as","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187117,"byte_end":187188,"line_start":346,"line_end":346,"column_start":5,"column_end":76}},{"value":"/ the next value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187193,"byte_end":187212,"line_start":347,"line_end":347,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187217,"byte_end":187220,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ The stream returned yields pairs `(i, val)`, where `i` is the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187225,"byte_end":187290,"line_start":349,"line_end":349,"column_start":5,"column_end":70}},{"value":"/ current index of iteration and `val` is the value returned by the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187295,"byte_end":187364,"line_start":350,"line_end":350,"column_start":5,"column_end":74}},{"value":"/ stream.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187369,"byte_end":187380,"line_start":351,"line_end":351,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187385,"byte_end":187388,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ `enumerate()` keeps its count as a [`usize`]. If you want to count by a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187393,"byte_end":187468,"line_start":353,"line_end":353,"column_start":5,"column_end":80}},{"value":"/ different sized integer, the [`zip`](StreamExt::zip) function provides similar","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187473,"byte_end":187555,"line_start":354,"line_end":354,"column_start":5,"column_end":87}},{"value":"/ functionality.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187560,"byte_end":187578,"line_start":355,"line_end":355,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187583,"byte_end":187586,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187591,"byte_end":187614,"line_start":357,"line_end":357,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187619,"byte_end":187622,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so enumerating more than","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187627,"byte_end":187702,"line_start":359,"line_end":359,"column_start":5,"column_end":80}},{"value":"/ [`prim@usize::max_value()`] elements either produces the wrong result or panics. If","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187707,"byte_end":187794,"line_start":360,"line_end":360,"column_start":5,"column_end":92}},{"value":"/ debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187799,"byte_end":187855,"line_start":361,"line_end":361,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187860,"byte_end":187863,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187868,"byte_end":187880,"line_start":363,"line_end":363,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187885,"byte_end":187888,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ The returned stream might panic if the to-be-returned index would","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187893,"byte_end":187962,"line_start":365,"line_end":365,"column_start":5,"column_end":74}},{"value":"/ overflow a [`usize`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187967,"byte_end":187992,"line_start":366,"line_end":366,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187997,"byte_end":188000,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188005,"byte_end":188019,"line_start":368,"line_end":368,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188024,"byte_end":188027,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188032,"byte_end":188039,"line_start":370,"line_end":370,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188044,"byte_end":188085,"line_start":371,"line_end":371,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188090,"byte_end":188133,"line_start":372,"line_end":372,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188138,"byte_end":188141,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec!['a', 'b', 'c']);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188146,"byte_end":188197,"line_start":374,"line_end":374,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188202,"byte_end":188205,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.enumerate();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188210,"byte_end":188250,"line_start":376,"line_end":376,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188255,"byte_end":188258,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some((0, 'a')));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188263,"byte_end":188315,"line_start":378,"line_end":378,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((1, 'b')));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188320,"byte_end":188372,"line_start":379,"line_end":379,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((2, 'c')));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188377,"byte_end":188429,"line_start":380,"line_end":380,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188434,"byte_end":188476,"line_start":381,"line_end":381,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188481,"byte_end":188490,"line_start":382,"line_end":382,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188495,"byte_end":188502,"line_start":383,"line_end":383,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4037},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189750,"byte_end":189756,"line_start":417,"line_end":417,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"fn filter<Fut, F>(Self, F) -> Filter<Self, Fut, F> where\nF: for<'_> FnMut(&'_ Self::Item) -> Fut, Fut: Future<Output = bool>,\nSelf: Sized","parent":{"krate":0,"index":4030},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n asynchronous predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188663,"byte_end":188735,"line_start":391,"line_end":391,"column_start":5,"column_end":77}},{"value":"/ asynchronous predicate.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188740,"byte_end":188767,"line_start":392,"line_end":392,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188772,"byte_end":188775,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188780,"byte_end":188855,"line_start":394,"line_end":394,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate returns a `Future` which","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188860,"byte_end":188931,"line_start":395,"line_end":395,"column_start":5,"column_end":76}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188936,"byte_end":189008,"line_start":396,"line_end":396,"column_start":5,"column_end":77}},{"value":"/ predicate returns a `Future` which resolves to `false`, then the value","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189013,"byte_end":189087,"line_start":397,"line_end":397,"column_start":5,"column_end":79}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189092,"byte_end":189150,"line_start":398,"line_end":398,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189155,"byte_end":189158,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189163,"byte_end":189239,"line_start":400,"line_end":400,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189244,"byte_end":189318,"line_start":401,"line_end":401,"column_start":5,"column_end":79}},{"value":"/ standard library.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189323,"byte_end":189344,"line_start":402,"line_end":402,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189349,"byte_end":189352,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189357,"byte_end":189371,"line_start":404,"line_end":404,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189376,"byte_end":189379,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189384,"byte_end":189391,"line_start":406,"line_end":406,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189396,"byte_end":189437,"line_start":407,"line_end":407,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189442,"byte_end":189466,"line_start":408,"line_end":408,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189471,"byte_end":189514,"line_start":409,"line_end":409,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189519,"byte_end":189522,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189527,"byte_end":189565,"line_start":411,"line_end":411,"column_start":5,"column_end":43}},{"value":"/ let events = stream.filter(|x| future::ready(x % 2 == 0));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189570,"byte_end":189632,"line_start":412,"line_end":412,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189637,"byte_end":189640,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![2, 4, 6, 8, 10], events.collect::<Vec<_>>().await);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189645,"byte_end":189716,"line_start":414,"line_end":414,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189721,"byte_end":189730,"line_start":415,"line_end":415,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189735,"byte_end":189742,"line_start":416,"line_end":416,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4040},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191083,"byte_end":191093,"line_start":451,"line_end":451,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"fn filter_map<Fut, T, F>(Self, F) -> FilterMap<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = Option<T>>, Self: Sized","parent":{"krate":0,"index":4030},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189984,"byte_end":190059,"line_start":426,"line_end":426,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided asynchronous closure.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190064,"byte_end":190140,"line_start":427,"line_end":427,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190145,"byte_end":190148,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190153,"byte_end":190228,"line_start":429,"line_end":429,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190233,"byte_end":190308,"line_start":430,"line_end":430,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190313,"byte_end":190389,"line_start":431,"line_end":431,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190394,"byte_end":190459,"line_start":432,"line_end":432,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190464,"byte_end":190467,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190472,"byte_end":190548,"line_start":434,"line_end":434,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190553,"byte_end":190627,"line_start":435,"line_end":435,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190632,"byte_end":190657,"line_start":436,"line_end":436,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190662,"byte_end":190665,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190670,"byte_end":190684,"line_start":438,"line_end":438,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190689,"byte_end":190696,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190701,"byte_end":190742,"line_start":440,"line_end":440,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190747,"byte_end":190790,"line_start":441,"line_end":441,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190795,"byte_end":190798,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190803,"byte_end":190841,"line_start":443,"line_end":443,"column_start":5,"column_end":43}},{"value":"/ let events = stream.filter_map(|x| async move {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190846,"byte_end":190897,"line_start":444,"line_end":444,"column_start":5,"column_end":56}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190902,"byte_end":190953,"line_start":445,"line_end":445,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190958,"byte_end":190965,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190970,"byte_end":190973,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![3, 5, 7, 9, 11], events.collect::<Vec<_>>().await);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190978,"byte_end":191049,"line_start":448,"line_end":448,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191054,"byte_end":191063,"line_start":449,"line_end":449,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191068,"byte_end":191075,"line_start":450,"line_end":450,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4044},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192122,"byte_end":192126,"line_start":482,"line_end":482,"column_start":8,"column_end":12},"name":"then","qualname":"::stream::stream::StreamExt::then","value":"fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where F: FnMut(Self::Item) ->\nFut, Fut: Future, Self: Sized","parent":{"krate":0,"index":4030},"children":[],"decl_id":null,"docs":" Computes from this stream's items new items of a different type using\n an asynchronous closure.","sig":null,"attributes":[{"value":"/ Computes from this stream's items new items of a different type using","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191325,"byte_end":191398,"line_start":460,"line_end":460,"column_start":5,"column_end":78}},{"value":"/ an asynchronous closure.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191403,"byte_end":191431,"line_start":461,"line_end":461,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191436,"byte_end":191439,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will be called with an `Item` once a value is","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191444,"byte_end":191518,"line_start":463,"line_end":463,"column_start":5,"column_end":79}},{"value":"/ ready, it returns a future which will then be run to completion","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191523,"byte_end":191590,"line_start":464,"line_end":464,"column_start":5,"column_end":72}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191595,"byte_end":191640,"line_start":465,"line_end":465,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191645,"byte_end":191648,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191653,"byte_end":191729,"line_start":467,"line_end":467,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191734,"byte_end":191760,"line_start":468,"line_end":468,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191765,"byte_end":191768,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191773,"byte_end":191787,"line_start":470,"line_end":470,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191792,"byte_end":191795,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191800,"byte_end":191807,"line_start":472,"line_end":472,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191812,"byte_end":191853,"line_start":473,"line_end":473,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191858,"byte_end":191901,"line_start":474,"line_end":474,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191906,"byte_end":191909,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191914,"byte_end":191951,"line_start":476,"line_end":476,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.then(|x| async move { x + 3 });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191956,"byte_end":192011,"line_start":477,"line_end":477,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192016,"byte_end":192019,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192024,"byte_end":192088,"line_start":479,"line_end":479,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192093,"byte_end":192102,"line_start":480,"line_end":480,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192107,"byte_end":192114,"line_start":481,"line_end":481,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4047},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193060,"byte_end":193067,"line_start":516,"line_end":516,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::stream::StreamExt::collect","value":"fn collect<C>(Self) -> Collect<Self, C> where C: Default + Extend<Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":4030},"children":[],"decl_id":null,"docs":" Transforms a stream into a collection, returning a\n future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Transforms a stream into a collection, returning a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192335,"byte_end":192389,"line_start":491,"line_end":491,"column_start":5,"column_end":59}},{"value":"/ future representing the result of that computation.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192394,"byte_end":192449,"line_start":492,"line_end":492,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192454,"byte_end":192457,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192462,"byte_end":192530,"line_start":494,"line_end":494,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192535,"byte_end":192538,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192543,"byte_end":192557,"line_start":496,"line_end":496,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192562,"byte_end":192565,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192570,"byte_end":192577,"line_start":498,"line_end":498,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192582,"byte_end":192623,"line_start":499,"line_end":499,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192628,"byte_end":192659,"line_start":500,"line_end":500,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192664,"byte_end":192699,"line_start":501,"line_end":501,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192704,"byte_end":192724,"line_start":502,"line_end":502,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192729,"byte_end":192732,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192737,"byte_end":192774,"line_start":504,"line_end":504,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192779,"byte_end":192782,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192787,"byte_end":192814,"line_start":506,"line_end":506,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192819,"byte_end":192843,"line_start":507,"line_end":507,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(i).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192848,"byte_end":192890,"line_start":508,"line_end":508,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192895,"byte_end":192904,"line_start":509,"line_end":509,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192909,"byte_end":192916,"line_start":510,"line_end":510,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192921,"byte_end":192924,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ let output = rx.collect::<Vec<i32>>().await;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192929,"byte_end":192977,"line_start":512,"line_end":512,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4, 5]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":192982,"byte_end":193026,"line_start":513,"line_end":513,"column_start":5,"column_end":49}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193031,"byte_end":193040,"line_start":514,"line_end":514,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193045,"byte_end":193052,"line_start":515,"line_end":515,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4049},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194186,"byte_end":194191,"line_start":553,"line_end":553,"column_start":8,"column_end":13},"name":"unzip","qualname":"::stream::stream::StreamExt::unzip","value":"fn unzip<A, B, FromA, FromB>(Self) -> Unzip<Self, FromA, FromB> where\nFromA: Default + Extend<A>, FromB: Default + Extend<B>, Self: Sized +\nStream<Item = (A, B)>","parent":{"krate":0,"index":4030},"children":[],"decl_id":null,"docs":" Converts a stream of pairs into a future, which\n resolves to pair of containers.","sig":null,"attributes":[{"value":"/ Converts a stream of pairs into a future, which","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193225,"byte_end":193276,"line_start":523,"line_end":523,"column_start":5,"column_end":56}},{"value":"/ resolves to pair of containers.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193281,"byte_end":193316,"line_start":524,"line_end":524,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193321,"byte_end":193324,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ `unzip()` produces a future, which resolves to two","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193329,"byte_end":193383,"line_start":526,"line_end":526,"column_start":5,"column_end":59}},{"value":"/ collections: one from the left elements of the pairs,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193388,"byte_end":193445,"line_start":527,"line_end":527,"column_start":5,"column_end":62}},{"value":"/ and one from the right elements.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193450,"byte_end":193486,"line_start":528,"line_end":528,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193491,"byte_end":193494,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193499,"byte_end":193567,"line_start":530,"line_end":530,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193572,"byte_end":193575,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193580,"byte_end":193594,"line_start":532,"line_end":532,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193599,"byte_end":193602,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193607,"byte_end":193614,"line_start":534,"line_end":534,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193619,"byte_end":193660,"line_start":535,"line_end":535,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193665,"byte_end":193696,"line_start":536,"line_end":536,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193701,"byte_end":193736,"line_start":537,"line_end":537,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193741,"byte_end":193761,"line_start":538,"line_end":538,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193766,"byte_end":193769,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193774,"byte_end":193811,"line_start":540,"line_end":540,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193816,"byte_end":193819,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193824,"byte_end":193851,"line_start":542,"line_end":542,"column_start":5,"column_end":32}},{"value":"/     tx.unbounded_send((1, 2)).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193856,"byte_end":193899,"line_start":543,"line_end":543,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((3, 4)).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193904,"byte_end":193947,"line_start":544,"line_end":544,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((5, 6)).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193952,"byte_end":193995,"line_start":545,"line_end":545,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194000,"byte_end":194007,"line_start":546,"line_end":546,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194012,"byte_end":194015,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ let (o1, o2): (Vec<_>, Vec<_>) = rx.unzip().await;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194020,"byte_end":194074,"line_start":548,"line_end":548,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(o1, vec![1, 3, 5]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194079,"byte_end":194113,"line_start":549,"line_end":549,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(o2, vec![2, 4, 6]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194118,"byte_end":194152,"line_start":550,"line_end":550,"column_start":5,"column_end":39}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194157,"byte_end":194166,"line_start":551,"line_end":551,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194171,"byte_end":194178,"line_start":552,"line_end":552,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4054},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195487,"byte_end":195493,"line_start":594,"line_end":594,"column_start":8,"column_end":14},"name":"concat","qualname":"::stream::stream::StreamExt::concat","value":"fn concat(Self) -> Concat<Self> where Self: Sized,\nSelf::Item: Extend<<<Self as Stream>::Item as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":4030},"children":[],"decl_id":null,"docs":" Concatenate all items of a stream into a single extendable\n destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Concatenate all items of a stream into a single extendable","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194452,"byte_end":194514,"line_start":562,"line_end":562,"column_start":5,"column_end":67}},{"value":"/ destination, returning a future representing the end result.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194519,"byte_end":194583,"line_start":563,"line_end":563,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194588,"byte_end":194591,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194596,"byte_end":194660,"line_start":565,"line_end":565,"column_start":5,"column_end":69}},{"value":"/ of all the subsequent results of the stream. If the stream is","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194665,"byte_end":194730,"line_start":566,"line_end":566,"column_start":5,"column_end":70}},{"value":"/ empty, the default value will be returned.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194735,"byte_end":194781,"line_start":567,"line_end":567,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194786,"byte_end":194789,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194794,"byte_end":194843,"line_start":569,"line_end":569,"column_start":5,"column_end":54}},{"value":"/ [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194848,"byte_end":194888,"line_start":570,"line_end":570,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194893,"byte_end":194896,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194901,"byte_end":194915,"line_start":572,"line_end":572,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194920,"byte_end":194923,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194928,"byte_end":194935,"line_start":574,"line_end":574,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194940,"byte_end":194981,"line_start":575,"line_end":575,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194986,"byte_end":195017,"line_start":576,"line_end":576,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195022,"byte_end":195057,"line_start":577,"line_end":577,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195062,"byte_end":195082,"line_start":578,"line_end":578,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195087,"byte_end":195090,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195095,"byte_end":195132,"line_start":580,"line_end":580,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195137,"byte_end":195140,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195145,"byte_end":195172,"line_start":582,"line_end":582,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195177,"byte_end":195208,"line_start":583,"line_end":583,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195213,"byte_end":195239,"line_start":584,"line_end":584,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(vec![n + 1, n + 2, n + 3]).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195244,"byte_end":195310,"line_start":585,"line_end":585,"column_start":5,"column_end":71}},{"value":"/     }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195315,"byte_end":195324,"line_start":586,"line_end":586,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195329,"byte_end":195336,"line_start":587,"line_end":587,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195341,"byte_end":195344,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ let result = rx.concat().await;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195349,"byte_end":195384,"line_start":589,"line_end":589,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195389,"byte_end":195392,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, vec![7, 8, 9, 4, 5, 6, 1, 2, 3]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195397,"byte_end":195453,"line_start":591,"line_end":591,"column_start":5,"column_end":61}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195458,"byte_end":195467,"line_start":592,"line_end":592,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195472,"byte_end":195479,"line_start":593,"line_end":593,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4055},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196513,"byte_end":196518,"line_start":627,"line_end":627,"column_start":8,"column_end":13},"name":"count","qualname":"::stream::stream::StreamExt::count","value":"fn count(Self) -> Count<Self> where Self: Sized","parent":{"krate":0,"index":4030},"children":[],"decl_id":null,"docs":" Drives the stream to completion, counting the number of items.","sig":null,"attributes":[{"value":"/ Drives the stream to completion, counting the number of items.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195723,"byte_end":195789,"line_start":602,"line_end":602,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195794,"byte_end":195797,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195802,"byte_end":195825,"line_start":604,"line_end":604,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195830,"byte_end":195833,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so counting elements of a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195838,"byte_end":195914,"line_start":606,"line_end":606,"column_start":5,"column_end":81}},{"value":"/ stream with more than [`usize::MAX`] elements either produces the wrong","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195919,"byte_end":195994,"line_start":607,"line_end":607,"column_start":5,"column_end":80}},{"value":"/ result or panics. If debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195999,"byte_end":196076,"line_start":608,"line_end":608,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196081,"byte_end":196084,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196089,"byte_end":196101,"line_start":610,"line_end":610,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196106,"byte_end":196109,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ This function might panic if the iterator has more than [`usize::MAX`]","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196114,"byte_end":196188,"line_start":612,"line_end":612,"column_start":5,"column_end":79}},{"value":"/ elements.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196193,"byte_end":196206,"line_start":613,"line_end":613,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196211,"byte_end":196214,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196219,"byte_end":196233,"line_start":615,"line_end":615,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196238,"byte_end":196241,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196246,"byte_end":196253,"line_start":617,"line_end":617,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196258,"byte_end":196299,"line_start":618,"line_end":618,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196304,"byte_end":196347,"line_start":619,"line_end":619,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196352,"byte_end":196355,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196360,"byte_end":196398,"line_start":621,"line_end":621,"column_start":5,"column_end":43}},{"value":"/ let count = stream.count().await;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196403,"byte_end":196440,"line_start":622,"line_end":622,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196445,"byte_end":196448,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(count, 10);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196453,"byte_end":196479,"line_start":624,"line_end":624,"column_start":5,"column_end":31}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196484,"byte_end":196493,"line_start":625,"line_end":625,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196498,"byte_end":196505,"line_start":626,"line_end":626,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4056},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197474,"byte_end":197479,"line_start":657,"line_end":657,"column_start":8,"column_end":13},"name":"cycle","qualname":"::stream::stream::StreamExt::cycle","value":"fn cycle(Self) -> Cycle<Self> where Self: Sized + Clone","parent":{"krate":0,"index":4030},"children":[],"decl_id":null,"docs":" Repeats a stream endlessly.","sig":null,"attributes":[{"value":"/ Repeats a stream endlessly.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196640,"byte_end":196671,"line_start":634,"line_end":634,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196676,"byte_end":196679,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196684,"byte_end":196751,"line_start":636,"line_end":636,"column_start":5,"column_end":72}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196756,"byte_end":196828,"line_start":637,"line_end":637,"column_start":5,"column_end":77}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196833,"byte_end":196890,"line_start":638,"line_end":638,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196895,"byte_end":196898,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196903,"byte_end":196917,"line_start":640,"line_end":640,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196922,"byte_end":196925,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196930,"byte_end":196937,"line_start":642,"line_end":642,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196942,"byte_end":196983,"line_start":643,"line_end":643,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196988,"byte_end":197031,"line_start":644,"line_end":644,"column_start":5,"column_end":48}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197036,"byte_end":197058,"line_start":645,"line_end":645,"column_start":5,"column_end":27}},{"value":"/ let mut s = stream::iter(a.iter()).cycle();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197063,"byte_end":197110,"line_start":646,"line_end":646,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197115,"byte_end":197118,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197123,"byte_end":197164,"line_start":648,"line_end":648,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197169,"byte_end":197210,"line_start":649,"line_end":649,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197215,"byte_end":197256,"line_start":650,"line_end":650,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197261,"byte_end":197302,"line_start":651,"line_end":651,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197307,"byte_end":197348,"line_start":652,"line_end":652,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197353,"byte_end":197394,"line_start":653,"line_end":653,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197399,"byte_end":197440,"line_start":654,"line_end":654,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197445,"byte_end":197454,"line_start":655,"line_end":655,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197459,"byte_end":197466,"line_start":656,"line_end":656,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4057},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":198429,"byte_end":198433,"line_start":684,"line_end":684,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"fn fold<T, Fut, F>(Self, T, F) -> Fold<Self, Fut, T, F> where\nF: FnMut(T, Self::Item) -> Fut, Fut: Future<Output = T>, Self: Sized","parent":{"krate":0,"index":4030},"children":[],"decl_id":null,"docs":" Execute an accumulating asynchronous computation over a stream,\n collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Execute an accumulating asynchronous computation over a stream,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197614,"byte_end":197681,"line_start":664,"line_end":664,"column_start":5,"column_end":72}},{"value":"/ collecting all the values into one final result.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197686,"byte_end":197738,"line_start":665,"line_end":665,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197743,"byte_end":197746,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197751,"byte_end":197821,"line_start":667,"line_end":667,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197826,"byte_end":197902,"line_start":668,"line_end":668,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197907,"byte_end":197983,"line_start":669,"line_end":669,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197988,"byte_end":198058,"line_start":670,"line_end":670,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":198063,"byte_end":198089,"line_start":671,"line_end":671,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":198094,"byte_end":198097,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":198102,"byte_end":198116,"line_start":673,"line_end":673,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":198121,"byte_end":198124,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":198129,"byte_end":198136,"line_start":675,"line_end":675,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":198141,"byte_end":198182,"line_start":676,"line_end":676,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":198187,"byte_end":198230,"line_start":677,"line_end":677,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":198235,"byte_end":198238,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..6);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":198243,"byte_end":198286,"line_start":679,"line_end":679,"column_start":5,"column_end":48}},{"value":"/ let sum = number_stream.fold(0, |acc, x| async move { acc + x });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":198291,"byte_end":198360,"line_start":680,"line_end":680,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(sum.await, 15);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":198365,"byte_end":198395,"line_start":681,"line_end":681,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":198400,"byte_end":198409,"line_start":682,"line_end":682,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":198414,"byte_end":198421,"line_start":683,"line_end":683,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4061},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":199134,"byte_end":199137,"line_start":706,"line_end":706,"column_start":8,"column_end":11},"name":"any","qualname":"::stream::stream::StreamExt::any","value":"fn any<Fut, F>(Self, F) -> Any<Self, Fut, F> where F: FnMut(Self::Item) ->\nFut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":4030},"children":[],"decl_id":null,"docs":" Execute predicate over asynchronous stream, and return `true` if any element in stream satisfied a predicate.","sig":null,"attributes":[{"value":"/ Execute predicate over asynchronous stream, and return `true` if any element in stream satisfied a predicate.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":198668,"byte_end":198781,"line_start":693,"line_end":693,"column_start":5,"column_end":118}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":198786,"byte_end":198789,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":198794,"byte_end":198808,"line_start":695,"line_end":695,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":198813,"byte_end":198816,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":198821,"byte_end":198828,"line_start":697,"line_end":697,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":198833,"byte_end":198874,"line_start":698,"line_end":698,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":198879,"byte_end":198922,"line_start":699,"line_end":699,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":198927,"byte_end":198930,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..10);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":198935,"byte_end":198979,"line_start":701,"line_end":701,"column_start":5,"column_end":49}},{"value":"/ let contain_three = number_stream.any(|i| async move { i == 3 });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":198984,"byte_end":199053,"line_start":702,"line_end":702,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(contain_three.await, true);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":199058,"byte_end":199100,"line_start":703,"line_end":703,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":199105,"byte_end":199114,"line_start":704,"line_end":704,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":199119,"byte_end":199126,"line_start":705,"line_end":705,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4064},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":199824,"byte_end":199827,"line_start":728,"line_end":728,"column_start":8,"column_end":11},"name":"all","qualname":"::stream::stream::StreamExt::all","value":"fn all<Fut, F>(Self, F) -> All<Self, Fut, F> where F: FnMut(Self::Item) ->\nFut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":4030},"children":[],"decl_id":null,"docs":" Execute predicate over asynchronous stream, and return `true` if all element in stream satisfied a predicate.","sig":null,"attributes":[{"value":"/ Execute predicate over asynchronous stream, and return `true` if all element in stream satisfied a predicate.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":199352,"byte_end":199465,"line_start":715,"line_end":715,"column_start":5,"column_end":118}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":199470,"byte_end":199473,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":199478,"byte_end":199492,"line_start":717,"line_end":717,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":199497,"byte_end":199500,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":199505,"byte_end":199512,"line_start":719,"line_end":719,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":199517,"byte_end":199558,"line_start":720,"line_end":720,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":199563,"byte_end":199606,"line_start":721,"line_end":721,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":199611,"byte_end":199614,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..10);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":199619,"byte_end":199663,"line_start":723,"line_end":723,"column_start":5,"column_end":49}},{"value":"/ let less_then_twenty = number_stream.all(|i| async move { i < 20 });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":199668,"byte_end":199740,"line_start":724,"line_end":724,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(less_then_twenty.await, true);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":199745,"byte_end":199790,"line_start":725,"line_end":725,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":199795,"byte_end":199804,"line_start":726,"line_end":726,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":199809,"byte_end":199816,"line_start":727,"line_end":727,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4067},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":201001,"byte_end":201008,"line_start":768,"line_end":768,"column_start":8,"column_end":15},"name":"flatten","qualname":"::stream::stream::StreamExt::flatten","value":"fn flatten(Self) -> Flatten<Self> where Self::Item: Stream, Self: Sized","parent":{"krate":0,"index":4030},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200042,"byte_end":200107,"line_start":737,"line_end":737,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200112,"byte_end":200115,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200120,"byte_end":200134,"line_start":739,"line_end":739,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200139,"byte_end":200142,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200147,"byte_end":200154,"line_start":741,"line_end":741,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200159,"byte_end":200200,"line_start":742,"line_end":742,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200205,"byte_end":200236,"line_start":743,"line_end":743,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200241,"byte_end":200276,"line_start":744,"line_end":744,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200281,"byte_end":200301,"line_start":745,"line_end":745,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200306,"byte_end":200309,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200314,"byte_end":200353,"line_start":747,"line_end":747,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200358,"byte_end":200397,"line_start":748,"line_end":748,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200402,"byte_end":200441,"line_start":749,"line_end":749,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200446,"byte_end":200449,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200454,"byte_end":200481,"line_start":751,"line_end":751,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(1).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200486,"byte_end":200525,"line_start":752,"line_end":752,"column_start":5,"column_end":44}},{"value":"/     tx1.unbounded_send(2).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200530,"byte_end":200569,"line_start":753,"line_end":753,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200574,"byte_end":200581,"line_start":754,"line_end":754,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200586,"byte_end":200613,"line_start":755,"line_end":755,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(3).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200618,"byte_end":200657,"line_start":756,"line_end":756,"column_start":5,"column_end":44}},{"value":"/     tx2.unbounded_send(4).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200662,"byte_end":200701,"line_start":757,"line_end":757,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200706,"byte_end":200713,"line_start":758,"line_end":758,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200718,"byte_end":200745,"line_start":759,"line_end":759,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(rx1).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200750,"byte_end":200791,"line_start":760,"line_end":760,"column_start":5,"column_end":46}},{"value":"/     tx3.unbounded_send(rx2).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200796,"byte_end":200837,"line_start":761,"line_end":761,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200842,"byte_end":200849,"line_start":762,"line_end":762,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200854,"byte_end":200857,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ let output = rx3.flatten().collect::<Vec<i32>>().await;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200862,"byte_end":200921,"line_start":764,"line_end":764,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200926,"byte_end":200967,"line_start":765,"line_end":765,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200972,"byte_end":200981,"line_start":766,"line_end":766,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":200986,"byte_end":200993,"line_start":767,"line_end":767,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4068},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":202304,"byte_end":202321,"line_start":812,"line_end":812,"column_start":8,"column_end":25},"name":"flatten_unordered","qualname":"::stream::stream::StreamExt::flatten_unordered","value":"fn flatten_unordered<impl Into<Option<usize>>>(Self, impl Into<Option<usize>>)\n-> FlattenUnordered<Self> where Self::Item: Stream + Unpin, Self: Sized,\nimpl Into<Option<usize>>: Into<Option<usize>>","parent":{"krate":0,"index":4030},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream. Polls\n inner streams concurrently.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream. Polls","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":201185,"byte_end":201256,"line_start":776,"line_end":776,"column_start":5,"column_end":76}},{"value":"/ inner streams concurrently.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":201261,"byte_end":201292,"line_start":777,"line_end":777,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":201297,"byte_end":201300,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":201305,"byte_end":201319,"line_start":779,"line_end":779,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":201324,"byte_end":201327,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":201332,"byte_end":201339,"line_start":781,"line_end":781,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":201344,"byte_end":201385,"line_start":782,"line_end":782,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":201390,"byte_end":201421,"line_start":783,"line_end":783,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":201426,"byte_end":201461,"line_start":784,"line_end":784,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":201466,"byte_end":201486,"line_start":785,"line_end":785,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":201491,"byte_end":201494,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":201499,"byte_end":201538,"line_start":787,"line_end":787,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":201543,"byte_end":201582,"line_start":788,"line_end":788,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":201587,"byte_end":201626,"line_start":789,"line_end":789,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":201631,"byte_end":201634,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":201639,"byte_end":201666,"line_start":791,"line_end":791,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(1).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":201671,"byte_end":201710,"line_start":792,"line_end":792,"column_start":5,"column_end":44}},{"value":"/     tx1.unbounded_send(2).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":201715,"byte_end":201754,"line_start":793,"line_end":793,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":201759,"byte_end":201766,"line_start":794,"line_end":794,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":201771,"byte_end":201798,"line_start":795,"line_end":795,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(3).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":201803,"byte_end":201842,"line_start":796,"line_end":796,"column_start":5,"column_end":44}},{"value":"/     tx2.unbounded_send(4).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":201847,"byte_end":201886,"line_start":797,"line_end":797,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":201891,"byte_end":201898,"line_start":798,"line_end":798,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":201903,"byte_end":201930,"line_start":799,"line_end":799,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(rx1).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":201935,"byte_end":201976,"line_start":800,"line_end":800,"column_start":5,"column_end":46}},{"value":"/     tx3.unbounded_send(rx2).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":201981,"byte_end":202022,"line_start":801,"line_end":801,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":202027,"byte_end":202034,"line_start":802,"line_end":802,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":202039,"byte_end":202042,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ let mut output = rx3.flatten_unordered(None).collect::<Vec<i32>>().await;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":202047,"byte_end":202124,"line_start":804,"line_end":804,"column_start":5,"column_end":82}},{"value":"/ output.sort();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":202129,"byte_end":202147,"line_start":805,"line_end":805,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":202152,"byte_end":202155,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":202160,"byte_end":202201,"line_start":807,"line_end":807,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":202206,"byte_end":202215,"line_start":808,"line_end":808,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":202220,"byte_end":202227,"line_start":809,"line_end":809,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":202232,"byte_end":202266,"line_start":810,"line_end":810,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":202271,"byte_end":202296,"line_start":811,"line_end":811,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4070},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":203607,"byte_end":203615,"line_start":845,"line_end":845,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::stream::stream::StreamExt::flat_map","value":"fn flat_map<U, F>(Self, F) -> FlatMap<Self, U, F> where F: FnMut(Self::Item)\n-> U, U: Stream, Self: Sized","parent":{"krate":0,"index":4030},"children":[],"decl_id":null,"docs":" Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","sig":null,"attributes":[{"value":"/ Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":202521,"byte_end":202593,"line_start":820,"line_end":820,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":202598,"byte_end":202601,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ [`StreamExt::map`] is very useful, but if it produces a `Stream` instead,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":202606,"byte_end":202683,"line_start":822,"line_end":822,"column_start":5,"column_end":82}},{"value":"/ you would have to chain combinators like `.map(f).flatten()` while this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":202688,"byte_end":202763,"line_start":823,"line_end":823,"column_start":5,"column_end":80}},{"value":"/ combinator provides ability to write `.flat_map(f)` instead of chaining.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":202768,"byte_end":202844,"line_start":824,"line_end":824,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":202849,"byte_end":202852,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ The provided closure which produces inner streams is executed over all elements","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":202857,"byte_end":202940,"line_start":826,"line_end":826,"column_start":5,"column_end":88}},{"value":"/ of stream as last inner stream is terminated and next stream item is available.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":202945,"byte_end":203028,"line_start":827,"line_end":827,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":203033,"byte_end":203036,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":203041,"byte_end":203117,"line_start":829,"line_end":829,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `flat_map` methods in the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":203122,"byte_end":203198,"line_start":830,"line_end":830,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":203203,"byte_end":203224,"line_start":831,"line_end":831,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":203229,"byte_end":203232,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":203237,"byte_end":203251,"line_start":833,"line_end":833,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":203256,"byte_end":203259,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":203264,"byte_end":203271,"line_start":835,"line_end":835,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":203276,"byte_end":203317,"line_start":836,"line_end":836,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":203322,"byte_end":203365,"line_start":837,"line_end":837,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":203370,"byte_end":203373,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":203378,"byte_end":203415,"line_start":839,"line_end":839,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.flat_map(|x| stream::iter(vec![x + 3; x]));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":203420,"byte_end":203487,"line_start":840,"line_end":840,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":203492,"byte_end":203495,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 5, 6, 6, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":203500,"byte_end":203573,"line_start":842,"line_end":842,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":203578,"byte_end":203587,"line_start":843,"line_end":843,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":203592,"byte_end":203599,"line_start":844,"line_end":844,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4073},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":205673,"byte_end":205691,"line_start":894,"line_end":894,"column_start":8,"column_end":26},"name":"flat_map_unordered","qualname":"::stream::stream::StreamExt::flat_map_unordered","value":"fn flat_map_unordered<U, F,\nimpl Into<Option<usize>>>(Self, impl Into<Option<usize>>, F)\n-> FlatMapUnordered<Self, U, F> where U: Stream + Unpin, F: FnMut(Self::Item)\n-> U, Self: Sized, impl Into<Option<usize>>: Into<Option<usize>>","parent":{"krate":0,"index":4030},"children":[],"decl_id":null,"docs":" Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s\n and polls them concurrently, yielding items in any order, as they made\n available.","sig":null,"attributes":[{"value":"/ Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":203818,"byte_end":203889,"line_start":854,"line_end":854,"column_start":5,"column_end":76}},{"value":"/ and polls them concurrently, yielding items in any order, as they made","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":203894,"byte_end":203968,"line_start":855,"line_end":855,"column_start":5,"column_end":79}},{"value":"/ available.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":203973,"byte_end":203987,"line_start":856,"line_end":856,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":203992,"byte_end":203995,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ [`StreamExt::map`] is very useful, but if it produces `Stream`s","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":204000,"byte_end":204067,"line_start":858,"line_end":858,"column_start":5,"column_end":72}},{"value":"/ instead, and you need to poll all of them concurrently, you would","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":204072,"byte_end":204141,"line_start":859,"line_end":859,"column_start":5,"column_end":74}},{"value":"/ have to use something like `for_each_concurrent` and merge values","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":204146,"byte_end":204215,"line_start":860,"line_end":860,"column_start":5,"column_end":74}},{"value":"/ by hand. This combinator provides ability to collect all values","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":204220,"byte_end":204287,"line_start":861,"line_end":861,"column_start":5,"column_end":72}},{"value":"/ from concurrently polled streams into one stream.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":204292,"byte_end":204345,"line_start":862,"line_end":862,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":204350,"byte_end":204353,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ The first argument is an optional limit on the number of concurrently","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":204358,"byte_end":204431,"line_start":864,"line_end":864,"column_start":5,"column_end":78}},{"value":"/ polled streams. If this limit is not `None`, no more than `limit` streams","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":204436,"byte_end":204513,"line_start":865,"line_end":865,"column_start":5,"column_end":82}},{"value":"/ will be polled concurrently. The `limit` argument is of type","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":204518,"byte_end":204582,"line_start":866,"line_end":866,"column_start":5,"column_end":69}},{"value":"/ `Into<Option<usize>>`, and so can be provided as either `None`,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":204587,"byte_end":204654,"line_start":867,"line_end":867,"column_start":5,"column_end":72}},{"value":"/ `Some(10)`, or just `10`. Note: a limit of zero is interpreted as","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":204659,"byte_end":204728,"line_start":868,"line_end":868,"column_start":5,"column_end":74}},{"value":"/ no limit at all, and will have the same result as passing in `None`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":204733,"byte_end":204805,"line_start":869,"line_end":869,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":204810,"byte_end":204813,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ The provided closure which produces inner streams is executed over","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":204818,"byte_end":204888,"line_start":871,"line_end":871,"column_start":5,"column_end":75}},{"value":"/ all elements of stream as next stream item is available and limit","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":204893,"byte_end":204962,"line_start":872,"line_end":872,"column_start":5,"column_end":74}},{"value":"/ of concurrently processed streams isn't exceeded.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":204967,"byte_end":205020,"line_start":873,"line_end":873,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":205025,"byte_end":205028,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":205033,"byte_end":205099,"line_start":875,"line_end":875,"column_start":5,"column_end":71}},{"value":"/ returns a wrapped version of it.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":205104,"byte_end":205140,"line_start":876,"line_end":876,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":205145,"byte_end":205148,"line_start":877,"line_end":877,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":205153,"byte_end":205167,"line_start":878,"line_end":878,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":205172,"byte_end":205175,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":205180,"byte_end":205187,"line_start":880,"line_end":880,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":205192,"byte_end":205233,"line_start":881,"line_end":881,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":205238,"byte_end":205281,"line_start":882,"line_end":882,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":205286,"byte_end":205289,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..5);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":205294,"byte_end":205330,"line_start":884,"line_end":884,"column_start":5,"column_end":41}},{"value":"/ let stream = stream.flat_map_unordered(1, |x| stream::iter(vec![x; x]));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":205335,"byte_end":205411,"line_start":885,"line_end":885,"column_start":5,"column_end":81}},{"value":"/ let mut values = stream.collect::<Vec<_>>().await;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":205416,"byte_end":205470,"line_start":886,"line_end":886,"column_start":5,"column_end":59}},{"value":"/ values.sort();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":205475,"byte_end":205493,"line_start":887,"line_end":887,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":205498,"byte_end":205501,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1usize, 2, 2, 3, 3, 3, 4, 4, 4, 4], values);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":205506,"byte_end":205570,"line_start":889,"line_end":889,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":205575,"byte_end":205584,"line_start":890,"line_end":890,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":205589,"byte_end":205596,"line_start":891,"line_end":891,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":205601,"byte_end":205635,"line_start":892,"line_end":892,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":205640,"byte_end":205665,"line_start":893,"line_end":893,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4077},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":206778,"byte_end":206782,"line_start":931,"line_end":931,"column_start":8,"column_end":12},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"fn scan<S, B, Fut, F>(Self, S, F) -> Scan<Self, S, Fut, F> where\nF: for<'_> FnMut(&'_ mut S, Self::Item) -> Fut, Fut: Future<Output =\nOption<B>>, Self: Sized","parent":{"krate":0,"index":4030},"children":[],"decl_id":null,"docs":" Combinator similar to [`StreamExt::fold`] that holds internal state\n and produces a new stream.","sig":null,"attributes":[{"value":"/ Combinator similar to [`StreamExt::fold`] that holds internal state","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":205969,"byte_end":206040,"line_start":907,"line_end":907,"column_start":5,"column_end":76}},{"value":"/ and produces a new stream.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":206045,"byte_end":206075,"line_start":908,"line_end":908,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":206080,"byte_end":206083,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ Accepts initial state and closure which will be applied to each element","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":206088,"byte_end":206163,"line_start":910,"line_end":910,"column_start":5,"column_end":80}},{"value":"/ of the stream until provided closure returns `None`. Once `None` is","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":206168,"byte_end":206239,"line_start":911,"line_end":911,"column_start":5,"column_end":76}},{"value":"/ returned, stream will be terminated.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":206244,"byte_end":206284,"line_start":912,"line_end":912,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":206289,"byte_end":206292,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":206297,"byte_end":206311,"line_start":914,"line_end":914,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":206316,"byte_end":206319,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":206324,"byte_end":206331,"line_start":916,"line_end":916,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":206336,"byte_end":206377,"line_start":917,"line_end":917,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":206382,"byte_end":206406,"line_start":918,"line_end":918,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":206411,"byte_end":206454,"line_start":919,"line_end":919,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":206459,"byte_end":206462,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":206467,"byte_end":206505,"line_start":921,"line_end":921,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":206510,"byte_end":206513,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.scan(0, |state, x| {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":206518,"byte_end":206562,"line_start":923,"line_end":923,"column_start":5,"column_end":49}},{"value":"/     *state += x;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":206567,"byte_end":206587,"line_start":924,"line_end":924,"column_start":5,"column_end":25}},{"value":"/     future::ready(if *state < 10 { Some(x) } else { None })","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":206592,"byte_end":206655,"line_start":925,"line_end":925,"column_start":5,"column_end":68}},{"value":"/ });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":206660,"byte_end":206667,"line_start":926,"line_end":926,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":206672,"byte_end":206675,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":206680,"byte_end":206744,"line_start":928,"line_end":928,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":206749,"byte_end":206758,"line_start":929,"line_end":929,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":206763,"byte_end":206770,"line_start":930,"line_end":930,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4082},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":207829,"byte_end":207839,"line_start":962,"line_end":962,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"fn skip_while<Fut, F>(Self, F) -> SkipWhile<Self, Fut, F> where\nF: for<'_> FnMut(&'_ Self::Item) -> Fut, Fut: Future<Output = bool>,\nSelf: Sized","parent":{"krate":0,"index":4030},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":207051,"byte_end":207125,"line_start":940,"line_end":940,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":207130,"byte_end":207153,"line_start":941,"line_end":941,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":207158,"byte_end":207161,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::skip_while`, will skip elements on the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":207166,"byte_end":207239,"line_start":943,"line_end":943,"column_start":5,"column_end":78}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":207244,"byte_end":207316,"line_start":944,"line_end":944,"column_start":5,"column_end":77}},{"value":"/ returns `false`, all future elements will be returned from the underlying","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":207321,"byte_end":207398,"line_start":945,"line_end":945,"column_start":5,"column_end":82}},{"value":"/ stream.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":207403,"byte_end":207414,"line_start":946,"line_end":946,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":207419,"byte_end":207422,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":207427,"byte_end":207441,"line_start":948,"line_end":948,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":207446,"byte_end":207449,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":207454,"byte_end":207461,"line_start":950,"line_end":950,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":207466,"byte_end":207507,"line_start":951,"line_end":951,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":207512,"byte_end":207536,"line_start":952,"line_end":952,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":207541,"byte_end":207584,"line_start":953,"line_end":953,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":207589,"byte_end":207592,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":207597,"byte_end":207635,"line_start":955,"line_end":955,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":207640,"byte_end":207643,"line_start":956,"line_end":956,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.skip_while(|x| future::ready(*x <= 5));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":207648,"byte_end":207711,"line_start":957,"line_end":957,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":207716,"byte_end":207719,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":207724,"byte_end":207795,"line_start":959,"line_end":959,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":207800,"byte_end":207809,"line_start":960,"line_end":960,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":207814,"byte_end":207821,"line_start":961,"line_end":961,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4085},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":208828,"byte_end":208838,"line_start":992,"line_end":992,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"fn take_while<Fut, F>(Self, F) -> TakeWhile<Self, Fut, F> where\nF: for<'_> FnMut(&'_ Self::Item) -> Fut, Fut: Future<Output = bool>,\nSelf: Sized","parent":{"krate":0,"index":4030},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided asynchronous predicate","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":208073,"byte_end":208149,"line_start":971,"line_end":971,"column_start":5,"column_end":81}},{"value":"/ resolves to `true`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":208154,"byte_end":208177,"line_start":972,"line_end":972,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":208182,"byte_end":208185,"line_start":973,"line_end":973,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":208190,"byte_end":208265,"line_start":974,"line_end":974,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":208270,"byte_end":208342,"line_start":975,"line_end":975,"column_start":5,"column_end":77}},{"value":"/ returns `false`, it will always return that the stream is done.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":208347,"byte_end":208414,"line_start":976,"line_end":976,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":208419,"byte_end":208422,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":208427,"byte_end":208441,"line_start":978,"line_end":978,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":208446,"byte_end":208449,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":208454,"byte_end":208461,"line_start":980,"line_end":980,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":208466,"byte_end":208507,"line_start":981,"line_end":981,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":208512,"byte_end":208536,"line_start":982,"line_end":982,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":208541,"byte_end":208584,"line_start":983,"line_end":983,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":208589,"byte_end":208592,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":208597,"byte_end":208635,"line_start":985,"line_end":985,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":208640,"byte_end":208643,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_while(|x| future::ready(*x <= 5));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":208648,"byte_end":208711,"line_start":987,"line_end":987,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":208716,"byte_end":208719,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":208724,"byte_end":208794,"line_start":989,"line_end":989,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":208799,"byte_end":208808,"line_start":990,"line_end":990,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":208813,"byte_end":208820,"line_start":991,"line_end":991,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4088},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":210354,"byte_end":210364,"line_start":1037,"line_end":1037,"column_start":8,"column_end":18},"name":"take_until","qualname":"::stream::stream::StreamExt::take_until","value":"fn take_until<Fut>(Self, Fut) -> TakeUntil<Self, Fut> where Fut: Future,\nSelf: Sized","parent":{"krate":0,"index":4030},"children":[],"decl_id":null,"docs":" Take elements from this stream until the provided future resolves.","sig":null,"attributes":[{"value":"/ Take elements from this stream until the provided future resolves.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":209072,"byte_end":209142,"line_start":1001,"line_end":1001,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":209147,"byte_end":209150,"line_start":1002,"line_end":1002,"column_start":5,"column_end":8}},{"value":"/ This function will take elements from the stream until the provided","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":209155,"byte_end":209226,"line_start":1003,"line_end":1003,"column_start":5,"column_end":76}},{"value":"/ stopping future `fut` resolves. Once the `fut` future becomes ready,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":209231,"byte_end":209303,"line_start":1004,"line_end":1004,"column_start":5,"column_end":77}},{"value":"/ this stream combinator will always return that the stream is done.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":209308,"byte_end":209378,"line_start":1005,"line_end":1005,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":209383,"byte_end":209386,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ The stopping future may return any type. Once the stream is stopped","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":209391,"byte_end":209462,"line_start":1007,"line_end":1007,"column_start":5,"column_end":76}},{"value":"/ the result of the stopping future may be accessed with `TakeUntil::take_result()`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":209467,"byte_end":209553,"line_start":1008,"line_end":1008,"column_start":5,"column_end":91}},{"value":"/ The stream may also be resumed with `TakeUntil::take_future()`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":209558,"byte_end":209625,"line_start":1009,"line_end":1009,"column_start":5,"column_end":72}},{"value":"/ See the documentation of [`TakeUntil`] for more information.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":209630,"byte_end":209694,"line_start":1010,"line_end":1010,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":209699,"byte_end":209702,"line_start":1011,"line_end":1011,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":209707,"byte_end":209721,"line_start":1012,"line_end":1012,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":209726,"byte_end":209729,"line_start":1013,"line_end":1013,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":209734,"byte_end":209741,"line_start":1014,"line_end":1014,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":209746,"byte_end":209787,"line_start":1015,"line_end":1015,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":209792,"byte_end":209816,"line_start":1016,"line_end":1016,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":209821,"byte_end":209864,"line_start":1017,"line_end":1017,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":209869,"byte_end":209897,"line_start":1018,"line_end":1018,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":209902,"byte_end":209905,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":209910,"byte_end":209948,"line_start":1020,"line_end":1020,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":209953,"byte_end":209956,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":209961,"byte_end":209979,"line_start":1022,"line_end":1022,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":209984,"byte_end":210026,"line_start":1023,"line_end":1023,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":210031,"byte_end":210046,"line_start":1024,"line_end":1024,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":210051,"byte_end":210070,"line_start":1025,"line_end":1025,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":210075,"byte_end":210100,"line_start":1026,"line_end":1026,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":210105,"byte_end":210121,"line_start":1027,"line_end":1027,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(())","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":210126,"byte_end":210153,"line_start":1028,"line_end":1028,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":210158,"byte_end":210167,"line_start":1029,"line_end":1029,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":210172,"byte_end":210179,"line_start":1030,"line_end":1030,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":210184,"byte_end":210187,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_until(stop_fut);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":210192,"byte_end":210237,"line_start":1032,"line_end":1032,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":210242,"byte_end":210245,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":210250,"byte_end":210320,"line_start":1034,"line_end":1034,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":210325,"byte_end":210334,"line_start":1035,"line_end":1035,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":210339,"byte_end":210346,"line_start":1036,"line_end":1036,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4090},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":211603,"byte_end":211611,"line_start":1078,"line_end":1078,"column_start":8,"column_end":16},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"fn for_each<Fut, F>(Self, F) -> ForEach<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":4030},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":210545,"byte_end":210616,"line_start":1045,"line_end":1045,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":210621,"byte_end":210664,"line_start":1046,"line_end":1046,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":210669,"byte_end":210672,"line_start":1047,"line_end":1047,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":210677,"byte_end":210752,"line_start":1048,"line_end":1048,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":210757,"byte_end":210827,"line_start":1049,"line_end":1049,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":210832,"byte_end":210870,"line_start":1050,"line_end":1050,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":210875,"byte_end":210878,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ The returned value is a `Future` where the `Output` type is `()`; it is","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":210883,"byte_end":210958,"line_start":1052,"line_end":1052,"column_start":5,"column_end":80}},{"value":"/ executed entirely for its side effects.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":210963,"byte_end":211006,"line_start":1053,"line_end":1053,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":211011,"byte_end":211014,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ To process each item in the stream and produce another stream instead","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":211019,"byte_end":211092,"line_start":1055,"line_end":1055,"column_start":5,"column_end":78}},{"value":"/ of a single future, use `then` instead.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":211097,"byte_end":211140,"line_start":1056,"line_end":1056,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":211145,"byte_end":211148,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":211153,"byte_end":211167,"line_start":1058,"line_end":1058,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":211172,"byte_end":211175,"line_start":1059,"line_end":1059,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":211180,"byte_end":211187,"line_start":1060,"line_end":1060,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":211192,"byte_end":211233,"line_start":1061,"line_end":1061,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":211238,"byte_end":211262,"line_start":1062,"line_end":1062,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":211267,"byte_end":211310,"line_start":1063,"line_end":1063,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":211315,"byte_end":211318,"line_start":1064,"line_end":1064,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":211323,"byte_end":211341,"line_start":1065,"line_end":1065,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":211346,"byte_end":211349,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":211354,"byte_end":211359,"line_start":1067,"line_end":1067,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(1).take(3).for_each(|item| {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":211364,"byte_end":211425,"line_start":1068,"line_end":1068,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":211430,"byte_end":211452,"line_start":1069,"line_end":1069,"column_start":5,"column_end":27}},{"value":"/         future::ready(())","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":211457,"byte_end":211486,"line_start":1070,"line_end":1070,"column_start":5,"column_end":34}},{"value":"/     });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":211491,"byte_end":211502,"line_start":1071,"line_end":1071,"column_start":5,"column_end":16}},{"value":"/     fut.await;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":211507,"byte_end":211525,"line_start":1072,"line_end":1072,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":211530,"byte_end":211535,"line_start":1073,"line_end":1073,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":211540,"byte_end":211543,"line_start":1074,"line_end":1074,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":211548,"byte_end":211569,"line_start":1075,"line_end":1075,"column_start":5,"column_end":26}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":211574,"byte_end":211583,"line_start":1076,"line_end":1076,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":211588,"byte_end":211595,"line_start":1077,"line_end":1077,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4093},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":213773,"byte_end":213792,"line_start":1134,"line_end":1134,"column_start":8,"column_end":27},"name":"for_each_concurrent","qualname":"::stream::stream::StreamExt::for_each_concurrent","value":"fn for_each_concurrent<Fut, F,\nimpl Into<Option<usize>>>(Self, impl Into<Option<usize>>, F)\n-> ForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Item) -> Fut,\nFut: Future<Output = ()>, Self: Sized,\nimpl Into<Option<usize>>: Into<Option<usize>>","parent":{"krate":0,"index":4030},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":211830,"byte_end":211901,"line_start":1087,"line_end":1087,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":211906,"byte_end":211980,"line_start":1088,"line_end":1088,"column_start":5,"column_end":79}},{"value":"/ available.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":211985,"byte_end":211999,"line_start":1089,"line_end":1089,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":212004,"byte_end":212007,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ This is similar to [`StreamExt::for_each`], but the futures","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":212012,"byte_end":212075,"line_start":1091,"line_end":1091,"column_start":5,"column_end":68}},{"value":"/ produced by the closure are run concurrently (but not in parallel--","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":212080,"byte_end":212151,"line_start":1092,"line_end":1092,"column_start":5,"column_end":76}},{"value":"/ this combinator does not introduce any threads).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":212156,"byte_end":212208,"line_start":1093,"line_end":1093,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":212213,"byte_end":212216,"line_start":1094,"line_end":1094,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":212221,"byte_end":212296,"line_start":1095,"line_end":1095,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":212301,"byte_end":212371,"line_start":1096,"line_end":1096,"column_start":5,"column_end":75}},{"value":"/ concurrently with the other futures produced by the closure.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":212376,"byte_end":212440,"line_start":1097,"line_end":1097,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":212445,"byte_end":212448,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ The first argument is an optional limit on the number of concurrent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":212453,"byte_end":212524,"line_start":1099,"line_end":1099,"column_start":5,"column_end":76}},{"value":"/ futures. If this limit is not `None`, no more than `limit` futures","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":212529,"byte_end":212599,"line_start":1100,"line_end":1100,"column_start":5,"column_end":75}},{"value":"/ will be run concurrently. The `limit` argument is of type","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":212604,"byte_end":212665,"line_start":1101,"line_end":1101,"column_start":5,"column_end":66}},{"value":"/ `Into<Option<usize>>`, and so can be provided as either `None`,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":212670,"byte_end":212737,"line_start":1102,"line_end":1102,"column_start":5,"column_end":72}},{"value":"/ `Some(10)`, or just `10`. Note: a limit of zero is interpreted as","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":212742,"byte_end":212811,"line_start":1103,"line_end":1103,"column_start":5,"column_end":74}},{"value":"/ no limit at all, and will have the same result as passing in `None`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":212816,"byte_end":212888,"line_start":1104,"line_end":1104,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":212893,"byte_end":212896,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":212901,"byte_end":212976,"line_start":1106,"line_end":1106,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":212981,"byte_end":213038,"line_start":1107,"line_end":1107,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":213043,"byte_end":213046,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":213051,"byte_end":213065,"line_start":1109,"line_end":1109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":213070,"byte_end":213073,"line_start":1110,"line_end":1110,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":213078,"byte_end":213085,"line_start":1111,"line_end":1111,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":213090,"byte_end":213131,"line_start":1112,"line_end":1112,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":213136,"byte_end":213170,"line_start":1113,"line_end":1113,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":213175,"byte_end":213218,"line_start":1114,"line_end":1114,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":213223,"byte_end":213226,"line_start":1115,"line_end":1115,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":213231,"byte_end":213271,"line_start":1116,"line_end":1116,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":213276,"byte_end":213316,"line_start":1117,"line_end":1117,"column_start":5,"column_end":45}},{"value":"/ let (tx3, rx3) = oneshot::channel();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":213321,"byte_end":213361,"line_start":1118,"line_end":1118,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":213366,"byte_end":213369,"line_start":1119,"line_end":1119,"column_start":5,"column_end":8}},{"value":"/ let fut = stream::iter(vec![rx1, rx2, rx3]).for_each_concurrent(","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":213374,"byte_end":213442,"line_start":1120,"line_end":1120,"column_start":5,"column_end":73}},{"value":"/     /* limit */ 2,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":213447,"byte_end":213469,"line_start":1121,"line_end":1121,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":213474,"byte_end":213499,"line_start":1122,"line_end":1122,"column_start":5,"column_end":30}},{"value":"/         rx.await.unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":213504,"byte_end":213534,"line_start":1123,"line_end":1123,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":213539,"byte_end":213548,"line_start":1124,"line_end":1124,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":213553,"byte_end":213559,"line_start":1125,"line_end":1125,"column_start":5,"column_end":11}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":213564,"byte_end":213590,"line_start":1126,"line_end":1126,"column_start":5,"column_end":31}},{"value":"/ tx2.send(()).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":213595,"byte_end":213621,"line_start":1127,"line_end":1127,"column_start":5,"column_end":31}},{"value":"/ tx3.send(()).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":213626,"byte_end":213652,"line_start":1128,"line_end":1128,"column_start":5,"column_end":31}},{"value":"/ fut.await;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":213657,"byte_end":213671,"line_start":1129,"line_end":1129,"column_start":5,"column_end":19}},{"value":"/ # })","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":213676,"byte_end":213684,"line_start":1130,"line_end":1130,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":213689,"byte_end":213696,"line_start":1131,"line_end":1131,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":213701,"byte_end":213735,"line_start":1132,"line_end":1132,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":213740,"byte_end":213765,"line_start":1133,"line_end":1133,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4097},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":214617,"byte_end":214621,"line_start":1163,"line_end":1163,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":4030},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":214109,"byte_end":214180,"line_start":1147,"line_end":1147,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":214185,"byte_end":214188,"line_start":1148,"line_end":1148,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":214193,"byte_end":214266,"line_start":1149,"line_end":1149,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":214271,"byte_end":214306,"line_start":1150,"line_end":1150,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":214311,"byte_end":214314,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":214319,"byte_end":214333,"line_start":1152,"line_end":1152,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":214338,"byte_end":214341,"line_start":1153,"line_end":1153,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":214346,"byte_end":214353,"line_start":1154,"line_end":1154,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":214358,"byte_end":214399,"line_start":1155,"line_end":1155,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":214404,"byte_end":214447,"line_start":1156,"line_end":1156,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":214452,"byte_end":214455,"line_start":1157,"line_end":1157,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).take(3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":214460,"byte_end":214506,"line_start":1158,"line_end":1158,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":214511,"byte_end":214514,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":214519,"byte_end":214583,"line_start":1160,"line_end":1160,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":214588,"byte_end":214597,"line_start":1161,"line_end":1161,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":214602,"byte_end":214609,"line_start":1162,"line_end":1162,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4098},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":215286,"byte_end":215290,"line_start":1186,"line_end":1186,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":4030},"children":[],"decl_id":null,"docs":" Creates a new stream which skips `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream which skips `n` items of the underlying stream.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":214759,"byte_end":214831,"line_start":1170,"line_end":1170,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":214836,"byte_end":214839,"line_start":1171,"line_end":1171,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been skipped from this stream then it will always","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":214844,"byte_end":214917,"line_start":1172,"line_end":1172,"column_start":5,"column_end":78}},{"value":"/ return the remaining items on this stream.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":214922,"byte_end":214968,"line_start":1173,"line_end":1173,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":214973,"byte_end":214976,"line_start":1174,"line_end":1174,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":214981,"byte_end":214995,"line_start":1175,"line_end":1175,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":215000,"byte_end":215003,"line_start":1176,"line_end":1176,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":215008,"byte_end":215015,"line_start":1177,"line_end":1177,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":215020,"byte_end":215061,"line_start":1178,"line_end":1178,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":215066,"byte_end":215109,"line_start":1179,"line_end":1179,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":215114,"byte_end":215117,"line_start":1180,"line_end":1180,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).skip(5);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":215122,"byte_end":215168,"line_start":1181,"line_end":1181,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":215173,"byte_end":215176,"line_start":1182,"line_end":1182,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":215181,"byte_end":215252,"line_start":1183,"line_end":1183,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":215257,"byte_end":215266,"line_start":1184,"line_end":1184,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":215271,"byte_end":215278,"line_start":1185,"line_end":1185,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4099},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":216911,"byte_end":216915,"line_start":1232,"line_end":1232,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":4030},"children":[],"decl_id":null,"docs":" Fuse a stream such that [`poll_next`](Stream::poll_next) will never\n again be called once it has finished. This method can be used to turn\n any `Stream` into a `FusedStream`.","sig":null,"attributes":[{"value":"/ Fuse a stream such that [`poll_next`](Stream::poll_next) will never","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":215428,"byte_end":215499,"line_start":1193,"line_end":1193,"column_start":5,"column_end":76}},{"value":"/ again be called once it has finished. This method can be used to turn","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":215504,"byte_end":215577,"line_start":1194,"line_end":1194,"column_start":5,"column_end":78}},{"value":"/ any `Stream` into a `FusedStream`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":215582,"byte_end":215620,"line_start":1195,"line_end":1195,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":215625,"byte_end":215628,"line_start":1196,"line_end":1196,"column_start":5,"column_end":8}},{"value":"/ Normally, once a stream has returned [`None`] from","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":215633,"byte_end":215687,"line_start":1197,"line_end":1197,"column_start":5,"column_end":59}},{"value":"/ [`poll_next`](Stream::poll_next) any further calls could exhibit bad","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":215692,"byte_end":215764,"line_start":1198,"line_end":1198,"column_start":5,"column_end":77}},{"value":"/ behavior such as block forever, panic, never return, etc. If it is known","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":215769,"byte_end":215845,"line_start":1199,"line_end":1199,"column_start":5,"column_end":81}},{"value":"/ that [`poll_next`](Stream::poll_next) may be called after stream","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":215850,"byte_end":215918,"line_start":1200,"line_end":1200,"column_start":5,"column_end":73}},{"value":"/ has already finished, then this method can be used to ensure that it has","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":215923,"byte_end":215999,"line_start":1201,"line_end":1201,"column_start":5,"column_end":81}},{"value":"/ defined semantics.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":216004,"byte_end":216026,"line_start":1202,"line_end":1202,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":216031,"byte_end":216034,"line_start":1203,"line_end":1203,"column_start":5,"column_end":8}},{"value":"/ The [`poll_next`](Stream::poll_next) method of a `fuse`d stream","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":216039,"byte_end":216106,"line_start":1204,"line_end":1204,"column_start":5,"column_end":72}},{"value":"/ is guaranteed to return [`None`] after the underlying stream has","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":216111,"byte_end":216179,"line_start":1205,"line_end":1205,"column_start":5,"column_end":73}},{"value":"/ finished.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":216184,"byte_end":216197,"line_start":1206,"line_end":1206,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":216202,"byte_end":216205,"line_start":1207,"line_end":1207,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":216210,"byte_end":216224,"line_start":1208,"line_end":1208,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":216229,"byte_end":216232,"line_start":1209,"line_end":1209,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":216237,"byte_end":216244,"line_start":1210,"line_end":1210,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::block_on_stream;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":216249,"byte_end":216292,"line_start":1211,"line_end":1211,"column_start":5,"column_end":48}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":216297,"byte_end":216340,"line_start":1212,"line_end":1212,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":216345,"byte_end":216373,"line_start":1213,"line_end":1213,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":216378,"byte_end":216381,"line_start":1214,"line_end":1214,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":216386,"byte_end":216404,"line_start":1215,"line_end":1215,"column_start":5,"column_end":23}},{"value":"/ let stream = stream::poll_fn(|_| {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":216409,"byte_end":216447,"line_start":1216,"line_end":1216,"column_start":5,"column_end":43}},{"value":"/     x += 1;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":216452,"byte_end":216467,"line_start":1217,"line_end":1217,"column_start":5,"column_end":20}},{"value":"/     match x {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":216472,"byte_end":216489,"line_start":1218,"line_end":1218,"column_start":5,"column_end":22}},{"value":"/         0..=2 => Poll::Ready(Some(x)),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":216494,"byte_end":216536,"line_start":1219,"line_end":1219,"column_start":5,"column_end":47}},{"value":"/         3 => Poll::Ready(None),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":216541,"byte_end":216576,"line_start":1220,"line_end":1220,"column_start":5,"column_end":40}},{"value":"/         _ => panic!(\"should not happen\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":216581,"byte_end":216625,"line_start":1221,"line_end":1221,"column_start":5,"column_end":49}},{"value":"/     }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":216630,"byte_end":216639,"line_start":1222,"line_end":1222,"column_start":5,"column_end":14}},{"value":"/ }).fuse();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":216644,"byte_end":216658,"line_start":1223,"line_end":1223,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":216663,"byte_end":216666,"line_start":1224,"line_end":1224,"column_start":5,"column_end":8}},{"value":"/ let mut iter = block_on_stream(stream);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":216671,"byte_end":216714,"line_start":1225,"line_end":1225,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some(1), iter.next());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":216719,"byte_end":216756,"line_start":1226,"line_end":1226,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Some(2), iter.next());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":216761,"byte_end":216798,"line_start":1227,"line_end":1227,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":216803,"byte_end":216837,"line_start":1228,"line_end":1228,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":216842,"byte_end":216876,"line_start":1229,"line_end":1229,"column_start":5,"column_end":39}},{"value":"/ // ...","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":216881,"byte_end":216891,"line_start":1230,"line_end":1230,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":216896,"byte_end":216903,"line_start":1231,"line_end":1231,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4100},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":217844,"byte_end":217850,"line_start":1265,"line_end":1265,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::stream::stream::StreamExt::by_ref","value":"fn by_ref<'_>(&'_ mut Self) -> &'_ mut Self","parent":{"krate":0,"index":4030},"children":[],"decl_id":null,"docs":" Borrows a stream, rather than consuming it.","sig":null,"attributes":[{"value":"/ Borrows a stream, rather than consuming it.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":217040,"byte_end":217087,"line_start":1239,"line_end":1239,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":217092,"byte_end":217095,"line_start":1240,"line_end":1240,"column_start":5,"column_end":8}},{"value":"/ This is useful to allow applying stream adaptors while still retaining","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":217100,"byte_end":217174,"line_start":1241,"line_end":1241,"column_start":5,"column_end":79}},{"value":"/ ownership of the original stream.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":217179,"byte_end":217216,"line_start":1242,"line_end":1242,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":217221,"byte_end":217224,"line_start":1243,"line_end":1243,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":217229,"byte_end":217243,"line_start":1244,"line_end":1244,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":217248,"byte_end":217251,"line_start":1245,"line_end":1245,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":217256,"byte_end":217263,"line_start":1246,"line_end":1246,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":217268,"byte_end":217309,"line_start":1247,"line_end":1247,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":217314,"byte_end":217357,"line_start":1248,"line_end":1248,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":217362,"byte_end":217365,"line_start":1249,"line_end":1249,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..5);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":217370,"byte_end":217410,"line_start":1250,"line_end":1250,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":217415,"byte_end":217418,"line_start":1251,"line_end":1251,"column_start":5,"column_end":8}},{"value":"/ let sum = stream.by_ref()","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":217423,"byte_end":217452,"line_start":1252,"line_end":1252,"column_start":5,"column_end":34}},{"value":"/                 .take(2)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":217457,"byte_end":217485,"line_start":1253,"line_end":1253,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":217490,"byte_end":217547,"line_start":1254,"line_end":1254,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":217552,"byte_end":217579,"line_start":1255,"line_end":1255,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":217584,"byte_end":217607,"line_start":1256,"line_end":1256,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":217612,"byte_end":217615,"line_start":1257,"line_end":1257,"column_start":5,"column_end":8}},{"value":"/ // You can use the stream again","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":217620,"byte_end":217655,"line_start":1258,"line_end":1258,"column_start":5,"column_end":40}},{"value":"/ let sum = stream.take(2)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":217660,"byte_end":217688,"line_start":1259,"line_end":1259,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":217693,"byte_end":217750,"line_start":1260,"line_end":1260,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":217755,"byte_end":217782,"line_start":1261,"line_end":1261,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 7);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":217787,"byte_end":217810,"line_start":1262,"line_end":1262,"column_start":5,"column_end":28}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":217815,"byte_end":217824,"line_start":1263,"line_end":1263,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":217829,"byte_end":217836,"line_start":1264,"line_end":1264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4101},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":219609,"byte_end":219621,"line_start":1310,"line_end":1310,"column_start":8,"column_end":20},"name":"catch_unwind","qualname":"::stream::stream::StreamExt::catch_unwind","value":"fn catch_unwind(Self) -> CatchUnwind<Self> where Self: Sized +\nstd::panic::UnwindSafe","parent":{"krate":0,"index":4030},"children":[],"decl_id":null,"docs":" Catches unwinding panics while polling the stream.","sig":null,"attributes":[{"value":"/ Catches unwinding panics while polling the stream.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":217901,"byte_end":217955,"line_start":1269,"line_end":1269,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":217960,"byte_end":217963,"line_start":1270,"line_end":1270,"column_start":5,"column_end":8}},{"value":"/ Caught panic (if any) will be the last element of the resulting stream.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":217968,"byte_end":218043,"line_start":1271,"line_end":1271,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":218048,"byte_end":218051,"line_start":1272,"line_end":1272,"column_start":5,"column_end":8}},{"value":"/ In general, panics within a stream can propagate all the way out to the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":218056,"byte_end":218131,"line_start":1273,"line_end":1273,"column_start":5,"column_end":80}},{"value":"/ task level. This combinator makes it possible to halt unwinding within","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":218136,"byte_end":218210,"line_start":1274,"line_end":1274,"column_start":5,"column_end":79}},{"value":"/ the stream itself. It's most commonly used within task executors. This","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":218215,"byte_end":218289,"line_start":1275,"line_end":1275,"column_start":5,"column_end":79}},{"value":"/ method should not be used for error handling.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":218294,"byte_end":218343,"line_start":1276,"line_end":1276,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":218348,"byte_end":218351,"line_start":1277,"line_end":1277,"column_start":5,"column_end":8}},{"value":"/ Note that this method requires the `UnwindSafe` bound from the standard","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":218356,"byte_end":218431,"line_start":1278,"line_end":1278,"column_start":5,"column_end":80}},{"value":"/ library. This isn't always applied automatically, and the standard","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":218436,"byte_end":218506,"line_start":1279,"line_end":1279,"column_start":5,"column_end":75}},{"value":"/ library provides an `AssertUnwindSafe` wrapper type to apply it","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":218511,"byte_end":218578,"line_start":1280,"line_end":1280,"column_start":5,"column_end":72}},{"value":"/ after-the fact. To assist using this method, the [`Stream`] trait is","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":218583,"byte_end":218655,"line_start":1281,"line_end":1281,"column_start":5,"column_end":77}},{"value":"/ also implemented for `AssertUnwindSafe<St>` where `St` implements","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":218660,"byte_end":218729,"line_start":1282,"line_end":1282,"column_start":5,"column_end":74}},{"value":"/ [`Stream`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":218734,"byte_end":218749,"line_start":1283,"line_end":1283,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":218754,"byte_end":218757,"line_start":1284,"line_end":1284,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":218762,"byte_end":218826,"line_start":1285,"line_end":1285,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":218831,"byte_end":218888,"line_start":1286,"line_end":1286,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":218893,"byte_end":218896,"line_start":1287,"line_end":1287,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":218901,"byte_end":218915,"line_start":1288,"line_end":1288,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":218920,"byte_end":218923,"line_start":1289,"line_end":1289,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":218928,"byte_end":218935,"line_start":1290,"line_end":1290,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":218940,"byte_end":218981,"line_start":1291,"line_end":1291,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":218986,"byte_end":219029,"line_start":1292,"line_end":1292,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":219034,"byte_end":219037,"line_start":1293,"line_end":1293,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Some(10), None, Some(11)]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":219042,"byte_end":219104,"line_start":1294,"line_end":1294,"column_start":5,"column_end":67}},{"value":"/ // Panic on second element","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":219109,"byte_end":219139,"line_start":1295,"line_end":1295,"column_start":5,"column_end":35}},{"value":"/ let stream_panicking = stream.map(|o| o.unwrap());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":219144,"byte_end":219198,"line_start":1296,"line_end":1296,"column_start":5,"column_end":59}},{"value":"/ // Collect all the results","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":219203,"byte_end":219233,"line_start":1297,"line_end":1297,"column_start":5,"column_end":35}},{"value":"/ let stream = stream_panicking.catch_unwind();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":219238,"byte_end":219287,"line_start":1298,"line_end":1298,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":219292,"byte_end":219295,"line_start":1299,"line_end":1299,"column_start":5,"column_end":8}},{"value":"/ let results: Vec<Result<i32, _>> = stream.collect().await;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":219300,"byte_end":219362,"line_start":1300,"line_end":1300,"column_start":5,"column_end":67}},{"value":"/ match results[0] {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":219367,"byte_end":219389,"line_start":1301,"line_end":1301,"column_start":5,"column_end":27}},{"value":"/     Ok(10) => {}","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":219394,"byte_end":219414,"line_start":1302,"line_end":1302,"column_start":5,"column_end":25}},{"value":"/     _ => panic!(\"unexpected result!\"),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":219419,"byte_end":219461,"line_start":1303,"line_end":1303,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":219466,"byte_end":219471,"line_start":1304,"line_end":1304,"column_start":5,"column_end":10}},{"value":"/ assert!(results[1].is_err());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":219476,"byte_end":219509,"line_start":1305,"line_end":1305,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(results.len(), 2);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":219514,"byte_end":219547,"line_start":1306,"line_end":1306,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":219552,"byte_end":219561,"line_start":1307,"line_end":1307,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":219566,"byte_end":219573,"line_start":1308,"line_end":1308,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":219578,"byte_end":219601,"line_start":1309,"line_end":1309,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":4102},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":219997,"byte_end":220002,"line_start":1322,"line_end":1322,"column_start":8,"column_end":13},"name":"boxed","qualname":"::stream::stream::StreamExt::boxed","value":"fn boxed<'a>(Self) -> BoxStream where Self: Sized + Send + 'a","parent":{"krate":0,"index":4030},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":219768,"byte_end":219809,"line_start":1317,"line_end":1317,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":219814,"byte_end":219817,"line_start":1318,"line_end":1318,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":219822,"byte_end":219897,"line_start":1319,"line_end":1319,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":219902,"byte_end":219959,"line_start":1320,"line_end":1320,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":219964,"byte_end":219989,"line_start":1321,"line_end":1321,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4104},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":220458,"byte_end":220469,"line_start":1336,"line_end":1336,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::stream::stream::StreamExt::boxed_local","value":"fn boxed_local<'a>(Self) -> LocalBoxStream where Self: Sized + 'a","parent":{"krate":0,"index":4030},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":220157,"byte_end":220198,"line_start":1329,"line_end":1329,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":220203,"byte_end":220206,"line_start":1330,"line_end":1330,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":220211,"byte_end":220270,"line_start":1331,"line_end":1331,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":220275,"byte_end":220278,"line_start":1332,"line_end":1332,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":220283,"byte_end":220358,"line_start":1333,"line_end":1333,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":220363,"byte_end":220420,"line_start":1334,"line_end":1334,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":220425,"byte_end":220450,"line_start":1335,"line_end":1335,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4106},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":221362,"byte_end":221370,"line_start":1357,"line_end":1357,"column_start":8,"column_end":16},"name":"buffered","qualname":"::stream::stream::StreamExt::buffered","value":"fn buffered(Self, usize) -> Buffered<Self> where Self::Item: Future,\nSelf: Sized","parent":{"krate":0,"index":4030},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures.","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":220622,"byte_end":220685,"line_start":1343,"line_end":1343,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":220690,"byte_end":220693,"line_start":1344,"line_end":1344,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":220698,"byte_end":220773,"line_start":1345,"line_end":1345,"column_start":5,"column_end":80}},{"value":"/ will buffer up to at most `n` futures and then return the outputs in the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":220778,"byte_end":220854,"line_start":1346,"line_end":1346,"column_start":5,"column_end":81}},{"value":"/ same order as the underlying stream. No more than `n` futures will be","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":220859,"byte_end":220932,"line_start":1347,"line_end":1347,"column_start":5,"column_end":78}},{"value":"/ buffered at any point in time, and less than `n` may also be buffered","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":220937,"byte_end":221010,"line_start":1348,"line_end":1348,"column_start":5,"column_end":78}},{"value":"/ depending on the state of each future.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":221015,"byte_end":221057,"line_start":1349,"line_end":1349,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":221062,"byte_end":221065,"line_start":1350,"line_end":1350,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":221070,"byte_end":221135,"line_start":1351,"line_end":1351,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":221140,"byte_end":221143,"line_start":1352,"line_end":1352,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":221148,"byte_end":221223,"line_start":1353,"line_end":1353,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":221228,"byte_end":221285,"line_start":1354,"line_end":1354,"column_start":5,"column_end":62}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":221290,"byte_end":221324,"line_start":1355,"line_end":1355,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":221329,"byte_end":221354,"line_start":1356,"line_end":1356,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4107},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":223050,"byte_end":223066,"line_start":1402,"line_end":1402,"column_start":8,"column_end":24},"name":"buffer_unordered","qualname":"::stream::stream::StreamExt::buffer_unordered","value":"fn buffer_unordered(Self, usize) -> BufferUnordered<Self> where\nSelf::Item: Future, Self: Sized","parent":{"krate":0,"index":4030},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures (unordered).","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures (unordered).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":221564,"byte_end":221639,"line_start":1365,"line_end":1365,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":221644,"byte_end":221647,"line_start":1366,"line_end":1366,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":221652,"byte_end":221727,"line_start":1367,"line_end":1367,"column_start":5,"column_end":80}},{"value":"/ will buffer up to `n` futures and then return the outputs in the order","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":221732,"byte_end":221806,"line_start":1368,"line_end":1368,"column_start":5,"column_end":79}},{"value":"/ in which they complete. No more than `n` futures will be buffered at","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":221811,"byte_end":221883,"line_start":1369,"line_end":1369,"column_start":5,"column_end":77}},{"value":"/ any point in time, and less than `n` may also be buffered depending on","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":221888,"byte_end":221962,"line_start":1370,"line_end":1370,"column_start":5,"column_end":79}},{"value":"/ the state of each future.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":221967,"byte_end":221996,"line_start":1371,"line_end":1371,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":222001,"byte_end":222004,"line_start":1372,"line_end":1372,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":222009,"byte_end":222074,"line_start":1373,"line_end":1373,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":222079,"byte_end":222082,"line_start":1374,"line_end":1374,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":222087,"byte_end":222162,"line_start":1375,"line_end":1375,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":222167,"byte_end":222224,"line_start":1376,"line_end":1376,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":222229,"byte_end":222232,"line_start":1377,"line_end":1377,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":222237,"byte_end":222251,"line_start":1378,"line_end":1378,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":222256,"byte_end":222259,"line_start":1379,"line_end":1379,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":222264,"byte_end":222271,"line_start":1380,"line_end":1380,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":222276,"byte_end":222317,"line_start":1381,"line_end":1381,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":222322,"byte_end":222356,"line_start":1382,"line_end":1382,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":222361,"byte_end":222404,"line_start":1383,"line_end":1383,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":222409,"byte_end":222412,"line_start":1384,"line_end":1384,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":222417,"byte_end":222467,"line_start":1385,"line_end":1385,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":222472,"byte_end":222522,"line_start":1386,"line_end":1386,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":222527,"byte_end":222530,"line_start":1387,"line_end":1387,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![recv_one, recv_two]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":222535,"byte_end":222602,"line_start":1388,"line_end":1388,"column_start":5,"column_end":72}},{"value":"/ let mut buffered = stream_of_futures.buffer_unordered(10);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":222607,"byte_end":222669,"line_start":1389,"line_end":1389,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":222674,"byte_end":222677,"line_start":1390,"line_end":1390,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":222682,"byte_end":222707,"line_start":1391,"line_end":1391,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":222712,"byte_end":222766,"line_start":1392,"line_end":1392,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":222771,"byte_end":222774,"line_start":1393,"line_end":1393,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":222779,"byte_end":222804,"line_start":1394,"line_end":1394,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":222809,"byte_end":222863,"line_start":1395,"line_end":1395,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":222868,"byte_end":222871,"line_start":1396,"line_end":1396,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":222876,"byte_end":222920,"line_start":1397,"line_end":1397,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":222925,"byte_end":222961,"line_start":1398,"line_end":1398,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":222966,"byte_end":222973,"line_start":1399,"line_end":1399,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":222978,"byte_end":223012,"line_start":1400,"line_end":1400,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":223017,"byte_end":223042,"line_start":1401,"line_end":1401,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4108},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":223962,"byte_end":223965,"line_start":1432,"line_end":1432,"column_start":8,"column_end":11},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"fn zip<St>(Self, St) -> Zip<Self, St> where St: Stream, Self: Sized","parent":{"krate":0,"index":4030},"children":[],"decl_id":null,"docs":" An adapter for zipping two streams together.","sig":null,"attributes":[{"value":"/ An adapter for zipping two streams together.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":223274,"byte_end":223322,"line_start":1410,"line_end":1410,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":223327,"byte_end":223330,"line_start":1411,"line_end":1411,"column_start":5,"column_end":8}},{"value":"/ The zipped stream waits for both streams to produce an item, and then","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":223335,"byte_end":223408,"line_start":1412,"line_end":1412,"column_start":5,"column_end":78}},{"value":"/ returns that pair. If either stream ends then the zipped stream will","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":223413,"byte_end":223485,"line_start":1413,"line_end":1413,"column_start":5,"column_end":77}},{"value":"/ also end.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":223490,"byte_end":223503,"line_start":1414,"line_end":1414,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":223508,"byte_end":223511,"line_start":1415,"line_end":1415,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":223516,"byte_end":223530,"line_start":1416,"line_end":1416,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":223535,"byte_end":223538,"line_start":1417,"line_end":1417,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":223543,"byte_end":223550,"line_start":1418,"line_end":1418,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":223555,"byte_end":223596,"line_start":1419,"line_end":1419,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":223601,"byte_end":223644,"line_start":1420,"line_end":1420,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":223649,"byte_end":223652,"line_start":1421,"line_end":1421,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(1..=3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":223657,"byte_end":223695,"line_start":1422,"line_end":1422,"column_start":5,"column_end":43}},{"value":"/ let stream2 = stream::iter(5..=10);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":223700,"byte_end":223739,"line_start":1423,"line_end":1423,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":223744,"byte_end":223747,"line_start":1424,"line_end":1424,"column_start":5,"column_end":8}},{"value":"/ let vec = stream1.zip(stream2)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":223752,"byte_end":223786,"line_start":1425,"line_end":1425,"column_start":5,"column_end":39}},{"value":"/                  .collect::<Vec<_>>()","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":223791,"byte_end":223832,"line_start":1426,"line_end":1426,"column_start":5,"column_end":46}},{"value":"/                  .await;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":223837,"byte_end":223865,"line_start":1427,"line_end":1427,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(vec![(1, 5), (2, 6), (3, 7)], vec);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":223870,"byte_end":223920,"line_start":1428,"line_end":1428,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":223925,"byte_end":223934,"line_start":1429,"line_end":1429,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":223939,"byte_end":223946,"line_start":1430,"line_end":1430,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":223951,"byte_end":223954,"line_start":1431,"line_end":1431,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4110},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":224873,"byte_end":224878,"line_start":1463,"line_end":1463,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"fn chain<St>(Self, St) -> Chain<Self, St> where St: Stream<Item = Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":4030},"children":[],"decl_id":null,"docs":" Adapter for chaining two streams.","sig":null,"attributes":[{"value":"/ Adapter for chaining two streams.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":224146,"byte_end":224183,"line_start":1440,"line_end":1440,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":224188,"byte_end":224191,"line_start":1441,"line_end":1441,"column_start":5,"column_end":8}},{"value":"/ The resulting stream emits elements from the first stream, and when","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":224196,"byte_end":224267,"line_start":1442,"line_end":1442,"column_start":5,"column_end":76}},{"value":"/ first stream reaches the end, emits the elements from the second stream.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":224272,"byte_end":224348,"line_start":1443,"line_end":1443,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":224353,"byte_end":224356,"line_start":1444,"line_end":1444,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":224361,"byte_end":224368,"line_start":1445,"line_end":1445,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":224373,"byte_end":224414,"line_start":1446,"line_end":1446,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":224419,"byte_end":224462,"line_start":1447,"line_end":1447,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":224467,"byte_end":224470,"line_start":1448,"line_end":1448,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(vec![Ok(10), Err(false)]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":224475,"byte_end":224532,"line_start":1449,"line_end":1449,"column_start":5,"column_end":62}},{"value":"/ let stream2 = stream::iter(vec![Err(true), Ok(20)]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":224537,"byte_end":224593,"line_start":1450,"line_end":1450,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":224598,"byte_end":224601,"line_start":1451,"line_end":1451,"column_start":5,"column_end":8}},{"value":"/ let stream = stream1.chain(stream2);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":224606,"byte_end":224646,"line_start":1452,"line_end":1452,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":224651,"byte_end":224654,"line_start":1453,"line_end":1453,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = stream.collect().await;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":224659,"byte_end":224707,"line_start":1454,"line_end":1454,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(result, vec![","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":224712,"byte_end":224740,"line_start":1455,"line_end":1455,"column_start":5,"column_end":33}},{"value":"/     Ok(10),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":224745,"byte_end":224760,"line_start":1456,"line_end":1456,"column_start":5,"column_end":20}},{"value":"/     Err(false),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":224765,"byte_end":224784,"line_start":1457,"line_end":1457,"column_start":5,"column_end":24}},{"value":"/     Err(true),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":224789,"byte_end":224807,"line_start":1458,"line_end":1458,"column_start":5,"column_end":23}},{"value":"/     Ok(20),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":224812,"byte_end":224827,"line_start":1459,"line_end":1459,"column_start":5,"column_end":20}},{"value":"/ ]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":224832,"byte_end":224839,"line_start":1460,"line_end":1460,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":224844,"byte_end":224853,"line_start":1461,"line_end":1461,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":224858,"byte_end":224865,"line_start":1462,"line_end":1462,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4112},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":225216,"byte_end":225224,"line_start":1474,"line_end":1474,"column_start":8,"column_end":16},"name":"peekable","qualname":"::stream::stream::StreamExt::peekable","value":"fn peekable(Self) -> Peekable<Self> where Self: Sized","parent":{"krate":0,"index":4030},"children":[],"decl_id":null,"docs":" Creates a new stream which exposes a `peek` method.","sig":null,"attributes":[{"value":"/ Creates a new stream which exposes a `peek` method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":225070,"byte_end":225125,"line_start":1471,"line_end":1471,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":225130,"byte_end":225133,"line_start":1472,"line_end":1472,"column_start":5,"column_end":8}},{"value":"/ Calling `peek` returns a reference to the next item in the stream.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":225138,"byte_end":225208,"line_start":1473,"line_end":1473,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":4113},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":226259,"byte_end":226265,"line_start":1500,"line_end":1500,"column_start":8,"column_end":14},"name":"chunks","qualname":"::stream::stream::StreamExt::chunks","value":"fn chunks(Self, usize) -> Chunks<Self> where Self: Sized","parent":{"krate":0,"index":4030},"children":[],"decl_id":null,"docs":" An adaptor for chunking up items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up items of the stream inside a vector.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":225357,"byte_end":225424,"line_start":1481,"line_end":1481,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":225429,"byte_end":225432,"line_start":1482,"line_end":1482,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull items from this stream and buffer","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":225437,"byte_end":225511,"line_start":1483,"line_end":1483,"column_start":5,"column_end":79}},{"value":"/ them into a local vector. At most `capacity` items will get buffered","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":225516,"byte_end":225588,"line_start":1484,"line_end":1484,"column_start":5,"column_end":77}},{"value":"/ before they're yielded from the returned stream.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":225593,"byte_end":225645,"line_start":1485,"line_end":1485,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":225650,"byte_end":225653,"line_start":1486,"line_end":1486,"column_start":5,"column_end":8}},{"value":"/ Note that the vectors returned from this iterator may not always have","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":225658,"byte_end":225731,"line_start":1487,"line_end":1487,"column_start":5,"column_end":78}},{"value":"/ `capacity` elements. If the underlying stream ended and only a partial","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":225736,"byte_end":225810,"line_start":1488,"line_end":1488,"column_start":5,"column_end":79}},{"value":"/ vector was created, it'll be returned. Additionally if an error happens","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":225815,"byte_end":225890,"line_start":1489,"line_end":1489,"column_start":5,"column_end":80}},{"value":"/ from the underlying stream then the currently buffered items will be","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":225895,"byte_end":225967,"line_start":1490,"line_end":1490,"column_start":5,"column_end":77}},{"value":"/ yielded.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":225972,"byte_end":225984,"line_start":1491,"line_end":1491,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":225989,"byte_end":225992,"line_start":1492,"line_end":1492,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":225997,"byte_end":226072,"line_start":1493,"line_end":1493,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":226077,"byte_end":226134,"line_start":1494,"line_end":1494,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":226139,"byte_end":226142,"line_start":1495,"line_end":1495,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":226147,"byte_end":226159,"line_start":1496,"line_end":1496,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":226164,"byte_end":226167,"line_start":1497,"line_end":1497,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":226172,"byte_end":226221,"line_start":1498,"line_end":1498,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":226226,"byte_end":226251,"line_start":1499,"line_end":1499,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4114},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":227362,"byte_end":227374,"line_start":1526,"line_end":1526,"column_start":8,"column_end":20},"name":"ready_chunks","qualname":"::stream::stream::StreamExt::ready_chunks","value":"fn ready_chunks(Self, usize) -> ReadyChunks<Self> where Self: Sized","parent":{"krate":0,"index":4030},"children":[],"decl_id":null,"docs":" An adaptor for chunking up ready items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up ready items of the stream inside a vector.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":226426,"byte_end":226499,"line_start":1507,"line_end":1507,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":226504,"byte_end":226507,"line_start":1508,"line_end":1508,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull ready items from this stream and","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":226512,"byte_end":226585,"line_start":1509,"line_end":1509,"column_start":5,"column_end":78}},{"value":"/ buffer them into a local vector. At most `capacity` items will get","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":226590,"byte_end":226660,"line_start":1510,"line_end":1510,"column_start":5,"column_end":75}},{"value":"/ buffered before they're yielded from the returned stream. If underlying","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":226665,"byte_end":226740,"line_start":1511,"line_end":1511,"column_start":5,"column_end":80}},{"value":"/ stream returns `Poll::Pending`, and collected chunk is not empty, it will","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":226745,"byte_end":226822,"line_start":1512,"line_end":1512,"column_start":5,"column_end":82}},{"value":"/ be immediately returned.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":226827,"byte_end":226855,"line_start":1513,"line_end":1513,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":226860,"byte_end":226863,"line_start":1514,"line_end":1514,"column_start":5,"column_end":8}},{"value":"/ If the underlying stream ended and only a partial vector was created,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":226868,"byte_end":226941,"line_start":1515,"line_end":1515,"column_start":5,"column_end":78}},{"value":"/ it'll be returned. Additionally if an error happens from the underlying","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":226946,"byte_end":227021,"line_start":1516,"line_end":1516,"column_start":5,"column_end":80}},{"value":"/ stream then the currently buffered items will be yielded.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":227026,"byte_end":227087,"line_start":1517,"line_end":1517,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":227092,"byte_end":227095,"line_start":1518,"line_end":1518,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":227100,"byte_end":227175,"line_start":1519,"line_end":1519,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":227180,"byte_end":227237,"line_start":1520,"line_end":1520,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":227242,"byte_end":227245,"line_start":1521,"line_end":1521,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":227250,"byte_end":227262,"line_start":1522,"line_end":1522,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":227267,"byte_end":227270,"line_start":1523,"line_end":1523,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":227275,"byte_end":227324,"line_start":1524,"line_end":1524,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":227329,"byte_end":227354,"line_start":1525,"line_end":1525,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4115},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":230171,"byte_end":230178,"line_start":1586,"line_end":1586,"column_start":8,"column_end":15},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"fn inspect<F>(Self, F) -> Inspect<Self, F> where\nF: for<'_> FnMut(&'_ Self::Item) -> (), Self: Sized","parent":{"krate":0,"index":4030},"children":[],"decl_id":null,"docs":" Do something with each item of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with each item of this stream, afterwards passing it on.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":229868,"byte_end":229941,"line_start":1581,"line_end":1581,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":229946,"byte_end":229949,"line_start":1582,"line_end":1582,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Iterator::inspect` method in the standard","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":229954,"byte_end":230023,"line_start":1583,"line_end":1583,"column_start":5,"column_end":74}},{"value":"/ library where it allows easily inspecting each value as it passes","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":230028,"byte_end":230097,"line_start":1584,"line_end":1584,"column_start":5,"column_end":74}},{"value":"/ through the stream, for example to debug what's going on.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":230102,"byte_end":230163,"line_start":1585,"line_end":1585,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":4117},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":230634,"byte_end":230645,"line_start":1599,"line_end":1599,"column_start":8,"column_end":19},"name":"left_stream","qualname":"::stream::stream::StreamExt::left_stream","value":"fn left_stream<B>(Self) -> Either<Self, B> where B: Stream<Item = Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":4030},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the left-hand variant","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":230355,"byte_end":230430,"line_start":1594,"line_end":1594,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":230435,"byte_end":230456,"line_start":1595,"line_end":1595,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":230461,"byte_end":230464,"line_start":1596,"line_end":1596,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_stream` method to write `if`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":230469,"byte_end":230549,"line_start":1597,"line_end":1597,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":230554,"byte_end":230626,"line_start":1598,"line_end":1598,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":4119},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":231098,"byte_end":231110,"line_start":1612,"line_end":1612,"column_start":8,"column_end":20},"name":"right_stream","qualname":"::stream::stream::StreamExt::right_stream","value":"fn right_stream<B>(Self) -> Either<B, Self> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":4030},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":230819,"byte_end":230895,"line_start":1607,"line_end":1607,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":230900,"byte_end":230921,"line_start":1608,"line_end":1608,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":230926,"byte_end":230929,"line_start":1609,"line_end":1609,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_stream` method to write `if`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":230934,"byte_end":231013,"line_start":1610,"line_end":1610,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":231018,"byte_end":231090,"line_start":1611,"line_end":1611,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":4121},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":231386,"byte_end":231401,"line_start":1622,"line_end":1622,"column_start":8,"column_end":23},"name":"poll_next_unpin","qualname":"::stream::stream::StreamExt::poll_next_unpin","value":"fn poll_next_unpin<'_, '_, '_>(&'_ mut Self, &'_ mut Context)\n-> Poll<Option<Self::Item>> where Self: Unpin","parent":{"krate":0,"index":4030},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Stream::poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Stream::poll_next`] on [`Unpin`]","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":231285,"byte_end":231356,"line_start":1620,"line_end":1620,"column_start":5,"column_end":76}},{"value":"/ stream types.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":231361,"byte_end":231378,"line_start":1621,"line_end":1621,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":4122},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":233545,"byte_end":233561,"line_start":1679,"line_end":1679,"column_start":8,"column_end":24},"name":"select_next_some","qualname":"::stream::stream::StreamExt::select_next_some","value":"fn select_next_some<'_>(&'_ mut Self) -> SelectNextSome where Self: Unpin +\nFusedStream","parent":{"krate":0,"index":4030},"children":[],"decl_id":null,"docs":" Returns a [`Future`] that resolves when the next item in this stream is\n ready.","sig":null,"attributes":[{"value":"/ Returns a [`Future`] that resolves when the next item in this stream is","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":231548,"byte_end":231623,"line_start":1629,"line_end":1629,"column_start":5,"column_end":80}},{"value":"/ ready.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":231628,"byte_end":231638,"line_start":1630,"line_end":1630,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":231643,"byte_end":231646,"line_start":1631,"line_end":1631,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`][StreamExt::next] method, but it won't","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":231651,"byte_end":231724,"line_start":1632,"line_end":1632,"column_start":5,"column_end":78}},{"value":"/ resolve to [`None`] if used on an empty [`Stream`]. Instead, the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":231729,"byte_end":231797,"line_start":1633,"line_end":1633,"column_start":5,"column_end":73}},{"value":"/ returned future type will return `true` from","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":231802,"byte_end":231850,"line_start":1634,"line_end":1634,"column_start":5,"column_end":53}},{"value":"/ [`FusedFuture::is_terminated`][] when the [`Stream`] is empty, allowing","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":231855,"byte_end":231930,"line_start":1635,"line_end":1635,"column_start":5,"column_end":80}},{"value":"/ [`select_next_some`][StreamExt::select_next_some] to be easily used with","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":231935,"byte_end":232011,"line_start":1636,"line_end":1636,"column_start":5,"column_end":81}},{"value":"/ the [`select!`] macro.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":232016,"byte_end":232042,"line_start":1637,"line_end":1637,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":232047,"byte_end":232050,"line_start":1638,"line_end":1638,"column_start":5,"column_end":8}},{"value":"/ If the future is polled after this [`Stream`] is empty it will panic.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":232055,"byte_end":232128,"line_start":1639,"line_end":1639,"column_start":5,"column_end":78}},{"value":"/ Using the future with a [`FusedFuture`][]-aware primitive like the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":232133,"byte_end":232203,"line_start":1640,"line_end":1640,"column_start":5,"column_end":75}},{"value":"/ [`select!`] macro will prevent this.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":232208,"byte_end":232248,"line_start":1641,"line_end":1641,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":232253,"byte_end":232256,"line_start":1642,"line_end":1642,"column_start":5,"column_end":8}},{"value":"/ [`FusedFuture`]: futures_core::future::FusedFuture","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":232261,"byte_end":232315,"line_start":1643,"line_end":1643,"column_start":5,"column_end":59}},{"value":"/ [`FusedFuture::is_terminated`]: futures_core::future::FusedFuture::is_terminated","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":232320,"byte_end":232404,"line_start":1644,"line_end":1644,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":232409,"byte_end":232412,"line_start":1645,"line_end":1645,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":232417,"byte_end":232431,"line_start":1646,"line_end":1646,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":232436,"byte_end":232439,"line_start":1647,"line_end":1647,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":232444,"byte_end":232451,"line_start":1648,"line_end":1648,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":232456,"byte_end":232497,"line_start":1649,"line_end":1649,"column_start":5,"column_end":46}},{"value":"/ use futures::{future, select};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":232502,"byte_end":232536,"line_start":1650,"line_end":1650,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{StreamExt, FuturesUnordered};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":232541,"byte_end":232596,"line_start":1651,"line_end":1651,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":232601,"byte_end":232604,"line_start":1652,"line_end":1652,"column_start":5,"column_end":8}},{"value":"/ let mut fut = future::ready(1);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":232609,"byte_end":232644,"line_start":1653,"line_end":1653,"column_start":5,"column_end":40}},{"value":"/ let mut async_tasks = FuturesUnordered::new();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":232649,"byte_end":232699,"line_start":1654,"line_end":1654,"column_start":5,"column_end":55}},{"value":"/ let mut total = 0;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":232704,"byte_end":232726,"line_start":1655,"line_end":1655,"column_start":5,"column_end":27}},{"value":"/ loop {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":232731,"byte_end":232741,"line_start":1656,"line_end":1656,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":232746,"byte_end":232763,"line_start":1657,"line_end":1657,"column_start":5,"column_end":22}},{"value":"/         num = fut => {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":232768,"byte_end":232794,"line_start":1658,"line_end":1658,"column_start":5,"column_end":31}},{"value":"/             // First, the `ready` future completes.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":232799,"byte_end":232854,"line_start":1659,"line_end":1659,"column_start":5,"column_end":60}},{"value":"/             total += num;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":232859,"byte_end":232888,"line_start":1660,"line_end":1660,"column_start":5,"column_end":34}},{"value":"/             // Then we spawn a new task onto `async_tasks`,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":232893,"byte_end":232956,"line_start":1661,"line_end":1661,"column_start":5,"column_end":68}},{"value":"/             async_tasks.push(async { 5 });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":232961,"byte_end":233007,"line_start":1662,"line_end":1662,"column_start":5,"column_end":51}},{"value":"/         },","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":233012,"byte_end":233026,"line_start":1663,"line_end":1663,"column_start":5,"column_end":19}},{"value":"/         // On the next iteration of the loop, the task we spawned","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":233031,"byte_end":233100,"line_start":1664,"line_end":1664,"column_start":5,"column_end":74}},{"value":"/         // completes.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":233105,"byte_end":233130,"line_start":1665,"line_end":1665,"column_start":5,"column_end":30}},{"value":"/         num = async_tasks.select_next_some() => {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":233135,"byte_end":233188,"line_start":1666,"line_end":1666,"column_start":5,"column_end":58}},{"value":"/             total += num;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":233193,"byte_end":233222,"line_start":1667,"line_end":1667,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":233227,"byte_end":233240,"line_start":1668,"line_end":1668,"column_start":5,"column_end":18}},{"value":"/         // Finally, both the `ready` future and `async_tasks` have","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":233245,"byte_end":233315,"line_start":1669,"line_end":1669,"column_start":5,"column_end":75}},{"value":"/         // finished, so we enter the `complete` branch.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":233320,"byte_end":233379,"line_start":1670,"line_end":1670,"column_start":5,"column_end":64}},{"value":"/         complete => break,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":233384,"byte_end":233414,"line_start":1671,"line_end":1671,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":233419,"byte_end":233428,"line_start":1672,"line_end":1672,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":233433,"byte_end":233438,"line_start":1673,"line_end":1673,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(total, 6);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":233443,"byte_end":233468,"line_start":1674,"line_end":1674,"column_start":5,"column_end":30}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":233473,"byte_end":233482,"line_start":1675,"line_end":1675,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":233487,"byte_end":233494,"line_start":1676,"line_end":1676,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":233499,"byte_end":233502,"line_start":1677,"line_end":1677,"column_start":5,"column_end":8}},{"value":"/ [`select!`]: crate::select","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":233507,"byte_end":233537,"line_start":1678,"line_end":1678,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":13760},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":385371,"byte_end":385378,"line_start":14,"line_end":14,"column_start":16,"column_end":23},"name":"AndThen","qualname":"::stream::try_stream::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":13764},{"krate":0,"index":13765},{"krate":0,"index":13766}],"decl_id":null,"docs":" Stream for the [`and_then`](super::TryStreamExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4345},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":385603,"byte_end":385606,"line_start":28,"line_end":28,"column_start":8,"column_end":11},"name":"fmt","qualname":"<AndThen<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4356},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":386282,"byte_end":386291,"line_start":57,"line_end":57,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<AndThen<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4357},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":386858,"byte_end":386867,"line_start":73,"line_end":73,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<AndThen<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4362},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":387394,"byte_end":387407,"line_start":91,"line_end":91,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<AndThen<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13824},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":347493,"byte_end":347500,"line_start":30,"line_end":30,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::stream::try_stream::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":13827}],"decl_id":null,"docs":" Stream for the [`err_into`](super::TryStreamExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13893},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":347748,"byte_end":347757,"line_start":37,"line_end":37,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::stream::try_stream::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":13896}],"decl_id":null,"docs":" Stream for the [`inspect_ok`](super::TryStreamExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":13962},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":348058,"byte_end":348068,"line_start":44,"line_end":44,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::stream::try_stream::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":13965}],"decl_id":null,"docs":" Stream for the [`inspect_err`](super::TryStreamExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14028},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_stream.rs","byte_start":388113,"byte_end":388123,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"IntoStream","qualname":"::stream::try_stream::into_stream::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":14030}],"decl_id":null,"docs":" Stream for the [`into_stream`](super::TryStreamExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4395},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_stream.rs","byte_start":388410,"byte_end":388423,"line_start":28,"line_end":28,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<IntoStream<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4399},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_stream.rs","byte_start":388599,"byte_end":388608,"line_start":37,"line_end":37,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<IntoStream<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_stream.rs","byte_start":388582,"byte_end":388591,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4400},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_stream.rs","byte_start":388745,"byte_end":388754,"line_start":41,"line_end":41,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IntoStream<St> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14071},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":348494,"byte_end":348499,"line_start":55,"line_end":55,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::stream::try_stream::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":14074}],"decl_id":null,"docs":" Stream for the [`map_ok`](super::TryStreamExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14140},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":348776,"byte_end":348782,"line_start":62,"line_end":62,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::stream::try_stream::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":14143}],"decl_id":null,"docs":" Stream for the [`map_err`](super::TryStreamExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":14206},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":389471,"byte_end":389477,"line_start":14,"line_end":14,"column_start":16,"column_end":22},"name":"OrElse","qualname":"::stream::try_stream::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":14210},{"krate":0,"index":14211},{"krate":0,"index":14212}],"decl_id":null,"docs":" Stream for the [`or_else`](super::TryStreamExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4441},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":389701,"byte_end":389704,"line_start":28,"line_end":28,"column_start":8,"column_end":11},"name":"fmt","qualname":"<OrElse<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4452},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":390371,"byte_end":390380,"line_start":57,"line_end":57,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<OrElse<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4453},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":391084,"byte_end":391093,"line_start":77,"line_end":77,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<OrElse<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4458},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":391616,"byte_end":391629,"line_start":95,"line_end":95,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<OrElse<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14267},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":392306,"byte_end":392313,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":14270}],"decl_id":null,"docs":" Future for the [`try_next`](super::TryStreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::TryStreamExt::try_next) method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":392139,"byte_end":392209,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":392227,"byte_end":392294,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":4498},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":392650,"byte_end":392663,"line_start":23,"line_end":23,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryNext as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4502},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":392853,"byte_end":392857,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryNext as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14275},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each.rs","byte_start":393398,"byte_end":393408,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"TryForEach","qualname":"::stream::try_stream::try_for_each::TryForEach","value":"TryForEach {  }","parent":null,"children":[{"krate":0,"index":14279},{"krate":0,"index":14280},{"krate":0,"index":14281}],"decl_id":null,"docs":" Future for the [`try_for_each`](super::TryStreamExt::try_for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4540},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each.rs","byte_start":393636,"byte_end":393639,"line_start":26,"line_end":26,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryForEach<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4551},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each.rs","byte_start":394294,"byte_end":394298,"line_start":53,"line_end":53,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryForEach<St, Fut, F> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14332},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":395294,"byte_end":395303,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"TryFilter","qualname":"::stream::try_stream::try_filter::TryFilter","value":"TryFilter {  }","parent":null,"children":[{"krate":0,"index":14336},{"krate":0,"index":14337},{"krate":0,"index":14338},{"krate":0,"index":14339}],"decl_id":null,"docs":" Stream for the [`try_filter`](super::TryStreamExt::try_filter)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4592},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":395641,"byte_end":395644,"line_start":33,"line_end":33,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryFilter<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4602},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":396316,"byte_end":396329,"line_start":59,"line_end":59,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryFilter<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4608},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":396612,"byte_end":396621,"line_start":72,"line_end":72,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryFilter<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4609},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":397360,"byte_end":397369,"line_start":92,"line_end":92,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<TryFilter<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14397},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":398431,"byte_end":398443,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryFilterMap","qualname":"::stream::try_stream::try_filter_map::TryFilterMap","value":"TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":14401},{"krate":0,"index":14402},{"krate":0,"index":14403}],"decl_id":null,"docs":" Stream for the [`try_filter_map`](super::TryStreamExt::try_filter_map)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4650},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":398674,"byte_end":398677,"line_start":29,"line_end":29,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryFilterMap<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4661},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":399271,"byte_end":399284,"line_start":51,"line_end":51,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryFilterMap<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4668},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":399586,"byte_end":399595,"line_start":64,"line_end":64,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryFilterMap<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4669},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":400435,"byte_end":400444,"line_start":86,"line_end":86,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<TryFilterMap<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14458},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_flatten.rs","byte_start":401441,"byte_end":401451,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryFlatten","qualname":"::stream::try_stream::try_flatten::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":14460},{"krate":0,"index":14461}],"decl_id":null,"docs":" Stream for the [`try_flatten`](super::TryStreamExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4705},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_flatten.rs","byte_start":402005,"byte_end":402018,"line_start":43,"line_end":43,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryFlatten<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4709},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_flatten.rs","byte_start":402329,"byte_end":402338,"line_start":56,"line_end":56,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryFlatten<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14502},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_collect.rs","byte_start":403629,"byte_end":403639,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryCollect","qualname":"::stream::try_stream::try_collect::TryCollect","value":"TryCollect {  }","parent":null,"children":[{"krate":0,"index":14505},{"krate":0,"index":14506}],"decl_id":null,"docs":" Future for the [`try_collect`](super::TryStreamExt::try_collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4754},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_collect.rs","byte_start":403992,"byte_end":404005,"line_start":31,"line_end":31,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryCollect<St, C> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4759},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_collect.rs","byte_start":404217,"byte_end":404221,"line_start":43,"line_end":43,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryCollect<St, C> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14551},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_concat.rs","byte_start":404965,"byte_end":404974,"line_start":12,"line_end":12,"column_start":16,"column_end":25},"name":"TryConcat","qualname":"::stream::try_stream::try_concat::TryConcat","value":"TryConcat {  }","parent":null,"children":[{"krate":0,"index":14553},{"krate":0,"index":14554}],"decl_id":null,"docs":" Future for the [`try_concat`](super::TryStreamExt::try_concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4792},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_concat.rs","byte_start":405475,"byte_end":405479,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryConcat<St> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14591},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":406485,"byte_end":406494,"line_start":17,"line_end":17,"column_start":16,"column_end":25},"name":"TryChunks","qualname":"::stream::try_stream::try_chunks::TryChunks","value":"TryChunks {  }","parent":null,"children":[{"krate":0,"index":14593},{"krate":0,"index":14594},{"krate":0,"index":14595}],"decl_id":null,"docs":" Stream for the [`try_chunks`](super::TryStreamExt::try_chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4850},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":407335,"byte_end":407344,"line_start":48,"line_end":48,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryChunks<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4851},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":408722,"byte_end":408731,"line_start":83,"line_end":83,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<TryChunks<St> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4854},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":409173,"byte_end":409186,"line_start":96,"line_end":96,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryChunks<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14639},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":409738,"byte_end":409752,"line_start":116,"line_end":116,"column_start":12,"column_end":26},"name":"TryChunksError","qualname":"::stream::try_stream::try_chunks::TryChunksError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating, that while chunk was collected inner stream produced an error.","sig":null,"attributes":[{"value":"/ Error indicating, that while chunk was collected inner stream produced an error.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":409515,"byte_end":409599,"line_start":112,"line_end":112,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":409600,"byte_end":409603,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Contains all items that were collected before an error occurred, and the stream error itself.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":409604,"byte_end":409701,"line_start":114,"line_end":114,"column_start":1,"column_end":98}}]},{"kind":"Field","id":{"krate":0,"index":14643},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":409759,"byte_end":409769,"line_start":116,"line_end":116,"column_start":33,"column_end":43},"name":"0","qualname":"::stream::try_stream::try_chunks::TryChunksError::0","value":"std::vec::Vec<T>","parent":{"krate":0,"index":14639},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":14644},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":409771,"byte_end":409776,"line_start":116,"line_end":116,"column_start":45,"column_end":50},"name":"1","qualname":"::stream::try_stream::try_chunks::TryChunksError::1","value":"E","parent":{"krate":0,"index":14639},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4858},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":409848,"byte_end":409851,"line_start":119,"line_end":119,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryChunksError<T, E> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4862},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":410007,"byte_end":410010,"line_start":125,"line_end":125,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryChunksError<T, E> as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14660},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_fold.rs","byte_start":410614,"byte_end":410621,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"TryFold","qualname":"::stream::try_stream::try_fold::TryFold","value":"TryFold {  }","parent":null,"children":[{"krate":0,"index":14665},{"krate":0,"index":14666},{"krate":0,"index":14667},{"krate":0,"index":14668}],"decl_id":null,"docs":" Future for the [`try_fold`](super::TryStreamExt::try_fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4911},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_fold.rs","byte_start":410900,"byte_end":410903,"line_start":28,"line_end":28,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryFold<St, Fut, T, F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4923},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_fold.rs","byte_start":411591,"byte_end":411604,"line_start":54,"line_end":54,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryFold<St, Fut, T, F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4930},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_fold.rs","byte_start":411893,"byte_end":411897,"line_start":67,"line_end":67,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryFold<St, Fut, T, F> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4963},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":415069,"byte_end":415079,"line_start":59,"line_end":59,"column_start":8,"column_end":18},"name":"try_unfold","qualname":"::stream::try_stream::try_unfold::try_unfold","value":"fn try_unfold<T, F, Fut, Item>(T, F) -> TryUnfold<T, F, Fut> where F: FnMut(T)\n-> Fut, Fut: TryFuture<Ok = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","sig":null,"attributes":[{"value":"/ Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":413212,"byte_end":413288,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":413289,"byte_end":413292,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `TryStream::try_fold()` adapter: while","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":413293,"byte_end":413369,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ `TryStream::try_fold()` reduces a `TryStream` to one single value,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":413370,"byte_end":413440,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ `try_unfold()` creates a `TryStream` from a seed value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":413441,"byte_end":413500,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":413501,"byte_end":413504,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `try_unfold()` will call the provided closure with the provided seed, then","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":413505,"byte_end":413583,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ wait for the returned `TryFuture` to complete with `(a, b)`. It will then","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":413584,"byte_end":413661,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ yield the value `a`, and use `b` as the next internal state.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":413662,"byte_end":413726,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":413727,"byte_end":413730,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(TryFuture)`, then the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":413731,"byte_end":413803,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/ `try_unfold()` will stop producing items and return `Poll::Ready(None)` in","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":413804,"byte_end":413882,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ future calls to `poll()`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":413883,"byte_end":413912,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":413913,"byte_end":413916,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ In case of error generated by the returned `TryFuture`, the error will be","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":413917,"byte_end":413994,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ returned by the `TryStream`. The `TryStream` will then yield","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":413995,"byte_end":414059,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ `Poll::Ready(None)` in future calls to `poll()`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":414060,"byte_end":414112,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":414113,"byte_end":414116,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":414117,"byte_end":414194,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":414195,"byte_end":414267,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ `TryFuture` using other library functions working on futures, and","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":414268,"byte_end":414337,"line_start":30,"line_end":30,"column_start":1,"column_end":70}},{"value":"/ `try_unfold()` will turn it into a `TryStream` by repeating the operation.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":414338,"byte_end":414416,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":414417,"byte_end":414420,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":414421,"byte_end":414434,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":414435,"byte_end":414438,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":414439,"byte_end":414446,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":414447,"byte_end":414480,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/ # struct SomeError;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":414481,"byte_end":414504,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":414505,"byte_end":414546,"line_start":38,"line_end":38,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":414547,"byte_end":414593,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":414594,"byte_end":414597,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::try_unfold(0, |state| async move {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":414598,"byte_end":414657,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/     if state < 0 {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":414658,"byte_end":414680,"line_start":42,"line_end":42,"column_start":1,"column_end":23}},{"value":"/         return Err(SomeError);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":414681,"byte_end":414715,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":414716,"byte_end":414725,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":414726,"byte_end":414729,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     if state <= 2 {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":414730,"byte_end":414753,"line_start":46,"line_end":46,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":414754,"byte_end":414793,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/         let yielded = state * 2;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":414794,"byte_end":414830,"line_start":48,"line_end":48,"column_start":1,"column_end":37}},{"value":"/         Ok(Some((yielded, next_state)))","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":414831,"byte_end":414874,"line_start":49,"line_end":49,"column_start":1,"column_end":44}},{"value":"/     } else {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":414875,"byte_end":414891,"line_start":50,"line_end":50,"column_start":1,"column_end":17}},{"value":"/         Ok(None)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":414892,"byte_end":414912,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/     }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":414913,"byte_end":414922,"line_start":52,"line_end":52,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":414923,"byte_end":414930,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":414931,"byte_end":414934,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ let result: Result<Vec<i32>, _> = stream.try_collect().await;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":414935,"byte_end":415000,"line_start":55,"line_end":55,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(result, Ok(vec![0, 2, 4]));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":415001,"byte_end":415043,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":415044,"byte_end":415053,"line_start":57,"line_end":57,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":415054,"byte_end":415061,"line_start":58,"line_end":58,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":14729},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":415442,"byte_end":415451,"line_start":70,"line_end":70,"column_start":16,"column_end":25},"name":"TryUnfold","qualname":"::stream::try_stream::try_unfold::TryUnfold","value":"TryUnfold {  }","parent":null,"children":[{"krate":0,"index":14733},{"krate":0,"index":14734},{"krate":0,"index":14735}],"decl_id":null,"docs":" Stream for the [`try_unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4972},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":415662,"byte_end":415665,"line_start":83,"line_end":83,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryUnfold<T, F, Fut> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4979},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":416004,"byte_end":416013,"line_start":95,"line_end":95,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryUnfold<T, F, Fut> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14786},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":417359,"byte_end":417371,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::TrySkipWhile","value":"TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":14790},{"krate":0,"index":14791},{"krate":0,"index":14792},{"krate":0,"index":14793},{"krate":0,"index":14794}],"decl_id":null,"docs":" Stream for the [`try_skip_while`](super::TryStreamExt::try_skip_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5024},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":417729,"byte_end":417732,"line_start":32,"line_end":32,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TrySkipWhile<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5035},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":418615,"byte_end":418624,"line_start":63,"line_end":63,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TrySkipWhile<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5036},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":419540,"byte_end":419549,"line_start":89,"line_end":89,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<TrySkipWhile<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5041},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":420089,"byte_end":420102,"line_start":106,"line_end":106,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TrySkipWhile<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14855},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":420908,"byte_end":420920,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryTakeWhile","qualname":"::stream::try_stream::try_take_while::TryTakeWhile","value":"TryTakeWhile {  }","parent":null,"children":[{"krate":0,"index":14859},{"krate":0,"index":14860},{"krate":0,"index":14861},{"krate":0,"index":14862},{"krate":0,"index":14863}],"decl_id":null,"docs":" Stream for the [`try_take_while`](super::TryStreamExt::try_take_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5082},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":421293,"byte_end":421296,"line_start":35,"line_end":35,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryTakeWhile<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5093},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":422173,"byte_end":422182,"line_start":66,"line_end":66,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryTakeWhile<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5094},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":423132,"byte_end":423141,"line_start":94,"line_end":94,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<TryTakeWhile<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5099},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":423755,"byte_end":423768,"line_start":115,"line_end":115,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryTakeWhile<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14924},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_buffer_unordered.rs","byte_start":424689,"byte_end":424707,"line_start":16,"line_end":16,"column_start":16,"column_end":34},"name":"TryBufferUnordered","qualname":"::stream::try_stream::try_buffer_unordered::TryBufferUnordered","value":"TryBufferUnordered {  }","parent":null,"children":[{"krate":0,"index":14926},{"krate":0,"index":14927},{"krate":0,"index":14928}],"decl_id":null,"docs":" Stream for the\n [`try_buffer_unordered`](super::TryStreamExt::try_buffer_unordered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5153},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_buffer_unordered.rs","byte_start":425421,"byte_end":425430,"line_start":49,"line_end":49,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryBufferUnordered<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":14972},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_buffered.rs","byte_start":427247,"byte_end":427258,"line_start":15,"line_end":15,"column_start":16,"column_end":27},"name":"TryBuffered","qualname":"::stream::try_stream::try_buffered::TryBuffered","value":"TryBuffered {  }","parent":null,"children":[{"krate":0,"index":14974},{"krate":0,"index":14975},{"krate":0,"index":14976}],"decl_id":null,"docs":" Stream for the [`try_buffered`](super::TryStreamExt::try_buffered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5207},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_buffered.rs","byte_start":427986,"byte_end":427995,"line_start":50,"line_end":50,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryBuffered<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15020},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":429795,"byte_end":429815,"line_start":16,"line_end":16,"column_start":16,"column_end":36},"name":"TryForEachConcurrent","qualname":"::stream::try_stream::try_for_each_concurrent::TryForEachConcurrent","value":"TryForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":15024},{"krate":0,"index":15025},{"krate":0,"index":15026},{"krate":0,"index":15027}],"decl_id":null,"docs":" Future for the\n [`try_for_each_concurrent`](super::TryStreamExt::try_for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5255},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":430094,"byte_end":430097,"line_start":30,"line_end":30,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryForEachConcurrent<St, Fut, F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5260},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":430535,"byte_end":430548,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryForEachConcurrent<St, Fut, F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5271},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":431304,"byte_end":431308,"line_start":75,"line_end":75,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryForEachConcurrent<St, Fut, F> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15081},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_async_read.rs","byte_start":434114,"byte_end":434127,"line_start":15,"line_end":15,"column_start":16,"column_end":29},"name":"IntoAsyncRead","qualname":"::stream::try_stream::into_async_read::IntoAsyncRead","value":"IntoAsyncRead {  }","parent":null,"children":[{"krate":0,"index":15083},{"krate":0,"index":15084}],"decl_id":null,"docs":" Reader for the [`into_async_read`](super::TryStreamExt::into_async_read) method.\n","sig":null,"attributes":[{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5321},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_async_read.rs","byte_start":434735,"byte_end":434744,"line_start":48,"line_end":48,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<IntoAsyncRead<St> as futures_io::AsyncRead>::poll_read","value":"fn poll_read<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [u8])\n-> Poll<Result<usize>>","parent":{"krate":26,"index":39},"children":[],"decl_id":{"krate":26,"index":40},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5324},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_async_read.rs","byte_start":436412,"byte_end":436422,"line_start":98,"line_end":98,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<IntoAsyncRead<St> as futures_io::AsyncWrite>::poll_write","value":"fn poll_write<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [u8])\n-> Poll<Result<usize>>","parent":{"krate":26,"index":42},"children":[],"decl_id":{"krate":26,"index":43},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5325},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_async_read.rs","byte_start":436593,"byte_end":436603,"line_start":103,"line_end":103,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<IntoAsyncRead<St> as futures_io::AsyncWrite>::poll_flush","value":"fn poll_flush<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Result<()>>","parent":{"krate":26,"index":42},"children":[],"decl_id":{"krate":26,"index":45},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5326},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_async_read.rs","byte_start":436754,"byte_end":436764,"line_start":108,"line_end":108,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<IntoAsyncRead<St> as futures_io::AsyncWrite>::poll_close","value":"fn poll_close<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Result<()>>","parent":{"krate":26,"index":42},"children":[],"decl_id":{"krate":26,"index":46},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5329},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_async_read.rs","byte_start":437028,"byte_end":437041,"line_start":119,"line_end":119,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"<IntoAsyncRead<St> as futures_io::AsyncBufRead>::poll_fill_buf","value":"fn poll_fill_buf<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Result<&'_ [u8]>>","parent":{"krate":26,"index":49},"children":[],"decl_id":{"krate":26,"index":50},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5330},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_async_read.rs","byte_start":438101,"byte_end":438108,"line_start":149,"line_end":149,"column_start":8,"column_end":15},"name":"consume","qualname":"<IntoAsyncRead<St> as futures_io::AsyncBufRead>::consume","value":"fn consume<'_>(Pin<&'_ mut Self>, usize)","parent":{"krate":26,"index":49},"children":[],"decl_id":{"krate":26,"index":51},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":5336},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":351991,"byte_end":352003,"line_start":157,"line_end":157,"column_start":11,"column_end":23},"name":"TryStreamExt","qualname":"::stream::try_stream::TryStreamExt","value":"TryStreamExt: TryStream","parent":null,"children":[{"krate":0,"index":5337},{"krate":0,"index":5339},{"krate":0,"index":5342},{"krate":0,"index":5345},{"krate":0,"index":5348},{"krate":0,"index":5351},{"krate":0,"index":5353},{"krate":0,"index":5355},{"krate":0,"index":5356},{"krate":0,"index":5357},{"krate":0,"index":5360},{"krate":0,"index":5363},{"krate":0,"index":5366},{"krate":0,"index":5370},{"krate":0,"index":5372},{"krate":0,"index":5373},{"krate":0,"index":5376},{"krate":0,"index":5380},{"krate":0,"index":5381},{"krate":0,"index":5385},{"krate":0,"index":5386},{"krate":0,"index":5387},{"krate":0,"index":5388},{"krate":0,"index":5389}],"decl_id":null,"docs":" Adapters specific to `Result`-returning streams\n","sig":null,"attributes":[{"value":"/ Adapters specific to `Result`-returning streams","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":351929,"byte_end":351980,"line_start":156,"line_end":156,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":5337},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352545,"byte_end":352553,"line_start":175,"line_end":175,"column_start":8,"column_end":16},"name":"err_into","qualname":"::stream::try_stream::TryStreamExt::err_into","value":"fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":5336},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which converts the error type\n into the one provided.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which converts the error type","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352021,"byte_end":352095,"line_start":158,"line_end":158,"column_start":5,"column_end":79}},{"value":"/ into the one provided.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352100,"byte_end":352126,"line_start":159,"line_end":159,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352131,"byte_end":352134,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352139,"byte_end":352153,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352158,"byte_end":352161,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352166,"byte_end":352173,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352178,"byte_end":352219,"line_start":164,"line_end":164,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352224,"byte_end":352270,"line_start":165,"line_end":165,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352275,"byte_end":352278,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352283,"byte_end":352303,"line_start":167,"line_end":167,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(()), Err(5i32)])","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352308,"byte_end":352353,"line_start":168,"line_end":168,"column_start":5,"column_end":50}},{"value":"/         .err_into::<i64>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352358,"byte_end":352389,"line_start":169,"line_end":169,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352394,"byte_end":352397,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352402,"byte_end":352456,"line_start":171,"line_end":171,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(5i64));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352461,"byte_end":352512,"line_start":172,"line_end":172,"column_start":5,"column_end":56}},{"value":"/ # })","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352517,"byte_end":352525,"line_start":173,"line_end":173,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352530,"byte_end":352537,"line_start":174,"line_end":174,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5339},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":353249,"byte_end":353255,"line_start":200,"line_end":200,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::stream::try_stream::TryStreamExt::map_ok","value":"fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where Self: Sized,\nF: FnMut(Self::Ok) -> T","parent":{"krate":0,"index":5336},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the success value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the success value","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352729,"byte_end":352802,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ using the provided closure.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352807,"byte_end":352838,"line_start":184,"line_end":184,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352843,"byte_end":352846,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352851,"byte_end":352865,"line_start":186,"line_end":186,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352870,"byte_end":352873,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352878,"byte_end":352885,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352890,"byte_end":352931,"line_start":189,"line_end":189,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352936,"byte_end":352982,"line_start":190,"line_end":190,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352987,"byte_end":352990,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352995,"byte_end":353015,"line_start":192,"line_end":192,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":353020,"byte_end":353061,"line_start":193,"line_end":193,"column_start":5,"column_end":46}},{"value":"/         .map_ok(|x| x + 2);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":353066,"byte_end":353097,"line_start":194,"line_end":194,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":353102,"byte_end":353105,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(7)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":353110,"byte_end":353163,"line_start":196,"line_end":196,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(0));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":353168,"byte_end":353216,"line_start":197,"line_end":197,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":353221,"byte_end":353229,"line_start":198,"line_end":198,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":353234,"byte_end":353241,"line_start":199,"line_end":199,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5342},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":353964,"byte_end":353971,"line_start":225,"line_end":225,"column_start":8,"column_end":15},"name":"map_err","qualname":"::stream::try_stream::TryStreamExt::map_err","value":"fn map_err<E, F>(Self, F) -> MapErr<Self, F> where Self: Sized,\nF: FnMut(Self::Error) -> E","parent":{"krate":0,"index":5336},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the error value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the error value","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":353445,"byte_end":353516,"line_start":208,"line_end":208,"column_start":5,"column_end":76}},{"value":"/ using the provided closure.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":353521,"byte_end":353552,"line_start":209,"line_end":209,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":353557,"byte_end":353560,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":353565,"byte_end":353579,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":353584,"byte_end":353587,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":353592,"byte_end":353599,"line_start":213,"line_end":213,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":353604,"byte_end":353645,"line_start":214,"line_end":214,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":353650,"byte_end":353696,"line_start":215,"line_end":215,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":353701,"byte_end":353704,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":353709,"byte_end":353729,"line_start":217,"line_end":217,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":353734,"byte_end":353775,"line_start":218,"line_end":218,"column_start":5,"column_end":46}},{"value":"/         .map_err(|x| x + 2);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":353780,"byte_end":353812,"line_start":219,"line_end":219,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":353817,"byte_end":353820,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(5)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":353825,"byte_end":353878,"line_start":221,"line_end":221,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(2));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":353883,"byte_end":353931,"line_start":222,"line_end":222,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":353936,"byte_end":353944,"line_start":223,"line_end":223,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":353949,"byte_end":353956,"line_start":224,"line_end":224,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5345},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":355576,"byte_end":355584,"line_start":271,"line_end":271,"column_start":8,"column_end":16},"name":"and_then","qualname":"::stream::try_stream::TryStreamExt::and_then","value":"fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where F: FnMut(Self::Ok)\n-> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":5336},"children":[],"decl_id":null,"docs":" Chain on a computation for when a value is ready, passing the successful\n results to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a value is ready, passing the successful","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":354163,"byte_end":354239,"line_start":233,"line_end":233,"column_start":5,"column_end":81}},{"value":"/ results to the provided closure `f`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":354244,"byte_end":354284,"line_start":234,"line_end":234,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":354289,"byte_end":354292,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work when the next successful","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":354297,"byte_end":354373,"line_start":236,"line_end":236,"column_start":5,"column_end":81}},{"value":"/ value on a stream is ready. The closure provided will be yielded a value","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":354378,"byte_end":354454,"line_start":237,"line_end":237,"column_start":5,"column_end":81}},{"value":"/ when ready, and the returned future will then be run to completion to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":354459,"byte_end":354532,"line_start":238,"line_end":238,"column_start":5,"column_end":78}},{"value":"/ produce the next value on this stream.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":354537,"byte_end":354579,"line_start":239,"line_end":239,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":354584,"byte_end":354587,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ Any errors produced by this stream will not be passed to the closure,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":354592,"byte_end":354665,"line_start":241,"line_end":241,"column_start":5,"column_end":78}},{"value":"/ and will be passed through.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":354670,"byte_end":354701,"line_start":242,"line_end":242,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":354706,"byte_end":354709,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `TryFuture` trait","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":354714,"byte_end":354788,"line_start":244,"line_end":244,"column_start":5,"column_end":79}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":354793,"byte_end":354867,"line_start":245,"line_end":245,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":354872,"byte_end":354888,"line_start":246,"line_end":246,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":354893,"byte_end":354896,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":354901,"byte_end":354972,"line_start":248,"line_end":248,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":354977,"byte_end":355003,"line_start":249,"line_end":249,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":355008,"byte_end":355011,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ To process the entire stream and return a single future representing","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":355016,"byte_end":355088,"line_start":251,"line_end":251,"column_start":5,"column_end":77}},{"value":"/ success or error, use `try_for_each` instead.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":355093,"byte_end":355142,"line_start":252,"line_end":252,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":355147,"byte_end":355150,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":355155,"byte_end":355169,"line_start":254,"line_end":254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":355174,"byte_end":355177,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":355182,"byte_end":355189,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":355194,"byte_end":355225,"line_start":257,"line_end":257,"column_start":5,"column_end":36}},{"value":"/ use futures::future;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":355230,"byte_end":355254,"line_start":258,"line_end":258,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":355259,"byte_end":355297,"line_start":259,"line_end":259,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":355302,"byte_end":355305,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<Result<i32, ()>>(1);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":355310,"byte_end":355366,"line_start":261,"line_end":261,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":355371,"byte_end":355374,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ let rx = rx.and_then(|result| {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":355379,"byte_end":355414,"line_start":263,"line_end":263,"column_start":5,"column_end":40}},{"value":"/     future::ok(if result % 2 == 0 {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":355419,"byte_end":355458,"line_start":264,"line_end":264,"column_start":5,"column_end":44}},{"value":"/         Some(result)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":355463,"byte_end":355487,"line_start":265,"line_end":265,"column_start":5,"column_end":29}},{"value":"/     } else {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":355492,"byte_end":355508,"line_start":266,"line_end":266,"column_start":5,"column_end":21}},{"value":"/         None","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":355513,"byte_end":355529,"line_start":267,"line_end":267,"column_start":5,"column_end":21}},{"value":"/     })","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":355534,"byte_end":355544,"line_start":268,"line_end":268,"column_start":5,"column_end":15}},{"value":"/ });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":355549,"byte_end":355556,"line_start":269,"line_end":269,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":355561,"byte_end":355568,"line_start":270,"line_end":270,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5348},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":356736,"byte_end":356743,"line_start":297,"line_end":297,"column_start":8,"column_end":15},"name":"or_else","qualname":"::stream::try_stream::TryStreamExt::or_else","value":"fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnMut(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":5336},"children":[],"decl_id":null,"docs":" Chain on a computation for when an error happens, passing the\n erroneous result to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when an error happens, passing the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":355837,"byte_end":355902,"line_start":280,"line_end":280,"column_start":5,"column_end":70}},{"value":"/ erroneous result to the provided closure `f`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":355907,"byte_end":355956,"line_start":281,"line_end":281,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":355961,"byte_end":355964,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work and attempt to recover from","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":355969,"byte_end":356048,"line_start":283,"line_end":283,"column_start":5,"column_end":84}},{"value":"/ an error if one happens. The closure provided will be yielded an error","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":356053,"byte_end":356127,"line_start":284,"line_end":284,"column_start":5,"column_end":79}},{"value":"/ when one appears, and the returned future will then be run to completion","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":356132,"byte_end":356208,"line_start":285,"line_end":285,"column_start":5,"column_end":81}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":356213,"byte_end":356258,"line_start":286,"line_end":286,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":356263,"byte_end":356266,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ Any successful values produced by this stream will not be passed to the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":356271,"byte_end":356346,"line_start":288,"line_end":288,"column_start":5,"column_end":80}},{"value":"/ closure, and will be passed through.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":356351,"byte_end":356391,"line_start":289,"line_end":289,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":356396,"byte_end":356399,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the [`TryFuture`](futures_core::future::TryFuture) trait","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":356404,"byte_end":356513,"line_start":291,"line_end":291,"column_start":5,"column_end":114}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":356518,"byte_end":356592,"line_start":292,"line_end":292,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":356597,"byte_end":356613,"line_start":293,"line_end":293,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":356618,"byte_end":356621,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":356626,"byte_end":356697,"line_start":295,"line_end":295,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":356702,"byte_end":356728,"line_start":296,"line_end":296,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":5351},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":357295,"byte_end":357305,"line_start":312,"line_end":312,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::stream::try_stream::TryStreamExt::inspect_ok","value":"fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where\nF: for<'_> FnMut(&'_ Self::Ok) -> (), Self: Sized","parent":{"krate":0,"index":5336},"children":[],"decl_id":null,"docs":" Do something with the success value of this stream, afterwards passing\n it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of this stream, afterwards passing","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":356992,"byte_end":357066,"line_start":306,"line_end":306,"column_start":5,"column_end":79}},{"value":"/ it on.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":357071,"byte_end":357081,"line_start":307,"line_end":307,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":357086,"byte_end":357089,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":357094,"byte_end":357164,"line_start":309,"line_end":309,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the success value as it passes through the stream, for","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":357169,"byte_end":357245,"line_start":310,"line_end":310,"column_start":5,"column_end":81}},{"value":"/ example to debug what's going on.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":357250,"byte_end":357287,"line_start":311,"line_end":311,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":5353},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":357794,"byte_end":357805,"line_start":325,"line_end":325,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::stream::try_stream::TryStreamExt::inspect_err","value":"fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: for<'_> FnMut(&'_ Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":5336},"children":[],"decl_id":null,"docs":" Do something with the error value of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of this stream, afterwards passing it on.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":357503,"byte_end":357582,"line_start":320,"line_end":320,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":357587,"byte_end":357590,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":357595,"byte_end":357665,"line_start":322,"line_end":322,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the error value as it passes through the stream, for","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":357670,"byte_end":357744,"line_start":323,"line_end":323,"column_start":5,"column_end":79}},{"value":"/ example to debug what's going on.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":357749,"byte_end":357786,"line_start":324,"line_end":324,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":5355},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":358726,"byte_end":358737,"line_start":354,"line_end":354,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::stream::try_stream::TryStreamExt::into_stream","value":"fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":5336},"children":[],"decl_id":null,"docs":" Wraps a [`TryStream`] into a type that implements\n [`Stream`](futures_core::stream::Stream)","sig":null,"attributes":[{"value":"/ Wraps a [`TryStream`] into a type that implements","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":358008,"byte_end":358061,"line_start":333,"line_end":333,"column_start":5,"column_end":58}},{"value":"/ [`Stream`](futures_core::stream::Stream)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":358066,"byte_end":358110,"line_start":334,"line_end":334,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":358115,"byte_end":358118,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ [`TryStream`]s currently do not implement the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":358123,"byte_end":358172,"line_start":336,"line_end":336,"column_start":5,"column_end":54}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait because of limitations","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":358177,"byte_end":358250,"line_start":337,"line_end":337,"column_start":5,"column_end":78}},{"value":"/ of the compiler.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":358255,"byte_end":358275,"line_start":338,"line_end":338,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":358280,"byte_end":358283,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":358288,"byte_end":358302,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":358307,"byte_end":358310,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":358315,"byte_end":358322,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ use futures::stream::{Stream, TryStream, TryStreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":358327,"byte_end":358386,"line_start":343,"line_end":343,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":358391,"byte_end":358394,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":358399,"byte_end":358418,"line_start":345,"line_end":345,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":358423,"byte_end":358441,"line_start":346,"line_end":346,"column_start":5,"column_end":23}},{"value":"/ fn make_try_stream() -> impl TryStream<Ok = T, Error = E> { // ... }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":358446,"byte_end":358518,"line_start":347,"line_end":347,"column_start":5,"column_end":77}},{"value":"/ # futures::stream::empty()","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":358523,"byte_end":358553,"line_start":348,"line_end":348,"column_start":5,"column_end":35}},{"value":"/ # }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":358558,"byte_end":358565,"line_start":349,"line_end":349,"column_start":5,"column_end":12}},{"value":"/ fn take_stream(stream: impl Stream<Item = Result<T, E>>) { /* ... */ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":358570,"byte_end":358644,"line_start":350,"line_end":350,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":358649,"byte_end":358652,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ take_stream(make_try_stream().into_stream());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":358657,"byte_end":358706,"line_start":352,"line_end":352,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":358711,"byte_end":358718,"line_start":353,"line_end":353,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5356},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":359632,"byte_end":359640,"line_start":381,"line_end":381,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::try_stream::TryStreamExt::try_next","value":"fn try_next<'_>(&'_ mut Self) -> TryNext where Self: Unpin","parent":{"krate":0,"index":5336},"children":[],"decl_id":null,"docs":" Creates a future that attempts to resolve the next item in the stream.\n If an error is encountered before the next item, the error is returned\n instead.","sig":null,"attributes":[{"value":"/ Creates a future that attempts to resolve the next item in the stream.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":358893,"byte_end":358967,"line_start":361,"line_end":361,"column_start":5,"column_end":79}},{"value":"/ If an error is encountered before the next item, the error is returned","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":358972,"byte_end":359046,"line_start":362,"line_end":362,"column_start":5,"column_end":79}},{"value":"/ instead.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":359051,"byte_end":359063,"line_start":363,"line_end":363,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":359068,"byte_end":359071,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Stream::next` combinator, but returns a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":359076,"byte_end":359143,"line_start":365,"line_end":365,"column_start":5,"column_end":72}},{"value":"/ `Result<Option<T>, E>` rather than an `Option<Result<T, E>>`, making","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":359148,"byte_end":359220,"line_start":366,"line_end":366,"column_start":5,"column_end":77}},{"value":"/ for easy use with the `?` operator.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":359225,"byte_end":359264,"line_start":367,"line_end":367,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":359269,"byte_end":359272,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":359277,"byte_end":359291,"line_start":369,"line_end":369,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":359296,"byte_end":359299,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":359304,"byte_end":359311,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":359316,"byte_end":359357,"line_start":372,"line_end":372,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":359362,"byte_end":359408,"line_start":373,"line_end":373,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":359413,"byte_end":359416,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(()), Err(())]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":359421,"byte_end":359478,"line_start":375,"line_end":375,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":359483,"byte_end":359486,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":359491,"byte_end":359545,"line_start":377,"line_end":377,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(()));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":359550,"byte_end":359599,"line_start":378,"line_end":378,"column_start":5,"column_end":54}},{"value":"/ # })","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":359604,"byte_end":359612,"line_start":379,"line_end":379,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":359617,"byte_end":359624,"line_start":380,"line_end":380,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5357},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360992,"byte_end":361004,"line_start":421,"line_end":421,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::stream::try_stream::TryStreamExt::try_for_each","value":"fn try_for_each<Fut, F>(Self, F) -> TryForEach<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Ok = (), Error = Self::Error>,\nSelf: Sized","parent":{"krate":0,"index":5336},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided\n asynchronous closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":359807,"byte_end":359876,"line_start":388,"line_end":388,"column_start":5,"column_end":74}},{"value":"/ asynchronous closure for each element on the stream.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":359881,"byte_end":359937,"line_start":389,"line_end":389,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":359942,"byte_end":359945,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ The provided closure will be called for each item this stream produces,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":359950,"byte_end":360025,"line_start":391,"line_end":391,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360030,"byte_end":360100,"line_start":392,"line_end":392,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360105,"byte_end":360143,"line_start":393,"line_end":393,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360148,"byte_end":360151,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ The returned value is a [`Future`](futures_core::future::Future) where the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360156,"byte_end":360234,"line_start":395,"line_end":395,"column_start":5,"column_end":83}},{"value":"/ [`Output`](futures_core::future::Future::Output) type is","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360239,"byte_end":360299,"line_start":396,"line_end":396,"column_start":5,"column_end":65}},{"value":"/ `Result<(), Self::Error>`. If any of the intermediate","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360304,"byte_end":360361,"line_start":397,"line_end":397,"column_start":5,"column_end":62}},{"value":"/ futures or the stream returns an error, this future will return","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360366,"byte_end":360433,"line_start":398,"line_end":398,"column_start":5,"column_end":72}},{"value":"/ immediately with an error.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360438,"byte_end":360468,"line_start":399,"line_end":399,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360473,"byte_end":360476,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360481,"byte_end":360495,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360500,"byte_end":360503,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360508,"byte_end":360515,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360520,"byte_end":360561,"line_start":404,"line_end":404,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360566,"byte_end":360590,"line_start":405,"line_end":405,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360595,"byte_end":360641,"line_start":406,"line_end":406,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360646,"byte_end":360649,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0i32;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360654,"byte_end":360675,"line_start":408,"line_end":408,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360680,"byte_end":360683,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360688,"byte_end":360693,"line_start":410,"line_end":410,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(Ok(1)).try_for_each(|item| {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360698,"byte_end":360759,"line_start":411,"line_end":411,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360764,"byte_end":360786,"line_start":412,"line_end":412,"column_start":5,"column_end":27}},{"value":"/         future::ready(if x == 3 { Err(()) } else { Ok(()) })","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360791,"byte_end":360855,"line_start":413,"line_end":413,"column_start":5,"column_end":69}},{"value":"/     });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360860,"byte_end":360871,"line_start":414,"line_end":414,"column_start":5,"column_end":16}},{"value":"/     assert_eq!(fut.await, Err(()));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360876,"byte_end":360915,"line_start":415,"line_end":415,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360920,"byte_end":360925,"line_start":416,"line_end":416,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360930,"byte_end":360933,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360938,"byte_end":360959,"line_start":418,"line_end":418,"column_start":5,"column_end":26}},{"value":"/ # })","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360964,"byte_end":360972,"line_start":419,"line_end":419,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":360977,"byte_end":360984,"line_start":420,"line_end":420,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5360},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":362017,"byte_end":362031,"line_start":451,"line_end":451,"column_start":8,"column_end":22},"name":"try_skip_while","qualname":"::stream::try_stream::TryStreamExt::try_skip_while","value":"fn try_skip_while<Fut, F>(Self, F) -> TrySkipWhile<Self, Fut, F> where\nF: for<'_> FnMut(&'_ Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error =\nSelf::Error>, Self: Sized","parent":{"krate":0,"index":5336},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":361268,"byte_end":361342,"line_start":430,"line_end":430,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":361347,"byte_end":361370,"line_start":431,"line_end":431,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":361375,"byte_end":361378,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":361383,"byte_end":361414,"line_start":433,"line_end":433,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::skip_while`](crate::stream::StreamExt::skip_while) but exits","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":361419,"byte_end":361496,"line_start":434,"line_end":434,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":361501,"byte_end":361530,"line_start":435,"line_end":435,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":361535,"byte_end":361538,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":361543,"byte_end":361557,"line_start":437,"line_end":437,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":361562,"byte_end":361565,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":361570,"byte_end":361577,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":361582,"byte_end":361623,"line_start":440,"line_end":440,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":361628,"byte_end":361652,"line_start":441,"line_end":441,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":361657,"byte_end":361703,"line_start":442,"line_end":442,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":361708,"byte_end":361711,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(3), Ok(2)]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":361716,"byte_end":361785,"line_start":444,"line_end":444,"column_start":5,"column_end":74}},{"value":"/ let stream = stream.try_skip_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":361790,"byte_end":361860,"line_start":445,"line_end":445,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":361865,"byte_end":361868,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":361873,"byte_end":361940,"line_start":447,"line_end":447,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![3, 2]));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":361945,"byte_end":361984,"line_start":448,"line_end":448,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":361989,"byte_end":361997,"line_start":449,"line_end":449,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":362002,"byte_end":362009,"line_start":450,"line_end":450,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5363},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":363064,"byte_end":363078,"line_start":481,"line_end":481,"column_start":8,"column_end":22},"name":"try_take_while","qualname":"::stream::try_stream::TryStreamExt::try_take_while","value":"fn try_take_while<Fut, F>(Self, F) -> TryTakeWhile<Self, Fut, F> where\nF: for<'_> FnMut(&'_ Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error =\nSelf::Error>, Self: Sized","parent":{"krate":0,"index":5336},"children":[],"decl_id":null,"docs":" Take elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements on this stream while the provided asynchronous predicate","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":362308,"byte_end":362382,"line_start":460,"line_end":460,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":362387,"byte_end":362410,"line_start":461,"line_end":461,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":362415,"byte_end":362418,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":362423,"byte_end":362454,"line_start":463,"line_end":463,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::take_while`](crate::stream::StreamExt::take_while) but exits","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":362459,"byte_end":362536,"line_start":464,"line_end":464,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":362541,"byte_end":362570,"line_start":465,"line_end":465,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":362575,"byte_end":362578,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":362583,"byte_end":362597,"line_start":467,"line_end":467,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":362602,"byte_end":362605,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":362610,"byte_end":362617,"line_start":469,"line_end":469,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":362622,"byte_end":362663,"line_start":470,"line_end":470,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":362668,"byte_end":362692,"line_start":471,"line_end":471,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":362697,"byte_end":362743,"line_start":472,"line_end":472,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":362748,"byte_end":362751,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2), Ok(3), Ok(2)]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":362756,"byte_end":362832,"line_start":474,"line_end":474,"column_start":5,"column_end":81}},{"value":"/ let stream = stream.try_take_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":362837,"byte_end":362907,"line_start":475,"line_end":475,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":362912,"byte_end":362915,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":362920,"byte_end":362987,"line_start":477,"line_end":477,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![1, 2]));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":362992,"byte_end":363031,"line_start":478,"line_end":478,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":363036,"byte_end":363044,"line_start":479,"line_end":479,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":363049,"byte_end":363056,"line_start":480,"line_end":480,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5366},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":364993,"byte_end":365016,"line_start":533,"line_end":533,"column_start":8,"column_end":31},"name":"try_for_each_concurrent","qualname":"::stream::try_stream::TryStreamExt::try_for_each_concurrent","value":"fn try_for_each_concurrent<Fut, F,\nimpl Into<Option<usize>>>(Self, impl Into<Option<usize>>, F)\n-> TryForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Ok) -> Fut,\nFut: Future<Output = Result<(), Self::Error>>, Self: Sized,\nimpl Into<Option<usize>>: Into<Option<usize>>","parent":{"krate":0,"index":5336},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available, exiting as soon as an error occurs.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided asynchronous","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":363355,"byte_end":363437,"line_start":490,"line_end":490,"column_start":5,"column_end":87}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":363442,"byte_end":363516,"line_start":491,"line_end":491,"column_start":5,"column_end":79}},{"value":"/ available, exiting as soon as an error occurs.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":363521,"byte_end":363571,"line_start":492,"line_end":492,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":363576,"byte_end":363579,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ This is similar to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":363584,"byte_end":363606,"line_start":494,"line_end":494,"column_start":5,"column_end":27}},{"value":"/ [`StreamExt::for_each_concurrent`](crate::stream::StreamExt::for_each_concurrent),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":363611,"byte_end":363697,"line_start":495,"line_end":495,"column_start":5,"column_end":91}},{"value":"/ but will resolve to an error immediately if the underlying stream or the provided","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":363702,"byte_end":363787,"line_start":496,"line_end":496,"column_start":5,"column_end":90}},{"value":"/ closure return an error.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":363792,"byte_end":363820,"line_start":497,"line_end":497,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":363825,"byte_end":363828,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":363833,"byte_end":363908,"line_start":499,"line_end":499,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":363913,"byte_end":363970,"line_start":500,"line_end":500,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":363975,"byte_end":363978,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":363983,"byte_end":363997,"line_start":502,"line_end":502,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":364002,"byte_end":364005,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":364010,"byte_end":364017,"line_start":504,"line_end":504,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":364022,"byte_end":364063,"line_start":505,"line_end":505,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":364068,"byte_end":364102,"line_start":506,"line_end":506,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":364107,"byte_end":364164,"line_start":507,"line_end":507,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":364169,"byte_end":364172,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":364177,"byte_end":364217,"line_start":509,"line_end":509,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":364222,"byte_end":364262,"line_start":510,"line_end":510,"column_start":5,"column_end":45}},{"value":"/ let (_tx3, rx3) = oneshot::channel();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":364267,"byte_end":364308,"line_start":511,"line_end":511,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":364313,"byte_end":364316,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![rx1, rx2, rx3]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":364321,"byte_end":364372,"line_start":513,"line_end":513,"column_start":5,"column_end":56}},{"value":"/ let fut = stream.map(Ok).try_for_each_concurrent(","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":364377,"byte_end":364430,"line_start":514,"line_end":514,"column_start":5,"column_end":58}},{"value":"/     /* limit */ 2,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":364435,"byte_end":364457,"line_start":515,"line_end":515,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":364462,"byte_end":364487,"line_start":516,"line_end":516,"column_start":5,"column_end":30}},{"value":"/         let res: Result<(), oneshot::Canceled> = rx.await;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":364492,"byte_end":364554,"line_start":517,"line_end":517,"column_start":5,"column_end":67}},{"value":"/         res","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":364559,"byte_end":364574,"line_start":518,"line_end":518,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":364579,"byte_end":364588,"line_start":519,"line_end":519,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":364593,"byte_end":364599,"line_start":520,"line_end":520,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":364604,"byte_end":364607,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":364612,"byte_end":364638,"line_start":522,"line_end":522,"column_start":5,"column_end":31}},{"value":"/ // Drop the second sender so that `rx2` resolves to `Canceled`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":364643,"byte_end":364710,"line_start":523,"line_end":523,"column_start":5,"column_end":72}},{"value":"/ drop(tx2);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":364715,"byte_end":364729,"line_start":524,"line_end":524,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":364734,"byte_end":364737,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ // The final result is an error because the second future","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":364742,"byte_end":364803,"line_start":526,"line_end":526,"column_start":5,"column_end":66}},{"value":"/ // resulted in an error.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":364808,"byte_end":364836,"line_start":527,"line_end":527,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Err(oneshot::Canceled), fut.await);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":364841,"byte_end":364891,"line_start":528,"line_end":528,"column_start":5,"column_end":55}},{"value":"/ # })","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":364896,"byte_end":364904,"line_start":529,"line_end":529,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":364909,"byte_end":364916,"line_start":530,"line_end":530,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":364921,"byte_end":364955,"line_start":531,"line_end":531,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":364960,"byte_end":364985,"line_start":532,"line_end":532,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5370},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":366465,"byte_end":366476,"line_start":580,"line_end":580,"column_start":8,"column_end":19},"name":"try_collect","qualname":"::stream::try_stream::TryStreamExt::try_collect","value":"fn try_collect<C>(Self) -> TryCollect<Self, C> where C: Default +\nExtend<Self::Ok>, Self: Sized","parent":{"krate":0,"index":5336},"children":[],"decl_id":null,"docs":" Attempt to transform a stream into a collection,\n returning a future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Attempt to transform a stream into a collection,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":365426,"byte_end":365478,"line_start":550,"line_end":550,"column_start":5,"column_end":57}},{"value":"/ returning a future representing the result of that computation.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":365483,"byte_end":365550,"line_start":551,"line_end":551,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":365555,"byte_end":365558,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ This combinator will collect all successful results of this stream and","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":365563,"byte_end":365637,"line_start":553,"line_end":553,"column_start":5,"column_end":79}},{"value":"/ collect them into the specified collection type. If an error happens then all","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":365642,"byte_end":365723,"line_start":554,"line_end":554,"column_start":5,"column_end":86}},{"value":"/ collected elements will be dropped and the error will be returned.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":365728,"byte_end":365798,"line_start":555,"line_end":555,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":365803,"byte_end":365806,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":365811,"byte_end":365879,"line_start":557,"line_end":557,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":365884,"byte_end":365887,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":365892,"byte_end":365906,"line_start":559,"line_end":559,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":365911,"byte_end":365914,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":365919,"byte_end":365926,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":365931,"byte_end":365972,"line_start":562,"line_end":562,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":365977,"byte_end":366008,"line_start":563,"line_end":563,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":366013,"byte_end":366051,"line_start":564,"line_end":564,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":366056,"byte_end":366076,"line_start":565,"line_end":565,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":366081,"byte_end":366084,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":366089,"byte_end":366126,"line_start":567,"line_end":567,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":366131,"byte_end":366134,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":366139,"byte_end":366166,"line_start":569,"line_end":569,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":366171,"byte_end":366195,"line_start":570,"line_end":570,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(Ok(i)).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":366200,"byte_end":366246,"line_start":571,"line_end":571,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":366251,"byte_end":366260,"line_start":572,"line_end":572,"column_start":5,"column_end":14}},{"value":"/     tx.unbounded_send(Err(6)).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":366265,"byte_end":366308,"line_start":573,"line_end":573,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":366313,"byte_end":366320,"line_start":574,"line_end":574,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":366325,"byte_end":366328,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = rx.try_collect().await;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":366333,"byte_end":366396,"line_start":576,"line_end":576,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(output, Err(6));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":366401,"byte_end":366432,"line_start":577,"line_end":577,"column_start":5,"column_end":36}},{"value":"/ # })","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":366437,"byte_end":366445,"line_start":578,"line_end":578,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":366450,"byte_end":366457,"line_start":579,"line_end":579,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5372},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":368291,"byte_end":368301,"line_start":625,"line_end":625,"column_start":8,"column_end":18},"name":"try_chunks","qualname":"::stream::try_stream::TryStreamExt::try_chunks","value":"fn try_chunks(Self, usize) -> TryChunks<Self> where Self: Sized","parent":{"krate":0,"index":5336},"children":[],"decl_id":null,"docs":" An adaptor for chunking up successful items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up successful items of the stream inside a vector.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":366659,"byte_end":366737,"line_start":587,"line_end":587,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":366742,"byte_end":366745,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull successful items from this stream and buffer","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":366750,"byte_end":366835,"line_start":589,"line_end":589,"column_start":5,"column_end":90}},{"value":"/ them into a local vector. At most `capacity` items will get buffered","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":366840,"byte_end":366912,"line_start":590,"line_end":590,"column_start":5,"column_end":77}},{"value":"/ before they're yielded from the returned stream.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":366917,"byte_end":366969,"line_start":591,"line_end":591,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":366974,"byte_end":366977,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ Note that the vectors returned from this iterator may not always have","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":366982,"byte_end":367055,"line_start":593,"line_end":593,"column_start":5,"column_end":78}},{"value":"/ `capacity` elements. If the underlying stream ended and only a partial","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":367060,"byte_end":367134,"line_start":594,"line_end":594,"column_start":5,"column_end":79}},{"value":"/ vector was created, it'll be returned. Additionally if an error happens","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":367139,"byte_end":367214,"line_start":595,"line_end":595,"column_start":5,"column_end":80}},{"value":"/ from the underlying stream then the currently buffered items will be","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":367219,"byte_end":367291,"line_start":596,"line_end":596,"column_start":5,"column_end":77}},{"value":"/ yielded.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":367296,"byte_end":367308,"line_start":597,"line_end":597,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":367313,"byte_end":367316,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":367321,"byte_end":367396,"line_start":599,"line_end":599,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":367401,"byte_end":367458,"line_start":600,"line_end":600,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":367463,"byte_end":367466,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":367471,"byte_end":367502,"line_start":602,"line_end":602,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::chunks`](crate::stream::StreamExt::chunks) but exits","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":367507,"byte_end":367576,"line_start":603,"line_end":603,"column_start":5,"column_end":74}},{"value":"/ early if an error occurs.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":367581,"byte_end":367610,"line_start":604,"line_end":604,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":367615,"byte_end":367618,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":367623,"byte_end":367637,"line_start":606,"line_end":606,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":367642,"byte_end":367645,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":367650,"byte_end":367657,"line_start":608,"line_end":608,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":367662,"byte_end":367703,"line_start":609,"line_end":609,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryChunksError, TryStreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":367708,"byte_end":367770,"line_start":610,"line_end":610,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":367775,"byte_end":367778,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2), Ok(3), Err(4), Ok(5), Ok(6)]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":367783,"byte_end":367874,"line_start":612,"line_end":612,"column_start":5,"column_end":96}},{"value":"/ let mut stream = stream.try_chunks(2);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":367879,"byte_end":367921,"line_start":613,"line_end":613,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":367926,"byte_end":367929,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(vec![1, 2])));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":367934,"byte_end":367996,"line_start":615,"line_end":615,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(stream.try_next().await, Err(TryChunksError(vec![3], 4)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":368001,"byte_end":368074,"line_start":616,"line_end":616,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(vec![5, 6])));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":368079,"byte_end":368141,"line_start":617,"line_end":617,"column_start":5,"column_end":67}},{"value":"/ # })","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":368146,"byte_end":368154,"line_start":618,"line_end":618,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":368159,"byte_end":368166,"line_start":619,"line_end":619,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":368171,"byte_end":368174,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":368179,"byte_end":368191,"line_start":621,"line_end":621,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":368196,"byte_end":368199,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":368204,"byte_end":368253,"line_start":623,"line_end":623,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":368258,"byte_end":368283,"line_start":624,"line_end":624,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5373},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":369824,"byte_end":369834,"line_start":664,"line_end":664,"column_start":8,"column_end":18},"name":"try_filter","qualname":"::stream::try_stream::TryStreamExt::try_filter","value":"fn try_filter<Fut, F>(Self, F) -> TryFilter<Self, Fut, F> where\nFut: Future<Output = bool>, F: for<'_> FnMut(&'_ Self::Ok) -> Fut, Self: Sized","parent":{"krate":0,"index":5336},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream according to the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":368536,"byte_end":368609,"line_start":634,"line_end":634,"column_start":5,"column_end":78}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":368614,"byte_end":368648,"line_start":635,"line_end":635,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":368653,"byte_end":368656,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":368661,"byte_end":368736,"line_start":637,"line_end":637,"column_start":5,"column_end":80}},{"value":"/ will be run on them. If the predicate returns a `Future` which resolves","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":368741,"byte_end":368816,"line_start":638,"line_end":638,"column_start":5,"column_end":80}},{"value":"/ to `true`, then the stream will yield the value, but if the predicate","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":368821,"byte_end":368894,"line_start":639,"line_end":639,"column_start":5,"column_end":78}},{"value":"/ return a `Future` which resolves to `false`, then the value will be","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":368899,"byte_end":368970,"line_start":640,"line_end":640,"column_start":5,"column_end":76}},{"value":"/ discarded and the next value will be produced.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":368975,"byte_end":369025,"line_start":641,"line_end":641,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":369030,"byte_end":369033,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":369038,"byte_end":369109,"line_start":643,"line_end":643,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":369114,"byte_end":369117,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":369122,"byte_end":369198,"line_start":645,"line_end":645,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":369203,"byte_end":369273,"line_start":646,"line_end":646,"column_start":5,"column_end":75}},{"value":"/ the standard library.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":369278,"byte_end":369303,"line_start":647,"line_end":647,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":369308,"byte_end":369311,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":369316,"byte_end":369330,"line_start":649,"line_end":649,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":369335,"byte_end":369342,"line_start":650,"line_end":650,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":369347,"byte_end":369388,"line_start":651,"line_end":651,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":369393,"byte_end":369417,"line_start":652,"line_end":652,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":369422,"byte_end":369479,"line_start":653,"line_end":653,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":369484,"byte_end":369487,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(2i32), Ok(3i32), Err(\"error\")]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":369492,"byte_end":369572,"line_start":655,"line_end":655,"column_start":5,"column_end":85}},{"value":"/ let mut evens = stream.try_filter(|x| {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":369577,"byte_end":369620,"line_start":656,"line_end":656,"column_start":5,"column_end":48}},{"value":"/     future::ready(x % 2 == 0)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":369625,"byte_end":369658,"line_start":657,"line_end":657,"column_start":5,"column_end":38}},{"value":"/ });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":369663,"byte_end":369670,"line_start":658,"line_end":658,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":369675,"byte_end":369678,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens.next().await, Some(Ok(2)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":369683,"byte_end":369731,"line_start":660,"line_end":660,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(evens.next().await, Some(Err(\"error\")));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":369736,"byte_end":369791,"line_start":661,"line_end":661,"column_start":5,"column_end":60}},{"value":"/ # })","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":369796,"byte_end":369804,"line_start":662,"line_end":662,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":369809,"byte_end":369816,"line_start":663,"line_end":663,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5376},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":371461,"byte_end":371475,"line_start":705,"line_end":705,"column_start":8,"column_end":22},"name":"try_filter_map","qualname":"::stream::try_stream::TryStreamExt::try_filter_map","value":"fn try_filter_map<Fut, F, T>(Self, F) -> TryFilterMap<Self, Fut, F> where\nFut: TryFuture<Ok = Option<T>, Error = Self::Error>, F: FnMut(Self::Ok) ->\nFut, Self: Sized","parent":{"krate":0,"index":5336},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream while\n simultaneously mapping them to a different type according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream while","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":370085,"byte_end":370147,"line_start":673,"line_end":673,"column_start":5,"column_end":67}},{"value":"/ simultaneously mapping them to a different type according to the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":370152,"byte_end":370220,"line_start":674,"line_end":674,"column_start":5,"column_end":73}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":370225,"byte_end":370259,"line_start":675,"line_end":675,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":370264,"byte_end":370267,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":370272,"byte_end":370347,"line_start":677,"line_end":677,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":370352,"byte_end":370427,"line_start":678,"line_end":678,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":370432,"byte_end":370508,"line_start":679,"line_end":679,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":370513,"byte_end":370578,"line_start":680,"line_end":680,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":370583,"byte_end":370586,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":370591,"byte_end":370662,"line_start":682,"line_end":682,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":370667,"byte_end":370670,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":370675,"byte_end":370751,"line_start":684,"line_end":684,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":370756,"byte_end":370830,"line_start":685,"line_end":685,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":370835,"byte_end":370860,"line_start":686,"line_end":686,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":370865,"byte_end":370868,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":370873,"byte_end":370887,"line_start":688,"line_end":688,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":370892,"byte_end":370899,"line_start":689,"line_end":689,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":370904,"byte_end":370945,"line_start":690,"line_end":690,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":370950,"byte_end":371007,"line_start":691,"line_end":691,"column_start":5,"column_end":62}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":371012,"byte_end":371037,"line_start":692,"line_end":692,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":371042,"byte_end":371045,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(6i32), Err(\"error\")]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":371050,"byte_end":371120,"line_start":694,"line_end":694,"column_start":5,"column_end":75}},{"value":"/ let halves = stream.try_filter_map(|x| async move {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":371125,"byte_end":371180,"line_start":695,"line_end":695,"column_start":5,"column_end":60}},{"value":"/     let ret = if x % 2 == 0 { Some(x / 2) } else { None };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":371185,"byte_end":371247,"line_start":696,"line_end":696,"column_start":5,"column_end":67}},{"value":"/     Ok(ret)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":371252,"byte_end":371267,"line_start":697,"line_end":697,"column_start":5,"column_end":20}},{"value":"/ });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":371272,"byte_end":371279,"line_start":698,"line_end":698,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":371284,"byte_end":371287,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ pin_mut!(halves);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":371292,"byte_end":371313,"line_start":700,"line_end":700,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(halves.next().await, Some(Ok(3)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":371318,"byte_end":371367,"line_start":701,"line_end":701,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(halves.next().await, Some(Err(\"error\")));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":371372,"byte_end":371428,"line_start":702,"line_end":702,"column_start":5,"column_end":61}},{"value":"/ # })","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":371433,"byte_end":371441,"line_start":703,"line_end":703,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":371446,"byte_end":371453,"line_start":704,"line_end":704,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5380},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":373371,"byte_end":373382,"line_start":756,"line_end":756,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::stream::try_stream::TryStreamExt::try_flatten","value":"fn try_flatten(Self) -> TryFlatten<Self> where Self::Ok: TryStream,\n<Self::Ok as TryStream>::Error: From<Self::Error>, Self: Sized","parent":{"krate":0,"index":5336},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":371752,"byte_end":371817,"line_start":714,"line_end":714,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":371822,"byte_end":371825,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ If this stream's elements are themselves streams then this combinator","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":371830,"byte_end":371903,"line_start":716,"line_end":716,"column_start":5,"column_end":78}},{"value":"/ will flatten out the entire stream to one long chain of elements. Any","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":371908,"byte_end":371981,"line_start":717,"line_end":717,"column_start":5,"column_end":78}},{"value":"/ errors are passed through without looking at them, but otherwise each","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":371986,"byte_end":372059,"line_start":718,"line_end":718,"column_start":5,"column_end":78}},{"value":"/ individual stream will get exhausted before moving on to the next.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":372064,"byte_end":372134,"line_start":719,"line_end":719,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":372139,"byte_end":372142,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":372147,"byte_end":372161,"line_start":721,"line_end":721,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":372166,"byte_end":372169,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":372174,"byte_end":372181,"line_start":723,"line_end":723,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":372186,"byte_end":372227,"line_start":724,"line_end":724,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":372232,"byte_end":372263,"line_start":725,"line_end":725,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":372268,"byte_end":372319,"line_start":726,"line_end":726,"column_start":5,"column_end":56}},{"value":"/ use std::thread;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":372324,"byte_end":372344,"line_start":727,"line_end":727,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":372349,"byte_end":372352,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":372357,"byte_end":372396,"line_start":729,"line_end":729,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":372401,"byte_end":372440,"line_start":730,"line_end":730,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":372445,"byte_end":372484,"line_start":731,"line_end":731,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":372489,"byte_end":372492,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":372497,"byte_end":372524,"line_start":733,"line_end":733,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(Ok(1)).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":372529,"byte_end":372572,"line_start":734,"line_end":734,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":372577,"byte_end":372584,"line_start":735,"line_end":735,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":372589,"byte_end":372616,"line_start":736,"line_end":736,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(Ok(2)).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":372621,"byte_end":372664,"line_start":737,"line_end":737,"column_start":5,"column_end":48}},{"value":"/     tx2.unbounded_send(Err(3)).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":372669,"byte_end":372713,"line_start":738,"line_end":738,"column_start":5,"column_end":49}},{"value":"/     tx2.unbounded_send(Ok(4)).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":372718,"byte_end":372761,"line_start":739,"line_end":739,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":372766,"byte_end":372773,"line_start":740,"line_end":740,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":372778,"byte_end":372805,"line_start":741,"line_end":741,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(Ok(rx1)).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":372810,"byte_end":372855,"line_start":742,"line_end":742,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Ok(rx2)).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":372860,"byte_end":372905,"line_start":743,"line_end":743,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Err(5)).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":372910,"byte_end":372954,"line_start":744,"line_end":744,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":372959,"byte_end":372966,"line_start":745,"line_end":745,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":372971,"byte_end":372974,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ let mut stream = rx3.try_flatten();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":372979,"byte_end":373018,"line_start":747,"line_end":747,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(1)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":373023,"byte_end":373072,"line_start":748,"line_end":748,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(2)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":373077,"byte_end":373126,"line_start":749,"line_end":749,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Err(3)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":373131,"byte_end":373181,"line_start":750,"line_end":750,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(4)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":373186,"byte_end":373235,"line_start":751,"line_end":751,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Err(5)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":373240,"byte_end":373290,"line_start":752,"line_end":752,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":373295,"byte_end":373337,"line_start":753,"line_end":753,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":373342,"byte_end":373351,"line_start":754,"line_end":754,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":373356,"byte_end":373363,"line_start":755,"line_end":755,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5381},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":374974,"byte_end":374982,"line_start":795,"line_end":795,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::stream::try_stream::TryStreamExt::try_fold","value":"fn try_fold<T, Fut, F>(Self, T, F) -> TryFold<Self, Fut, T, F> where\nF: FnMut(T, Self::Ok) -> Fut, Fut: TryFuture<Ok = T, Error = Self::Error>,\nSelf: Sized","parent":{"krate":0,"index":5336},"children":[],"decl_id":null,"docs":" Attempt to execute an accumulating asynchronous computation over a\n stream, collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Attempt to execute an accumulating asynchronous computation over a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":373687,"byte_end":373757,"line_start":767,"line_end":767,"column_start":5,"column_end":75}},{"value":"/ stream, collecting all the values into one final result.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":373762,"byte_end":373822,"line_start":768,"line_end":768,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":373827,"byte_end":373830,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":373835,"byte_end":373905,"line_start":770,"line_end":770,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":373910,"byte_end":373986,"line_start":771,"line_end":771,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":373991,"byte_end":374067,"line_start":772,"line_end":772,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":374072,"byte_end":374142,"line_start":773,"line_end":773,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":374147,"byte_end":374173,"line_start":774,"line_end":774,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":374178,"byte_end":374181,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`fold`](crate::stream::StreamExt::fold), but will","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":374186,"byte_end":374266,"line_start":776,"line_end":776,"column_start":5,"column_end":85}},{"value":"/ exit early if an error is encountered in either the stream or the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":374271,"byte_end":374340,"line_start":777,"line_end":777,"column_start":5,"column_end":74}},{"value":"/ provided closure.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":374345,"byte_end":374366,"line_start":778,"line_end":778,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":374371,"byte_end":374374,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":374379,"byte_end":374393,"line_start":780,"line_end":780,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":374398,"byte_end":374401,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":374406,"byte_end":374413,"line_start":782,"line_end":782,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":374418,"byte_end":374459,"line_start":783,"line_end":783,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":374464,"byte_end":374510,"line_start":784,"line_end":784,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":374515,"byte_end":374518,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2)]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":374523,"byte_end":374592,"line_start":786,"line_end":786,"column_start":5,"column_end":74}},{"value":"/ let sum = number_stream.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":374597,"byte_end":374674,"line_start":787,"line_end":787,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(sum.await, Ok(3));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":374679,"byte_end":374712,"line_start":788,"line_end":788,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":374717,"byte_end":374720,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ let number_stream_with_err = stream::iter(vec![Ok::<i32, i32>(1), Err(2), Ok(1)]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":374725,"byte_end":374811,"line_start":790,"line_end":790,"column_start":5,"column_end":91}},{"value":"/ let sum = number_stream_with_err.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":374816,"byte_end":374902,"line_start":791,"line_end":791,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(sum.await, Err(2));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":374907,"byte_end":374941,"line_start":792,"line_end":792,"column_start":5,"column_end":39}},{"value":"/ # })","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":374946,"byte_end":374954,"line_start":793,"line_end":793,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":374959,"byte_end":374966,"line_start":794,"line_end":794,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5385},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":376508,"byte_end":376518,"line_start":838,"line_end":838,"column_start":8,"column_end":18},"name":"try_concat","qualname":"::stream::try_stream::TryStreamExt::try_concat","value":"fn try_concat(Self) -> TryConcat<Self> where Self: Sized,\nSelf::Ok: Extend<<<Self as TryStream>::Ok as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":5336},"children":[],"decl_id":null,"docs":" Attempt to concatenate all items of a stream into a single\n extendable destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Attempt to concatenate all items of a stream into a single","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":375262,"byte_end":375324,"line_start":804,"line_end":804,"column_start":5,"column_end":67}},{"value":"/ extendable destination, returning a future representing the end result.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":375329,"byte_end":375404,"line_start":805,"line_end":805,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":375409,"byte_end":375412,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents of all","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":375417,"byte_end":375488,"line_start":807,"line_end":807,"column_start":5,"column_end":76}},{"value":"/ the subsequent successful results of the stream. If the stream is empty,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":375493,"byte_end":375569,"line_start":808,"line_end":808,"column_start":5,"column_end":81}},{"value":"/ the default value will be returned.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":375574,"byte_end":375613,"line_start":809,"line_end":809,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":375618,"byte_end":375621,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":375626,"byte_end":375712,"line_start":811,"line_end":811,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":375717,"byte_end":375720,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`concat`](crate::stream::StreamExt::concat), but will","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":375725,"byte_end":375809,"line_start":813,"line_end":813,"column_start":5,"column_end":89}},{"value":"/ exit early if an error is encountered in the stream.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":375814,"byte_end":375870,"line_start":814,"line_end":814,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":375875,"byte_end":375878,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":375883,"byte_end":375897,"line_start":816,"line_end":816,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":375902,"byte_end":375905,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":375910,"byte_end":375917,"line_start":818,"line_end":818,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":375922,"byte_end":375963,"line_start":819,"line_end":819,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":375968,"byte_end":375999,"line_start":820,"line_end":820,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":376004,"byte_end":376042,"line_start":821,"line_end":821,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":376047,"byte_end":376067,"line_start":822,"line_end":822,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":376072,"byte_end":376075,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded::<Result<Vec<i32>, ()>>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":376080,"byte_end":376141,"line_start":824,"line_end":824,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":376146,"byte_end":376149,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":376154,"byte_end":376181,"line_start":826,"line_end":826,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":376186,"byte_end":376217,"line_start":827,"line_end":827,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":376222,"byte_end":376248,"line_start":828,"line_end":828,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(Ok(vec![n + 1, n + 2, n + 3])).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":376253,"byte_end":376323,"line_start":829,"line_end":829,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":376328,"byte_end":376337,"line_start":830,"line_end":830,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":376342,"byte_end":376349,"line_start":831,"line_end":831,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":376354,"byte_end":376357,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ let result = rx.try_concat().await;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":376362,"byte_end":376401,"line_start":833,"line_end":833,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":376406,"byte_end":376409,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, Ok(vec![7, 8, 9, 4, 5, 6, 1, 2, 3]));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":376414,"byte_end":376474,"line_start":835,"line_end":835,"column_start":5,"column_end":65}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":376479,"byte_end":376488,"line_start":836,"line_end":836,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":376493,"byte_end":376500,"line_start":837,"line_end":837,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":5386},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":379240,"byte_end":379260,"line_start":905,"line_end":905,"column_start":8,"column_end":28},"name":"try_buffer_unordered","qualname":"::stream::try_stream::TryStreamExt::try_buffer_unordered","value":"fn try_buffer_unordered(Self, usize) -> TryBufferUnordered<Self> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":5336},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently (unordered).","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently (unordered).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":376772,"byte_end":376850,"line_start":846,"line_end":846,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":376855,"byte_end":376858,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":376863,"byte_end":376968,"line_start":848,"line_end":848,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":376973,"byte_end":377016,"line_start":849,"line_end":849,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":377021,"byte_end":377024,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":377029,"byte_end":377097,"line_start":851,"line_end":851,"column_start":5,"column_end":73}},{"value":"/ outputs in the order in which they complete. If the underlying stream","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":377102,"byte_end":377175,"line_start":852,"line_end":852,"column_start":5,"column_end":78}},{"value":"/ returns an error, it will be immediately propagated.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":377180,"byte_end":377236,"line_start":853,"line_end":853,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":377241,"byte_end":377244,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":377249,"byte_end":377324,"line_start":855,"line_end":855,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":377329,"byte_end":377402,"line_start":856,"line_end":856,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":377407,"byte_end":377472,"line_start":857,"line_end":857,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":377477,"byte_end":377480,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":377485,"byte_end":377560,"line_start":859,"line_end":859,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":377565,"byte_end":377622,"line_start":860,"line_end":860,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":377627,"byte_end":377630,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":377635,"byte_end":377649,"line_start":862,"line_end":862,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":377654,"byte_end":377657,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of completion:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":377662,"byte_end":377714,"line_start":864,"line_end":864,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":377719,"byte_end":377726,"line_start":865,"line_end":865,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":377731,"byte_end":377772,"line_start":866,"line_end":866,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":377777,"byte_end":377811,"line_start":867,"line_end":867,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":377816,"byte_end":377873,"line_start":868,"line_end":868,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":377878,"byte_end":377881,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":377886,"byte_end":377936,"line_start":870,"line_end":870,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":377941,"byte_end":377991,"line_start":871,"line_end":871,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":377996,"byte_end":377999,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":378004,"byte_end":378079,"line_start":873,"line_end":873,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":378084,"byte_end":378087,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":378092,"byte_end":378158,"line_start":875,"line_end":875,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":378163,"byte_end":378166,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":378171,"byte_end":378196,"line_start":877,"line_end":877,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":378201,"byte_end":378255,"line_start":878,"line_end":878,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":378260,"byte_end":378263,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":378268,"byte_end":378293,"line_start":880,"line_end":880,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":378298,"byte_end":378352,"line_start":881,"line_end":881,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":378357,"byte_end":378360,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":378365,"byte_end":378409,"line_start":883,"line_end":883,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":378414,"byte_end":378450,"line_start":884,"line_end":884,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":378455,"byte_end":378462,"line_start":885,"line_end":885,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":378467,"byte_end":378470,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":378475,"byte_end":378535,"line_start":887,"line_end":887,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":378540,"byte_end":378547,"line_start":888,"line_end":888,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":378552,"byte_end":378593,"line_start":889,"line_end":889,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":378598,"byte_end":378629,"line_start":890,"line_end":890,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":378634,"byte_end":378685,"line_start":891,"line_end":891,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":378690,"byte_end":378693,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":378698,"byte_end":378752,"line_start":893,"line_end":893,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":378757,"byte_end":378823,"line_start":894,"line_end":894,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":378828,"byte_end":378831,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":378836,"byte_end":378885,"line_start":896,"line_end":896,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":378890,"byte_end":378944,"line_start":897,"line_end":897,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":378949,"byte_end":378952,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":378957,"byte_end":379010,"line_start":899,"line_end":899,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":379015,"byte_end":379087,"line_start":900,"line_end":900,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":379092,"byte_end":379151,"line_start":901,"line_end":901,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":379156,"byte_end":379163,"line_start":902,"line_end":902,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":379168,"byte_end":379202,"line_start":903,"line_end":903,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":379207,"byte_end":379232,"line_start":904,"line_end":904,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5387},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":382271,"byte_end":382283,"line_start":981,"line_end":981,"column_start":8,"column_end":20},"name":"try_buffered","qualname":"::stream::try_stream::TryStreamExt::try_buffered","value":"fn try_buffered(Self, usize) -> TryBuffered<Self> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":5336},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently.","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":379537,"byte_end":379603,"line_start":915,"line_end":915,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":379608,"byte_end":379611,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":379616,"byte_end":379721,"line_start":917,"line_end":917,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":379726,"byte_end":379769,"line_start":918,"line_end":918,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":379774,"byte_end":379777,"line_start":919,"line_end":919,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":379782,"byte_end":379850,"line_start":920,"line_end":920,"column_start":5,"column_end":73}},{"value":"/ outputs in the same order as the underlying stream. If the underlying stream returns an error, it will","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":379855,"byte_end":379961,"line_start":921,"line_end":921,"column_start":5,"column_end":111}},{"value":"/ be immediately propagated.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":379966,"byte_end":379996,"line_start":922,"line_end":922,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":380001,"byte_end":380004,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":380009,"byte_end":380084,"line_start":924,"line_end":924,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":380089,"byte_end":380162,"line_start":925,"line_end":925,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":380167,"byte_end":380232,"line_start":926,"line_end":926,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":380237,"byte_end":380240,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":380245,"byte_end":380320,"line_start":928,"line_end":928,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":380325,"byte_end":380382,"line_start":929,"line_end":929,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":380387,"byte_end":380390,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":380395,"byte_end":380409,"line_start":931,"line_end":931,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":380414,"byte_end":380417,"line_start":932,"line_end":932,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of addition:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":380422,"byte_end":380472,"line_start":933,"line_end":933,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":380477,"byte_end":380484,"line_start":934,"line_end":934,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":380489,"byte_end":380530,"line_start":935,"line_end":935,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":380535,"byte_end":380569,"line_start":936,"line_end":936,"column_start":5,"column_end":39}},{"value":"/ use futures::future::lazy;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":380574,"byte_end":380604,"line_start":937,"line_end":937,"column_start":5,"column_end":35}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":380609,"byte_end":380666,"line_start":938,"line_end":938,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":380671,"byte_end":380674,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":380679,"byte_end":380729,"line_start":940,"line_end":940,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":380734,"byte_end":380784,"line_start":941,"line_end":941,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":380789,"byte_end":380792,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = lazy(move |cx| {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":380797,"byte_end":380836,"line_start":943,"line_end":943,"column_start":5,"column_end":44}},{"value":"/     let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":380841,"byte_end":380920,"line_start":944,"line_end":944,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":380925,"byte_end":380928,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/     let mut buffered = stream_of_futures.try_buffered(10);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":380933,"byte_end":380995,"line_start":946,"line_end":946,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":381000,"byte_end":381003,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/     assert!(buffered.try_poll_next_unpin(cx).is_pending());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":381008,"byte_end":381071,"line_start":948,"line_end":948,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":381076,"byte_end":381079,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/     send_two.send(2i32)?;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":381084,"byte_end":381113,"line_start":950,"line_end":950,"column_start":5,"column_end":34}},{"value":"/     assert!(buffered.try_poll_next_unpin(cx).is_pending());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":381118,"byte_end":381181,"line_start":951,"line_end":951,"column_start":5,"column_end":68}},{"value":"/     Ok::<_, i32>(buffered)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":381186,"byte_end":381216,"line_start":952,"line_end":952,"column_start":5,"column_end":35}},{"value":"/ }).await?;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":381221,"byte_end":381235,"line_start":953,"line_end":953,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":381240,"byte_end":381243,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":381248,"byte_end":381273,"line_start":955,"line_end":955,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":381278,"byte_end":381332,"line_start":956,"line_end":956,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":381337,"byte_end":381391,"line_start":957,"line_end":957,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":381396,"byte_end":381399,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":381404,"byte_end":381448,"line_start":959,"line_end":959,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":381453,"byte_end":381489,"line_start":960,"line_end":960,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":381494,"byte_end":381501,"line_start":961,"line_end":961,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":381506,"byte_end":381509,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":381514,"byte_end":381574,"line_start":963,"line_end":963,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":381579,"byte_end":381586,"line_start":964,"line_end":964,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":381591,"byte_end":381632,"line_start":965,"line_end":965,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":381637,"byte_end":381668,"line_start":966,"line_end":966,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":381673,"byte_end":381724,"line_start":967,"line_end":967,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":381729,"byte_end":381732,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":381737,"byte_end":381791,"line_start":969,"line_end":969,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffered(10);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":381796,"byte_end":381854,"line_start":970,"line_end":970,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":381859,"byte_end":381862,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":381867,"byte_end":381916,"line_start":972,"line_end":972,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":381921,"byte_end":381975,"line_start":973,"line_end":973,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":381980,"byte_end":381983,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":381988,"byte_end":382041,"line_start":975,"line_end":975,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":382046,"byte_end":382118,"line_start":976,"line_end":976,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":382123,"byte_end":382182,"line_start":977,"line_end":977,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":382187,"byte_end":382194,"line_start":978,"line_end":978,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":382199,"byte_end":382233,"line_start":979,"line_end":979,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":382238,"byte_end":382263,"line_start":980,"line_end":980,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":5388},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":382738,"byte_end":382757,"line_start":995,"line_end":995,"column_start":8,"column_end":27},"name":"try_poll_next_unpin","qualname":"::stream::try_stream::TryStreamExt::try_poll_next_unpin","value":"fn try_poll_next_unpin<'_, '_, '_>(&'_ mut Self, &'_ mut Context)\n-> Poll<Option<Result<Self::Ok, Self::Error>>> where Self: Unpin","parent":{"krate":0,"index":5336},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":382630,"byte_end":382708,"line_start":993,"line_end":993,"column_start":5,"column_end":83}},{"value":"/ stream types.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":382713,"byte_end":382730,"line_start":994,"line_end":994,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5389},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":384712,"byte_end":384727,"line_start":1057,"line_end":1057,"column_start":8,"column_end":23},"name":"into_async_read","qualname":"::stream::try_stream::TryStreamExt::into_async_read","value":"fn into_async_read(Self) -> IntoAsyncRead<Self> where Self: Sized +\nTryStreamExt<Error = std::io::Error>, Self::Ok: AsRef<[u8]>","parent":{"krate":0,"index":5336},"children":[],"decl_id":null,"docs":" Adapter that converts this stream into an [`AsyncBufRead`](crate::io::AsyncBufRead).","sig":null,"attributes":[{"value":"/ Adapter that converts this stream into an [`AsyncBufRead`](crate::io::AsyncBufRead).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":383896,"byte_end":383984,"line_start":1034,"line_end":1034,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":383989,"byte_end":383992,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` feature of this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":383997,"byte_end":384061,"line_start":1036,"line_end":1036,"column_start":5,"column_end":69}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":384066,"byte_end":384123,"line_start":1037,"line_end":1037,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":384128,"byte_end":384131,"line_start":1038,"line_end":1038,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":384136,"byte_end":384150,"line_start":1039,"line_end":1039,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":384155,"byte_end":384158,"line_start":1040,"line_end":1040,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":384163,"byte_end":384170,"line_start":1041,"line_end":1041,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":384175,"byte_end":384216,"line_start":1042,"line_end":1042,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":384221,"byte_end":384267,"line_start":1043,"line_end":1043,"column_start":5,"column_end":51}},{"value":"/ use futures::io::AsyncReadExt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":384272,"byte_end":384306,"line_start":1044,"line_end":1044,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":384311,"byte_end":384314,"line_start":1045,"line_end":1045,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter([Ok(vec![1, 2, 3]), Ok(vec![4, 5])]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":384319,"byte_end":384386,"line_start":1046,"line_end":1046,"column_start":5,"column_end":72}},{"value":"/ let mut reader = stream.into_async_read();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":384391,"byte_end":384437,"line_start":1047,"line_end":1047,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":384442,"byte_end":384445,"line_start":1048,"line_end":1048,"column_start":5,"column_end":8}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":384450,"byte_end":384479,"line_start":1049,"line_end":1049,"column_start":5,"column_end":34}},{"value":"/ reader.read_to_end(&mut buf).await.unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":384484,"byte_end":384532,"line_start":1050,"line_end":1050,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(buf, [1, 2, 3, 4, 5]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":384537,"byte_end":384574,"line_start":1051,"line_end":1051,"column_start":5,"column_end":42}},{"value":"/ # })","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":384579,"byte_end":384587,"line_start":1052,"line_end":1052,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":384592,"byte_end":384599,"line_start":1053,"line_end":1053,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"io\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":384604,"byte_end":384626,"line_start":1054,"line_end":1054,"column_start":5,"column_end":27}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":384681,"byte_end":384704,"line_start":1056,"line_end":1056,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":15133},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":438987,"byte_end":438991,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":15135}],"decl_id":null,"docs":" Stream for the [`iter`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`] function.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":438865,"byte_end":438902,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":438927,"byte_end":438975,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5493},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":439509,"byte_end":439513,"line_start":29,"line_end":29,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"fn iter<I>(I) -> Iter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":439043,"byte_end":439107,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":439108,"byte_end":439136,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":439137,"byte_end":439140,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":439141,"byte_end":439214,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":439215,"byte_end":439270,"line_start":19,"line_end":19,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":439271,"byte_end":439274,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":439275,"byte_end":439282,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":439283,"byte_end":439324,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":439325,"byte_end":439368,"line_start":23,"line_end":23,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":439369,"byte_end":439372,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::iter(vec![17, 19]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":439373,"byte_end":439417,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(vec![17, 19], stream.collect::<Vec<i32>>().await);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":439418,"byte_end":439483,"line_start":26,"line_end":26,"column_start":1,"column_end":66}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":439484,"byte_end":439493,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":439494,"byte_end":439501,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5498},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":439723,"byte_end":439732,"line_start":42,"line_end":42,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Iter<I> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<I::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5499},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":439859,"byte_end":439868,"line_start":46,"line_end":46,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Iter<I> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15142},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":440204,"byte_end":440210,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":15144}],"decl_id":null,"docs":" Stream for the [`repeat`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`repeat`] function.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":440080,"byte_end":440119,"line_start":6,"line_end":6,"column_start":1,"column_end":40}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":440144,"byte_end":440192,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5528},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":440734,"byte_end":440740,"line_start":27,"line_end":27,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"fn repeat<T>(T) -> Repeat<T> where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a stream which produces the same item repeatedly.","sig":null,"attributes":[{"value":"/ Create a stream which produces the same item repeatedly.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":440232,"byte_end":440292,"line_start":13,"line_end":13,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":440293,"byte_end":440296,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":440297,"byte_end":440364,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":440365,"byte_end":440437,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":440438,"byte_end":440495,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":440496,"byte_end":440499,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":440500,"byte_end":440507,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":440508,"byte_end":440549,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":440550,"byte_end":440593,"line_start":21,"line_end":21,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":440594,"byte_end":440597,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::repeat(9);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":440598,"byte_end":440633,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(vec![9, 9, 9], stream.take(3).collect::<Vec<i32>>().await);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":440634,"byte_end":440708,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":440709,"byte_end":440718,"line_start":25,"line_end":25,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":440719,"byte_end":440726,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5535},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":440944,"byte_end":440953,"line_start":42,"line_end":42,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Repeat<T> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5536},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":441086,"byte_end":441095,"line_start":46,"line_end":46,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Repeat<T> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5539},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":441238,"byte_end":441251,"line_start":55,"line_end":55,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Repeat<T> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15151},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":441731,"byte_end":441741,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"RepeatWith","qualname":"::stream::repeat_with::RepeatWith","value":"RepeatWith {  }","parent":null,"children":[{"krate":0,"index":15153}],"decl_id":null,"docs":" An stream that repeats elements of type `A` endlessly by\n applying the provided closure `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ An stream that repeats elements of type `A` endlessly by","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":441429,"byte_end":441489,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/ applying the provided closure `F: FnMut() -> A`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":441490,"byte_end":441542,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":441543,"byte_end":441546,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`repeat_with()`] function.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":441547,"byte_end":441610,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ See its documentation for more.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":441611,"byte_end":441646,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":441671,"byte_end":441719,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5575},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":441899,"byte_end":441908,"line_start":22,"line_end":22,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<RepeatWith<F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5576},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":442050,"byte_end":442059,"line_start":26,"line_end":26,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<RepeatWith<F> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5580},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":442203,"byte_end":442216,"line_start":32,"line_end":32,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<RepeatWith<F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5581},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":444029,"byte_end":444040,"line_start":91,"line_end":91,"column_start":8,"column_end":19},"name":"repeat_with","qualname":"::stream::repeat_with::repeat_with","value":"fn repeat_with<A, F>(F) -> RepeatWith<F> where F: FnMut() -> A","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that repeats elements of type `A` endlessly by\n applying the provided closure, the repeater, `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ Creates a new stream that repeats elements of type `A` endlessly by","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":442257,"byte_end":442328,"line_start":37,"line_end":37,"column_start":1,"column_end":72}},{"value":"/ applying the provided closure, the repeater, `F: FnMut() -> A`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":442329,"byte_end":442396,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":442397,"byte_end":442400,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ The `repeat_with()` function calls the repeater over and over again.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":442401,"byte_end":442473,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":442474,"byte_end":442477,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Infinite stream like `repeat_with()` are often used with adapters like","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":442478,"byte_end":442552,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ [`stream.take()`], in order to make them finite.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":442553,"byte_end":442605,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":442606,"byte_end":442609,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ If the element type of the stream you need implements [`Clone`], and","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":442610,"byte_end":442682,"line_start":45,"line_end":45,"column_start":1,"column_end":73}},{"value":"/ it is OK to keep the source element in memory, you should instead use","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":442683,"byte_end":442756,"line_start":46,"line_end":46,"column_start":1,"column_end":74}},{"value":"/ the [`stream.repeat()`] function.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":442757,"byte_end":442794,"line_start":47,"line_end":47,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":442795,"byte_end":442798,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":442799,"byte_end":442813,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":442814,"byte_end":442817,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":442818,"byte_end":442834,"line_start":51,"line_end":51,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":442835,"byte_end":442838,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":442839,"byte_end":442846,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":442847,"byte_end":442888,"line_start":54,"line_end":54,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":442889,"byte_end":442932,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":442933,"byte_end":442936,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ // let's assume we have some value of a type that is not `Clone`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":442937,"byte_end":443005,"line_start":57,"line_end":57,"column_start":1,"column_end":69}},{"value":"/ // or which don't want to have in memory just yet because it is expensive:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":443006,"byte_end":443084,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/ #[derive(PartialEq, Debug)]","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":443085,"byte_end":443116,"line_start":59,"line_end":59,"column_start":1,"column_end":32}},{"value":"/ struct Expensive;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":443117,"byte_end":443138,"line_start":60,"line_end":60,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":443139,"byte_end":443142,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ // a particular value forever:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":443143,"byte_end":443177,"line_start":62,"line_end":62,"column_start":1,"column_end":35}},{"value":"/ let mut things = stream::repeat_with(|| Expensive);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":443178,"byte_end":443233,"line_start":63,"line_end":63,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":443234,"byte_end":443237,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":443238,"byte_end":443291,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":443292,"byte_end":443345,"line_start":66,"line_end":66,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":443346,"byte_end":443399,"line_start":67,"line_end":67,"column_start":1,"column_end":54}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":443400,"byte_end":443409,"line_start":68,"line_end":68,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":443410,"byte_end":443417,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":443418,"byte_end":443421,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Using mutation and going finite:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":443422,"byte_end":443458,"line_start":71,"line_end":71,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":443459,"byte_end":443462,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":443463,"byte_end":443474,"line_start":73,"line_end":73,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":443475,"byte_end":443516,"line_start":74,"line_end":74,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":443517,"byte_end":443560,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":443561,"byte_end":443564,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ // From the zeroth to the third power of two:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":443565,"byte_end":443614,"line_start":77,"line_end":77,"column_start":1,"column_end":50}},{"value":"/ let mut curr = 1;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":443615,"byte_end":443636,"line_start":78,"line_end":78,"column_start":1,"column_end":22}},{"value":"/ let mut pow2 = stream::repeat_with(|| { let tmp = curr; curr *= 2; tmp })","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":443637,"byte_end":443714,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/                     .take(4);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":443715,"byte_end":443748,"line_start":80,"line_end":80,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":443749,"byte_end":443752,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(1), pow2.next().await);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":443753,"byte_end":443796,"line_start":82,"line_end":82,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(2), pow2.next().await);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":443797,"byte_end":443840,"line_start":83,"line_end":83,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(4), pow2.next().await);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":443841,"byte_end":443884,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(8), pow2.next().await);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":443885,"byte_end":443928,"line_start":85,"line_end":85,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":443929,"byte_end":443932,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ // ... and now we're done","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":443933,"byte_end":443962,"line_start":87,"line_end":87,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(None, pow2.next().await);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":443963,"byte_end":444003,"line_start":88,"line_end":88,"column_start":1,"column_end":41}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":444004,"byte_end":444013,"line_start":89,"line_end":89,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":444014,"byte_end":444021,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":15160},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":444431,"byte_end":444436,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":15162}],"decl_id":null,"docs":" Stream for the [`empty`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`] function.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":444315,"byte_end":444353,"line_start":7,"line_end":7,"column_start":1,"column_end":39}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":444371,"byte_end":444419,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5615},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":444605,"byte_end":444610,"line_start":17,"line_end":17,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which contains no elements.","sig":null,"attributes":[{"value":"/ Creates a stream which contains no elements.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":444475,"byte_end":444523,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":444524,"byte_end":444527,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Ready(None)` when polled.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":444528,"byte_end":444597,"line_start":16,"line_end":16,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":5621},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":444765,"byte_end":444778,"line_start":24,"line_end":24,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Empty<T> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5625},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":444875,"byte_end":444884,"line_start":32,"line_end":32,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Empty<T> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5626},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":444998,"byte_end":445007,"line_start":36,"line_end":36,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Empty<T> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5629},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":445109,"byte_end":445114,"line_start":42,"line_end":42,"column_start":8,"column_end":13},"name":"clone","qualname":"<Empty<T> as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5667},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":445695,"byte_end":445699,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"fn once<Fut>(Fut) -> Once<Fut> where Fut: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream of a single element.","sig":null,"attributes":[{"value":"/ Creates a stream of a single element.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":445388,"byte_end":445429,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":445430,"byte_end":445433,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":445434,"byte_end":445441,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":445442,"byte_end":445483,"line_start":12,"line_end":12,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":445484,"byte_end":445527,"line_start":13,"line_end":13,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":445528,"byte_end":445531,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::once(async { 17 });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":445532,"byte_end":445576,"line_start":15,"line_end":15,"column_start":1,"column_end":45}},{"value":"/ let collected = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":445577,"byte_end":445632,"line_start":16,"line_end":16,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":445633,"byte_end":445669,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":445670,"byte_end":445679,"line_start":18,"line_end":18,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":445680,"byte_end":445687,"line_start":19,"line_end":19,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":15166},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":445961,"byte_end":445965,"line_start":28,"line_end":28,"column_start":16,"column_end":20},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":15168}],"decl_id":null,"docs":" A stream which emits single element and then EOF.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5675},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":446217,"byte_end":446226,"line_start":43,"line_end":43,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Once<Fut> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5676},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":446577,"byte_end":446586,"line_start":54,"line_end":54,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Once<Fut> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5679},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":446796,"byte_end":446809,"line_start":64,"line_end":64,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Once<Fut> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15202},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":447141,"byte_end":447148,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":15204}],"decl_id":null,"docs":" Stream for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending()`] function.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":447021,"byte_end":447063,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":447081,"byte_end":447129,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5711},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":447324,"byte_end":447331,"line_start":17,"line_end":17,"column_start":8,"column_end":15},"name":"pending","qualname":"::stream::pending::pending","value":"fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which never returns any elements.","sig":null,"attributes":[{"value":"/ Creates a stream which never returns any elements.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":447192,"byte_end":447246,"line_start":14,"line_end":14,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":447247,"byte_end":447250,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Pending` when polled.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":447251,"byte_end":447316,"line_start":16,"line_end":16,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":5717},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":447499,"byte_end":447512,"line_start":24,"line_end":24,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Pending<T> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5721},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":447611,"byte_end":447620,"line_start":32,"line_end":32,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Pending<T> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5722},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":447730,"byte_end":447739,"line_start":36,"line_end":36,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Pending<T> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5725},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":447843,"byte_end":447848,"line_start":42,"line_end":42,"column_start":8,"column_end":13},"name":"clone","qualname":"<Pending<T> as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5753},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":448174,"byte_end":448180,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::stream::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":5755}],"decl_id":null,"docs":" Stream for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`poll_fn`] function.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":448073,"byte_end":448113,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":448114,"byte_end":448162,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5760},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":448273,"byte_end":448276,"line_start":18,"line_end":18,"column_start":8,"column_end":11},"name":"fmt","qualname":"<PollFn<F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5761},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":448868,"byte_end":448875,"line_start":41,"line_end":41,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::stream::poll_fn::poll_fn","value":"fn poll_fn<T, F>(F) -> PollFn<F> where F: for<'_, '_> FnMut(&'_ mut Context)\n-> Poll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream wrapping a function returning `Poll<Option<T>>`.","sig":null,"attributes":[{"value":"/ Creates a new stream wrapping a function returning `Poll<Option<T>>`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":448380,"byte_end":448453,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":448454,"byte_end":448457,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Polling the returned stream calls the wrapped function.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":448458,"byte_end":448517,"line_start":25,"line_end":25,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":448518,"byte_end":448521,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":448522,"byte_end":448536,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":448537,"byte_end":448540,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":448541,"byte_end":448548,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use futures::stream::poll_fn;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":448549,"byte_end":448582,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":448583,"byte_end":448611,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":448612,"byte_end":448615,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut counter = 1usize;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":448616,"byte_end":448645,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":448646,"byte_end":448649,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let read_stream = poll_fn(move |_| -> Poll<Option<String>> {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":448650,"byte_end":448714,"line_start":35,"line_end":35,"column_start":1,"column_end":65}},{"value":"/     if counter == 0 { return Poll::Ready(None); }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":448715,"byte_end":448768,"line_start":36,"line_end":36,"column_start":1,"column_end":54}},{"value":"/     counter -= 1;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":448769,"byte_end":448790,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/     Poll::Ready(Some(\"Hello, World!\".to_owned()))","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":448791,"byte_end":448844,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/ });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":448845,"byte_end":448852,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":448853,"byte_end":448860,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5768},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":449121,"byte_end":449130,"line_start":54,"line_end":54,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<PollFn<F> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<T>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15208},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":449636,"byte_end":449649,"line_start":12,"line_end":12,"column_start":16,"column_end":29},"name":"PollImmediate","qualname":"::stream::poll_immediate::PollImmediate","value":"PollImmediate {  }","parent":null,"children":[{"krate":0,"index":15210}],"decl_id":null,"docs":" Stream for the [poll_immediate](poll_immediate()) function.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5797},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":449810,"byte_end":449819,"line_start":24,"line_end":24,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<PollImmediate<S> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5798},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":450491,"byte_end":450500,"line_start":42,"line_end":42,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<PollImmediate<S> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5801},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":450679,"byte_end":450692,"line_start":48,"line_end":48,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<PollImmediate<S> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5802},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":451630,"byte_end":451644,"line_start":78,"line_end":78,"column_start":8,"column_end":22},"name":"poll_immediate","qualname":"::stream::poll_immediate::poll_immediate","value":"fn poll_immediate<S>(S) -> PollImmediate<S> where S: Stream","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that always immediately returns [Poll::Ready](core::task::Poll::Ready) when awaiting it.","sig":null,"attributes":[{"value":"/ Creates a new stream that always immediately returns [Poll::Ready](core::task::Poll::Ready) when awaiting it.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":450749,"byte_end":450862,"line_start":53,"line_end":53,"column_start":1,"column_end":114}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":450863,"byte_end":450866,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ This is useful when immediacy is more important than waiting for the next item to be ready.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":450867,"byte_end":450962,"line_start":55,"line_end":55,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":450963,"byte_end":450966,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":450967,"byte_end":450981,"line_start":57,"line_end":57,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":450982,"byte_end":450985,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":450986,"byte_end":450993,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":450994,"byte_end":451035,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":451036,"byte_end":451079,"line_start":61,"line_end":61,"column_start":1,"column_end":44}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":451080,"byte_end":451108,"line_start":62,"line_end":62,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":451109,"byte_end":451112,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ let mut r = stream::poll_immediate(Box::pin(stream::iter(1_u32..3)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":451113,"byte_end":451186,"line_start":64,"line_end":64,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(r.next().await, Some(Poll::Ready(1)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":451187,"byte_end":451240,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(r.next().await, Some(Poll::Ready(2)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":451241,"byte_end":451294,"line_start":66,"line_end":66,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(r.next().await, None);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":451295,"byte_end":451332,"line_start":67,"line_end":67,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":451333,"byte_end":451336,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ let mut p = stream::poll_immediate(Box::pin(stream::once(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":451337,"byte_end":451405,"line_start":69,"line_end":69,"column_start":1,"column_end":69}},{"value":"/     futures::pending!();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":451406,"byte_end":451434,"line_start":70,"line_end":70,"column_start":1,"column_end":29}},{"value":"/     42_u8","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":451435,"byte_end":451448,"line_start":71,"line_end":71,"column_start":1,"column_end":14}},{"value":"/ })));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":451449,"byte_end":451458,"line_start":72,"line_end":72,"column_start":1,"column_end":10}},{"value":"/ assert_eq!(p.next().await, Some(Poll::Pending));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":451459,"byte_end":451511,"line_start":73,"line_end":73,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(p.next().await, Some(Poll::Ready(42)));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":451512,"byte_end":451566,"line_start":74,"line_end":74,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(p.next().await, None);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":451567,"byte_end":451604,"line_start":75,"line_end":75,"column_start":1,"column_end":38}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":451605,"byte_end":451614,"line_start":76,"line_end":76,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":451615,"byte_end":451622,"line_start":77,"line_end":77,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":15247},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":452177,"byte_end":452183,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Select","qualname":"::stream::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":15250}],"decl_id":null,"docs":" Stream for the [`select()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":5845},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":453209,"byte_end":453215,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"select","qualname":"::stream::select::select","value":"fn select<St1, St2>(St1, St2) -> Select<St1, St2> where St1: Stream,\nSt2: Stream<Item = St1::Item>","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. Each\n stream will be polled in a round-robin fashion, and whenever a stream is\n ready to yield an item that item is yielded.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. Each","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":452305,"byte_end":452373,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/ stream will be polled in a round-robin fashion, and whenever a stream is","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":452374,"byte_end":452450,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ ready to yield an item that item is yielded.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":452451,"byte_end":452499,"line_start":20,"line_end":20,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":452500,"byte_end":452503,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ After one of the two input streams completes, the remaining one will be","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":452504,"byte_end":452579,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":452580,"byte_end":452649,"line_start":23,"line_end":23,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":452650,"byte_end":452677,"line_start":24,"line_end":24,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":452678,"byte_end":452681,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":452682,"byte_end":452753,"line_start":26,"line_end":26,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":452754,"byte_end":452774,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":452775,"byte_end":452778,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":452779,"byte_end":452794,"line_start":29,"line_end":29,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":452795,"byte_end":452798,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":452799,"byte_end":452810,"line_start":31,"line_end":31,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":452811,"byte_end":452852,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{ repeat, select, StreamExt };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":452853,"byte_end":452908,"line_start":33,"line_end":33,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":452909,"byte_end":452912,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let left = repeat(1);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":452913,"byte_end":452938,"line_start":35,"line_end":35,"column_start":1,"column_end":26}},{"value":"/ let right = repeat(2);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":452939,"byte_end":452965,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":452966,"byte_end":452969,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let mut out = select(left, right);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":452970,"byte_end":453008,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":453009,"byte_end":453012,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..100 {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":453013,"byte_end":453034,"line_start":40,"line_end":40,"column_start":1,"column_end":22}},{"value":"/     // We should be alternating.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":453035,"byte_end":453071,"line_start":41,"line_end":41,"column_start":1,"column_end":37}},{"value":"/     assert_eq!(1, out.select_next_some().await);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":453072,"byte_end":453124,"line_start":42,"line_end":42,"column_start":1,"column_end":53}},{"value":"/     assert_eq!(2, out.select_next_some().await);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":453125,"byte_end":453177,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":453178,"byte_end":453183,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":453184,"byte_end":453193,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":453194,"byte_end":453201,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5852},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":453684,"byte_end":453691,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Select<St1, St2>>::get_ref","value":"fn get_ref<'_>(&'_ Self) -> (&'_ St1, &'_ St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":453576,"byte_end":453650,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":453655,"byte_end":453672,"line_start":63,"line_end":63,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5853},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":454019,"byte_end":454026,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Select<St1, St2>>::get_mut","value":"fn get_mut<'_>(&'_ mut Self) -> (&'_ mut St1, &'_ mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":453757,"byte_end":453825,"line_start":68,"line_end":68,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":453830,"byte_end":453861,"line_start":69,"line_end":69,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":453866,"byte_end":453869,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":453874,"byte_end":453947,"line_start":71,"line_end":71,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":453952,"byte_end":454007,"line_start":72,"line_end":72,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5854},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":454373,"byte_end":454384,"line_start":82,"line_end":82,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Select<St1, St2>>::get_pin_mut","value":"fn get_pin_mut<'_>(Pin<&'_ mut Self>) -> (Pin<&'_ mut St1>, Pin<&'_ mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":454104,"byte_end":454179,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":454184,"byte_end":454215,"line_start":78,"line_end":78,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":454220,"byte_end":454223,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":454228,"byte_end":454301,"line_start":80,"line_end":80,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":454306,"byte_end":454361,"line_start":81,"line_end":81,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5855},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":454758,"byte_end":454768,"line_start":91,"line_end":91,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Select<St1, St2>>::into_inner","value":"fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":454522,"byte_end":454585,"line_start":87,"line_end":87,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":454590,"byte_end":454593,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":454598,"byte_end":454670,"line_start":89,"line_end":89,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":454675,"byte_end":454746,"line_start":90,"line_end":90,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":5859},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":454947,"byte_end":454960,"line_start":101,"line_end":101,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Select<St1, St2> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5864},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":455160,"byte_end":455169,"line_start":113,"line_end":113,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Select<St1, St2> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<St1::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":15293},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":455672,"byte_end":455676,"line_start":11,"line_end":11,"column_start":5,"column_end":9},"name":"Left","qualname":"::stream::select_with_strategy::PollNext::Left","value":"PollNext::Left","parent":{"krate":0,"index":15292},"children":[],"decl_id":null,"docs":" Poll the first stream.\n","sig":null,"attributes":[{"value":"/ Poll the first stream.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":455641,"byte_end":455667,"line_start":10,"line_end":10,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":15295},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":455714,"byte_end":455719,"line_start":13,"line_end":13,"column_start":5,"column_end":10},"name":"Right","qualname":"::stream::select_with_strategy::PollNext::Right","value":"PollNext::Right","parent":{"krate":0,"index":15292},"children":[],"decl_id":null,"docs":" Poll the second stream.\n","sig":null,"attributes":[{"value":"/ Poll the second stream.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":455682,"byte_end":455709,"line_start":12,"line_end":12,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":15292},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":455626,"byte_end":455634,"line_start":9,"line_end":9,"column_start":10,"column_end":18},"name":"PollNext","qualname":"::stream::select_with_strategy::PollNext","value":"enum PollNext { Left, Right, }","parent":null,"children":[{"krate":0,"index":15293},{"krate":0,"index":15295}],"decl_id":null,"docs":" Type to tell [`SelectWithStrategy`] which stream to poll next.\n","sig":null,"attributes":[{"value":"/ Type to tell [`SelectWithStrategy`] which stream to poll next.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":455499,"byte_end":455565,"line_start":7,"line_end":7,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":5901},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":455800,"byte_end":455806,"line_start":18,"line_end":18,"column_start":12,"column_end":18},"name":"toggle","qualname":"<PollNext>::toggle","value":"fn toggle<'_>(&'_ mut Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Toggle the value and return the old one.\n","sig":null,"attributes":[{"value":"/ Toggle the value and return the old one.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":455744,"byte_end":455788,"line_start":17,"line_end":17,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5904},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":456105,"byte_end":456112,"line_start":33,"line_end":33,"column_start":8,"column_end":15},"name":"default","qualname":"<PollNext as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15311},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":457030,"byte_end":457048,"line_start":67,"line_end":67,"column_start":16,"column_end":34},"name":"SelectWithStrategy","qualname":"::stream::select_with_strategy::SelectWithStrategy","value":"SelectWithStrategy {  }","parent":null,"children":[{"krate":0,"index":15316},{"krate":0,"index":15317},{"krate":0,"index":15318},{"krate":0,"index":15319},{"krate":0,"index":15320}],"decl_id":null,"docs":" Stream for the [`select_with_strategy()`] function. See function docs for details.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":5916},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":459367,"byte_end":459387,"line_start":139,"line_end":139,"column_start":8,"column_end":28},"name":"select_with_strategy","qualname":"::stream::select_with_strategy::select_with_strategy","value":"fn select_with_strategy<St1, St2, Clos, State>(St1, St2, Clos)\n-> SelectWithStrategy<St1, St2, Clos, State> where St1: Stream,\nSt2: Stream<Item = St1::Item>, Clos: for<'_> FnMut(&'_ mut State) -> PollNext,\nState: Default","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. You provide a\n closure to tell [`SelectWithStrategy`] which stream to poll. The closure can\n store state on `SelectWithStrategy` to which it will receive a `&mut` on every\n invocation. This allows basing the strategy on prior choices.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. You provide a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":457238,"byte_end":457315,"line_start":78,"line_end":78,"column_start":1,"column_end":78}},{"value":"/ closure to tell [`SelectWithStrategy`] which stream to poll. The closure can","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":457316,"byte_end":457396,"line_start":79,"line_end":79,"column_start":1,"column_end":81}},{"value":"/ store state on `SelectWithStrategy` to which it will receive a `&mut` on every","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":457397,"byte_end":457479,"line_start":80,"line_end":80,"column_start":1,"column_end":83}},{"value":"/ invocation. This allows basing the strategy on prior choices.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":457480,"byte_end":457545,"line_start":81,"line_end":81,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":457546,"byte_end":457549,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ After one of the two input streams completes, the remaining one will be","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":457550,"byte_end":457625,"line_start":83,"line_end":83,"column_start":1,"column_end":76}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":457626,"byte_end":457695,"line_start":84,"line_end":84,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":457696,"byte_end":457723,"line_start":85,"line_end":85,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":457724,"byte_end":457727,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":457728,"byte_end":457799,"line_start":87,"line_end":87,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":457800,"byte_end":457820,"line_start":88,"line_end":88,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":457821,"byte_end":457824,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":457825,"byte_end":457840,"line_start":90,"line_end":90,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":457841,"byte_end":457844,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ### Priority","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":457845,"byte_end":457861,"line_start":92,"line_end":92,"column_start":1,"column_end":17}},{"value":"/ This example shows how to always prioritize the left stream.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":457862,"byte_end":457926,"line_start":93,"line_end":93,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":457927,"byte_end":457930,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":457931,"byte_end":457942,"line_start":95,"line_end":95,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":457943,"byte_end":457984,"line_start":96,"line_end":96,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{ repeat, select_with_strategy, PollNext, StreamExt };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":457985,"byte_end":458064,"line_start":97,"line_end":97,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":458065,"byte_end":458068,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ let left = repeat(1);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":458069,"byte_end":458094,"line_start":99,"line_end":99,"column_start":1,"column_end":26}},{"value":"/ let right = repeat(2);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":458095,"byte_end":458121,"line_start":100,"line_end":100,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":458122,"byte_end":458125,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ // We don't need any state, so let's make it an empty tuple.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":458126,"byte_end":458190,"line_start":102,"line_end":102,"column_start":1,"column_end":65}},{"value":"/ // We must provide some type here, as there is no way for the compiler","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":458191,"byte_end":458265,"line_start":103,"line_end":103,"column_start":1,"column_end":75}},{"value":"/ // to infer it. As we don't need to capture variables, we can just","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":458266,"byte_end":458336,"line_start":104,"line_end":104,"column_start":1,"column_end":71}},{"value":"/ // use a function pointer instead of a closure.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":458337,"byte_end":458388,"line_start":105,"line_end":105,"column_start":1,"column_end":52}},{"value":"/ fn prio_left(_: &mut ()) -> PollNext { PollNext::Left }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":458389,"byte_end":458448,"line_start":106,"line_end":106,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":458449,"byte_end":458452,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ let mut out = select_with_strategy(left, right, prio_left);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":458453,"byte_end":458516,"line_start":108,"line_end":108,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":458517,"byte_end":458520,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..100 {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":458521,"byte_end":458542,"line_start":110,"line_end":110,"column_start":1,"column_end":22}},{"value":"/     // Whenever we poll out, we will alwas get `1`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":458543,"byte_end":458598,"line_start":111,"line_end":111,"column_start":1,"column_end":56}},{"value":"/     assert_eq!(1, out.select_next_some().await);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":458599,"byte_end":458651,"line_start":112,"line_end":112,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":458652,"byte_end":458657,"line_start":113,"line_end":113,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":458658,"byte_end":458667,"line_start":114,"line_end":114,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":458668,"byte_end":458675,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":458676,"byte_end":458679,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ ### Round Robin","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":458680,"byte_end":458699,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/ This example shows how to select from both streams round robin.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":458700,"byte_end":458767,"line_start":118,"line_end":118,"column_start":1,"column_end":68}},{"value":"/ Note: this special case is provided by [`futures-util::stream::select`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":458768,"byte_end":458844,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":458845,"byte_end":458848,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":458849,"byte_end":458860,"line_start":121,"line_end":121,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":458861,"byte_end":458902,"line_start":122,"line_end":122,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{ repeat, select_with_strategy, PollNext, StreamExt };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":458903,"byte_end":458982,"line_start":123,"line_end":123,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":458983,"byte_end":458986,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ let left = repeat(1);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":458987,"byte_end":459012,"line_start":125,"line_end":125,"column_start":1,"column_end":26}},{"value":"/ let right = repeat(2);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":459013,"byte_end":459039,"line_start":126,"line_end":126,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":459040,"byte_end":459043,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ let rrobin = |last: &mut PollNext| last.toggle();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":459044,"byte_end":459097,"line_start":128,"line_end":128,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":459098,"byte_end":459101,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ let mut out = select_with_strategy(left, right, rrobin);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":459102,"byte_end":459162,"line_start":130,"line_end":130,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":459163,"byte_end":459166,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..100 {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":459167,"byte_end":459188,"line_start":132,"line_end":132,"column_start":1,"column_end":22}},{"value":"/     // We should be alternating now.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":459189,"byte_end":459229,"line_start":133,"line_end":133,"column_start":1,"column_end":41}},{"value":"/     assert_eq!(1, out.select_next_some().await);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":459230,"byte_end":459282,"line_start":134,"line_end":134,"column_start":1,"column_end":53}},{"value":"/     assert_eq!(2, out.select_next_some().await);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":459283,"byte_end":459335,"line_start":135,"line_end":135,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":459336,"byte_end":459341,"line_start":136,"line_end":136,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":459342,"byte_end":459351,"line_start":137,"line_end":137,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":459352,"byte_end":459359,"line_start":138,"line_end":138,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5926},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":460018,"byte_end":460025,"line_start":162,"line_end":162,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::get_ref","value":"fn get_ref<'_>(&'_ Self) -> (&'_ St1, &'_ St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":459910,"byte_end":459984,"line_start":160,"line_end":160,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":459989,"byte_end":460006,"line_start":161,"line_end":161,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5927},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":460363,"byte_end":460370,"line_start":171,"line_end":171,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::get_mut","value":"fn get_mut<'_>(&'_ mut Self) -> (&'_ mut St1, &'_ mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":460101,"byte_end":460169,"line_start":166,"line_end":166,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":460174,"byte_end":460205,"line_start":167,"line_end":167,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":460210,"byte_end":460213,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":460218,"byte_end":460291,"line_start":169,"line_end":169,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":460296,"byte_end":460351,"line_start":170,"line_end":170,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5928},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":460735,"byte_end":460746,"line_start":180,"line_end":180,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::get_pin_mut","value":"fn get_pin_mut<'_>(Pin<&'_ mut Self>) -> (Pin<&'_ mut St1>, Pin<&'_ mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":460466,"byte_end":460541,"line_start":175,"line_end":175,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":460546,"byte_end":460577,"line_start":176,"line_end":176,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":460582,"byte_end":460585,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":460590,"byte_end":460663,"line_start":178,"line_end":178,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":460668,"byte_end":460723,"line_start":179,"line_end":179,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5929},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":461124,"byte_end":461134,"line_start":189,"line_end":189,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::into_inner","value":"fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":460888,"byte_end":460951,"line_start":185,"line_end":185,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":460956,"byte_end":460959,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":460964,"byte_end":461036,"line_start":187,"line_end":187,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":461041,"byte_end":461112,"line_start":188,"line_end":188,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":5935},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":461397,"byte_end":461410,"line_start":200,"line_end":200,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<SelectWithStrategy<St1, St2, Clos, State> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5952},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":463013,"byte_end":463022,"line_start":264,"line_end":264,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<SelectWithStrategy<St1, St2, Clos, State> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<St1::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5958},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":464149,"byte_end":464152,"line_start":297,"line_end":297,"column_start":8,"column_end":11},"name":"fmt","qualname":"<SelectWithStrategy<St1, St2, Clos, State> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":6005},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":466138,"byte_end":466144,"line_start":50,"line_end":50,"column_start":8,"column_end":14},"name":"unfold","qualname":"::stream::unfold::unfold","value":"fn unfold<T, F, Fut, Item>(T, F) -> Unfold<T, F, Fut> where F: FnMut(T) ->\nFut, Fut: Future<Output = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Stream` from a seed and a closure returning a `Future`.","sig":null,"attributes":[{"value":"/ Creates a `Stream` from a seed and a closure returning a `Future`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":464696,"byte_end":464766,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":464767,"byte_end":464770,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `Stream::fold()` adapter: while","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":464771,"byte_end":464840,"line_start":13,"line_end":13,"column_start":1,"column_end":70}},{"value":"/ `Stream::fold()` reduces a `Stream` to one single value, `unfold()` creates a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":464841,"byte_end":464922,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/ `Stream` from a seed value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":464923,"byte_end":464954,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":464955,"byte_end":464958,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ `unfold()` will call the provided closure with the provided seed, then wait","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":464959,"byte_end":465038,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ for the returned `Future` to complete with `(a, b)`. It will then yield the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":465039,"byte_end":465118,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ value `a`, and use `b` as the next internal state.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":465119,"byte_end":465173,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":465174,"byte_end":465177,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(Future)`, then the `unfold()`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":465178,"byte_end":465258,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ will stop producing items and return `Poll::Ready(None)` in future","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":465259,"byte_end":465329,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ calls to `poll()`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":465330,"byte_end":465352,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":465353,"byte_end":465356,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":465357,"byte_end":465434,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":465435,"byte_end":465507,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ `Future` using other library functions working on futures, and `unfold()`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":465508,"byte_end":465585,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ will turn it into a `Stream` by repeating the operation.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":465586,"byte_end":465646,"line_start":28,"line_end":28,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":465647,"byte_end":465650,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":465651,"byte_end":465664,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":465665,"byte_end":465668,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":465669,"byte_end":465676,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":465677,"byte_end":465718,"line_start":33,"line_end":33,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":465719,"byte_end":465762,"line_start":34,"line_end":34,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":465763,"byte_end":465766,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::unfold(0, |state| async move {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":465767,"byte_end":465822,"line_start":36,"line_end":36,"column_start":1,"column_end":56}},{"value":"/     if state <= 2 {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":465823,"byte_end":465846,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":465847,"byte_end":465886,"line_start":38,"line_end":38,"column_start":1,"column_end":40}},{"value":"/         let yielded = state  * 2;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":465887,"byte_end":465924,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/         Some((yielded, next_state))","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":465925,"byte_end":465964,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"/     } else {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":465965,"byte_end":465981,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/         None","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":465982,"byte_end":465998,"line_start":42,"line_end":42,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":465999,"byte_end":466008,"line_start":43,"line_end":43,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":466009,"byte_end":466016,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":466017,"byte_end":466020,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ let result = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":466021,"byte_end":466073,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(result, vec![0, 2, 4]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":466074,"byte_end":466112,"line_start":47,"line_end":47,"column_start":1,"column_end":39}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":466113,"byte_end":466122,"line_start":48,"line_end":48,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":466123,"byte_end":466130,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":15384},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":466491,"byte_end":466497,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"name":"Unfold","qualname":"::stream::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":15388},{"krate":0,"index":15389}],"decl_id":null,"docs":" Stream for the [`unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6014},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":466689,"byte_end":466692,"line_start":73,"line_end":73,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Unfold<T, F, Fut> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6020},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":466964,"byte_end":466977,"line_start":83,"line_end":83,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Unfold<T, F, Fut> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6027},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":467273,"byte_end":467282,"line_start":99,"line_end":99,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Unfold<T, F, Fut> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6105},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":471548,"byte_end":471562,"line_start":95,"line_end":95,"column_start":12,"column_end":26},"name":"FuturesOrdered","qualname":"::stream::futures_ordered::FuturesOrdered","value":"FuturesOrdered {  }","parent":null,"children":[{"krate":0,"index":6107},{"krate":0,"index":6108},{"krate":0,"index":6109},{"krate":0,"index":6110}],"decl_id":null,"docs":" An unbounded queue of futures.","sig":null,"attributes":[{"value":"/ An unbounded queue of futures.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":469482,"byte_end":469516,"line_start":59,"line_end":59,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":469517,"byte_end":469520,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ This \"combinator\" is similar to `FuturesUnordered`, but it imposes an order","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":469521,"byte_end":469600,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ on top of the set of futures. While futures in the set will race to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":469601,"byte_end":469672,"line_start":62,"line_end":62,"column_start":1,"column_end":72}},{"value":"/ completion in parallel, results will only be returned in the order their","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":469673,"byte_end":469749,"line_start":63,"line_end":63,"column_start":1,"column_end":77}},{"value":"/ originating futures were added to the queue.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":469750,"byte_end":469798,"line_start":64,"line_end":64,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":469799,"byte_end":469802,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Futures are pushed into this queue and their realized values are yielded in","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":469803,"byte_end":469882,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ order. This structure is optimized to manage a large number of futures.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":469883,"byte_end":469958,"line_start":67,"line_end":67,"column_start":1,"column_end":76}},{"value":"/ Futures managed by `FuturesOrdered` will only be polled when they generate","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":469959,"byte_end":470037,"line_start":68,"line_end":68,"column_start":1,"column_end":79}},{"value":"/ notifications. This reduces the required amount of work needed to coordinate","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":470038,"byte_end":470118,"line_start":69,"line_end":69,"column_start":1,"column_end":81}},{"value":"/ large numbers of futures.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":470119,"byte_end":470148,"line_start":70,"line_end":70,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":470149,"byte_end":470152,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ When a `FuturesOrdered` is first created, it does not contain any futures.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":470153,"byte_end":470231,"line_start":72,"line_end":72,"column_start":1,"column_end":79}},{"value":"/ Calling `poll` in this state will result in `Poll::Ready(None))` to be","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":470232,"byte_end":470306,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ returned. Futures are submitted to the queue using `push`; however, the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":470307,"byte_end":470382,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ future will **not** be polled at this point. `FuturesOrdered` will only","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":470383,"byte_end":470458,"line_start":75,"line_end":75,"column_start":1,"column_end":76}},{"value":"/ poll managed futures when `FuturesOrdered::poll` is called. As such, it","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":470459,"byte_end":470534,"line_start":76,"line_end":76,"column_start":1,"column_end":76}},{"value":"/ is important to call `poll` after pushing new futures.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":470535,"byte_end":470593,"line_start":77,"line_end":77,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":470594,"byte_end":470597,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ If `FuturesOrdered::poll` returns `Poll::Ready(None)` this means that","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":470598,"byte_end":470671,"line_start":79,"line_end":79,"column_start":1,"column_end":74}},{"value":"/ the queue is currently not managing any futures. A future may be submitted","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":470672,"byte_end":470750,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/ to the queue at a later time. At that point, a call to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":470751,"byte_end":470809,"line_start":81,"line_end":81,"column_start":1,"column_end":59}},{"value":"/ `FuturesOrdered::poll` will either return the future's resolved value","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":470810,"byte_end":470883,"line_start":82,"line_end":82,"column_start":1,"column_end":74}},{"value":"/ **or** `Poll::Pending` if the future has not yet completed. When","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":470884,"byte_end":470952,"line_start":83,"line_end":83,"column_start":1,"column_end":69}},{"value":"/ multiple futures are submitted to the queue, `FuturesOrdered::poll` will","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":470953,"byte_end":471029,"line_start":84,"line_end":84,"column_start":1,"column_end":77}},{"value":"/ return `Poll::Pending` until the first future completes, even if","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":471030,"byte_end":471098,"line_start":85,"line_end":85,"column_start":1,"column_end":69}},{"value":"/ some of the later futures have already completed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":471099,"byte_end":471152,"line_start":86,"line_end":86,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":471153,"byte_end":471156,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made `FuturesOrdered` via the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":471157,"byte_end":471223,"line_start":88,"line_end":88,"column_start":1,"column_end":67}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty queue","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":471224,"byte_end":471303,"line_start":89,"line_end":89,"column_start":1,"column_end":80}},{"value":"/ with the `FuturesOrdered::new` constructor.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":471304,"byte_end":471351,"line_start":90,"line_end":90,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":471352,"byte_end":471355,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":471356,"byte_end":471429,"line_start":92,"line_end":92,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":471430,"byte_end":471487,"line_start":93,"line_end":93,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":471488,"byte_end":471536,"line_start":94,"line_end":94,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":6115},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":472070,"byte_end":472073,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesOrdered<Fut>>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `FuturesOrdered`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `FuturesOrdered`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":471850,"byte_end":471894,"line_start":105,"line_end":105,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":471899,"byte_end":471902,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ The returned `FuturesOrdered` does not contain any futures and, in this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":471907,"byte_end":471982,"line_start":107,"line_end":107,"column_start":5,"column_end":80}},{"value":"/ state, `FuturesOrdered::poll_next` will return `Poll::Ready(None)`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":471987,"byte_end":472058,"line_start":108,"line_end":108,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":6116},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":472570,"byte_end":472573,"line_start":123,"line_end":123,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesOrdered<Fut>>::len","value":"fn len<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the queue.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":472297,"byte_end":472354,"line_start":118,"line_end":118,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":472359,"byte_end":472362,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures, both","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":472367,"byte_end":472430,"line_start":120,"line_end":120,"column_start":5,"column_end":68}},{"value":"/ those currently processing and those that have completed but","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":472435,"byte_end":472499,"line_start":121,"line_end":121,"column_start":5,"column_end":69}},{"value":"/ which are waiting for earlier futures to complete.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":472504,"byte_end":472558,"line_start":122,"line_end":122,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":6117},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":472731,"byte_end":472739,"line_start":128,"line_end":128,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesOrdered<Fut>>::is_empty","value":"fn is_empty<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the queue contains no futures\n","sig":null,"attributes":[{"value":"/ Returns `true` if the queue contains no futures","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":472668,"byte_end":472719,"line_start":127,"line_end":127,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":6118},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":473215,"byte_end":473219,"line_start":139,"line_end":139,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesOrdered<Fut>>::push","value":"fn push<'_>(&'_ mut Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the queue.","sig":null,"attributes":[{"value":"/ Push a future into the queue.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":472844,"byte_end":472877,"line_start":132,"line_end":132,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":472882,"byte_end":472885,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This function submits the given future to the internal set for managing.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":472890,"byte_end":472966,"line_start":134,"line_end":134,"column_start":5,"column_end":81}},{"value":"/ This function will not call `poll` on the submitted future. The caller","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":472971,"byte_end":473045,"line_start":135,"line_end":135,"column_start":5,"column_end":79}},{"value":"/ must ensure that `FuturesOrdered::poll` is called in order to receive","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":473050,"byte_end":473123,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ task notifications.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":473128,"byte_end":473151,"line_start":137,"line_end":137,"column_start":5,"column_end":28}},{"value":"deprecated(note = \"use `push_back` instead\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":473156,"byte_end":473203,"line_start":138,"line_end":138,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":6119},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":473620,"byte_end":473629,"line_start":149,"line_end":149,"column_start":12,"column_end":21},"name":"push_back","qualname":"<FuturesOrdered<Fut>>::push_back","value":"fn push_back<'_>(&'_ mut Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Pushes a future to the back of the queue.","sig":null,"attributes":[{"value":"/ Pushes a future to the back of the queue.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":473289,"byte_end":473334,"line_start":143,"line_end":143,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":473339,"byte_end":473342,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ This function submits the given future to the internal set for managing.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":473347,"byte_end":473423,"line_start":145,"line_end":145,"column_start":5,"column_end":81}},{"value":"/ This function will not call `poll` on the submitted future. The caller","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":473428,"byte_end":473502,"line_start":146,"line_end":146,"column_start":5,"column_end":79}},{"value":"/ must ensure that `FuturesOrdered::poll` is called in order to receive","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":473507,"byte_end":473580,"line_start":147,"line_end":147,"column_start":5,"column_end":78}},{"value":"/ task notifications.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":473585,"byte_end":473608,"line_start":148,"line_end":148,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":6120},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":474239,"byte_end":474249,"line_start":162,"line_end":162,"column_start":12,"column_end":22},"name":"push_front","qualname":"<FuturesOrdered<Fut>>::push_front","value":"fn push_front<'_>(&'_ mut Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Pushes a future to the front of the queue.","sig":null,"attributes":[{"value":"/ Pushes a future to the front of the queue.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":473838,"byte_end":473884,"line_start":155,"line_end":155,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":473889,"byte_end":473892,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This function submits the given future to the internal set for managing.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":473897,"byte_end":473973,"line_start":157,"line_end":157,"column_start":5,"column_end":81}},{"value":"/ This function will not call `poll` on the submitted future. The caller","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":473978,"byte_end":474052,"line_start":158,"line_end":158,"column_start":5,"column_end":79}},{"value":"/ must ensure that `FuturesOrdered::poll` is called in order to receive","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":474057,"byte_end":474130,"line_start":159,"line_end":159,"column_start":5,"column_end":78}},{"value":"/ task notifications. This future will be the next future to be returned","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":474135,"byte_end":474209,"line_start":160,"line_end":160,"column_start":5,"column_end":79}},{"value":"/ complete.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":474214,"byte_end":474227,"line_start":161,"line_end":161,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":6123},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":474636,"byte_end":474643,"line_start":174,"line_end":174,"column_start":8,"column_end":15},"name":"default","qualname":"<FuturesOrdered<Fut> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6127},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":474773,"byte_end":474782,"line_start":182,"line_end":182,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<FuturesOrdered<Fut> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6128},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":475753,"byte_end":475762,"line_start":208,"line_end":208,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<FuturesOrdered<Fut> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6131},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":475919,"byte_end":475922,"line_start":215,"line_end":215,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FuturesOrdered<Fut> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6134},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":476099,"byte_end":476108,"line_start":221,"line_end":221,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<FuturesOrdered<Fut> as std::iter::FromIterator>::from_iter","value":"fn from_iter<T>(T) -> Self where T: IntoIterator<Item = Fut>","parent":{"krate":2,"index":8394},"children":[],"decl_id":{"krate":2,"index":8396},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6139},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":476398,"byte_end":476411,"line_start":234,"line_end":234,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<FuturesOrdered<Fut> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6142},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":476582,"byte_end":476588,"line_start":240,"line_end":240,"column_start":8,"column_end":14},"name":"extend","qualname":"<FuturesOrdered<Fut> as std::iter::Extend>::extend","value":"fn extend<I, '_>(&'_ mut Self, I) where I: IntoIterator<Item = Fut>","parent":{"krate":2,"index":8407},"children":[],"decl_id":{"krate":2,"index":8409},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":6147},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"futures_unordered","qualname":"::stream::futures_unordered","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","parent":null,"children":[{"krate":0,"index":6148},{"krate":0,"index":6151},{"krate":0,"index":6152},{"krate":0,"index":6155},{"krate":0,"index":6158},{"krate":0,"index":6161},{"krate":0,"index":6162},{"krate":0,"index":6165},{"krate":0,"index":6166},{"krate":0,"index":6168},{"krate":0,"index":6171},{"krate":0,"index":6172},{"krate":0,"index":6174},{"krate":0,"index":6177},{"krate":0,"index":6180},{"krate":0,"index":6183},{"krate":0,"index":6184},{"krate":0,"index":6185},{"krate":0,"index":6187},{"krate":0,"index":6188},{"krate":0,"index":6190},{"krate":0,"index":6191},{"krate":0,"index":6193},{"krate":0,"index":6194},{"krate":0,"index":6196},{"krate":0,"index":6197},{"krate":0,"index":6199},{"krate":0,"index":6200},{"krate":0,"index":6203},{"krate":0,"index":6206},{"krate":0,"index":6209},{"krate":0,"index":6210},{"krate":0,"index":6213},{"krate":0,"index":6216},{"krate":0,"index":6217},{"krate":0,"index":6220},{"krate":0,"index":6223},{"krate":0,"index":6224},{"krate":0,"index":6227},{"krate":0,"index":6230},{"krate":0,"index":6233},{"krate":0,"index":6236},{"krate":0,"index":6239},{"krate":0,"index":6245},{"krate":0,"index":6315},{"krate":0,"index":6316},{"krate":0,"index":6319},{"krate":0,"index":6320},{"krate":0,"index":6322},{"krate":0,"index":6323},{"krate":0,"index":6325},{"krate":0,"index":6328},{"krate":0,"index":6331},{"krate":0,"index":6399},{"krate":0,"index":6402},{"krate":0,"index":6461},{"krate":0,"index":6462},{"krate":0,"index":6465},{"krate":0,"index":6468},{"krate":0,"index":6473},{"krate":0,"index":6475},{"krate":0,"index":6477},{"krate":0,"index":6479},{"krate":0,"index":6481},{"krate":0,"index":6483},{"krate":0,"index":6486},{"krate":0,"index":6501},{"krate":0,"index":6514},{"krate":0,"index":6517},{"krate":0,"index":6521},{"krate":0,"index":6524},{"krate":0,"index":6530},{"krate":0,"index":6536},{"krate":0,"index":6541},{"krate":0,"index":6546},{"krate":0,"index":6549}],"decl_id":null,"docs":" An unbounded set of futures.","sig":null,"attributes":[{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":175093,"byte_end":175127,"line_start":110,"line_end":110,"column_start":1,"column_end":35}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":175128,"byte_end":175153,"line_start":111,"line_end":111,"column_start":1,"column_end":26}},{"value":"/ An unbounded set of futures.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":476745,"byte_end":476777,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":476778,"byte_end":476781,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":476782,"byte_end":476857,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":476858,"byte_end":476915,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":15477},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":504037,"byte_end":504047,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"IterPinMut","qualname":"::stream::futures_unordered::iter::IterPinMut","value":"IterPinMut {  }","parent":null,"children":[{"krate":0,"index":15480},{"krate":0,"index":15481},{"krate":0,"index":15482}],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":503949,"byte_end":504008,"line_start":8,"line_end":8,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":15487},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":504284,"byte_end":504291,"line_start":18,"line_end":18,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::stream::futures_unordered::iter::IterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":504196,"byte_end":504255,"line_start":16,"line_end":16,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":15496},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":504432,"byte_end":504442,"line_start":22,"line_end":22,"column_start":12,"column_end":22},"name":"IterPinRef","qualname":"::stream::futures_unordered::iter::IterPinRef","value":"IterPinRef {  }","parent":null,"children":[{"krate":0,"index":15499},{"krate":0,"index":15500},{"krate":0,"index":15501},{"krate":0,"index":15502}],"decl_id":null,"docs":" Immutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all futures in the unordered set.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":504342,"byte_end":504403,"line_start":20,"line_end":20,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":15507},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":504730,"byte_end":504734,"line_start":31,"line_end":31,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::futures_unordered::iter::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Immutable iterator over all the futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all the futures in the unordered set.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":504636,"byte_end":504701,"line_start":29,"line_end":29,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":15516},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":504871,"byte_end":504879,"line_start":35,"line_end":35,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::stream::futures_unordered::iter::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":15518},{"krate":0,"index":15519}],"decl_id":null,"docs":" Owned iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Owned iterator over all futures in the unordered set.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":504785,"byte_end":504842,"line_start":33,"line_end":33,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":6267},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":505044,"byte_end":505048,"line_start":43,"line_end":43,"column_start":8,"column_end":12},"name":"next","qualname":"<IntoIter<Fut> as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8598},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6268},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":506060,"byte_end":506069,"line_start":70,"line_end":70,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IntoIter<Fut> as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8602},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6275},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":506297,"byte_end":506301,"line_start":80,"line_end":80,"column_start":8,"column_end":12},"name":"next","qualname":"<IterPinMut as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8598},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6276},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":506974,"byte_end":506983,"line_start":99,"line_end":99,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IterPinMut as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8602},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6283},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":507209,"byte_end":507213,"line_start":109,"line_end":109,"column_start":8,"column_end":12},"name":"next","qualname":"<IterMut as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8598},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6284},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":507303,"byte_end":507312,"line_start":113,"line_end":113,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IterMut as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8602},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6291},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":507531,"byte_end":507535,"line_start":123,"line_end":123,"column_start":8,"column_end":12},"name":"next","qualname":"<IterPinRef as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8598},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6292},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":508229,"byte_end":508238,"line_start":142,"line_end":142,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IterPinRef as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8602},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6299},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":508457,"byte_end":508461,"line_start":152,"line_end":152,"column_start":8,"column_end":12},"name":"next","qualname":"<Iter as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8598},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6300},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":508551,"byte_end":508560,"line_start":156,"line_end":156,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Iter as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8602},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6468},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":478859,"byte_end":478875,"line_start":55,"line_end":55,"column_start":12,"column_end":28},"name":"FuturesUnordered","qualname":"::stream::futures_unordered::FuturesUnordered","value":"FuturesUnordered {  }","parent":null,"children":[{"krate":0,"index":6470},{"krate":0,"index":6471},{"krate":0,"index":6472}],"decl_id":null,"docs":" A set of futures which may complete in any order.","sig":null,"attributes":[{"value":"/ A set of futures which may complete in any order.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":477764,"byte_end":477817,"line_start":34,"line_end":34,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":477818,"byte_end":477821,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This structure is optimized to manage a large number of futures.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":477822,"byte_end":477890,"line_start":36,"line_end":36,"column_start":1,"column_end":69}},{"value":"/ Futures managed by [`FuturesUnordered`] will only be polled when they","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":477891,"byte_end":477964,"line_start":37,"line_end":37,"column_start":1,"column_end":74}},{"value":"/ generate wake-up notifications. This reduces the required amount of work","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":477965,"byte_end":478041,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"/ needed to poll large numbers of futures.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":478042,"byte_end":478086,"line_start":39,"line_end":39,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":478087,"byte_end":478090,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ [`FuturesUnordered`] can be filled by [`collect`](Iterator::collect)ing an","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":478091,"byte_end":478169,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ iterator of futures into a [`FuturesUnordered`], or by","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":478170,"byte_end":478228,"line_start":42,"line_end":42,"column_start":1,"column_end":59}},{"value":"/ [`push`](FuturesUnordered::push)ing futures onto an existing","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":478229,"byte_end":478293,"line_start":43,"line_end":43,"column_start":1,"column_end":65}},{"value":"/ [`FuturesUnordered`]. When new futures are added,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":478294,"byte_end":478347,"line_start":44,"line_end":44,"column_start":1,"column_end":54}},{"value":"/ [`poll_next`](Stream::poll_next) must be called in order to begin receiving","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":478348,"byte_end":478427,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"/ wake-ups for new futures.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":478428,"byte_end":478457,"line_start":46,"line_end":46,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":478458,"byte_end":478461,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made [`FuturesUnordered`] via the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":478462,"byte_end":478532,"line_start":48,"line_end":48,"column_start":1,"column_end":71}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty set","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":478533,"byte_end":478610,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/ with the [`FuturesUnordered::new`] constructor.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":478611,"byte_end":478662,"line_start":50,"line_end":50,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":478663,"byte_end":478666,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":478667,"byte_end":478740,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":478741,"byte_end":478798,"line_start":53,"line_end":53,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":478799,"byte_end":478847,"line_start":54,"line_end":54,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":6480},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":479224,"byte_end":479233,"line_start":66,"line_end":66,"column_start":8,"column_end":17},"name":"spawn_obj","qualname":"<FuturesUnordered<FutureObj> as futures_task::Spawn>::spawn_obj","value":"fn spawn_obj<'_>(&'_ Self, FutureObj) -> Result<(), SpawnError>","parent":{"krate":23,"index":15},"children":[],"decl_id":{"krate":23,"index":16},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6482},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":479430,"byte_end":479445,"line_start":73,"line_end":73,"column_start":8,"column_end":23},"name":"spawn_local_obj","qualname":"<FuturesUnordered<LocalFutureObj> as futures_task::LocalSpawn>::spawn_local_obj","value":"fn spawn_local_obj<'_>(&'_ Self, LocalFutureObj) -> Result<(), SpawnError>","parent":{"krate":23,"index":18},"children":[],"decl_id":{"krate":23,"index":19},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6485},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":481134,"byte_end":481141,"line_start":105,"line_end":105,"column_start":8,"column_end":15},"name":"default","qualname":"<FuturesUnordered<Fut> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6488},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":481492,"byte_end":481495,"line_start":116,"line_end":116,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesUnordered<Fut>>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty [`FuturesUnordered`].","sig":null,"attributes":[{"value":"/ Constructs a new, empty [`FuturesUnordered`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":481221,"byte_end":481270,"line_start":111,"line_end":111,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":481275,"byte_end":481278,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ The returned [`FuturesUnordered`] does not contain any futures.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":481283,"byte_end":481350,"line_start":113,"line_end":113,"column_start":5,"column_end":72}},{"value":"/ In this state, [`FuturesUnordered::poll_next`](Stream::poll_next) will","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":481355,"byte_end":481429,"line_start":114,"line_end":114,"column_start":5,"column_end":79}},{"value":"/ return [`Poll::Ready(None)`](Poll::Ready).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":481434,"byte_end":481480,"line_start":115,"line_end":115,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":6489},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":482525,"byte_end":482528,"line_start":145,"line_end":145,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesUnordered<Fut>>::len","value":"fn len<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the set.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":482387,"byte_end":482442,"line_start":142,"line_end":142,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":482447,"byte_end":482450,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":482455,"byte_end":482513,"line_start":144,"line_end":144,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6490},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":482692,"byte_end":482700,"line_start":151,"line_end":151,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesUnordered<Fut>>::is_empty","value":"fn is_empty<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no futures.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no futures.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":482630,"byte_end":482680,"line_start":150,"line_end":150,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":6491},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":483283,"byte_end":483287,"line_start":163,"line_end":163,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesUnordered<Fut>>::push","value":"fn push<'_>(&'_ Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the set.","sig":null,"attributes":[{"value":"/ Push a future into the set.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":482913,"byte_end":482944,"line_start":157,"line_end":157,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":482949,"byte_end":482952,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ This method adds the given future to the set. This method will not","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":482957,"byte_end":483027,"line_start":159,"line_end":159,"column_start":5,"column_end":75}},{"value":"/ call [`poll`](core::future::Future::poll) on the submitted future. The caller must","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":483032,"byte_end":483118,"line_start":160,"line_end":160,"column_start":5,"column_end":91}},{"value":"/ ensure that [`FuturesUnordered::poll_next`](Stream::poll_next) is called","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":483123,"byte_end":483199,"line_start":161,"line_end":161,"column_start":5,"column_end":81}},{"value":"/ in order to receive wake-up notifications for the given future.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":483204,"byte_end":483271,"line_start":162,"line_end":162,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":6492},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":484605,"byte_end":484609,"line_start":192,"line_end":192,"column_start":12,"column_end":16},"name":"iter","qualname":"<FuturesUnordered<Fut>>::iter","value":"fn iter<'_>(&'_ Self) -> Iter where Fut: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each future in the set.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":484523,"byte_end":484593,"line_start":191,"line_end":191,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":6493},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":484807,"byte_end":484819,"line_start":200,"line_end":200,"column_start":12,"column_end":24},"name":"iter_pin_ref","qualname":"<FuturesUnordered<Fut>>::iter_pin_ref","value":"fn iter_pin_ref<'_>(Pin<&'_ Self>) -> IterPinRef","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each future in the set.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":484725,"byte_end":484795,"line_start":199,"line_end":199,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":6494},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":485148,"byte_end":485156,"line_start":208,"line_end":208,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<FuturesUnordered<Fut>>::iter_mut","value":"fn iter_mut<'_>(&'_ mut Self) -> IterMut where Fut: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":485067,"byte_end":485136,"line_start":207,"line_end":207,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":6495},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":485363,"byte_end":485375,"line_start":216,"line_end":216,"column_start":12,"column_end":24},"name":"iter_pin_mut","qualname":"<FuturesUnordered<Fut>>::iter_pin_mut","value":"fn iter_pin_mut<'_>(Pin<&'_ mut Self>) -> IterPinMut","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":485282,"byte_end":485351,"line_start":215,"line_end":215,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":6504},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":492879,"byte_end":492888,"line_start":388,"line_end":388,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<FuturesUnordered<Fut> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6513},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":499894,"byte_end":499903,"line_start":543,"line_end":543,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<FuturesUnordered<Fut> as futures_core::Stream>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6516},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":500054,"byte_end":500057,"line_start":550,"line_end":550,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FuturesUnordered<Fut> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6519},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":500258,"byte_end":500263,"line_start":557,"line_end":557,"column_start":12,"column_end":17},"name":"clear","qualname":"<FuturesUnordered<Fut>>::clear","value":"fn clear<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, removing all futures.\n","sig":null,"attributes":[{"value":"/ Clears the set, removing all futures.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":500205,"byte_end":500246,"line_start":556,"line_end":556,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":6523},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":500795,"byte_end":500799,"line_start":576,"line_end":576,"column_start":8,"column_end":12},"name":"drop","qualname":"<FuturesUnordered<Fut> as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6529},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":502117,"byte_end":502126,"line_start":602,"line_end":602,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a FuturesUnordered<Fut> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8398},"children":[],"decl_id":{"krate":2,"index":8401},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6535},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":502327,"byte_end":502336,"line_start":611,"line_end":611,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a mut FuturesUnordered<Fut> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8398},"children":[],"decl_id":{"krate":2,"index":8401},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6540},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":502518,"byte_end":502527,"line_start":620,"line_end":620,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<FuturesUnordered<Fut> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8398},"children":[],"decl_id":{"krate":2,"index":8401},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6543},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":502947,"byte_end":502956,"line_start":631,"line_end":631,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<FuturesUnordered<Fut> as std::iter::FromIterator>::from_iter","value":"fn from_iter<I>(I) -> Self where I: IntoIterator<Item = Fut>","parent":{"krate":2,"index":8394},"children":[],"decl_id":{"krate":2,"index":8396},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6548},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":503239,"byte_end":503252,"line_start":644,"line_end":644,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<FuturesUnordered<Fut> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6551},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":503377,"byte_end":503383,"line_start":650,"line_end":650,"column_start":8,"column_end":14},"name":"extend","qualname":"<FuturesUnordered<Fut> as std::iter::Extend>::extend","value":"fn extend<I, '_>(&'_ mut Self, I) where I: IntoIterator<Item = Fut>","parent":{"krate":2,"index":8407},"children":[],"decl_id":{"krate":2,"index":8409},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":6556},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"select_all","qualname":"::stream::select_all","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","parent":null,"children":[{"krate":0,"index":6557},{"krate":0,"index":6558},{"krate":0,"index":6561},{"krate":0,"index":6562},{"krate":0,"index":6564},{"krate":0,"index":6567},{"krate":0,"index":6570},{"krate":0,"index":6573},{"krate":0,"index":6574},{"krate":0,"index":6577},{"krate":0,"index":6580},{"krate":0,"index":6581},{"krate":0,"index":6584},{"krate":0,"index":6587},{"krate":0,"index":6590},{"krate":0,"index":6593},{"krate":0,"index":6594},{"krate":0,"index":6597},{"krate":0,"index":6600},{"krate":0,"index":6603},{"krate":0,"index":15523},{"krate":0,"index":15526},{"krate":0,"index":6606},{"krate":0,"index":6609},{"krate":0,"index":6618},{"krate":0,"index":6621},{"krate":0,"index":6625},{"krate":0,"index":6628},{"krate":0,"index":6630},{"krate":0,"index":6634},{"krate":0,"index":6638},{"krate":0,"index":6643},{"krate":0,"index":6649},{"krate":0,"index":15556},{"krate":0,"index":15561},{"krate":0,"index":15565},{"krate":0,"index":15570},{"krate":0,"index":15574},{"krate":0,"index":15578},{"krate":0,"index":6655},{"krate":0,"index":6661},{"krate":0,"index":6663},{"krate":0,"index":6669},{"krate":0,"index":6671},{"krate":0,"index":6676}],"decl_id":null,"docs":" An unbounded set of streams\n","sig":null,"attributes":[{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":175309,"byte_end":175343,"line_start":118,"line_end":118,"column_start":1,"column_end":35}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":175344,"byte_end":175369,"line_start":119,"line_end":119,"column_start":1,"column_end":26}},{"value":"/ An unbounded set of streams","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":517599,"byte_end":517630,"line_start":1,"line_end":1,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":15523},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":518670,"byte_end":518679,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"name":"SelectAll","qualname":"::stream::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":15525}],"decl_id":null,"docs":" An unbounded set of streams","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6608},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":518810,"byte_end":518813,"line_start":37,"line_end":37,"column_start":8,"column_end":11},"name":"fmt","qualname":"<SelectAll<St> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6611},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":519161,"byte_end":519164,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<SelectAll<St>>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `SelectAll`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `SelectAll`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":518961,"byte_end":519000,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":519005,"byte_end":519008,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ The returned `SelectAll` does not contain any streams and, in this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":519013,"byte_end":519083,"line_start":45,"line_end":45,"column_start":5,"column_end":75}},{"value":"/ state, `SelectAll::poll` will return `Poll::Ready(None)`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":519088,"byte_end":519149,"line_start":46,"line_end":46,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":6612},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":519374,"byte_end":519377,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"len","qualname":"<SelectAll<St>>::len","value":"fn len<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of streams contained in the set.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":519236,"byte_end":519291,"line_start":51,"line_end":51,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":519296,"byte_end":519299,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight streams.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":519304,"byte_end":519362,"line_start":53,"line_end":53,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6613},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":519493,"byte_end":519501,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SelectAll<St>>::is_empty","value":"fn is_empty<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no streams\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no streams","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":519432,"byte_end":519481,"line_start":58,"line_end":58,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":6614},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":519863,"byte_end":519867,"line_start":69,"line_end":69,"column_start":12,"column_end":16},"name":"push","qualname":"<SelectAll<St>>::push","value":"fn push<'_>(&'_ mut Self, St)","parent":null,"children":[],"decl_id":null,"docs":" Push a stream into the set.","sig":null,"attributes":[{"value":"/ Push a stream into the set.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":519560,"byte_end":519591,"line_start":63,"line_end":63,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":519596,"byte_end":519599,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ This function submits the given stream to the set for managing. This","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":519604,"byte_end":519676,"line_start":65,"line_end":65,"column_start":5,"column_end":77}},{"value":"/ function will not call `poll` on the submitted stream. The caller must","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":519681,"byte_end":519755,"line_start":66,"line_end":66,"column_start":5,"column_end":79}},{"value":"/ ensure that `SelectAll::poll` is called in order to receive task","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":519760,"byte_end":519828,"line_start":67,"line_end":67,"column_start":5,"column_end":73}},{"value":"/ notifications.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":519833,"byte_end":519851,"line_start":68,"line_end":68,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":6615},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":520033,"byte_end":520037,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"iter","qualname":"<SelectAll<St>>::iter","value":"fn iter<'_>(&'_ Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each stream in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each stream in the set.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":519951,"byte_end":520021,"line_start":73,"line_end":73,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":6616},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":520187,"byte_end":520195,"line_start":79,"line_end":79,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<SelectAll<St>>::iter_mut","value":"fn iter_mut<'_>(&'_ mut Self) -> IterMut","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each stream in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each stream in the set.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":520106,"byte_end":520175,"line_start":78,"line_end":78,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":6617},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":520331,"byte_end":520336,"line_start":84,"line_end":84,"column_start":12,"column_end":17},"name":"clear","qualname":"<SelectAll<St>>::clear","value":"fn clear<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, removing all streams.\n","sig":null,"attributes":[{"value":"/ Clears the set, removing all streams.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":520278,"byte_end":520319,"line_start":83,"line_end":83,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":6620},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":520446,"byte_end":520453,"line_start":90,"line_end":90,"column_start":8,"column_end":15},"name":"default","qualname":"<SelectAll<St> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6624},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":520581,"byte_end":520590,"line_start":98,"line_end":98,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<SelectAll<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6627},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":521347,"byte_end":521360,"line_start":118,"line_end":118,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<SelectAll<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":110},"children":[],"decl_id":{"krate":20,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":6628},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":522043,"byte_end":522053,"line_start":135,"line_end":135,"column_start":8,"column_end":18},"name":"select_all","qualname":"::stream::select_all::select_all","value":"fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Stream + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Convert a list of streams into a `Stream` of results from the streams.","sig":null,"attributes":[{"value":"/ Convert a list of streams into a `Stream` of results from the streams.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":521422,"byte_end":521496,"line_start":123,"line_end":123,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":521497,"byte_end":521500,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ This essentially takes a list of streams (e.g. a vector, an iterator, etc.)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":521501,"byte_end":521580,"line_start":125,"line_end":125,"column_start":1,"column_end":80}},{"value":"/ and bundles them together into a single stream.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":521581,"byte_end":521632,"line_start":126,"line_end":126,"column_start":1,"column_end":52}},{"value":"/ The stream will yield items as they become available on the underlying","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":521633,"byte_end":521707,"line_start":127,"line_end":127,"column_start":1,"column_end":75}},{"value":"/ streams internally, in the order they become available.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":521708,"byte_end":521767,"line_start":128,"line_end":128,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":521768,"byte_end":521771,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ Note that the returned set can also be used to dynamically push more","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":521772,"byte_end":521844,"line_start":130,"line_end":130,"column_start":1,"column_end":73}},{"value":"/ streams into the set as they become available.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":521845,"byte_end":521895,"line_start":131,"line_end":131,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":521896,"byte_end":521899,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":521900,"byte_end":521977,"line_start":133,"line_end":133,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":521978,"byte_end":522035,"line_start":134,"line_end":134,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":6632},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":522374,"byte_end":522383,"line_start":150,"line_end":150,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<SelectAll<St> as std::iter::FromIterator>::from_iter","value":"fn from_iter<T>(T) -> Self where T: IntoIterator<Item = St>","parent":{"krate":2,"index":8394},"children":[],"decl_id":{"krate":2,"index":8396},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6636},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":522528,"byte_end":522534,"line_start":156,"line_end":156,"column_start":8,"column_end":14},"name":"extend","qualname":"<SelectAll<St> as std::iter::Extend>::extend","value":"fn extend<T, '_>(&'_ mut Self, T) where T: IntoIterator<Item = St>","parent":{"krate":2,"index":8407},"children":[],"decl_id":{"krate":2,"index":8409},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6642},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":522775,"byte_end":522784,"line_start":167,"line_end":167,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<SelectAll<St> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8398},"children":[],"decl_id":{"krate":2,"index":8401},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6648},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":522993,"byte_end":523002,"line_start":176,"line_end":176,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a SelectAll<St> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8398},"children":[],"decl_id":{"krate":2,"index":8401},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6654},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":523201,"byte_end":523210,"line_start":185,"line_end":185,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a mut SelectAll<St> as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8398},"children":[],"decl_id":{"krate":2,"index":8401},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15556},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":523360,"byte_end":523364,"line_start":192,"line_end":192,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::select_all::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Immutable iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all streams in the unordered set.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":523270,"byte_end":523331,"line_start":190,"line_end":190,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":15565},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":523517,"byte_end":523524,"line_start":196,"line_end":196,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::stream::select_all::IterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all streams in the unordered set.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":523429,"byte_end":523488,"line_start":194,"line_end":194,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":15574},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":523678,"byte_end":523686,"line_start":200,"line_end":200,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::stream::select_all::IntoIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Owned iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Owned iterator over all streams in the unordered set.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":523592,"byte_end":523649,"line_start":198,"line_end":198,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":6659},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":523836,"byte_end":523840,"line_start":205,"line_end":205,"column_start":8,"column_end":12},"name":"next","qualname":"<Iter as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8598},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6660},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":524098,"byte_end":524107,"line_start":213,"line_end":213,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Iter as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8602},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6667},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":524339,"byte_end":524343,"line_start":223,"line_end":223,"column_start":8,"column_end":12},"name":"next","qualname":"<IterMut as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8598},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6668},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":524601,"byte_end":524610,"line_start":231,"line_end":231,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IterMut as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8602},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6674},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":524830,"byte_end":524834,"line_start":241,"line_end":241,"column_start":8,"column_end":12},"name":"next","qualname":"<IntoIter<St> as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8598},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6675},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":525095,"byte_end":525104,"line_start":249,"line_end":249,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IntoIter<St> as std::iter::Iterator>::size_hint","value":"fn size_hint<'_>(&'_ Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8602},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":6699},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/abortable.rs","byte_start":525701,"byte_end":525710,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"abortable","qualname":"::stream::abortable::abortable","value":"fn abortable<St>(St) -> (Abortable<St>, AbortHandle) where St: Stream","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` stream and an `AbortHandle` which can be used to stop it.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` stream and an `AbortHandle` which can be used to stop it.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/abortable.rs","byte_start":525331,"byte_end":525418,"line_start":5,"line_end":5,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/abortable.rs","byte_start":525419,"byte_end":525422,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function is a convenient (but less flexible) alternative to calling","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/abortable.rs","byte_start":525423,"byte_end":525499,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ `AbortHandle::new` and `Abortable::new` manually.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/abortable.rs","byte_start":525500,"byte_end":525553,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/abortable.rs","byte_start":525554,"byte_end":525557,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/abortable.rs","byte_start":525558,"byte_end":525635,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/abortable.rs","byte_start":525636,"byte_end":525693,"line_start":11,"line_end":11,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":6733},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":6734},{"krate":0,"index":6735},{"krate":0,"index":6738},{"krate":0,"index":6741},{"krate":0,"index":6744},{"krate":0,"index":6747},{"krate":0,"index":6750},{"krate":0,"index":6751},{"krate":0,"index":6754},{"krate":0,"index":6757},{"krate":0,"index":6760},{"krate":0,"index":6763},{"krate":0,"index":6766},{"krate":0,"index":6769},{"krate":0,"index":6772},{"krate":0,"index":6775},{"krate":0,"index":6778},{"krate":0,"index":6781},{"krate":0,"index":6782},{"krate":0,"index":6785},{"krate":0,"index":6788},{"krate":0,"index":6791},{"krate":0,"index":6825},{"krate":0,"index":6826},{"krate":0,"index":6829}],"decl_id":null,"docs":" Tools for working with tasks.","sig":null,"attributes":[{"value":"/ Tools for working with tasks.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":525938,"byte_end":525971,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":525972,"byte_end":525975,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":525976,"byte_end":526001,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":526002,"byte_end":526005,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - [`Spawn`], a trait for spawning new tasks.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":526006,"byte_end":526054,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/ - [`Context`], a context of an asynchronous task,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":526055,"byte_end":526108,"line_start":6,"line_end":6,"column_start":1,"column_end":54}},{"value":"/   including a handle for waking up the task.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":526109,"byte_end":526157,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/ - [`Waker`], a handle for waking up a task.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":526158,"byte_end":526205,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":526206,"byte_end":526209,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The remaining types and traits in the module are used for implementing","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":526210,"byte_end":526284,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ executors or dealing with synchronization issues around task wakeup.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":526285,"byte_end":526357,"line_start":11,"line_end":11,"column_start":1,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":6819},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":527607,"byte_end":527615,"line_start":20,"line_end":20,"column_start":11,"column_end":19},"name":"SpawnExt","qualname":"::task::spawn::SpawnExt","value":"SpawnExt: Spawn","parent":null,"children":[{"krate":0,"index":6820}],"decl_id":null,"docs":" Extension trait for `Spawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `Spawn`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":527564,"byte_end":527596,"line_start":19,"line_end":19,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":6820},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":528790,"byte_end":528795,"line_start":49,"line_end":49,"column_start":8,"column_end":13},"name":"spawn","qualname":"::task::spawn::SpawnExt::spawn","value":"fn spawn<Fut, '_>(&'_ Self, Fut) -> Result<(), SpawnError> where\nFut: Future<Output = ()> + Send + 'static","parent":{"krate":0,"index":6819},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":527629,"byte_end":527694,"line_start":21,"line_end":21,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":527699,"byte_end":527714,"line_start":22,"line_end":22,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":527719,"byte_end":527722,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":527727,"byte_end":527797,"line_start":24,"line_end":24,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":527802,"byte_end":527821,"line_start":25,"line_end":25,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":527826,"byte_end":527829,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":527834,"byte_end":527903,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":527908,"byte_end":527981,"line_start":28,"line_end":28,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":527986,"byte_end":528025,"line_start":29,"line_end":29,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":528030,"byte_end":528033,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":528038,"byte_end":528104,"line_start":31,"line_end":31,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":528109,"byte_end":528175,"line_start":32,"line_end":32,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":528180,"byte_end":528251,"line_start":33,"line_end":33,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":528256,"byte_end":528312,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":528317,"byte_end":528320,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":528325,"byte_end":528332,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ # {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":528337,"byte_end":528344,"line_start":37,"line_end":37,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::ThreadPool;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":528349,"byte_end":528387,"line_start":38,"line_end":38,"column_start":5,"column_end":43}},{"value":"/ use futures::task::SpawnExt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":528392,"byte_end":528424,"line_start":39,"line_end":39,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":528429,"byte_end":528432,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let executor = ThreadPool::new().unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":528437,"byte_end":528483,"line_start":41,"line_end":41,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":528488,"byte_end":528491,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":528496,"byte_end":528533,"line_start":43,"line_end":43,"column_start":5,"column_end":42}},{"value":"/ executor.spawn(future).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":528538,"byte_end":528574,"line_start":44,"line_end":44,"column_start":5,"column_end":41}},{"value":"/ # }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":528579,"byte_end":528586,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ # std::thread::sleep(std::time::Duration::from_millis(500)); // wait for background threads closed: https://github.com/rust-lang/miri/issues/1371","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":528591,"byte_end":528740,"line_start":46,"line_end":46,"column_start":5,"column_end":154}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":528745,"byte_end":528752,"line_start":47,"line_end":47,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":528757,"byte_end":528782,"line_start":48,"line_end":48,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":6822},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":530727,"byte_end":530740,"line_start":103,"line_end":103,"column_start":11,"column_end":24},"name":"LocalSpawnExt","qualname":"::task::spawn::LocalSpawnExt","value":"LocalSpawnExt: LocalSpawn","parent":null,"children":[{"krate":0,"index":6823}],"decl_id":null,"docs":" Extension trait for `LocalSpawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `LocalSpawn`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":530679,"byte_end":530716,"line_start":102,"line_end":102,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":6823},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":531783,"byte_end":531794,"line_start":130,"line_end":130,"column_start":8,"column_end":19},"name":"spawn_local","qualname":"::task::spawn::LocalSpawnExt::spawn_local","value":"fn spawn_local<Fut, '_>(&'_ Self, Fut) -> Result<(), SpawnError> where\nFut: Future<Output = ()> + 'static","parent":{"krate":0,"index":6822},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":530759,"byte_end":530824,"line_start":104,"line_end":104,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":530829,"byte_end":530844,"line_start":105,"line_end":105,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":530849,"byte_end":530852,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":530857,"byte_end":530927,"line_start":107,"line_end":107,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":530932,"byte_end":530951,"line_start":108,"line_end":108,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":530956,"byte_end":530959,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":530964,"byte_end":531033,"line_start":110,"line_end":110,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":531038,"byte_end":531111,"line_start":111,"line_end":111,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":531116,"byte_end":531155,"line_start":112,"line_end":112,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":531160,"byte_end":531163,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":531168,"byte_end":531234,"line_start":114,"line_end":114,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":531239,"byte_end":531305,"line_start":115,"line_end":115,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":531310,"byte_end":531381,"line_start":116,"line_end":116,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":531386,"byte_end":531442,"line_start":117,"line_end":117,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":531447,"byte_end":531450,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":531455,"byte_end":531462,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::LocalPool;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":531467,"byte_end":531504,"line_start":120,"line_end":120,"column_start":5,"column_end":42}},{"value":"/ use futures::task::LocalSpawnExt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":531509,"byte_end":531546,"line_start":121,"line_end":121,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":531551,"byte_end":531554,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let executor = LocalPool::new();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":531559,"byte_end":531595,"line_start":123,"line_end":123,"column_start":5,"column_end":41}},{"value":"/ let spawner = executor.spawner();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":531600,"byte_end":531637,"line_start":124,"line_end":124,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":531642,"byte_end":531645,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":531650,"byte_end":531687,"line_start":126,"line_end":126,"column_start":5,"column_end":42}},{"value":"/ spawner.spawn_local(future).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":531692,"byte_end":531733,"line_start":127,"line_end":127,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":531738,"byte_end":531745,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":531750,"byte_end":531775,"line_start":129,"line_end":129,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":6832},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"never","qualname":"::never","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","parent":null,"children":[{"krate":0,"index":6833}],"decl_id":null,"docs":" This module contains the `Never` type.","sig":null,"attributes":[{"value":"/ This module contains the `Never` type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":533199,"byte_end":533241,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":533242,"byte_end":533245,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Values of this type can never be created and will never exist.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":533246,"byte_end":533312,"line_start":3,"line_end":3,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":6833},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":533949,"byte_end":533954,"line_start":18,"line_end":18,"column_start":10,"column_end":15},"name":"Never","qualname":"::never::Never","value":"core::convert::Infallible","parent":null,"children":[],"decl_id":null,"docs":" A type with no possible values.","sig":null,"attributes":[{"value":"/ A type with no possible values.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":533314,"byte_end":533349,"line_start":5,"line_end":5,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":533350,"byte_end":533353,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is used to indicate values which can never be created, such as the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":533354,"byte_end":533429,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ error type of infallible futures.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":533430,"byte_end":533467,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":533468,"byte_end":533471,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This type is a stable equivalent to the `!` type from `std`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":533472,"byte_end":533536,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":533537,"byte_end":533540,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is currently an alias for [`std::convert::Infallible`], but in","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":533541,"byte_end":533612,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ the future it may be an alias for [`!`][never].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":533613,"byte_end":533664,"line_start":13,"line_end":13,"column_start":1,"column_end":52}},{"value":"/ See [\"Future compatibility\" section of `std::convert::Infallible`][infallible] for more.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":533665,"byte_end":533757,"line_start":14,"line_end":14,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":533758,"byte_end":533761,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [never]: https://doc.rust-lang.org/nightly/std/primitive.never.html","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":533762,"byte_end":533833,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/ [infallible]: https://doc.rust-lang.org/nightly/std/convert/enum.Infallible.html#future-compatibility","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":533834,"byte_end":533939,"line_start":17,"line_end":17,"column_start":1,"column_end":106}}]},{"kind":"Mod","id":{"krate":0,"index":6834},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":6835},{"krate":0,"index":6838},{"krate":0,"index":6841},{"krate":0,"index":6842},{"krate":0,"index":6845},{"krate":0,"index":6848},{"krate":0,"index":6849},{"krate":0,"index":6852},{"krate":0,"index":6855},{"krate":0,"index":6858},{"krate":0,"index":6861},{"krate":0,"index":6864},{"krate":0,"index":6867},{"krate":0,"index":6868},{"krate":0,"index":6871},{"krate":0,"index":6874},{"krate":0,"index":6877},{"krate":0,"index":6880},{"krate":0,"index":6881},{"krate":0,"index":6883},{"krate":0,"index":6970},{"krate":0,"index":6973},{"krate":0,"index":7064},{"krate":0,"index":7065},{"krate":0,"index":7068},{"krate":0,"index":7071},{"krate":0,"index":7152},{"krate":0,"index":7155},{"krate":0,"index":7203},{"krate":0,"index":7206},{"krate":0,"index":7262},{"krate":0,"index":7265},{"krate":0,"index":7295},{"krate":0,"index":7298},{"krate":0,"index":7343},{"krate":0,"index":7344},{"krate":0,"index":7347},{"krate":0,"index":7350},{"krate":0,"index":7388},{"krate":0,"index":7389},{"krate":0,"index":7392},{"krate":0,"index":7395},{"krate":0,"index":7447},{"krate":0,"index":7448},{"krate":0,"index":7451},{"krate":0,"index":7454},{"krate":0,"index":7514},{"krate":0,"index":7517},{"krate":0,"index":7551},{"krate":0,"index":7552},{"krate":0,"index":7555},{"krate":0,"index":7558},{"krate":0,"index":7589},{"krate":0,"index":7592},{"krate":0,"index":7622},{"krate":0,"index":7625},{"krate":0,"index":7664},{"krate":0,"index":7667},{"krate":0,"index":7697},{"krate":0,"index":7700},{"krate":0,"index":7734},{"krate":0,"index":7737},{"krate":0,"index":7773},{"krate":0,"index":7776},{"krate":0,"index":7821},{"krate":0,"index":7824},{"krate":0,"index":7868},{"krate":0,"index":7871},{"krate":0,"index":7920},{"krate":0,"index":7923},{"krate":0,"index":7961},{"krate":0,"index":7964},{"krate":0,"index":7999},{"krate":0,"index":8000},{"krate":0,"index":8003},{"krate":0,"index":8006},{"krate":0,"index":8040},{"krate":0,"index":8043},{"krate":0,"index":8078},{"krate":0,"index":8079},{"krate":0,"index":8082},{"krate":0,"index":8085},{"krate":0,"index":8164},{"krate":0,"index":8165},{"krate":0,"index":8168},{"krate":0,"index":8169},{"krate":0,"index":8171},{"krate":0,"index":8174},{"krate":0,"index":8217},{"krate":0,"index":8220},{"krate":0,"index":8247},{"krate":0,"index":8250},{"krate":0,"index":8280},{"krate":0,"index":8283},{"krate":0,"index":8317},{"krate":0,"index":8320},{"krate":0,"index":8356},{"krate":0,"index":8359},{"krate":0,"index":8374},{"krate":0,"index":8376},{"krate":0,"index":8385},{"krate":0,"index":8387},{"krate":0,"index":8390},{"krate":0,"index":8392},{"krate":0,"index":8400},{"krate":0,"index":8402},{"krate":0,"index":8404}],"decl_id":null,"docs":" Asynchronous I/O.","sig":null,"attributes":[{"value":"cfg(feature = \"io\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":11117,"byte_end":11139,"line_start":317,"line_end":317,"column_start":1,"column_end":23}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":11186,"byte_end":11209,"line_start":319,"line_end":319,"column_start":1,"column_end":24}},{"value":"/ Asynchronous I/O.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":533985,"byte_end":534006,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":534007,"byte_end":534010,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is the asynchronous version of `std::io`. It defines four","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":534011,"byte_end":534084,"line_start":3,"line_end":3,"column_start":1,"column_end":74}},{"value":"/ traits, [`AsyncRead`], [`AsyncWrite`], [`AsyncSeek`], and [`AsyncBufRead`],","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":534085,"byte_end":534164,"line_start":4,"line_end":4,"column_start":1,"column_end":80}},{"value":"/ which mirror the `Read`, `Write`, `Seek`, and `BufRead` traits of the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":534165,"byte_end":534238,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/ standard library. However, these traits integrate with the asynchronous","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":534239,"byte_end":534314,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ task system, so that if an I/O object isn't ready for reading (or writing),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":534315,"byte_end":534394,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ the thread is not blocked, and instead the current task is queued to be","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":534395,"byte_end":534470,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ woken when I/O is ready.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":534471,"byte_end":534499,"line_start":9,"line_end":9,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":534500,"byte_end":534503,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ In addition, the [`AsyncReadExt`], [`AsyncWriteExt`], [`AsyncSeekExt`], and","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":534504,"byte_end":534583,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ [`AsyncBufReadExt`] extension traits offer a variety of useful combinators","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":534584,"byte_end":534662,"line_start":12,"line_end":12,"column_start":1,"column_end":79}},{"value":"/ for operating with asynchronous I/O objects, including ways to work with","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":534663,"byte_end":534739,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ them using futures, streams and sinks.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":534740,"byte_end":534782,"line_start":14,"line_end":14,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":534783,"byte_end":534786,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` feature of this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":534787,"byte_end":534851,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":534852,"byte_end":534909,"line_start":17,"line_end":17,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":15581},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":562095,"byte_end":562105,"line_start":17,"line_end":17,"column_start":12,"column_end":22},"name":"AllowStdIo","qualname":"::io::allow_std::AllowStdIo","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple wrapper type which allows types which implement only\n implement `std::io::Read` or `std::io::Write`\n to be used in contexts which expect an `AsyncRead` or `AsyncWrite`.","sig":null,"attributes":[{"value":"/ A simple wrapper type which allows types which implement only","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":561446,"byte_end":561511,"line_start":6,"line_end":6,"column_start":1,"column_end":66}},{"value":"/ implement `std::io::Read` or `std::io::Write`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":561512,"byte_end":561561,"line_start":7,"line_end":7,"column_start":1,"column_end":50}},{"value":"/ to be used in contexts which expect an `AsyncRead` or `AsyncWrite`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":561562,"byte_end":561633,"line_start":8,"line_end":8,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":561634,"byte_end":561637,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ If these types issue an error with the kind `io::ErrorKind::WouldBlock`,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":561638,"byte_end":561714,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ it is expected that they will notify the current task on readiness.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":561715,"byte_end":561786,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ Synchronous `std` types should not issue errors of this kind and","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":561787,"byte_end":561855,"line_start":12,"line_end":12,"column_start":1,"column_end":69}},{"value":"/ are safe to use in this context. However, using these types with","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":561856,"byte_end":561924,"line_start":13,"line_end":13,"column_start":1,"column_end":69}},{"value":"/ `AllowStdIo` will cause the event loop to block, so they should be used","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":561925,"byte_end":562000,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/ with care.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":562001,"byte_end":562015,"line_start":15,"line_end":15,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":6928},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":562670,"byte_end":562673,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<AllowStdIo<T>>::new","value":"fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `AllowStdIo` from an existing IO object.\n","sig":null,"attributes":[{"value":"/ Creates a new `AllowStdIo` from an existing IO object.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":562600,"byte_end":562658,"line_start":40,"line_end":40,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6929},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":562782,"byte_end":562789,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<AllowStdIo<T>>::get_ref","value":"fn get_ref<'_>(&'_ Self) -> &'_ T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the contained IO object.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the contained IO object.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":562719,"byte_end":562770,"line_start":45,"line_end":45,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":6930},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":562903,"byte_end":562910,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<AllowStdIo<T>>::get_mut","value":"fn get_mut<'_>(&'_ mut Self) -> &'_ mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the contained IO object.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the contained IO object.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":562832,"byte_end":562891,"line_start":50,"line_end":50,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":6931},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":563031,"byte_end":563041,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<AllowStdIo<T>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes self and returns the contained IO object.\n","sig":null,"attributes":[{"value":"/ Consumes self and returns the contained IO object.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":562965,"byte_end":563019,"line_start":55,"line_end":55,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":6934},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":563148,"byte_end":563153,"line_start":65,"line_end":65,"column_start":8,"column_end":13},"name":"write","qualname":"<AllowStdIo<T> as std::io::Write>::write","value":"fn write<'_, '_>(&'_ mut Self, &'_ [u8]) -> io::Result<usize>","parent":{"krate":1,"index":4724},"children":[],"decl_id":{"krate":1,"index":4725},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6935},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":563239,"byte_end":563253,"line_start":68,"line_end":68,"column_start":8,"column_end":22},"name":"write_vectored","qualname":"<AllowStdIo<T> as std::io::Write>::write_vectored","value":"fn write_vectored<'_, '_, '_>(&'_ mut Self, &'_ [IoSlice])\n-> io::Result<usize>","parent":{"krate":1,"index":4724},"children":[],"decl_id":{"krate":1,"index":4726},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6936},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":563359,"byte_end":563364,"line_start":71,"line_end":71,"column_start":8,"column_end":13},"name":"flush","qualname":"<AllowStdIo<T> as std::io::Write>::flush","value":"fn flush<'_>(&'_ mut Self) -> io::Result<()>","parent":{"krate":1,"index":4724},"children":[],"decl_id":{"krate":1,"index":4729},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6937},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":563432,"byte_end":563441,"line_start":74,"line_end":74,"column_start":8,"column_end":17},"name":"write_all","qualname":"<AllowStdIo<T> as std::io::Write>::write_all","value":"fn write_all<'_, '_>(&'_ mut Self, &'_ [u8]) -> io::Result<()>","parent":{"krate":1,"index":4724},"children":[],"decl_id":{"krate":1,"index":4730},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6938},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":563528,"byte_end":563537,"line_start":77,"line_end":77,"column_start":8,"column_end":17},"name":"write_fmt","qualname":"<AllowStdIo<T> as std::io::Write>::write_fmt","value":"fn write_fmt<'_, '_>(&'_ mut Self, fmt::Arguments) -> io::Result<()>","parent":{"krate":1,"index":4724},"children":[],"decl_id":{"krate":1,"index":4732},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6941},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":563703,"byte_end":563713,"line_start":86,"line_end":86,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<AllowStdIo<T> as futures_io::AsyncWrite>::poll_write","value":"fn poll_write<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":26,"index":42},"children":[],"decl_id":{"krate":26,"index":43},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6942},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":563911,"byte_end":563930,"line_start":94,"line_end":94,"column_start":8,"column_end":27},"name":"poll_write_vectored","qualname":"<AllowStdIo<T> as futures_io::AsyncWrite>::poll_write_vectored","value":"fn poll_write_vectored<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [IoSlice])\n-> Poll<io::Result<usize>>","parent":{"krate":26,"index":42},"children":[],"decl_id":{"krate":26,"index":44},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6943},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":564148,"byte_end":564158,"line_start":102,"line_end":102,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<AllowStdIo<T> as futures_io::AsyncWrite>::poll_flush","value":"fn poll_flush<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":26,"index":42},"children":[],"decl_id":{"krate":26,"index":45},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6944},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":564319,"byte_end":564329,"line_start":107,"line_end":107,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<AllowStdIo<T> as futures_io::AsyncWrite>::poll_close","value":"fn poll_close<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":26,"index":42},"children":[],"decl_id":{"krate":26,"index":46},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6947},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":564504,"byte_end":564508,"line_start":116,"line_end":116,"column_start":8,"column_end":12},"name":"read","qualname":"<AllowStdIo<T> as std::io::Read>::read","value":"fn read<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> io::Result<usize>","parent":{"krate":1,"index":4667},"children":[],"decl_id":{"krate":1,"index":4668},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6948},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":564597,"byte_end":564610,"line_start":119,"line_end":119,"column_start":8,"column_end":21},"name":"read_vectored","qualname":"<AllowStdIo<T> as std::io::Read>::read_vectored","value":"fn read_vectored<'_, '_, '_>(&'_ mut Self, &'_ mut [IoSliceMut])\n-> io::Result<usize>","parent":{"krate":1,"index":4667},"children":[],"decl_id":{"krate":1,"index":4669},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6949},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":564722,"byte_end":564733,"line_start":122,"line_end":122,"column_start":8,"column_end":19},"name":"read_to_end","qualname":"<AllowStdIo<T> as std::io::Read>::read_to_end","value":"fn read_to_end<'_, '_>(&'_ mut Self, &'_ mut Vec<u8>) -> io::Result<usize>","parent":{"krate":1,"index":4667},"children":[],"decl_id":{"krate":1,"index":4672},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6950},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":564832,"byte_end":564846,"line_start":125,"line_end":125,"column_start":8,"column_end":22},"name":"read_to_string","qualname":"<AllowStdIo<T> as std::io::Read>::read_to_string","value":"fn read_to_string<'_, '_>(&'_ mut Self, &'_ mut String) -> io::Result<usize>","parent":{"krate":1,"index":4667},"children":[],"decl_id":{"krate":1,"index":4673},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6951},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":564947,"byte_end":564957,"line_start":128,"line_end":128,"column_start":8,"column_end":18},"name":"read_exact","qualname":"<AllowStdIo<T> as std::io::Read>::read_exact","value":"fn read_exact<'_, '_>(&'_ mut Self, &'_ mut [u8]) -> io::Result<()>","parent":{"krate":1,"index":4667},"children":[],"decl_id":{"krate":1,"index":4674},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6954},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":565113,"byte_end":565122,"line_start":137,"line_end":137,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<AllowStdIo<T> as futures_io::AsyncRead>::poll_read","value":"fn poll_read<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":26,"index":39},"children":[],"decl_id":{"krate":26,"index":40},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6955},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":565323,"byte_end":565341,"line_start":145,"line_end":145,"column_start":8,"column_end":26},"name":"poll_read_vectored","qualname":"<AllowStdIo<T> as futures_io::AsyncRead>::poll_read_vectored","value":"fn poll_read_vectored<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [IoSliceMut])\n-> Poll<io::Result<usize>>","parent":{"krate":26,"index":39},"children":[],"decl_id":{"krate":26,"index":41},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6958},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":565627,"byte_end":565631,"line_start":158,"line_end":158,"column_start":8,"column_end":12},"name":"seek","qualname":"<AllowStdIo<T> as std::io::Seek>::seek","value":"fn seek<'_>(&'_ mut Self, SeekFrom) -> io::Result<u64>","parent":{"krate":1,"index":4742},"children":[],"decl_id":{"krate":1,"index":4743},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6961},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":565781,"byte_end":565790,"line_start":167,"line_end":167,"column_start":8,"column_end":17},"name":"poll_seek","qualname":"<AllowStdIo<T> as futures_io::AsyncSeek>::poll_seek","value":"fn poll_seek<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, SeekFrom)\n-> Poll<io::Result<u64>>","parent":{"krate":26,"index":47},"children":[],"decl_id":{"krate":26,"index":48},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6964},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":566056,"byte_end":566064,"line_start":180,"line_end":180,"column_start":8,"column_end":16},"name":"fill_buf","qualname":"<AllowStdIo<T> as std::io::BufRead>::fill_buf","value":"fn fill_buf<'_>(&'_ mut Self) -> io::Result<&'_ [u8]>","parent":{"krate":1,"index":4749},"children":[],"decl_id":{"krate":1,"index":4750},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6965},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":566138,"byte_end":566145,"line_start":183,"line_end":183,"column_start":8,"column_end":15},"name":"consume","qualname":"<AllowStdIo<T> as std::io::BufRead>::consume","value":"fn consume<'_>(&'_ mut Self, usize)","parent":{"krate":1,"index":4749},"children":[],"decl_id":{"krate":1,"index":4751},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6968},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":566282,"byte_end":566295,"line_start":192,"line_end":192,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"<AllowStdIo<T> as futures_io::AsyncBufRead>::poll_fill_buf","value":"fn poll_fill_buf<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<&'_ [u8]>>","parent":{"krate":26,"index":49},"children":[],"decl_id":{"krate":26,"index":50},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6969},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":566519,"byte_end":566526,"line_start":197,"line_end":197,"column_start":8,"column_end":15},"name":"consume","qualname":"<AllowStdIo<T> as futures_io::AsyncBufRead>::consume","value":"fn consume<'_>(Pin<&'_ mut Self>, usize)","parent":{"krate":26,"index":49},"children":[],"decl_id":{"krate":26,"index":51},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15614},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":567907,"byte_end":567916,"line_start":31,"line_end":31,"column_start":16,"column_end":25},"name":"BufReader","qualname":"::io::buf_reader::BufReader","value":"BufReader {  }","parent":null,"children":[{"krate":0,"index":15616},{"krate":0,"index":15617},{"krate":0,"index":15618},{"krate":0,"index":15619}],"decl_id":null,"docs":" The `BufReader` struct adds buffering to any reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7031},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":568211,"byte_end":568214,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<BufReader<R>>::new","value":"fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":568069,"byte_end":568161,"line_start":41,"line_end":41,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":568166,"byte_end":568199,"line_start":42,"line_end":42,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":7032},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":568376,"byte_end":568389,"line_start":48,"line_end":48,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufReader<R>>::with_capacity","value":"fn with_capacity(usize, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufReader` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufReader` with the specified buffer capacity.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":568299,"byte_end":568364,"line_start":47,"line_end":47,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":7033},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":568895,"byte_end":568901,"line_start":62,"line_end":62,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufReader<R>>::buffer","value":"fn buffer<'_>(&'_ Self) -> &'_ [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":568735,"byte_end":568791,"line_start":59,"line_end":59,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":568796,"byte_end":568799,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Unlike `fill_buf`, this will not attempt to fill the buffer if it is empty.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":568804,"byte_end":568883,"line_start":61,"line_end":61,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":7037},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":569550,"byte_end":569563,"line_start":80,"line_end":80,"column_start":12,"column_end":25},"name":"seek_relative","qualname":"<BufReader<R>>::seek_relative","value":"fn seek_relative<'_>(Pin<&'_ mut Self>, i64) -> SeeKRelative","parent":null,"children":[],"decl_id":null,"docs":" Seeks relative to the current position. If the new position lies within the buffer,\n the buffer will not be flushed, allowing for more efficient seeks.\n This method does not return the location of the underlying reader, so the caller\n must track this information themselves if it is required.\n","sig":null,"attributes":[{"value":"/ Seeks relative to the current position. If the new position lies within the buffer,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":569221,"byte_end":569308,"line_start":76,"line_end":76,"column_start":5,"column_end":92}},{"value":"/ the buffer will not be flushed, allowing for more efficient seeks.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":569313,"byte_end":569383,"line_start":77,"line_end":77,"column_start":5,"column_end":75}},{"value":"/ This method does not return the location of the underlying reader, so the caller","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":569388,"byte_end":569472,"line_start":78,"line_end":78,"column_start":5,"column_end":89}},{"value":"/ must track this information themselves if it is required.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":569477,"byte_end":569538,"line_start":79,"line_end":79,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":7038},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":570033,"byte_end":570051,"line_start":88,"line_end":88,"column_start":12,"column_end":30},"name":"poll_seek_relative","qualname":"<BufReader<R>>::poll_seek_relative","value":"fn poll_seek_relative<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, i64)\n-> Poll<io::Result<()>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to seek relative to the current position. If the new position lies within the buffer,\n the buffer will not be flushed, allowing for more efficient seeks.\n This method does not return the location of the underlying reader, so the caller\n must track this information themselves if it is required.\n","sig":null,"attributes":[{"value":"/ Attempts to seek relative to the current position. If the new position lies within the buffer,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":569693,"byte_end":569791,"line_start":84,"line_end":84,"column_start":5,"column_end":103}},{"value":"/ the buffer will not be flushed, allowing for more efficient seeks.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":569796,"byte_end":569866,"line_start":85,"line_end":85,"column_start":5,"column_end":75}},{"value":"/ This method does not return the location of the underlying reader, so the caller","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":569871,"byte_end":569955,"line_start":86,"line_end":86,"column_start":5,"column_end":89}},{"value":"/ must track this information themselves if it is required.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":569960,"byte_end":570021,"line_start":87,"line_end":87,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":7043},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":570794,"byte_end":570803,"line_start":110,"line_end":110,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<BufReader<R> as futures_io::AsyncRead>::poll_read","value":"fn poll_read<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":26,"index":39},"children":[],"decl_id":{"krate":26,"index":40},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7044},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":571503,"byte_end":571521,"line_start":129,"line_end":129,"column_start":8,"column_end":26},"name":"poll_read_vectored","qualname":"<BufReader<R> as futures_io::AsyncRead>::poll_read_vectored","value":"fn poll_read_vectored<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [IoSliceMut])\n-> Poll<io::Result<usize>>","parent":{"krate":26,"index":39},"children":[],"decl_id":{"krate":26,"index":41},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7048},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":572205,"byte_end":572218,"line_start":148,"line_end":148,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"<BufReader<R> as futures_io::AsyncBufRead>::poll_fill_buf","value":"fn poll_fill_buf<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<&'_ [u8]>>","parent":{"krate":26,"index":49},"children":[],"decl_id":{"krate":26,"index":50},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7049},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":572868,"byte_end":572875,"line_start":163,"line_end":163,"column_start":8,"column_end":15},"name":"consume","qualname":"<BufReader<R> as futures_io::AsyncBufRead>::consume","value":"fn consume<'_>(Pin<&'_ mut Self>, usize)","parent":{"krate":26,"index":49},"children":[],"decl_id":{"krate":26,"index":51},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7054},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":573131,"byte_end":573134,"line_start":173,"line_end":173,"column_start":8,"column_end":11},"name":"fmt","qualname":"<BufReader<R> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7057},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":574630,"byte_end":574639,"line_start":204,"line_end":204,"column_start":8,"column_end":17},"name":"poll_seek","qualname":"<BufReader<R> as futures_io::AsyncSeek>::poll_seek","value":"fn poll_seek<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, SeekFrom)\n-> Poll<io::Result<u64>>","parent":{"krate":26,"index":47},"children":[],"decl_id":{"krate":26,"index":48},"docs":" Seek to an offset, in bytes, in the underlying reader.","sig":null,"attributes":[{"value":"/ Seek to an offset, in bytes, in the underlying reader.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":573453,"byte_end":573511,"line_start":182,"line_end":182,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":573516,"byte_end":573519,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ The position used for seeking with `SeekFrom::Current(_)` is the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":573524,"byte_end":573592,"line_start":184,"line_end":184,"column_start":5,"column_end":73}},{"value":"/ position the underlying reader would be at if the `BufReader` had no","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":573597,"byte_end":573669,"line_start":185,"line_end":185,"column_start":5,"column_end":77}},{"value":"/ internal buffer.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":573674,"byte_end":573694,"line_start":186,"line_end":186,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":573699,"byte_end":573702,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ Seeking always discards the internal buffer, even if the seek position","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":573707,"byte_end":573781,"line_start":188,"line_end":188,"column_start":5,"column_end":79}},{"value":"/ would otherwise fall within it. This guarantees that calling","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":573786,"byte_end":573850,"line_start":189,"line_end":189,"column_start":5,"column_end":69}},{"value":"/ `.into_inner()` immediately after a seek yields the underlying reader","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":573855,"byte_end":573928,"line_start":190,"line_end":190,"column_start":5,"column_end":78}},{"value":"/ at the same position.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":573933,"byte_end":573958,"line_start":191,"line_end":191,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":573963,"byte_end":573966,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ To seek without discarding the internal buffer, use","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":573971,"byte_end":574026,"line_start":193,"line_end":193,"column_start":5,"column_end":60}},{"value":"/ [`BufReader::seek_relative`](BufReader::seek_relative) or","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":574031,"byte_end":574092,"line_start":194,"line_end":194,"column_start":5,"column_end":66}},{"value":"/ [`BufReader::poll_seek_relative`](BufReader::poll_seek_relative).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":574097,"byte_end":574166,"line_start":195,"line_end":195,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":574171,"byte_end":574174,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ See [`AsyncSeek`](futures_io::AsyncSeek) for more details.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":574179,"byte_end":574241,"line_start":197,"line_end":197,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":574246,"byte_end":574249,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ Note: In the edge case where you're seeking with `SeekFrom::Current(n)`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":574254,"byte_end":574329,"line_start":199,"line_end":199,"column_start":5,"column_end":80}},{"value":"/ where `n` minus the internal buffer length overflows an `i64`, two","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":574334,"byte_end":574404,"line_start":200,"line_end":200,"column_start":5,"column_end":75}},{"value":"/ seeks will be performed instead of one. If the second seek returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":574409,"byte_end":574479,"line_start":201,"line_end":201,"column_start":5,"column_end":75}},{"value":"/ `Err`, the underlying reader will be left at the same position it would","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":574484,"byte_end":574559,"line_start":202,"line_end":202,"column_start":5,"column_end":80}},{"value":"/ have if you called `seek` with `SeekFrom::Current(0)`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":574564,"byte_end":574622,"line_start":203,"line_end":203,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":15667},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":576247,"byte_end":576259,"line_start":238,"line_end":238,"column_start":12,"column_end":24},"name":"SeeKRelative","qualname":"::io::buf_reader::SeeKRelative","value":"SeeKRelative {  }","parent":null,"children":[{"krate":0,"index":15670},{"krate":0,"index":15671},{"krate":0,"index":15672}],"decl_id":null,"docs":" Future for the [`BufReader::seek_relative`](self::BufReader::seek_relative) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`BufReader::seek_relative`](self::BufReader::seek_relative) method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":576082,"byte_end":576169,"line_start":235,"line_end":235,"column_start":1,"column_end":88}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":576187,"byte_end":576235,"line_start":237,"line_end":237,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":7061},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":576463,"byte_end":576467,"line_start":250,"line_end":250,"column_start":8,"column_end":12},"name":"poll","qualname":"<SeeKRelative as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15677},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":578334,"byte_end":578343,"line_start":33,"line_end":33,"column_start":16,"column_end":25},"name":"BufWriter","qualname":"::io::buf_writer::BufWriter","value":"BufWriter {  }","parent":null,"children":[{"krate":0,"index":15679},{"krate":0,"index":15680},{"krate":0,"index":15681}],"decl_id":null,"docs":" Wraps a writer and buffers its output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7125},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":578618,"byte_end":578621,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<BufWriter<W>>::new","value":"fn new(W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,\n but may change in the future.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with a default buffer capacity. The default is currently 8 KB,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":578476,"byte_end":578568,"line_start":42,"line_end":42,"column_start":5,"column_end":97}},{"value":"/ but may change in the future.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":578573,"byte_end":578606,"line_start":43,"line_end":43,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":7126},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":578783,"byte_end":578796,"line_start":49,"line_end":49,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<BufWriter<W>>::with_capacity","value":"fn with_capacity(usize, W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BufWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `BufWriter` with the specified buffer capacity.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":578706,"byte_end":578771,"line_start":48,"line_end":48,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":7128},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":579919,"byte_end":579925,"line_start":84,"line_end":84,"column_start":12,"column_end":18},"name":"buffer","qualname":"<BufWriter<W>>::buffer","value":"fn buffer<'_>(&'_ Self) -> &'_ [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the internally buffered data.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":579851,"byte_end":579907,"line_start":83,"line_end":83,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":7137},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":582087,"byte_end":582097,"line_start":152,"line_end":152,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<BufWriter<W> as futures_io::AsyncWrite>::poll_write","value":"fn poll_write<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":26,"index":42},"children":[],"decl_id":{"krate":26,"index":43},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7138},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":582535,"byte_end":582554,"line_start":167,"line_end":167,"column_start":8,"column_end":27},"name":"poll_write_vectored","qualname":"<BufWriter<W> as futures_io::AsyncWrite>::poll_write_vectored","value":"fn poll_write_vectored<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [IoSlice])\n-> Poll<io::Result<usize>>","parent":{"krate":26,"index":42},"children":[],"decl_id":{"krate":26,"index":44},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7140},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":583091,"byte_end":583101,"line_start":183,"line_end":183,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<BufWriter<W> as futures_io::AsyncWrite>::poll_flush","value":"fn poll_flush<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":26,"index":42},"children":[],"decl_id":{"krate":26,"index":45},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7141},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":583280,"byte_end":583290,"line_start":188,"line_end":188,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<BufWriter<W> as futures_io::AsyncWrite>::poll_close","value":"fn poll_close<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":26,"index":42},"children":[],"decl_id":{"krate":26,"index":46},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7148},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":583699,"byte_end":583702,"line_start":203,"line_end":203,"column_start":8,"column_end":11},"name":"fmt","qualname":"<BufWriter<W> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7151},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":584209,"byte_end":584218,"line_start":216,"line_end":216,"column_start":8,"column_end":17},"name":"poll_seek","qualname":"<BufWriter<W> as futures_io::AsyncSeek>::poll_seek","value":"fn poll_seek<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, SeekFrom)\n-> Poll<io::Result<u64>>","parent":{"krate":26,"index":47},"children":[],"decl_id":{"krate":26,"index":48},"docs":" Seek to the offset, in bytes, in the underlying writer.","sig":null,"attributes":[{"value":"/ Seek to the offset, in bytes, in the underlying writer.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":584064,"byte_end":584123,"line_start":213,"line_end":213,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":584128,"byte_end":584131,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Seeking always writes out the internal buffer before seeking.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":584136,"byte_end":584201,"line_start":215,"line_end":215,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":15726},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/line_writer.rs","byte_start":585014,"byte_end":585024,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"LineWriter","qualname":"::io::line_writer::LineWriter","value":"LineWriter {  }","parent":null,"children":[{"krate":0,"index":15728}],"decl_id":null,"docs":" Wrap a writer, like [`BufWriter`] does, but prioritizes buffering lines","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7186},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/line_writer.rs","byte_start":585279,"byte_end":585282,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"new","qualname":"<LineWriter<W>>::new","value":"fn new(W) -> LineWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `LineWriter` with default buffer capacity. The default is currently 1KB\n which was taken from `std::io::LineWriter`\n","sig":null,"attributes":[{"value":"/ Create a new `LineWriter` with default buffer capacity. The default is currently 1KB","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/line_writer.rs","byte_start":585128,"byte_end":585216,"line_start":26,"line_end":26,"column_start":5,"column_end":93}},{"value":"/ which was taken from `std::io::LineWriter`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/line_writer.rs","byte_start":585221,"byte_end":585267,"line_start":27,"line_end":27,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":7187},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/line_writer.rs","byte_start":585448,"byte_end":585461,"line_start":33,"line_end":33,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<LineWriter<W>>::with_capacity","value":"fn with_capacity(usize, W) -> LineWriter<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LineWriter` with the specified buffer capacity.\n","sig":null,"attributes":[{"value":"/ Creates a new `LineWriter` with the specified buffer capacity.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/line_writer.rs","byte_start":585370,"byte_end":585436,"line_start":32,"line_end":32,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":7189},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/line_writer.rs","byte_start":586035,"byte_end":586041,"line_start":47,"line_end":47,"column_start":12,"column_end":18},"name":"buffer","qualname":"<LineWriter<W>>::buffer","value":"fn buffer<'_>(&'_ Self) -> &'_ [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to `buf_writer`'s internally buffered data.\n","sig":null,"attributes":[{"value":"/ Returns a reference to `buf_writer`'s internally buffered data.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/line_writer.rs","byte_start":585956,"byte_end":586023,"line_start":46,"line_end":46,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":7190},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/line_writer.rs","byte_start":586219,"byte_end":586226,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<LineWriter<W>>::get_ref","value":"fn get_ref<'_>(&'_ Self) -> &'_ W","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying sink or stream that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying sink or stream that this combinator is","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/line_writer.rs","byte_start":586104,"byte_end":586185,"line_start":51,"line_end":51,"column_start":5,"column_end":86}},{"value":"/ pulling from.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/line_writer.rs","byte_start":586190,"byte_end":586207,"line_start":52,"line_end":52,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":7193},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/line_writer.rs","byte_start":586343,"byte_end":586353,"line_start":59,"line_end":59,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<LineWriter<W> as futures_io::AsyncWrite>::poll_write","value":"fn poll_write<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":26,"index":42},"children":[],"decl_id":{"krate":26,"index":43},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7194},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/line_writer.rs","byte_start":587732,"byte_end":587751,"line_start":100,"line_end":100,"column_start":8,"column_end":27},"name":"poll_write_vectored","qualname":"<LineWriter<W> as futures_io::AsyncWrite>::poll_write_vectored","value":"fn poll_write_vectored<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [IoSlice])\n-> Poll<io::Result<usize>>","parent":{"krate":26,"index":42},"children":[],"decl_id":{"krate":26,"index":44},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7201},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/line_writer.rs","byte_start":589338,"byte_end":589348,"line_start":147,"line_end":147,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<LineWriter<W> as futures_io::AsyncWrite>::poll_flush","value":"fn poll_flush<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":26,"index":42},"children":[],"decl_id":{"krate":26,"index":45},"docs":" Forward to `buf_writer` 's `BufWriter::poll_flush()`\n","sig":null,"attributes":[{"value":"/ Forward to `buf_writer` 's `BufWriter::poll_flush()`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/line_writer.rs","byte_start":589274,"byte_end":589330,"line_start":146,"line_end":146,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":7202},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/line_writer.rs","byte_start":589556,"byte_end":589566,"line_start":152,"line_end":152,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<LineWriter<W> as futures_io::AsyncWrite>::poll_close","value":"fn poll_close<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":26,"index":42},"children":[],"decl_id":{"krate":26,"index":46},"docs":" Forward to `buf_writer` 's `BufWriter::poll_close()`\n","sig":null,"attributes":[{"value":"/ Forward to `buf_writer` 's `BufWriter::poll_close()`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/line_writer.rs","byte_start":589492,"byte_end":589548,"line_start":151,"line_end":151,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":15762},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":590063,"byte_end":590068,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Chain","qualname":"::io::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":15765},{"krate":0,"index":15766},{"krate":0,"index":15767}],"decl_id":null,"docs":" Reader for the [`chain`](super::AsyncReadExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7243},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":590434,"byte_end":590441,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Chain<T, U>>::get_ref","value":"fn get_ref<'_>(&'_ Self) -> (&'_ T, &'_ U)","parent":null,"children":[],"decl_id":null,"docs":" Gets references to the underlying readers in this `Chain`.\n","sig":null,"attributes":[{"value":"/ Gets references to the underlying readers in this `Chain`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":590360,"byte_end":590422,"line_start":30,"line_end":30,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":7244},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":590773,"byte_end":590780,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Chain<T, U>>::get_mut","value":"fn get_mut<'_>(&'_ mut Self) -> (&'_ mut T, &'_ mut U)","parent":null,"children":[],"decl_id":null,"docs":" Gets mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":590510,"byte_end":590580,"line_start":35,"line_end":35,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":590585,"byte_end":590588,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":590593,"byte_end":590666,"line_start":37,"line_end":37,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":590671,"byte_end":590744,"line_start":38,"line_end":38,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":590749,"byte_end":590761,"line_start":39,"line_end":39,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":7245},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":591139,"byte_end":591150,"line_start":49,"line_end":49,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Chain<T, U>>::get_pin_mut","value":"fn get_pin_mut<'_>(Pin<&'_ mut Self>) -> (Pin<&'_ mut T>, Pin<&'_ mut U>)","parent":null,"children":[],"decl_id":null,"docs":" Gets pinned mutable references to the underlying readers in this `Chain`.","sig":null,"attributes":[{"value":"/ Gets pinned mutable references to the underlying readers in this `Chain`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":590869,"byte_end":590946,"line_start":44,"line_end":44,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":590951,"byte_end":590954,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":590959,"byte_end":591032,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ underlying readers as doing so may corrupt the internal state of this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":591037,"byte_end":591110,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ `Chain`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":591115,"byte_end":591127,"line_start":48,"line_end":48,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":7246},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":591353,"byte_end":591363,"line_start":55,"line_end":55,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Chain<T, U>>::into_inner","value":"fn into_inner(Self) -> (T, U)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Chain`, returning the wrapped readers.\n","sig":null,"attributes":[{"value":"/ Consumes the `Chain`, returning the wrapped readers.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":591285,"byte_end":591341,"line_start":54,"line_end":54,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":7250},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":591516,"byte_end":591519,"line_start":65,"line_end":65,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Chain<T, U> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7254},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":591849,"byte_end":591858,"line_start":79,"line_end":79,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<Chain<T, U> as futures_io::AsyncRead>::poll_read","value":"fn poll_read<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":26,"index":39},"children":[],"decl_id":{"krate":26,"index":40},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7255},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":592295,"byte_end":592313,"line_start":95,"line_end":95,"column_start":8,"column_end":26},"name":"poll_read_vectored","qualname":"<Chain<T, U> as futures_io::AsyncRead>::poll_read_vectored","value":"fn poll_read_vectored<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [IoSliceMut])\n-> Poll<io::Result<usize>>","parent":{"krate":26,"index":39},"children":[],"decl_id":{"krate":26,"index":41},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7260},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":592929,"byte_end":592942,"line_start":119,"line_end":119,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"<Chain<T, U> as futures_io::AsyncBufRead>::poll_fill_buf","value":"fn poll_fill_buf<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<&'_ [u8]>>","parent":{"krate":26,"index":49},"children":[],"decl_id":{"krate":26,"index":50},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7261},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":593375,"byte_end":593382,"line_start":133,"line_end":133,"column_start":8,"column_end":15},"name":"consume","qualname":"<Chain<T, U> as futures_io::AsyncBufRead>::consume","value":"fn consume<'_>(Pin<&'_ mut Self>, usize)","parent":{"krate":26,"index":49},"children":[],"decl_id":{"krate":26,"index":51},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":15811},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/close.rs","byte_start":593893,"byte_end":593898,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Close","qualname":"::io::close::Close","value":"Close {  }","parent":null,"children":[{"krate":0,"index":15814}],"decl_id":null,"docs":" Future for the [`close`](super::AsyncWriteExt::close) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`close`](super::AsyncWriteExt::close) method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/close.rs","byte_start":593731,"byte_end":593796,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/close.rs","byte_start":593814,"byte_end":593881,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7294},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/close.rs","byte_start":594238,"byte_end":594242,"line_start":25,"line_end":25,"column_start":8,"column_end":12},"name":"poll","qualname":"<Close as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":7335},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":595451,"byte_end":595455,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"copy","qualname":"::io::copy::copy","value":"fn copy<R, W, '_>(R, &'_ mut W) -> Copy where R: AsyncRead, W: AsyncWrite +\nUnpin + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which copies all the bytes from one object to another.","sig":null,"attributes":[{"value":"/ Creates a future which copies all the bytes from one object to another.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":594602,"byte_end":594677,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":594678,"byte_end":594681,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The returned future will copy all the bytes read from this `AsyncRead` into the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":594682,"byte_end":594765,"line_start":11,"line_end":11,"column_start":1,"column_end":84}},{"value":"/ `writer` specified. This future will only complete once the `reader` has hit","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":594766,"byte_end":594846,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ EOF and all bytes have been written to and flushed from the `writer`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":594847,"byte_end":594919,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ provided.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":594920,"byte_end":594933,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":594934,"byte_end":594937,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ On success the number of bytes is returned.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":594938,"byte_end":594985,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":594986,"byte_end":594989,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":594990,"byte_end":595004,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":595005,"byte_end":595008,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":595009,"byte_end":595016,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":595017,"byte_end":595058,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt, Cursor};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":595059,"byte_end":595110,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":595111,"byte_end":595114,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":595115,"byte_end":595158,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":595159,"byte_end":595206,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":595207,"byte_end":595210,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let bytes = io::copy(reader, &mut writer).await?;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":595211,"byte_end":595264,"line_start":27,"line_end":27,"column_start":1,"column_end":54}},{"value":"/ writer.close().await?;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":595265,"byte_end":595291,"line_start":28,"line_end":28,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":595292,"byte_end":595295,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":595296,"byte_end":595321,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":595322,"byte_end":595375,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":595376,"byte_end":595435,"line_start":32,"line_end":32,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":595436,"byte_end":595443,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":15819},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":595800,"byte_end":595804,"line_start":46,"line_end":46,"column_start":16,"column_end":20},"name":"Copy","qualname":"::io::copy::Copy","value":"Copy {  }","parent":null,"children":[{"krate":0,"index":15823}],"decl_id":null,"docs":" Future for the [`copy()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7342},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":596016,"byte_end":596020,"line_start":55,"line_end":55,"column_start":8,"column_end":12},"name":"poll","qualname":"<Copy as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":7380},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":597204,"byte_end":597212,"line_start":34,"line_end":34,"column_start":8,"column_end":16},"name":"copy_buf","qualname":"::io::copy_buf::copy_buf","value":"fn copy_buf<R, W, '_>(R, &'_ mut W) -> CopyBuf where R: AsyncBufRead,\nW: AsyncWrite + Unpin + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which copies all the bytes from one object to another.","sig":null,"attributes":[{"value":"/ Creates a future which copies all the bytes from one object to another.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":596348,"byte_end":596423,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":596424,"byte_end":596427,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ The returned future will copy all the bytes read from this `AsyncBufRead` into the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":596428,"byte_end":596514,"line_start":11,"line_end":11,"column_start":1,"column_end":87}},{"value":"/ `writer` specified. This future will only complete once the `reader` has hit","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":596515,"byte_end":596595,"line_start":12,"line_end":12,"column_start":1,"column_end":81}},{"value":"/ EOF and all bytes have been written to and flushed from the `writer`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":596596,"byte_end":596668,"line_start":13,"line_end":13,"column_start":1,"column_end":73}},{"value":"/ provided.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":596669,"byte_end":596682,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":596683,"byte_end":596686,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ On success the number of bytes is returned.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":596687,"byte_end":596734,"line_start":16,"line_end":16,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":596735,"byte_end":596738,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":596739,"byte_end":596753,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":596754,"byte_end":596757,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":596758,"byte_end":596765,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":596766,"byte_end":596807,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt, Cursor};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":596808,"byte_end":596859,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":596860,"byte_end":596863,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":596864,"byte_end":596907,"line_start":24,"line_end":24,"column_start":1,"column_end":44}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":596908,"byte_end":596955,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":596956,"byte_end":596959,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let bytes = io::copy_buf(reader, &mut writer).await?;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":596960,"byte_end":597017,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/ writer.close().await?;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":597018,"byte_end":597044,"line_start":28,"line_end":28,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":597045,"byte_end":597048,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":597049,"byte_end":597074,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":597075,"byte_end":597128,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":597129,"byte_end":597188,"line_start":32,"line_end":32,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":597189,"byte_end":597196,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":15873},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":597545,"byte_end":597552,"line_start":46,"line_end":46,"column_start":16,"column_end":23},"name":"CopyBuf","qualname":"::io::copy_buf::CopyBuf","value":"CopyBuf {  }","parent":null,"children":[{"krate":0,"index":15877},{"krate":0,"index":15878},{"krate":0,"index":15879}],"decl_id":null,"docs":" Future for the [`copy_buf()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7387},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":597809,"byte_end":597813,"line_start":61,"line_end":61,"column_start":8,"column_end":12},"name":"poll","qualname":"<CopyBuf as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":7438},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":600015,"byte_end":600033,"line_start":47,"line_end":47,"column_start":8,"column_end":26},"name":"copy_buf_abortable","qualname":"::io::copy_buf_abortable::copy_buf_abortable","value":"fn copy_buf_abortable<R, W, '_>(R, &'_ mut W)\n-> (CopyBufAbortable, AbortHandle) where R: AsyncBufRead, W: AsyncWrite +\nUnpin + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which copies all the bytes from one object to another, with its `AbortHandle`.","sig":null,"attributes":[{"value":"/ Creates a future which copies all the bytes from one object to another, with its `AbortHandle`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":598768,"byte_end":598867,"line_start":11,"line_end":11,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":598868,"byte_end":598871,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The returned future will copy all the bytes read from this `AsyncBufRead` into the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":598872,"byte_end":598958,"line_start":13,"line_end":13,"column_start":1,"column_end":87}},{"value":"/ `writer` specified. This future will only complete once abort has been requested or the `reader` has hit","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":598959,"byte_end":599067,"line_start":14,"line_end":14,"column_start":1,"column_end":109}},{"value":"/ EOF and all bytes have been written to and flushed from the `writer`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":599068,"byte_end":599140,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ provided.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":599141,"byte_end":599154,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":599155,"byte_end":599158,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ On success the number of bytes is returned. If aborted, `Aborted` is returned. Otherwise, the underlying error is returned.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":599159,"byte_end":599286,"line_start":18,"line_end":18,"column_start":1,"column_end":128}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":599287,"byte_end":599290,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":599291,"byte_end":599305,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":599306,"byte_end":599309,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":599310,"byte_end":599317,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":599318,"byte_end":599359,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt, Cursor};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":599360,"byte_end":599411,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/ use futures::future::Aborted;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":599412,"byte_end":599445,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":599446,"byte_end":599449,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":599450,"byte_end":599493,"line_start":27,"line_end":27,"column_start":1,"column_end":44}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":599494,"byte_end":599541,"line_start":28,"line_end":28,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":599542,"byte_end":599545,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let (fut, abort_handle) = io::copy_buf_abortable(reader, &mut writer);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":599546,"byte_end":599620,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/ let bytes = fut.await;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":599621,"byte_end":599647,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/ abort_handle.abort();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":599648,"byte_end":599673,"line_start":32,"line_end":32,"column_start":1,"column_end":26}},{"value":"/ writer.close().await.unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":599674,"byte_end":599708,"line_start":33,"line_end":33,"column_start":1,"column_end":35}},{"value":"/ match bytes {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":599709,"byte_end":599726,"line_start":34,"line_end":34,"column_start":1,"column_end":18}},{"value":"/     Ok(Ok(n)) => {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":599727,"byte_end":599749,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/         assert_eq!(n, 4);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":599750,"byte_end":599779,"line_start":36,"line_end":36,"column_start":1,"column_end":30}},{"value":"/         assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":599780,"byte_end":599841,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/         Ok(n)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":599842,"byte_end":599859,"line_start":38,"line_end":38,"column_start":1,"column_end":18}},{"value":"/     },","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":599860,"byte_end":599870,"line_start":39,"line_end":39,"column_start":1,"column_end":11}},{"value":"/     Ok(Err(a)) => {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":599871,"byte_end":599894,"line_start":40,"line_end":40,"column_start":1,"column_end":24}},{"value":"/         Err::<u64, Aborted>(a)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":599895,"byte_end":599929,"line_start":41,"line_end":41,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":599930,"byte_end":599939,"line_start":42,"line_end":42,"column_start":1,"column_end":10}},{"value":"/     Err(e) => panic!(\"{}\", e)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":599940,"byte_end":599973,"line_start":43,"line_end":43,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":599974,"byte_end":599979,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ #  }).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":599980,"byte_end":599999,"line_start":45,"line_end":45,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":600000,"byte_end":600007,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":15935},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":600487,"byte_end":600503,"line_start":63,"line_end":63,"column_start":16,"column_end":32},"name":"CopyBufAbortable","qualname":"::io::copy_buf_abortable::CopyBufAbortable","value":"CopyBufAbortable {  }","parent":null,"children":[{"krate":0,"index":15939},{"krate":0,"index":15940},{"krate":0,"index":15941},{"krate":0,"index":15942}],"decl_id":null,"docs":" Future for the [`copy_buf()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7446},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":601014,"byte_end":601018,"line_start":88,"line_end":88,"column_start":8,"column_end":12},"name":"poll","qualname":"<CopyBufAbortable as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16001},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":603589,"byte_end":603595,"line_start":25,"line_end":25,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::io::cursor::Cursor","value":"Cursor {  }","parent":null,"children":[{"krate":0,"index":16003}],"decl_id":null,"docs":" A `Cursor` wraps an in-memory buffer and provides it with a\n [`AsyncSeek`] implementation.","sig":null,"attributes":[{"value":"/ A `Cursor` wraps an in-memory buffer and provides it with a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":602822,"byte_end":602885,"line_start":8,"line_end":8,"column_start":1,"column_end":64}},{"value":"/ [`AsyncSeek`] implementation.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":602886,"byte_end":602919,"line_start":9,"line_end":9,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":602920,"byte_end":602923,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ `Cursor`s are used with in-memory buffers, anything implementing","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":602924,"byte_end":602992,"line_start":11,"line_end":11,"column_start":1,"column_end":69}},{"value":"/ `AsRef<[u8]>`, to allow them to implement [`AsyncRead`] and/or [`AsyncWrite`],","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":602993,"byte_end":603075,"line_start":12,"line_end":12,"column_start":1,"column_end":83}},{"value":"/ allowing these buffers to be used anywhere you might use a reader or writer","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":603076,"byte_end":603155,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ that does actual I/O.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":603156,"byte_end":603181,"line_start":14,"line_end":14,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":603182,"byte_end":603185,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This library implements some I/O traits on various types which","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":603186,"byte_end":603252,"line_start":16,"line_end":16,"column_start":1,"column_end":67}},{"value":"/ are commonly used as a buffer, like `Cursor<`[`Vec`]`<u8>>` and","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":603253,"byte_end":603320,"line_start":17,"line_end":17,"column_start":1,"column_end":68}},{"value":"/ `Cursor<`[`&[u8]`][bytes]`>`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":603321,"byte_end":603354,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":603355,"byte_end":603358,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`AsyncSeek`]: trait.AsyncSeek.html","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":603359,"byte_end":603398,"line_start":20,"line_end":20,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait.AsyncRead.html","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":603399,"byte_end":603438,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: trait.AsyncWrite.html","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":603439,"byte_end":603480,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ [bytes]: https://doc.rust-lang.org/std/primitive.slice.html","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":603481,"byte_end":603544,"line_start":23,"line_end":23,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":7492},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":604175,"byte_end":604178,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<Cursor<T>>::new","value":"fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new cursor wrapping the provided underlying in-memory buffer.","sig":null,"attributes":[{"value":"/ Creates a new cursor wrapping the provided underlying in-memory buffer.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":603654,"byte_end":603729,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":603734,"byte_end":603737,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Cursor initial position is `0` even if underlying buffer (e.g., `Vec`)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":603742,"byte_end":603816,"line_start":32,"line_end":32,"column_start":5,"column_end":79}},{"value":"/ is not empty. So writing to cursor starts with overwriting `Vec`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":603821,"byte_end":603889,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ content, not with appending to it.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":603894,"byte_end":603932,"line_start":34,"line_end":34,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":603937,"byte_end":603940,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":603945,"byte_end":603959,"line_start":36,"line_end":36,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":603964,"byte_end":603967,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":603972,"byte_end":603979,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":603984,"byte_end":604012,"line_start":39,"line_end":39,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":604017,"byte_end":604020,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":604025,"byte_end":604064,"line_start":41,"line_end":41,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":604069,"byte_end":604117,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":604122,"byte_end":604151,"line_start":43,"line_end":43,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":604156,"byte_end":604163,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7493},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":604602,"byte_end":604612,"line_start":62,"line_end":62,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Cursor<T>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this cursor, returning the underlying value.","sig":null,"attributes":[{"value":"/ Consumes this cursor, returning the underlying value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":604257,"byte_end":604314,"line_start":49,"line_end":49,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":604319,"byte_end":604322,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":604327,"byte_end":604341,"line_start":51,"line_end":51,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":604346,"byte_end":604349,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":604354,"byte_end":604361,"line_start":53,"line_end":53,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":604366,"byte_end":604394,"line_start":54,"line_end":54,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":604399,"byte_end":604402,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":604407,"byte_end":604446,"line_start":56,"line_end":56,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":604451,"byte_end":604499,"line_start":57,"line_end":57,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":604504,"byte_end":604533,"line_start":58,"line_end":58,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":604538,"byte_end":604541,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ let vec = buff.into_inner();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":604546,"byte_end":604578,"line_start":60,"line_end":60,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":604583,"byte_end":604590,"line_start":61,"line_end":61,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7494},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":605020,"byte_end":605027,"line_start":79,"line_end":79,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Cursor<T>>::get_ref","value":"fn get_ref<'_>(&'_ Self) -> &'_ T","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying value in this cursor.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":604669,"byte_end":604729,"line_start":66,"line_end":66,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":604734,"byte_end":604737,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":604742,"byte_end":604756,"line_start":68,"line_end":68,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":604761,"byte_end":604764,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":604769,"byte_end":604776,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":604781,"byte_end":604809,"line_start":71,"line_end":71,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":604814,"byte_end":604817,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ let buff = Cursor::new(Vec::new());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":604822,"byte_end":604861,"line_start":73,"line_end":73,"column_start":5,"column_end":44}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":604866,"byte_end":604914,"line_start":74,"line_end":74,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":604919,"byte_end":604948,"line_start":75,"line_end":75,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":604953,"byte_end":604956,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_ref();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":604961,"byte_end":604996,"line_start":77,"line_end":77,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":605001,"byte_end":605008,"line_start":78,"line_end":78,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7495},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":605599,"byte_end":605606,"line_start":99,"line_end":99,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Cursor<T>>::get_mut","value":"fn get_mut<'_>(&'_ mut Self) -> &'_ mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying value in this cursor.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying value in this cursor.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":605083,"byte_end":605151,"line_start":83,"line_end":83,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":605156,"byte_end":605159,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Care should be taken to avoid modifying the internal I/O state of the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":605164,"byte_end":605237,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/ underlying value as it may corrupt this cursor's position.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":605242,"byte_end":605304,"line_start":86,"line_end":86,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":605309,"byte_end":605312,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":605317,"byte_end":605331,"line_start":88,"line_end":88,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":605336,"byte_end":605339,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":605344,"byte_end":605351,"line_start":90,"line_end":90,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":605356,"byte_end":605384,"line_start":91,"line_end":91,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":605389,"byte_end":605392,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(Vec::new());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":605397,"byte_end":605440,"line_start":93,"line_end":93,"column_start":5,"column_end":48}},{"value":"/ # fn force_inference(_: &Cursor<Vec<u8>>) {}","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":605445,"byte_end":605493,"line_start":94,"line_end":94,"column_start":5,"column_end":53}},{"value":"/ # force_inference(&buff);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":605498,"byte_end":605527,"line_start":95,"line_end":95,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":605532,"byte_end":605535,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ let reference = buff.get_mut();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":605540,"byte_end":605575,"line_start":97,"line_end":97,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":605580,"byte_end":605587,"line_start":98,"line_end":98,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7496},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":606264,"byte_end":606272,"line_start":122,"line_end":122,"column_start":12,"column_end":20},"name":"position","qualname":"<Cursor<T>>::position","value":"fn position<'_>(&'_ Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the current position of this cursor.","sig":null,"attributes":[{"value":"/ Returns the current position of this cursor.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":605670,"byte_end":605718,"line_start":103,"line_end":103,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":605723,"byte_end":605726,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":605731,"byte_end":605745,"line_start":105,"line_end":105,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":605750,"byte_end":605753,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":605758,"byte_end":605765,"line_start":107,"line_end":107,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":605770,"byte_end":605811,"line_start":108,"line_end":108,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncSeekExt, Cursor, SeekFrom};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":605816,"byte_end":605870,"line_start":109,"line_end":109,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":605875,"byte_end":605878,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":605883,"byte_end":605935,"line_start":111,"line_end":111,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":605940,"byte_end":605943,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":605948,"byte_end":605983,"line_start":113,"line_end":113,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":605988,"byte_end":605991,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(2)).await?;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":605996,"byte_end":606039,"line_start":115,"line_end":115,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":606044,"byte_end":606079,"line_start":116,"line_end":116,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":606084,"byte_end":606087,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ buff.seek(SeekFrom::Current(-1)).await?;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":606092,"byte_end":606136,"line_start":118,"line_end":118,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(buff.position(), 1);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":606141,"byte_end":606176,"line_start":119,"line_end":119,"column_start":5,"column_end":40}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":606181,"byte_end":606240,"line_start":120,"line_end":120,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":606245,"byte_end":606252,"line_start":121,"line_end":121,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7497},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":606740,"byte_end":606752,"line_start":143,"line_end":143,"column_start":12,"column_end":24},"name":"set_position","qualname":"<Cursor<T>>::set_position","value":"fn set_position<'_>(&'_ mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the position of this cursor.","sig":null,"attributes":[{"value":"/ Sets the position of this cursor.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":606330,"byte_end":606367,"line_start":126,"line_end":126,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":606372,"byte_end":606375,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":606380,"byte_end":606394,"line_start":128,"line_end":128,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":606399,"byte_end":606402,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":606407,"byte_end":606414,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/ use futures::io::Cursor;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":606419,"byte_end":606447,"line_start":131,"line_end":131,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":606452,"byte_end":606455,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ let mut buff = Cursor::new(vec![1, 2, 3, 4, 5]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":606460,"byte_end":606512,"line_start":133,"line_end":133,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":606517,"byte_end":606520,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buff.position(), 0);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":606525,"byte_end":606560,"line_start":135,"line_end":135,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":606565,"byte_end":606568,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(2);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":606573,"byte_end":606598,"line_start":137,"line_end":137,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 2);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":606603,"byte_end":606638,"line_start":138,"line_end":138,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":606643,"byte_end":606646,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ buff.set_position(4);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":606651,"byte_end":606676,"line_start":140,"line_end":140,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buff.position(), 4);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":606681,"byte_end":606716,"line_start":141,"line_end":141,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":606721,"byte_end":606728,"line_start":142,"line_end":142,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":7500},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":606897,"byte_end":606906,"line_start":152,"line_end":152,"column_start":8,"column_end":17},"name":"poll_seek","qualname":"<Cursor<T> as futures_io::AsyncSeek>::poll_seek","value":"fn poll_seek<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, SeekFrom)\n-> Poll<io::Result<u64>>","parent":{"krate":26,"index":47},"children":[],"decl_id":{"krate":26,"index":48},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7503},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":607311,"byte_end":607320,"line_start":168,"line_end":168,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<Cursor<T> as futures_io::AsyncRead>::poll_read","value":"fn poll_read<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":26,"index":39},"children":[],"decl_id":{"krate":26,"index":40},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7504},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":607518,"byte_end":607536,"line_start":176,"line_end":176,"column_start":8,"column_end":26},"name":"poll_read_vectored","qualname":"<Cursor<T> as futures_io::AsyncRead>::poll_read_vectored","value":"fn poll_read_vectored<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [IoSliceMut])\n-> Poll<io::Result<usize>>","parent":{"krate":26,"index":39},"children":[],"decl_id":{"krate":26,"index":41},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7507},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":607828,"byte_end":607841,"line_start":189,"line_end":189,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"<Cursor<T> as futures_io::AsyncBufRead>::poll_fill_buf","value":"fn poll_fill_buf<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<&'_ [u8]>>","parent":{"krate":26,"index":49},"children":[],"decl_id":{"krate":26,"index":50},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":7508},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":607998,"byte_end":608005,"line_start":193,"line_end":193,"column_start":8,"column_end":15},"name":"consume","qualname":"<Cursor<T> as futures_io::AsyncBufRead>::consume","value":"fn consume<'_>(Pin<&'_ mut Self>, usize)","parent":{"krate":26,"index":49},"children":[],"decl_id":{"krate":26,"index":51},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7541},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":609522,"byte_end":609527,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Empty","qualname":"::io::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":7542}],"decl_id":null,"docs":" Reader for the [`empty()`] function.\n","sig":null,"attributes":[{"value":"/ Reader for the [`empty()`] function.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":609421,"byte_end":609461,"line_start":7,"line_end":7,"column_start":1,"column_end":41}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":609462,"byte_end":609510,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":7543},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":610087,"byte_end":610092,"line_start":31,"line_end":31,"column_start":8,"column_end":13},"name":"empty","qualname":"::io::empty::empty","value":"fn empty() -> Empty","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new handle to an empty reader.","sig":null,"attributes":[{"value":"/ Constructs a new handle to an empty reader.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":609548,"byte_end":609595,"line_start":13,"line_end":13,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":609596,"byte_end":609599,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ All reads from the returned reader will return `Poll::Ready(Ok(0))`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":609600,"byte_end":609672,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":609673,"byte_end":609676,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":609677,"byte_end":609691,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":609692,"byte_end":609695,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ A slightly sad example of not reading anything into a buffer:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":609696,"byte_end":609761,"line_start":19,"line_end":19,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":609762,"byte_end":609765,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":609766,"byte_end":609773,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":609774,"byte_end":609815,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncReadExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":609816,"byte_end":609858,"line_start":23,"line_end":23,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":609859,"byte_end":609862,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = String::new();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":609863,"byte_end":609898,"line_start":25,"line_end":25,"column_start":1,"column_end":36}},{"value":"/ let mut reader = io::empty();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":609899,"byte_end":609932,"line_start":26,"line_end":26,"column_start":1,"column_end":34}},{"value":"/ reader.read_to_string(&mut buffer).await?;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":609933,"byte_end":609979,"line_start":27,"line_end":27,"column_start":1,"column_end":47}},{"value":"/ assert!(buffer.is_empty());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":609980,"byte_end":610011,"line_start":28,"line_end":28,"column_start":1,"column_end":32}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":610012,"byte_end":610071,"line_start":29,"line_end":29,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":610072,"byte_end":610079,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":7545},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":610181,"byte_end":610190,"line_start":37,"line_end":37,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<Empty as futures_io::AsyncRead>::poll_read","value":"fn poll_read<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":26,"index":39},"children":[],"decl_id":{"krate":26,"index":40},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":610164,"byte_end":610173,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7547},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":610395,"byte_end":610408,"line_start":48,"line_end":48,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"<Empty as futures_io::AsyncBufRead>::poll_fill_buf","value":"fn poll_fill_buf<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<&'_ [u8]>>","parent":{"krate":26,"index":49},"children":[],"decl_id":{"krate":26,"index":50},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":610378,"byte_end":610387,"line_start":47,"line_end":47,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7548},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":610537,"byte_end":610544,"line_start":52,"line_end":52,"column_start":8,"column_end":15},"name":"consume","qualname":"<Empty as futures_io::AsyncBufRead>::consume","value":"fn consume<'_>(Pin<&'_ mut Self>, usize)","parent":{"krate":26,"index":49},"children":[],"decl_id":{"krate":26,"index":51},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":610520,"byte_end":610529,"line_start":51,"line_end":51,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7550},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":610618,"byte_end":610621,"line_start":56,"line_end":56,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Empty as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16029},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/fill_buf.rs","byte_start":611021,"byte_end":611028,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"FillBuf","qualname":"::io::fill_buf::FillBuf","value":"FillBuf {  }","parent":null,"children":[{"krate":0,"index":16032}],"decl_id":null,"docs":" Future for the [`fill_buf`](super::AsyncBufReadExt::fill_buf) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`fill_buf`](super::AsyncBufReadExt::fill_buf) method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/fill_buf.rs","byte_start":610851,"byte_end":610924,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/fill_buf.rs","byte_start":610942,"byte_end":611009,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7588},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/fill_buf.rs","byte_start":611415,"byte_end":611419,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"poll","qualname":"<FillBuf as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16037},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/flush.rs","byte_start":612800,"byte_end":612805,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Flush","qualname":"::io::flush::Flush","value":"Flush {  }","parent":null,"children":[{"krate":0,"index":16040}],"decl_id":null,"docs":" Future for the [`flush`](super::AsyncWriteExt::flush) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`flush`](super::AsyncWriteExt::flush) method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/flush.rs","byte_start":612638,"byte_end":612703,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/flush.rs","byte_start":612721,"byte_end":612788,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7621},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/flush.rs","byte_start":613158,"byte_end":613162,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"poll","qualname":"<Flush as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16045},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/lines.rs","byte_start":613725,"byte_end":613730,"line_start":15,"line_end":15,"column_start":16,"column_end":21},"name":"Lines","qualname":"::io::lines::Lines","value":"Lines {  }","parent":null,"children":[{"krate":0,"index":16047},{"krate":0,"index":16048},{"krate":0,"index":16049},{"krate":0,"index":16050}],"decl_id":null,"docs":" Stream for the [`lines`](super::AsyncBufReadExt::lines) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7663},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/lines.rs","byte_start":614090,"byte_end":614099,"line_start":33,"line_end":33,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Lines<R> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16093},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read.rs","byte_start":614912,"byte_end":614916,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Read","qualname":"::io::read::Read","value":"Read {  }","parent":null,"children":[{"krate":0,"index":16096},{"krate":0,"index":16097}],"decl_id":null,"docs":" Future for the [`read`](super::AsyncReadExt::read) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read`](super::AsyncReadExt::read) method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read.rs","byte_start":614753,"byte_end":614815,"line_start":7,"line_end":7,"column_start":1,"column_end":63}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read.rs","byte_start":614833,"byte_end":614900,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7696},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read.rs","byte_start":615301,"byte_end":615305,"line_start":26,"line_end":26,"column_start":8,"column_end":12},"name":"poll","qualname":"<Read as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16102},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_vectored.rs","byte_start":615808,"byte_end":615820,"line_start":10,"line_end":10,"column_start":12,"column_end":24},"name":"ReadVectored","qualname":"::io::read_vectored::ReadVectored","value":"ReadVectored {  }","parent":null,"children":[{"krate":0,"index":16105},{"krate":0,"index":16106}],"decl_id":null,"docs":" Future for the [`read_vectored`](super::AsyncReadExt::read_vectored) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_vectored`](super::AsyncReadExt::read_vectored) method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_vectored.rs","byte_start":615631,"byte_end":615711,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_vectored.rs","byte_start":615729,"byte_end":615796,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7733},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_vectored.rs","byte_start":616256,"byte_end":616260,"line_start":26,"line_end":26,"column_start":8,"column_end":12},"name":"poll","qualname":"<ReadVectored as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16111},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_exact.rs","byte_start":616786,"byte_end":616795,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadExact","qualname":"::io::read_exact::ReadExact","value":"ReadExact {  }","parent":null,"children":[{"krate":0,"index":16114},{"krate":0,"index":16115}],"decl_id":null,"docs":" Future for the [`read_exact`](super::AsyncReadExt::read_exact) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_exact`](super::AsyncReadExt::read_exact) method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_exact.rs","byte_start":616615,"byte_end":616689,"line_start":9,"line_end":9,"column_start":1,"column_end":75}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_exact.rs","byte_start":616707,"byte_end":616774,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7772},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_exact.rs","byte_start":617192,"byte_end":617196,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"poll","qualname":"<ReadExact as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16120},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_line.rs","byte_start":618123,"byte_end":618131,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"ReadLine","qualname":"::io::read_line::ReadLine","value":"ReadLine {  }","parent":null,"children":[{"krate":0,"index":16123},{"krate":0,"index":16124},{"krate":0,"index":16125},{"krate":0,"index":16126}],"decl_id":null,"docs":" Future for the [`read_line`](super::AsyncBufReadExt::read_line) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_line`](super::AsyncBufReadExt::read_line) method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_line.rs","byte_start":617951,"byte_end":618026,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_line.rs","byte_start":618044,"byte_end":618111,"line_start":13,"line_end":13,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7820},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_line.rs","byte_start":619356,"byte_end":619360,"line_start":53,"line_end":53,"column_start":8,"column_end":12},"name":"poll","qualname":"<ReadLine as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16131},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_to_end.rs","byte_start":619921,"byte_end":619930,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadToEnd","qualname":"::io::read_to_end::ReadToEnd","value":"ReadToEnd {  }","parent":null,"children":[{"krate":0,"index":16134},{"krate":0,"index":16135},{"krate":0,"index":16136}],"decl_id":null,"docs":" Future for the [`read_to_end`](super::AsyncReadExt::read_to_end) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_to_end`](super::AsyncReadExt::read_to_end) method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_to_end.rs","byte_start":619748,"byte_end":619824,"line_start":9,"line_end":9,"column_start":1,"column_end":77}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_to_end.rs","byte_start":619842,"byte_end":619909,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7867},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_to_end.rs","byte_start":622316,"byte_end":622320,"line_start":87,"line_end":87,"column_start":8,"column_end":12},"name":"poll","qualname":"<ReadToEnd as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16141},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_to_string.rs","byte_start":622936,"byte_end":622948,"line_start":13,"line_end":13,"column_start":12,"column_end":24},"name":"ReadToString","qualname":"::io::read_to_string::ReadToString","value":"ReadToString {  }","parent":null,"children":[{"krate":0,"index":16144},{"krate":0,"index":16145},{"krate":0,"index":16146},{"krate":0,"index":16147}],"decl_id":null,"docs":" Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_to_string`](super::AsyncReadExt::read_to_string) method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_to_string.rs","byte_start":622757,"byte_end":622839,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_to_string.rs","byte_start":622857,"byte_end":622924,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7919},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_to_string.rs","byte_start":624188,"byte_end":624192,"line_start":55,"line_end":55,"column_start":8,"column_end":12},"name":"poll","qualname":"<ReadToString as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16152},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_until.rs","byte_start":624768,"byte_end":624777,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"ReadUntil","qualname":"::io::read_until::ReadUntil","value":"ReadUntil {  }","parent":null,"children":[{"krate":0,"index":16155},{"krate":0,"index":16156},{"krate":0,"index":16157},{"krate":0,"index":16158}],"decl_id":null,"docs":" Future for the [`read_until`](super::AsyncBufReadExt::read_until) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`read_until`](super::AsyncBufReadExt::read_until) method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_until.rs","byte_start":624594,"byte_end":624671,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_until.rs","byte_start":624689,"byte_end":624756,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":7960},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_until.rs","byte_start":626021,"byte_end":626025,"line_start":56,"line_end":56,"column_start":8,"column_end":12},"name":"poll","qualname":"<ReadUntil as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7991},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":626490,"byte_end":626496,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::io::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":7992}],"decl_id":null,"docs":" Reader for the [`repeat()`] function.\n","sig":null,"attributes":[{"value":"/ Reader for the [`repeat()`] function.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":626388,"byte_end":626429,"line_start":8,"line_end":8,"column_start":1,"column_end":42}},{"value":"must_use = \"readers do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":626430,"byte_end":626478,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":7993},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":627053,"byte_end":627059,"line_start":31,"line_end":31,"column_start":8,"column_end":14},"name":"repeat","qualname":"::io::repeat::repeat","value":"fn repeat(u8) -> Repeat","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a reader that infinitely repeats one byte.","sig":null,"attributes":[{"value":"/ Creates an instance of a reader that infinitely repeats one byte.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":626516,"byte_end":626585,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":626586,"byte_end":626589,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ All reads from this reader will succeed by filling the specified buffer with","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":626590,"byte_end":626670,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ the given byte.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":626671,"byte_end":626690,"line_start":17,"line_end":17,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":626691,"byte_end":626694,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":626695,"byte_end":626709,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":626710,"byte_end":626713,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":626714,"byte_end":626721,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":626722,"byte_end":626763,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncReadExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":626764,"byte_end":626806,"line_start":23,"line_end":23,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":626807,"byte_end":626810,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let mut buffer = [0; 3];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":626811,"byte_end":626839,"line_start":25,"line_end":25,"column_start":1,"column_end":29}},{"value":"/ let mut reader = io::repeat(0b101);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":626840,"byte_end":626879,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/ reader.read_exact(&mut buffer).await.unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":626880,"byte_end":626930,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(buffer, [0b101, 0b101, 0b101]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":626931,"byte_end":626977,"line_start":28,"line_end":28,"column_start":1,"column_end":47}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":626978,"byte_end":627037,"line_start":29,"line_end":29,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":627038,"byte_end":627045,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":7995},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":627154,"byte_end":627163,"line_start":37,"line_end":37,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<Repeat as futures_io::AsyncRead>::poll_read","value":"fn poll_read<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":26,"index":39},"children":[],"decl_id":{"krate":26,"index":40},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":627137,"byte_end":627146,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7996},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":627419,"byte_end":627437,"line_start":49,"line_end":49,"column_start":8,"column_end":26},"name":"poll_read_vectored","qualname":"<Repeat as futures_io::AsyncRead>::poll_read_vectored","value":"fn poll_read_vectored<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [IoSliceMut])\n-> Poll<io::Result<usize>>","parent":{"krate":26,"index":39},"children":[],"decl_id":{"krate":26,"index":41},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":627402,"byte_end":627411,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7998},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":627787,"byte_end":627790,"line_start":63,"line_end":63,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Repeat as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16163},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/seek.rs","byte_start":628192,"byte_end":628196,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Seek","qualname":"::io::seek::Seek","value":"Seek {  }","parent":null,"children":[{"krate":0,"index":16166},{"krate":0,"index":16167}],"decl_id":null,"docs":" Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`seek`](crate::io::AsyncSeekExt::seek) method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/seek.rs","byte_start":628029,"byte_end":628095,"line_start":7,"line_end":7,"column_start":1,"column_end":67}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/seek.rs","byte_start":628113,"byte_end":628180,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":8039},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/seek.rs","byte_start":628565,"byte_end":628569,"line_start":26,"line_end":26,"column_start":8,"column_end":12},"name":"poll","qualname":"<Seek as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8067},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":628966,"byte_end":628970,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Sink","qualname":"::io::sink::Sink","value":"Sink {  }","parent":null,"children":[{"krate":0,"index":8068}],"decl_id":null,"docs":" Writer for the [`sink()`] function.\n","sig":null,"attributes":[{"value":"/ Writer for the [`sink()`] function.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":628866,"byte_end":628905,"line_start":7,"line_end":7,"column_start":1,"column_end":40}},{"value":"must_use = \"writers do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":628906,"byte_end":628954,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":8069},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":629578,"byte_end":629582,"line_start":30,"line_end":30,"column_start":8,"column_end":12},"name":"sink","qualname":"::io::sink::sink","value":"fn sink() -> Sink","parent":null,"children":[],"decl_id":null,"docs":" Creates an instance of a writer which will successfully consume all data.","sig":null,"attributes":[{"value":"/ Creates an instance of a writer which will successfully consume all data.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":628991,"byte_end":629068,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":629069,"byte_end":629072,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ All calls to `poll_write` on the returned instance will return `Poll::Ready(Ok(buf.len()))`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":629073,"byte_end":629168,"line_start":15,"line_end":15,"column_start":1,"column_end":96}},{"value":"/ and the contents of the buffer will not be inspected.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":629169,"byte_end":629226,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":629227,"byte_end":629230,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":629231,"byte_end":629245,"line_start":18,"line_end":18,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":629246,"byte_end":629249,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":629250,"byte_end":629261,"line_start":20,"line_end":20,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":629262,"byte_end":629303,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::io::{self, AsyncWriteExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":629304,"byte_end":629347,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":629348,"byte_end":629351,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let buffer = vec![1, 2, 3, 5, 8];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":629352,"byte_end":629389,"line_start":24,"line_end":24,"column_start":1,"column_end":38}},{"value":"/ let mut writer = io::sink();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":629390,"byte_end":629422,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ let num_bytes = writer.write(&buffer).await?;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":629423,"byte_end":629472,"line_start":26,"line_end":26,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(num_bytes, 5);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":629473,"byte_end":629502,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":629503,"byte_end":629562,"line_start":28,"line_end":28,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":629563,"byte_end":629570,"line_start":29,"line_end":29,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":8071},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":629669,"byte_end":629679,"line_start":36,"line_end":36,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<Sink as futures_io::AsyncWrite>::poll_write","value":"fn poll_write<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":26,"index":42},"children":[],"decl_id":{"krate":26,"index":43},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":629652,"byte_end":629661,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8072},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":629858,"byte_end":629877,"line_start":45,"line_end":45,"column_start":8,"column_end":27},"name":"poll_write_vectored","qualname":"<Sink as futures_io::AsyncWrite>::poll_write_vectored","value":"fn poll_write_vectored<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [IoSlice])\n-> Poll<io::Result<usize>>","parent":{"krate":26,"index":42},"children":[],"decl_id":{"krate":26,"index":44},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":629841,"byte_end":629850,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8074},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":630091,"byte_end":630101,"line_start":54,"line_end":54,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<Sink as futures_io::AsyncWrite>::poll_flush","value":"fn poll_flush<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":26,"index":42},"children":[],"decl_id":{"krate":26,"index":45},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":630074,"byte_end":630083,"line_start":53,"line_end":53,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8075},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":630226,"byte_end":630236,"line_start":58,"line_end":58,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<Sink as futures_io::AsyncWrite>::poll_close","value":"fn poll_close<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":26,"index":42},"children":[],"decl_id":{"krate":26,"index":46},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":630209,"byte_end":630218,"line_start":57,"line_end":57,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8077},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":630377,"byte_end":630380,"line_start":64,"line_end":64,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Sink as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16172},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":630769,"byte_end":630777,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"ReadHalf","qualname":"::io::split::ReadHalf","value":"ReadHalf {  }","parent":null,"children":[{"krate":0,"index":16174}],"decl_id":null,"docs":" The readable half of an object returned from `AsyncRead::split`.\n","sig":null,"attributes":[{"value":"/ The readable half of an object returned from `AsyncRead::split`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":630672,"byte_end":630740,"line_start":9,"line_end":9,"column_start":1,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":16178},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":630906,"byte_end":630915,"line_start":17,"line_end":17,"column_start":12,"column_end":21},"name":"WriteHalf","qualname":"::io::split::WriteHalf","value":"WriteHalf {  }","parent":null,"children":[{"krate":0,"index":16180}],"decl_id":null,"docs":" The writable half of an object returned from `AsyncRead::split`.\n","sig":null,"attributes":[{"value":"/ The writable half of an object returned from `AsyncRead::split`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":630809,"byte_end":630877,"line_start":15,"line_end":15,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":8130},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":631648,"byte_end":631655,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"reunite","qualname":"<ReadHalf<T>>::reunite","value":"fn reunite(Self, WriteHalf<T>) -> Result<T, ReuniteError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back\n together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are\n a matching pair originating from the same call to `AsyncReadExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":631402,"byte_end":631479,"line_start":35,"line_end":35,"column_start":5,"column_end":82}},{"value":"/ together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":631484,"byte_end":631555,"line_start":36,"line_end":36,"column_start":5,"column_end":76}},{"value":"/ a matching pair originating from the same call to `AsyncReadExt::split`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":631560,"byte_end":631636,"line_start":37,"line_end":37,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":8134},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":632157,"byte_end":632164,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"reunite","qualname":"<WriteHalf<T>>::reunite","value":"fn reunite(Self, ReadHalf<T>) -> Result<T, ReuniteError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back\n together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are\n a matching pair originating from the same call to `AsyncReadExt::split`.\n","sig":null,"attributes":[{"value":"/ Attempts to put the two \"halves\" of a split `AsyncRead + AsyncWrite` back","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":631911,"byte_end":631988,"line_start":46,"line_end":46,"column_start":5,"column_end":82}},{"value":"/ together. Succeeds only if the `ReadHalf<T>` and `WriteHalf<T>` are","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":631993,"byte_end":632064,"line_start":47,"line_end":47,"column_start":5,"column_end":76}},{"value":"/ a matching pair originating from the same call to `AsyncReadExt::split`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":632069,"byte_end":632145,"line_start":48,"line_end":48,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":8137},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":632314,"byte_end":632323,"line_start":55,"line_end":55,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<ReadHalf<R> as futures_io::AsyncRead>::poll_read","value":"fn poll_read<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":26,"index":39},"children":[],"decl_id":{"krate":26,"index":40},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8139},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":632528,"byte_end":632546,"line_start":63,"line_end":63,"column_start":8,"column_end":26},"name":"poll_read_vectored","qualname":"<ReadHalf<R> as futures_io::AsyncRead>::poll_read_vectored","value":"fn poll_read_vectored<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [IoSliceMut])\n-> Poll<io::Result<usize>>","parent":{"krate":26,"index":39},"children":[],"decl_id":{"krate":26,"index":41},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8143},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":632826,"byte_end":632836,"line_start":73,"line_end":73,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<WriteHalf<W> as futures_io::AsyncWrite>::poll_write","value":"fn poll_write<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [u8])\n-> Poll<io::Result<usize>>","parent":{"krate":26,"index":42},"children":[],"decl_id":{"krate":26,"index":43},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8145},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":633038,"byte_end":633057,"line_start":81,"line_end":81,"column_start":8,"column_end":27},"name":"poll_write_vectored","qualname":"<WriteHalf<W> as futures_io::AsyncWrite>::poll_write_vectored","value":"fn poll_write_vectored<'_, '_, '_, '_,\n'_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ [IoSlice])\n-> Poll<io::Result<usize>>","parent":{"krate":26,"index":42},"children":[],"decl_id":{"krate":26,"index":44},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8147},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":633279,"byte_end":633289,"line_start":89,"line_end":89,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<WriteHalf<W> as futures_io::AsyncWrite>::poll_flush","value":"fn poll_flush<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":26,"index":42},"children":[],"decl_id":{"krate":26,"index":45},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8149},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":633440,"byte_end":633450,"line_start":93,"line_end":93,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<WriteHalf<W> as futures_io::AsyncWrite>::poll_close","value":"fn poll_close<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":26,"index":42},"children":[],"decl_id":{"krate":26,"index":46},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8151},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":633752,"byte_end":633764,"line_start":100,"line_end":100,"column_start":12,"column_end":24},"name":"ReuniteError","qualname":"::io::split::ReuniteError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating a `ReadHalf<T>` and `WriteHalf<T>` were not two halves\n of a `AsyncRead + AsyncWrite`, and thus could not be `reunite`d.\n","sig":null,"attributes":[{"value":"/ Error indicating a `ReadHalf<T>` and `WriteHalf<T>` were not two halves","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":633596,"byte_end":633671,"line_start":98,"line_end":98,"column_start":1,"column_end":76}},{"value":"/ of a `AsyncRead + AsyncWrite`, and thus could not be `reunite`d.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":633672,"byte_end":633740,"line_start":99,"line_end":99,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":8154},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":633768,"byte_end":633783,"line_start":100,"line_end":100,"column_start":28,"column_end":43},"name":"0","qualname":"::io::split::ReuniteError::0","value":"io::split::ReadHalf<T>","parent":{"krate":0,"index":8151},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":8155},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":633785,"byte_end":633801,"line_start":100,"line_end":100,"column_start":45,"column_end":61},"name":"1","qualname":"::io::split::ReuniteError::1","value":"io::split::WriteHalf<T>","parent":{"krate":0,"index":8151},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8158},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":633853,"byte_end":633856,"line_start":103,"line_end":103,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ReuniteError<T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8161},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":634029,"byte_end":634032,"line_start":109,"line_end":109,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ReuniteError<T> as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16184},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":634644,"byte_end":634648,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Take","qualname":"::io::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":16186},{"krate":0,"index":16187}],"decl_id":null,"docs":" Reader for the [`take`](super::AsyncReadExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"readers do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":8208},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":635593,"byte_end":635598,"line_start":47,"line_end":47,"column_start":12,"column_end":17},"name":"limit","qualname":"<Take<R>>::limit","value":"fn limit<'_>(&'_ Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining number of bytes that can be\n read before this instance will return EOF.","sig":null,"attributes":[{"value":"/ Returns the remaining number of bytes that can be","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":634840,"byte_end":634893,"line_start":24,"line_end":24,"column_start":5,"column_end":58}},{"value":"/ read before this instance will return EOF.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":634898,"byte_end":634944,"line_start":25,"line_end":25,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":634949,"byte_end":634952,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":634957,"byte_end":634967,"line_start":27,"line_end":27,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":634972,"byte_end":634975,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This instance may reach `EOF` after reading fewer bytes than indicated by","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":634980,"byte_end":635057,"line_start":29,"line_end":29,"column_start":5,"column_end":82}},{"value":"/ this method if the underlying [`AsyncRead`] instance reaches EOF.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":635062,"byte_end":635131,"line_start":30,"line_end":30,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":635136,"byte_end":635139,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":635144,"byte_end":635158,"line_start":32,"line_end":32,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":635163,"byte_end":635166,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":635171,"byte_end":635178,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":635183,"byte_end":635224,"line_start":35,"line_end":35,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":635229,"byte_end":635273,"line_start":36,"line_end":36,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":635278,"byte_end":635281,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":635286,"byte_end":635333,"line_start":38,"line_end":38,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 2];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":635338,"byte_end":635366,"line_start":39,"line_end":39,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":635371,"byte_end":635374,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":635379,"byte_end":635413,"line_start":41,"line_end":41,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":635418,"byte_end":635460,"line_start":42,"line_end":42,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":635465,"byte_end":635468,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(take.limit(), 2);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":635473,"byte_end":635505,"line_start":44,"line_end":44,"column_start":5,"column_end":37}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":635510,"byte_end":635569,"line_start":45,"line_end":45,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":635574,"byte_end":635581,"line_start":46,"line_end":46,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8209},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":636509,"byte_end":636518,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"set_limit","qualname":"<Take<R>>::set_limit","value":"fn set_limit<'_>(&'_ mut Self, u64)","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes that can be read before this instance will\n return EOF. This is the same as constructing a new `Take` instance, so\n the amount of bytes read and the previous limit value don't matter when\n calling this method.","sig":null,"attributes":[{"value":"/ Sets the number of bytes that can be read before this instance will","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":635645,"byte_end":635716,"line_start":51,"line_end":51,"column_start":5,"column_end":76}},{"value":"/ return EOF. This is the same as constructing a new `Take` instance, so","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":635721,"byte_end":635795,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ the amount of bytes read and the previous limit value don't matter when","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":635800,"byte_end":635875,"line_start":53,"line_end":53,"column_start":5,"column_end":80}},{"value":"/ calling this method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":635880,"byte_end":635904,"line_start":54,"line_end":54,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":635909,"byte_end":635912,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":635917,"byte_end":635931,"line_start":56,"line_end":56,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":635936,"byte_end":635939,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":635944,"byte_end":635951,"line_start":58,"line_end":58,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":635956,"byte_end":635997,"line_start":59,"line_end":59,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":636002,"byte_end":636046,"line_start":60,"line_end":60,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":636051,"byte_end":636054,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":636059,"byte_end":636106,"line_start":62,"line_end":62,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 4];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":636111,"byte_end":636139,"line_start":63,"line_end":63,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":636144,"byte_end":636147,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":636152,"byte_end":636186,"line_start":65,"line_end":65,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":636191,"byte_end":636233,"line_start":66,"line_end":66,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":636238,"byte_end":636241,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":636246,"byte_end":636267,"line_start":68,"line_end":68,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(take.limit(), 0);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":636272,"byte_end":636304,"line_start":69,"line_end":69,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":636309,"byte_end":636312,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ take.set_limit(10);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":636317,"byte_end":636340,"line_start":71,"line_end":71,"column_start":5,"column_end":28}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":636345,"byte_end":636387,"line_start":72,"line_end":72,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":636392,"byte_end":636413,"line_start":73,"line_end":73,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":636418,"byte_end":636421,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":636426,"byte_end":636485,"line_start":75,"line_end":75,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":636490,"byte_end":636497,"line_start":76,"line_end":76,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8212},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":636673,"byte_end":636682,"line_start":85,"line_end":85,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<Take<R> as futures_io::AsyncRead>::poll_read","value":"fn poll_read<'_, '_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context, &'_ mut [u8])\n-> Poll<Result<usize, io::Error>>","parent":{"krate":26,"index":39},"children":[],"decl_id":{"krate":26,"index":40},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8215},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":637187,"byte_end":637200,"line_start":104,"line_end":104,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"<Take<R> as futures_io::AsyncBufRead>::poll_fill_buf","value":"fn poll_fill_buf<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<&'_ [u8]>>","parent":{"krate":26,"index":49},"children":[],"decl_id":{"krate":26,"index":50},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8216},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":637649,"byte_end":637656,"line_start":117,"line_end":117,"column_start":8,"column_end":15},"name":"consume","qualname":"<Take<R> as futures_io::AsyncBufRead>::consume","value":"fn consume<'_>(Pin<&'_ mut Self>, usize)","parent":{"krate":26,"index":49},"children":[],"decl_id":{"krate":26,"index":51},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16228},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":638942,"byte_end":638948,"line_start":21,"line_end":21,"column_start":12,"column_end":18},"name":"Window","qualname":"::io::window::Window","value":"Window {  }","parent":null,"children":[{"krate":0,"index":16230},{"krate":0,"index":16231}],"decl_id":null,"docs":" A owned window around an underlying buffer.","sig":null,"attributes":[{"value":"/ A owned window around an underlying buffer.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":637987,"byte_end":638034,"line_start":3,"line_end":3,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":638035,"byte_end":638038,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Normally slices work great for considering sub-portions of a buffer, but","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":638039,"byte_end":638115,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ unfortunately a slice is a *borrowed* type in Rust which has an associated","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":638116,"byte_end":638194,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ lifetime. When working with future and async I/O these lifetimes are not","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":638195,"byte_end":638271,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ always appropriate, and are sometimes difficult to store in tasks. This","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":638272,"byte_end":638347,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ type strives to fill this gap by providing an \"owned slice\" around an","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":638348,"byte_end":638421,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/ underlying buffer of bytes.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":638422,"byte_end":638453,"line_start":10,"line_end":10,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":638454,"byte_end":638457,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A `Window<T>` wraps an underlying buffer, `T`, and has configurable","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":638458,"byte_end":638529,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ start/end indexes to alter the behavior of the `AsRef<[u8]>` implementation","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":638530,"byte_end":638609,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ that this type carries.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":638610,"byte_end":638637,"line_start":14,"line_end":14,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":638638,"byte_end":638641,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This type can be particularly useful when working with the `write_all`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":638642,"byte_end":638716,"line_start":16,"line_end":16,"column_start":1,"column_end":75}},{"value":"/ combinator in this crate. Data can be sliced via `Window`, consumed by","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":638717,"byte_end":638791,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ `write_all`, and then earned back once the write operation finishes through","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":638792,"byte_end":638871,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ the `into_inner` method on this type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":638872,"byte_end":638913,"line_start":19,"line_end":19,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":8233},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":639257,"byte_end":639260,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<Window<T>>::new","value":"fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new window around the buffer `t` defaulting to the entire\n slice.","sig":null,"attributes":[{"value":"/ Creates a new window around the buffer `t` defaulting to the entire","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":639033,"byte_end":639104,"line_start":27,"line_end":27,"column_start":5,"column_end":76}},{"value":"/ slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":639109,"byte_end":639119,"line_start":28,"line_end":28,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":639124,"byte_end":639127,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Further methods can be called on the returned `Window<T>` to alter the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":639132,"byte_end":639206,"line_start":30,"line_end":30,"column_start":5,"column_end":79}},{"value":"/ window into the data provided.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":639211,"byte_end":639245,"line_start":31,"line_end":31,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":8234},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":639439,"byte_end":639446,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Window<T>>::get_ref","value":"fn get_ref<'_>(&'_ Self) -> &'_ T","parent":null,"children":[],"decl_id":null,"docs":" Gets a shared reference to the underlying buffer inside of this\n `Window`.\n","sig":null,"attributes":[{"value":"/ Gets a shared reference to the underlying buffer inside of this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":639342,"byte_end":639409,"line_start":36,"line_end":36,"column_start":5,"column_end":72}},{"value":"/ `Window`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":639414,"byte_end":639427,"line_start":37,"line_end":37,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":8235},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":639591,"byte_end":639598,"line_start":44,"line_end":44,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Window<T>>::get_mut","value":"fn get_mut<'_>(&'_ mut Self) -> &'_ mut T","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying buffer inside of this\n `Window`.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying buffer inside of this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":639493,"byte_end":639561,"line_start":42,"line_end":42,"column_start":5,"column_end":73}},{"value":"/ `Window`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":639566,"byte_end":639579,"line_start":43,"line_end":43,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":8236},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":639729,"byte_end":639739,"line_start":49,"line_end":49,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Window<T>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Window`, returning the underlying buffer.\n","sig":null,"attributes":[{"value":"/ Consumes this `Window`, returning the underlying buffer.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":639657,"byte_end":639717,"line_start":48,"line_end":48,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":8237},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":639880,"byte_end":639885,"line_start":55,"line_end":55,"column_start":12,"column_end":17},"name":"start","qualname":"<Window<T>>::start","value":"fn start<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the starting index of this window into the underlying buffer\n `T`.\n","sig":null,"attributes":[{"value":"/ Returns the starting index of this window into the underlying buffer","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":639783,"byte_end":639855,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ `T`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":639860,"byte_end":639868,"line_start":54,"line_end":54,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":8238},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":640032,"byte_end":640035,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"end","qualname":"<Window<T>>::end","value":"fn end<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the end index of this window into the underlying buffer\n `T`.\n","sig":null,"attributes":[{"value":"/ Returns the end index of this window into the underlying buffer","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":639940,"byte_end":640007,"line_start":59,"line_end":59,"column_start":5,"column_end":72}},{"value":"/ `T`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":640012,"byte_end":640020,"line_start":60,"line_end":60,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":8239},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":640481,"byte_end":640484,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"set","qualname":"<Window<T>>::set","value":"fn set<R, '_>(&'_ mut Self, R) where R: RangeBounds<usize>","parent":null,"children":[],"decl_id":null,"docs":" Changes the range of this window to the range specified.","sig":null,"attributes":[{"value":"/ Changes the range of this window to the range specified.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":640088,"byte_end":640148,"line_start":65,"line_end":65,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":640153,"byte_end":640156,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":640161,"byte_end":640173,"line_start":67,"line_end":67,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":640178,"byte_end":640181,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `range` is out of bounds for the underlying","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":640186,"byte_end":640259,"line_start":69,"line_end":69,"column_start":5,"column_end":78}},{"value":"/ slice or if [`start_bound()`] of `range` comes after the [`end_bound()`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":640264,"byte_end":640341,"line_start":70,"line_end":70,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":640346,"byte_end":640349,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ [`start_bound()`]: std::ops::RangeBounds::start_bound","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":640354,"byte_end":640411,"line_start":72,"line_end":72,"column_start":5,"column_end":62}},{"value":"/ [`end_bound()`]: std::ops::RangeBounds::end_bound","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":640416,"byte_end":640469,"line_start":73,"line_end":73,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":8243},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":641112,"byte_end":641118,"line_start":95,"line_end":95,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<Window<T> as std::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ [u8]","parent":{"krate":2,"index":3160},"children":[],"decl_id":{"krate":2,"index":3162},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8246},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":641265,"byte_end":641271,"line_start":101,"line_end":101,"column_start":8,"column_end":14},"name":"as_mut","qualname":"<Window<T> as std::convert::AsMut>::as_mut","value":"fn as_mut<'_>(&'_ mut Self) -> &'_ mut [u8]","parent":{"krate":2,"index":3163},"children":[],"decl_id":{"krate":2,"index":3165},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16235},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write.rs","byte_start":641671,"byte_end":641676,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Write","qualname":"::io::write::Write","value":"Write {  }","parent":null,"children":[{"krate":0,"index":16238},{"krate":0,"index":16239}],"decl_id":null,"docs":" Future for the [`write`](super::AsyncWriteExt::write) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write`](super::AsyncWriteExt::write) method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write.rs","byte_start":641509,"byte_end":641574,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write.rs","byte_start":641592,"byte_end":641659,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":8279},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write.rs","byte_start":642058,"byte_end":642062,"line_start":26,"line_end":26,"column_start":8,"column_end":12},"name":"poll","qualname":"<Write as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16244},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write_vectored.rs","byte_start":642567,"byte_end":642580,"line_start":10,"line_end":10,"column_start":12,"column_end":25},"name":"WriteVectored","qualname":"::io::write_vectored::WriteVectored","value":"WriteVectored {  }","parent":null,"children":[{"krate":0,"index":16247},{"krate":0,"index":16248}],"decl_id":null,"docs":" Future for the [`write_vectored`](super::AsyncWriteExt::write_vectored) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write_vectored`](super::AsyncWriteExt::write_vectored) method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write_vectored.rs","byte_start":642387,"byte_end":642470,"line_start":7,"line_end":7,"column_start":1,"column_end":84}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write_vectored.rs","byte_start":642488,"byte_end":642555,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":8316},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write_vectored.rs","byte_start":643007,"byte_end":643011,"line_start":26,"line_end":26,"column_start":8,"column_end":12},"name":"poll","qualname":"<WriteVectored as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16253},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write_all.rs","byte_start":643539,"byte_end":643547,"line_start":12,"line_end":12,"column_start":12,"column_end":20},"name":"WriteAll","qualname":"::io::write_all::WriteAll","value":"WriteAll {  }","parent":null,"children":[{"krate":0,"index":16256},{"krate":0,"index":16257}],"decl_id":null,"docs":" Future for the [`write_all`](super::AsyncWriteExt::write_all) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`write_all`](super::AsyncWriteExt::write_all) method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write_all.rs","byte_start":643369,"byte_end":643442,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write_all.rs","byte_start":643460,"byte_end":643527,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":8355},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write_all.rs","byte_start":643935,"byte_end":643939,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"poll","qualname":"<WriteAll as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<io::Result<()>>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":8359},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":537792,"byte_end":537804,"line_start":148,"line_end":148,"column_start":11,"column_end":23},"name":"AsyncReadExt","qualname":"::io::AsyncReadExt","value":"AsyncReadExt: AsyncRead","parent":null,"children":[{"krate":0,"index":8360},{"krate":0,"index":8362},{"krate":0,"index":8364},{"krate":0,"index":8366},{"krate":0,"index":8368},{"krate":0,"index":8370},{"krate":0,"index":8372},{"krate":0,"index":8373}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncRead` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncRead` types.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":537710,"byte_end":537781,"line_start":147,"line_end":147,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":8360},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":538657,"byte_end":538662,"line_start":172,"line_end":172,"column_start":8,"column_end":13},"name":"chain","qualname":"::io::AsyncReadExt::chain","value":"fn chain<R>(Self, R) -> Chain<Self, R> where Self: Sized, R: AsyncRead","parent":{"krate":0,"index":8359},"children":[],"decl_id":null,"docs":" Creates an adaptor which will chain this stream with another.","sig":null,"attributes":[{"value":"/ Creates an adaptor which will chain this stream with another.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":537822,"byte_end":537887,"line_start":149,"line_end":149,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":537892,"byte_end":537895,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ The returned `AsyncRead` instance will first read all bytes from this object","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":537900,"byte_end":537980,"line_start":151,"line_end":151,"column_start":5,"column_end":85}},{"value":"/ until EOF is encountered. Afterwards the output is equivalent to the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":537985,"byte_end":538057,"line_start":152,"line_end":152,"column_start":5,"column_end":77}},{"value":"/ output of `next`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":538062,"byte_end":538083,"line_start":153,"line_end":153,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":538088,"byte_end":538091,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":538096,"byte_end":538110,"line_start":155,"line_end":155,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":538115,"byte_end":538118,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":538123,"byte_end":538130,"line_start":157,"line_end":157,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":538135,"byte_end":538176,"line_start":158,"line_end":158,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":538181,"byte_end":538225,"line_start":159,"line_end":159,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":538230,"byte_end":538233,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ let reader1 = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":538238,"byte_end":538282,"line_start":161,"line_end":161,"column_start":5,"column_end":49}},{"value":"/ let reader2 = Cursor::new([5, 6, 7, 8]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":538287,"byte_end":538331,"line_start":162,"line_end":162,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":538336,"byte_end":538339,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ let mut reader = reader1.chain(reader2);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":538344,"byte_end":538388,"line_start":164,"line_end":164,"column_start":5,"column_end":49}},{"value":"/ let mut buffer = Vec::new();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":538393,"byte_end":538425,"line_start":165,"line_end":165,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":538430,"byte_end":538433,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ // read the value into a Vec.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":538438,"byte_end":538471,"line_start":167,"line_end":167,"column_start":5,"column_end":38}},{"value":"/ reader.read_to_end(&mut buffer).await?;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":538476,"byte_end":538519,"line_start":168,"line_end":168,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(buffer, [1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":538524,"byte_end":538573,"line_start":169,"line_end":169,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":538578,"byte_end":538637,"line_start":170,"line_end":170,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":538642,"byte_end":538649,"line_start":171,"line_end":171,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8362},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":539715,"byte_end":539719,"line_start":204,"line_end":204,"column_start":8,"column_end":12},"name":"read","qualname":"::io::AsyncReadExt::read","value":"fn read<'a>(&'a mut Self, &'a mut [u8]) -> Read where Self: Unpin","parent":{"krate":0,"index":8359},"children":[],"decl_id":null,"docs":" Tries to read some bytes directly into the given `buf` in asynchronous\n manner, returning a future type.","sig":null,"attributes":[{"value":"/ Tries to read some bytes directly into the given `buf` in asynchronous","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":538813,"byte_end":538887,"line_start":180,"line_end":180,"column_start":5,"column_end":79}},{"value":"/ manner, returning a future type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":538892,"byte_end":538928,"line_start":181,"line_end":181,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":538933,"byte_end":538936,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":538941,"byte_end":539019,"line_start":183,"line_end":183,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":539024,"byte_end":539051,"line_start":184,"line_end":184,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":539056,"byte_end":539059,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":539064,"byte_end":539078,"line_start":186,"line_end":186,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":539083,"byte_end":539086,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":539091,"byte_end":539098,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":539103,"byte_end":539144,"line_start":189,"line_end":189,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":539149,"byte_end":539193,"line_start":190,"line_end":190,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":539198,"byte_end":539201,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":539206,"byte_end":539253,"line_start":192,"line_end":192,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 5];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":539258,"byte_end":539288,"line_start":193,"line_end":193,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":539293,"byte_end":539296,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read(&mut output[..]).await?;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":539301,"byte_end":539353,"line_start":195,"line_end":195,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":539358,"byte_end":539361,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ // This is only guaranteed to be 4 because `&[u8]` is a synchronous","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":539366,"byte_end":539437,"line_start":197,"line_end":197,"column_start":5,"column_end":76}},{"value":"/ // reader. In a real system you could get anywhere from 1 to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":539442,"byte_end":539506,"line_start":198,"line_end":198,"column_start":5,"column_end":69}},{"value":"/ // `output.len()` bytes in a single read.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":539511,"byte_end":539556,"line_start":199,"line_end":199,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":539561,"byte_end":539586,"line_start":200,"line_end":200,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(output, [1, 2, 3, 4, 0]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":539591,"byte_end":539631,"line_start":201,"line_end":201,"column_start":5,"column_end":45}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":539636,"byte_end":539695,"line_start":202,"line_end":202,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":539700,"byte_end":539707,"line_start":203,"line_end":203,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8364},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":540125,"byte_end":540138,"line_start":216,"line_end":216,"column_start":8,"column_end":21},"name":"read_vectored","qualname":"::io::AsyncReadExt::read_vectored","value":"fn read_vectored<'a>(&'a mut Self, &'a mut [IoSliceMut]) -> ReadVectored where\nSelf: Unpin","parent":{"krate":0,"index":8359},"children":[],"decl_id":null,"docs":" Creates a future which will read from the `AsyncRead` into `bufs` using vectored\n IO operations.","sig":null,"attributes":[{"value":"/ Creates a future which will read from the `AsyncRead` into `bufs` using vectored","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":539887,"byte_end":539971,"line_start":211,"line_end":211,"column_start":5,"column_end":89}},{"value":"/ IO operations.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":539976,"byte_end":539994,"line_start":212,"line_end":212,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":539999,"byte_end":540002,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":540007,"byte_end":540085,"line_start":214,"line_end":214,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":540090,"byte_end":540117,"line_start":215,"line_end":215,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":8366},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":541549,"byte_end":541559,"line_start":260,"line_end":260,"column_start":8,"column_end":18},"name":"read_exact","qualname":"::io::AsyncReadExt::read_exact","value":"fn read_exact<'a>(&'a mut Self, &'a mut [u8]) -> ReadExact where Self: Unpin","parent":{"krate":0,"index":8359},"children":[],"decl_id":null,"docs":" Creates a future which will read exactly enough bytes to fill `buf`,\n returning an error if end of file (EOF) is hit sooner.","sig":null,"attributes":[{"value":"/ Creates a future which will read exactly enough bytes to fill `buf`,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":540336,"byte_end":540408,"line_start":223,"line_end":223,"column_start":5,"column_end":77}},{"value":"/ returning an error if end of file (EOF) is hit sooner.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":540413,"byte_end":540471,"line_start":224,"line_end":224,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":540476,"byte_end":540479,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve once the read operation is completed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":540484,"byte_end":540558,"line_start":226,"line_end":226,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":540563,"byte_end":540566,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":540571,"byte_end":540648,"line_start":228,"line_end":228,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":540653,"byte_end":540675,"line_start":229,"line_end":229,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":540680,"byte_end":540683,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":540688,"byte_end":540702,"line_start":231,"line_end":231,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":540707,"byte_end":540710,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":540715,"byte_end":540722,"line_start":233,"line_end":233,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":540727,"byte_end":540768,"line_start":234,"line_end":234,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":540773,"byte_end":540817,"line_start":235,"line_end":235,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":540822,"byte_end":540825,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":540830,"byte_end":540877,"line_start":237,"line_end":237,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 4];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":540882,"byte_end":540912,"line_start":238,"line_end":238,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":540917,"byte_end":540920,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ reader.read_exact(&mut output).await?;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":540925,"byte_end":540967,"line_start":240,"line_end":240,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":540972,"byte_end":540975,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(output, [1, 2, 3, 4]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":540980,"byte_end":541017,"line_start":242,"line_end":242,"column_start":5,"column_end":42}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":541022,"byte_end":541081,"line_start":243,"line_end":243,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":541086,"byte_end":541093,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":541098,"byte_end":541101,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ ## EOF is hit before `buf` is filled","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":541106,"byte_end":541146,"line_start":246,"line_end":246,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":541151,"byte_end":541154,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":541159,"byte_end":541166,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":541171,"byte_end":541212,"line_start":249,"line_end":249,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{self, AsyncReadExt, Cursor};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":541217,"byte_end":541267,"line_start":250,"line_end":250,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":541272,"byte_end":541275,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":541280,"byte_end":541327,"line_start":252,"line_end":252,"column_start":5,"column_end":52}},{"value":"/ let mut output = [0u8; 5];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":541332,"byte_end":541362,"line_start":253,"line_end":253,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":541367,"byte_end":541370,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ let result = reader.read_exact(&mut output).await;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":541375,"byte_end":541429,"line_start":255,"line_end":255,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":541434,"byte_end":541437,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result.unwrap_err().kind(), io::ErrorKind::UnexpectedEof);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":541442,"byte_end":541515,"line_start":257,"line_end":257,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":541520,"byte_end":541529,"line_start":258,"line_end":258,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":541534,"byte_end":541541,"line_start":259,"line_end":259,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8368},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":542364,"byte_end":542375,"line_start":286,"line_end":286,"column_start":8,"column_end":19},"name":"read_to_end","qualname":"::io::AsyncReadExt::read_to_end","value":"fn read_to_end<'a>(&'a mut Self, &'a mut Vec<u8>) -> ReadToEnd where\nSelf: Unpin","parent":{"krate":0,"index":8359},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes from this `AsyncRead`.","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes from this `AsyncRead`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":541734,"byte_end":541807,"line_start":267,"line_end":267,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":541812,"byte_end":541815,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ On success the total number of bytes read is returned.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":541820,"byte_end":541878,"line_start":269,"line_end":269,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":541883,"byte_end":541886,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":541891,"byte_end":541905,"line_start":271,"line_end":271,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":541910,"byte_end":541913,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":541918,"byte_end":541925,"line_start":273,"line_end":273,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":541930,"byte_end":541971,"line_start":274,"line_end":274,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":541976,"byte_end":542020,"line_start":275,"line_end":275,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":542025,"byte_end":542028,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":542033,"byte_end":542080,"line_start":277,"line_end":277,"column_start":5,"column_end":52}},{"value":"/ let mut output = Vec::with_capacity(4);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":542085,"byte_end":542128,"line_start":278,"line_end":278,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":542133,"byte_end":542136,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read_to_end(&mut output).await?;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":542141,"byte_end":542196,"line_start":280,"line_end":280,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":542201,"byte_end":542204,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":542209,"byte_end":542234,"line_start":282,"line_end":282,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":542239,"byte_end":542280,"line_start":283,"line_end":283,"column_start":5,"column_end":46}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":542285,"byte_end":542344,"line_start":284,"line_end":284,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":542349,"byte_end":542356,"line_start":285,"line_end":285,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8370},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":543196,"byte_end":543210,"line_start":312,"line_end":312,"column_start":8,"column_end":22},"name":"read_to_string","qualname":"::io::AsyncReadExt::read_to_string","value":"fn read_to_string<'a>(&'a mut Self, &'a mut String) -> ReadToString where\nSelf: Unpin","parent":{"krate":0,"index":8359},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes from this `AsyncRead`.","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes from this `AsyncRead`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":542556,"byte_end":542629,"line_start":293,"line_end":293,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":542634,"byte_end":542637,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ On success the total number of bytes read is returned.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":542642,"byte_end":542700,"line_start":295,"line_end":295,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":542705,"byte_end":542708,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":542713,"byte_end":542727,"line_start":297,"line_end":297,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":542732,"byte_end":542735,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":542740,"byte_end":542747,"line_start":299,"line_end":299,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":542752,"byte_end":542793,"line_start":300,"line_end":300,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":542798,"byte_end":542842,"line_start":301,"line_end":301,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":542847,"byte_end":542850,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ let mut reader = Cursor::new(&b\"1234\"[..]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":542855,"byte_end":542902,"line_start":303,"line_end":303,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = String::with_capacity(4);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":542907,"byte_end":542953,"line_start":304,"line_end":304,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":542958,"byte_end":542961,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ let bytes = reader.read_to_string(&mut buffer).await?;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":542966,"byte_end":543024,"line_start":306,"line_end":306,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":543029,"byte_end":543032,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(bytes, 4);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":543037,"byte_end":543062,"line_start":308,"line_end":308,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffer, String::from(\"1234\"));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":543067,"byte_end":543112,"line_start":309,"line_end":309,"column_start":5,"column_end":50}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":543117,"byte_end":543176,"line_start":310,"line_end":310,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":543181,"byte_end":543188,"line_start":311,"line_end":311,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8372},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":544553,"byte_end":544558,"line_start":348,"line_end":348,"column_start":8,"column_end":13},"name":"split","qualname":"::io::AsyncReadExt::split","value":"fn split(Self) -> (ReadHalf<Self>, WriteHalf<Self>) where Self: AsyncWrite +\nSized","parent":{"krate":0,"index":8359},"children":[],"decl_id":null,"docs":" Helper method for splitting this read/write object into two halves.","sig":null,"attributes":[{"value":"/ Helper method for splitting this read/write object into two halves.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":543396,"byte_end":543467,"line_start":319,"line_end":319,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":543472,"byte_end":543475,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ The two halves returned implement the `AsyncRead` and `AsyncWrite`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":543480,"byte_end":543550,"line_start":321,"line_end":321,"column_start":5,"column_end":75}},{"value":"/ traits, respectively.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":543555,"byte_end":543580,"line_start":322,"line_end":322,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":543585,"byte_end":543588,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":543593,"byte_end":543607,"line_start":324,"line_end":324,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":543612,"byte_end":543615,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":543620,"byte_end":543627,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":543632,"byte_end":543673,"line_start":327,"line_end":327,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{self, AsyncReadExt, Cursor};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":543678,"byte_end":543728,"line_start":328,"line_end":328,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":543733,"byte_end":543736,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ // Note that for `Cursor` the read and write halves share a single","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":543741,"byte_end":543811,"line_start":330,"line_end":330,"column_start":5,"column_end":75}},{"value":"/ // seek position. This may or may not be true for other types that","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":543816,"byte_end":543886,"line_start":331,"line_end":331,"column_start":5,"column_end":75}},{"value":"/ // implement both `AsyncRead` and `AsyncWrite`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":543891,"byte_end":543942,"line_start":332,"line_end":332,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":543947,"byte_end":543950,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new([1, 2, 3, 4]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":543955,"byte_end":543998,"line_start":334,"line_end":334,"column_start":5,"column_end":48}},{"value":"/ let mut buffer = Cursor::new(vec![0, 0, 0, 0, 5, 6, 7, 8]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":544003,"byte_end":544066,"line_start":335,"line_end":335,"column_start":5,"column_end":68}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":544071,"byte_end":544118,"line_start":336,"line_end":336,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":544123,"byte_end":544126,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":544131,"byte_end":544136,"line_start":338,"line_end":338,"column_start":5,"column_end":10}},{"value":"/     let (buffer_reader, mut buffer_writer) = (&mut buffer).split();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":544141,"byte_end":544212,"line_start":339,"line_end":339,"column_start":5,"column_end":76}},{"value":"/     io::copy(reader, &mut buffer_writer).await?;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":544217,"byte_end":544269,"line_start":340,"line_end":340,"column_start":5,"column_end":57}},{"value":"/     io::copy(buffer_reader, &mut writer).await?;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":544274,"byte_end":544326,"line_start":341,"line_end":341,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":544331,"byte_end":544336,"line_start":342,"line_end":342,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":544341,"byte_end":544344,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffer.into_inner(), [1, 2, 3, 4, 5, 6, 7, 8]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":544349,"byte_end":544411,"line_start":344,"line_end":344,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(writer.into_inner(), [5, 6, 7, 8, 0]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":544416,"byte_end":544469,"line_start":345,"line_end":345,"column_start":5,"column_end":58}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":544474,"byte_end":544533,"line_start":346,"line_end":346,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":544538,"byte_end":544545,"line_start":347,"line_end":347,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8373},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":545339,"byte_end":545343,"line_start":375,"line_end":375,"column_start":8,"column_end":12},"name":"take","qualname":"::io::AsyncReadExt::take","value":"fn take(Self, u64) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":8359},"children":[],"decl_id":null,"docs":" Creates an AsyncRead adapter which will read at most `limit` bytes\n from the underlying reader.","sig":null,"attributes":[{"value":"/ Creates an AsyncRead adapter which will read at most `limit` bytes","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":544746,"byte_end":544816,"line_start":356,"line_end":356,"column_start":5,"column_end":75}},{"value":"/ from the underlying reader.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":544821,"byte_end":544852,"line_start":357,"line_end":357,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":544857,"byte_end":544860,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":544865,"byte_end":544879,"line_start":359,"line_end":359,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":544884,"byte_end":544887,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":544892,"byte_end":544899,"line_start":361,"line_end":361,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":544904,"byte_end":544945,"line_start":362,"line_end":362,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncReadExt, Cursor};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":544950,"byte_end":544994,"line_start":363,"line_end":363,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":544999,"byte_end":545002,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ let reader = Cursor::new(&b\"12345678\"[..]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":545007,"byte_end":545054,"line_start":365,"line_end":365,"column_start":5,"column_end":52}},{"value":"/ let mut buffer = [0; 5];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":545059,"byte_end":545087,"line_start":366,"line_end":366,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":545092,"byte_end":545095,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ let mut take = reader.take(4);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":545100,"byte_end":545134,"line_start":368,"line_end":368,"column_start":5,"column_end":39}},{"value":"/ let n = take.read(&mut buffer).await?;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":545139,"byte_end":545181,"line_start":369,"line_end":369,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":545186,"byte_end":545189,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(n, 4);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":545194,"byte_end":545215,"line_start":371,"line_end":371,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(&buffer, b\"1234\\0\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":545220,"byte_end":545255,"line_start":372,"line_end":372,"column_start":5,"column_end":40}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":545260,"byte_end":545319,"line_start":373,"line_end":373,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":545324,"byte_end":545331,"line_start":374,"line_end":374,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":8376},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":546152,"byte_end":546165,"line_start":401,"line_end":401,"column_start":11,"column_end":24},"name":"AsyncWriteExt","qualname":"::io::AsyncWriteExt","value":"AsyncWriteExt: AsyncWrite","parent":null,"children":[{"krate":0,"index":8377},{"krate":0,"index":8378},{"krate":0,"index":8379},{"krate":0,"index":8381},{"krate":0,"index":8383}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncWrite` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncWrite` types.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":546069,"byte_end":546141,"line_start":400,"line_end":400,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":8377},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":546906,"byte_end":546911,"line_start":424,"line_end":424,"column_start":8,"column_end":13},"name":"flush","qualname":"::io::AsyncWriteExt::flush","value":"fn flush<'_>(&'_ mut Self) -> Flush where Self: Unpin","parent":{"krate":0,"index":8376},"children":[],"decl_id":null,"docs":" Creates a future which will entirely flush this `AsyncWrite`.","sig":null,"attributes":[{"value":"/ Creates a future which will entirely flush this `AsyncWrite`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":546184,"byte_end":546249,"line_start":402,"line_end":402,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":546254,"byte_end":546257,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":546262,"byte_end":546276,"line_start":404,"line_end":404,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":546281,"byte_end":546284,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":546289,"byte_end":546296,"line_start":406,"line_end":406,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":546301,"byte_end":546342,"line_start":407,"line_end":407,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AllowStdIo, AsyncWriteExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":546347,"byte_end":546396,"line_start":408,"line_end":408,"column_start":5,"column_end":54}},{"value":"/ use std::io::{BufWriter, Cursor};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":546401,"byte_end":546438,"line_start":409,"line_end":409,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":546443,"byte_end":546446,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ let mut output = vec![0u8; 5];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":546451,"byte_end":546485,"line_start":411,"line_end":411,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":546490,"byte_end":546493,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":546498,"byte_end":546503,"line_start":413,"line_end":413,"column_start":5,"column_end":10}},{"value":"/     let writer = Cursor::new(&mut output);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":546508,"byte_end":546554,"line_start":414,"line_end":414,"column_start":5,"column_end":51}},{"value":"/     let mut buffered = AllowStdIo::new(BufWriter::new(writer));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":546559,"byte_end":546626,"line_start":415,"line_end":415,"column_start":5,"column_end":72}},{"value":"/     buffered.write_all(&[1, 2]).await?;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":546631,"byte_end":546674,"line_start":416,"line_end":416,"column_start":5,"column_end":48}},{"value":"/     buffered.write_all(&[3, 4]).await?;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":546679,"byte_end":546722,"line_start":417,"line_end":417,"column_start":5,"column_end":48}},{"value":"/     buffered.flush().await?;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":546727,"byte_end":546759,"line_start":418,"line_end":418,"column_start":5,"column_end":37}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":546764,"byte_end":546769,"line_start":419,"line_end":419,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":546774,"byte_end":546777,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(output, [1, 2, 3, 4, 0]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":546782,"byte_end":546822,"line_start":421,"line_end":421,"column_start":5,"column_end":45}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":546827,"byte_end":546886,"line_start":422,"line_end":422,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":546891,"byte_end":546898,"line_start":423,"line_end":423,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8378},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":547120,"byte_end":547125,"line_start":432,"line_end":432,"column_start":8,"column_end":13},"name":"close","qualname":"::io::AsyncWriteExt::close","value":"fn close<'_>(&'_ mut Self) -> Close where Self: Unpin","parent":{"krate":0,"index":8376},"children":[],"decl_id":null,"docs":" Creates a future which will entirely close this `AsyncWrite`.\n","sig":null,"attributes":[{"value":"/ Creates a future which will entirely close this `AsyncWrite`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":547047,"byte_end":547112,"line_start":431,"line_end":431,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":8379},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":547467,"byte_end":547472,"line_start":443,"line_end":443,"column_start":8,"column_end":13},"name":"write","qualname":"::io::AsyncWriteExt::write","value":"fn write<'a>(&'a mut Self, &'a [u8]) -> Write where Self: Unpin","parent":{"krate":0,"index":8376},"children":[],"decl_id":null,"docs":" Creates a future which will write bytes from `buf` into the object.","sig":null,"attributes":[{"value":"/ Creates a future which will write bytes from `buf` into the object.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":547261,"byte_end":547332,"line_start":439,"line_end":439,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":547337,"byte_end":547340,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes written once the write","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":547345,"byte_end":547427,"line_start":441,"line_end":441,"column_start":5,"column_end":87}},{"value":"/ operation is completed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":547432,"byte_end":547459,"line_start":442,"line_end":442,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":8381},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":547882,"byte_end":547896,"line_start":455,"line_end":455,"column_start":8,"column_end":22},"name":"write_vectored","qualname":"::io::AsyncWriteExt::write_vectored","value":"fn write_vectored<'a>(&'a mut Self, &'a [IoSlice]) -> WriteVectored where\nSelf: Unpin","parent":{"krate":0,"index":8376},"children":[],"decl_id":null,"docs":" Creates a future which will write bytes from `bufs` into the object using vectored\n IO operations.","sig":null,"attributes":[{"value":"/ Creates a future which will write bytes from `bufs` into the object using vectored","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":547638,"byte_end":547724,"line_start":450,"line_end":450,"column_start":5,"column_end":91}},{"value":"/ IO operations.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":547729,"byte_end":547747,"line_start":451,"line_end":451,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":547752,"byte_end":547755,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes written once the write","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":547760,"byte_end":547842,"line_start":453,"line_end":453,"column_start":5,"column_end":87}},{"value":"/ operation is completed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":547847,"byte_end":547874,"line_start":454,"line_end":454,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":8383},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":548742,"byte_end":548751,"line_start":482,"line_end":482,"column_start":8,"column_end":17},"name":"write_all","qualname":"::io::AsyncWriteExt::write_all","value":"fn write_all<'a>(&'a mut Self, &'a [u8]) -> WriteAll where Self: Unpin","parent":{"krate":0,"index":8376},"children":[],"decl_id":null,"docs":" Write data into this object.","sig":null,"attributes":[{"value":"/ Write data into this object.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":548089,"byte_end":548121,"line_start":462,"line_end":462,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":548126,"byte_end":548129,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ Creates a future that will write the entire contents of the buffer `buf` into","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":548134,"byte_end":548215,"line_start":464,"line_end":464,"column_start":5,"column_end":86}},{"value":"/ this `AsyncWrite`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":548220,"byte_end":548242,"line_start":465,"line_end":465,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":548247,"byte_end":548250,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ The returned future will not complete until all the data has been written.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":548255,"byte_end":548333,"line_start":467,"line_end":467,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":548338,"byte_end":548341,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":548346,"byte_end":548360,"line_start":469,"line_end":469,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":548365,"byte_end":548368,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":548373,"byte_end":548380,"line_start":471,"line_end":471,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":548385,"byte_end":548426,"line_start":472,"line_end":472,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncWriteExt, Cursor};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":548431,"byte_end":548476,"line_start":473,"line_end":473,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":548481,"byte_end":548484,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ let mut writer = Cursor::new(vec![0u8; 5]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":548489,"byte_end":548536,"line_start":475,"line_end":475,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":548541,"byte_end":548544,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ writer.write_all(&[1, 2, 3, 4]).await?;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":548549,"byte_end":548592,"line_start":477,"line_end":477,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":548597,"byte_end":548600,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(writer.into_inner(), [1, 2, 3, 4, 0]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":548605,"byte_end":548658,"line_start":479,"line_end":479,"column_start":5,"column_end":58}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":548663,"byte_end":548722,"line_start":480,"line_end":480,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":548727,"byte_end":548734,"line_start":481,"line_end":481,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":8387},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":552607,"byte_end":552619,"line_start":595,"line_end":595,"column_start":11,"column_end":23},"name":"AsyncSeekExt","qualname":"::io::AsyncSeekExt","value":"AsyncSeekExt: AsyncSeek","parent":null,"children":[{"krate":0,"index":8388},{"krate":0,"index":8389}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncSeek` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncSeek` types.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":552525,"byte_end":552596,"line_start":594,"line_end":594,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":8388},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":552889,"byte_end":552893,"line_start":601,"line_end":601,"column_start":8,"column_end":12},"name":"seek","qualname":"::io::AsyncSeekExt::seek","value":"fn seek<'_>(&'_ mut Self, SeekFrom) -> Seek where Self: Unpin","parent":{"krate":0,"index":8387},"children":[],"decl_id":null,"docs":" Creates a future which will seek an IO object, and then yield the\n new position in the object and the object itself.","sig":null,"attributes":[{"value":"/ Creates a future which will seek an IO object, and then yield the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":552637,"byte_end":552706,"line_start":596,"line_end":596,"column_start":5,"column_end":74}},{"value":"/ new position in the object and the object itself.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":552711,"byte_end":552764,"line_start":597,"line_end":597,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":552769,"byte_end":552772,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":552777,"byte_end":552854,"line_start":599,"line_end":599,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":552859,"byte_end":552881,"line_start":600,"line_end":600,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":8389},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":553231,"byte_end":553246,"line_start":612,"line_end":612,"column_start":8,"column_end":23},"name":"stream_position","qualname":"::io::AsyncSeekExt::stream_position","value":"fn stream_position<'_>(&'_ mut Self) -> Seek where Self: Unpin","parent":{"krate":0,"index":8387},"children":[],"decl_id":null,"docs":" Creates a future which will return the current seek position from the\n start of the stream.","sig":null,"attributes":[{"value":"/ Creates a future which will return the current seek position from the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":553048,"byte_end":553121,"line_start":608,"line_end":608,"column_start":5,"column_end":78}},{"value":"/ start of the stream.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":553126,"byte_end":553150,"line_start":609,"line_end":609,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":553155,"byte_end":553158,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `self.seek(SeekFrom::Current(0))`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":553163,"byte_end":553223,"line_start":611,"line_end":611,"column_start":5,"column_end":65}}]},{"kind":"Trait","id":{"krate":0,"index":8392},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":553498,"byte_end":553513,"line_start":623,"line_end":623,"column_start":11,"column_end":26},"name":"AsyncBufReadExt","qualname":"::io::AsyncBufReadExt","value":"AsyncBufReadExt: AsyncBufRead","parent":null,"children":[{"krate":0,"index":8393},{"krate":0,"index":8394},{"krate":0,"index":8395},{"krate":0,"index":8397},{"krate":0,"index":8399}],"decl_id":null,"docs":" An extension trait which adds utility methods to `AsyncBufRead` types.\n","sig":null,"attributes":[{"value":"/ An extension trait which adds utility methods to `AsyncBufRead` types.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":553413,"byte_end":553487,"line_start":622,"line_end":622,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":8393},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":554467,"byte_end":554475,"line_start":647,"line_end":647,"column_start":8,"column_end":16},"name":"fill_buf","qualname":"::io::AsyncBufReadExt::fill_buf","value":"fn fill_buf<'_>(&'_ mut Self) -> FillBuf where Self: Unpin","parent":{"krate":0,"index":8392},"children":[],"decl_id":null,"docs":" Creates a future which will wait for a non-empty buffer to be available from this I/O\n object or EOF to be reached.","sig":null,"attributes":[{"value":"/ Creates a future which will wait for a non-empty buffer to be available from this I/O","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":553534,"byte_end":553623,"line_start":624,"line_end":624,"column_start":5,"column_end":94}},{"value":"/ object or EOF to be reached.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":553628,"byte_end":553660,"line_start":625,"line_end":625,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":553665,"byte_end":553668,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ This method is the async equivalent to [`BufRead::fill_buf`](std::io::BufRead::fill_buf).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":553673,"byte_end":553766,"line_start":627,"line_end":627,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":553771,"byte_end":553774,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":553779,"byte_end":553790,"line_start":629,"line_end":629,"column_start":5,"column_end":16}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":553795,"byte_end":553836,"line_start":630,"line_end":630,"column_start":5,"column_end":46}},{"value":"/ use futures::{io::AsyncBufReadExt as _, stream::{iter, TryStreamExt as _}};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":553841,"byte_end":553920,"line_start":631,"line_end":631,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":553925,"byte_end":553928,"line_start":632,"line_end":632,"column_start":5,"column_end":8}},{"value":"/ let mut stream = iter(vec![Ok(vec![1, 2, 3]), Ok(vec![4, 5, 6])]).into_async_read();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":553933,"byte_end":554021,"line_start":633,"line_end":633,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":554026,"byte_end":554029,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![1, 2, 3]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":554034,"byte_end":554090,"line_start":635,"line_end":635,"column_start":5,"column_end":61}},{"value":"/ stream.consume_unpin(2);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":554095,"byte_end":554123,"line_start":636,"line_end":636,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":554128,"byte_end":554131,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![3]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":554136,"byte_end":554186,"line_start":638,"line_end":638,"column_start":5,"column_end":55}},{"value":"/ stream.consume_unpin(1);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":554191,"byte_end":554219,"line_start":639,"line_end":639,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":554224,"byte_end":554227,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![4, 5, 6]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":554232,"byte_end":554288,"line_start":641,"line_end":641,"column_start":5,"column_end":61}},{"value":"/ stream.consume_unpin(3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":554293,"byte_end":554321,"line_start":642,"line_end":642,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":554326,"byte_end":554329,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":554334,"byte_end":554383,"line_start":644,"line_end":644,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":554388,"byte_end":554447,"line_start":645,"line_end":645,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":554452,"byte_end":554459,"line_start":646,"line_end":646,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8394},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":555276,"byte_end":555289,"line_start":671,"line_end":671,"column_start":8,"column_end":21},"name":"consume_unpin","qualname":"::io::AsyncBufReadExt::consume_unpin","value":"fn consume_unpin<'_>(&'_ mut Self, usize) where Self: Unpin","parent":{"krate":0,"index":8392},"children":[],"decl_id":null,"docs":" A convenience for calling [`AsyncBufRead::consume`] on [`Unpin`] IO types.","sig":null,"attributes":[{"value":"/ A convenience for calling [`AsyncBufRead::consume`] on [`Unpin`] IO types.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":554618,"byte_end":554696,"line_start":654,"line_end":654,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":554701,"byte_end":554704,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":554709,"byte_end":554720,"line_start":656,"line_end":656,"column_start":5,"column_end":16}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":554725,"byte_end":554766,"line_start":657,"line_end":657,"column_start":5,"column_end":46}},{"value":"/ use futures::{io::AsyncBufReadExt as _, stream::{iter, TryStreamExt as _}};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":554771,"byte_end":554850,"line_start":658,"line_end":658,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":554855,"byte_end":554858,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ let mut stream = iter(vec![Ok(vec![1, 2, 3])]).into_async_read();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":554863,"byte_end":554932,"line_start":660,"line_end":660,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":554937,"byte_end":554940,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![1, 2, 3]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":554945,"byte_end":555001,"line_start":662,"line_end":662,"column_start":5,"column_end":61}},{"value":"/ stream.consume_unpin(2);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":555006,"byte_end":555034,"line_start":663,"line_end":663,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":555039,"byte_end":555042,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![3]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":555047,"byte_end":555097,"line_start":665,"line_end":665,"column_start":5,"column_end":55}},{"value":"/ stream.consume_unpin(1);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":555102,"byte_end":555130,"line_start":666,"line_end":666,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":555135,"byte_end":555138,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.fill_buf().await?, vec![]);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":555143,"byte_end":555192,"line_start":668,"line_end":668,"column_start":5,"column_end":54}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":555197,"byte_end":555256,"line_start":669,"line_end":669,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":555261,"byte_end":555268,"line_start":670,"line_end":670,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8395},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":556980,"byte_end":556990,"line_start":719,"line_end":719,"column_start":8,"column_end":18},"name":"read_until","qualname":"::io::AsyncBufReadExt::read_until","value":"fn read_until<'a>(&'a mut Self, u8, &'a mut Vec<u8>) -> ReadUntil where\nSelf: Unpin","parent":{"krate":0,"index":8392},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes associated with this I/O\n object into `buf` until the delimiter `byte` or EOF is reached.\n This method is the async equivalent to [`BufRead::read_until`](std::io::BufRead::read_until).","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes associated with this I/O","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":555397,"byte_end":555472,"line_start":678,"line_end":678,"column_start":5,"column_end":80}},{"value":"/ object into `buf` until the delimiter `byte` or EOF is reached.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":555477,"byte_end":555544,"line_start":679,"line_end":679,"column_start":5,"column_end":72}},{"value":"/ This method is the async equivalent to [`BufRead::read_until`](std::io::BufRead::read_until).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":555549,"byte_end":555646,"line_start":680,"line_end":680,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":555651,"byte_end":555654,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ This function will read bytes from the underlying stream until the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":555659,"byte_end":555729,"line_start":682,"line_end":682,"column_start":5,"column_end":75}},{"value":"/ delimiter or EOF is found. Once found, all bytes up to, and including,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":555734,"byte_end":555808,"line_start":683,"line_end":683,"column_start":5,"column_end":79}},{"value":"/ the delimiter (if found) will be appended to `buf`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":555813,"byte_end":555868,"line_start":684,"line_end":684,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":555873,"byte_end":555876,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":555881,"byte_end":555959,"line_start":686,"line_end":686,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":555964,"byte_end":555991,"line_start":687,"line_end":687,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":555996,"byte_end":555999,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":556004,"byte_end":556081,"line_start":689,"line_end":689,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":556086,"byte_end":556108,"line_start":690,"line_end":690,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":556113,"byte_end":556116,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":556121,"byte_end":556135,"line_start":692,"line_end":692,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":556140,"byte_end":556143,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":556148,"byte_end":556155,"line_start":694,"line_end":694,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":556160,"byte_end":556201,"line_start":695,"line_end":695,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":556206,"byte_end":556253,"line_start":696,"line_end":696,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":556258,"byte_end":556261,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ let mut cursor = Cursor::new(b\"lorem-ipsum\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":556266,"byte_end":556315,"line_start":698,"line_end":698,"column_start":5,"column_end":54}},{"value":"/ let mut buf = vec![];","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":556320,"byte_end":556345,"line_start":699,"line_end":699,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":556350,"byte_end":556353,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'l'","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":556358,"byte_end":556381,"line_start":701,"line_end":701,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":556386,"byte_end":556447,"line_start":702,"line_end":702,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 6);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":556452,"byte_end":556481,"line_start":703,"line_end":703,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"lorem-\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":556486,"byte_end":556517,"line_start":704,"line_end":704,"column_start":5,"column_end":36}},{"value":"/ buf.clear();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":556522,"byte_end":556538,"line_start":705,"line_end":705,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":556543,"byte_end":556546,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'i'","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":556551,"byte_end":556574,"line_start":707,"line_end":707,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":556579,"byte_end":556640,"line_start":708,"line_end":708,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 5);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":556645,"byte_end":556674,"line_start":709,"line_end":709,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"ipsum\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":556679,"byte_end":556709,"line_start":710,"line_end":710,"column_start":5,"column_end":35}},{"value":"/ buf.clear();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":556714,"byte_end":556730,"line_start":711,"line_end":711,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":556735,"byte_end":556738,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ // cursor is at EOF","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":556743,"byte_end":556766,"line_start":713,"line_end":713,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_until(b'-', &mut buf).await?;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":556771,"byte_end":556832,"line_start":714,"line_end":714,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(num_bytes, 0);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":556837,"byte_end":556866,"line_start":715,"line_end":715,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, b\"\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":556871,"byte_end":556896,"line_start":716,"line_end":716,"column_start":5,"column_end":30}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":556901,"byte_end":556960,"line_start":717,"line_end":717,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":556965,"byte_end":556972,"line_start":718,"line_end":718,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8397},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":559169,"byte_end":559178,"line_start":777,"line_end":777,"column_start":8,"column_end":17},"name":"read_line","qualname":"::io::AsyncBufReadExt::read_line","value":"fn read_line<'a>(&'a mut Self, &'a mut String) -> ReadLine where Self: Unpin","parent":{"krate":0,"index":8392},"children":[],"decl_id":null,"docs":" Creates a future which will read all the bytes associated with this I/O\n object into `buf` until a newline (the 0xA byte) or EOF is reached,\n This method is the async equivalent to [`BufRead::read_line`](std::io::BufRead::read_line).","sig":null,"attributes":[{"value":"/ Creates a future which will read all the bytes associated with this I/O","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":557187,"byte_end":557262,"line_start":726,"line_end":726,"column_start":5,"column_end":80}},{"value":"/ object into `buf` until a newline (the 0xA byte) or EOF is reached,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":557267,"byte_end":557338,"line_start":727,"line_end":727,"column_start":5,"column_end":76}},{"value":"/ This method is the async equivalent to [`BufRead::read_line`](std::io::BufRead::read_line).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":557343,"byte_end":557438,"line_start":728,"line_end":728,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":557443,"byte_end":557446,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ This function will read bytes from the underlying stream until the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":557451,"byte_end":557521,"line_start":730,"line_end":730,"column_start":5,"column_end":75}},{"value":"/ newline delimiter (the 0xA byte) or EOF is found. Once found, all bytes","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":557526,"byte_end":557601,"line_start":731,"line_end":731,"column_start":5,"column_end":80}},{"value":"/ up to, and including, the delimiter (if found) will be appended to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":557606,"byte_end":557676,"line_start":732,"line_end":732,"column_start":5,"column_end":75}},{"value":"/ `buf`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":557681,"byte_end":557691,"line_start":733,"line_end":733,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":557696,"byte_end":557699,"line_start":734,"line_end":734,"column_start":5,"column_end":8}},{"value":"/ The returned future will resolve to the number of bytes read once the read","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":557704,"byte_end":557782,"line_start":735,"line_end":735,"column_start":5,"column_end":83}},{"value":"/ operation is completed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":557787,"byte_end":557814,"line_start":736,"line_end":736,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":557819,"byte_end":557822,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ In the case of an error the buffer and the object will be discarded, with","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":557827,"byte_end":557904,"line_start":738,"line_end":738,"column_start":5,"column_end":82}},{"value":"/ the error yielded.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":557909,"byte_end":557931,"line_start":739,"line_end":739,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":557936,"byte_end":557939,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":557944,"byte_end":557956,"line_start":741,"line_end":741,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":557961,"byte_end":557964,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ This function has the same error semantics as [`read_until`] and will","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":557969,"byte_end":558042,"line_start":743,"line_end":743,"column_start":5,"column_end":78}},{"value":"/ also return an error if the read bytes are not valid UTF-8. If an I/O","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":558047,"byte_end":558120,"line_start":744,"line_end":744,"column_start":5,"column_end":78}},{"value":"/ error is encountered then `buf` may contain some bytes already read in","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":558125,"byte_end":558199,"line_start":745,"line_end":745,"column_start":5,"column_end":79}},{"value":"/ the event that all data read so far was valid UTF-8.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":558204,"byte_end":558260,"line_start":746,"line_end":746,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":558265,"byte_end":558268,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ [`read_until`]: AsyncBufReadExt::read_until","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":558273,"byte_end":558320,"line_start":748,"line_end":748,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":558325,"byte_end":558328,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":558333,"byte_end":558347,"line_start":750,"line_end":750,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":558352,"byte_end":558355,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":558360,"byte_end":558367,"line_start":752,"line_end":752,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":558372,"byte_end":558413,"line_start":753,"line_end":753,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":558418,"byte_end":558465,"line_start":754,"line_end":754,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":558470,"byte_end":558473,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ let mut cursor = Cursor::new(b\"foo\\nbar\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":558478,"byte_end":558524,"line_start":756,"line_end":756,"column_start":5,"column_end":51}},{"value":"/ let mut buf = String::new();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":558529,"byte_end":558561,"line_start":757,"line_end":757,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":558566,"byte_end":558569,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'f'","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":558574,"byte_end":558597,"line_start":759,"line_end":759,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":558602,"byte_end":558656,"line_start":760,"line_end":760,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 4);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":558661,"byte_end":558690,"line_start":761,"line_end":761,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"foo\\n\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":558695,"byte_end":558724,"line_start":762,"line_end":762,"column_start":5,"column_end":34}},{"value":"/ buf.clear();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":558729,"byte_end":558745,"line_start":763,"line_end":763,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":558750,"byte_end":558753,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ // cursor is at 'b'","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":558758,"byte_end":558781,"line_start":765,"line_end":765,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":558786,"byte_end":558840,"line_start":766,"line_end":766,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 3);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":558845,"byte_end":558874,"line_start":767,"line_end":767,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"bar\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":558879,"byte_end":558906,"line_start":768,"line_end":768,"column_start":5,"column_end":32}},{"value":"/ buf.clear();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":558911,"byte_end":558927,"line_start":769,"line_end":769,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":558932,"byte_end":558935,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ // cursor is at EOF","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":558940,"byte_end":558963,"line_start":771,"line_end":771,"column_start":5,"column_end":28}},{"value":"/ let num_bytes = cursor.read_line(&mut buf).await?;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":558968,"byte_end":559022,"line_start":772,"line_end":772,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(num_bytes, 0);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":559027,"byte_end":559056,"line_start":773,"line_end":773,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(buf, \"\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":559061,"byte_end":559085,"line_start":774,"line_end":774,"column_start":5,"column_end":29}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":559090,"byte_end":559149,"line_start":775,"line_end":775,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":559154,"byte_end":559161,"line_start":776,"line_end":776,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8399},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":560702,"byte_end":560707,"line_start":816,"line_end":816,"column_start":8,"column_end":13},"name":"lines","qualname":"::io::AsyncBufReadExt::lines","value":"fn lines(Self) -> Lines<Self> where Self: Sized","parent":{"krate":0,"index":8392},"children":[],"decl_id":null,"docs":" Returns a stream over the lines of this reader.\n This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","sig":null,"attributes":[{"value":"/ Returns a stream over the lines of this reader.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":559356,"byte_end":559407,"line_start":784,"line_end":784,"column_start":5,"column_end":56}},{"value":"/ This method is the async equivalent to [`BufRead::lines`](std::io::BufRead::lines).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":559412,"byte_end":559499,"line_start":785,"line_end":785,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":559504,"byte_end":559507,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ The stream returned from this function will yield instances of","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":559512,"byte_end":559578,"line_start":787,"line_end":787,"column_start":5,"column_end":71}},{"value":"/ [`io::Result`]`<`[`String`]`>`. Each string returned will *not* have a newline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":559583,"byte_end":559665,"line_start":788,"line_end":788,"column_start":5,"column_end":87}},{"value":"/ byte (the 0xA byte) or CRLF (0xD, 0xA bytes) at the end.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":559670,"byte_end":559730,"line_start":789,"line_end":789,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":559735,"byte_end":559738,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ [`io::Result`]: std::io::Result","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":559743,"byte_end":559778,"line_start":791,"line_end":791,"column_start":5,"column_end":40}},{"value":"/ [`String`]: String","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":559783,"byte_end":559805,"line_start":792,"line_end":792,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":559810,"byte_end":559813,"line_start":793,"line_end":793,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":559818,"byte_end":559830,"line_start":794,"line_end":794,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":559835,"byte_end":559838,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ Each line of the stream has the same error semantics as [`AsyncBufReadExt::read_line`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":559843,"byte_end":559934,"line_start":796,"line_end":796,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":559939,"byte_end":559942,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ [`AsyncBufReadExt::read_line`]: AsyncBufReadExt::read_line","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":559947,"byte_end":560009,"line_start":798,"line_end":798,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":560014,"byte_end":560017,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":560022,"byte_end":560036,"line_start":800,"line_end":800,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":560041,"byte_end":560044,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":560049,"byte_end":560056,"line_start":802,"line_end":802,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":560061,"byte_end":560102,"line_start":803,"line_end":803,"column_start":5,"column_end":46}},{"value":"/ use futures::io::{AsyncBufReadExt, Cursor};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":560107,"byte_end":560154,"line_start":804,"line_end":804,"column_start":5,"column_end":52}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":560159,"byte_end":560194,"line_start":805,"line_end":805,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":560199,"byte_end":560202,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ let cursor = Cursor::new(b\"lorem\\nipsum\\r\\ndolor\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":560207,"byte_end":560262,"line_start":807,"line_end":807,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":560267,"byte_end":560270,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ let mut lines_stream = cursor.lines().map(|l| l.unwrap());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":560275,"byte_end":560337,"line_start":809,"line_end":809,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"lorem\")));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":560342,"byte_end":560413,"line_start":810,"line_end":810,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"ipsum\")));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":560418,"byte_end":560489,"line_start":811,"line_end":811,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, Some(String::from(\"dolor\")));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":560494,"byte_end":560565,"line_start":812,"line_end":812,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(lines_stream.next().await, None);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":560570,"byte_end":560618,"line_start":813,"line_end":813,"column_start":5,"column_end":53}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":560623,"byte_end":560682,"line_start":814,"line_end":814,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":560687,"byte_end":560694,"line_start":815,"line_end":815,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":8431},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lock","qualname":"::lock","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mod.rs","parent":null,"children":[{"krate":0,"index":8432},{"krate":0,"index":8435},{"krate":0,"index":8436},{"krate":0,"index":8439},{"krate":0,"index":8442},{"krate":0,"index":8445},{"krate":0,"index":8448},{"krate":0,"index":8451},{"krate":0,"index":8454},{"krate":0,"index":8538}],"decl_id":null,"docs":" Futures-powered synchronization primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":11428,"byte_end":11453,"line_start":329,"line_end":329,"column_start":1,"column_end":26}},{"value":"/ Futures-powered synchronization primitives.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mod.rs","byte_start":644455,"byte_end":644502,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mod.rs","byte_start":644503,"byte_end":644506,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mod.rs","byte_start":644507,"byte_end":644582,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mod.rs","byte_start":644583,"byte_end":644640,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":8596},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":656381,"byte_end":656386,"line_start":22,"line_end":22,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::lock::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":8598},{"krate":0,"index":8599},{"krate":0,"index":8600}],"decl_id":null,"docs":" A futures-aware mutex.","sig":null,"attributes":[{"value":"/ A futures-aware mutex.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":656054,"byte_end":656080,"line_start":14,"line_end":14,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":656081,"byte_end":656084,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Fairness","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":656085,"byte_end":656099,"line_start":16,"line_end":16,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":656100,"byte_end":656103,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This mutex provides no fairness guarantees. Tasks may not acquire the mutex","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":656104,"byte_end":656183,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ in the order that they requested the lock, and it's possible for a single task","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":656184,"byte_end":656266,"line_start":19,"line_end":19,"column_start":1,"column_end":83}},{"value":"/ which repeatedly takes the lock to starve other tasks, which may be left waiting","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":656267,"byte_end":656351,"line_start":20,"line_end":20,"column_start":1,"column_end":85}},{"value":"/ indefinitely.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":656352,"byte_end":656369,"line_start":21,"line_end":21,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":8603},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":656539,"byte_end":656542,"line_start":29,"line_end":29,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Mutex<T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8606},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":656877,"byte_end":656881,"line_start":39,"line_end":39,"column_start":8,"column_end":12},"name":"from","qualname":"<Mutex<T> as std::convert::From>::from","value":"fn from(T) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8609},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":656975,"byte_end":656982,"line_start":45,"line_end":45,"column_start":8,"column_end":15},"name":"default","qualname":"<Mutex<T> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8623},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":657612,"byte_end":657615,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"new","qualname":"<Mutex<T>>::new","value":"fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new futures-aware mutex.\n","sig":null,"attributes":[{"value":"/ Creates a new futures-aware mutex.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":657562,"byte_end":657600,"line_start":75,"line_end":75,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":8624},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":658042,"byte_end":658052,"line_start":94,"line_end":94,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this mutex, returning the underlying data.","sig":null,"attributes":[{"value":"/ Consumes this mutex, returning the underlying data.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":657796,"byte_end":657851,"line_start":84,"line_end":84,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":657856,"byte_end":657859,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":657864,"byte_end":657878,"line_start":86,"line_end":86,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":657883,"byte_end":657886,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":657891,"byte_end":657898,"line_start":88,"line_end":88,"column_start":5,"column_end":12}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":657903,"byte_end":657932,"line_start":89,"line_end":89,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":657937,"byte_end":657940,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ let mutex = Mutex::new(0);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":657945,"byte_end":657975,"line_start":91,"line_end":91,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(mutex.into_inner(), 0);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":657980,"byte_end":658018,"line_start":92,"line_end":92,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":658023,"byte_end":658030,"line_start":93,"line_end":93,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8627},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":658266,"byte_end":658274,"line_start":103,"line_end":103,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T>>::try_lock","value":"fn try_lock<'_>(&'_ Self) -> Option<MutexGuard>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to acquire the lock immediately.","sig":null,"attributes":[{"value":"/ Attempt to acquire the lock immediately.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":658138,"byte_end":658182,"line_start":100,"line_end":100,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":658187,"byte_end":658190,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ If the lock is currently held, this will return `None`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":658195,"byte_end":658254,"line_start":102,"line_end":102,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":8628},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":658658,"byte_end":658672,"line_start":115,"line_end":115,"column_start":12,"column_end":26},"name":"try_lock_owned","qualname":"<Mutex<T>>::try_lock_owned","value":"fn try_lock_owned<'_>(&'_ Arc<Self>) -> Option<OwnedMutexGuard<T>>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to acquire the lock immediately.","sig":null,"attributes":[{"value":"/ Attempt to acquire the lock immediately.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":658530,"byte_end":658574,"line_start":112,"line_end":112,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":658579,"byte_end":658582,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ If the lock is currently held, this will return `None`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":658587,"byte_end":658646,"line_start":114,"line_end":114,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":8629},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":659118,"byte_end":659122,"line_start":128,"line_end":128,"column_start":12,"column_end":16},"name":"lock","qualname":"<Mutex<T>>::lock","value":"fn lock<'_>(&'_ Self) -> MutexLockFuture","parent":null,"children":[],"decl_id":null,"docs":" Acquire the lock asynchronously.","sig":null,"attributes":[{"value":"/ Acquire the lock asynchronously.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":658953,"byte_end":658989,"line_start":124,"line_end":124,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":658994,"byte_end":658997,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ This method returns a future that will resolve once the lock has been","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":659002,"byte_end":659075,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/ successfully acquired.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":659080,"byte_end":659106,"line_start":127,"line_end":127,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":8630},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":659405,"byte_end":659415,"line_start":136,"line_end":136,"column_start":12,"column_end":22},"name":"lock_owned","qualname":"<Mutex<T>>::lock_owned","value":"fn lock_owned(Arc<Self>) -> OwnedMutexLockFuture<T>","parent":null,"children":[],"decl_id":null,"docs":" Acquire the lock asynchronously.","sig":null,"attributes":[{"value":"/ Acquire the lock asynchronously.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":659240,"byte_end":659276,"line_start":132,"line_end":132,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":659281,"byte_end":659284,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This method returns a future that will resolve once the lock has been","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":659289,"byte_end":659362,"line_start":134,"line_end":134,"column_start":5,"column_end":78}},{"value":"/ successfully acquired.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":659367,"byte_end":659393,"line_start":135,"line_end":135,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":8631},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":660059,"byte_end":660066,"line_start":156,"line_end":156,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Mutex<T>>::get_mut","value":"fn get_mut<'_>(&'_ mut Self) -> &'_ mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":659549,"byte_end":659604,"line_start":140,"line_end":140,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":659609,"byte_end":659612,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the `Mutex` mutably, no actual locking needs to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":659617,"byte_end":659692,"line_start":142,"line_end":142,"column_start":5,"column_end":80}},{"value":"/ take place -- the mutable borrow statically guarantees no locks exist.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":659697,"byte_end":659771,"line_start":143,"line_end":143,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":659776,"byte_end":659779,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":659784,"byte_end":659798,"line_start":145,"line_end":145,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":659803,"byte_end":659806,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":659811,"byte_end":659818,"line_start":147,"line_end":147,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":659823,"byte_end":659864,"line_start":148,"line_end":148,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::Mutex;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":659869,"byte_end":659898,"line_start":149,"line_end":149,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":659903,"byte_end":659906,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ let mut mutex = Mutex::new(0);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":659911,"byte_end":659945,"line_start":151,"line_end":151,"column_start":5,"column_end":39}},{"value":"/ *mutex.get_mut() = 10;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":659950,"byte_end":659976,"line_start":152,"line_end":152,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(*mutex.lock().await, 10);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":659981,"byte_end":660021,"line_start":153,"line_end":153,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":660026,"byte_end":660035,"line_start":154,"line_end":154,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":660040,"byte_end":660047,"line_start":155,"line_end":155,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":8635},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":661795,"byte_end":661815,"line_start":201,"line_end":201,"column_start":12,"column_end":32},"name":"OwnedMutexLockFuture","qualname":"::lock::mutex::OwnedMutexLockFuture","value":"OwnedMutexLockFuture {  }","parent":null,"children":[{"krate":0,"index":8637},{"krate":0,"index":8638}],"decl_id":null,"docs":" A future which resolves when the target mutex has been successfully acquired, owned version.\n","sig":null,"attributes":[{"value":"/ A future which resolves when the target mutex has been successfully acquired, owned version.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":661687,"byte_end":661783,"line_start":200,"line_end":200,"column_start":1,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":8641},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":662017,"byte_end":662020,"line_start":208,"line_end":208,"column_start":8,"column_end":11},"name":"fmt","qualname":"<OwnedMutexLockFuture<T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8644},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":662469,"byte_end":662482,"line_start":221,"line_end":221,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<OwnedMutexLockFuture<T> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8648},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":662637,"byte_end":662641,"line_start":229,"line_end":229,"column_start":8,"column_end":12},"name":"poll","qualname":"<OwnedMutexLockFuture<T> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8651},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":663902,"byte_end":663906,"line_start":265,"line_end":265,"column_start":8,"column_end":12},"name":"drop","qualname":"<OwnedMutexLockFuture<T> as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8652},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":664432,"byte_end":664447,"line_start":279,"line_end":279,"column_start":12,"column_end":27},"name":"OwnedMutexGuard","qualname":"::lock::mutex::OwnedMutexGuard","value":"OwnedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":8654}],"decl_id":null,"docs":" An RAII guard returned by the `lock_owned` and `try_lock_owned` methods.\n When this structure is dropped (falls out of scope), the lock will be\n unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `lock_owned` and `try_lock_owned` methods.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":664256,"byte_end":664332,"line_start":276,"line_end":276,"column_start":1,"column_end":77}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":664333,"byte_end":664406,"line_start":277,"line_end":277,"column_start":1,"column_end":74}},{"value":"/ unlocked.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":664407,"byte_end":664420,"line_start":278,"line_end":278,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8657},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":664562,"byte_end":664565,"line_start":284,"line_end":284,"column_start":8,"column_end":11},"name":"fmt","qualname":"<OwnedMutexGuard<T> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8660},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":664823,"byte_end":664827,"line_start":293,"line_end":293,"column_start":8,"column_end":12},"name":"drop","qualname":"<OwnedMutexGuard<T> as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8664},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":664953,"byte_end":664958,"line_start":300,"line_end":300,"column_start":8,"column_end":13},"name":"deref","qualname":"<OwnedMutexGuard<T> as std::ops::Deref>::deref","value":"fn deref<'_>(&'_ Self) -> &'_ T","parent":{"krate":2,"index":3486},"children":[],"decl_id":{"krate":2,"index":3488},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8667},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":665084,"byte_end":665093,"line_start":306,"line_end":306,"column_start":8,"column_end":17},"name":"deref_mut","qualname":"<OwnedMutexGuard<T> as std::ops::DerefMut>::deref_mut","value":"fn deref_mut<'_>(&'_ mut Self) -> &'_ mut T","parent":{"krate":2,"index":3499},"children":[],"decl_id":{"krate":2,"index":3500},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8668},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":665267,"byte_end":665282,"line_start":312,"line_end":312,"column_start":12,"column_end":27},"name":"MutexLockFuture","qualname":"::lock::mutex::MutexLockFuture","value":"MutexLockFuture {  }","parent":null,"children":[{"krate":0,"index":8671},{"krate":0,"index":8672}],"decl_id":null,"docs":" A future which resolves when the target mutex has been successfully acquired.\n","sig":null,"attributes":[{"value":"/ A future which resolves when the target mutex has been successfully acquired.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":665174,"byte_end":665255,"line_start":311,"line_end":311,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":8675},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":665486,"byte_end":665489,"line_start":319,"line_end":319,"column_start":8,"column_end":11},"name":"fmt","qualname":"<MutexLockFuture as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8678},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":665932,"byte_end":665945,"line_start":332,"line_end":332,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<MutexLockFuture as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated<'_>(&'_ Self) -> bool","parent":{"krate":20,"index":27},"children":[],"decl_id":{"krate":20,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8683},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":666102,"byte_end":666106,"line_start":340,"line_end":340,"column_start":8,"column_end":12},"name":"poll","qualname":"<MutexLockFuture as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8686},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":667308,"byte_end":667312,"line_start":374,"line_end":374,"column_start":8,"column_end":12},"name":"drop","qualname":"<MutexLockFuture as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8687},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":667817,"byte_end":667827,"line_start":388,"line_end":388,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::lock::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":8690}],"decl_id":null,"docs":" An RAII guard returned by the `lock` and `try_lock` methods.\n When this structure is dropped (falls out of scope), the lock will be\n unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `lock` and `try_lock` methods.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":667653,"byte_end":667717,"line_start":385,"line_end":385,"column_start":1,"column_end":65}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":667718,"byte_end":667791,"line_start":386,"line_end":386,"column_start":1,"column_end":74}},{"value":"/ unlocked.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":667792,"byte_end":667805,"line_start":387,"line_end":387,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8694},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":668396,"byte_end":668399,"line_start":409,"line_end":409,"column_start":12,"column_end":15},"name":"map","qualname":"<MutexGuard>::map","value":"fn map<U, F>(Self, F) -> MappedMutexGuard where U: ?Sized,\nF: for<'_> FnOnce(&'_ mut T) -> &'_ mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a locked view over a portion of the locked data.","sig":null,"attributes":[{"value":"/ Returns a locked view over a portion of the locked data.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":667917,"byte_end":667977,"line_start":393,"line_end":393,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":667982,"byte_end":667985,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":667990,"byte_end":668003,"line_start":395,"line_end":395,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":668008,"byte_end":668011,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":668016,"byte_end":668023,"line_start":397,"line_end":397,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":668028,"byte_end":668069,"line_start":398,"line_end":398,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::{Mutex, MutexGuard};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":668074,"byte_end":668117,"line_start":399,"line_end":399,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":668122,"byte_end":668125,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ let data = Mutex::new(Some(\"value\".to_string()));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":668130,"byte_end":668183,"line_start":401,"line_end":401,"column_start":5,"column_end":58}},{"value":"/ {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":668188,"byte_end":668193,"line_start":402,"line_end":402,"column_start":5,"column_end":10}},{"value":"/     let locked_str = MutexGuard::map(data.lock().await, |opt| opt.as_mut().unwrap());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":668198,"byte_end":668287,"line_start":403,"line_end":403,"column_start":5,"column_end":94}},{"value":"/     assert_eq!(&*locked_str, \"value\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":668292,"byte_end":668334,"line_start":404,"line_end":404,"column_start":5,"column_end":47}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":668339,"byte_end":668344,"line_start":405,"line_end":405,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":668349,"byte_end":668358,"line_start":406,"line_end":406,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":668363,"byte_end":668370,"line_start":407,"line_end":407,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":668375,"byte_end":668384,"line_start":408,"line_end":408,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8699},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":668942,"byte_end":668945,"line_start":423,"line_end":423,"column_start":8,"column_end":11},"name":"fmt","qualname":"<MutexGuard as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8702},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":669158,"byte_end":669162,"line_start":429,"line_end":429,"column_start":8,"column_end":12},"name":"drop","qualname":"<MutexGuard as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8706},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":669287,"byte_end":669292,"line_start":436,"line_end":436,"column_start":8,"column_end":13},"name":"deref","qualname":"<MutexGuard as std::ops::Deref>::deref","value":"fn deref<'_>(&'_ Self) -> &'_ T","parent":{"krate":2,"index":3486},"children":[],"decl_id":{"krate":2,"index":3488},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8709},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":669417,"byte_end":669426,"line_start":442,"line_end":442,"column_start":8,"column_end":17},"name":"deref_mut","qualname":"<MutexGuard as std::ops::DerefMut>::deref_mut","value":"fn deref_mut<'_>(&'_ mut Self) -> &'_ mut T","parent":{"krate":2,"index":3499},"children":[],"decl_id":{"krate":2,"index":3500},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8710},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":669691,"byte_end":669707,"line_start":449,"line_end":449,"column_start":12,"column_end":28},"name":"MappedMutexGuard","qualname":"::lock::mutex::MappedMutexGuard","value":"MappedMutexGuard {  }","parent":null,"children":[{"krate":0,"index":8714},{"krate":0,"index":8715},{"krate":0,"index":8716}],"decl_id":null,"docs":" An RAII guard returned by the `MutexGuard::map` and `MappedMutexGuard::map` methods.\n When this structure is dropped (falls out of scope), the lock will be unlocked.\n","sig":null,"attributes":[{"value":"/ An RAII guard returned by the `MutexGuard::map` and `MappedMutexGuard::map` methods.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":669507,"byte_end":669595,"line_start":447,"line_end":447,"column_start":1,"column_end":89}},{"value":"/ When this structure is dropped (falls out of scope), the lock will be unlocked.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":669596,"byte_end":669679,"line_start":448,"line_end":448,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":8721},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":670473,"byte_end":670476,"line_start":473,"line_end":473,"column_start":12,"column_end":15},"name":"map","qualname":"<MappedMutexGuard>::map","value":"fn map<V, F>(Self, F) -> MappedMutexGuard where V: ?Sized,\nF: for<'_> FnOnce(&'_ mut U) -> &'_ mut V","parent":null,"children":[],"decl_id":null,"docs":" Returns a locked view over a portion of the locked data.","sig":null,"attributes":[{"value":"/ Returns a locked view over a portion of the locked data.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":669884,"byte_end":669944,"line_start":456,"line_end":456,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":669949,"byte_end":669952,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":669957,"byte_end":669970,"line_start":458,"line_end":458,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":669975,"byte_end":669978,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":669983,"byte_end":669990,"line_start":460,"line_end":460,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":669995,"byte_end":670036,"line_start":461,"line_end":461,"column_start":5,"column_end":46}},{"value":"/ use futures::lock::{MappedMutexGuard, Mutex, MutexGuard};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":670041,"byte_end":670102,"line_start":462,"line_end":462,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":670107,"byte_end":670110,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ let data = Mutex::new(Some(\"value\".to_string()));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":670115,"byte_end":670168,"line_start":464,"line_end":464,"column_start":5,"column_end":58}},{"value":"/ {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":670173,"byte_end":670178,"line_start":465,"line_end":465,"column_start":5,"column_end":10}},{"value":"/     let locked_str = MutexGuard::map(data.lock().await, |opt| opt.as_mut().unwrap());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":670183,"byte_end":670272,"line_start":466,"line_end":466,"column_start":5,"column_end":94}},{"value":"/     let locked_char = MappedMutexGuard::map(locked_str, |s| s.get_mut(0..1).unwrap());","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":670277,"byte_end":670367,"line_start":467,"line_end":467,"column_start":5,"column_end":95}},{"value":"/     assert_eq!(&*locked_char, \"v\");","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":670372,"byte_end":670411,"line_start":468,"line_end":468,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":670416,"byte_end":670421,"line_start":469,"line_end":469,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":670426,"byte_end":670435,"line_start":470,"line_end":470,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":670440,"byte_end":670447,"line_start":471,"line_end":471,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":670452,"byte_end":670461,"line_start":472,"line_end":472,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8727},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":671033,"byte_end":671036,"line_start":487,"line_end":487,"column_start":8,"column_end":11},"name":"fmt","qualname":"<MappedMutexGuard as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8731},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":671314,"byte_end":671318,"line_start":496,"line_end":496,"column_start":8,"column_end":12},"name":"drop","qualname":"<MappedMutexGuard as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8736},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":671463,"byte_end":671468,"line_start":503,"line_end":503,"column_start":8,"column_end":13},"name":"deref","qualname":"<MappedMutexGuard as std::ops::Deref>::deref","value":"fn deref<'_>(&'_ Self) -> &'_ U","parent":{"krate":2,"index":3486},"children":[],"decl_id":{"krate":2,"index":3488},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8740},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":671601,"byte_end":671610,"line_start":509,"line_end":509,"column_start":8,"column_end":17},"name":"deref_mut","qualname":"<MappedMutexGuard as std::ops::DerefMut>::deref_mut","value":"fn deref_mut<'_>(&'_ mut Self) -> &'_ mut U","parent":{"krate":2,"index":3499},"children":[],"decl_id":{"krate":2,"index":3500},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16283},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":673839,"byte_end":673848,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"Abortable","qualname":"::abortable::Abortable","value":"Abortable {  }","parent":null,"children":[{"krate":0,"index":16285},{"krate":0,"index":16286}],"decl_id":null,"docs":" A future/stream which can be remotely short-circuited using an `AbortHandle`.\n","sig":null,"attributes":[{"value":"must_use = \"futures/streams do nothing unless you poll them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14924341,"byte_end":14924350,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":8805},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":675258,"byte_end":675261,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"new","qualname":"<Abortable<T>>::new","value":"fn new(T, AbortRegistration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future/stream using an existing `AbortRegistration`.\n `AbortRegistration`s can be acquired through `AbortHandle::new`.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future/stream using an existing `AbortRegistration`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":673954,"byte_end":674036,"line_start":23,"line_end":23,"column_start":5,"column_end":87}},{"value":"/ `AbortRegistration`s can be acquired through `AbortHandle::new`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":674041,"byte_end":674109,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":674114,"byte_end":674117,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ When `abort` is called on the handle tied to `reg` or if `abort` has","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":674122,"byte_end":674194,"line_start":26,"line_end":26,"column_start":5,"column_end":77}},{"value":"/ already been called, the future/stream will complete immediately without making","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":674199,"byte_end":674282,"line_start":27,"line_end":27,"column_start":5,"column_end":88}},{"value":"/ any further progress.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":674287,"byte_end":674312,"line_start":28,"line_end":28,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":674317,"byte_end":674320,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":674325,"byte_end":674340,"line_start":30,"line_end":30,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":674345,"byte_end":674348,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Usage with futures:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":674353,"byte_end":674376,"line_start":32,"line_end":32,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":674381,"byte_end":674384,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":674389,"byte_end":674396,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":674401,"byte_end":674442,"line_start":35,"line_end":35,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{Abortable, AbortHandle, Aborted};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":674447,"byte_end":674506,"line_start":36,"line_end":36,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":674511,"byte_end":674514,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":674519,"byte_end":674588,"line_start":38,"line_end":38,"column_start":5,"column_end":74}},{"value":"/ let future = Abortable::new(async { 2 }, abort_registration);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":674593,"byte_end":674658,"line_start":39,"line_end":39,"column_start":5,"column_end":70}},{"value":"/ abort_handle.abort();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":674663,"byte_end":674688,"line_start":40,"line_end":40,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(future.await, Err(Aborted));","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":674693,"byte_end":674736,"line_start":41,"line_end":41,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":674741,"byte_end":674750,"line_start":42,"line_end":42,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":674755,"byte_end":674762,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":674767,"byte_end":674770,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Usage with streams:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":674775,"byte_end":674798,"line_start":45,"line_end":45,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":674803,"byte_end":674806,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":674811,"byte_end":674818,"line_start":47,"line_end":47,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":674823,"byte_end":674864,"line_start":48,"line_end":48,"column_start":5,"column_end":46}},{"value":"/ # use futures::future::{Abortable, AbortHandle};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":674869,"byte_end":674921,"line_start":49,"line_end":49,"column_start":5,"column_end":57}},{"value":"/ # use futures::stream::{self, StreamExt};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":674926,"byte_end":674971,"line_start":50,"line_end":50,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":674976,"byte_end":674979,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":674984,"byte_end":675053,"line_start":52,"line_end":52,"column_start":5,"column_end":74}},{"value":"/ let mut stream = Abortable::new(stream::iter(vec![1, 2, 3]), abort_registration);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":675058,"byte_end":675143,"line_start":53,"line_end":53,"column_start":5,"column_end":90}},{"value":"/ abort_handle.abort();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":675148,"byte_end":675173,"line_start":54,"line_end":54,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":675178,"byte_end":675220,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":675225,"byte_end":675234,"line_start":56,"line_end":56,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":675239,"byte_end":675246,"line_start":57,"line_end":57,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":8806},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":675766,"byte_end":675776,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"is_aborted","qualname":"<Abortable<T>>::is_aborted","value":"fn is_aborted<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the task has been aborted. Note that all this\n method indicates is whether [`AbortHandle::abort`] was *called*.\n This means that it will return `true` even if:\n * `abort` was called after the task had completed.\n * `abort` was called while the task was being polled - the task may still be running and\n will not be stopped until `poll` returns.\n","sig":null,"attributes":[{"value":"/ Checks whether the task has been aborted. Note that all this","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":675356,"byte_end":675420,"line_start":62,"line_end":62,"column_start":5,"column_end":69}},{"value":"/ method indicates is whether [`AbortHandle::abort`] was *called*.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":675425,"byte_end":675493,"line_start":63,"line_end":63,"column_start":5,"column_end":73}},{"value":"/ This means that it will return `true` even if:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":675498,"byte_end":675548,"line_start":64,"line_end":64,"column_start":5,"column_end":55}},{"value":"/ * `abort` was called after the task had completed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":675553,"byte_end":675607,"line_start":65,"line_end":65,"column_start":5,"column_end":59}},{"value":"/ * `abort` was called while the task was being polled - the task may still be running and","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":675612,"byte_end":675704,"line_start":66,"line_end":66,"column_start":5,"column_end":97}},{"value":"/ will not be stopped until `poll` returns.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":675709,"byte_end":675754,"line_start":67,"line_end":67,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":16326},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":676044,"byte_end":676061,"line_start":77,"line_end":77,"column_start":12,"column_end":29},"name":"AbortRegistration","qualname":"::abortable::AbortRegistration","value":"AbortRegistration {  }","parent":null,"children":[{"krate":0,"index":16327}],"decl_id":null,"docs":" A registration handle for an `Abortable` task.\n Values of this type can be acquired from `AbortHandle::new` and are used\n in calls to `Abortable::new`.\n","sig":null,"attributes":[{"value":"/ A registration handle for an `Abortable` task.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":675854,"byte_end":675904,"line_start":73,"line_end":73,"column_start":1,"column_end":51}},{"value":"/ Values of this type can be acquired from `AbortHandle::new` and are used","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":675905,"byte_end":675981,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ in calls to `Abortable::new`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":675982,"byte_end":676015,"line_start":75,"line_end":75,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":16330},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":676178,"byte_end":676189,"line_start":83,"line_end":83,"column_start":12,"column_end":23},"name":"AbortHandle","qualname":"::abortable::AbortHandle","value":"AbortHandle {  }","parent":null,"children":[{"krate":0,"index":16331}],"decl_id":null,"docs":" A handle to an `Abortable` task.\n","sig":null,"attributes":[{"value":"/ A handle to an `Abortable` task.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":676106,"byte_end":676142,"line_start":81,"line_end":81,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":8808},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":676460,"byte_end":676468,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"name":"new_pair","qualname":"<AbortHandle>::new_pair","value":"fn new_pair() -> (Self, AbortRegistration)","parent":null,"children":[],"decl_id":null,"docs":" Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used\n to abort a running future or stream.","sig":null,"attributes":[{"value":"/ Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":676246,"byte_end":676320,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ to abort a running future or stream.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":676325,"byte_end":676365,"line_start":89,"line_end":89,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":676370,"byte_end":676373,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with a call to [`Abortable::new`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":676378,"byte_end":676448,"line_start":91,"line_end":91,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":16341},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":677023,"byte_end":677030,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"Aborted","qualname":"::abortable::Aborted","value":"","parent":null,"children":[],"decl_id":null,"docs":" Indicator that the `Abortable` task was aborted.\n","sig":null,"attributes":[{"value":"/ Indicator that the `Abortable` task was aborted.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":676914,"byte_end":676966,"line_start":108,"line_end":108,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":8810},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":677072,"byte_end":677075,"line_start":113,"line_end":113,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Aborted as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8820},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":678359,"byte_end":678363,"line_start":158,"line_end":158,"column_start":8,"column_end":12},"name":"poll","qualname":"<Abortable<Fut> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8825},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":678583,"byte_end":678592,"line_start":169,"line_end":169,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Abortable<St> as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":20,"index":96},"children":[],"decl_id":{"krate":20,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8828},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":679164,"byte_end":679169,"line_start":181,"line_end":181,"column_start":12,"column_end":17},"name":"abort","qualname":"<AbortHandle>::abort","value":"fn abort<'_>(&'_ Self)","parent":null,"children":[],"decl_id":null,"docs":" Abort the `Abortable` stream/future associated with this handle.","sig":null,"attributes":[{"value":"/ Abort the `Abortable` stream/future associated with this handle.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":678797,"byte_end":678865,"line_start":175,"line_end":175,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":678870,"byte_end":678873,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Notifies the Abortable task associated with this handle that it","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":678878,"byte_end":678945,"line_start":177,"line_end":177,"column_start":5,"column_end":72}},{"value":"/ should abort. Note that if the task is currently being polled on","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":678950,"byte_end":679018,"line_start":178,"line_end":178,"column_start":5,"column_end":73}},{"value":"/ another thread, it will not immediately stop running. Instead, it will","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":679023,"byte_end":679097,"line_start":179,"line_end":179,"column_start":5,"column_end":79}},{"value":"/ continue to run until its poll method returns.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":679102,"byte_end":679152,"line_start":180,"line_end":180,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":8840},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":679352,"byte_end":679359,"line_start":4,"line_end":4,"column_start":11,"column_end":18},"name":"FnOnce1","qualname":"::fns::FnOnce1","value":"FnOnce1<A>","parent":null,"children":[{"krate":0,"index":8842},{"krate":0,"index":8843}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":8842},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":679374,"byte_end":679380,"line_start":5,"line_end":5,"column_start":10,"column_end":16},"name":"Output","qualname":"::fns::FnOnce1::Output","value":"type Output;","parent":{"krate":0,"index":8840},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8843},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":679389,"byte_end":679398,"line_start":6,"line_end":6,"column_start":8,"column_end":17},"name":"call_once","qualname":"::fns::FnOnce1::call_once","value":"fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":8840},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8849},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":679523,"byte_end":679532,"line_start":14,"line_end":14,"column_start":8,"column_end":17},"name":"call_once","qualname":"<T as fns::FnOnce1>::call_once","value":"fn call_once(Self, A) -> R","parent":{"krate":0,"index":8840},"children":[],"decl_id":{"krate":0,"index":8843},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":8850},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":679591,"byte_end":679597,"line_start":19,"line_end":19,"column_start":11,"column_end":17},"name":"FnMut1","qualname":"::fns::FnMut1","value":"FnMut1<A>: FnOnce1<A>","parent":null,"children":[{"krate":0,"index":8852}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8852},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":679622,"byte_end":679630,"line_start":20,"line_end":20,"column_start":8,"column_end":16},"name":"call_mut","qualname":"::fns::FnMut1::call_mut","value":"fn call_mut<'_>(&'_ mut Self, A) -> Self::Output","parent":{"krate":0,"index":8850},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8857},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":679737,"byte_end":679745,"line_start":27,"line_end":27,"column_start":8,"column_end":16},"name":"call_mut","qualname":"<T as fns::FnMut1>::call_mut","value":"fn call_mut<'_>(&'_ mut Self, A) -> R","parent":{"krate":0,"index":8850},"children":[],"decl_id":{"krate":0,"index":8852},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8867},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":680936,"byte_end":680940,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"OkFn","qualname":"::fns::OkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8873},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":681003,"byte_end":681010,"line_start":77,"line_end":77,"column_start":8,"column_end":15},"name":"default","qualname":"<OkFn<E> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8878},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":681133,"byte_end":681142,"line_start":84,"line_end":84,"column_start":8,"column_end":17},"name":"call_once","qualname":"<OkFn<E> as fns::FnOnce1>::call_once","value":"fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":8840},"children":[],"decl_id":{"krate":0,"index":8843},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16372},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":681296,"byte_end":681303,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"ChainFn","qualname":"::fns::ChainFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8884},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":681451,"byte_end":681460,"line_start":100,"line_end":100,"column_start":8,"column_end":17},"name":"call_once","qualname":"<ChainFn<F, G> as fns::FnOnce1>::call_once","value":"fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":8840},"children":[],"decl_id":{"krate":0,"index":8843},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8889},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":681650,"byte_end":681658,"line_start":109,"line_end":109,"column_start":8,"column_end":16},"name":"call_mut","qualname":"<ChainFn<F, G> as fns::FnMut1>::call_mut","value":"fn call_mut<'_>(&'_ mut Self, A) -> Self::Output","parent":{"krate":0,"index":8850},"children":[],"decl_id":{"krate":0,"index":8852},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16393},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":682037,"byte_end":682050,"line_start":127,"line_end":127,"column_start":12,"column_end":25},"name":"MergeResultFn","qualname":"::fns::MergeResultFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8901},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":682131,"byte_end":682140,"line_start":131,"line_end":131,"column_start":8,"column_end":17},"name":"call_once","qualname":"<MergeResultFn as fns::FnOnce1>::call_once","value":"fn call_once(Self, Result<T, T>) -> Self::Output","parent":{"krate":0,"index":8840},"children":[],"decl_id":{"krate":0,"index":8843},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16409},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":682392,"byte_end":682401,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"InspectFn","qualname":"::fns::InspectFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8907},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":682610,"byte_end":682619,"line_start":149,"line_end":149,"column_start":8,"column_end":17},"name":"call_once","qualname":"<InspectFn<F> as fns::FnOnce1>::call_once","value":"fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":8840},"children":[],"decl_id":{"krate":0,"index":8843},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8912},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":682881,"byte_end":682889,"line_start":159,"line_end":159,"column_start":8,"column_end":16},"name":"call_mut","qualname":"<InspectFn<F> as fns::FnMut1>::call_mut","value":"fn call_mut<'_>(&'_ mut Self, A) -> Self::Output","parent":{"krate":0,"index":8850},"children":[],"decl_id":{"krate":0,"index":8852},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16424},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":683356,"byte_end":683363,"line_start":179,"line_end":179,"column_start":12,"column_end":19},"name":"MapOkFn","qualname":"::fns::MapOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8925},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":683497,"byte_end":683506,"line_start":186,"line_end":186,"column_start":8,"column_end":17},"name":"call_once","qualname":"<MapOkFn<F> as fns::FnOnce1>::call_once","value":"fn call_once(Self, Result<T, E>) -> Self::Output","parent":{"krate":0,"index":8840},"children":[],"decl_id":{"krate":0,"index":8843},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8931},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":683682,"byte_end":683690,"line_start":194,"line_end":194,"column_start":8,"column_end":16},"name":"call_mut","qualname":"<MapOkFn<F> as fns::FnMut1>::call_mut","value":"fn call_mut<'_>(&'_ mut Self, Result<T, E>) -> Self::Output","parent":{"krate":0,"index":8850},"children":[],"decl_id":{"krate":0,"index":8852},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16439},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":684074,"byte_end":684082,"line_start":211,"line_end":211,"column_start":12,"column_end":20},"name":"MapErrFn","qualname":"::fns::MapErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8946},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":684217,"byte_end":684226,"line_start":218,"line_end":218,"column_start":8,"column_end":17},"name":"call_once","qualname":"<MapErrFn<F> as fns::FnOnce1>::call_once","value":"fn call_once(Self, Result<T, E>) -> Self::Output","parent":{"krate":0,"index":8840},"children":[],"decl_id":{"krate":0,"index":8843},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8952},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":684407,"byte_end":684415,"line_start":226,"line_end":226,"column_start":8,"column_end":16},"name":"call_mut","qualname":"<MapErrFn<F> as fns::FnMut1>::call_mut","value":"fn call_mut<'_>(&'_ mut Self, Result<T, E>) -> Self::Output","parent":{"krate":0,"index":8850},"children":[],"decl_id":{"krate":0,"index":8852},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16454},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":684802,"byte_end":684813,"line_start":243,"line_end":243,"column_start":12,"column_end":23},"name":"InspectOkFn","qualname":"::fns::InspectOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8968},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":684958,"byte_end":684967,"line_start":250,"line_end":250,"column_start":8,"column_end":17},"name":"call_once","qualname":"<InspectOkFn<F> as fns::FnOnce1>::call_once","value":"fn call_once(Self, &'a Result<T, E>) -> Self::Output","parent":{"krate":0,"index":8840},"children":[],"decl_id":{"krate":0,"index":8843},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8974},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":685206,"byte_end":685214,"line_start":260,"line_end":260,"column_start":8,"column_end":16},"name":"call_mut","qualname":"<InspectOkFn<F> as fns::FnMut1>::call_mut","value":"fn call_mut<'_>(&'_ mut Self, &'a Result<T, E>) -> Self::Output","parent":{"krate":0,"index":8850},"children":[],"decl_id":{"krate":0,"index":8852},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16466},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":685698,"byte_end":685710,"line_start":281,"line_end":281,"column_start":12,"column_end":24},"name":"InspectErrFn","qualname":"::fns::InspectErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8989},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":685856,"byte_end":685865,"line_start":288,"line_end":288,"column_start":8,"column_end":17},"name":"call_once","qualname":"<InspectErrFn<F> as fns::FnOnce1>::call_once","value":"fn call_once(Self, &'a Result<T, E>) -> Self::Output","parent":{"krate":0,"index":8840},"children":[],"decl_id":{"krate":0,"index":8843},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":8995},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":686106,"byte_end":686114,"line_start":298,"line_end":298,"column_start":8,"column_end":16},"name":"call_mut","qualname":"<InspectErrFn<F> as fns::FnMut1>::call_mut","value":"fn call_mut<'_>(&'_ mut Self, &'a Result<T, E>) -> Self::Output","parent":{"krate":0,"index":8850},"children":[],"decl_id":{"krate":0,"index":8852},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":16478},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":686858,"byte_end":686872,"line_start":324,"line_end":324,"column_start":12,"column_end":26},"name":"UnwrapOrElseFn","qualname":"::fns::UnwrapOrElseFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9015},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":687006,"byte_end":687015,"line_start":331,"line_end":331,"column_start":8,"column_end":17},"name":"call_once","qualname":"<UnwrapOrElseFn<F> as fns::FnOnce1>::call_once","value":"fn call_once(Self, Result<T, E>) -> Self::Output","parent":{"krate":0,"index":8840},"children":[],"decl_id":{"krate":0,"index":8843},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9021},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":687221,"byte_end":687229,"line_start":339,"line_end":339,"column_start":8,"column_end":16},"name":"call_mut","qualname":"<UnwrapOrElseFn<F> as fns::FnMut1>::call_mut","value":"fn call_mut<'_>(&'_ mut Self, Result<T, E>) -> Self::Output","parent":{"krate":0,"index":8850},"children":[],"decl_id":{"krate":0,"index":8852},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9031},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":687637,"byte_end":687643,"line_start":355,"line_end":355,"column_start":12,"column_end":18},"name":"IntoFn","qualname":"::fns::IntoFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9037},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":687712,"byte_end":687719,"line_start":358,"line_end":358,"column_start":8,"column_end":15},"name":"default","qualname":"<IntoFn<T> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":9042},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":687854,"byte_end":687863,"line_start":367,"line_end":367,"column_start":8,"column_end":17},"name":"call_once","qualname":"<IntoFn<T> as fns::FnOnce1>::call_once","value":"fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":8840},"children":[],"decl_id":{"krate":0,"index":8843},"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/async_await/poll.rs","byte_start":14228,"byte_end":14236,"line_start":34,"line_end":34,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":50},{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/async_await/pending.rs","byte_start":15404,"byte_end":15415,"line_start":33,"line_end":33,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":59225,"byte_end":59232,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":59362,"byte_end":59369,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":59594,"byte_end":59601,"line_start":39,"line_end":39,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":298},{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":60375,"byte_end":60382,"line_start":64,"line_end":64,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":60607,"byte_end":60614,"line_start":77,"line_end":77,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":63628,"byte_end":63632,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":63739,"byte_end":63743,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":65472,"byte_end":65476,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":65589,"byte_end":65593,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":342},{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":66571,"byte_end":66574,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":66743,"byte_end":66746,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":67008,"byte_end":67011,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":384},{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/catch_unwind.rs","byte_start":68217,"byte_end":68228,"line_start":19,"line_end":19,"column_start":11,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/catch_unwind.rs","byte_start":68371,"byte_end":68382,"line_start":28,"line_end":28,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":424},{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":69609,"byte_end":69619,"line_start":32,"line_end":32,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":69820,"byte_end":69826,"line_start":40,"line_end":40,"column_start":29,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":69869,"byte_end":69875,"line_start":42,"line_end":42,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":509}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":70133,"byte_end":70138,"line_start":51,"line_end":51,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":512}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":70292,"byte_end":70302,"line_start":57,"line_end":57,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":70534,"byte_end":70539,"line_start":68,"line_end":68,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":70636,"byte_end":70641,"line_start":75,"line_end":75,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":70885,"byte_end":70891,"line_start":89,"line_end":89,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":535}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":71315,"byte_end":71321,"line_start":103,"line_end":103,"column_start":11,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":542}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":73387,"byte_end":73392,"line_start":160,"line_end":160,"column_start":11,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":75088,"byte_end":75094,"line_start":209,"line_end":209,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":551}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":75246,"byte_end":75252,"line_start":219,"line_end":219,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":554},{"krate":0,"index":555}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":76904,"byte_end":76909,"line_start":270,"line_end":270,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":78703,"byte_end":78709,"line_start":328,"line_end":328,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":78868,"byte_end":78874,"line_start":337,"line_end":337,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":79302,"byte_end":79310,"line_start":354,"line_end":354,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":570}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":79669,"byte_end":79679,"line_start":367,"line_end":367,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":573}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":42376,"byte_end":42377,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/into_future.rs","byte_start":102253,"byte_end":102263,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":756}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/into_future.rs","byte_start":102414,"byte_end":102424,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":759}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/into_future.rs","byte_start":102547,"byte_end":102557,"line_start":29,"line_end":29,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":762},{"krate":0,"index":763}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":103266,"byte_end":103276,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":103406,"byte_end":103416,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":807}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":103659,"byte_end":103669,"line_start":39,"line_end":39,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":810},{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":104622,"byte_end":104632,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":104875,"byte_end":104885,"line_start":80,"line_end":80,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":817},{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":108209,"byte_end":108222,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":849}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":108352,"byte_end":108365,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":852}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":108608,"byte_end":108621,"line_start":36,"line_end":36,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":855},{"krate":0,"index":856}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":84651,"byte_end":84654,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":109930,"byte_end":109934,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":110530,"byte_end":110534,"line_start":42,"line_end":42,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":965}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":110678,"byte_end":110682,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":969},{"krate":0,"index":970}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":111285,"byte_end":111292,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":111895,"byte_end":111902,"line_start":41,"line_end":41,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1009},{"krate":0,"index":1010}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":112047,"byte_end":112054,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":112080,"byte_end":112087,"line_start":51,"line_end":51,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1015}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":112841,"byte_end":112850,"line_start":24,"line_end":24,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":113453,"byte_end":113462,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1056},{"krate":0,"index":1057}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":114560,"byte_end":114569,"line_start":79,"line_end":79,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1060}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":114770,"byte_end":114779,"line_start":88,"line_end":88,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1063},{"krate":0,"index":1064}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":116099,"byte_end":116111,"line_start":25,"line_end":25,"column_start":40,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":116337,"byte_end":116349,"line_start":32,"line_end":32,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1108},{"krate":0,"index":1109}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":117462,"byte_end":117474,"line_start":64,"line_end":64,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1112}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":117678,"byte_end":117690,"line_start":73,"line_end":73,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1115},{"krate":0,"index":1116}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":119340,"byte_end":119352,"line_start":34,"line_end":34,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1147}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":119450,"byte_end":119462,"line_start":40,"line_end":40,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1150},{"krate":0,"index":1151}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":119776,"byte_end":119788,"line_start":51,"line_end":51,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1154}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":119975,"byte_end":119987,"line_start":60,"line_end":60,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1157}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":120425,"byte_end":120431,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":121125,"byte_end":121131,"line_start":43,"line_end":43,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1191}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":121273,"byte_end":121279,"line_start":49,"line_end":49,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1195},{"krate":0,"index":1196}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":122007,"byte_end":122020,"line_start":19,"line_end":19,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1234},{"krate":0,"index":1235}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":122586,"byte_end":122599,"line_start":40,"line_end":40,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1238}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":123619,"byte_end":123632,"line_start":70,"line_end":70,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1242},{"krate":0,"index":1243}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":125804,"byte_end":125809,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1277}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":125988,"byte_end":125993,"line_start":19,"line_end":19,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":126025,"byte_end":126030,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1282}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":126127,"byte_end":126132,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1285},{"krate":0,"index":1286}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":134130,"byte_end":134137,"line_start":50,"line_end":50,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1448}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":136684,"byte_end":136691,"line_start":130,"line_end":130,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1453},{"krate":0,"index":1454}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":137679,"byte_end":137686,"line_start":162,"line_end":162,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1458}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":138182,"byte_end":138188,"line_start":14,"line_end":14,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":140624,"byte_end":140630,"line_start":94,"line_end":94,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1504},{"krate":0,"index":1505}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":141252,"byte_end":141258,"line_start":117,"line_end":117,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1509}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":141821,"byte_end":141830,"line_start":17,"line_end":17,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":142837,"byte_end":142846,"line_start":44,"line_end":44,"column_start":11,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1552}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":143029,"byte_end":143038,"line_start":51,"line_end":51,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1555},{"krate":0,"index":1556}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":143693,"byte_end":143702,"line_start":70,"line_end":70,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1560}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":152307,"byte_end":152317,"line_start":47,"line_end":47,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1725}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":155095,"byte_end":155105,"line_start":136,"line_end":136,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1730},{"krate":0,"index":1731}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":156677,"byte_end":156687,"line_start":179,"line_end":179,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1735}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":157193,"byte_end":157202,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":159041,"byte_end":159050,"line_start":61,"line_end":61,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1778},{"krate":0,"index":1779}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":160412,"byte_end":160420,"line_start":17,"line_end":17,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":161498,"byte_end":161506,"line_start":45,"line_end":45,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1826},{"krate":0,"index":1827}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":162922,"byte_end":162930,"line_start":81,"line_end":81,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1831}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":163909,"byte_end":163915,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1868}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":164254,"byte_end":164260,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1873}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":164645,"byte_end":164651,"line_start":58,"line_end":58,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1878}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":165032,"byte_end":165038,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1881}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":165279,"byte_end":165285,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1885},{"krate":0,"index":1886}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":165624,"byte_end":165630,"line_start":95,"line_end":95,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1890}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":165906,"byte_end":165912,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1894},{"krate":0,"index":1895},{"krate":0,"index":1896}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":166447,"byte_end":166453,"line_start":130,"line_end":130,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1900}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":168125,"byte_end":168131,"line_start":191,"line_end":191,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1941},{"krate":0,"index":1942}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":168932,"byte_end":168938,"line_start":219,"line_end":219,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1946},{"krate":0,"index":1947},{"krate":0,"index":1948},{"krate":0,"index":1949}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":170245,"byte_end":170251,"line_start":261,"line_end":261,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1953}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":170681,"byte_end":170687,"line_start":278,"line_end":278,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1957},{"krate":0,"index":1958}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chain.rs","byte_start":234265,"byte_end":234270,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2110}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chain.rs","byte_start":234496,"byte_end":234501,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2114}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chain.rs","byte_start":234710,"byte_end":234715,"line_start":40,"line_end":40,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2118},{"krate":0,"index":2119},{"krate":0,"index":2120}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/collect.rs","byte_start":236311,"byte_end":236318,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2161},{"krate":0,"index":2162}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/collect.rs","byte_start":236560,"byte_end":236567,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2166}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/collect.rs","byte_start":236745,"byte_end":236752,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2170},{"krate":0,"index":2171}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/unzip.rs","byte_start":237778,"byte_end":237783,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2213},{"krate":0,"index":2214}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/unzip.rs","byte_start":238131,"byte_end":238136,"line_start":32,"line_end":32,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2221}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/unzip.rs","byte_start":238386,"byte_end":238391,"line_start":43,"line_end":43,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2228},{"krate":0,"index":2229}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/concat.rs","byte_start":239516,"byte_end":239522,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2266}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/concat.rs","byte_start":239742,"byte_end":239748,"line_start":29,"line_end":29,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2269},{"krate":0,"index":2270}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/concat.rs","byte_start":240456,"byte_end":240462,"line_start":54,"line_end":54,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2273}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/count.rs","byte_start":241188,"byte_end":241193,"line_start":19,"line_end":19,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2313}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/count.rs","byte_start":241414,"byte_end":241419,"line_start":28,"line_end":28,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2316}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/count.rs","byte_start":241551,"byte_end":241556,"line_start":34,"line_end":34,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2319}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/count.rs","byte_start":241674,"byte_end":241679,"line_start":40,"line_end":40,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2322},{"krate":0,"index":2323}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/cycle.rs","byte_start":242485,"byte_end":242490,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2356}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/cycle.rs","byte_start":242646,"byte_end":242651,"line_start":28,"line_end":28,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2359},{"krate":0,"index":2360},{"krate":0,"index":2361}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/cycle.rs","byte_start":243400,"byte_end":243405,"line_start":56,"line_end":56,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2364}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/enumerate.rs","byte_start":244153,"byte_end":244162,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2394},{"krate":0,"index":11839},{"krate":0,"index":11840},{"krate":0,"index":11841},{"krate":0,"index":11842}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/enumerate.rs","byte_start":244348,"byte_end":244357,"line_start":28,"line_end":28,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2397}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/enumerate.rs","byte_start":244475,"byte_end":244484,"line_start":34,"line_end":34,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2400},{"krate":0,"index":2401},{"krate":0,"index":2402}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":245925,"byte_end":245931,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2443}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":246404,"byte_end":246410,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2449},{"krate":0,"index":11904},{"krate":0,"index":11905},{"krate":0,"index":11906},{"krate":0,"index":11907}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":246733,"byte_end":246739,"line_start":56,"line_end":56,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2454}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":247076,"byte_end":247082,"line_start":68,"line_end":68,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2460},{"krate":0,"index":2461},{"krate":0,"index":2462}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":249247,"byte_end":249256,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2503}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":249553,"byte_end":249562,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2508},{"krate":0,"index":11965},{"krate":0,"index":11966},{"krate":0,"index":11967},{"krate":0,"index":11968}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":249829,"byte_end":249838,"line_start":50,"line_end":50,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2514}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":250105,"byte_end":250114,"line_start":61,"line_end":61,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2520},{"krate":0,"index":2521},{"krate":0,"index":2522}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten.rs","byte_start":252209,"byte_end":252216,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2553},{"krate":0,"index":12018},{"krate":0,"index":12019},{"krate":0,"index":12020},{"krate":0,"index":12021}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten.rs","byte_start":252385,"byte_end":252392,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2556}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten.rs","byte_start":252584,"byte_end":252591,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2559},{"krate":0,"index":2560}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fold.rs","byte_start":254105,"byte_end":254109,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2596}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fold.rs","byte_start":254465,"byte_end":254469,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2602}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fold.rs","byte_start":254730,"byte_end":254734,"line_start":48,"line_end":48,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2608}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fold.rs","byte_start":254969,"byte_end":254973,"line_start":59,"line_end":59,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2614},{"krate":0,"index":2615}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/any.rs","byte_start":256562,"byte_end":256565,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2653}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/any.rs","byte_start":256895,"byte_end":256898,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2658}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/any.rs","byte_start":257151,"byte_end":257154,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2663}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/any.rs","byte_start":257383,"byte_end":257386,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2668},{"krate":0,"index":2669}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/all.rs","byte_start":259138,"byte_end":259141,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2707}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/all.rs","byte_start":259471,"byte_end":259474,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2712}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/all.rs","byte_start":259726,"byte_end":259729,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2717}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/all.rs","byte_start":259958,"byte_end":259961,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2722},{"krate":0,"index":2723}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each.rs","byte_start":261715,"byte_end":261722,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2765}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each.rs","byte_start":262015,"byte_end":262022,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2770}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each.rs","byte_start":262253,"byte_end":262260,"line_start":45,"line_end":45,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2775}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each.rs","byte_start":262499,"byte_end":262506,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2780},{"krate":0,"index":2781}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":263607,"byte_end":263611,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2811},{"krate":0,"index":2812},{"krate":0,"index":12365},{"krate":0,"index":12366},{"krate":0,"index":12367},{"krate":0,"index":12368}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":264108,"byte_end":264112,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2815}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":264210,"byte_end":264214,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2818},{"krate":0,"index":2819},{"krate":0,"index":2820}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":265416,"byte_end":265428,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2853},{"krate":0,"index":2854},{"krate":0,"index":2855},{"krate":0,"index":2856},{"krate":0,"index":2857}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":267918,"byte_end":267930,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2860}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":268050,"byte_end":268062,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2863},{"krate":0,"index":2864}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":268947,"byte_end":268950,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2901}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":269139,"byte_end":269142,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2905},{"krate":0,"index":12489},{"krate":0,"index":12490},{"krate":0,"index":12491},{"krate":0,"index":12492}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":269311,"byte_end":269314,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2909}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":269482,"byte_end":269485,"line_start":49,"line_end":49,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2913},{"krate":0,"index":2914},{"krate":0,"index":2916}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":270597,"byte_end":270601,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":270652,"byte_end":270656,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2953}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":270807,"byte_end":270811,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2956}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":270950,"byte_end":270954,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2959},{"krate":0,"index":2960}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/select_next_some.rs","byte_start":271605,"byte_end":271619,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2994}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/select_next_some.rs","byte_start":271770,"byte_end":271784,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":2997}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/select_next_some.rs","byte_start":271928,"byte_end":271942,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":3000},{"krate":0,"index":3001}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":273253,"byte_end":273261,"line_start":29,"line_end":29,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3054},{"krate":0,"index":12632},{"krate":0,"index":12633},{"krate":0,"index":12634},{"krate":0,"index":12635},{"krate":0,"index":3055},{"krate":0,"index":3056},{"krate":0,"index":3057},{"krate":0,"index":3058},{"krate":0,"index":3059},{"krate":0,"index":3061}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":278758,"byte_end":278766,"line_start":189,"line_end":189,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3066}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":278908,"byte_end":278916,"line_start":195,"line_end":195,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3069},{"krate":0,"index":3070},{"krate":0,"index":3071}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":280068,"byte_end":280072,"line_start":237,"line_end":237,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3074}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":280317,"byte_end":280321,"line_start":247,"line_end":247,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3077}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":280432,"byte_end":280436,"line_start":253,"line_end":253,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3081},{"krate":0,"index":3082}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":281133,"byte_end":281140,"line_start":279,"line_end":279,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3085}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":281388,"byte_end":281395,"line_start":289,"line_end":289,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3088}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":281506,"byte_end":281513,"line_start":295,"line_end":295,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3092},{"krate":0,"index":3093}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":282233,"byte_end":282239,"line_start":321,"line_end":321,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3097}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":282591,"byte_end":282597,"line_start":332,"line_end":332,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3103}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":282866,"byte_end":282872,"line_start":343,"line_end":343,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3108},{"krate":0,"index":3109}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":284133,"byte_end":284141,"line_start":381,"line_end":381,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3113}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":284461,"byte_end":284469,"line_start":394,"line_end":394,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3118}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":284653,"byte_end":284661,"line_start":405,"line_end":405,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3122},{"krate":0,"index":3123}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":285032,"byte_end":285042,"line_start":423,"line_end":423,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3133},{"krate":0,"index":3134}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip.rs","byte_start":285707,"byte_end":285711,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3177},{"krate":0,"index":12856},{"krate":0,"index":12857},{"krate":0,"index":12858},{"krate":0,"index":12859}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip.rs","byte_start":285902,"byte_end":285906,"line_start":28,"line_end":28,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3180}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip.rs","byte_start":286024,"byte_end":286028,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3183},{"krate":0,"index":3184},{"krate":0,"index":3185}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":287625,"byte_end":287634,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3224}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":288086,"byte_end":288095,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3229},{"krate":0,"index":12925},{"krate":0,"index":12926},{"krate":0,"index":12927},{"krate":0,"index":12928}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":288421,"byte_end":288430,"line_start":54,"line_end":54,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3234}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":288678,"byte_end":288687,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3239},{"krate":0,"index":3240},{"krate":0,"index":3241}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take.rs","byte_start":290980,"byte_end":290984,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3274},{"krate":0,"index":12969},{"krate":0,"index":12970},{"krate":0,"index":12971},{"krate":0,"index":12972}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take.rs","byte_start":291157,"byte_end":291161,"line_start":29,"line_end":29,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3277},{"krate":0,"index":3278},{"krate":0,"index":3279}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take.rs","byte_start":292106,"byte_end":292110,"line_start":68,"line_end":68,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3282}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":293133,"byte_end":293142,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3320}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":293590,"byte_end":293599,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3325},{"krate":0,"index":13038},{"krate":0,"index":13039},{"krate":0,"index":13040},{"krate":0,"index":13041}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":293918,"byte_end":293927,"line_start":54,"line_end":54,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3330},{"krate":0,"index":3331},{"krate":0,"index":3332}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":295439,"byte_end":295448,"line_start":104,"line_end":104,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3337}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":296832,"byte_end":296841,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3374}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":297129,"byte_end":297138,"line_start":41,"line_end":41,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3378},{"krate":0,"index":13095},{"krate":0,"index":13096},{"krate":0,"index":13097},{"krate":0,"index":13098},{"krate":0,"index":3379},{"krate":0,"index":3380},{"krate":0,"index":3381}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":299255,"byte_end":299264,"line_start":111,"line_end":111,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3385},{"krate":0,"index":3386},{"krate":0,"index":3387}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":300296,"byte_end":300305,"line_start":150,"line_end":150,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3391}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":301247,"byte_end":301251,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3429}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":301502,"byte_end":301506,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3434},{"krate":0,"index":13156},{"krate":0,"index":13157},{"krate":0,"index":13158},{"krate":0,"index":13159}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":301752,"byte_end":301756,"line_start":45,"line_end":45,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3439}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":301982,"byte_end":301986,"line_start":56,"line_end":56,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3444},{"krate":0,"index":3445},{"krate":0,"index":3446}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":303861,"byte_end":303864,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3484},{"krate":0,"index":3485},{"krate":0,"index":3486},{"krate":0,"index":3487},{"krate":0,"index":3488}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":305450,"byte_end":305453,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3492}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":305648,"byte_end":305651,"line_start":71,"line_end":71,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3496},{"krate":0,"index":3497},{"krate":0,"index":3498}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chunks.rs","byte_start":308332,"byte_end":308338,"line_start":24,"line_end":24,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3537},{"krate":0,"index":3538},{"krate":0,"index":13261},{"krate":0,"index":13262},{"krate":0,"index":13263},{"krate":0,"index":13264}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chunks.rs","byte_start":308824,"byte_end":308830,"line_start":43,"line_end":43,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3541},{"krate":0,"index":3542},{"krate":0,"index":3543}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chunks.rs","byte_start":310438,"byte_end":310444,"line_start":88,"line_end":88,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3546}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/ready_chunks.rs","byte_start":311416,"byte_end":311427,"line_start":23,"line_end":23,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3582},{"krate":0,"index":13309},{"krate":0,"index":13310},{"krate":0,"index":13311},{"krate":0,"index":13312}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/ready_chunks.rs","byte_start":311757,"byte_end":311768,"line_start":37,"line_end":37,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3585},{"krate":0,"index":3586},{"krate":0,"index":3587}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/ready_chunks.rs","byte_start":313929,"byte_end":313940,"line_start":96,"line_end":96,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3590}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":314938,"byte_end":314942,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3634}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":315428,"byte_end":315432,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3641}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":315596,"byte_end":315600,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3648},{"krate":0,"index":13378},{"krate":0,"index":13379},{"krate":0,"index":13380},{"krate":0,"index":13381}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":315962,"byte_end":315966,"line_start":65,"line_end":65,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3655},{"krate":0,"index":3656},{"krate":0,"index":3657}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":317193,"byte_end":317197,"line_start":108,"line_end":108,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3664}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffer_unordered.rs","byte_start":318378,"byte_end":318393,"line_start":26,"line_end":26,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3707}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffer_unordered.rs","byte_start":318725,"byte_end":318740,"line_start":39,"line_end":39,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3710},{"krate":0,"index":13423},{"krate":0,"index":13424},{"krate":0,"index":13425},{"krate":0,"index":13426}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffer_unordered.rs","byte_start":319067,"byte_end":319082,"line_start":55,"line_end":55,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3713},{"krate":0,"index":3714},{"krate":0,"index":3715}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffer_unordered.rs","byte_start":320536,"byte_end":320551,"line_start":100,"line_end":100,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3718}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffered.rs","byte_start":321661,"byte_end":321669,"line_start":27,"line_end":27,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3760}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffered.rs","byte_start":322016,"byte_end":322024,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3763},{"krate":0,"index":13468},{"krate":0,"index":13469},{"krate":0,"index":13470},{"krate":0,"index":13471}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffered.rs","byte_start":322304,"byte_end":322312,"line_start":53,"line_end":53,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3766},{"krate":0,"index":3767},{"krate":0,"index":3768}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":325461,"byte_end":325476,"line_start":60,"line_end":60,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3846},{"krate":0,"index":3847},{"krate":0,"index":3850},{"krate":0,"index":3854},{"krate":0,"index":3856},{"krate":0,"index":3858}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":329595,"byte_end":329608,"line_start":177,"line_end":177,"column_start":45,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3867},{"krate":0,"index":3868},{"krate":0,"index":3869}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":330128,"byte_end":330141,"line_start":194,"line_end":194,"column_start":50,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3873}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":330539,"byte_end":330549,"line_start":210,"line_end":210,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":330574,"byte_end":330584,"line_start":211,"line_end":211,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":330594,"byte_end":330604,"line_start":213,"line_end":213,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3881},{"krate":0,"index":3882},{"krate":0,"index":3884}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":331655,"byte_end":331665,"line_start":239,"line_end":239,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3886}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":333266,"byte_end":333279,"line_start":279,"line_end":279,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3889}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":333483,"byte_end":333496,"line_start":286,"line_end":286,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3893},{"krate":0,"index":3894}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":334611,"byte_end":334627,"line_start":322,"line_end":322,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3898}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":335101,"byte_end":335117,"line_start":338,"line_end":338,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3901},{"krate":0,"index":13568},{"krate":0,"index":13569},{"krate":0,"index":13570},{"krate":0,"index":13571}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":336056,"byte_end":336076,"line_start":368,"line_end":368,"column_start":10,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3904}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":336343,"byte_end":336359,"line_start":378,"line_end":378,"column_start":26,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3908}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":336564,"byte_end":336580,"line_start":388,"line_end":388,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3911},{"krate":0,"index":3912}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each_concurrent.rs","byte_start":342009,"byte_end":342026,"line_start":23,"line_end":23,"column_start":33,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3957}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each_concurrent.rs","byte_start":342372,"byte_end":342389,"line_start":37,"line_end":37,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3962}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each_concurrent.rs","byte_start":342822,"byte_end":342839,"line_start":54,"line_end":54,"column_start":34,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3967}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each_concurrent.rs","byte_start":343069,"byte_end":343086,"line_start":65,"line_end":65,"column_start":29,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3972},{"krate":0,"index":3973}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/catch_unwind.rs","byte_start":345446,"byte_end":345457,"line_start":19,"line_end":19,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4014},{"krate":0,"index":13756},{"krate":0,"index":13757},{"krate":0,"index":13758},{"krate":0,"index":13759}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/catch_unwind.rs","byte_start":345649,"byte_end":345660,"line_start":27,"line_end":27,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4017},{"krate":0,"index":4018},{"krate":0,"index":4021}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/catch_unwind.rs","byte_start":346512,"byte_end":346523,"line_start":57,"line_end":57,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4024}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":183640,"byte_end":183641,"line_start":245,"line_end":245,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":385527,"byte_end":385534,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4345}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":385827,"byte_end":385834,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":4350},{"krate":0,"index":13817},{"krate":0,"index":13818},{"krate":0,"index":13819},{"krate":0,"index":13820}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":386115,"byte_end":386122,"line_start":49,"line_end":49,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4355},{"krate":0,"index":4356},{"krate":0,"index":4357}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":387258,"byte_end":387265,"line_start":85,"line_end":85,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4362}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_stream.rs","byte_start":388183,"byte_end":388193,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4392},{"krate":0,"index":14064},{"krate":0,"index":14065},{"krate":0,"index":14066},{"krate":0,"index":14067}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_stream.rs","byte_start":388386,"byte_end":388396,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":4395}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_stream.rs","byte_start":388517,"byte_end":388527,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4398},{"krate":0,"index":4399},{"krate":0,"index":4400}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":389626,"byte_end":389632,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4441}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":389924,"byte_end":389930,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4446},{"krate":0,"index":14263},{"krate":0,"index":14264},{"krate":0,"index":14265},{"krate":0,"index":14266}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":390208,"byte_end":390214,"line_start":49,"line_end":49,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4451},{"krate":0,"index":4452},{"krate":0,"index":4453}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":391484,"byte_end":391490,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4458}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":392394,"byte_end":392401,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":392455,"byte_end":392462,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4495}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":392625,"byte_end":392632,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":4498}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":392774,"byte_end":392781,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4501},{"krate":0,"index":4502}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each.rs","byte_start":393557,"byte_end":393567,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4540}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each.rs","byte_start":393863,"byte_end":393873,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4545}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each.rs","byte_start":394118,"byte_end":394128,"line_start":45,"line_end":45,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4550},{"krate":0,"index":4551}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":395527,"byte_end":395536,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4592}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":395932,"byte_end":395941,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4597},{"krate":0,"index":14393},{"krate":0,"index":14394},{"krate":0,"index":14395},{"krate":0,"index":14396}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":396184,"byte_end":396193,"line_start":53,"line_end":53,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4602}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":396450,"byte_end":396459,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4607},{"krate":0,"index":4608},{"krate":0,"index":4609}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":398593,"byte_end":398605,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4650}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":398905,"byte_end":398917,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4655},{"krate":0,"index":14454},{"krate":0,"index":14455},{"krate":0,"index":14456},{"krate":0,"index":14457}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":399114,"byte_end":399126,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4661}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":399404,"byte_end":399416,"line_start":56,"line_end":56,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4667},{"krate":0,"index":4668},{"krate":0,"index":4669}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_flatten.rs","byte_start":401593,"byte_end":401603,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4702},{"krate":0,"index":14498},{"krate":0,"index":14499},{"krate":0,"index":14500},{"krate":0,"index":14501}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_flatten.rs","byte_start":401868,"byte_end":401878,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4705}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_flatten.rs","byte_start":402124,"byte_end":402134,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4708},{"krate":0,"index":4709}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_collect.rs","byte_start":403743,"byte_end":403753,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4750}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_collect.rs","byte_start":403893,"byte_end":403903,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4754}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_collect.rs","byte_start":404091,"byte_end":404101,"line_start":36,"line_end":36,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4758},{"krate":0,"index":4759}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_concat.rs","byte_start":405076,"byte_end":405085,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4788}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_concat.rs","byte_start":405304,"byte_end":405313,"line_start":29,"line_end":29,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4791},{"krate":0,"index":4792}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":406697,"byte_end":406706,"line_start":25,"line_end":25,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4845},{"krate":0,"index":4846},{"krate":0,"index":14635},{"krate":0,"index":14636},{"krate":0,"index":14637},{"krate":0,"index":14638}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":407201,"byte_end":407210,"line_start":44,"line_end":44,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4849},{"krate":0,"index":4850},{"krate":0,"index":4851}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":409150,"byte_end":409159,"line_start":95,"line_end":95,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4854}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":409818,"byte_end":409832,"line_start":118,"line_end":118,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4858}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":409977,"byte_end":409991,"line_start":124,"line_end":124,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4862}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":410178,"byte_end":410192,"line_start":131,"line_end":131,"column_start":61,"column_end":75},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_fold.rs","byte_start":410802,"byte_end":410809,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4911}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_fold.rs","byte_start":411168,"byte_end":411175,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4917}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_fold.rs","byte_start":411455,"byte_end":411462,"line_start":48,"line_end":48,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4923}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_fold.rs","byte_start":411716,"byte_end":411723,"line_start":59,"line_end":59,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4929},{"krate":0,"index":4930}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":415586,"byte_end":415595,"line_start":78,"line_end":78,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4972}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":415857,"byte_end":415866,"line_start":88,"line_end":88,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4978},{"krate":0,"index":4979}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":417612,"byte_end":417624,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5024}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":418080,"byte_end":418092,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5029},{"krate":0,"index":14851},{"krate":0,"index":14852},{"krate":0,"index":14853},{"krate":0,"index":14854}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":418432,"byte_end":418444,"line_start":55,"line_end":55,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5034},{"krate":0,"index":5035},{"krate":0,"index":5036}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":419936,"byte_end":419948,"line_start":100,"line_end":100,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5041}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":421176,"byte_end":421188,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5082}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":421640,"byte_end":421652,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5087},{"krate":0,"index":14920},{"krate":0,"index":14921},{"krate":0,"index":14922},{"krate":0,"index":14923}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":421990,"byte_end":422002,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":5092},{"krate":0,"index":5093},{"krate":0,"index":5094}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":423602,"byte_end":423614,"line_start":109,"line_end":109,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5099}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_buffer_unordered.rs","byte_start":424902,"byte_end":424920,"line_start":26,"line_end":26,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":5149},{"krate":0,"index":14968},{"krate":0,"index":14969},{"krate":0,"index":14970},{"krate":0,"index":14971}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_buffer_unordered.rs","byte_start":425259,"byte_end":425277,"line_start":42,"line_end":42,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5152},{"krate":0,"index":5153}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_buffered.rs","byte_start":427483,"byte_end":427494,"line_start":27,"line_end":27,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":5203},{"krate":0,"index":15016},{"krate":0,"index":15017},{"krate":0,"index":15018},{"krate":0,"index":15019}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_buffered.rs","byte_start":427831,"byte_end":427842,"line_start":43,"line_end":43,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5206},{"krate":0,"index":5207}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":430005,"byte_end":430025,"line_start":25,"line_end":25,"column_start":33,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5255}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":430390,"byte_end":430410,"line_start":39,"line_end":39,"column_start":34,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":5260}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":430649,"byte_end":430669,"line_start":50,"line_end":50,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5265}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":431117,"byte_end":431137,"line_start":67,"line_end":67,"column_start":29,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5270},{"krate":0,"index":5271}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_async_read.rs","byte_start":434426,"byte_end":434439,"line_start":33,"line_end":33,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":5318}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_async_read.rs","byte_start":434643,"byte_end":434656,"line_start":43,"line_end":43,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5321}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_async_read.rs","byte_start":436307,"byte_end":436320,"line_start":93,"line_end":93,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5324},{"krate":0,"index":5325},{"krate":0,"index":5326}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_async_read.rs","byte_start":436936,"byte_end":436949,"line_start":114,"line_end":114,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5329},{"krate":0,"index":5330}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":351923,"byte_end":351924,"line_start":154,"line_end":154,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":439031,"byte_end":439035,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":439657,"byte_end":439661,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5497},{"krate":0,"index":5498},{"krate":0,"index":5499}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":440852,"byte_end":440858,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":440885,"byte_end":440891,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5534},{"krate":0,"index":5535},{"krate":0,"index":5536}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":441199,"byte_end":441205,"line_start":51,"line_end":51,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5539}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":441802,"byte_end":441812,"line_start":17,"line_end":17,"column_start":36,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":441856,"byte_end":441866,"line_start":19,"line_end":19,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5574},{"krate":0,"index":5575},{"krate":0,"index":5576}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":442180,"byte_end":442190,"line_start":31,"line_end":31,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5580}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":444710,"byte_end":444715,"line_start":21,"line_end":21,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":444747,"byte_end":444752,"line_start":23,"line_end":23,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5621}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":444837,"byte_end":444842,"line_start":29,"line_end":29,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5624},{"krate":0,"index":5625},{"krate":0,"index":5626}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":445091,"byte_end":445096,"line_start":41,"line_end":41,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5629}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":446035,"byte_end":446039,"line_start":34,"line_end":34,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5671}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":446168,"byte_end":446172,"line_start":40,"line_end":40,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5674},{"krate":0,"index":5675},{"krate":0,"index":5676}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":446777,"byte_end":446781,"line_start":63,"line_end":63,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5679}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":447440,"byte_end":447447,"line_start":21,"line_end":21,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":447479,"byte_end":447486,"line_start":23,"line_end":23,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5717}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":447571,"byte_end":447578,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5720},{"krate":0,"index":5721},{"krate":0,"index":5722}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":447823,"byte_end":447830,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5725}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":448217,"byte_end":448223,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":448254,"byte_end":448260,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5760}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":449025,"byte_end":449031,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5767},{"krate":0,"index":5768}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":449727,"byte_end":449740,"line_start":18,"line_end":18,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5796},{"krate":0,"index":5797},{"krate":0,"index":5798}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":450653,"byte_end":450666,"line_start":47,"line_end":47,"column_start":40,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5801}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":453553,"byte_end":453559,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5852},{"krate":0,"index":5853},{"krate":0,"index":5854},{"krate":0,"index":5855}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":454863,"byte_end":454869,"line_start":96,"line_end":96,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5859}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":455048,"byte_end":455054,"line_start":106,"line_end":106,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5863},{"krate":0,"index":5864}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":455729,"byte_end":455737,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5901},{"krate":0,"index":5902}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":456087,"byte_end":456095,"line_start":32,"line_end":32,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5904}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":456252,"byte_end":456265,"line_start":45,"line_end":45,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5915}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":459862,"byte_end":459880,"line_start":159,"line_end":159,"column_start":29,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5926},{"krate":0,"index":5927},{"krate":0,"index":5928},{"krate":0,"index":5929}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":461247,"byte_end":461265,"line_start":194,"line_end":194,"column_start":45,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":5935}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":462835,"byte_end":462853,"line_start":256,"line_end":256,"column_start":40,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":5951},{"krate":0,"index":5952}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":464027,"byte_end":464045,"line_start":291,"line_end":291,"column_start":44,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5958}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":466616,"byte_end":466622,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6014}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":466862,"byte_end":466868,"line_start":78,"line_end":78,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6020}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":467148,"byte_end":467154,"line_start":92,"line_end":92,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6026},{"krate":0,"index":6027}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":468702,"byte_end":468714,"line_start":26,"line_end":26,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6091}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":468819,"byte_end":468831,"line_start":32,"line_end":32,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":468862,"byte_end":468874,"line_start":34,"line_end":34,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6096}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":468997,"byte_end":469009,"line_start":40,"line_end":40,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6099}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":469190,"byte_end":469202,"line_start":47,"line_end":47,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6102},{"krate":0,"index":6103}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":471784,"byte_end":471798,"line_start":102,"line_end":102,"column_start":27,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":471824,"byte_end":471838,"line_start":104,"line_end":104,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6115},{"krate":0,"index":6116},{"krate":0,"index":6117},{"krate":0,"index":6118},{"krate":0,"index":6119},{"krate":0,"index":6120}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":474607,"byte_end":474621,"line_start":173,"line_end":173,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6123}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":474714,"byte_end":474728,"line_start":179,"line_end":179,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6126},{"krate":0,"index":6127},{"krate":0,"index":6128}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":475890,"byte_end":475904,"line_start":214,"line_end":214,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6131}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":476070,"byte_end":476084,"line_start":220,"line_end":220,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":6134}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":476369,"byte_end":476383,"line_start":233,"line_end":233,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6139}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":476553,"byte_end":476567,"line_start":239,"line_end":239,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6142}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/abort.rs","byte_start":503614,"byte_end":503625,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6244}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":504999,"byte_end":505007,"line_start":40,"line_end":40,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6266},{"krate":0,"index":6267},{"krate":0,"index":6268}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":506188,"byte_end":506196,"line_start":75,"line_end":75,"column_start":40,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":506233,"byte_end":506243,"line_start":77,"line_end":77,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6274},{"krate":0,"index":6275},{"krate":0,"index":6276}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":507095,"byte_end":507105,"line_start":104,"line_end":104,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":507153,"byte_end":507160,"line_start":106,"line_end":106,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6282},{"krate":0,"index":6283},{"krate":0,"index":6284}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":507423,"byte_end":507430,"line_start":118,"line_end":118,"column_start":40,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":507471,"byte_end":507481,"line_start":120,"line_end":120,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6290},{"krate":0,"index":6291},{"krate":0,"index":6292}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":508350,"byte_end":508360,"line_start":147,"line_end":147,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":508408,"byte_end":508412,"line_start":149,"line_end":149,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6298},{"krate":0,"index":6299},{"krate":0,"index":6300}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":508671,"byte_end":508675,"line_start":161,"line_end":161,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":508844,"byte_end":508854,"line_start":165,"line_end":165,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":508899,"byte_end":508909,"line_start":166,"line_end":166,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":508955,"byte_end":508965,"line_start":168,"line_end":168,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":509010,"byte_end":509020,"line_start":169,"line_end":169,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":509074,"byte_end":509082,"line_start":171,"line_end":171,"column_start":41,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":509131,"byte_end":509139,"line_start":172,"line_end":172,"column_start":41,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/task.rs","byte_start":510824,"byte_end":510828,"line_start":46,"line_end":46,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/task.rs","byte_start":510863,"byte_end":510867,"line_start":47,"line_end":47,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/task.rs","byte_start":510899,"byte_end":510903,"line_start":49,"line_end":49,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6391}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/task.rs","byte_start":512036,"byte_end":512040,"line_start":78,"line_end":78,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":6394},{"krate":0,"index":6395}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/task.rs","byte_start":513040,"byte_end":513044,"line_start":109,"line_end":109,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":6398}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":514494,"byte_end":514509,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":6454},{"krate":0,"index":6455},{"krate":0,"index":6456},{"krate":0,"index":6457}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":517177,"byte_end":517192,"line_start":111,"line_end":111,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6460}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":479036,"byte_end":479052,"line_start":61,"line_end":61,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":479093,"byte_end":479109,"line_start":62,"line_end":62,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":479138,"byte_end":479154,"line_start":63,"line_end":63,"column_start":21,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":479179,"byte_end":479195,"line_start":65,"line_end":65,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6480}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":479380,"byte_end":479396,"line_start":72,"line_end":72,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6482}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":481103,"byte_end":481119,"line_start":104,"line_end":104,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6485}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":481193,"byte_end":481209,"line_start":110,"line_end":110,"column_start":11,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6488},{"krate":0,"index":6489},{"krate":0,"index":6490},{"krate":0,"index":6491},{"krate":0,"index":6492},{"krate":0,"index":6493},{"krate":0,"index":6494},{"krate":0,"index":6495},{"krate":0,"index":6496},{"krate":0,"index":6497},{"krate":0,"index":6498},{"krate":0,"index":6499},{"krate":0,"index":6500}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":492818,"byte_end":492834,"line_start":385,"line_end":385,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6503},{"krate":0,"index":6504},{"krate":0,"index":6513}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":497210,"byte_end":497214,"line_start":483,"line_end":483,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6512}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":500023,"byte_end":500039,"line_start":549,"line_end":549,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6516}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":500177,"byte_end":500193,"line_start":555,"line_end":555,"column_start":11,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6519},{"krate":0,"index":6520}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":500764,"byte_end":500780,"line_start":575,"line_end":575,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6523}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":502430,"byte_end":502446,"line_start":616,"line_end":616,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6538},{"krate":0,"index":6539},{"krate":0,"index":6540}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":502916,"byte_end":502932,"line_start":630,"line_end":630,"column_start":33,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6543}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":503208,"byte_end":503224,"line_start":643,"line_end":643,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6548}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":503346,"byte_end":503362,"line_start":649,"line_end":649,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6551}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":518787,"byte_end":518796,"line_start":36,"line_end":36,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6608}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":518941,"byte_end":518950,"line_start":42,"line_end":42,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6611},{"krate":0,"index":6612},{"krate":0,"index":6613},{"krate":0,"index":6614},{"krate":0,"index":6615},{"krate":0,"index":6616},{"krate":0,"index":6617}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":520423,"byte_end":520432,"line_start":89,"line_end":89,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6620}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":520531,"byte_end":520540,"line_start":95,"line_end":95,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6623},{"krate":0,"index":6624}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":521324,"byte_end":521333,"line_start":117,"line_end":117,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6627}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":522351,"byte_end":522360,"line_start":149,"line_end":149,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":6632}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":522505,"byte_end":522514,"line_start":155,"line_end":155,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":6636}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":522697,"byte_end":522706,"line_start":163,"line_end":163,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":6640},{"krate":0,"index":6641},{"krate":0,"index":6642}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":523789,"byte_end":523793,"line_start":202,"line_end":202,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6658},{"krate":0,"index":6659},{"krate":0,"index":6660}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":524226,"byte_end":524230,"line_start":218,"line_end":218,"column_start":48,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":524285,"byte_end":524292,"line_start":220,"line_end":220,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":6666},{"krate":0,"index":6667},{"krate":0,"index":6668}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":524729,"byte_end":524736,"line_start":236,"line_end":236,"column_start":48,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":524787,"byte_end":524795,"line_start":238,"line_end":238,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6673},{"krate":0,"index":6674},{"krate":0,"index":6675}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":525223,"byte_end":525231,"line_start":254,"line_end":254,"column_start":48,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":527479,"byte_end":527481,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":527536,"byte_end":527538,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":562132,"byte_end":562142,"line_start":19,"line_end":19,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":562580,"byte_end":562590,"line_start":39,"line_end":39,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":6928},{"krate":0,"index":6929},{"krate":0,"index":6930},{"krate":0,"index":6931}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":563101,"byte_end":563111,"line_start":61,"line_end":61,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6934},{"krate":0,"index":6935},{"krate":0,"index":6936},{"krate":0,"index":6937},{"krate":0,"index":6938}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":563656,"byte_end":563666,"line_start":82,"line_end":82,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6941},{"krate":0,"index":6942},{"krate":0,"index":6943},{"krate":0,"index":6944}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":564458,"byte_end":564468,"line_start":112,"line_end":112,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6947},{"krate":0,"index":6948},{"krate":0,"index":6949},{"krate":0,"index":6950},{"krate":0,"index":6951}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":565067,"byte_end":565077,"line_start":133,"line_end":133,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6954},{"krate":0,"index":6955}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":565581,"byte_end":565591,"line_start":154,"line_end":154,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6958}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":565735,"byte_end":565745,"line_start":163,"line_end":163,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6961}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":566007,"byte_end":566017,"line_start":176,"line_end":176,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6964},{"krate":0,"index":6965}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":566233,"byte_end":566243,"line_start":188,"line_end":188,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6968},{"krate":0,"index":6969}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":568050,"byte_end":568059,"line_start":40,"line_end":40,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7031},{"krate":0,"index":7032},{"krate":0,"index":15659},{"krate":0,"index":15660},{"krate":0,"index":15661},{"krate":0,"index":15662},{"krate":0,"index":7033},{"krate":0,"index":7034}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":569202,"byte_end":569211,"line_start":75,"line_end":75,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":7037},{"krate":0,"index":7038}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":570772,"byte_end":570781,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":7043},{"krate":0,"index":7044}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":572183,"byte_end":572192,"line_start":147,"line_end":147,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":7048},{"krate":0,"index":7049}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":573022,"byte_end":573031,"line_start":168,"line_end":168,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":15663},{"krate":0,"index":15664},{"krate":0,"index":15665},{"krate":0,"index":15666}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":573109,"byte_end":573118,"line_start":172,"line_end":172,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7054}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":573434,"byte_end":573443,"line_start":181,"line_end":181,"column_start":46,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":7057}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":576363,"byte_end":576375,"line_start":244,"line_end":244,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7060},{"krate":0,"index":7061}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":578457,"byte_end":578466,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7125},{"krate":0,"index":7126},{"krate":0,"index":7127},{"krate":0,"index":15718},{"krate":0,"index":15719},{"krate":0,"index":15720},{"krate":0,"index":15721},{"krate":0,"index":7128},{"krate":0,"index":7129},{"krate":0,"index":7130},{"krate":0,"index":7131},{"krate":0,"index":7132},{"krate":0,"index":7133},{"krate":0,"index":7134}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":582065,"byte_end":582074,"line_start":151,"line_end":151,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7137},{"krate":0,"index":7138},{"krate":0,"index":7140},{"krate":0,"index":7141}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":583497,"byte_end":583506,"line_start":194,"line_end":194,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":15722},{"krate":0,"index":15723}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":583587,"byte_end":583596,"line_start":198,"line_end":198,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":15724},{"krate":0,"index":15725}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":583677,"byte_end":583686,"line_start":202,"line_end":202,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7148}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":584045,"byte_end":584054,"line_start":212,"line_end":212,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":7151}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/line_writer.rs","byte_start":585108,"byte_end":585118,"line_start":25,"line_end":25,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7186},{"krate":0,"index":7187},{"krate":0,"index":7188},{"krate":0,"index":7189},{"krate":0,"index":7190}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/line_writer.rs","byte_start":586320,"byte_end":586330,"line_start":58,"line_end":58,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":7193},{"krate":0,"index":7194},{"krate":0,"index":7201},{"krate":0,"index":7202}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":590190,"byte_end":590195,"line_start":21,"line_end":21,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":7242},{"krate":0,"index":7243},{"krate":0,"index":7244},{"krate":0,"index":7245},{"krate":0,"index":7246}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":591451,"byte_end":591456,"line_start":60,"line_end":60,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7250}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":591786,"byte_end":591791,"line_start":74,"line_end":74,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7254},{"krate":0,"index":7255}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":592860,"byte_end":592865,"line_start":114,"line_end":114,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":7260},{"krate":0,"index":7261}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/close.rs","byte_start":593976,"byte_end":593981,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/close.rs","byte_start":594034,"byte_end":594039,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7290}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/close.rs","byte_start":594181,"byte_end":594186,"line_start":22,"line_end":22,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":7293},{"krate":0,"index":7294}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":595956,"byte_end":595960,"line_start":52,"line_end":52,"column_start":63,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":7341},{"krate":0,"index":7342}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":597683,"byte_end":597690,"line_start":54,"line_end":54,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":7386},{"krate":0,"index":7387}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":600856,"byte_end":600872,"line_start":81,"line_end":81,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":7445},{"krate":0,"index":7446}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":603638,"byte_end":603644,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":7492},{"krate":0,"index":7493},{"krate":0,"index":7494},{"krate":0,"index":7495},{"krate":0,"index":7496},{"krate":0,"index":7497}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":606844,"byte_end":606850,"line_start":148,"line_end":148,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7500}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":607137,"byte_end":607143,"line_start":161,"line_end":161,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":7503},{"krate":0,"index":7504}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":607775,"byte_end":607781,"line_start":185,"line_end":185,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7507},{"krate":0,"index":7508}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":608985,"byte_end":608991,"line_start":226,"line_end":226,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":16013},{"krate":0,"index":16014},{"krate":0,"index":16015},{"krate":0,"index":16016}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":609066,"byte_end":609072,"line_start":230,"line_end":230,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":16017},{"krate":0,"index":16018},{"krate":0,"index":16019},{"krate":0,"index":16020}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":609150,"byte_end":609156,"line_start":234,"line_end":234,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":16021},{"krate":0,"index":16022},{"krate":0,"index":16023},{"krate":0,"index":16024}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":609229,"byte_end":609235,"line_start":238,"line_end":238,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":16025},{"krate":0,"index":16026},{"krate":0,"index":16027},{"krate":0,"index":16028}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":610152,"byte_end":610157,"line_start":35,"line_end":35,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7545}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":610366,"byte_end":610371,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7547},{"krate":0,"index":7548}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":610603,"byte_end":610608,"line_start":55,"line_end":55,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7550}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/fill_buf.rs","byte_start":611106,"byte_end":611113,"line_start":14,"line_end":14,"column_start":27,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/fill_buf.rs","byte_start":611168,"byte_end":611175,"line_start":16,"line_end":16,"column_start":44,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":7583}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/fill_buf.rs","byte_start":611306,"byte_end":611313,"line_start":22,"line_end":22,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7587},{"krate":0,"index":7588}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/flush.rs","byte_start":612883,"byte_end":612888,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/flush.rs","byte_start":612941,"byte_end":612946,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7617}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/flush.rs","byte_start":613059,"byte_end":613064,"line_start":22,"line_end":22,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":7620},{"krate":0,"index":7621}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/lines.rs","byte_start":613867,"byte_end":613872,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":7659}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/lines.rs","byte_start":614035,"byte_end":614040,"line_start":30,"line_end":30,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":7662},{"krate":0,"index":7663}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read.rs","byte_start":615017,"byte_end":615021,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read.rs","byte_start":615073,"byte_end":615077,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7692}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read.rs","byte_start":615242,"byte_end":615246,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":7695},{"krate":0,"index":7696}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_vectored.rs","byte_start":615934,"byte_end":615946,"line_start":15,"line_end":15,"column_start":35,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_vectored.rs","byte_start":615998,"byte_end":616010,"line_start":17,"line_end":17,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":7729}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_vectored.rs","byte_start":616189,"byte_end":616201,"line_start":23,"line_end":23,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":7732},{"krate":0,"index":7733}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_exact.rs","byte_start":616896,"byte_end":616905,"line_start":17,"line_end":17,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_exact.rs","byte_start":616957,"byte_end":616966,"line_start":19,"line_end":19,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":7768}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_exact.rs","byte_start":617131,"byte_end":617140,"line_start":25,"line_end":25,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":7771},{"krate":0,"index":7772}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_line.rs","byte_start":618271,"byte_end":618279,"line_start":21,"line_end":21,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_line.rs","byte_start":618334,"byte_end":618342,"line_start":23,"line_end":23,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":7813}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_line.rs","byte_start":619293,"byte_end":619301,"line_start":50,"line_end":50,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":7819},{"krate":0,"index":7820}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_to_end.rs","byte_start":620056,"byte_end":620065,"line_start":18,"line_end":18,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_to_end.rs","byte_start":620117,"byte_end":620126,"line_start":20,"line_end":20,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":7855}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_to_end.rs","byte_start":620371,"byte_end":620376,"line_start":32,"line_end":32,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":7861}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_to_end.rs","byte_start":622211,"byte_end":622220,"line_start":81,"line_end":81,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":7866},{"krate":0,"index":7867}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_to_string.rs","byte_start":623093,"byte_end":623105,"line_start":20,"line_end":20,"column_start":35,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_to_string.rs","byte_start":623157,"byte_end":623169,"line_start":22,"line_end":22,"column_start":41,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":7912}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_to_string.rs","byte_start":624080,"byte_end":624092,"line_start":49,"line_end":49,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":7918},{"krate":0,"index":7919}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_until.rs","byte_start":624912,"byte_end":624921,"line_start":19,"line_end":19,"column_start":35,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_until.rs","byte_start":624976,"byte_end":624985,"line_start":21,"line_end":21,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":7954}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_until.rs","byte_start":625957,"byte_end":625966,"line_start":53,"line_end":53,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":7959},{"krate":0,"index":7960}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":627124,"byte_end":627130,"line_start":35,"line_end":35,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":7995},{"krate":0,"index":7996}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":627771,"byte_end":627777,"line_start":62,"line_end":62,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":7998}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/seek.rs","byte_start":628291,"byte_end":628295,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/seek.rs","byte_start":628347,"byte_end":628351,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8035}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/seek.rs","byte_start":628508,"byte_end":628512,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":8038},{"krate":0,"index":8039}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":629641,"byte_end":629645,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":8071},{"krate":0,"index":8072},{"krate":0,"index":8074},{"krate":0,"index":8075}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":630363,"byte_end":630367,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":8077}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":631384,"byte_end":631392,"line_start":34,"line_end":34,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":8130}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":631892,"byte_end":631901,"line_start":45,"line_end":45,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":8134}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":632293,"byte_end":632301,"line_start":54,"line_end":54,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":8137},{"krate":0,"index":8139}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":632804,"byte_end":632813,"line_start":72,"line_end":72,"column_start":36,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8143},{"krate":0,"index":8145},{"krate":0,"index":8147},{"krate":0,"index":8149}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":633828,"byte_end":633840,"line_start":102,"line_end":102,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8158}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":634004,"byte_end":634016,"line_start":108,"line_end":108,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":8161}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":634250,"byte_end":634262,"line_start":115,"line_end":115,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":634735,"byte_end":634739,"line_start":19,"line_end":19,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":8207},{"krate":0,"index":8208},{"krate":0,"index":8209},{"krate":0,"index":16224},{"krate":0,"index":16225},{"krate":0,"index":16226},{"krate":0,"index":16227}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":636656,"byte_end":636660,"line_start":84,"line_end":84,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":8212}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":637170,"byte_end":637174,"line_start":103,"line_end":103,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":8215},{"krate":0,"index":8216}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":639017,"byte_end":639023,"line_start":26,"line_end":26,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8233},{"krate":0,"index":8234},{"krate":0,"index":8235},{"krate":0,"index":8236},{"krate":0,"index":8237},{"krate":0,"index":8238},{"krate":0,"index":8239}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":641093,"byte_end":641099,"line_start":94,"line_end":94,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":8243}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":641246,"byte_end":641252,"line_start":100,"line_end":100,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":8246}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write.rs","byte_start":641773,"byte_end":641778,"line_start":15,"line_end":15,"column_start":35,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write.rs","byte_start":641831,"byte_end":641836,"line_start":17,"line_end":17,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":8275}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write.rs","byte_start":641998,"byte_end":642003,"line_start":23,"line_end":23,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":8278},{"krate":0,"index":8279}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write_vectored.rs","byte_start":642687,"byte_end":642700,"line_start":15,"line_end":15,"column_start":35,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write_vectored.rs","byte_start":642753,"byte_end":642766,"line_start":17,"line_end":17,"column_start":42,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":8312}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write_vectored.rs","byte_start":642939,"byte_end":642952,"line_start":23,"line_end":23,"column_start":49,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":8315},{"krate":0,"index":8316}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write_all.rs","byte_start":643644,"byte_end":643652,"line_start":17,"line_end":17,"column_start":35,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write_all.rs","byte_start":643705,"byte_end":643713,"line_start":19,"line_end":19,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":8351}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write_all.rs","byte_start":643875,"byte_end":643883,"line_start":25,"line_end":25,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":8354},{"krate":0,"index":8355}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":546063,"byte_end":546064,"line_start":398,"line_end":398,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":552519,"byte_end":552520,"line_start":592,"line_end":592,"column_start":48,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":553407,"byte_end":553408,"line_start":620,"line_end":620,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":560887,"byte_end":560888,"line_start":824,"line_end":824,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":647198,"byte_end":647203,"line_start":48,"line_end":48,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":647240,"byte_end":647245,"line_start":49,"line_end":49,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":647261,"byte_end":647267,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":8499},{"krate":0,"index":8500},{"krate":0,"index":8502},{"krate":0,"index":8503}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":652887,"byte_end":652892,"line_start":184,"line_end":184,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":8506}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":653014,"byte_end":653019,"line_start":190,"line_end":190,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":8509}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":653347,"byte_end":653359,"line_start":201,"line_end":201,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8517}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":653523,"byte_end":653535,"line_start":207,"line_end":207,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":8520}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":653756,"byte_end":653768,"line_start":214,"line_end":214,"column_start":47,"column_end":59},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":654248,"byte_end":654259,"line_start":228,"line_end":228,"column_start":38,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":654289,"byte_end":654300,"line_start":230,"line_end":230,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8527},{"krate":0,"index":8528}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":654463,"byte_end":654474,"line_start":237,"line_end":237,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":8531}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":654612,"byte_end":654623,"line_start":243,"line_end":243,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":8534}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":654975,"byte_end":654986,"line_start":252,"line_end":252,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":8537}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":656521,"byte_end":656526,"line_start":28,"line_end":28,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":8603}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":656859,"byte_end":656864,"line_start":38,"line_end":38,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":8606}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":656957,"byte_end":656962,"line_start":44,"line_end":44,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8609}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":657095,"byte_end":657101,"line_start":55,"line_end":55,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":8617},{"krate":0,"index":8618}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":657547,"byte_end":657552,"line_start":74,"line_end":74,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":8623},{"krate":0,"index":8624}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":658123,"byte_end":658128,"line_start":99,"line_end":99,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":8627},{"krate":0,"index":8628},{"krate":0,"index":8629},{"krate":0,"index":8630},{"krate":0,"index":8631},{"krate":0,"index":8632},{"krate":0,"index":8633}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":661984,"byte_end":662004,"line_start":207,"line_end":207,"column_start":32,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":8641}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":662436,"byte_end":662456,"line_start":220,"line_end":220,"column_start":33,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":8644}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":662565,"byte_end":662585,"line_start":226,"line_end":226,"column_start":28,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8647},{"krate":0,"index":8648}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":663869,"byte_end":663889,"line_start":264,"line_end":264,"column_start":26,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":8651}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":664534,"byte_end":664549,"line_start":283,"line_end":283,"column_start":45,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":8657}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":664795,"byte_end":664810,"line_start":292,"line_end":292,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8660}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":664904,"byte_end":664919,"line_start":298,"line_end":298,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":8663},{"krate":0,"index":8664}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":665056,"byte_end":665071,"line_start":305,"line_end":305,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8667}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":665454,"byte_end":665469,"line_start":318,"line_end":318,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":8675}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":665900,"byte_end":665915,"line_start":331,"line_end":331,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8678}],"docs":"","sig":null,"attributes":[]},{"id":564,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":666032,"byte_end":666047,"line_start":337,"line_end":337,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":8682},{"krate":0,"index":8683}],"docs":"","sig":null,"attributes":[]},{"id":565,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":667276,"byte_end":667291,"line_start":373,"line_end":373,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":8686}],"docs":"","sig":null,"attributes":[]},{"id":566,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":667893,"byte_end":667903,"line_start":392,"line_end":392,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8694}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":668915,"byte_end":668925,"line_start":422,"line_end":422,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":8699}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":669131,"byte_end":669141,"line_start":428,"line_end":428,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8702}],"docs":"","sig":null,"attributes":[]},{"id":569,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":669239,"byte_end":669249,"line_start":434,"line_end":434,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":8705},{"krate":0,"index":8706}],"docs":"","sig":null,"attributes":[]},{"id":570,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":669390,"byte_end":669400,"line_start":441,"line_end":441,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":8709}],"docs":"","sig":null,"attributes":[]},{"id":571,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":669851,"byte_end":669867,"line_start":455,"line_end":455,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8721}],"docs":"","sig":null,"attributes":[]},{"id":572,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":670997,"byte_end":671013,"line_start":486,"line_end":486,"column_start":56,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":8727}],"docs":"","sig":null,"attributes":[]},{"id":573,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":671278,"byte_end":671294,"line_start":495,"line_end":495,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":8731}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":671406,"byte_end":671422,"line_start":501,"line_end":501,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":8735},{"krate":0,"index":8736}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":671565,"byte_end":671581,"line_start":508,"line_end":508,"column_start":41,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":8740}],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":671858,"byte_end":671863,"line_start":516,"line_end":516,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":671909,"byte_end":671914,"line_start":517,"line_end":517,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":672081,"byte_end":672096,"line_start":521,"line_end":521,"column_start":40,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":672201,"byte_end":672216,"line_start":524,"line_end":524,"column_start":33,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":672387,"byte_end":672407,"line_start":528,"line_end":528,"column_start":40,"column_end":60},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":672508,"byte_end":672528,"line_start":531,"line_end":531,"column_start":33,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":672728,"byte_end":672738,"line_start":535,"line_end":535,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":672788,"byte_end":672798,"line_start":536,"line_end":536,"column_start":40,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":672849,"byte_end":672864,"line_start":538,"line_end":538,"column_start":40,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":672910,"byte_end":672925,"line_start":539,"line_end":539,"column_start":40,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":672990,"byte_end":673006,"line_start":541,"line_end":541,"column_start":58,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":673077,"byte_end":673093,"line_start":542,"line_end":542,"column_start":58,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":673935,"byte_end":673944,"line_start":22,"line_end":22,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":8805},{"krate":0,"index":8806}],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":676228,"byte_end":676239,"line_start":87,"line_end":87,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8808}],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":677055,"byte_end":677062,"line_start":112,"line_end":112,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8810}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":677245,"byte_end":677252,"line_start":119,"line_end":119,"column_start":28,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":677265,"byte_end":677274,"line_start":121,"line_end":121,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":8814}],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":678263,"byte_end":678272,"line_start":152,"line_end":152,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8819},{"krate":0,"index":8820}],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":678511,"byte_end":678520,"line_start":163,"line_end":163,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8824},{"krate":0,"index":8825}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":678779,"byte_end":678790,"line_start":174,"line_end":174,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":8828}],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":679462,"byte_end":679463,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8848},{"krate":0,"index":8849}],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":679698,"byte_end":679699,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":8857}],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":679969,"byte_end":679970,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":8865}],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":680986,"byte_end":680990,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":8873}],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":681084,"byte_end":681088,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":8877},{"krate":0,"index":8878}],"docs":"","sig":null,"attributes":[]},{"id":606,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":681347,"byte_end":681354,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":8883},{"krate":0,"index":8884}],"docs":"","sig":null,"attributes":[]},{"id":607,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":681577,"byte_end":681584,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8889}],"docs":"","sig":null,"attributes":[]},{"id":608,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":681775,"byte_end":681782,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":8894}],"docs":"","sig":null,"attributes":[]},{"id":609,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":682087,"byte_end":682100,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8900},{"krate":0,"index":8901}],"docs":"","sig":null,"attributes":[]},{"id":615,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":682517,"byte_end":682526,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":8906},{"krate":0,"index":8907}],"docs":"","sig":null,"attributes":[]},{"id":616,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":682810,"byte_end":682819,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":8912}],"docs":"","sig":null,"attributes":[]},{"id":617,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":683081,"byte_end":683090,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":8917}],"docs":"","sig":null,"attributes":[]},{"id":618,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":683412,"byte_end":683419,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8924},{"krate":0,"index":8925}],"docs":"","sig":null,"attributes":[]},{"id":619,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":683638,"byte_end":683645,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":8931}],"docs":"","sig":null,"attributes":[]},{"id":620,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":683823,"byte_end":683830,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":8937}],"docs":"","sig":null,"attributes":[]},{"id":621,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":684131,"byte_end":684139,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":8945},{"krate":0,"index":8946}],"docs":"","sig":null,"attributes":[]},{"id":622,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":684362,"byte_end":684370,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":8952}],"docs":"","sig":null,"attributes":[]},{"id":623,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":684552,"byte_end":684560,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8958}],"docs":"","sig":null,"attributes":[]},{"id":624,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":684870,"byte_end":684881,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":8967},{"krate":0,"index":8968}],"docs":"","sig":null,"attributes":[]},{"id":625,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":685141,"byte_end":685152,"line_start":256,"line_end":256,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":8974}],"docs":"","sig":null,"attributes":[]},{"id":626,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":685389,"byte_end":685400,"line_start":266,"line_end":266,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":8980}],"docs":"","sig":null,"attributes":[]},{"id":627,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":685767,"byte_end":685779,"line_start":283,"line_end":283,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":8988},{"krate":0,"index":8989}],"docs":"","sig":null,"attributes":[]},{"id":628,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":686040,"byte_end":686052,"line_start":294,"line_end":294,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":8995}],"docs":"","sig":null,"attributes":[]},{"id":629,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":686290,"byte_end":686302,"line_start":304,"line_end":304,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":9001}],"docs":"","sig":null,"attributes":[]},{"id":630,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":686921,"byte_end":686935,"line_start":326,"line_end":326,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":9014},{"krate":0,"index":9015}],"docs":"","sig":null,"attributes":[]},{"id":631,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":687158,"byte_end":687172,"line_start":335,"line_end":335,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":9021}],"docs":"","sig":null,"attributes":[]},{"id":632,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":687373,"byte_end":687387,"line_start":343,"line_end":343,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":9027}],"docs":"","sig":null,"attributes":[]},{"id":633,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":687693,"byte_end":687699,"line_start":357,"line_end":357,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":9037}],"docs":"","sig":null,"attributes":[]},{"id":634,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":687792,"byte_end":687798,"line_start":362,"line_end":362,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":9041},{"krate":0,"index":9042}],"docs":"","sig":null,"attributes":[]},{"id":640,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/unfold_state.rs","byte_start":688403,"byte_end":688414,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":9053},{"krate":0,"index":9054}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":10623,"byte_end":10629,"line_start":294,"line_end":294,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":167}},{"kind":"Mod","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":10727,"byte_end":10733,"line_start":298,"line_end":298,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":2013}},{"kind":"Mod","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":175162,"byte_end":175179,"line_start":112,"line_end":112,"column_start":9,"column_end":26},"ref_id":{"krate":0,"index":6147}},{"kind":"Mod","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":175378,"byte_end":175388,"line_start":120,"line_end":120,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":6556}},{"kind":"Mod","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":11000,"byte_end":11004,"line_start":309,"line_end":309,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":6733}},{"kind":"Mod","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":11015,"byte_end":11020,"line_start":311,"line_end":311,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":6832}},{"kind":"Mod","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":11218,"byte_end":11220,"line_start":320,"line_end":320,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":6834}},{"kind":"Mod","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":11462,"byte_end":11466,"line_start":330,"line_end":330,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":8431}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/async_await/poll.rs","byte_start":14228,"byte_end":14236,"line_start":34,"line_end":34,"column_start":36,"column_end":44},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":45},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/async_await/pending.rs","byte_start":15404,"byte_end":15415,"line_start":33,"line_end":33,"column_start":17,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":69},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":59225,"byte_end":59232,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":9064},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":59362,"byte_end":59369,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":9064},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":59594,"byte_end":59601,"line_start":39,"line_end":39,"column_start":22,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":9064},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":60375,"byte_end":60382,"line_start":64,"line_end":64,"column_start":27,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":9064},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":60607,"byte_end":60614,"line_start":77,"line_end":77,"column_start":22,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":9064},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":63628,"byte_end":63632,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":9111},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":63739,"byte_end":63743,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":9111},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":65472,"byte_end":65476,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":9111},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":65589,"byte_end":65593,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":9111},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":66571,"byte_end":66574,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":9147},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":66743,"byte_end":66746,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":9147},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":67008,"byte_end":67011,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":9147},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/catch_unwind.rs","byte_start":68217,"byte_end":68228,"line_start":19,"line_end":19,"column_start":11,"column_end":22},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":9699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/catch_unwind.rs","byte_start":68371,"byte_end":68382,"line_start":28,"line_end":28,"column_start":22,"column_end":33},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":9699},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":69609,"byte_end":69619,"line_start":32,"line_end":32,"column_start":29,"column_end":39},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":498},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":69820,"byte_end":69826,"line_start":40,"line_end":40,"column_start":29,"column_end":35},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":487},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":69869,"byte_end":69875,"line_start":42,"line_end":42,"column_start":34,"column_end":40},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":487},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":70133,"byte_end":70138,"line_start":51,"line_end":51,"column_start":34,"column_end":39},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":491},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":70292,"byte_end":70302,"line_start":57,"line_end":57,"column_start":34,"column_end":44},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":498},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":70534,"byte_end":70539,"line_start":68,"line_end":68,"column_start":27,"column_end":32},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":491},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":70636,"byte_end":70641,"line_start":75,"line_end":75,"column_start":27,"column_end":32},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":491},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":70885,"byte_end":70891,"line_start":89,"line_end":89,"column_start":19,"column_end":25},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":487},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":71315,"byte_end":71321,"line_start":103,"line_end":103,"column_start":11,"column_end":17},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":487},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":73387,"byte_end":73392,"line_start":160,"line_end":160,"column_start":11,"column_end":16},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":491},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":75088,"byte_end":75094,"line_start":209,"line_end":209,"column_start":27,"column_end":33},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":487},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":75246,"byte_end":75252,"line_start":219,"line_end":219,"column_start":22,"column_end":28},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":487},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":76904,"byte_end":76909,"line_start":270,"line_end":270,"column_start":23,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":557},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":78703,"byte_end":78709,"line_start":328,"line_end":328,"column_start":21,"column_end":27},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":487},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":78868,"byte_end":78874,"line_start":337,"line_end":337,"column_start":20,"column_end":26},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":487},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":79302,"byte_end":79310,"line_start":354,"line_end":354,"column_start":18,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":495},"to":{"krate":23,"index":94}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/shared.rs","byte_start":79669,"byte_end":79679,"line_start":367,"line_end":367,"column_start":19,"column_end":29},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":498},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":42376,"byte_end":42377,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":582},"to":{"krate":0,"index":583}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":42508,"byte_end":42514,"line_start":123,"line_end":123,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":13763},"to":{"krate":0,"index":583}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/into_future.rs","byte_start":102253,"byte_end":102263,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":9735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/into_future.rs","byte_start":102414,"byte_end":102424,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":9735},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/into_future.rs","byte_start":102547,"byte_end":102557,"line_start":29,"line_end":29,"column_start":33,"column_end":43},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":9735},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":103266,"byte_end":103276,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":9771},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":103406,"byte_end":103416,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":9771},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":103659,"byte_end":103669,"line_start":39,"line_end":39,"column_start":22,"column_end":32},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":9771},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":104622,"byte_end":104632,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":9771},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":104875,"byte_end":104885,"line_start":80,"line_end":80,"column_start":22,"column_end":32},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":9771},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":108209,"byte_end":108222,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":9818},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":108352,"byte_end":108365,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":9818},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":108608,"byte_end":108621,"line_start":36,"line_end":36,"column_start":22,"column_end":35},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":9818},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":84651,"byte_end":84654,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":861},"to":{"krate":0,"index":862}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":84737,"byte_end":84746,"line_start":137,"line_end":137,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":20,"index":44},"to":{"krate":0,"index":862}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":109930,"byte_end":109934,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":10685},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":110530,"byte_end":110534,"line_start":42,"line_end":42,"column_start":28,"column_end":32},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":10685},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":110678,"byte_end":110682,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":10685},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":111285,"byte_end":111292,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":10691},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":111895,"byte_end":111902,"line_start":41,"line_end":41,"column_start":20,"column_end":27},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":10691},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":112047,"byte_end":112054,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":10691},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":112080,"byte_end":112087,"line_start":51,"line_end":51,"column_start":19,"column_end":26},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":10691},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":112841,"byte_end":112850,"line_start":24,"line_end":24,"column_start":37,"column_end":46},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":10697},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":113453,"byte_end":113462,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":10697},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":114560,"byte_end":114569,"line_start":79,"line_end":79,"column_start":35,"column_end":44},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":10697},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":114770,"byte_end":114779,"line_start":88,"line_end":88,"column_start":30,"column_end":39},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":10697},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":116099,"byte_end":116111,"line_start":25,"line_end":25,"column_start":40,"column_end":52},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":10710},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":116337,"byte_end":116349,"line_start":32,"line_end":32,"column_start":22,"column_end":34},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":10710},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":117462,"byte_end":117474,"line_start":64,"line_end":64,"column_start":38,"column_end":50},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":10710},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":117678,"byte_end":117690,"line_start":73,"line_end":73,"column_start":33,"column_end":45},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":10710},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":119340,"byte_end":119352,"line_start":34,"line_end":34,"column_start":21,"column_end":33},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":10723},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":119450,"byte_end":119462,"line_start":40,"line_end":40,"column_start":28,"column_end":40},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":10723},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":119776,"byte_end":119788,"line_start":51,"line_end":51,"column_start":38,"column_end":50},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":10723},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":119975,"byte_end":119987,"line_start":60,"line_end":60,"column_start":29,"column_end":41},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":10723},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":120425,"byte_end":120431,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1181},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":121125,"byte_end":121131,"line_start":43,"line_end":43,"column_start":24,"column_end":30},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1181},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":121273,"byte_end":121279,"line_start":49,"line_end":49,"column_start":23,"column_end":29},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1181},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":122007,"byte_end":122020,"line_start":19,"line_end":19,"column_start":23,"column_end":36},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":10762},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":122586,"byte_end":122599,"line_start":40,"line_end":40,"column_start":33,"column_end":46},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":10762},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":123619,"byte_end":123632,"line_start":70,"line_end":70,"column_start":23,"column_end":36},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":10762},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":125804,"byte_end":125809,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":10801},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":125988,"byte_end":125993,"line_start":19,"line_end":19,"column_start":19,"column_end":24},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":10801},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":126025,"byte_end":126030,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":10801},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":126127,"byte_end":126132,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":10801},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":134130,"byte_end":134137,"line_start":50,"line_end":50,"column_start":24,"column_end":31},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1436},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":136684,"byte_end":136691,"line_start":130,"line_end":130,"column_start":20,"column_end":27},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1436},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":137679,"byte_end":137686,"line_start":162,"line_end":162,"column_start":37,"column_end":44},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1436},"to":{"krate":2,"index":8394}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":138182,"byte_end":138188,"line_start":14,"line_end":14,"column_start":36,"column_end":42},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":11155},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":140624,"byte_end":140630,"line_start":94,"line_end":94,"column_start":23,"column_end":29},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":11155},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":141252,"byte_end":141258,"line_start":117,"line_end":117,"column_start":28,"column_end":34},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":11155},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":141821,"byte_end":141830,"line_start":17,"line_end":17,"column_start":28,"column_end":37},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":11163},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":142837,"byte_end":142846,"line_start":44,"line_end":44,"column_start":11,"column_end":20},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":11163},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":143029,"byte_end":143038,"line_start":51,"line_end":51,"column_start":38,"column_end":47},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":11163},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":143693,"byte_end":143702,"line_start":70,"line_end":70,"column_start":49,"column_end":58},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":11163},"to":{"krate":2,"index":8394}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":152307,"byte_end":152317,"line_start":47,"line_end":47,"column_start":24,"column_end":34},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1714},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":155095,"byte_end":155105,"line_start":136,"line_end":136,"column_start":20,"column_end":30},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1714},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":156677,"byte_end":156687,"line_start":179,"line_end":179,"column_start":29,"column_end":39},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1714},"to":{"krate":2,"index":8394}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":157193,"byte_end":157202,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":11491},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":159041,"byte_end":159050,"line_start":61,"line_end":61,"column_start":37,"column_end":46},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":11491},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":160412,"byte_end":160420,"line_start":17,"line_end":17,"column_start":28,"column_end":36},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":11499},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":161498,"byte_end":161506,"line_start":45,"line_end":45,"column_start":41,"column_end":49},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":11499},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":162922,"byte_end":162930,"line_start":81,"line_end":81,"column_start":52,"column_end":60},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":11499},"to":{"krate":2,"index":8394}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":163909,"byte_end":163915,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":11505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":164254,"byte_end":164260,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":11505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":164645,"byte_end":164651,"line_start":58,"line_end":58,"column_start":15,"column_end":21},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":11505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":165032,"byte_end":165038,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":11505},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":165279,"byte_end":165285,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":11505},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":165624,"byte_end":165630,"line_start":95,"line_end":95,"column_start":28,"column_end":34},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":11505},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":165906,"byte_end":165912,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":11505},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":166447,"byte_end":166453,"line_start":130,"line_end":130,"column_start":28,"column_end":34},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":11505},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":168125,"byte_end":168131,"line_start":191,"line_end":191,"column_start":30,"column_end":36},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":11505},"to":{"krate":26,"index":39}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":168932,"byte_end":168938,"line_start":219,"line_end":219,"column_start":31,"column_end":37},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":11505},"to":{"krate":26,"index":42}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":170245,"byte_end":170251,"line_start":261,"line_end":261,"column_start":30,"column_end":36},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":11505},"to":{"krate":26,"index":47}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":170681,"byte_end":170687,"line_start":278,"line_end":278,"column_start":33,"column_end":39},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":11505},"to":{"krate":26,"index":49}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chain.rs","byte_start":234265,"byte_end":234270,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":11522},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chain.rs","byte_start":234496,"byte_end":234501,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":11522},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chain.rs","byte_start":234710,"byte_end":234715,"line_start":40,"line_end":40,"column_start":27,"column_end":32},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":11522},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/collect.rs","byte_start":236311,"byte_end":236318,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":11571},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/collect.rs","byte_start":236560,"byte_end":236567,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":11571},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/collect.rs","byte_start":236745,"byte_end":236752,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":11571},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/unzip.rs","byte_start":237778,"byte_end":237783,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":11620},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/unzip.rs","byte_start":238131,"byte_end":238136,"line_start":32,"line_end":32,"column_start":46,"column_end":51},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":11620},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/unzip.rs","byte_start":238386,"byte_end":238391,"line_start":43,"line_end":43,"column_start":41,"column_end":46},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":11620},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/concat.rs","byte_start":239516,"byte_end":239522,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":11682},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/concat.rs","byte_start":239742,"byte_end":239748,"line_start":29,"line_end":29,"column_start":21,"column_end":27},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":11682},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/concat.rs","byte_start":240456,"byte_end":240462,"line_start":54,"line_end":54,"column_start":26,"column_end":32},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":11682},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/count.rs","byte_start":241188,"byte_end":241193,"line_start":19,"line_end":19,"column_start":25,"column_end":30},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":11722},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/count.rs","byte_start":241414,"byte_end":241419,"line_start":28,"line_end":28,"column_start":18,"column_end":23},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":11722},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/count.rs","byte_start":241551,"byte_end":241556,"line_start":34,"line_end":34,"column_start":39,"column_end":44},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":11722},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/count.rs","byte_start":241674,"byte_end":241679,"line_start":40,"line_end":40,"column_start":29,"column_end":34},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":11722},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/cycle.rs","byte_start":242485,"byte_end":242490,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":11759},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/cycle.rs","byte_start":242646,"byte_end":242651,"line_start":28,"line_end":28,"column_start":21,"column_end":26},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":11759},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/cycle.rs","byte_start":243400,"byte_end":243405,"line_start":56,"line_end":56,"column_start":26,"column_end":31},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":11759},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/enumerate.rs","byte_start":244153,"byte_end":244162,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":11799},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/enumerate.rs","byte_start":244348,"byte_end":244357,"line_start":28,"line_end":28,"column_start":48,"column_end":57},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":11799},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/enumerate.rs","byte_start":244475,"byte_end":244484,"line_start":34,"line_end":34,"column_start":29,"column_end":38},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":11799},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":245925,"byte_end":245931,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":11843},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":246404,"byte_end":246410,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":11843},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":246733,"byte_end":246739,"line_start":56,"line_end":56,"column_start":34,"column_end":40},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":11843},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":247076,"byte_end":247082,"line_start":68,"line_end":68,"column_start":29,"column_end":35},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":11843},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":249247,"byte_end":249256,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":11908},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":249553,"byte_end":249562,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":11908},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":249829,"byte_end":249838,"line_start":50,"line_end":50,"column_start":37,"column_end":46},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":11908},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":250105,"byte_end":250114,"line_start":61,"line_end":61,"column_start":32,"column_end":41},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":11908},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten.rs","byte_start":252209,"byte_end":252216,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":11969},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten.rs","byte_start":252385,"byte_end":252392,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":11969},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten.rs","byte_start":252584,"byte_end":252591,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":11969},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fold.rs","byte_start":254105,"byte_end":254109,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":12077},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fold.rs","byte_start":254465,"byte_end":254469,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":12077},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fold.rs","byte_start":254730,"byte_end":254734,"line_start":48,"line_end":48,"column_start":37,"column_end":41},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":12077},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fold.rs","byte_start":254969,"byte_end":254973,"line_start":59,"line_end":59,"column_start":32,"column_end":36},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":12077},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/any.rs","byte_start":256562,"byte_end":256565,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":12146},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/any.rs","byte_start":256895,"byte_end":256898,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":12146},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/any.rs","byte_start":257151,"byte_end":257154,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":12146},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/any.rs","byte_start":257383,"byte_end":257386,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":12146},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/all.rs","byte_start":259138,"byte_end":259141,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":12207},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/all.rs","byte_start":259471,"byte_end":259474,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":12207},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/all.rs","byte_start":259726,"byte_end":259729,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":12207},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/all.rs","byte_start":259958,"byte_end":259961,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":12207},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each.rs","byte_start":261715,"byte_end":261722,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":12268},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each.rs","byte_start":262015,"byte_end":262022,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":12268},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each.rs","byte_start":262253,"byte_end":262260,"line_start":45,"line_end":45,"column_start":34,"column_end":41},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":12268},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each.rs","byte_start":262499,"byte_end":262506,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":12268},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":263607,"byte_end":263611,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":12325},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":264108,"byte_end":264112,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":12325},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":264210,"byte_end":264214,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":12325},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":265416,"byte_end":265428,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":12369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":267918,"byte_end":267930,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":12369},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":268050,"byte_end":268062,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":12369},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":268947,"byte_end":268950,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":12444},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":269139,"byte_end":269142,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":12444},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":269311,"byte_end":269314,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":12444},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":269482,"byte_end":269485,"line_start":49,"line_end":49,"column_start":24,"column_end":27},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":12444},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":270597,"byte_end":270601,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":12576},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":270652,"byte_end":270656,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":12576},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":270807,"byte_end":270811,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":12576},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":270950,"byte_end":270954,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":12576},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/select_next_some.rs","byte_start":271605,"byte_end":271619,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":12584},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/select_next_some.rs","byte_start":271770,"byte_end":271784,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":12584},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/select_next_some.rs","byte_start":271928,"byte_end":271942,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":12584},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":273253,"byte_end":273261,"line_start":29,"line_end":29,"column_start":18,"column_end":26},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":12592},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":278758,"byte_end":278766,"line_start":189,"line_end":189,"column_start":34,"column_end":42},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":12592},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":278908,"byte_end":278916,"line_start":195,"line_end":195,"column_start":28,"column_end":36},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":12592},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":280068,"byte_end":280072,"line_start":237,"line_end":237,"column_start":25,"column_end":29},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":12636},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":280317,"byte_end":280321,"line_start":247,"line_end":247,"column_start":34,"column_end":38},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":12636},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":280432,"byte_end":280436,"line_start":253,"line_end":253,"column_start":25,"column_end":29},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":12636},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":281133,"byte_end":281140,"line_start":279,"line_end":279,"column_start":25,"column_end":32},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":12677},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":281388,"byte_end":281395,"line_start":289,"line_end":289,"column_start":34,"column_end":41},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":12677},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":281506,"byte_end":281513,"line_start":295,"line_end":295,"column_start":25,"column_end":32},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":12677},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":282233,"byte_end":282239,"line_start":321,"line_end":321,"column_start":28,"column_end":34},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":12718},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":282591,"byte_end":282597,"line_start":332,"line_end":332,"column_start":29,"column_end":35},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":12718},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":282866,"byte_end":282872,"line_start":343,"line_end":343,"column_start":24,"column_end":30},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":12718},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":284133,"byte_end":284141,"line_start":381,"line_end":381,"column_start":28,"column_end":36},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":12767},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":284461,"byte_end":284469,"line_start":394,"line_end":394,"column_start":29,"column_end":37},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":12767},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":284653,"byte_end":284661,"line_start":405,"line_end":405,"column_start":24,"column_end":32},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":12767},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":285032,"byte_end":285042,"line_start":423,"line_end":423,"column_start":34,"column_end":44},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":3124},"to":{"krate":0,"index":8840}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip.rs","byte_start":285707,"byte_end":285711,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":12816},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip.rs","byte_start":285902,"byte_end":285906,"line_start":28,"line_end":28,"column_start":39,"column_end":43},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":12816},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip.rs","byte_start":286024,"byte_end":286028,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":12816},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":287625,"byte_end":287634,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":12860},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":288086,"byte_end":288095,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":12860},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":288421,"byte_end":288430,"line_start":54,"line_end":54,"column_start":34,"column_end":43},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":12860},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":288678,"byte_end":288687,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":12860},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take.rs","byte_start":290980,"byte_end":290984,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":12929},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take.rs","byte_start":291157,"byte_end":291161,"line_start":29,"line_end":29,"column_start":21,"column_end":25},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":12929},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take.rs","byte_start":292106,"byte_end":292110,"line_start":68,"line_end":68,"column_start":26,"column_end":30},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":12929},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":293133,"byte_end":293142,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":12973},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":293590,"byte_end":293599,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":12973},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":293918,"byte_end":293927,"line_start":54,"line_end":54,"column_start":29,"column_end":38},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":12973},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":295439,"byte_end":295448,"line_start":104,"line_end":104,"column_start":34,"column_end":43},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":12973},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":296832,"byte_end":296841,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":13042},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":297129,"byte_end":297138,"line_start":41,"line_end":41,"column_start":15,"column_end":24},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":13042},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":299255,"byte_end":299264,"line_start":111,"line_end":111,"column_start":26,"column_end":35},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":13042},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":300296,"byte_end":300305,"line_start":150,"line_end":150,"column_start":31,"column_end":40},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":13042},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":301247,"byte_end":301251,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":13099},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":301502,"byte_end":301506,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":13099},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":301752,"byte_end":301756,"line_start":45,"line_end":45,"column_start":34,"column_end":38},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":13099},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":301982,"byte_end":301986,"line_start":56,"line_end":56,"column_start":29,"column_end":33},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":13099},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":303861,"byte_end":303864,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":13160},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":305450,"byte_end":305453,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":13160},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":305648,"byte_end":305651,"line_start":71,"line_end":71,"column_start":27,"column_end":30},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":13160},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chunks.rs","byte_start":308332,"byte_end":308338,"line_start":24,"line_end":24,"column_start":18,"column_end":24},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":13217},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chunks.rs","byte_start":308824,"byte_end":308830,"line_start":43,"line_end":43,"column_start":29,"column_end":35},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":13217},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chunks.rs","byte_start":310438,"byte_end":310444,"line_start":88,"line_end":88,"column_start":39,"column_end":45},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":13217},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/ready_chunks.rs","byte_start":311416,"byte_end":311427,"line_start":23,"line_end":23,"column_start":18,"column_end":29},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":13265},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/ready_chunks.rs","byte_start":311757,"byte_end":311768,"line_start":37,"line_end":37,"column_start":29,"column_end":40},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":13265},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/ready_chunks.rs","byte_start":313929,"byte_end":313940,"line_start":96,"line_end":96,"column_start":39,"column_end":50},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":13265},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":314938,"byte_end":314942,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":13313},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":315428,"byte_end":315432,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":13313},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":315596,"byte_end":315600,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":13313},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":315962,"byte_end":315966,"line_start":65,"line_end":65,"column_start":35,"column_end":39},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":13313},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":317193,"byte_end":317197,"line_start":108,"line_end":108,"column_start":40,"column_end":44},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":13313},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffer_unordered.rs","byte_start":318378,"byte_end":318393,"line_start":26,"line_end":26,"column_start":25,"column_end":40},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":13382},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffer_unordered.rs","byte_start":318725,"byte_end":318740,"line_start":39,"line_end":39,"column_start":10,"column_end":25},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":13382},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffer_unordered.rs","byte_start":319067,"byte_end":319082,"line_start":55,"line_end":55,"column_start":21,"column_end":36},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":13382},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffer_unordered.rs","byte_start":320536,"byte_end":320551,"line_start":100,"line_end":100,"column_start":26,"column_end":41},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":13382},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffered.rs","byte_start":321661,"byte_end":321669,"line_start":27,"line_end":27,"column_start":25,"column_end":33},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":13427},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffered.rs","byte_start":322016,"byte_end":322024,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":13427},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffered.rs","byte_start":322304,"byte_end":322312,"line_start":53,"line_end":53,"column_start":21,"column_end":29},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":13427},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":325461,"byte_end":325476,"line_start":60,"line_end":60,"column_start":6,"column_end":21},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":13472},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":329595,"byte_end":329608,"line_start":177,"line_end":177,"column_start":45,"column_end":58},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":3859},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":330128,"byte_end":330141,"line_start":194,"line_end":194,"column_start":50,"column_end":63},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":3859},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":330539,"byte_end":330549,"line_start":210,"line_end":210,"column_start":22,"column_end":32},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":3874},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":330574,"byte_end":330584,"line_start":211,"line_end":211,"column_start":22,"column_end":32},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":3874},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":330594,"byte_end":330604,"line_start":213,"line_end":213,"column_start":6,"column_end":16},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":3874},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":331655,"byte_end":331665,"line_start":239,"line_end":239,"column_start":18,"column_end":28},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":3874},"to":{"krate":23,"index":94}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":333266,"byte_end":333279,"line_start":279,"line_end":279,"column_start":10,"column_end":23},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":13478},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":333483,"byte_end":333496,"line_start":286,"line_end":286,"column_start":37,"column_end":50},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":13478},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":334611,"byte_end":334627,"line_start":322,"line_end":322,"column_start":25,"column_end":41},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":13511},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":335101,"byte_end":335117,"line_start":338,"line_end":338,"column_start":10,"column_end":26},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":13511},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":336056,"byte_end":336076,"line_start":368,"line_end":368,"column_start":10,"column_end":30},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":13520},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":336343,"byte_end":336359,"line_start":378,"line_end":378,"column_start":26,"column_end":42},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":13511},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":336564,"byte_end":336580,"line_start":388,"line_end":388,"column_start":21,"column_end":37},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":13511},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each_concurrent.rs","byte_start":342009,"byte_end":342026,"line_start":23,"line_end":23,"column_start":33,"column_end":50},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":13655},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each_concurrent.rs","byte_start":342372,"byte_end":342389,"line_start":37,"line_end":37,"column_start":18,"column_end":35},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":13655},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each_concurrent.rs","byte_start":342822,"byte_end":342839,"line_start":54,"line_end":54,"column_start":34,"column_end":51},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":13655},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each_concurrent.rs","byte_start":343069,"byte_end":343086,"line_start":65,"line_end":65,"column_start":29,"column_end":46},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":13655},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/catch_unwind.rs","byte_start":345446,"byte_end":345457,"line_start":19,"line_end":19,"column_start":31,"column_end":42},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":13716},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/catch_unwind.rs","byte_start":345649,"byte_end":345660,"line_start":27,"line_end":27,"column_start":42,"column_end":53},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":13716},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/catch_unwind.rs","byte_start":346512,"byte_end":346523,"line_start":57,"line_end":57,"column_start":52,"column_end":63},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":13716},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":183640,"byte_end":183641,"line_start":245,"line_end":245,"column_start":31,"column_end":32},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":4029},"to":{"krate":0,"index":4030}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":183784,"byte_end":183790,"line_start":249,"line_end":249,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":20,"index":96},"to":{"krate":0,"index":4030}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":385527,"byte_end":385534,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":13760},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":385827,"byte_end":385834,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":13760},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":386115,"byte_end":386122,"line_start":49,"line_end":49,"column_start":29,"column_end":36},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":13760},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":387258,"byte_end":387265,"line_start":85,"line_end":85,"column_start":34,"column_end":41},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":13760},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_stream.rs","byte_start":388183,"byte_end":388193,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":14028},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_stream.rs","byte_start":388386,"byte_end":388396,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":14028},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_stream.rs","byte_start":388517,"byte_end":388527,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":14028},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":389626,"byte_end":389632,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":14206},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":389924,"byte_end":389930,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":14206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":390208,"byte_end":390214,"line_start":49,"line_end":49,"column_start":29,"column_end":35},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":14206},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":391484,"byte_end":391490,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":14206},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":392394,"byte_end":392401,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":14267},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":392455,"byte_end":392462,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":14267},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":392625,"byte_end":392632,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":14267},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":392774,"byte_end":392781,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":14267},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each.rs","byte_start":393557,"byte_end":393567,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":14275},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each.rs","byte_start":393863,"byte_end":393873,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":14275},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each.rs","byte_start":394118,"byte_end":394128,"line_start":45,"line_end":45,"column_start":29,"column_end":39},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":14275},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":395527,"byte_end":395536,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":14332},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":395932,"byte_end":395941,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":14332},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":396184,"byte_end":396193,"line_start":53,"line_end":53,"column_start":34,"column_end":43},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":14332},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":396450,"byte_end":396459,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":14332},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":398593,"byte_end":398605,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":14397},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":398905,"byte_end":398917,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":14397},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":399114,"byte_end":399126,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":14397},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":399404,"byte_end":399416,"line_start":56,"line_end":56,"column_start":32,"column_end":44},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":14397},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_flatten.rs","byte_start":401593,"byte_end":401603,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":14458},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_flatten.rs","byte_start":401868,"byte_end":401878,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":14458},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_flatten.rs","byte_start":402124,"byte_end":402134,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":14458},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_collect.rs","byte_start":403743,"byte_end":403753,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":14502},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_collect.rs","byte_start":403893,"byte_end":403903,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":14502},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_collect.rs","byte_start":404091,"byte_end":404101,"line_start":36,"line_end":36,"column_start":24,"column_end":34},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":14502},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_concat.rs","byte_start":405076,"byte_end":405085,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":14551},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_concat.rs","byte_start":405304,"byte_end":405313,"line_start":29,"line_end":29,"column_start":21,"column_end":30},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":14551},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":406697,"byte_end":406706,"line_start":25,"line_end":25,"column_start":21,"column_end":30},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":14591},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":407201,"byte_end":407210,"line_start":44,"line_end":44,"column_start":32,"column_end":41},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":14591},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":409150,"byte_end":409159,"line_start":95,"line_end":95,"column_start":51,"column_end":60},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":14591},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":409818,"byte_end":409832,"line_start":118,"line_end":118,"column_start":39,"column_end":53},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":14639},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":409977,"byte_end":409991,"line_start":124,"line_end":124,"column_start":43,"column_end":57},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":14639},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":410178,"byte_end":410192,"line_start":131,"line_end":131,"column_start":61,"column_end":75},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":14639},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_fold.rs","byte_start":410802,"byte_end":410809,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":14660},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_fold.rs","byte_start":411168,"byte_end":411175,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":14660},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_fold.rs","byte_start":411455,"byte_end":411462,"line_start":48,"line_end":48,"column_start":37,"column_end":44},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":14660},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_fold.rs","byte_start":411716,"byte_end":411723,"line_start":59,"line_end":59,"column_start":32,"column_end":39},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":14660},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":415586,"byte_end":415595,"line_start":78,"line_end":78,"column_start":32,"column_end":41},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":14729},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":415857,"byte_end":415866,"line_start":88,"line_end":88,"column_start":34,"column_end":43},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":14729},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":417612,"byte_end":417624,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":14786},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":418080,"byte_end":418092,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":14786},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":418432,"byte_end":418444,"line_start":55,"line_end":55,"column_start":29,"column_end":41},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":14786},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":419936,"byte_end":419948,"line_start":100,"line_end":100,"column_start":34,"column_end":46},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":14786},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":421176,"byte_end":421188,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":14855},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":421640,"byte_end":421652,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":14855},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":421990,"byte_end":422002,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":14855},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":423602,"byte_end":423614,"line_start":109,"line_end":109,"column_start":34,"column_end":46},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":14855},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_buffer_unordered.rs","byte_start":424902,"byte_end":424920,"line_start":26,"line_end":26,"column_start":10,"column_end":28},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":14924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_buffer_unordered.rs","byte_start":425259,"byte_end":425277,"line_start":42,"line_end":42,"column_start":21,"column_end":39},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":14924},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_buffered.rs","byte_start":427483,"byte_end":427494,"line_start":27,"line_end":27,"column_start":10,"column_end":21},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":14972},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_buffered.rs","byte_start":427831,"byte_end":427842,"line_start":43,"line_end":43,"column_start":21,"column_end":32},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":14972},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":430005,"byte_end":430025,"line_start":25,"line_end":25,"column_start":33,"column_end":53},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":15020},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":430390,"byte_end":430410,"line_start":39,"line_end":39,"column_start":34,"column_end":54},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":15020},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":430649,"byte_end":430669,"line_start":50,"line_end":50,"column_start":18,"column_end":38},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":15020},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":431117,"byte_end":431137,"line_start":67,"line_end":67,"column_start":29,"column_end":49},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":15020},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_async_read.rs","byte_start":434426,"byte_end":434439,"line_start":33,"line_end":33,"column_start":10,"column_end":23},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":15081},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_async_read.rs","byte_start":434643,"byte_end":434656,"line_start":43,"line_end":43,"column_start":24,"column_end":37},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":15081},"to":{"krate":26,"index":39}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_async_read.rs","byte_start":436307,"byte_end":436320,"line_start":93,"line_end":93,"column_start":25,"column_end":38},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":15081},"to":{"krate":26,"index":42}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_async_read.rs","byte_start":436936,"byte_end":436949,"line_start":114,"line_end":114,"column_start":27,"column_end":40},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":15081},"to":{"krate":26,"index":49}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":351923,"byte_end":351924,"line_start":154,"line_end":154,"column_start":46,"column_end":47},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":5335},"to":{"krate":0,"index":5336}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":352005,"byte_end":352014,"line_start":157,"line_end":157,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":20,"index":127},"to":{"krate":0,"index":5336}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":439031,"byte_end":439035,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":15133},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":439657,"byte_end":439661,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":15133},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":440852,"byte_end":440858,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":15142},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":440885,"byte_end":440891,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":15142},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":441199,"byte_end":441205,"line_start":51,"line_end":51,"column_start":25,"column_end":31},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":15142},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":441802,"byte_end":441812,"line_start":17,"line_end":17,"column_start":36,"column_end":46},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":15151},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":441856,"byte_end":441866,"line_start":19,"line_end":19,"column_start":37,"column_end":47},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":15151},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":442180,"byte_end":442190,"line_start":31,"line_end":31,"column_start":42,"column_end":52},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":15151},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":444710,"byte_end":444715,"line_start":21,"line_end":21,"column_start":19,"column_end":24},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":15160},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":444747,"byte_end":444752,"line_start":23,"line_end":23,"column_start":25,"column_end":30},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":15160},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":444837,"byte_end":444842,"line_start":29,"line_end":29,"column_start":20,"column_end":25},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":15160},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":445091,"byte_end":445096,"line_start":41,"line_end":41,"column_start":19,"column_end":24},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":15160},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":446035,"byte_end":446039,"line_start":34,"line_end":34,"column_start":11,"column_end":15},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":15166},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":446168,"byte_end":446172,"line_start":40,"line_end":40,"column_start":30,"column_end":34},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":15166},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":446777,"byte_end":446781,"line_start":63,"line_end":63,"column_start":35,"column_end":39},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":15166},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":447440,"byte_end":447447,"line_start":21,"line_end":21,"column_start":19,"column_end":26},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":15202},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":447479,"byte_end":447486,"line_start":23,"line_end":23,"column_start":25,"column_end":32},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":15202},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":447571,"byte_end":447578,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":15202},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":447823,"byte_end":447830,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":15202},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":448217,"byte_end":448223,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":5753},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":448254,"byte_end":448260,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":5753},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":449025,"byte_end":449031,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":5753},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":449727,"byte_end":449740,"line_start":18,"line_end":18,"column_start":23,"column_end":36},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":15208},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":450653,"byte_end":450666,"line_start":47,"line_end":47,"column_start":40,"column_end":53},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":15208},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":453553,"byte_end":453559,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":15247},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":454863,"byte_end":454869,"line_start":96,"line_end":96,"column_start":32,"column_end":38},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":15247},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":455048,"byte_end":455054,"line_start":106,"line_end":106,"column_start":27,"column_end":33},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":15247},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":455729,"byte_end":455737,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":15292},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":456087,"byte_end":456095,"line_start":32,"line_end":32,"column_start":18,"column_end":26},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":15292},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":456252,"byte_end":456265,"line_start":45,"line_end":45,"column_start":6,"column_end":19},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":5905},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":459862,"byte_end":459880,"line_start":159,"line_end":159,"column_start":29,"column_end":47},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":15311},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":461247,"byte_end":461265,"line_start":194,"line_end":194,"column_start":45,"column_end":63},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":15311},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":462835,"byte_end":462853,"line_start":256,"line_end":256,"column_start":40,"column_end":58},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":15311},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":464027,"byte_end":464045,"line_start":291,"line_end":291,"column_start":44,"column_end":62},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":15311},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":466616,"byte_end":466622,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":15384},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":466862,"byte_end":466868,"line_start":78,"line_end":78,"column_start":39,"column_end":45},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":15384},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":467148,"byte_end":467154,"line_start":92,"line_end":92,"column_start":34,"column_end":40},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":15384},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":468702,"byte_end":468714,"line_start":26,"line_end":26,"column_start":23,"column_end":35},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":15437},"to":{"krate":2,"index":2915}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":468819,"byte_end":468831,"line_start":32,"line_end":32,"column_start":16,"column_end":28},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":15437},"to":{"krate":2,"index":2920}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":468862,"byte_end":468874,"line_start":34,"line_end":34,"column_start":24,"column_end":36},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":15437},"to":{"krate":2,"index":2961}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":468997,"byte_end":469009,"line_start":40,"line_end":40,"column_start":17,"column_end":29},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":15437},"to":{"krate":2,"index":2951}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":469190,"byte_end":469202,"line_start":47,"line_end":47,"column_start":20,"column_end":32},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":15437},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":471784,"byte_end":471798,"line_start":102,"line_end":102,"column_start":27,"column_end":41},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":6105},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":471824,"byte_end":471838,"line_start":104,"line_end":104,"column_start":19,"column_end":33},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":6105},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":474607,"byte_end":474621,"line_start":173,"line_end":173,"column_start":31,"column_end":45},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":6105},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":474714,"byte_end":474728,"line_start":179,"line_end":179,"column_start":30,"column_end":44},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":6105},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":475890,"byte_end":475904,"line_start":214,"line_end":214,"column_start":29,"column_end":43},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":6105},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":476070,"byte_end":476084,"line_start":220,"line_end":220,"column_start":41,"column_end":55},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":6105},"to":{"krate":2,"index":8394}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":476369,"byte_end":476383,"line_start":233,"line_end":233,"column_start":35,"column_end":49},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":6105},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":476553,"byte_end":476567,"line_start":239,"line_end":239,"column_start":35,"column_end":49},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":6105},"to":{"krate":2,"index":8407}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/abort.rs","byte_start":503614,"byte_end":503625,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":6241},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":504999,"byte_end":505007,"line_start":40,"line_end":40,"column_start":31,"column_end":39},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":15516},"to":{"krate":2,"index":8596}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":506188,"byte_end":506196,"line_start":75,"line_end":75,"column_start":40,"column_end":48},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":15516},"to":{"krate":2,"index":8467}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":506233,"byte_end":506243,"line_start":77,"line_end":77,"column_start":28,"column_end":38},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":15477},"to":{"krate":2,"index":8596}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":507095,"byte_end":507105,"line_start":104,"line_end":104,"column_start":33,"column_end":43},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":15477},"to":{"krate":2,"index":8467}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":507153,"byte_end":507160,"line_start":106,"line_end":106,"column_start":35,"column_end":42},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":15487},"to":{"krate":2,"index":8596}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":507423,"byte_end":507430,"line_start":118,"line_end":118,"column_start":40,"column_end":47},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":15487},"to":{"krate":2,"index":8467}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":507471,"byte_end":507481,"line_start":120,"line_end":120,"column_start":28,"column_end":38},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":15496},"to":{"krate":2,"index":8596}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":508350,"byte_end":508360,"line_start":147,"line_end":147,"column_start":33,"column_end":43},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":15496},"to":{"krate":2,"index":8467}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":508408,"byte_end":508412,"line_start":149,"line_end":149,"column_start":35,"column_end":39},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":15507},"to":{"krate":2,"index":8596}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":508671,"byte_end":508675,"line_start":161,"line_end":161,"column_start":40,"column_end":44},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":15507},"to":{"krate":2,"index":8467}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":508844,"byte_end":508854,"line_start":165,"line_end":165,"column_start":33,"column_end":43},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":15496},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":508899,"byte_end":508909,"line_start":166,"line_end":166,"column_start":33,"column_end":43},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":15496},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":508955,"byte_end":508965,"line_start":168,"line_end":168,"column_start":33,"column_end":43},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":15477},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":509010,"byte_end":509020,"line_start":169,"line_end":169,"column_start":33,"column_end":43},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":15477},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":509074,"byte_end":509082,"line_start":171,"line_end":171,"column_start":41,"column_end":49},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":15516},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":509131,"byte_end":509139,"line_start":172,"line_end":172,"column_start":41,"column_end":49},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":15516},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/task.rs","byte_start":510824,"byte_end":510828,"line_start":46,"line_end":46,"column_start":27,"column_end":31},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":6375},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/task.rs","byte_start":510863,"byte_end":510867,"line_start":47,"line_end":47,"column_start":27,"column_end":31},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":6375},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/task.rs","byte_start":510899,"byte_end":510903,"line_start":49,"line_end":49,"column_start":23,"column_end":27},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":6375},"to":{"krate":23,"index":94}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/task.rs","byte_start":512036,"byte_end":512040,"line_start":78,"line_end":78,"column_start":11,"column_end":15},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":6375},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/task.rs","byte_start":513040,"byte_end":513044,"line_start":109,"line_end":109,"column_start":20,"column_end":24},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":6375},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":514494,"byte_end":514509,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":6446},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":517177,"byte_end":517192,"line_start":111,"line_end":111,"column_start":20,"column_end":35},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":6446},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":479036,"byte_end":479052,"line_start":61,"line_end":61,"column_start":33,"column_end":49},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":6468},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":479093,"byte_end":479109,"line_start":62,"line_end":62,"column_start":33,"column_end":49},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":6468},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":479138,"byte_end":479154,"line_start":63,"line_end":63,"column_start":21,"column_end":37},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":6468},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":479179,"byte_end":479195,"line_start":65,"line_end":65,"column_start":16,"column_end":32},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":6468},"to":{"krate":23,"index":15}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":479380,"byte_end":479396,"line_start":72,"line_end":72,"column_start":21,"column_end":37},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":6468},"to":{"krate":23,"index":18}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":481103,"byte_end":481119,"line_start":104,"line_end":104,"column_start":23,"column_end":39},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":6468},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":481193,"byte_end":481209,"line_start":110,"line_end":110,"column_start":11,"column_end":27},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":6468},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":492818,"byte_end":492834,"line_start":385,"line_end":385,"column_start":30,"column_end":46},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":6468},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":497210,"byte_end":497214,"line_start":483,"line_end":483,"column_start":32,"column_end":36},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":6505},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":500023,"byte_end":500039,"line_start":549,"line_end":549,"column_start":21,"column_end":37},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":6468},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":500177,"byte_end":500193,"line_start":555,"line_end":555,"column_start":11,"column_end":27},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":6468},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":500764,"byte_end":500780,"line_start":575,"line_end":575,"column_start":20,"column_end":36},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":6468},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":502430,"byte_end":502446,"line_start":616,"line_end":616,"column_start":35,"column_end":51},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":6468},"to":{"krate":2,"index":8398}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":502916,"byte_end":502932,"line_start":630,"line_end":630,"column_start":33,"column_end":49},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":6468},"to":{"krate":2,"index":8394}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":503208,"byte_end":503224,"line_start":643,"line_end":643,"column_start":35,"column_end":51},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":6468},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":503346,"byte_end":503362,"line_start":649,"line_end":649,"column_start":27,"column_end":43},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":6468},"to":{"krate":2,"index":8407}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":518787,"byte_end":518796,"line_start":36,"line_end":36,"column_start":27,"column_end":36},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":15523},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":518941,"byte_end":518950,"line_start":42,"line_end":42,"column_start":26,"column_end":35},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":15523},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":520423,"byte_end":520432,"line_start":89,"line_end":89,"column_start":38,"column_end":47},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":15523},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":520531,"byte_end":520540,"line_start":95,"line_end":95,"column_start":37,"column_end":46},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":15523},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":521324,"byte_end":521333,"line_start":117,"line_end":117,"column_start":42,"column_end":51},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":15523},"to":{"krate":20,"index":110}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":522351,"byte_end":522360,"line_start":149,"line_end":149,"column_start":47,"column_end":56},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":15523},"to":{"krate":2,"index":8394}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":522505,"byte_end":522514,"line_start":155,"line_end":155,"column_start":41,"column_end":50},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":15523},"to":{"krate":2,"index":8407}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":522697,"byte_end":522706,"line_start":163,"line_end":163,"column_start":43,"column_end":52},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":15523},"to":{"krate":2,"index":8398}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":523789,"byte_end":523793,"line_start":202,"line_end":202,"column_start":43,"column_end":47},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":15556},"to":{"krate":2,"index":8596}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":524226,"byte_end":524230,"line_start":218,"line_end":218,"column_start":48,"column_end":52},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":15556},"to":{"krate":2,"index":8467}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":524285,"byte_end":524292,"line_start":220,"line_end":220,"column_start":43,"column_end":50},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":15565},"to":{"krate":2,"index":8596}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":524729,"byte_end":524736,"line_start":236,"line_end":236,"column_start":48,"column_end":55},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":15565},"to":{"krate":2,"index":8467}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":524787,"byte_end":524795,"line_start":238,"line_end":238,"column_start":39,"column_end":47},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":15574},"to":{"krate":2,"index":8596}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":525223,"byte_end":525231,"line_start":254,"line_end":254,"column_start":48,"column_end":56},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":15574},"to":{"krate":2,"index":8467}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":527479,"byte_end":527481,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":6816},"to":{"krate":0,"index":6819}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":527536,"byte_end":527538,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":6818},"to":{"krate":0,"index":6822}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":527617,"byte_end":527622,"line_start":20,"line_end":20,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":23,"index":15},"to":{"krate":0,"index":6819}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":530742,"byte_end":530752,"line_start":103,"line_end":103,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":23,"index":18},"to":{"krate":0,"index":6822}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":562132,"byte_end":562142,"line_start":19,"line_end":19,"column_start":19,"column_end":29},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":15581},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":562580,"byte_end":562590,"line_start":39,"line_end":39,"column_start":9,"column_end":19},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":15581},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":563101,"byte_end":563111,"line_start":61,"line_end":61,"column_start":23,"column_end":33},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":15581},"to":{"krate":1,"index":4724}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":563656,"byte_end":563666,"line_start":82,"line_end":82,"column_start":24,"column_end":34},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":15581},"to":{"krate":26,"index":42}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":564458,"byte_end":564468,"line_start":112,"line_end":112,"column_start":22,"column_end":32},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":15581},"to":{"krate":1,"index":4667}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":565067,"byte_end":565077,"line_start":133,"line_end":133,"column_start":23,"column_end":33},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":15581},"to":{"krate":26,"index":39}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":565581,"byte_end":565591,"line_start":154,"line_end":154,"column_start":22,"column_end":32},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":15581},"to":{"krate":1,"index":4742}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":565735,"byte_end":565745,"line_start":163,"line_end":163,"column_start":23,"column_end":33},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":15581},"to":{"krate":26,"index":47}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":566007,"byte_end":566017,"line_start":176,"line_end":176,"column_start":25,"column_end":35},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":15581},"to":{"krate":1,"index":4749}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/allow_std.rs","byte_start":566233,"byte_end":566243,"line_start":188,"line_end":188,"column_start":26,"column_end":36},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":15581},"to":{"krate":26,"index":49}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":568050,"byte_end":568059,"line_start":40,"line_end":40,"column_start":20,"column_end":29},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":15614},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":569202,"byte_end":569211,"line_start":75,"line_end":75,"column_start":32,"column_end":41},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":15614},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":570772,"byte_end":570781,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":15614},"to":{"krate":26,"index":39}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":572183,"byte_end":572192,"line_start":147,"line_end":147,"column_start":37,"column_end":46},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":15614},"to":{"krate":26,"index":49}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":573022,"byte_end":573031,"line_start":168,"line_end":168,"column_start":36,"column_end":45},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":15614},"to":{"krate":26,"index":42}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":573109,"byte_end":573118,"line_start":172,"line_end":172,"column_start":36,"column_end":45},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":15614},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":573434,"byte_end":573443,"line_start":181,"line_end":181,"column_start":46,"column_end":55},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":15614},"to":{"krate":26,"index":47}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_reader.rs","byte_start":576363,"byte_end":576375,"line_start":244,"line_end":244,"column_start":20,"column_end":32},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":15667},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":578457,"byte_end":578466,"line_start":41,"line_end":41,"column_start":21,"column_end":30},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":15677},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":582065,"byte_end":582074,"line_start":151,"line_end":151,"column_start":36,"column_end":45},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":15677},"to":{"krate":26,"index":42}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":583497,"byte_end":583506,"line_start":194,"line_end":194,"column_start":34,"column_end":43},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":15677},"to":{"krate":26,"index":39}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":583587,"byte_end":583596,"line_start":198,"line_end":198,"column_start":40,"column_end":49},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":15677},"to":{"krate":26,"index":49}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":583677,"byte_end":583686,"line_start":202,"line_end":202,"column_start":36,"column_end":45},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":15677},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/buf_writer.rs","byte_start":584045,"byte_end":584054,"line_start":212,"line_end":212,"column_start":47,"column_end":56},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":15677},"to":{"krate":26,"index":47}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/line_writer.rs","byte_start":585108,"byte_end":585118,"line_start":25,"line_end":25,"column_start":21,"column_end":31},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":15726},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/line_writer.rs","byte_start":586320,"byte_end":586330,"line_start":58,"line_end":58,"column_start":36,"column_end":46},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":15726},"to":{"krate":26,"index":42}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":590190,"byte_end":590195,"line_start":21,"line_end":21,"column_start":12,"column_end":17},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":15762},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":591451,"byte_end":591456,"line_start":60,"line_end":60,"column_start":27,"column_end":32},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":15762},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":591786,"byte_end":591791,"line_start":74,"line_end":74,"column_start":26,"column_end":31},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":15762},"to":{"krate":26,"index":39}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/chain.rs","byte_start":592860,"byte_end":592865,"line_start":114,"line_end":114,"column_start":29,"column_end":34},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":15762},"to":{"krate":26,"index":49}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/close.rs","byte_start":593976,"byte_end":593981,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":15811},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/close.rs","byte_start":594034,"byte_end":594039,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":15811},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/close.rs","byte_start":594181,"byte_end":594186,"line_start":22,"line_end":22,"column_start":49,"column_end":54},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":15811},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy.rs","byte_start":595956,"byte_end":595960,"line_start":52,"line_end":52,"column_start":63,"column_end":67},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":15819},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf.rs","byte_start":597683,"byte_end":597690,"line_start":54,"line_end":54,"column_start":23,"column_end":30},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":15873},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/copy_buf_abortable.rs","byte_start":600856,"byte_end":600872,"line_start":81,"line_end":81,"column_start":23,"column_end":39},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":15935},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":603638,"byte_end":603644,"line_start":29,"line_end":29,"column_start":9,"column_end":15},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":16001},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":606844,"byte_end":606850,"line_start":148,"line_end":148,"column_start":23,"column_end":29},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":16001},"to":{"krate":26,"index":47}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":607137,"byte_end":607143,"line_start":161,"line_end":161,"column_start":44,"column_end":50},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":16001},"to":{"krate":26,"index":39}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":607775,"byte_end":607781,"line_start":185,"line_end":185,"column_start":26,"column_end":32},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":16001},"to":{"krate":26,"index":49}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":608985,"byte_end":608991,"line_start":226,"line_end":226,"column_start":21,"column_end":27},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":16001},"to":{"krate":26,"index":42}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":609066,"byte_end":609072,"line_start":230,"line_end":230,"column_start":21,"column_end":27},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":16001},"to":{"krate":26,"index":42}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":609150,"byte_end":609156,"line_start":234,"line_end":234,"column_start":21,"column_end":27},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":16001},"to":{"krate":26,"index":42}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/cursor.rs","byte_start":609229,"byte_end":609235,"line_start":238,"line_end":238,"column_start":21,"column_end":27},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":16001},"to":{"krate":26,"index":42}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":610152,"byte_end":610157,"line_start":35,"line_end":35,"column_start":20,"column_end":25},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":7541},"to":{"krate":26,"index":39}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":610366,"byte_end":610371,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":7541},"to":{"krate":26,"index":49}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/empty.rs","byte_start":610603,"byte_end":610608,"line_start":55,"line_end":55,"column_start":21,"column_end":26},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":7541},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/fill_buf.rs","byte_start":611106,"byte_end":611113,"line_start":14,"line_end":14,"column_start":27,"column_end":34},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":16029},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/fill_buf.rs","byte_start":611168,"byte_end":611175,"line_start":16,"line_end":16,"column_start":44,"column_end":51},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":16029},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/fill_buf.rs","byte_start":611306,"byte_end":611313,"line_start":22,"line_end":22,"column_start":24,"column_end":31},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":16029},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/flush.rs","byte_start":612883,"byte_end":612888,"line_start":14,"line_end":14,"column_start":35,"column_end":40},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":16037},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/flush.rs","byte_start":612941,"byte_end":612946,"line_start":16,"line_end":16,"column_start":42,"column_end":47},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":16037},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/flush.rs","byte_start":613059,"byte_end":613064,"line_start":22,"line_end":22,"column_start":20,"column_end":25},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":16037},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/lines.rs","byte_start":613867,"byte_end":613872,"line_start":24,"line_end":24,"column_start":23,"column_end":28},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":16045},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/lines.rs","byte_start":614035,"byte_end":614040,"line_start":30,"line_end":30,"column_start":34,"column_end":39},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":16045},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read.rs","byte_start":615017,"byte_end":615021,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":16093},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read.rs","byte_start":615073,"byte_end":615077,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":16093},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read.rs","byte_start":615242,"byte_end":615246,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":16093},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_vectored.rs","byte_start":615934,"byte_end":615946,"line_start":15,"line_end":15,"column_start":35,"column_end":47},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":16102},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_vectored.rs","byte_start":615998,"byte_end":616010,"line_start":17,"line_end":17,"column_start":41,"column_end":53},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":16102},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_vectored.rs","byte_start":616189,"byte_end":616201,"line_start":23,"line_end":23,"column_start":48,"column_end":60},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":16102},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_exact.rs","byte_start":616896,"byte_end":616905,"line_start":17,"line_end":17,"column_start":35,"column_end":44},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":16111},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_exact.rs","byte_start":616957,"byte_end":616966,"line_start":19,"line_end":19,"column_start":41,"column_end":50},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":16111},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_exact.rs","byte_start":617131,"byte_end":617140,"line_start":25,"line_end":25,"column_start":48,"column_end":57},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":16111},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_line.rs","byte_start":618271,"byte_end":618279,"line_start":21,"line_end":21,"column_start":35,"column_end":43},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":16120},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_line.rs","byte_start":618334,"byte_end":618342,"line_start":23,"line_end":23,"column_start":44,"column_end":52},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":16120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_line.rs","byte_start":619293,"byte_end":619301,"line_start":50,"line_end":50,"column_start":51,"column_end":59},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":16120},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_to_end.rs","byte_start":620056,"byte_end":620065,"line_start":18,"line_end":18,"column_start":35,"column_end":44},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":16131},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_to_end.rs","byte_start":620117,"byte_end":620126,"line_start":20,"line_end":20,"column_start":41,"column_end":50},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":16131},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_to_end.rs","byte_start":620371,"byte_end":620376,"line_start":32,"line_end":32,"column_start":15,"column_end":20},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":7856},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_to_end.rs","byte_start":622211,"byte_end":622220,"line_start":81,"line_end":81,"column_start":20,"column_end":29},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":16131},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_to_string.rs","byte_start":623093,"byte_end":623105,"line_start":20,"line_end":20,"column_start":35,"column_end":47},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":16141},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_to_string.rs","byte_start":623157,"byte_end":623169,"line_start":22,"line_end":22,"column_start":41,"column_end":53},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":16141},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_to_string.rs","byte_start":624080,"byte_end":624092,"line_start":49,"line_end":49,"column_start":20,"column_end":32},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":16141},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_until.rs","byte_start":624912,"byte_end":624921,"line_start":19,"line_end":19,"column_start":35,"column_end":44},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":16152},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_until.rs","byte_start":624976,"byte_end":624985,"line_start":21,"line_end":21,"column_start":44,"column_end":53},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":16152},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/read_until.rs","byte_start":625957,"byte_end":625966,"line_start":53,"line_end":53,"column_start":51,"column_end":60},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":16152},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":627124,"byte_end":627130,"line_start":35,"line_end":35,"column_start":20,"column_end":26},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":7991},"to":{"krate":26,"index":39}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/repeat.rs","byte_start":627771,"byte_end":627777,"line_start":62,"line_end":62,"column_start":21,"column_end":27},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":7991},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/seek.rs","byte_start":628291,"byte_end":628295,"line_start":15,"line_end":15,"column_start":35,"column_end":39},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":16163},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/seek.rs","byte_start":628347,"byte_end":628351,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":16163},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/seek.rs","byte_start":628508,"byte_end":628512,"line_start":23,"line_end":23,"column_start":48,"column_end":52},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":16163},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":629641,"byte_end":629645,"line_start":34,"line_end":34,"column_start":21,"column_end":25},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":8067},"to":{"krate":26,"index":42}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/sink.rs","byte_start":630363,"byte_end":630367,"line_start":63,"line_end":63,"column_start":21,"column_end":25},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":8067},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":631384,"byte_end":631392,"line_start":34,"line_end":34,"column_start":16,"column_end":24},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":16172},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":631892,"byte_end":631901,"line_start":45,"line_end":45,"column_start":16,"column_end":25},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":16178},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":632293,"byte_end":632301,"line_start":54,"line_end":54,"column_start":34,"column_end":42},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":16172},"to":{"krate":26,"index":39}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":632804,"byte_end":632813,"line_start":72,"line_end":72,"column_start":36,"column_end":45},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":16178},"to":{"krate":26,"index":42}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":633828,"byte_end":633840,"line_start":102,"line_end":102,"column_start":24,"column_end":36},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":8151},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":634004,"byte_end":634016,"line_start":108,"line_end":108,"column_start":26,"column_end":38},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":8151},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/split.rs","byte_start":634250,"byte_end":634262,"line_start":115,"line_end":115,"column_start":47,"column_end":59},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":8151},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":634735,"byte_end":634739,"line_start":19,"line_end":19,"column_start":20,"column_end":24},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":16184},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":636656,"byte_end":636660,"line_start":84,"line_end":84,"column_start":34,"column_end":38},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":16184},"to":{"krate":26,"index":39}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/take.rs","byte_start":637170,"byte_end":637174,"line_start":103,"line_end":103,"column_start":40,"column_end":44},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":16184},"to":{"krate":26,"index":49}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":639017,"byte_end":639023,"line_start":26,"line_end":26,"column_start":22,"column_end":28},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":16228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":641093,"byte_end":641099,"line_start":94,"line_end":94,"column_start":38,"column_end":44},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":16228},"to":{"krate":2,"index":3160}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/window.rs","byte_start":641246,"byte_end":641252,"line_start":100,"line_end":100,"column_start":38,"column_end":44},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":16228},"to":{"krate":2,"index":3163}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write.rs","byte_start":641773,"byte_end":641778,"line_start":15,"line_end":15,"column_start":35,"column_end":40},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":16235},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write.rs","byte_start":641831,"byte_end":641836,"line_start":17,"line_end":17,"column_start":42,"column_end":47},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":16235},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write.rs","byte_start":641998,"byte_end":642003,"line_start":23,"line_end":23,"column_start":49,"column_end":54},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":16235},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write_vectored.rs","byte_start":642687,"byte_end":642700,"line_start":15,"line_end":15,"column_start":35,"column_end":48},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":16244},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write_vectored.rs","byte_start":642753,"byte_end":642766,"line_start":17,"line_end":17,"column_start":42,"column_end":55},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":16244},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write_vectored.rs","byte_start":642939,"byte_end":642952,"line_start":23,"line_end":23,"column_start":49,"column_end":62},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":16244},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write_all.rs","byte_start":643644,"byte_end":643652,"line_start":17,"line_end":17,"column_start":35,"column_end":43},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":16253},"to":{"krate":2,"index":3304}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write_all.rs","byte_start":643705,"byte_end":643713,"line_start":19,"line_end":19,"column_start":42,"column_end":50},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":16253},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/write_all.rs","byte_start":643875,"byte_end":643883,"line_start":25,"line_end":25,"column_start":49,"column_end":57},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":16253},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":537806,"byte_end":537815,"line_start":148,"line_end":148,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":26,"index":39},"to":{"krate":0,"index":8359}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":546063,"byte_end":546064,"line_start":398,"line_end":398,"column_start":46,"column_end":47},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":8375},"to":{"krate":0,"index":8359}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":546167,"byte_end":546177,"line_start":401,"line_end":401,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":26,"index":42},"to":{"krate":0,"index":8376}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":552519,"byte_end":552520,"line_start":592,"line_end":592,"column_start":48,"column_end":49},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":8386},"to":{"krate":0,"index":8376}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":552621,"byte_end":552630,"line_start":595,"line_end":595,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":26,"index":47},"to":{"krate":0,"index":8387}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":553407,"byte_end":553408,"line_start":620,"line_end":620,"column_start":46,"column_end":47},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":8391},"to":{"krate":0,"index":8387}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":553515,"byte_end":553527,"line_start":623,"line_end":623,"column_start":28,"column_end":40},"kind":"SuperTrait","from":{"krate":26,"index":49},"to":{"krate":0,"index":8392}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/io/mod.rs","byte_start":560887,"byte_end":560888,"line_start":824,"line_end":824,"column_start":52,"column_end":53},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":8401},"to":{"krate":0,"index":8392}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":647198,"byte_end":647203,"line_start":48,"line_end":48,"column_start":31,"column_end":36},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":16268},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":647240,"byte_end":647245,"line_start":49,"line_end":49,"column_start":31,"column_end":36},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":16268},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":647261,"byte_end":647267,"line_start":51,"line_end":51,"column_start":9,"column_end":15},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":16262},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":652887,"byte_end":652892,"line_start":184,"line_end":184,"column_start":16,"column_end":21},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":16268},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":653014,"byte_end":653019,"line_start":190,"line_end":190,"column_start":18,"column_end":23},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":16268},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":653347,"byte_end":653359,"line_start":201,"line_end":201,"column_start":24,"column_end":36},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":8510},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":653523,"byte_end":653535,"line_start":207,"line_end":207,"column_start":26,"column_end":38},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":8510},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":653756,"byte_end":653768,"line_start":214,"line_end":214,"column_start":47,"column_end":59},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":8510},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":654248,"byte_end":654259,"line_start":228,"line_end":228,"column_start":38,"column_end":49},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":16275},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":654289,"byte_end":654300,"line_start":230,"line_end":230,"column_start":19,"column_end":30},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":16275},"to":{"krate":2,"index":3486}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":654463,"byte_end":654474,"line_start":237,"line_end":237,"column_start":29,"column_end":40},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":16275},"to":{"krate":2,"index":3499}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":654612,"byte_end":654623,"line_start":243,"line_end":243,"column_start":9,"column_end":20},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":16275},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/bilock.rs","byte_start":654975,"byte_end":654986,"line_start":252,"line_end":252,"column_start":18,"column_end":29},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":16275},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":656521,"byte_end":656526,"line_start":28,"line_end":28,"column_start":32,"column_end":37},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":8596},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":656859,"byte_end":656864,"line_start":38,"line_end":38,"column_start":21,"column_end":26},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":8596},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":656957,"byte_end":656962,"line_start":44,"line_end":44,"column_start":30,"column_end":35},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":8596},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":657095,"byte_end":657101,"line_start":55,"line_end":55,"column_start":6,"column_end":12},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":8610},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":657547,"byte_end":657552,"line_start":74,"line_end":74,"column_start":9,"column_end":14},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":8596},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":658123,"byte_end":658128,"line_start":99,"line_end":99,"column_start":17,"column_end":22},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":8596},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":661984,"byte_end":662004,"line_start":207,"line_end":207,"column_start":32,"column_end":52},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":8635},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":662436,"byte_end":662456,"line_start":220,"line_end":220,"column_start":33,"column_end":53},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":8635},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":662565,"byte_end":662585,"line_start":226,"line_end":226,"column_start":28,"column_end":48},"kind":{"Impl":{"id":556}},"from":{"krate":0,"index":8635},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":663869,"byte_end":663889,"line_start":264,"line_end":264,"column_start":26,"column_end":46},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":8635},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":664534,"byte_end":664549,"line_start":283,"line_end":283,"column_start":45,"column_end":60},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":8652},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":664795,"byte_end":664810,"line_start":292,"line_end":292,"column_start":26,"column_end":41},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":8652},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":664904,"byte_end":664919,"line_start":298,"line_end":298,"column_start":27,"column_end":42},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":8652},"to":{"krate":2,"index":3486}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":665056,"byte_end":665071,"line_start":305,"line_end":305,"column_start":30,"column_end":45},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":8652},"to":{"krate":2,"index":3499}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":665454,"byte_end":665469,"line_start":318,"line_end":318,"column_start":32,"column_end":47},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":8668},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":665900,"byte_end":665915,"line_start":331,"line_end":331,"column_start":33,"column_end":48},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":8668},"to":{"krate":20,"index":27}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":666032,"byte_end":666047,"line_start":337,"line_end":337,"column_start":32,"column_end":47},"kind":{"Impl":{"id":564}},"from":{"krate":0,"index":8668},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":667276,"byte_end":667291,"line_start":373,"line_end":373,"column_start":26,"column_end":41},"kind":{"Impl":{"id":565}},"from":{"krate":0,"index":8668},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":667893,"byte_end":667903,"line_start":392,"line_end":392,"column_start":21,"column_end":31},"kind":{"Impl":{"id":566}},"from":{"krate":0,"index":8687},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":668915,"byte_end":668925,"line_start":422,"line_end":422,"column_start":45,"column_end":55},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":8687},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":669131,"byte_end":669141,"line_start":428,"line_end":428,"column_start":26,"column_end":36},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":8687},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":669239,"byte_end":669249,"line_start":434,"line_end":434,"column_start":27,"column_end":37},"kind":{"Impl":{"id":569}},"from":{"krate":0,"index":8687},"to":{"krate":2,"index":3486}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":669390,"byte_end":669400,"line_start":441,"line_end":441,"column_start":30,"column_end":40},"kind":{"Impl":{"id":570}},"from":{"krate":0,"index":8687},"to":{"krate":2,"index":3499}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":669851,"byte_end":669867,"line_start":455,"line_end":455,"column_start":32,"column_end":48},"kind":{"Impl":{"id":571}},"from":{"krate":0,"index":8710},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":670997,"byte_end":671013,"line_start":486,"line_end":486,"column_start":56,"column_end":72},"kind":{"Impl":{"id":572}},"from":{"krate":0,"index":8710},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":671278,"byte_end":671294,"line_start":495,"line_end":495,"column_start":37,"column_end":53},"kind":{"Impl":{"id":573}},"from":{"krate":0,"index":8710},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":671406,"byte_end":671422,"line_start":501,"line_end":501,"column_start":38,"column_end":54},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":8710},"to":{"krate":2,"index":3486}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":671565,"byte_end":671581,"line_start":508,"line_end":508,"column_start":41,"column_end":57},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":8710},"to":{"krate":2,"index":3499}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":671858,"byte_end":671863,"line_start":516,"line_end":516,"column_start":40,"column_end":45},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":8596},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":671909,"byte_end":671914,"line_start":517,"line_end":517,"column_start":40,"column_end":45},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":8596},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":672081,"byte_end":672096,"line_start":521,"line_end":521,"column_start":40,"column_end":55},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":8668},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":672201,"byte_end":672216,"line_start":524,"line_end":524,"column_start":33,"column_end":48},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":8668},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":672387,"byte_end":672407,"line_start":528,"line_end":528,"column_start":40,"column_end":60},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":8635},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":672508,"byte_end":672528,"line_start":531,"line_end":531,"column_start":33,"column_end":53},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":8635},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":672728,"byte_end":672738,"line_start":535,"line_end":535,"column_start":40,"column_end":50},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":8687},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":672788,"byte_end":672798,"line_start":536,"line_end":536,"column_start":40,"column_end":50},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":8687},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":672849,"byte_end":672864,"line_start":538,"line_end":538,"column_start":40,"column_end":55},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":8652},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":672910,"byte_end":672925,"line_start":539,"line_end":539,"column_start":40,"column_end":55},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":8652},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":672990,"byte_end":673006,"line_start":541,"line_end":541,"column_start":58,"column_end":74},"kind":{"Impl":{"id":586}},"from":{"krate":0,"index":8710},"to":{"krate":2,"index":3263}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mutex.rs","byte_start":673077,"byte_end":673093,"line_start":542,"line_end":542,"column_start":58,"column_end":74},"kind":{"Impl":{"id":587}},"from":{"krate":0,"index":8710},"to":{"krate":2,"index":3275}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":673935,"byte_end":673944,"line_start":22,"line_end":22,"column_start":9,"column_end":18},"kind":{"Impl":{"id":588}},"from":{"krate":0,"index":16283},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":676228,"byte_end":676239,"line_start":87,"line_end":87,"column_start":6,"column_end":17},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":16330},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":677055,"byte_end":677062,"line_start":112,"line_end":112,"column_start":23,"column_end":30},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":16341},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":677245,"byte_end":677252,"line_start":119,"line_end":119,"column_start":28,"column_end":35},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":16341},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":677265,"byte_end":677274,"line_start":121,"line_end":121,"column_start":9,"column_end":18},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":16283},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":678263,"byte_end":678272,"line_start":152,"line_end":152,"column_start":22,"column_end":31},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":16283},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":678511,"byte_end":678520,"line_start":163,"line_end":163,"column_start":21,"column_end":30},"kind":{"Impl":{"id":594}},"from":{"krate":0,"index":16283},"to":{"krate":20,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":678779,"byte_end":678790,"line_start":174,"line_end":174,"column_start":6,"column_end":17},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":16330},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":679462,"byte_end":679463,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":8845},"to":{"krate":0,"index":8840}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":679602,"byte_end":679609,"line_start":19,"line_end":19,"column_start":22,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":8840},"to":{"krate":0,"index":8850}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":679698,"byte_end":679699,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"kind":{"Impl":{"id":597}},"from":{"krate":0,"index":8854},"to":{"krate":0,"index":8850}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":679885,"byte_end":679891,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":8850},"to":{"krate":0,"index":8858}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":679969,"byte_end":679970,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":8862},"to":{"krate":0,"index":8858}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":680986,"byte_end":680990,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":8867},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":681084,"byte_end":681088,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":8867},"to":{"krate":0,"index":8840}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":681347,"byte_end":681354,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"kind":{"Impl":{"id":606}},"from":{"krate":0,"index":16372},"to":{"krate":0,"index":8840}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":681577,"byte_end":681584,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"kind":{"Impl":{"id":607}},"from":{"krate":0,"index":16372},"to":{"krate":0,"index":8850}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":681775,"byte_end":681782,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"kind":{"Impl":{"id":608}},"from":{"krate":0,"index":16372},"to":{"krate":0,"index":8858}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":682087,"byte_end":682100,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"kind":{"Impl":{"id":609}},"from":{"krate":0,"index":16393},"to":{"krate":0,"index":8840}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":682517,"byte_end":682526,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"kind":{"Impl":{"id":615}},"from":{"krate":0,"index":16409},"to":{"krate":0,"index":8840}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":682810,"byte_end":682819,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"kind":{"Impl":{"id":616}},"from":{"krate":0,"index":16409},"to":{"krate":0,"index":8850}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":683081,"byte_end":683090,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"kind":{"Impl":{"id":617}},"from":{"krate":0,"index":16409},"to":{"krate":0,"index":8858}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":683412,"byte_end":683419,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"kind":{"Impl":{"id":618}},"from":{"krate":0,"index":16424},"to":{"krate":0,"index":8840}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":683638,"byte_end":683645,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"kind":{"Impl":{"id":619}},"from":{"krate":0,"index":16424},"to":{"krate":0,"index":8850}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":683823,"byte_end":683830,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"kind":{"Impl":{"id":620}},"from":{"krate":0,"index":16424},"to":{"krate":0,"index":8858}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":684131,"byte_end":684139,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"kind":{"Impl":{"id":621}},"from":{"krate":0,"index":16439},"to":{"krate":0,"index":8840}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":684362,"byte_end":684370,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"kind":{"Impl":{"id":622}},"from":{"krate":0,"index":16439},"to":{"krate":0,"index":8850}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":684552,"byte_end":684560,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"kind":{"Impl":{"id":623}},"from":{"krate":0,"index":16439},"to":{"krate":0,"index":8858}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":684870,"byte_end":684881,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"kind":{"Impl":{"id":624}},"from":{"krate":0,"index":16454},"to":{"krate":0,"index":8840}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":685141,"byte_end":685152,"line_start":256,"line_end":256,"column_start":48,"column_end":59},"kind":{"Impl":{"id":625}},"from":{"krate":0,"index":16454},"to":{"krate":0,"index":8850}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":685389,"byte_end":685400,"line_start":266,"line_end":266,"column_start":45,"column_end":56},"kind":{"Impl":{"id":626}},"from":{"krate":0,"index":16454},"to":{"krate":0,"index":8858}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":685767,"byte_end":685779,"line_start":283,"line_end":283,"column_start":49,"column_end":61},"kind":{"Impl":{"id":627}},"from":{"krate":0,"index":16466},"to":{"krate":0,"index":8840}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":686040,"byte_end":686052,"line_start":294,"line_end":294,"column_start":48,"column_end":60},"kind":{"Impl":{"id":628}},"from":{"krate":0,"index":16466},"to":{"krate":0,"index":8850}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":686290,"byte_end":686302,"line_start":304,"line_end":304,"column_start":45,"column_end":57},"kind":{"Impl":{"id":629}},"from":{"krate":0,"index":16466},"to":{"krate":0,"index":8858}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":686921,"byte_end":686935,"line_start":326,"line_end":326,"column_start":41,"column_end":55},"kind":{"Impl":{"id":630}},"from":{"krate":0,"index":16478},"to":{"krate":0,"index":8840}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":687158,"byte_end":687172,"line_start":335,"line_end":335,"column_start":40,"column_end":54},"kind":{"Impl":{"id":631}},"from":{"krate":0,"index":16478},"to":{"krate":0,"index":8850}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":687373,"byte_end":687387,"line_start":343,"line_end":343,"column_start":37,"column_end":51},"kind":{"Impl":{"id":632}},"from":{"krate":0,"index":16478},"to":{"krate":0,"index":8858}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":687693,"byte_end":687699,"line_start":357,"line_end":357,"column_start":21,"column_end":27},"kind":{"Impl":{"id":633}},"from":{"krate":0,"index":9031},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":687792,"byte_end":687798,"line_start":362,"line_end":362,"column_start":27,"column_end":33},"kind":{"Impl":{"id":634}},"from":{"krate":0,"index":9031},"to":{"krate":0,"index":8840}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/unfold_state.rs","byte_start":688403,"byte_end":688414,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"kind":{"Impl":{"id":640}},"from":{"krate":0,"index":16511},"to":{"krate":4294967295,"index":4294967295}}]}