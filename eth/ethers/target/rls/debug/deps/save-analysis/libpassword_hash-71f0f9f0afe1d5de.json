{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2","program":"/Users/turjachowdhury/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","password_hash","--edition=2021","/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"rand_core\"","-C","metadata=71f0f9f0afe1d5de","-C","extra-filename=-71f0f9f0afe1d5de","--out-dir","/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps","-L","dependency=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps","--extern","base64ct=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libbase64ct-e48bd8473e7e16db.rmeta","--extern","rand_core=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/librand_core-d284732429373caf.rmeta","--extern","subtle=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libsubtle-38978fae47f47437.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/turjachowdhury/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libpassword_hash-71f0f9f0afe1d5de.rmeta"},"prelude":{"crate_id":{"name":"password_hash","disambiguator":[15958892514262569965,0]},"crate_root":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src","external_crates":[{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[14771084576412554041,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[2214913233095760658,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[14062411168213242900,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","num":4,"id":{"name":"rand_core","disambiguator":[10219715068303864474,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","num":5,"id":{"name":"std","disambiguator":[3177202280525429736,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","num":6,"id":{"name":"alloc","disambiguator":[12076482825092298057,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","num":7,"id":{"name":"libc","disambiguator":[14222321261015582298,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","num":8,"id":{"name":"unwind","disambiguator":[8777242437552039366,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","num":9,"id":{"name":"cfg_if","disambiguator":[17835652209006724865,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","num":10,"id":{"name":"miniz_oxide","disambiguator":[8739993533421390330,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","num":11,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[14051958152740382928,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","num":12,"id":{"name":"adler","disambiguator":[10065303707608660519,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","num":13,"id":{"name":"hashbrown","disambiguator":[11544620977869425193,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","num":14,"id":{"name":"std_detect","disambiguator":[6400271788769952154,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","num":15,"id":{"name":"rustc_demangle","disambiguator":[15384311983005613458,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","num":16,"id":{"name":"addr2line","disambiguator":[18308402029100966730,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","num":17,"id":{"name":"gimli","disambiguator":[6407954677654987270,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","num":18,"id":{"name":"object","disambiguator":[15697432329694890830,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","num":19,"id":{"name":"memchr","disambiguator":[8370702540642071065,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","num":20,"id":{"name":"panic_unwind","disambiguator":[13043233986326649044,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","num":21,"id":{"name":"getrandom","disambiguator":[15641211430450808217,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","num":22,"id":{"name":"cfg_if","disambiguator":[4590009807048894466,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","num":23,"id":{"name":"libc","disambiguator":[4734073794903943432,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","num":24,"id":{"name":"base64ct","disambiguator":[15230793113212978509,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","num":25,"id":{"name":"subtle","disambiguator":[9509557527791595074,0]}}],"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":0,"byte_end":11075,"line_start":1,"line_end":392,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":4,"index":0},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":900,"byte_end":909,"line_start":30,"line_end":30,"column_start":9,"column_end":18},"alias_span":null,"name":"rand_core","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":24,"index":608},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":11113,"byte_end":11118,"line_start":3,"line_end":3,"column_start":19,"column_end":24},"alias_span":null,"name":"B64Error","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":605},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":1043,"byte_end":1051,"line_start":43,"line_end":43,"column_start":15,"column_end":23},"alias_span":null,"name":"Encoding","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":535},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":1066,"byte_end":1071,"line_start":44,"line_end":44,"column_start":14,"column_end":19},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":14},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":1073,"byte_end":1079,"line_start":44,"line_end":44,"column_start":21,"column_end":27},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":627},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":1093,"byte_end":1098,"line_start":45,"line_end":45,"column_start":12,"column_end":17},"alias_span":null,"name":"Ident","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":657},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":1112,"byte_end":1118,"line_start":46,"line_end":46,"column_start":13,"column_end":19},"alias_span":null,"name":"Output","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":670},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":1132,"byte_end":1144,"line_start":47,"line_end":47,"column_start":13,"column_end":25},"alias_span":null,"name":"ParamsString","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":696},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":1157,"byte_end":1161,"line_start":48,"line_end":48,"column_start":12,"column_end":16},"alias_span":null,"name":"Salt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":716},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":1163,"byte_end":1173,"line_start":48,"line_end":48,"column_start":18,"column_end":28},"alias_span":null,"name":"SaltString","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":405},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":1189,"byte_end":1198,"line_start":49,"line_end":49,"column_start":14,"column_end":23},"alias_span":null,"name":"McfHasher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":391},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":1200,"byte_end":1214,"line_start":49,"line_end":49,"column_start":25,"column_end":39},"alias_span":null,"name":"PasswordHasher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":400},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":1216,"byte_end":1232,"line_start":49,"line_end":49,"column_start":41,"column_end":57},"alias_span":null,"name":"PasswordVerifier","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":430},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":1247,"byte_end":1254,"line_start":50,"line_end":50,"column_start":13,"column_end":20},"alias_span":null,"name":"Decimal","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":726},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":1256,"byte_end":1261,"line_start":50,"line_end":50,"column_start":22,"column_end":27},"alias_span":null,"name":"Value","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":0,"byte_end":11075,"line_start":1,"line_end":392,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":27},{"krate":0,"index":52},{"krate":0,"index":93},{"krate":0,"index":162},{"krate":0,"index":283},{"krate":0,"index":365},{"krate":0,"index":409},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":472},{"krate":0,"index":475},{"krate":0,"index":478},{"krate":0,"index":481},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":488},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":495},{"krate":0,"index":498},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":505},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":515},{"krate":0,"index":759},{"krate":0,"index":766},{"krate":0,"index":769},{"krate":0,"index":772},{"krate":0,"index":774},{"krate":0,"index":777},{"krate":0,"index":779},{"krate":0,"index":516},{"krate":0,"index":528},{"krate":0,"index":532}],"decl_id":null,"docs":"# RustCrypto: Password Hashing Traits","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":0,"byte_end":10,"line_start":1,"line_end":1,"column_start":1,"column_end":11}},{"value":"forbid(unsafe_code)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":286,"byte_end":309,"line_start":8,"line_end":8,"column_start":1,"column_end":24}},{"value":"warn(missing_docs, rust_2018_idioms, unused_lifetimes)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":310,"byte_end":368,"line_start":9,"line_end":9,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":370,"byte_end":373,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":374,"byte_end":385,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":386,"byte_end":389,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ This crate represents password hashes using the [`PasswordHash`] type, which","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":390,"byte_end":470,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ represents a parsed \"PHC string\" with the following format:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":471,"byte_end":534,"line_start":15,"line_end":15,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":535,"byte_end":538,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":539,"byte_end":550,"line_start":17,"line_end":17,"column_start":1,"column_end":12}},{"value":"/ $<id>[$v=<version>][$<param>=<value>(,<param>=<value>)*][$<salt>[$<hash>]]","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":551,"byte_end":629,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":630,"byte_end":637,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":638,"byte_end":641,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ For more information, please see the documentation for [`PasswordHash`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":642,"byte_end":718,"line_start":21,"line_end":21,"column_start":1,"column_end":77}}]},{"kind":"Mod","id":{"krate":0,"index":7},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"errors","qualname":"::errors","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","parent":null,"children":[{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":535},{"krate":0,"index":569},{"krate":0,"index":570},{"krate":0,"index":572},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":581},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":596},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":22},{"krate":0,"index":25}],"decl_id":null,"docs":" Error types.\n","sig":null,"attributes":[{"value":"/ Error types.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":11077,"byte_end":11093,"line_start":1,"line_end":1,"column_start":1,"column_end":17}}]},{"kind":"Type","id":{"krate":0,"index":14},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":11175,"byte_end":11181,"line_start":8,"line_end":8,"column_start":10,"column_end":16},"name":"Result","qualname":"::errors::Result","value":"core::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" Result type.\n","sig":null,"attributes":[{"value":"/ Result type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":11149,"byte_end":11165,"line_start":7,"line_end":7,"column_start":1,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":536},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":11364,"byte_end":11373,"line_start":15,"line_end":15,"column_start":5,"column_end":14},"name":"Algorithm","qualname":"::errors::Error::Algorithm","value":"Error::Algorithm","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Unsupported algorithm.\n","sig":null,"attributes":[{"value":"/ Unsupported algorithm.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":11333,"byte_end":11359,"line_start":14,"line_end":14,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":538},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":11410,"byte_end":11421,"line_start":18,"line_end":18,"column_start":5,"column_end":16},"name":"B64Encoding","qualname":"::errors::Error::B64Encoding","value":"Error::B64Encoding(B64Error)","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" \"B64\" encoding error.\n","sig":null,"attributes":[{"value":"/ \"B64\" encoding error.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":11380,"byte_end":11405,"line_start":17,"line_end":17,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":540},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":11422,"byte_end":11430,"line_start":18,"line_end":18,"column_start":17,"column_end":25},"name":"0","qualname":"::errors::Error::B64Encoding::0","value":"base64ct::Error","parent":{"krate":0,"index":538},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":541},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":11467,"byte_end":11473,"line_start":21,"line_end":21,"column_start":5,"column_end":11},"name":"Crypto","qualname":"::errors::Error::Crypto","value":"Error::Crypto","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Cryptographic error.\n","sig":null,"attributes":[{"value":"/ Cryptographic error.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":11438,"byte_end":11462,"line_start":20,"line_end":20,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":543},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":11521,"byte_end":11535,"line_start":24,"line_end":24,"column_start":5,"column_end":19},"name":"OutputTooShort","qualname":"::errors::Error::OutputTooShort","value":"Error::OutputTooShort","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Output too short (min 10-bytes).\n","sig":null,"attributes":[{"value":"/ Output too short (min 10-bytes).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":11480,"byte_end":11516,"line_start":23,"line_end":23,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":545},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":11582,"byte_end":11595,"line_start":27,"line_end":27,"column_start":5,"column_end":18},"name":"OutputTooLong","qualname":"::errors::Error::OutputTooLong","value":"Error::OutputTooLong","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Output too long (max 64-bytes).\n","sig":null,"attributes":[{"value":"/ Output too long (max 64-bytes).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":11542,"byte_end":11577,"line_start":26,"line_end":26,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":547},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":11648,"byte_end":11667,"line_start":30,"line_end":30,"column_start":5,"column_end":24},"name":"ParamNameDuplicated","qualname":"::errors::Error::ParamNameDuplicated","value":"Error::ParamNameDuplicated","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Duplicate parameter name encountered.\n","sig":null,"attributes":[{"value":"/ Duplicate parameter name encountered.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":11602,"byte_end":11643,"line_start":29,"line_end":29,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":549},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":11706,"byte_end":11722,"line_start":33,"line_end":33,"column_start":5,"column_end":21},"name":"ParamNameInvalid","qualname":"::errors::Error::ParamNameInvalid","value":"Error::ParamNameInvalid","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Invalid parameter name.\n","sig":null,"attributes":[{"value":"/ Invalid parameter name.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":11674,"byte_end":11701,"line_start":32,"line_end":32,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":551},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":11762,"byte_end":11779,"line_start":36,"line_end":36,"column_start":5,"column_end":22},"name":"ParamValueInvalid","qualname":"::errors::Error::ParamValueInvalid","value":"Error::ParamValueInvalid(InvalidValue)","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Invalid parameter value.\n","sig":null,"attributes":[{"value":"/ Invalid parameter value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":11729,"byte_end":11757,"line_start":35,"line_end":35,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":553},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":11780,"byte_end":11792,"line_start":36,"line_end":36,"column_start":23,"column_end":35},"name":"0","qualname":"::errors::Error::ParamValueInvalid::0","value":"errors::InvalidValue","parent":{"krate":0,"index":551},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":554},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":11847,"byte_end":11864,"line_start":39,"line_end":39,"column_start":5,"column_end":22},"name":"ParamsMaxExceeded","qualname":"::errors::Error::ParamsMaxExceeded","value":"Error::ParamsMaxExceeded","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Maximum number of parameters exceeded.\n","sig":null,"attributes":[{"value":"/ Maximum number of parameters exceeded.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":11800,"byte_end":11842,"line_start":38,"line_end":38,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":556},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":11897,"byte_end":11905,"line_start":42,"line_end":42,"column_start":5,"column_end":13},"name":"Password","qualname":"::errors::Error::Password","value":"Error::Password","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Invalid password.\n","sig":null,"attributes":[{"value":"/ Invalid password.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":11871,"byte_end":11892,"line_start":41,"line_end":41,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":558},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":11970,"byte_end":11986,"line_start":45,"line_end":45,"column_start":5,"column_end":21},"name":"PhcStringInvalid","qualname":"::errors::Error::PhcStringInvalid","value":"Error::PhcStringInvalid","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Password hash string contains invalid characters.\n","sig":null,"attributes":[{"value":"/ Password hash string contains invalid characters.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":11912,"byte_end":11965,"line_start":44,"line_end":44,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":560},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":12033,"byte_end":12050,"line_start":48,"line_end":48,"column_start":5,"column_end":22},"name":"PhcStringTooShort","qualname":"::errors::Error::PhcStringTooShort","value":"Error::PhcStringTooShort","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Password hash string too short.\n","sig":null,"attributes":[{"value":"/ Password hash string too short.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":11993,"byte_end":12028,"line_start":47,"line_end":47,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":562},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":12096,"byte_end":12112,"line_start":51,"line_end":51,"column_start":5,"column_end":21},"name":"PhcStringTooLong","qualname":"::errors::Error::PhcStringTooLong","value":"Error::PhcStringTooLong","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Password hash string too long.\n","sig":null,"attributes":[{"value":"/ Password hash string too long.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":12057,"byte_end":12091,"line_start":50,"line_end":50,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":564},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":12141,"byte_end":12152,"line_start":54,"line_end":54,"column_start":5,"column_end":16},"name":"SaltInvalid","qualname":"::errors::Error::SaltInvalid","value":"Error::SaltInvalid(InvalidValue)","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Salt invalid.\n","sig":null,"attributes":[{"value":"/ Salt invalid.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":12119,"byte_end":12136,"line_start":53,"line_end":53,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":566},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":12153,"byte_end":12165,"line_start":54,"line_end":54,"column_start":17,"column_end":29},"name":"0","qualname":"::errors::Error::SaltInvalid::0","value":"errors::InvalidValue","parent":{"krate":0,"index":564},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":567},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":12208,"byte_end":12215,"line_start":57,"line_end":57,"column_start":5,"column_end":12},"name":"Version","qualname":"::errors::Error::Version","value":"Error::Version","parent":{"krate":0,"index":535},"children":[],"decl_id":null,"docs":" Invalid algorithm version.\n","sig":null,"attributes":[{"value":"/ Invalid algorithm version.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":12173,"byte_end":12203,"line_start":56,"line_end":56,"column_start":5,"column_end":35}}]},{"kind":"Enum","id":{"krate":0,"index":535},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":11321,"byte_end":11326,"line_start":13,"line_end":13,"column_start":10,"column_end":15},"name":"Error","qualname":"::errors::Error","value":"enum Error {\n    Algorithm,\n    B64Encoding(B64Error),\n    Crypto,\n    OutputTooShort,\n    OutputTooLong,\n    ParamNameDuplicated,\n    ParamNameInvalid,\n    ParamValueInvalid(InvalidValue),\n    ParamsMaxExceeded,\n    Password,\n    PhcStringInvalid,\n    PhcStringTooShort,\n    PhcStringTooLong,\n    SaltInvalid(InvalidValue),\n    Version,\n}","parent":null,"children":[{"krate":0,"index":536},{"krate":0,"index":538},{"krate":0,"index":541},{"krate":0,"index":543},{"krate":0,"index":545},{"krate":0,"index":547},{"krate":0,"index":549},{"krate":0,"index":551},{"krate":0,"index":554},{"krate":0,"index":556},{"krate":0,"index":558},{"krate":0,"index":560},{"krate":0,"index":562},{"krate":0,"index":564},{"krate":0,"index":567}],"decl_id":null,"docs":" Password hashing errors.\n","sig":null,"attributes":[{"value":"/ Password hashing errors.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":11220,"byte_end":11248,"line_start":10,"line_end":10,"column_start":1,"column_end":29}},{"value":"non_exhaustive","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":11294,"byte_end":11311,"line_start":12,"line_end":12,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":12257,"byte_end":12260,"line_start":61,"line_end":61,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Error as core::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter)\n-> core::result::Result<(), fmt::Error>","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":13645,"byte_end":13649,"line_start":86,"line_end":86,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as core::convert::From>::from","value":"fn from(B64Error) -> Error","parent":{"krate":1,"index":3169},"children":[],"decl_id":{"krate":1,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":13776,"byte_end":13780,"line_start":92,"line_end":92,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as core::convert::From>::from","value":"fn from(base64ct::InvalidLengthError) -> Error","parent":{"krate":1,"index":3169},"children":[],"decl_id":{"krate":1,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":582},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":14086,"byte_end":14097,"line_start":102,"line_end":102,"column_start":5,"column_end":16},"name":"InvalidChar","qualname":"::errors::InvalidValue::InvalidChar","value":"InvalidValue::InvalidChar(char)","parent":{"krate":0,"index":581},"children":[],"decl_id":null,"docs":" Character is not in the allowed set.\n","sig":null,"attributes":[{"value":"/ Character is not in the allowed set.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":14041,"byte_end":14081,"line_start":101,"line_end":101,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":584},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":14098,"byte_end":14102,"line_start":102,"line_end":102,"column_start":17,"column_end":21},"name":"0","qualname":"::errors::InvalidValue::InvalidChar::0","value":"char","parent":{"krate":0,"index":582},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":585},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":14137,"byte_end":14150,"line_start":105,"line_end":105,"column_start":5,"column_end":18},"name":"InvalidFormat","qualname":"::errors::InvalidValue::InvalidFormat","value":"InvalidValue::InvalidFormat","parent":{"krate":0,"index":581},"children":[],"decl_id":null,"docs":" Format is invalid.\n","sig":null,"attributes":[{"value":"/ Format is invalid.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":14110,"byte_end":14132,"line_start":104,"line_end":104,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":587},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":14185,"byte_end":14194,"line_start":108,"line_end":108,"column_start":5,"column_end":14},"name":"Malformed","qualname":"::errors::InvalidValue::Malformed","value":"InvalidValue::Malformed","parent":{"krate":0,"index":581},"children":[],"decl_id":null,"docs":" Value is malformed.\n","sig":null,"attributes":[{"value":"/ Value is malformed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":14157,"byte_end":14180,"line_start":107,"line_end":107,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":589},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":14251,"byte_end":14258,"line_start":111,"line_end":111,"column_start":5,"column_end":12},"name":"TooLong","qualname":"::errors::InvalidValue::TooLong","value":"InvalidValue::TooLong","parent":{"krate":0,"index":581},"children":[],"decl_id":null,"docs":" Value exceeds the maximum allowed length.\n","sig":null,"attributes":[{"value":"/ Value exceeds the maximum allowed length.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":14201,"byte_end":14246,"line_start":110,"line_end":110,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":591},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":14316,"byte_end":14324,"line_start":114,"line_end":114,"column_start":5,"column_end":13},"name":"TooShort","qualname":"::errors::InvalidValue::TooShort","value":"InvalidValue::TooShort","parent":{"krate":0,"index":581},"children":[],"decl_id":null,"docs":" Value does not satisfy the minimum length.\n","sig":null,"attributes":[{"value":"/ Value does not satisfy the minimum length.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":14265,"byte_end":14311,"line_start":113,"line_end":113,"column_start":5,"column_end":51}}]},{"kind":"Enum","id":{"krate":0,"index":581},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":14022,"byte_end":14034,"line_start":100,"line_end":100,"column_start":10,"column_end":22},"name":"InvalidValue","qualname":"::errors::InvalidValue","value":"enum InvalidValue {\n    InvalidChar(char),\n    InvalidFormat,\n    Malformed,\n    TooLong,\n    TooShort,\n}","parent":null,"children":[{"krate":0,"index":582},{"krate":0,"index":585},{"krate":0,"index":587},{"krate":0,"index":589},{"krate":0,"index":591}],"decl_id":null,"docs":" Parse errors relating to invalid parameter values or salts.\n","sig":null,"attributes":[{"value":"/ Parse errors relating to invalid parameter values or salts.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":13886,"byte_end":13949,"line_start":97,"line_end":97,"column_start":1,"column_end":64}},{"value":"non_exhaustive","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":13995,"byte_end":14012,"line_start":99,"line_end":99,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":14431,"byte_end":14442,"line_start":119,"line_end":119,"column_start":12,"column_end":23},"name":"param_error","qualname":"<InvalidValue>::param_error","value":"fn param_error(Self) -> Error","parent":null,"children":[],"decl_id":null,"docs":" Create an [`Error::ParamValueInvalid`] which warps this error.\n","sig":null,"attributes":[{"value":"/ Create an [`Error::ParamValueInvalid`] which warps this error.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":14353,"byte_end":14419,"line_start":118,"line_end":118,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":14582,"byte_end":14592,"line_start":124,"line_end":124,"column_start":12,"column_end":22},"name":"salt_error","qualname":"<InvalidValue>::salt_error","value":"fn salt_error(Self) -> Error","parent":null,"children":[],"decl_id":null,"docs":" Create an [`Error::SaltInvalid`] which wraps this error.\n","sig":null,"attributes":[{"value":"/ Create an [`Error::SaltInvalid`] which wraps this error.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":14510,"byte_end":14570,"line_start":123,"line_end":123,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":14696,"byte_end":14699,"line_start":130,"line_end":130,"column_start":8,"column_end":11},"name":"fmt","qualname":"<InvalidValue as core::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter)\n-> core::result::Result<(), fmt::Error>","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":606},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/encoding.rs","byte_start":15694,"byte_end":15697,"line_start":17,"line_end":17,"column_start":5,"column_end":8},"name":"B64","qualname":"::encoding::Encoding::B64","value":"Encoding::B64","parent":{"krate":0,"index":605},"children":[],"decl_id":null,"docs":" \"B64\" encoding: standard Base64 without padding.","sig":null,"attributes":[{"value":"/ \"B64\" encoding: standard Base64 without padding.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/encoding.rs","byte_start":15416,"byte_end":15468,"line_start":10,"line_end":10,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/encoding.rs","byte_start":15473,"byte_end":15476,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/encoding.rs","byte_start":15481,"byte_end":15492,"line_start":12,"line_end":12,"column_start":5,"column_end":16}},{"value":"/ [A-Z]      [a-z]      [0-9]      +     /","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/encoding.rs","byte_start":15497,"byte_end":15541,"line_start":13,"line_end":13,"column_start":5,"column_end":49}},{"value":"/ 0x41-0x5a, 0x61-0x7a, 0x30-0x39, 0x2b, 0x2f","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/encoding.rs","byte_start":15546,"byte_end":15593,"line_start":14,"line_end":14,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/encoding.rs","byte_start":15598,"byte_end":15605,"line_start":15,"line_end":15,"column_start":5,"column_end":12}},{"value":"/ <https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md#b64>","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/encoding.rs","byte_start":15610,"byte_end":15689,"line_start":16,"line_end":16,"column_start":5,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":608},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/encoding.rs","byte_start":15862,"byte_end":15868,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Bcrypt","qualname":"::encoding::Encoding::Bcrypt","value":"Encoding::Bcrypt","parent":{"krate":0,"index":605},"children":[],"decl_id":null,"docs":" bcrypt encoding.","sig":null,"attributes":[{"value":"/ bcrypt encoding.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/encoding.rs","byte_start":15704,"byte_end":15724,"line_start":19,"line_end":19,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/encoding.rs","byte_start":15729,"byte_end":15732,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/encoding.rs","byte_start":15737,"byte_end":15748,"line_start":21,"line_end":21,"column_start":5,"column_end":16}},{"value":"/ ./         [A-Z]      [a-z]     [0-9]","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/encoding.rs","byte_start":15753,"byte_end":15794,"line_start":22,"line_end":22,"column_start":5,"column_end":46}},{"value":"/ 0x2e-0x2f, 0x41-0x5a, 0x61-0x7a, 0x30-0x39","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/encoding.rs","byte_start":15799,"byte_end":15845,"line_start":23,"line_end":23,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/encoding.rs","byte_start":15850,"byte_end":15857,"line_start":24,"line_end":24,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":610},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/encoding.rs","byte_start":16016,"byte_end":16021,"line_start":33,"line_end":33,"column_start":5,"column_end":10},"name":"Crypt","qualname":"::encoding::Encoding::Crypt","value":"Encoding::Crypt","parent":{"krate":0,"index":605},"children":[],"decl_id":null,"docs":" `crypt(3)` encoding.","sig":null,"attributes":[{"value":"/ `crypt(3)` encoding.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/encoding.rs","byte_start":15875,"byte_end":15899,"line_start":27,"line_end":27,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/encoding.rs","byte_start":15904,"byte_end":15907,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/encoding.rs","byte_start":15912,"byte_end":15923,"line_start":29,"line_end":29,"column_start":5,"column_end":16}},{"value":"/ [.-9]      [A-Z]      [a-z]","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/encoding.rs","byte_start":15928,"byte_end":15959,"line_start":30,"line_end":30,"column_start":5,"column_end":36}},{"value":"/ 0x2e-0x39, 0x41-0x5a, 0x61-0x7a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/encoding.rs","byte_start":15964,"byte_end":15999,"line_start":31,"line_end":31,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/encoding.rs","byte_start":16004,"byte_end":16011,"line_start":32,"line_end":32,"column_start":5,"column_end":12}}]},{"kind":"Enum","id":{"krate":0,"index":605},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/encoding.rs","byte_start":15401,"byte_end":15409,"line_start":9,"line_end":9,"column_start":10,"column_end":18},"name":"Encoding","qualname":"::encoding::Encoding","value":"enum Encoding { B64, Bcrypt, Crypt, }","parent":null,"children":[{"krate":0,"index":606},{"krate":0,"index":608},{"krate":0,"index":610}],"decl_id":null,"docs":" Base64 encoding variants.\n","sig":null,"attributes":[{"value":"/ Base64 encoding variants.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/encoding.rs","byte_start":15300,"byte_end":15329,"line_start":7,"line_end":7,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/encoding.rs","byte_start":16061,"byte_end":16068,"line_start":37,"line_end":37,"column_start":8,"column_end":15},"name":"default","qualname":"<Encoding as core::default::Default>::default","value":"fn default() -> Self","parent":{"krate":1,"index":3241},"children":[],"decl_id":{"krate":1,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/encoding.rs","byte_start":16204,"byte_end":16210,"line_start":44,"line_end":44,"column_start":12,"column_end":18},"name":"decode","qualname":"<Encoding>::decode","value":"fn decode<'_, impl AsRef<[u8]>>(Self, impl AsRef<[u8]>, &'_ mut [u8])\n-> Result<&'_ [u8], B64Error> where impl AsRef<[u8]>: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Decode a Base64 string into the provided destination buffer.\n","sig":null,"attributes":[{"value":"/ Decode a Base64 string into the provided destination buffer.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/encoding.rs","byte_start":16128,"byte_end":16192,"line_start":43,"line_end":43,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/encoding.rs","byte_start":16674,"byte_end":16680,"line_start":56,"line_end":56,"column_start":12,"column_end":18},"name":"encode","qualname":"<Encoding>::encode","value":"fn encode<'a, '_>(Self, &'_ [u8], &'a mut [u8]) -> Result<&'a str, B64Error>","parent":null,"children":[],"decl_id":null,"docs":" Encode the input byte slice as Base64.","sig":null,"attributes":[{"value":"/ Encode the input byte slice as Base64.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/encoding.rs","byte_start":16493,"byte_end":16535,"line_start":52,"line_end":52,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/encoding.rs","byte_start":16540,"byte_end":16543,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Writes the result into the provided destination slice, returning an","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/encoding.rs","byte_start":16548,"byte_end":16619,"line_start":54,"line_end":54,"column_start":5,"column_end":76}},{"value":"/ ASCII-encoded Base64 string value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/encoding.rs","byte_start":16624,"byte_end":16662,"line_start":55,"line_end":55,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/encoding.rs","byte_start":17068,"byte_end":17079,"line_start":66,"line_end":66,"column_start":12,"column_end":23},"name":"encoded_len","qualname":"<Encoding>::encoded_len","value":"fn encoded_len<'_>(Self, &'_ [u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of Base64 produced by encoding the given bytes.\n","sig":null,"attributes":[{"value":"/ Get the length of Base64 produced by encoding the given bytes.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/encoding.rs","byte_start":16990,"byte_end":17056,"line_start":65,"line_end":65,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":627},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/ident.rs","byte_start":18942,"byte_end":18947,"line_start":35,"line_end":35,"column_start":12,"column_end":17},"name":"Ident","qualname":"::ident::Ident","value":"","parent":null,"children":[],"decl_id":null,"docs":" Algorithm or parameter identifier.","sig":null,"attributes":[{"value":"/ Algorithm or parameter identifier.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/ident.rs","byte_start":18335,"byte_end":18373,"line_start":22,"line_end":22,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/ident.rs","byte_start":18374,"byte_end":18377,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This type encompasses both the \"function symbolic name\" and \"parameter name\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/ident.rs","byte_start":18378,"byte_end":18458,"line_start":24,"line_end":24,"column_start":1,"column_end":81}},{"value":"/ use cases as described in the [PHC string format specification][1].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/ident.rs","byte_start":18459,"byte_end":18530,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/ident.rs","byte_start":18531,"byte_end":18534,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Constraints","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/ident.rs","byte_start":18535,"byte_end":18552,"line_start":27,"line_end":27,"column_start":1,"column_end":18}},{"value":"/ - ASCII-encoded string consisting of the characters `[a-z0-9-]`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/ident.rs","byte_start":18553,"byte_end":18620,"line_start":28,"line_end":28,"column_start":1,"column_end":68}},{"value":"/   (lowercase letters, digits, and the minus sign)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/ident.rs","byte_start":18621,"byte_end":18674,"line_start":29,"line_end":29,"column_start":1,"column_end":54}},{"value":"/ - Minimum length: 1 ASCII character (i.e. 1-byte)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/ident.rs","byte_start":18675,"byte_end":18728,"line_start":30,"line_end":30,"column_start":1,"column_end":54}},{"value":"/ - Maximum length: 32 ASCII characters (i.e. 32-bytes)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/ident.rs","byte_start":18729,"byte_end":18786,"line_start":31,"line_end":31,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/ident.rs","byte_start":18787,"byte_end":18790,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [1]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/ident.rs","byte_start":18791,"byte_end":18869,"line_start":33,"line_end":33,"column_start":1,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/ident.rs","byte_start":19640,"byte_end":19643,"line_start":52,"line_end":52,"column_start":18,"column_end":21},"name":"new","qualname":"<Ident>::new","value":"const fn new(&'a str) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Parse an [`Ident`] from a string.","sig":null,"attributes":[{"value":"/ Parse an [`Ident`] from a string.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/ident.rs","byte_start":19483,"byte_end":19520,"line_start":48,"line_end":48,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/ident.rs","byte_start":19525,"byte_end":19528,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ String must conform to the constraints given in the type-level","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/ident.rs","byte_start":19533,"byte_end":19599,"line_start":50,"line_end":50,"column_start":5,"column_end":71}},{"value":"/ documentation.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/ident.rs","byte_start":19604,"byte_end":19622,"line_start":51,"line_end":51,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/ident.rs","byte_start":20445,"byte_end":20455,"line_start":78,"line_end":78,"column_start":18,"column_end":28},"name":"new_unwrap","qualname":"<Ident>::new_unwrap","value":"const fn new_unwrap(&'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Parse an [`Ident`] from a string, panicking on parse errors.","sig":null,"attributes":[{"value":"/ Parse an [`Ident`] from a string, panicking on parse errors.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/ident.rs","byte_start":20167,"byte_end":20231,"line_start":73,"line_end":73,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/ident.rs","byte_start":20236,"byte_end":20239,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ This function exists as a workaround for `unwrap` not yet being","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/ident.rs","byte_start":20244,"byte_end":20311,"line_start":75,"line_end":75,"column_start":5,"column_end":72}},{"value":"/ stable in `const fn` contexts, and is intended to allow the result to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/ident.rs","byte_start":20316,"byte_end":20389,"line_start":76,"line_end":76,"column_start":5,"column_end":78}},{"value":"/ be bound to a constant value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/ident.rs","byte_start":20394,"byte_end":20427,"line_start":77,"line_end":77,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/ident.rs","byte_start":20817,"byte_end":20823,"line_start":89,"line_end":89,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Ident>::as_str","value":"fn as_str<'_>(&'_ Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Borrow this ident as a `str`\n","sig":null,"attributes":[{"value":"/ Borrow this ident as a `str`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/ident.rs","byte_start":20773,"byte_end":20805,"line_start":88,"line_end":88,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/ident.rs","byte_start":20911,"byte_end":20917,"line_start":95,"line_end":95,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<Ident as core::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ str","parent":{"krate":1,"index":3160},"children":[],"decl_id":{"krate":1,"index":3162},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/ident.rs","byte_start":21028,"byte_end":21033,"line_start":103,"line_end":103,"column_start":8,"column_end":13},"name":"deref","qualname":"<Ident as core::ops::Deref>::deref","value":"fn deref<'_>(&'_ Self) -> &'_ str","parent":{"krate":1,"index":3486},"children":[],"decl_id":{"krate":1,"index":3488},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/ident.rs","byte_start":21276,"byte_end":21284,"line_start":113,"line_end":113,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Ident as core::convert::TryFrom>::try_from","value":"fn try_from(&'a str) -> Result<Self>","parent":{"krate":1,"index":3176},"children":[],"decl_id":{"krate":1,"index":3179},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/ident.rs","byte_start":21390,"byte_end":21393,"line_start":119,"line_end":119,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Ident as core::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/ident.rs","byte_start":21526,"byte_end":21529,"line_start":125,"line_end":125,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Ident as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10288},"children":[],"decl_id":{"krate":1,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":657},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":27563,"byte_end":27569,"line_start":98,"line_end":98,"column_start":12,"column_end":18},"name":"Output","qualname":"::output::Output","value":"Output {  }","parent":null,"children":[{"krate":0,"index":658},{"krate":0,"index":660},{"krate":0,"index":661}],"decl_id":null,"docs":" Output from password hashing functions, i.e. the \"hash\" or \"digest\"\n as raw bytes.","sig":null,"attributes":[{"value":"/ Output from password hashing functions, i.e. the \"hash\" or \"digest\"","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":22946,"byte_end":23017,"line_start":7,"line_end":7,"column_start":1,"column_end":72}},{"value":"/ as raw bytes.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":23018,"byte_end":23035,"line_start":8,"line_end":8,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":23036,"byte_end":23039,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The [`Output`] type implements the RECOMMENDED best practices described in","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":23040,"byte_end":23118,"line_start":10,"line_end":10,"column_start":1,"column_end":79}},{"value":"/ the [PHC string format specification][1], namely:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":23119,"byte_end":23172,"line_start":11,"line_end":11,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":23173,"byte_end":23176,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ > The hash output, for a verification, must be long enough to make preimage","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":23177,"byte_end":23256,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ > attacks at least as hard as password guessing. To promote wide acceptance,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":23257,"byte_end":23337,"line_start":14,"line_end":14,"column_start":1,"column_end":81}},{"value":"/ > a default output size of 256 bits (32 bytes, encoded as 43 characters) is","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":23338,"byte_end":23417,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ > recommended. Function implementations SHOULD NOT allow outputs of less","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":23418,"byte_end":23494,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ > than 80 bits to be used for password verification.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":23495,"byte_end":23551,"line_start":17,"line_end":17,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":23552,"byte_end":23555,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Recommended length","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":23556,"byte_end":23580,"line_start":19,"line_end":19,"column_start":1,"column_end":25}},{"value":"/ Per the description above, the recommended default length for an [`Output`]","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":23581,"byte_end":23660,"line_start":20,"line_end":20,"column_start":1,"column_end":80}},{"value":"/ of a password hashing function is **32-bytes** (256-bits).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":23661,"byte_end":23723,"line_start":21,"line_end":21,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":23724,"byte_end":23727,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Constraints","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":23728,"byte_end":23745,"line_start":23,"line_end":23,"column_start":1,"column_end":18}},{"value":"/ The above guidelines are interpreted into the following constraints:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":23746,"byte_end":23818,"line_start":24,"line_end":24,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":23819,"byte_end":23822,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ - Minimum length: **10**-bytes (80-bits)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":23823,"byte_end":23867,"line_start":26,"line_end":26,"column_start":1,"column_end":45}},{"value":"/ - Maximum length: **64**-bytes (512-bits)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":23868,"byte_end":23913,"line_start":27,"line_end":27,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":23914,"byte_end":23917,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The specific recommendation of a 64-byte maximum length is taken as a best","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":23918,"byte_end":23996,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/ practice from the hash output guidelines for [Argon2 Encoding][2] given in","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":23997,"byte_end":24075,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"/ the same document:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":24076,"byte_end":24098,"line_start":31,"line_end":31,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":24099,"byte_end":24102,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ > The hash output...length shall be between 12 and 64 bytes (16 and 86","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":24103,"byte_end":24177,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ > characters, respectively). The default output length is 32 bytes","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":24178,"byte_end":24248,"line_start":34,"line_end":34,"column_start":1,"column_end":71}},{"value":"/ > (43 characters).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":24249,"byte_end":24271,"line_start":35,"line_end":35,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":24272,"byte_end":24275,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Based on this guidance, this type enforces an upper bound of 64-bytes","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":24276,"byte_end":24349,"line_start":37,"line_end":37,"column_start":1,"column_end":74}},{"value":"/ as a reasonable maximum, and recommends using 32-bytes.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":24350,"byte_end":24409,"line_start":38,"line_end":38,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":24410,"byte_end":24413,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ # Constant-time comparisons","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":24414,"byte_end":24445,"line_start":40,"line_end":40,"column_start":1,"column_end":32}},{"value":"/ The [`Output`] type impls the [`ConstantTimeEq`] trait from the [`subtle`]","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":24446,"byte_end":24524,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ crate and uses it to perform constant-time comparisons.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":24525,"byte_end":24584,"line_start":42,"line_end":42,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":24585,"byte_end":24588,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ Additionally the [`PartialEq`] and [`Eq`] trait impls for [`Output`] use","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":24589,"byte_end":24665,"line_start":44,"line_end":44,"column_start":1,"column_end":77}},{"value":"/ [`ConstantTimeEq`] when performing comparisons.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":24666,"byte_end":24717,"line_start":45,"line_end":45,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":24718,"byte_end":24721,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ## Attacks on non-constant-time password hash comparisons","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":24722,"byte_end":24783,"line_start":47,"line_end":47,"column_start":1,"column_end":62}},{"value":"/ Comparing password hashes in constant-time is known to mitigate at least","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":24784,"byte_end":24860,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ one [poorly understood attack][3] involving an adversary with the following","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":24861,"byte_end":24940,"line_start":49,"line_end":49,"column_start":1,"column_end":80}},{"value":"/ knowledge/capabilities:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":24941,"byte_end":24968,"line_start":50,"line_end":50,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":24969,"byte_end":24972,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ - full knowledge of what password hashing algorithm is being used","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":24973,"byte_end":25042,"line_start":52,"line_end":52,"column_start":1,"column_end":70}},{"value":"/   including any relevant configurable parameters","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":25043,"byte_end":25095,"line_start":53,"line_end":53,"column_start":1,"column_end":53}},{"value":"/ - knowledge of the salt for a particular victim","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":25096,"byte_end":25147,"line_start":54,"line_end":54,"column_start":1,"column_end":52}},{"value":"/ - ability to accurately measure a timing side-channel on comparisons","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":25148,"byte_end":25220,"line_start":55,"line_end":55,"column_start":1,"column_end":73}},{"value":"/   of the password hash over the network","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":25221,"byte_end":25264,"line_start":56,"line_end":56,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":25265,"byte_end":25268,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ An attacker with the above is able to perform an offline computation of","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":25269,"byte_end":25344,"line_start":58,"line_end":58,"column_start":1,"column_end":76}},{"value":"/ the hash for any chosen password in such a way that it will match the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":25345,"byte_end":25418,"line_start":59,"line_end":59,"column_start":1,"column_end":74}},{"value":"/ hash computed by the server.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":25419,"byte_end":25451,"line_start":60,"line_end":60,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":25452,"byte_end":25455,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ As noted above, they also measure timing variability in the server's","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":25456,"byte_end":25528,"line_start":62,"line_end":62,"column_start":1,"column_end":73}},{"value":"/ comparison of the hash it computes for a given password and a target hash","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":25529,"byte_end":25606,"line_start":63,"line_end":63,"column_start":1,"column_end":78}},{"value":"/ the attacker is trying to learn.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":25607,"byte_end":25643,"line_start":64,"line_end":64,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":25644,"byte_end":25647,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ When the attacker observes a hash comparison that takes longer than their","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":25648,"byte_end":25725,"line_start":66,"line_end":66,"column_start":1,"column_end":78}},{"value":"/ previous attempts, they learn that they guessed another byte in the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":25726,"byte_end":25797,"line_start":67,"line_end":67,"column_start":1,"column_end":72}},{"value":"/ password hash correctly. They can leverage repeated measurements and","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":25798,"byte_end":25870,"line_start":68,"line_end":68,"column_start":1,"column_end":73}},{"value":"/ observations with different candidate passwords to learn the password","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":25871,"byte_end":25944,"line_start":69,"line_end":69,"column_start":1,"column_end":74}},{"value":"/ hash a byte-at-a-time in a manner similar to other such timing side-channel","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":25945,"byte_end":26024,"line_start":70,"line_end":70,"column_start":1,"column_end":80}},{"value":"/ attacks.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":26025,"byte_end":26037,"line_start":71,"line_end":71,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":26038,"byte_end":26041,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ The attack may seem somewhat counterintuitive since learning prefixes of a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":26042,"byte_end":26120,"line_start":73,"line_end":73,"column_start":1,"column_end":79}},{"value":"/ password hash does not reveal any additional information about the password","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":26121,"byte_end":26200,"line_start":74,"line_end":74,"column_start":1,"column_end":80}},{"value":"/ itself. However, the above can be combined with an offline dictionary","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":26201,"byte_end":26274,"line_start":75,"line_end":75,"column_start":1,"column_end":74}},{"value":"/ attack where the attacker is able to determine candidate passwords to send","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":26275,"byte_end":26353,"line_start":76,"line_end":76,"column_start":1,"column_end":79}},{"value":"/ to the server by performing a brute force search offline and selecting","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":26354,"byte_end":26428,"line_start":77,"line_end":77,"column_start":1,"column_end":75}},{"value":"/ candidate passwords whose hashes match the portion of the prefix they have","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":26429,"byte_end":26507,"line_start":78,"line_end":78,"column_start":1,"column_end":79}},{"value":"/ learned so far.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":26508,"byte_end":26527,"line_start":79,"line_end":79,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":26528,"byte_end":26531,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ As the attacker learns a longer and longer prefix of the password hash,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":26532,"byte_end":26607,"line_start":81,"line_end":81,"column_start":1,"column_end":76}},{"value":"/ they are able to more effectively eliminate candidate passwords offline as","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":26608,"byte_end":26686,"line_start":82,"line_end":82,"column_start":1,"column_end":79}},{"value":"/ part of a dictionary attack, until they eventually guess the correct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":26687,"byte_end":26759,"line_start":83,"line_end":83,"column_start":1,"column_end":73}},{"value":"/ password or exhaust their set of candidate passwords.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":26760,"byte_end":26817,"line_start":84,"line_end":84,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":26818,"byte_end":26821,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ ## Mitigations","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":26822,"byte_end":26840,"line_start":86,"line_end":86,"column_start":1,"column_end":19}},{"value":"/ While we have taken care to ensure password hashes are compared in constant","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":26841,"byte_end":26920,"line_start":87,"line_end":87,"column_start":1,"column_end":80}},{"value":"/ time, we would also suggest preventing such attacks by using randomly","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":26921,"byte_end":26994,"line_start":88,"line_end":88,"column_start":1,"column_end":74}},{"value":"/ generated salts and keeping those salts secret.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":26995,"byte_end":27046,"line_start":89,"line_end":89,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":27047,"byte_end":27050,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ The [`SaltString::generate`][`crate::SaltString::generate`] function can be","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":27051,"byte_end":27130,"line_start":91,"line_end":91,"column_start":1,"column_end":80}},{"value":"/ used to generate random high-entropy salt values.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":27131,"byte_end":27184,"line_start":92,"line_end":92,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":27185,"byte_end":27188,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ [1]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md#function-duties","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":27189,"byte_end":27283,"line_start":94,"line_end":94,"column_start":1,"column_end":95}},{"value":"/ [2]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md#argon2-encoding","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":27284,"byte_end":27378,"line_start":95,"line_end":95,"column_start":1,"column_end":95}},{"value":"/ [3]: https://web.archive.org/web/20130208100210/http://security-assessment.com/files/documents/presentations/TimingAttackPresentation2012.pdf","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":27379,"byte_end":27524,"line_start":96,"line_end":96,"column_start":1,"column_end":146}}]},{"kind":"Const","id":{"krate":0,"index":122},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":27964,"byte_end":27974,"line_start":112,"line_end":112,"column_start":15,"column_end":25},"name":"MIN_LENGTH","qualname":"::output::Output::MIN_LENGTH","value":"usize","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Minimum length of a [`Output`] string: 10-bytes.\n","sig":null,"attributes":[{"value":"/ Minimum length of a [`Output`] string: 10-bytes.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":27897,"byte_end":27949,"line_start":111,"line_end":111,"column_start":5,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":123},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":28142,"byte_end":28152,"line_start":117,"line_end":117,"column_start":15,"column_end":25},"name":"MAX_LENGTH","qualname":"::output::Output::MAX_LENGTH","value":"usize","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Maximum length of [`Output`] string: 64-bytes.","sig":null,"attributes":[{"value":"/ Maximum length of [`Output`] string: 64-bytes.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":27993,"byte_end":28043,"line_start":114,"line_end":114,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":28048,"byte_end":28051,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ See type-level documentation about [`Output`] for more information.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":28056,"byte_end":28127,"line_start":116,"line_end":116,"column_start":5,"column_end":76}}]},{"kind":"Const","id":{"krate":0,"index":124},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":28290,"byte_end":28304,"line_start":121,"line_end":121,"column_start":15,"column_end":29},"name":"B64_MAX_LENGTH","qualname":"::output::Output::B64_MAX_LENGTH","value":"usize","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" Maximum length of [`Output`] when encoded as B64 string: 86-bytes\n (i.e. 86 ASCII characters)\n","sig":null,"attributes":[{"value":"/ Maximum length of [`Output`] when encoded as B64 string: 86-bytes","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":28171,"byte_end":28240,"line_start":119,"line_end":119,"column_start":5,"column_end":74}},{"value":"/ (i.e. 86 ASCII characters)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":28245,"byte_end":28275,"line_start":120,"line_end":120,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":28514,"byte_end":28517,"line_start":125,"line_end":125,"column_start":12,"column_end":15},"name":"new","qualname":"<Output>::new","value":"fn new<'_>(&'_ [u8]) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a [`Output`] from the given byte slice, validating it according\n to [`Output::MIN_LENGTH`] and [`Output::MAX_LENGTH`] restrictions.\n","sig":null,"attributes":[{"value":"/ Create a [`Output`] from the given byte slice, validating it according","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":28353,"byte_end":28427,"line_start":123,"line_end":123,"column_start":5,"column_end":79}},{"value":"/ to [`Output::MIN_LENGTH`] and [`Output::MAX_LENGTH`] restrictions.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":28432,"byte_end":28502,"line_start":124,"line_end":124,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":28866,"byte_end":28883,"line_start":135,"line_end":135,"column_start":12,"column_end":29},"name":"new_with_encoding","qualname":"<Output>::new_with_encoding","value":"fn new_with_encoding<'_>(&'_ [u8], Encoding) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a [`Output`] from the given byte slice and [`Encoding`],\n validating it according to [`Output::MIN_LENGTH`] and\n [`Output::MAX_LENGTH`] restrictions.\n","sig":null,"attributes":[{"value":"/ Create a [`Output`] from the given byte slice and [`Encoding`],","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":28680,"byte_end":28747,"line_start":132,"line_end":132,"column_start":5,"column_end":72}},{"value":"/ validating it according to [`Output::MIN_LENGTH`] and","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":28752,"byte_end":28809,"line_start":133,"line_end":133,"column_start":5,"column_end":62}},{"value":"/ [`Output::MAX_LENGTH`] restrictions.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":28814,"byte_end":28854,"line_start":134,"line_end":134,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":29374,"byte_end":29383,"line_start":147,"line_end":147,"column_start":12,"column_end":21},"name":"init_with","qualname":"<Output>::init_with","value":"fn init_with<F>(usize, F) -> Result<Self> where\nF: for<'_> FnOnce(&'_ mut [u8]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Initialize an [`Output`] using the provided method, which is given\n a mutable byte slice into which it should write the output.","sig":null,"attributes":[{"value":"/ Initialize an [`Output`] using the provided method, which is given","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":29046,"byte_end":29116,"line_start":141,"line_end":141,"column_start":5,"column_end":75}},{"value":"/ a mutable byte slice into which it should write the output.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":29121,"byte_end":29184,"line_start":142,"line_end":142,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":29189,"byte_end":29192,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ The `output_size` (in bytes) must be known in advance, as well as at","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":29197,"byte_end":29269,"line_start":144,"line_end":144,"column_start":5,"column_end":77}},{"value":"/ least [`Output::MIN_LENGTH`] bytes and at most [`Output::MAX_LENGTH`]","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":29274,"byte_end":29347,"line_start":145,"line_end":145,"column_start":5,"column_end":78}},{"value":"/ bytes.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":29352,"byte_end":29362,"line_start":146,"line_end":146,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":29978,"byte_end":29986,"line_start":170,"line_end":170,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Output>::as_bytes","value":"fn as_bytes<'_>(&'_ Self) -> &'_ [u8]","parent":null,"children":[],"decl_id":null,"docs":" Borrow the output value as a byte slice.\n","sig":null,"attributes":[{"value":"/ Borrow the output value as a byte slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":29922,"byte_end":29966,"line_start":169,"line_end":169,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":30127,"byte_end":30135,"line_start":175,"line_end":175,"column_start":12,"column_end":20},"name":"encoding","qualname":"<Output>::encoding","value":"fn encoding<'_>(&'_ Self) -> Encoding","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Encoding`] that this [`Output`] is serialized with.\n","sig":null,"attributes":[{"value":"/ Get the [`Encoding`] that this [`Output`] is serialized with.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":30050,"byte_end":30115,"line_start":174,"line_end":174,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":30257,"byte_end":30260,"line_start":180,"line_end":180,"column_start":12,"column_end":15},"name":"len","qualname":"<Output>::len","value":"fn len<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of the output value as a byte slice.\n","sig":null,"attributes":[{"value":"/ Get the length of the output value as a byte slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":30190,"byte_end":30245,"line_start":179,"line_end":179,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":30455,"byte_end":30465,"line_start":186,"line_end":186,"column_start":12,"column_end":22},"name":"b64_decode","qualname":"<Output>::b64_decode","value":"fn b64_decode<'_>(&'_ str) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Parse B64-encoded [`Output`], i.e. using the PHC string\n specification's restricted interpretation of Base64.\n","sig":null,"attributes":[{"value":"/ Parse B64-encoded [`Output`], i.e. using the PHC string","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":30323,"byte_end":30382,"line_start":184,"line_end":184,"column_start":5,"column_end":64}},{"value":"/ specification's restricted interpretation of Base64.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":30387,"byte_end":30443,"line_start":185,"line_end":185,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":30761,"byte_end":30771,"line_start":194,"line_end":194,"column_start":12,"column_end":22},"name":"b64_encode","qualname":"<Output>::b64_encode","value":"fn b64_encode<'a, '_>(&'_ Self, &'a mut [u8]) -> Result<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Write B64-encoded [`Output`] to the provided buffer, returning\n a sub-slice containing the encoded data.","sig":null,"attributes":[{"value":"/ Write B64-encoded [`Output`] to the provided buffer, returning","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":30551,"byte_end":30617,"line_start":190,"line_end":190,"column_start":5,"column_end":71}},{"value":"/ a sub-slice containing the encoded data.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":30622,"byte_end":30666,"line_start":191,"line_end":191,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":30671,"byte_end":30674,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ Returns an error if the buffer is too short to contain the output.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":30679,"byte_end":30749,"line_start":193,"line_end":193,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":30953,"byte_end":30959,"line_start":199,"line_end":199,"column_start":12,"column_end":18},"name":"decode","qualname":"<Output>::decode","value":"fn decode<'_>(&'_ str, Encoding) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Decode the given input string using the specified [`Encoding`].\n","sig":null,"attributes":[{"value":"/ Decode the given input string using the specified [`Encoding`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":30874,"byte_end":30941,"line_start":198,"line_end":198,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":31308,"byte_end":31314,"line_start":208,"line_end":208,"column_start":12,"column_end":18},"name":"encode","qualname":"<Output>::encode","value":"fn encode<'a, '_>(&'_ Self, &'a mut [u8], Encoding) -> Result<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Encode this [`Output`] using the specified [`Encoding`].\n","sig":null,"attributes":[{"value":"/ Encode this [`Output`] using the specified [`Encoding`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":31236,"byte_end":31296,"line_start":207,"line_end":207,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":31516,"byte_end":31523,"line_start":213,"line_end":213,"column_start":12,"column_end":19},"name":"b64_len","qualname":"<Output>::b64_len","value":"fn b64_len<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of this [`Output`] when encoded as B64.\n","sig":null,"attributes":[{"value":"/ Get the length of this [`Output`] when encoded as B64.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":31446,"byte_end":31504,"line_start":212,"line_end":212,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":31637,"byte_end":31643,"line_start":219,"line_end":219,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<Output as core::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ [u8]","parent":{"krate":1,"index":3160},"children":[],"decl_id":{"krate":1,"index":3162},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":31735,"byte_end":31740,"line_start":225,"line_end":225,"column_start":8,"column_end":13},"name":"ct_eq","qualname":"<Output as subtle::ConstantTimeEq>::ct_eq","value":"fn ct_eq<'_, '_>(&'_ Self, &'_ Self) -> Choice","parent":{"krate":25,"index":57},"children":[],"decl_id":{"krate":25,"index":58},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":31883,"byte_end":31891,"line_start":233,"line_end":233,"column_start":8,"column_end":16},"name":"from_str","qualname":"<Output as core::str::FromStr>::from_str","value":"fn from_str<'_>(&'_ str) -> Result<Self>","parent":{"krate":1,"index":12989},"children":[],"decl_id":{"krate":1,"index":12991},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":31991,"byte_end":31993,"line_start":239,"line_end":239,"column_start":8,"column_end":10},"name":"eq","qualname":"<Output as core::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ Self) -> bool","parent":{"krate":1,"index":2915},"children":[],"decl_id":{"krate":1,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":32132,"byte_end":32140,"line_start":247,"line_end":247,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Output as core::convert::TryFrom>::try_from","value":"fn try_from<'_>(&'_ [u8]) -> Result<Output>","parent":{"krate":1,"index":3176},"children":[],"decl_id":{"krate":1,"index":3179},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":32247,"byte_end":32250,"line_start":253,"line_end":253,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Output as core::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":32541,"byte_end":32544,"line_start":262,"line_end":262,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Output as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10288},"children":[],"decl_id":{"krate":1,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":670},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":35093,"byte_end":35105,"line_start":44,"line_end":44,"column_start":12,"column_end":24},"name":"ParamsString","qualname":"::params::ParamsString","value":"","parent":null,"children":[],"decl_id":null,"docs":" Algorithm parameter string.","sig":null,"attributes":[{"value":"/ Algorithm parameter string.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":34605,"byte_end":34636,"line_start":30,"line_end":30,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":34637,"byte_end":34640,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ The [PHC string format specification][1] defines a set of optional","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":34641,"byte_end":34711,"line_start":32,"line_end":32,"column_start":1,"column_end":71}},{"value":"/ algorithm-specific name/value pairs which can be encoded into a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":34712,"byte_end":34779,"line_start":33,"line_end":33,"column_start":1,"column_end":68}},{"value":"/ PHC-formatted parameter string as follows:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":34780,"byte_end":34826,"line_start":34,"line_end":34,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":34827,"byte_end":34830,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":34831,"byte_end":34842,"line_start":36,"line_end":36,"column_start":1,"column_end":12}},{"value":"/ $<param>=<value>(,<param>=<value>)*","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":34843,"byte_end":34882,"line_start":37,"line_end":37,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":34883,"byte_end":34890,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":34891,"byte_end":34894,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ This type represents that set of parameters.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":34895,"byte_end":34943,"line_start":40,"line_end":40,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":34944,"byte_end":34947,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [1]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md#specification","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":34948,"byte_end":35040,"line_start":42,"line_end":42,"column_start":1,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":35190,"byte_end":35193,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"new","qualname":"<ParamsString>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new empty [`ParamsString`].\n","sig":null,"attributes":[{"value":"/ Create new empty [`ParamsString`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":35140,"byte_end":35178,"line_start":47,"line_end":47,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":35328,"byte_end":35341,"line_start":53,"line_end":53,"column_start":12,"column_end":25},"name":"add_b64_bytes","qualname":"<ParamsString>::add_b64_bytes","value":"fn add_b64_bytes<'a, '_, '_,\nimpl TryInto<Ident<'a>>>(&'_ mut Self, impl TryInto<Ident<'a>>, &'_ [u8])\n-> Result<()> where impl TryInto<Ident<'a>>: TryInto<Ident>","parent":null,"children":[],"decl_id":null,"docs":" Add the given byte value to the [`ParamsString`], encoding it as \"B64\".\n","sig":null,"attributes":[{"value":"/ Add the given byte value to the [`ParamsString`], encoding it as \"B64\".","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":35241,"byte_end":35316,"line_start":52,"line_end":52,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":36199,"byte_end":36210,"line_start":80,"line_end":80,"column_start":12,"column_end":23},"name":"add_decimal","qualname":"<ParamsString>::add_decimal","value":"fn add_decimal<'a, '_,\nimpl TryInto<Ident<'a>>>(&'_ mut Self, impl TryInto<Ident<'a>>, Decimal)\n-> Result<()> where impl TryInto<Ident<'a>>: TryInto<Ident>","parent":null,"children":[],"decl_id":null,"docs":" Add a key/value pair with a decimal value to the [`ParamsString`].\n","sig":null,"attributes":[{"value":"/ Add a key/value pair with a decimal value to the [`ParamsString`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":36117,"byte_end":36187,"line_start":79,"line_end":79,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":36485,"byte_end":36492,"line_start":86,"line_end":86,"column_start":12,"column_end":19},"name":"add_str","qualname":"<ParamsString>::add_str","value":"fn add_str<'a, '_, impl TryInto<Ident<'a>>,\nimpl TryInto<Value<'a>>>(&'_ mut Self, impl TryInto<Ident<'a>>,\nimpl TryInto<Value<'a>>) -> Result<()> where\nimpl TryInto<Ident<'a>>: TryInto<Ident>,\nimpl TryInto<Value<'a>>: TryInto<Value>","parent":null,"children":[],"decl_id":null,"docs":" Add a key/value pair with a string value to the [`ParamsString`].\n","sig":null,"attributes":[{"value":"/ Add a key/value pair with a string value to the [`ParamsString`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":36404,"byte_end":36473,"line_start":85,"line_end":85,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":36944,"byte_end":36952,"line_start":101,"line_end":101,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<ParamsString>::as_bytes","value":"fn as_bytes<'_>(&'_ Self) -> &'_ [u8]","parent":null,"children":[],"decl_id":null,"docs":" Borrow the contents of this [`ParamsString`] as a byte slice.\n","sig":null,"attributes":[{"value":"/ Borrow the contents of this [`ParamsString`] as a byte slice.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":36867,"byte_end":36932,"line_start":100,"line_end":100,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":37087,"byte_end":37093,"line_start":106,"line_end":106,"column_start":12,"column_end":18},"name":"as_str","qualname":"<ParamsString>::as_str","value":"fn as_str<'_>(&'_ Self) -> &'_ str","parent":null,"children":[],"decl_id":null,"docs":" Borrow the contents of this [`ParamsString`] as a `str`.\n","sig":null,"attributes":[{"value":"/ Borrow the contents of this [`ParamsString`] as a `str`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":37015,"byte_end":37075,"line_start":105,"line_end":105,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":37232,"byte_end":37235,"line_start":111,"line_end":111,"column_start":12,"column_end":15},"name":"len","qualname":"<ParamsString>::len","value":"fn len<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the count of the number ASCII characters in this [`ParamsString`].\n","sig":null,"attributes":[{"value":"/ Get the count of the number ASCII characters in this [`ParamsString`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":37146,"byte_end":37220,"line_start":110,"line_end":110,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":37341,"byte_end":37349,"line_start":116,"line_end":116,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<ParamsString>::is_empty","value":"fn is_empty<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this set of parameters empty?\n","sig":null,"attributes":[{"value":"/ Is this set of parameters empty?","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":37293,"byte_end":37329,"line_start":115,"line_end":115,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":37446,"byte_end":37450,"line_start":121,"line_end":121,"column_start":12,"column_end":16},"name":"iter","qualname":"<ParamsString>::iter","value":"fn iter<'_>(&'_ Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Iterate over the parameters.\n","sig":null,"attributes":[{"value":"/ Iterate over the parameters.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":37402,"byte_end":37434,"line_start":120,"line_end":120,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":37566,"byte_end":37569,"line_start":126,"line_end":126,"column_start":12,"column_end":15},"name":"get","qualname":"<ParamsString>::get","value":"fn get<'a, '_, impl TryInto<Ident<'a>>>(&'_ Self, impl TryInto<Ident<'a>>)\n-> Option<Value> where impl TryInto<Ident<'a>>: TryInto<Ident>","parent":null,"children":[],"decl_id":null,"docs":" Get a parameter [`Value`] by name.\n","sig":null,"attributes":[{"value":"/ Get a parameter [`Value`] by name.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":37516,"byte_end":37554,"line_start":125,"line_end":125,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":37865,"byte_end":37872,"line_start":139,"line_end":139,"column_start":12,"column_end":19},"name":"get_str","qualname":"<ParamsString>::get_str","value":"fn get_str<'a, '_, impl TryInto<Ident<'a>>>(&'_ Self, impl TryInto<Ident<'a>>)\n-> Option<&'_ str> where impl TryInto<Ident<'a>>: TryInto<Ident>","parent":null,"children":[],"decl_id":null,"docs":" Get a parameter as a `str`.\n","sig":null,"attributes":[{"value":"/ Get a parameter as a `str`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":37822,"byte_end":37853,"line_start":138,"line_end":138,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":38107,"byte_end":38118,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"get_decimal","qualname":"<ParamsString>::get_decimal","value":"fn get_decimal<'a, '_,\nimpl TryInto<Ident<'a>>>(&'_ Self, impl TryInto<Ident<'a>>) -> Option<Decimal>\nwhere impl TryInto<Ident<'a>>: TryInto<Ident>","parent":null,"children":[],"decl_id":null,"docs":" Get a parameter as a [`Decimal`].","sig":null,"attributes":[{"value":"/ Get a parameter as a [`Decimal`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":37995,"byte_end":38032,"line_start":143,"line_end":143,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":38037,"byte_end":38040,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ See [`Value::decimal`] for format information.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":38045,"byte_end":38095,"line_start":145,"line_end":145,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":251},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":38952,"byte_end":38960,"line_start":176,"line_end":176,"column_start":8,"column_end":16},"name":"from_str","qualname":"<ParamsString as core::str::FromStr>::from_str","value":"fn from_str<'_>(&'_ str) -> Result<Self>","parent":{"krate":1,"index":12989},"children":[],"decl_id":{"krate":1,"index":12991},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":40088,"byte_end":40097,"line_start":215,"line_end":215,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<ParamsString as core::iter::FromIterator>::from_iter","value":"fn from_iter<I>(I) -> Self where I: IntoIterator<Item = Pair>","parent":{"krate":1,"index":8394},"children":[],"decl_id":{"krate":1,"index":8396},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":40400,"byte_end":40403,"line_start":230,"line_end":230,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ParamsString as core::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":40542,"byte_end":40545,"line_start":236,"line_end":236,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ParamsString as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10288},"children":[],"decl_id":{"krate":1,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":262},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":40746,"byte_end":40750,"line_start":242,"line_end":242,"column_start":12,"column_end":16},"name":"Iter","qualname":"::params::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":264}],"decl_id":null,"docs":" Iterator over algorithm parameters stored in a [`ParamsString`] struct.\n","sig":null,"attributes":[{"value":"/ Iterator over algorithm parameters stored in a [`ParamsString`] struct.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":40659,"byte_end":40734,"line_start":241,"line_end":241,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":271},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":41136,"byte_end":41140,"line_start":262,"line_end":262,"column_start":8,"column_end":12},"name":"next","qualname":"<Iter as core::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Pair>","parent":{"krate":1,"index":8596},"children":[],"decl_id":{"krate":1,"index":8598},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":696},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":50110,"byte_end":50114,"line_start":79,"line_end":79,"column_start":12,"column_end":16},"name":"Salt","qualname":"::salt::Salt","value":"","parent":null,"children":[],"decl_id":null,"docs":" Salt string.","sig":null,"attributes":[{"value":"/ Salt string.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":46875,"byte_end":46891,"line_start":14,"line_end":14,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":46892,"byte_end":46895,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ In password hashing, a \"salt\" is an additional value used to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":46896,"byte_end":46960,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/ personalize/tweak the output of a password hashing function for a given","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":46961,"byte_end":47036,"line_start":17,"line_end":17,"column_start":1,"column_end":76}},{"value":"/ input password.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":47037,"byte_end":47056,"line_start":18,"line_end":18,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":47057,"byte_end":47060,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Salts help defend against attacks based on precomputed tables of hashed","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":47061,"byte_end":47136,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ passwords, i.e. \"[rainbow tables][1]\".","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":47137,"byte_end":47179,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":47180,"byte_end":47183,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The [`Salt`] type implements the RECOMMENDED best practices for salts","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":47184,"byte_end":47257,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/ described in the [PHC string format specification][2], namely:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":47258,"byte_end":47324,"line_start":24,"line_end":24,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":47325,"byte_end":47328,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ > - Maximum lengths for salt, output and parameter values are meant to help","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":47329,"byte_end":47408,"line_start":26,"line_end":26,"column_start":1,"column_end":80}},{"value":"/ >   consumer implementations, in particular written in C and using","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":47409,"byte_end":47479,"line_start":27,"line_end":27,"column_start":1,"column_end":71}},{"value":"/ >   stack-allocated buffers. These buffers must account for the worst case,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":47480,"byte_end":47559,"line_start":28,"line_end":28,"column_start":1,"column_end":80}},{"value":"/ >   i.e. the maximum defined length. Therefore, keep these lengths low.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":47560,"byte_end":47635,"line_start":29,"line_end":29,"column_start":1,"column_end":76}},{"value":"/ > - The role of salts is to achieve uniqueness. A random salt is fine for","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":47636,"byte_end":47713,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ >   that as long as its length is sufficient; a 16-byte salt would work well","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":47714,"byte_end":47794,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/ >   (by definition, UUID are very good salts, and they encode over exactly","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":47795,"byte_end":47873,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ >   16 bytes). 16 bytes encode as 22 characters in B64. Functions should","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":47874,"byte_end":47950,"line_start":33,"line_end":33,"column_start":1,"column_end":77}},{"value":"/ >   disallow salt values that are too small for security (4 bytes should be","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":47951,"byte_end":48030,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ >   viewed as an absolute minimum).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":48031,"byte_end":48070,"line_start":35,"line_end":35,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":48071,"byte_end":48074,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Recommended length","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":48075,"byte_end":48099,"line_start":37,"line_end":37,"column_start":1,"column_end":25}},{"value":"/ The recommended default length for a salt string is **16-bytes** (128-bits).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":48100,"byte_end":48180,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":48181,"byte_end":48184,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ See [`Salt::RECOMMENDED_LENGTH`] for more information.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":48185,"byte_end":48243,"line_start":40,"line_end":40,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":48244,"byte_end":48247,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Constraints","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":48248,"byte_end":48265,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/ Salt strings are constrained to the following set of characters per the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":48266,"byte_end":48341,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"/ PHC spec:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":48342,"byte_end":48355,"line_start":44,"line_end":44,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":48356,"byte_end":48359,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ > The salt consists in a sequence of characters in: `[a-zA-Z0-9/+.-]`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":48360,"byte_end":48433,"line_start":46,"line_end":46,"column_start":1,"column_end":74}},{"value":"/ > (lowercase letters, uppercase letters, digits, /, +, . and -).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":48434,"byte_end":48502,"line_start":47,"line_end":47,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":48503,"byte_end":48506,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Additionally the following length restrictions are enforced based on the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":48507,"byte_end":48583,"line_start":49,"line_end":49,"column_start":1,"column_end":77}},{"value":"/ guidelines from the spec:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":48584,"byte_end":48613,"line_start":50,"line_end":50,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":48614,"byte_end":48617,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ - Minimum length: **4**-bytes","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":48618,"byte_end":48651,"line_start":52,"line_end":52,"column_start":1,"column_end":34}},{"value":"/ - Maximum length: **64**-bytes","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":48652,"byte_end":48686,"line_start":53,"line_end":53,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":48687,"byte_end":48690,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ A maximum length is enforced based on the above recommendation for","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":48691,"byte_end":48761,"line_start":55,"line_end":55,"column_start":1,"column_end":71}},{"value":"/ supporting stack-allocated buffers (which this library uses), and the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":48762,"byte_end":48835,"line_start":56,"line_end":56,"column_start":1,"column_end":74}},{"value":"/ specific determination of 64-bytes is taken as a best practice from the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":48836,"byte_end":48911,"line_start":57,"line_end":57,"column_start":1,"column_end":76}},{"value":"/ [Argon2 Encoding][3] specification in the same document:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":48912,"byte_end":48972,"line_start":58,"line_end":58,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":48973,"byte_end":48976,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ > The length in bytes of the salt is between 8 and 64 bytes<sup>†</sup>, thus","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":48977,"byte_end":49060,"line_start":60,"line_end":60,"column_start":1,"column_end":82}},{"value":"/ > yielding a length in characters between 11 and 64 characters (and that","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":49061,"byte_end":49137,"line_start":61,"line_end":61,"column_start":1,"column_end":77}},{"value":"/ > length is never equal to 1 modulo 4). The default byte length of the salt","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":49138,"byte_end":49217,"line_start":62,"line_end":62,"column_start":1,"column_end":80}},{"value":"/ > is 16 bytes (22 characters in B64 encoding). An encoded UUID, or a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":49218,"byte_end":49290,"line_start":63,"line_end":63,"column_start":1,"column_end":73}},{"value":"/ > sequence of 16 bytes produced with a cryptographically strong PRNG, are","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":49291,"byte_end":49368,"line_start":64,"line_end":64,"column_start":1,"column_end":78}},{"value":"/ > appropriate salt values.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":49369,"byte_end":49399,"line_start":65,"line_end":65,"column_start":1,"column_end":31}},{"value":"/ >","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":49400,"byte_end":49405,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"/ > <sup>†</sup>The Argon2 specification states that the salt can be much longer, up","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":49406,"byte_end":49494,"line_start":67,"line_end":67,"column_start":1,"column_end":87}},{"value":"/ > to 2^32-1 bytes, but this makes little sense for password hashing.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":49495,"byte_end":49567,"line_start":68,"line_end":68,"column_start":1,"column_end":73}},{"value":"/ > Specifying a relatively small maximum length allows for parsing with a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":49568,"byte_end":49644,"line_start":69,"line_end":69,"column_start":1,"column_end":77}},{"value":"/ > stack allocated buffer.)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":49645,"byte_end":49675,"line_start":70,"line_end":70,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":49676,"byte_end":49679,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ Based on this guidance, this type enforces an upper bound of 64-bytes","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":49680,"byte_end":49753,"line_start":72,"line_end":72,"column_start":1,"column_end":74}},{"value":"/ as a reasonable maximum, and recommends using 16-bytes.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":49754,"byte_end":49813,"line_start":73,"line_end":73,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":49814,"byte_end":49817,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ [1]: https://en.wikipedia.org/wiki/Rainbow_table","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":49818,"byte_end":49870,"line_start":75,"line_end":75,"column_start":1,"column_end":53}},{"value":"/ [2]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md#function-duties","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":49871,"byte_end":49965,"line_start":76,"line_end":76,"column_start":1,"column_end":95}},{"value":"/ [3]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md#argon2-encoding","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":49966,"byte_end":50060,"line_start":77,"line_end":77,"column_start":1,"column_end":95}}]},{"kind":"Const","id":{"krate":0,"index":317},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":50259,"byte_end":50269,"line_start":84,"line_end":84,"column_start":15,"column_end":25},"name":"MIN_LENGTH","qualname":"::salt::Salt::<'a>::MIN_LENGTH","value":"usize","parent":{"krate":0,"index":315},"children":[],"decl_id":null,"docs":" Minimum length of a [`Salt`] string: 4-bytes.\n","sig":null,"attributes":[{"value":"/ Minimum length of a [`Salt`] string: 4-bytes.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":50195,"byte_end":50244,"line_start":83,"line_end":83,"column_start":5,"column_end":54}}]},{"kind":"Const","id":{"krate":0,"index":318},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":50434,"byte_end":50444,"line_start":89,"line_end":89,"column_start":15,"column_end":25},"name":"MAX_LENGTH","qualname":"::salt::Salt::<'a>::MAX_LENGTH","value":"usize","parent":{"krate":0,"index":315},"children":[],"decl_id":null,"docs":" Maximum length of a [`Salt`] string: 64-bytes.","sig":null,"attributes":[{"value":"/ Maximum length of a [`Salt`] string: 64-bytes.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":50287,"byte_end":50337,"line_start":86,"line_end":86,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":50342,"byte_end":50345,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ See type-level documentation about [`Salt`] for more information.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":50350,"byte_end":50419,"line_start":88,"line_end":88,"column_start":5,"column_end":74}}]},{"kind":"Const","id":{"krate":0,"index":319},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":51060,"byte_end":51078,"line_start":101,"line_end":101,"column_start":15,"column_end":33},"name":"RECOMMENDED_LENGTH","qualname":"::salt::Salt::<'a>::RECOMMENDED_LENGTH","value":"usize","parent":{"krate":0,"index":315},"children":[],"decl_id":null,"docs":" Recommended length of a salt: 16-bytes.","sig":null,"attributes":[{"value":"/ Recommended length of a salt: 16-bytes.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":50463,"byte_end":50506,"line_start":91,"line_end":91,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":50511,"byte_end":50514,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This recommendation comes from the [PHC string format specification]:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":50519,"byte_end":50592,"line_start":93,"line_end":93,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":50597,"byte_end":50600,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ > The role of salts is to achieve uniqueness. A *random* salt is fine","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":50605,"byte_end":50678,"line_start":95,"line_end":95,"column_start":5,"column_end":78}},{"value":"/ > for that as long as its length is sufficient; a 16-byte salt would","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":50683,"byte_end":50755,"line_start":96,"line_end":96,"column_start":5,"column_end":77}},{"value":"/ > work well (by definition, UUID are very good salts, and they encode","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":50760,"byte_end":50833,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ > over exactly 16 bytes). 16 bytes encode as 22 characters in B64.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":50838,"byte_end":50908,"line_start":98,"line_end":98,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":50913,"byte_end":50916,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ [PHC string format specification]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md#function-duties","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":50921,"byte_end":51045,"line_start":100,"line_end":100,"column_start":5,"column_end":129}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":51254,"byte_end":51257,"line_start":105,"line_end":105,"column_start":12,"column_end":15},"name":"new","qualname":"<Salt>::new","value":"fn new(&'a str) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a [`Salt`] from the given `str`, validating it according to\n [`Salt::MIN_LENGTH`] and [`Salt::MAX_LENGTH`] length restrictions.\n","sig":null,"attributes":[{"value":"/ Create a [`Salt`] from the given `str`, validating it according to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":51097,"byte_end":51167,"line_start":103,"line_end":103,"column_start":5,"column_end":75}},{"value":"/ [`Salt::MIN_LENGTH`] and [`Salt::MAX_LENGTH`] length restrictions.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":51172,"byte_end":51242,"line_start":104,"line_end":104,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":52069,"byte_end":52079,"line_start":127,"line_end":127,"column_start":12,"column_end":22},"name":"b64_decode","qualname":"<Salt>::b64_decode","value":"fn b64_decode<'b, '_>(&'_ Self, &'b mut [u8]) -> Result<&'b [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to decode a B64-encoded [`Salt`], writing the decoded result\n into the provided buffer, and returning a slice of the buffer\n containing the decoded result on success.","sig":null,"attributes":[{"value":"/ Attempt to decode a B64-encoded [`Salt`], writing the decoded result","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":51758,"byte_end":51830,"line_start":122,"line_end":122,"column_start":5,"column_end":77}},{"value":"/ into the provided buffer, and returning a slice of the buffer","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":51835,"byte_end":51900,"line_start":123,"line_end":123,"column_start":5,"column_end":70}},{"value":"/ containing the decoded result on success.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":51905,"byte_end":51950,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":51955,"byte_end":51958,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ [1]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md#argon2-encoding","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":51963,"byte_end":52057,"line_start":126,"line_end":126,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":52219,"byte_end":52225,"line_start":132,"line_end":132,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Salt>::as_str","value":"fn as_str<'_>(&'_ Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Borrow this value as a `str`.\n","sig":null,"attributes":[{"value":"/ Borrow this value as a `str`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":52174,"byte_end":52207,"line_start":131,"line_end":131,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":52324,"byte_end":52332,"line_start":137,"line_end":137,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Salt>::as_bytes","value":"fn as_bytes<'_>(&'_ Self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" Borrow this value as bytes.\n","sig":null,"attributes":[{"value":"/ Borrow this value as bytes.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":52281,"byte_end":52312,"line_start":136,"line_end":136,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":52463,"byte_end":52466,"line_start":142,"line_end":142,"column_start":12,"column_end":15},"name":"len","qualname":"<Salt>::len","value":"fn len<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of this value in ASCII characters.\n","sig":null,"attributes":[{"value":"/ Get the length of this value in ASCII characters.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":52398,"byte_end":52451,"line_start":141,"line_end":141,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":329},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":52564,"byte_end":52570,"line_start":148,"line_end":148,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<Salt as core::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ str","parent":{"krate":1,"index":3160},"children":[],"decl_id":{"krate":1,"index":3162},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":333},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":52692,"byte_end":52700,"line_start":156,"line_end":156,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Salt as core::convert::TryFrom>::try_from","value":"fn try_from(&'a str) -> Result<Self>","parent":{"krate":1,"index":3176},"children":[],"decl_id":{"krate":1,"index":3179},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":52813,"byte_end":52816,"line_start":162,"line_end":162,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Salt as core::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":52955,"byte_end":52958,"line_start":168,"line_end":168,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Salt as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10288},"children":[],"decl_id":{"krate":1,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":716},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":53149,"byte_end":53159,"line_start":175,"line_end":175,"column_start":12,"column_end":22},"name":"SaltString","qualname":"::salt::SaltString","value":"SaltString {  }","parent":null,"children":[{"krate":0,"index":717},{"krate":0,"index":719}],"decl_id":null,"docs":" Owned stack-allocated equivalent of [`Salt`].\n","sig":null,"attributes":[{"value":"/ Owned stack-allocated equivalent of [`Salt`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":53067,"byte_end":53116,"line_start":173,"line_end":173,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":53548,"byte_end":53556,"line_start":188,"line_end":188,"column_start":12,"column_end":20},"name":"generate","qualname":"<SaltString>::generate","value":"fn generate<impl CryptoRng + RngCore>(impl CryptoRng + RngCore) -> Self where\nimpl CryptoRng + RngCore: CryptoRng + RngCore","parent":null,"children":[],"decl_id":null,"docs":" Generate a random B64-encoded [`SaltString`].\n","sig":null,"attributes":[{"value":"/ Generate a random B64-encoded [`SaltString`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":53396,"byte_end":53445,"line_start":185,"line_end":185,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"rand_core\")","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":53450,"byte_end":53479,"line_start":186,"line_end":186,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":53814,"byte_end":53817,"line_start":195,"line_end":195,"column_start":12,"column_end":15},"name":"new","qualname":"<SaltString>::new","value":"fn new<'_>(&'_ str) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`SaltString`].\n","sig":null,"attributes":[{"value":"/ Create a new [`SaltString`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":53770,"byte_end":53802,"line_start":194,"line_end":194,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":54451,"byte_end":54461,"line_start":216,"line_end":216,"column_start":12,"column_end":22},"name":"b64_encode","qualname":"<SaltString>::b64_encode","value":"fn b64_encode<'_>(&'_ [u8]) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Encode the given byte slice as B64 into a new [`SaltString`].","sig":null,"attributes":[{"value":"/ Encode the given byte slice as B64 into a new [`SaltString`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":54317,"byte_end":54382,"line_start":213,"line_end":213,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":54387,"byte_end":54390,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the slice is too long.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":54395,"byte_end":54439,"line_start":215,"line_end":215,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":54748,"byte_end":54758,"line_start":223,"line_end":223,"column_start":12,"column_end":22},"name":"b64_decode","qualname":"<SaltString>::b64_decode","value":"fn b64_decode<'a, '_>(&'_ Self, &'a mut [u8]) -> Result<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Decode this [`SaltString`] from B64 into the provided output buffer.\n","sig":null,"attributes":[{"value":"/ Decode this [`SaltString`] from B64 into the provided output buffer.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":54664,"byte_end":54736,"line_start":222,"line_end":222,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":54931,"byte_end":54938,"line_start":228,"line_end":228,"column_start":12,"column_end":19},"name":"as_salt","qualname":"<SaltString>::as_salt","value":"fn as_salt<'_>(&'_ Self) -> Salt","parent":null,"children":[],"decl_id":null,"docs":" Borrow the contents of a [`SaltString`] as a [`Salt`].\n","sig":null,"attributes":[{"value":"/ Borrow the contents of a [`SaltString`] as a [`Salt`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":54861,"byte_end":54919,"line_start":227,"line_end":227,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":55102,"byte_end":55108,"line_start":233,"line_end":233,"column_start":12,"column_end":18},"name":"as_str","qualname":"<SaltString>::as_str","value":"fn as_str<'_>(&'_ Self) -> &'_ str","parent":null,"children":[],"decl_id":null,"docs":" Borrow the contents of a [`SaltString`] as a `str`.\n","sig":null,"attributes":[{"value":"/ Borrow the contents of a [`SaltString`] as a `str`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":55035,"byte_end":55090,"line_start":232,"line_end":232,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":55273,"byte_end":55281,"line_start":238,"line_end":238,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<SaltString>::as_bytes","value":"fn as_bytes<'_>(&'_ Self) -> &'_ [u8]","parent":null,"children":[],"decl_id":null,"docs":" Borrow this value as bytes.\n","sig":null,"attributes":[{"value":"/ Borrow this value as bytes.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":55230,"byte_end":55261,"line_start":237,"line_end":237,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":55409,"byte_end":55412,"line_start":243,"line_end":243,"column_start":12,"column_end":15},"name":"len","qualname":"<SaltString>::len","value":"fn len<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of this value in ASCII characters.\n","sig":null,"attributes":[{"value":"/ Get the length of this value in ASCII characters.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":55344,"byte_end":55397,"line_start":242,"line_end":242,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":55508,"byte_end":55514,"line_start":249,"line_end":249,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<SaltString as core::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ str","parent":{"krate":1,"index":3160},"children":[],"decl_id":{"krate":1,"index":3162},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":55602,"byte_end":55604,"line_start":255,"line_end":255,"column_start":8,"column_end":10},"name":"eq","qualname":"<SaltString as core::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ Self) -> bool","parent":{"krate":1,"index":2915},"children":[],"decl_id":{"krate":1,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":55819,"byte_end":55823,"line_start":262,"line_end":262,"column_start":8,"column_end":12},"name":"from","qualname":"<Salt as core::convert::From>::from","value":"fn from(&'a SaltString) -> Salt","parent":{"krate":1,"index":3169},"children":[],"decl_id":{"krate":1,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":55948,"byte_end":55951,"line_start":268,"line_end":268,"column_start":8,"column_end":11},"name":"fmt","qualname":"<SaltString as core::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":56088,"byte_end":56091,"line_start":274,"line_end":274,"column_start":8,"column_end":11},"name":"fmt","qualname":"<SaltString as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10288},"children":[],"decl_id":{"krate":1,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":391},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/traits.rs","byte_start":57557,"byte_end":57571,"line_start":7,"line_end":7,"column_start":11,"column_end":25},"name":"PasswordHasher","qualname":"::traits::PasswordHasher","value":"PasswordHasher","parent":null,"children":[{"krate":0,"index":392},{"krate":0,"index":394},{"krate":0,"index":397}],"decl_id":null,"docs":" Trait for password hashing functions.\n","sig":null,"attributes":[{"value":"/ Trait for password hashing functions.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/traits.rs","byte_start":57505,"byte_end":57546,"line_start":6,"line_end":6,"column_start":1,"column_end":42}}]},{"kind":"Type","id":{"krate":0,"index":392},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/traits.rs","byte_start":57622,"byte_end":57628,"line_start":9,"line_end":9,"column_start":10,"column_end":16},"name":"Params","qualname":"::traits::PasswordHasher::Params","value":"type Params: Clone\n        + Debug\n        + Default\n        + for<'a> TryFrom<&'a PasswordHash<'a>, Error = Error>\n        + TryInto<ParamsString, Error = Error>;","parent":{"krate":0,"index":391},"children":[],"decl_id":null,"docs":" Algorithm-specific parameters.\n","sig":null,"attributes":[{"value":"/ Algorithm-specific parameters.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/traits.rs","byte_start":57578,"byte_end":57612,"line_start":8,"line_end":8,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/traits.rs","byte_start":58030,"byte_end":58054,"line_start":20,"line_end":20,"column_start":8,"column_end":32},"name":"hash_password_customized","qualname":"::traits::PasswordHasher::hash_password_customized","value":"fn hash_password_customized<'a, '_, '_,\nimpl Into<Salt<'a>>>(&'_ Self, &'_ [u8], Option<Ident>, Option<Decimal>,\nSelf::Params, impl Into<Salt<'a>>) -> Result<PasswordHash> where\nimpl Into<Salt<'a>>: Into<Salt>","parent":{"krate":0,"index":391},"children":[],"decl_id":null,"docs":" Compute a [`PasswordHash`] from the provided password using an\n explicit set of customized algorithm parameters as opposed to the\n defaults.","sig":null,"attributes":[{"value":"/ Compute a [`PasswordHash`] from the provided password using an","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/traits.rs","byte_start":57786,"byte_end":57852,"line_start":15,"line_end":15,"column_start":5,"column_end":71}},{"value":"/ explicit set of customized algorithm parameters as opposed to the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/traits.rs","byte_start":57857,"byte_end":57926,"line_start":16,"line_end":16,"column_start":5,"column_end":74}},{"value":"/ defaults.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/traits.rs","byte_start":57931,"byte_end":57944,"line_start":17,"line_end":17,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/traits.rs","byte_start":57949,"byte_end":57952,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ When in doubt, use [`PasswordHasher::hash_password`] instead.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/traits.rs","byte_start":57957,"byte_end":58022,"line_start":19,"line_end":19,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/traits.rs","byte_start":58451,"byte_end":58464,"line_start":33,"line_end":33,"column_start":8,"column_end":21},"name":"hash_password","qualname":"::traits::PasswordHasher::hash_password","value":"fn hash_password<'a, S, '_, '_>(&'_ Self, &'_ [u8], &'a S)\n-> Result<PasswordHash> where S: AsRef<str> + ?Sized","parent":{"krate":0,"index":391},"children":[],"decl_id":null,"docs":" Simple API for computing a [`PasswordHash`] from a password and\n salt value.","sig":null,"attributes":[{"value":"/ Simple API for computing a [`PasswordHash`] from a password and","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/traits.rs","byte_start":58277,"byte_end":58344,"line_start":29,"line_end":29,"column_start":5,"column_end":72}},{"value":"/ salt value.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/traits.rs","byte_start":58349,"byte_end":58364,"line_start":30,"line_end":30,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/traits.rs","byte_start":58369,"byte_end":58372,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Uses the default recommended parameters for a given algorithm.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/traits.rs","byte_start":58377,"byte_end":58443,"line_start":32,"line_end":32,"column_start":5,"column_end":71}}]},{"kind":"Trait","id":{"krate":0,"index":400},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/traits.rs","byte_start":59111,"byte_end":59127,"line_start":54,"line_end":54,"column_start":11,"column_end":27},"name":"PasswordVerifier","qualname":"::traits::PasswordVerifier","value":"PasswordVerifier","parent":null,"children":[{"krate":0,"index":401}],"decl_id":null,"docs":" Trait for password verification.","sig":null,"attributes":[{"value":"/ Trait for password verification.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/traits.rs","byte_start":58782,"byte_end":58818,"line_start":47,"line_end":47,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/traits.rs","byte_start":58819,"byte_end":58822,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Automatically impl'd for any type that impls [`PasswordHasher`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/traits.rs","byte_start":58823,"byte_end":58891,"line_start":49,"line_end":49,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/traits.rs","byte_start":58892,"byte_end":58895,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ This trait is object safe and can be used to implement abstractions over","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/traits.rs","byte_start":58896,"byte_end":58972,"line_start":51,"line_end":51,"column_start":1,"column_end":77}},{"value":"/ multiple password hashing algorithms. One such abstraction is provided by","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/traits.rs","byte_start":58973,"byte_end":59050,"line_start":52,"line_end":52,"column_start":1,"column_end":78}},{"value":"/ the [`PasswordHash::verify_password`] method.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/traits.rs","byte_start":59051,"byte_end":59100,"line_start":53,"line_end":53,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/traits.rs","byte_start":59323,"byte_end":59338,"line_start":58,"line_end":58,"column_start":8,"column_end":23},"name":"verify_password","qualname":"::traits::PasswordVerifier::verify_password","value":"fn verify_password<'_, '_, '_, '_>(&'_ Self, &'_ [u8], &'_ PasswordHash)\n-> Result<()>","parent":{"krate":0,"index":400},"children":[],"decl_id":null,"docs":" Compute this password hashing function against the provided password\n using the parameters from the provided password hash and see if the\n computed output matches.\n","sig":null,"attributes":[{"value":"/ Compute this password hashing function against the provided password","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/traits.rs","byte_start":59134,"byte_end":59206,"line_start":55,"line_end":55,"column_start":5,"column_end":77}},{"value":"/ using the parameters from the provided password hash and see if the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/traits.rs","byte_start":59211,"byte_end":59282,"line_start":56,"line_end":56,"column_start":5,"column_end":76}},{"value":"/ computed output matches.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/traits.rs","byte_start":59287,"byte_end":59315,"line_start":57,"line_end":57,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/traits.rs","byte_start":59462,"byte_end":59477,"line_start":62,"line_end":62,"column_start":8,"column_end":23},"name":"verify_password","qualname":"<T as traits::PasswordVerifier>::verify_password","value":"fn verify_password<'_, '_, '_, '_>(&'_ Self, &'_ [u8], &'_ PasswordHash)\n-> Result<()>","parent":{"krate":0,"index":400},"children":[],"decl_id":{"krate":0,"index":401},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":405},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/traits.rs","byte_start":60384,"byte_end":60393,"line_start":88,"line_end":88,"column_start":11,"column_end":20},"name":"McfHasher","qualname":"::traits::McfHasher","value":"McfHasher","parent":null,"children":[{"krate":0,"index":406},{"krate":0,"index":408}],"decl_id":null,"docs":" Trait for password hashing algorithms which support the legacy\n [Modular Crypt Format (MCF)][MCF].","sig":null,"attributes":[{"value":"/ Trait for password hashing algorithms which support the legacy","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/traits.rs","byte_start":60186,"byte_end":60252,"line_start":84,"line_end":84,"column_start":1,"column_end":67}},{"value":"/ [Modular Crypt Format (MCF)][MCF].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/traits.rs","byte_start":60253,"byte_end":60291,"line_start":85,"line_end":85,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/traits.rs","byte_start":60292,"byte_end":60295,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ [MCF]: https://passlib.readthedocs.io/en/stable/modular_crypt_format.html","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/traits.rs","byte_start":60296,"byte_end":60373,"line_start":87,"line_end":87,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/traits.rs","byte_start":60702,"byte_end":60718,"line_start":97,"line_end":97,"column_start":8,"column_end":24},"name":"upgrade_mcf_hash","qualname":"::traits::McfHasher::upgrade_mcf_hash","value":"fn upgrade_mcf_hash<'a, '_>(&'_ Self, &'a str) -> Result<PasswordHash>","parent":{"krate":0,"index":405},"children":[],"decl_id":null,"docs":" Upgrade an MCF hash to a PHC hash. MCF follow this rough format:","sig":null,"attributes":[{"value":"/ Upgrade an MCF hash to a PHC hash. MCF follow this rough format:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/traits.rs","byte_start":60400,"byte_end":60468,"line_start":89,"line_end":89,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/traits.rs","byte_start":60473,"byte_end":60476,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/traits.rs","byte_start":60481,"byte_end":60492,"line_start":91,"line_end":91,"column_start":5,"column_end":16}},{"value":"/ $<id>$<content>","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/traits.rs","byte_start":60497,"byte_end":60516,"line_start":92,"line_end":92,"column_start":5,"column_end":24}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/traits.rs","byte_start":60521,"byte_end":60528,"line_start":93,"line_end":93,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/traits.rs","byte_start":60533,"byte_end":60536,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ MCF hashes are otherwise largely unstructured and parsed according to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/traits.rs","byte_start":60541,"byte_end":60614,"line_start":95,"line_end":95,"column_start":5,"column_end":78}},{"value":"/ algorithm-specific rules so hashers must parse a raw string themselves.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/traits.rs","byte_start":60619,"byte_end":60694,"line_start":96,"line_end":96,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/traits.rs","byte_start":60858,"byte_end":60873,"line_start":100,"line_end":100,"column_start":8,"column_end":23},"name":"verify_mcf_hash","qualname":"::traits::McfHasher::verify_mcf_hash","value":"fn verify_mcf_hash<'_, '_, '_>(&'_ Self, &'_ [u8], &'_ str) -> Result<()>\nwhere Self: PasswordVerifier","parent":{"krate":0,"index":405},"children":[],"decl_id":null,"docs":" Verify a password hash in MCF format against the provided password.\n","sig":null,"attributes":[{"value":"/ Verify a password hash in MCF format against the provided password.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/traits.rs","byte_start":60779,"byte_end":60850,"line_start":99,"line_end":99,"column_start":5,"column_end":76}}]},{"kind":"Type","id":{"krate":0,"index":430},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":62043,"byte_end":62050,"line_start":21,"line_end":21,"column_start":10,"column_end":17},"name":"Decimal","qualname":"::value::Decimal","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" Type used to represent decimal (i.e. integer) values.\n","sig":null,"attributes":[{"value":"/ Type used to represent decimal (i.e. integer) values.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":61976,"byte_end":62033,"line_start":20,"line_end":20,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":726},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":62896,"byte_end":62901,"line_start":41,"line_end":41,"column_start":12,"column_end":17},"name":"Value","qualname":"::value::Value","value":"","parent":null,"children":[],"decl_id":null,"docs":" Algorithm parameter value string.","sig":null,"attributes":[{"value":"/ Algorithm parameter value string.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":62059,"byte_end":62096,"line_start":23,"line_end":23,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":62097,"byte_end":62100,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Parameter values are defined in the [PHC string format specification][1].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":62101,"byte_end":62178,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":62179,"byte_end":62182,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Constraints","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":62183,"byte_end":62200,"line_start":27,"line_end":27,"column_start":1,"column_end":18}},{"value":"/ - ASCII-encoded string consisting of the characters `[a-zA-Z0-9/+.-]`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":62201,"byte_end":62274,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"/   (lowercase letters, digits, and the minus sign)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":62275,"byte_end":62328,"line_start":29,"line_end":29,"column_start":1,"column_end":54}},{"value":"/ - Minimum length: 0 (i.e. empty values are allowed)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":62329,"byte_end":62384,"line_start":30,"line_end":30,"column_start":1,"column_end":56}},{"value":"/ - Maximum length: 64 ASCII characters (i.e. 64-bytes)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":62385,"byte_end":62442,"line_start":31,"line_end":31,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":62443,"byte_end":62446,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Additional Notes","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":62447,"byte_end":62469,"line_start":33,"line_end":33,"column_start":1,"column_end":23}},{"value":"/ The PHC spec allows for algorithm-defined maximum lengths for parameter","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":62470,"byte_end":62545,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ values, however this library defines a [`Value::MAX_LENGTH`] of 64 ASCII","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":62546,"byte_end":62622,"line_start":35,"line_end":35,"column_start":1,"column_end":77}},{"value":"/ characters.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":62623,"byte_end":62638,"line_start":36,"line_end":36,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":62639,"byte_end":62642,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [1]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":62643,"byte_end":62721,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ [2]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md#argon2-encoding","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":62722,"byte_end":62816,"line_start":39,"line_end":39,"column_start":1,"column_end":95}}]},{"kind":"Const","id":{"krate":0,"index":433},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":63196,"byte_end":63206,"line_start":48,"line_end":48,"column_start":15,"column_end":25},"name":"MAX_LENGTH","qualname":"::value::Value::<'a>::MAX_LENGTH","value":"usize","parent":{"krate":0,"index":431},"children":[],"decl_id":null,"docs":" Maximum length of an [`Value`] - 64 ASCII characters (i.e. 64-bytes).","sig":null,"attributes":[{"value":"/ Maximum length of an [`Value`] - 64 ASCII characters (i.e. 64-bytes).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":62942,"byte_end":63015,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":63020,"byte_end":63023,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This value is selected to match the maximum length of a [`Salt`][`crate::Salt`]","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":63028,"byte_end":63111,"line_start":46,"line_end":46,"column_start":5,"column_end":88}},{"value":"/ as this library internally uses this type to represent salts.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":63116,"byte_end":63181,"line_start":47,"line_end":47,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":63349,"byte_end":63352,"line_start":52,"line_end":52,"column_start":12,"column_end":15},"name":"new","qualname":"<Value>::new","value":"fn new(&'a str) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Parse a [`Value`] from the provided `str`, validating it according to\n the PHC string format's rules.\n","sig":null,"attributes":[{"value":"/ Parse a [`Value`] from the provided `str`, validating it according to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":63225,"byte_end":63298,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ the PHC string format's rules.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":63303,"byte_end":63337,"line_start":51,"line_end":51,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":64191,"byte_end":64201,"line_start":71,"line_end":71,"column_start":12,"column_end":22},"name":"b64_decode","qualname":"<Value>::b64_decode","value":"fn b64_decode<'b, '_>(&'_ Self, &'b mut [u8]) -> Result<&'b [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to decode a B64-encoded [`Value`], writing the decoded\n result into the provided buffer, and returning a slice of the buffer\n containing the decoded result on success.","sig":null,"attributes":[{"value":"/ Attempt to decode a B64-encoded [`Value`], writing the decoded","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":63674,"byte_end":63740,"line_start":62,"line_end":62,"column_start":5,"column_end":71}},{"value":"/ result into the provided buffer, and returning a slice of the buffer","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":63745,"byte_end":63817,"line_start":63,"line_end":63,"column_start":5,"column_end":77}},{"value":"/ containing the decoded result on success.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":63822,"byte_end":63867,"line_start":64,"line_end":64,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":63872,"byte_end":63875,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ Examples of \"B64\"-encoded parameters in practice are the `keyid` and","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":63880,"byte_end":63952,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ `data` parameters used by the [Argon2 Encoding][1] as described in the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":63957,"byte_end":64031,"line_start":67,"line_end":67,"column_start":5,"column_end":79}},{"value":"/ PHC string format specification.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":64036,"byte_end":64072,"line_start":68,"line_end":68,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":64077,"byte_end":64080,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ [1]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md#argon2-encoding","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":64085,"byte_end":64179,"line_start":70,"line_end":70,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":64364,"byte_end":64370,"line_start":76,"line_end":76,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Value>::as_str","value":"fn as_str<'_>(&'_ Self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" Borrow this value as a `str`.\n","sig":null,"attributes":[{"value":"/ Borrow this value as a `str`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":64319,"byte_end":64352,"line_start":75,"line_end":75,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":64460,"byte_end":64468,"line_start":81,"line_end":81,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Value>::as_bytes","value":"fn as_bytes<'_>(&'_ Self) -> &'a [u8]","parent":null,"children":[],"decl_id":null,"docs":" Borrow this value as bytes.\n","sig":null,"attributes":[{"value":"/ Borrow this value as bytes.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":64417,"byte_end":64448,"line_start":80,"line_end":80,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":64599,"byte_end":64602,"line_start":86,"line_end":86,"column_start":12,"column_end":15},"name":"len","qualname":"<Value>::len","value":"fn len<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the length of this value in ASCII characters.\n","sig":null,"attributes":[{"value":"/ Get the length of this value in ASCII characters.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":64534,"byte_end":64587,"line_start":85,"line_end":85,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":64696,"byte_end":64704,"line_start":91,"line_end":91,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Value>::is_empty","value":"fn is_empty<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is this value empty?\n","sig":null,"attributes":[{"value":"/ Is this value empty?","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":64660,"byte_end":64684,"line_start":90,"line_end":90,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":66403,"byte_end":66410,"line_start":123,"line_end":123,"column_start":12,"column_end":19},"name":"decimal","qualname":"<Value>::decimal","value":"fn decimal<'_>(&'_ Self) -> Result<Decimal>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to parse this [`Value`] as a PHC-encoded decimal (i.e. integer).","sig":null,"attributes":[{"value":"/ Attempt to parse this [`Value`] as a PHC-encoded decimal (i.e. integer).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":64766,"byte_end":64842,"line_start":95,"line_end":95,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":64847,"byte_end":64850,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ Decimal values are integers which follow the rules given in the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":64855,"byte_end":64922,"line_start":97,"line_end":97,"column_start":5,"column_end":72}},{"value":"/ [\"Decimal Encoding\" section of the PHC string format specification][1].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":64927,"byte_end":65002,"line_start":98,"line_end":98,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":65007,"byte_end":65010,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ The decimal encoding rules are as follows:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":65015,"byte_end":65061,"line_start":100,"line_end":100,"column_start":5,"column_end":51}},{"value":"/ > For an integer value x, its decimal encoding consist in the following:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":65066,"byte_end":65142,"line_start":101,"line_end":101,"column_start":5,"column_end":81}},{"value":"/ >","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":65147,"byte_end":65152,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ > - If x < 0, then its decimal encoding is the minus sign - followed by the decimal","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":65157,"byte_end":65244,"line_start":103,"line_end":103,"column_start":5,"column_end":92}},{"value":"/ >   encoding of -x.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":65249,"byte_end":65272,"line_start":104,"line_end":104,"column_start":5,"column_end":28}},{"value":"/ > - If x = 0, then its decimal encoding is the single character 0.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":65277,"byte_end":65347,"line_start":105,"line_end":105,"column_start":5,"column_end":75}},{"value":"/ > - If x > 0, then its decimal encoding is the smallest sequence of ASCII digits that","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":65352,"byte_end":65441,"line_start":106,"line_end":106,"column_start":5,"column_end":94}},{"value":"/ >   matches its value (i.e. there is no leading zero).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":65446,"byte_end":65504,"line_start":107,"line_end":107,"column_start":5,"column_end":63}},{"value":"/ >","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":65509,"byte_end":65514,"line_start":108,"line_end":108,"column_start":5,"column_end":10}},{"value":"/ > Thus, a value is a valid decimal for an integer x if and only if all of the following hold true:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":65519,"byte_end":65621,"line_start":109,"line_end":109,"column_start":5,"column_end":107}},{"value":"/ >","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":65626,"byte_end":65631,"line_start":110,"line_end":110,"column_start":5,"column_end":10}},{"value":"/ > - The first character is either a - sign, or an ASCII digit.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":65636,"byte_end":65702,"line_start":111,"line_end":111,"column_start":5,"column_end":71}},{"value":"/ > - All characters other than the first are ASCII digits.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":65707,"byte_end":65768,"line_start":112,"line_end":112,"column_start":5,"column_end":66}},{"value":"/ > - If the first character is - sign, then there is at least another character, and the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":65773,"byte_end":65864,"line_start":113,"line_end":113,"column_start":5,"column_end":96}},{"value":"/ >   second character is not a 0.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":65869,"byte_end":65905,"line_start":114,"line_end":114,"column_start":5,"column_end":41}},{"value":"/ > - If the string consists in more than one character, then the first one cannot be a 0.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":65910,"byte_end":66002,"line_start":115,"line_end":115,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":66007,"byte_end":66010,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ Note: this implementation does not support negative decimals despite","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":66015,"byte_end":66087,"line_start":117,"line_end":117,"column_start":5,"column_end":77}},{"value":"/ them being allowed per the spec above. If you need to parse a negative","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":66092,"byte_end":66166,"line_start":118,"line_end":118,"column_start":5,"column_end":79}},{"value":"/ number, please parse it from the string representation directly e.g.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":66171,"byte_end":66243,"line_start":119,"line_end":119,"column_start":5,"column_end":77}},{"value":"/ `value.as_str().parse::<i32>()`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":66248,"byte_end":66283,"line_start":120,"line_end":120,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":66288,"byte_end":66291,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ [1]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md#decimal-encoding","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":66296,"byte_end":66391,"line_start":122,"line_end":122,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":67460,"byte_end":67470,"line_start":152,"line_end":152,"column_start":12,"column_end":22},"name":"is_decimal","qualname":"<Value>::is_decimal","value":"fn is_decimal<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Does this value parse successfully as a decimal?\n","sig":null,"attributes":[{"value":"/ Does this value parse successfully as a decimal?","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":67396,"byte_end":67448,"line_start":151,"line_end":151,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":67571,"byte_end":67577,"line_start":158,"line_end":158,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<Value as core::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ str","parent":{"krate":1,"index":3160},"children":[],"decl_id":{"krate":1,"index":3162},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":67700,"byte_end":67708,"line_start":166,"line_end":166,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Value as core::convert::TryFrom>::try_from","value":"fn try_from(&'a str) -> Result<Self>","parent":{"krate":1,"index":3176},"children":[],"decl_id":{"krate":1,"index":3179},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":67851,"byte_end":67859,"line_start":174,"line_end":174,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Decimal as core::convert::TryFrom>::try_from","value":"fn try_from(Value) -> Result<Decimal>","parent":{"krate":1,"index":3176},"children":[],"decl_id":{"krate":1,"index":3179},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":68017,"byte_end":68025,"line_start":182,"line_end":182,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Decimal as core::convert::TryFrom>::try_from","value":"fn try_from<'_>(&'_ Value) -> Result<Decimal>","parent":{"krate":1,"index":3176},"children":[],"decl_id":{"krate":1,"index":3179},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":68144,"byte_end":68147,"line_start":188,"line_end":188,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Value as core::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":759},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":2791,"byte_end":2803,"line_start":97,"line_end":97,"column_start":12,"column_end":24},"name":"PasswordHash","qualname":"::PasswordHash","value":"PasswordHash { algorithm, version, params, salt, hash }","parent":null,"children":[{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765}],"decl_id":null,"docs":" Password hash.","sig":null,"attributes":[{"value":"/ Password hash.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":1501,"byte_end":1519,"line_start":64,"line_end":64,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":1520,"byte_end":1523,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ This type corresponds to the parsed representation of a PHC string as","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":1524,"byte_end":1597,"line_start":66,"line_end":66,"column_start":1,"column_end":74}},{"value":"/ described in the [PHC string format specification][1].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":1598,"byte_end":1656,"line_start":67,"line_end":67,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":1657,"byte_end":1660,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ PHC strings have the following format:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":1661,"byte_end":1703,"line_start":69,"line_end":69,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":1704,"byte_end":1707,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":1708,"byte_end":1719,"line_start":71,"line_end":71,"column_start":1,"column_end":12}},{"value":"/ $<id>[$v=<version>][$<param>=<value>(,<param>=<value>)*][$<salt>[$<hash>]]","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":1720,"byte_end":1798,"line_start":72,"line_end":72,"column_start":1,"column_end":79}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":1799,"byte_end":1806,"line_start":73,"line_end":73,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":1807,"byte_end":1810,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ where:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":1811,"byte_end":1821,"line_start":75,"line_end":75,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":1822,"byte_end":1825,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ - `<id>` is the symbolic name for the function","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":1826,"byte_end":1876,"line_start":77,"line_end":77,"column_start":1,"column_end":51}},{"value":"/ - `<version>` is the algorithm version","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":1877,"byte_end":1919,"line_start":78,"line_end":78,"column_start":1,"column_end":43}},{"value":"/ - `<param>` is a parameter name","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":1920,"byte_end":1955,"line_start":79,"line_end":79,"column_start":1,"column_end":36}},{"value":"/ - `<value>` is a parameter value","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":1956,"byte_end":1992,"line_start":80,"line_end":80,"column_start":1,"column_end":37}},{"value":"/ - `<salt>` is an encoding of the salt","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":1993,"byte_end":2034,"line_start":81,"line_end":81,"column_start":1,"column_end":42}},{"value":"/ - `<hash>` is an encoding of the hash output","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":2035,"byte_end":2083,"line_start":82,"line_end":82,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":2084,"byte_end":2087,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ The string is then the concatenation, in that order, of:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":2088,"byte_end":2148,"line_start":84,"line_end":84,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":2149,"byte_end":2152,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ - a `$` sign;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":2153,"byte_end":2170,"line_start":86,"line_end":86,"column_start":1,"column_end":18}},{"value":"/ - the function symbolic name;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":2171,"byte_end":2204,"line_start":87,"line_end":87,"column_start":1,"column_end":34}},{"value":"/ - optionally, a `$` sign followed by the algorithm version with a `v=version` format;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":2205,"byte_end":2294,"line_start":88,"line_end":88,"column_start":1,"column_end":90}},{"value":"/ - optionally, a `$` sign followed by one or several parameters, each with a `name=value` format;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":2295,"byte_end":2395,"line_start":89,"line_end":89,"column_start":1,"column_end":101}},{"value":"/   the parameters are separated by commas;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":2396,"byte_end":2441,"line_start":90,"line_end":90,"column_start":1,"column_end":46}},{"value":"/ - optionally, a `$` sign followed by the (encoded) salt value;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":2442,"byte_end":2508,"line_start":91,"line_end":91,"column_start":1,"column_end":67}},{"value":"/ - optionally, a `$` sign followed by the (encoded) hash output (the hash output may be present","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":2509,"byte_end":2607,"line_start":92,"line_end":92,"column_start":1,"column_end":99}},{"value":"/   only if the salt is present).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":2608,"byte_end":2643,"line_start":93,"line_end":93,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":2644,"byte_end":2647,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ [1]: https://github.com/P-H-C/phc-string-format/blob/master/phc-sf-spec.md#specification","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":2648,"byte_end":2740,"line_start":95,"line_end":95,"column_start":1,"column_end":93}}]},{"kind":"Field","id":{"krate":0,"index":761},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":2986,"byte_end":2995,"line_start":102,"line_end":102,"column_start":9,"column_end":18},"name":"algorithm","qualname":"::PasswordHash::algorithm","value":"ident::Ident<'a>","parent":{"krate":0,"index":759},"children":[],"decl_id":null,"docs":" Password hashing algorithm identifier.","sig":null,"attributes":[{"value":"/ Password hashing algorithm identifier.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":2814,"byte_end":2856,"line_start":98,"line_end":98,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":2861,"byte_end":2864,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the `<id>` field in a PHC string, a.k.a. the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":2869,"byte_end":2937,"line_start":100,"line_end":100,"column_start":5,"column_end":73}},{"value":"/ symbolic name for the function.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":2942,"byte_end":2977,"line_start":101,"line_end":101,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":762},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":3124,"byte_end":3131,"line_start":107,"line_end":107,"column_start":9,"column_end":16},"name":"version","qualname":"::PasswordHash::version","value":"core::option::Option<u32>","parent":{"krate":0,"index":759},"children":[],"decl_id":null,"docs":" Optional version field.","sig":null,"attributes":[{"value":"/ Optional version field.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":3013,"byte_end":3040,"line_start":104,"line_end":104,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":3045,"byte_end":3048,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the `<version>` field in a PHC string.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":3053,"byte_end":3115,"line_start":106,"line_end":106,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":763},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":3325,"byte_end":3331,"line_start":113,"line_end":113,"column_start":9,"column_end":15},"name":"params","qualname":"::PasswordHash::params","value":"params::ParamsString","parent":{"krate":0,"index":759},"children":[],"decl_id":null,"docs":" Algorithm-specific parameters.","sig":null,"attributes":[{"value":"/ Algorithm-specific parameters.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":3155,"byte_end":3189,"line_start":109,"line_end":109,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":3194,"byte_end":3197,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the set of `$<param>=<value>(,<param>=<value>)*`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":3202,"byte_end":3274,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/ name/value pairs in a PHC string.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":3279,"byte_end":3316,"line_start":112,"line_end":112,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":764},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":3494,"byte_end":3498,"line_start":118,"line_end":118,"column_start":9,"column_end":13},"name":"salt","qualname":"::PasswordHash::salt","value":"core::option::Option<salt::Salt<'a>>","parent":{"krate":0,"index":759},"children":[],"decl_id":null,"docs":" [`Salt`] string for personalizing a password hash output.","sig":null,"attributes":[{"value":"/ [`Salt`] string for personalizing a password hash output.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":3352,"byte_end":3413,"line_start":115,"line_end":115,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":3418,"byte_end":3421,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the `<salt>` value in a PHC string.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":3426,"byte_end":3485,"line_start":117,"line_end":117,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":765},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":3666,"byte_end":3670,"line_start":123,"line_end":123,"column_start":9,"column_end":13},"name":"hash","qualname":"::PasswordHash::hash","value":"core::option::Option<output::Output>","parent":{"krate":0,"index":759},"children":[],"decl_id":null,"docs":" Password hashing function [`Output`], a.k.a. hash/digest.","sig":null,"attributes":[{"value":"/ Password hashing function [`Output`], a.k.a. hash/digest.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":3523,"byte_end":3584,"line_start":120,"line_end":120,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":3589,"byte_end":3592,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ This corresponds to the `<hash>` output in a PHC string.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":3597,"byte_end":3657,"line_start":122,"line_end":122,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":3800,"byte_end":3803,"line_start":128,"line_end":128,"column_start":12,"column_end":15},"name":"new","qualname":"<PasswordHash>::new","value":"fn new(&'a str) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Parse a password hash from a string in the PHC string format.\n","sig":null,"attributes":[{"value":"/ Parse a password hash from a string in the PHC string format.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":3723,"byte_end":3788,"line_start":127,"line_end":127,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":3955,"byte_end":3960,"line_start":133,"line_end":133,"column_start":12,"column_end":17},"name":"parse","qualname":"<PasswordHash>::parse","value":"fn parse(&'a str, Encoding) -> Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Parse a password hash from the given [`Encoding`].\n","sig":null,"attributes":[{"value":"/ Parse a password hash from the given [`Encoding`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":3889,"byte_end":3943,"line_start":132,"line_end":132,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":5868,"byte_end":5876,"line_start":203,"line_end":203,"column_start":12,"column_end":20},"name":"generate","qualname":"<PasswordHash>::generate","value":"fn generate<impl PasswordHasher,\nimpl AsRef<[u8]>>(impl PasswordHasher, impl AsRef<[u8]>, &'a str)\n-> Result<Self> where impl PasswordHasher: PasswordHasher,\nimpl AsRef<[u8]>: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Generate a password hash using the supplied algorithm.\n","sig":null,"attributes":[{"value":"/ Generate a password hash using the supplied algorithm.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":5798,"byte_end":5856,"line_start":202,"line_end":202,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":6177,"byte_end":6192,"line_start":213,"line_end":213,"column_start":12,"column_end":27},"name":"verify_password","qualname":"<PasswordHash>::verify_password","value":"fn verify_password<'_, '_, '_,\nimpl AsRef<[u8]>>(&'_ Self, &'_ [&'_ dyn PasswordVerifier], impl AsRef<[u8]>)\n-> Result<()> where impl AsRef<[u8]>: AsRef<[u8]>","parent":null,"children":[],"decl_id":null,"docs":" Verify this password hash using the specified set of supported\n [`PasswordHasher`] trait objects.\n","sig":null,"attributes":[{"value":"/ Verify this password hash using the specified set of supported","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":6057,"byte_end":6123,"line_start":211,"line_end":211,"column_start":5,"column_end":71}},{"value":"/ [`PasswordHasher`] trait objects.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":6128,"byte_end":6165,"line_start":212,"line_end":212,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":526},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":6583,"byte_end":6591,"line_start":228,"line_end":228,"column_start":12,"column_end":20},"name":"encoding","qualname":"<PasswordHash>::encoding","value":"fn encoding<'_>(&'_ Self) -> Encoding","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Encoding`] that this [`PasswordHash`] is serialized with.\n","sig":null,"attributes":[{"value":"/ Get the [`Encoding`] that this [`PasswordHash`] is serialized with.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":6500,"byte_end":6571,"line_start":227,"line_end":227,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":7114,"byte_end":7122,"line_start":245,"line_end":245,"column_start":8,"column_end":16},"name":"try_from","qualname":"<PasswordHash as core::convert::TryFrom>::try_from","value":"fn try_from(&'a str) -> Result<Self>","parent":{"krate":1,"index":3176},"children":[],"decl_id":{"krate":1,"index":3179},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":7235,"byte_end":7238,"line_start":251,"line_end":251,"column_start":8,"column_end":11},"name":"fmt","qualname":"<PasswordHash as core::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":12242,"byte_end":12247,"line_start":60,"line_end":60,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":17}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":13630,"byte_end":13635,"line_start":85,"line_end":85,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":19}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":13761,"byte_end":13766,"line_start":91,"line_end":91,"column_start":45,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":14334,"byte_end":14346,"line_start":117,"line_end":117,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":23},{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":14674,"byte_end":14686,"line_start":129,"line_end":129,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/encoding.rs","byte_start":16043,"byte_end":16051,"line_start":36,"line_end":36,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/encoding.rs","byte_start":16113,"byte_end":16121,"line_start":42,"line_end":42,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/ident.rs","byte_start":18972,"byte_end":18977,"line_start":37,"line_end":37,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/ident.rs","byte_start":20892,"byte_end":20897,"line_start":94,"line_end":94,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/ident.rs","byte_start":20985,"byte_end":20990,"line_start":100,"line_end":100,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/ident.rs","byte_start":21232,"byte_end":21237,"line_start":110,"line_end":110,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":85},{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/ident.rs","byte_start":21371,"byte_end":21376,"line_start":118,"line_end":118,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/ident.rs","byte_start":21507,"byte_end":21512,"line_start":124,"line_end":124,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":27884,"byte_end":27890,"line_start":110,"line_end":110,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":137},{"krate":0,"index":140},{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":31621,"byte_end":31627,"line_start":218,"line_end":218,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":31719,"byte_end":31725,"line_start":224,"line_end":224,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":31844,"byte_end":31850,"line_start":230,"line_end":230,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":31975,"byte_end":31981,"line_start":238,"line_end":238,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":32091,"byte_end":32097,"line_start":244,"line_end":244,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":32231,"byte_end":32237,"line_start":252,"line_end":252,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":156}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":32525,"byte_end":32531,"line_start":261,"line_end":261,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":35121,"byte_end":35133,"line_start":46,"line_end":46,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":220},{"krate":0,"index":224},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":238},{"krate":0,"index":242},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":38907,"byte_end":38919,"line_start":173,"line_end":173,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":40066,"byte_end":40078,"line_start":214,"line_end":214,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":40378,"byte_end":40390,"line_start":229,"line_end":229,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":40520,"byte_end":40532,"line_start":235,"line_end":235,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":40810,"byte_end":40814,"line_start":246,"line_end":246,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":41091,"byte_end":41095,"line_start":259,"line_end":259,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":270},{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":41882,"byte_end":41888,"line_start":290,"line_end":290,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":42041,"byte_end":42047,"line_start":296,"line_end":296,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":42195,"byte_end":42201,"line_start":305,"line_end":305,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":280}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":42391,"byte_end":42397,"line_start":312,"line_end":312,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":50180,"byte_end":50184,"line_start":82,"line_end":82,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":322},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":52546,"byte_end":52550,"line_start":147,"line_end":147,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":52649,"byte_end":52653,"line_start":153,"line_end":153,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":332},{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":52795,"byte_end":52799,"line_start":161,"line_end":161,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":52937,"byte_end":52941,"line_start":167,"line_end":167,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":53379,"byte_end":53389,"line_start":184,"line_end":184,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":344},{"krate":0,"index":346},{"krate":0,"index":348},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":55488,"byte_end":55498,"line_start":248,"line_end":248,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":55582,"byte_end":55592,"line_start":254,"line_end":254,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":55801,"byte_end":55805,"line_start":261,"line_end":261,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":55928,"byte_end":55938,"line_start":267,"line_end":267,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":56068,"byte_end":56078,"line_start":273,"line_end":273,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/traits.rs","byte_start":59451,"byte_end":59452,"line_start":61,"line_end":61,"column_start":46,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":62926,"byte_end":62931,"line_start":43,"line_end":43,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":67552,"byte_end":67557,"line_start":157,"line_end":157,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":67656,"byte_end":67661,"line_start":163,"line_end":163,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":67809,"byte_end":67816,"line_start":171,"line_end":171,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":453},{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":67975,"byte_end":67982,"line_start":179,"line_end":179,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":457},{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":68125,"byte_end":68130,"line_start":187,"line_end":187,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":3700,"byte_end":3712,"line_start":126,"line_end":126,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":521},{"krate":0,"index":524},{"krate":0,"index":526}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":7063,"byte_end":7075,"line_start":242,"line_end":242,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":530},{"krate":0,"index":531}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":7209,"byte_end":7221,"line_start":250,"line_end":250,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":920,"byte_end":926,"line_start":32,"line_end":32,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":7}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":12242,"byte_end":12247,"line_start":60,"line_end":60,"column_start":23,"column_end":28},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":535},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":13630,"byte_end":13635,"line_start":85,"line_end":85,"column_start":25,"column_end":30},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":535},"to":{"krate":1,"index":3169}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":13761,"byte_end":13766,"line_start":91,"line_end":91,"column_start":45,"column_end":50},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":535},"to":{"krate":1,"index":3169}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":14334,"byte_end":14346,"line_start":117,"line_end":117,"column_start":6,"column_end":18},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":581},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/errors.rs","byte_start":14674,"byte_end":14686,"line_start":129,"line_end":129,"column_start":23,"column_end":35},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":581},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/encoding.rs","byte_start":16043,"byte_end":16051,"line_start":36,"line_end":36,"column_start":18,"column_end":26},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":605},"to":{"krate":1,"index":3241}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/encoding.rs","byte_start":16113,"byte_end":16121,"line_start":42,"line_end":42,"column_start":6,"column_end":14},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":605},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/ident.rs","byte_start":18972,"byte_end":18977,"line_start":37,"line_end":37,"column_start":10,"column_end":15},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":627},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/ident.rs","byte_start":20892,"byte_end":20897,"line_start":94,"line_end":94,"column_start":25,"column_end":30},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":627},"to":{"krate":1,"index":3160}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/ident.rs","byte_start":20985,"byte_end":20990,"line_start":100,"line_end":100,"column_start":20,"column_end":25},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":627},"to":{"krate":1,"index":3486}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/ident.rs","byte_start":21232,"byte_end":21237,"line_start":110,"line_end":110,"column_start":31,"column_end":36},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":627},"to":{"krate":1,"index":3176}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/ident.rs","byte_start":21371,"byte_end":21376,"line_start":118,"line_end":118,"column_start":27,"column_end":32},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":627},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/ident.rs","byte_start":21507,"byte_end":21512,"line_start":124,"line_end":124,"column_start":25,"column_end":30},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":627},"to":{"krate":1,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":27884,"byte_end":27890,"line_start":110,"line_end":110,"column_start":6,"column_end":12},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":657},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":31621,"byte_end":31627,"line_start":218,"line_end":218,"column_start":22,"column_end":28},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":657},"to":{"krate":1,"index":3160}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":31719,"byte_end":31725,"line_start":224,"line_end":224,"column_start":25,"column_end":31},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":657},"to":{"krate":25,"index":57}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":31844,"byte_end":31850,"line_start":230,"line_end":230,"column_start":18,"column_end":24},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":657},"to":{"krate":1,"index":12989}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":31975,"byte_end":31981,"line_start":238,"line_end":238,"column_start":20,"column_end":26},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":657},"to":{"krate":1,"index":2915}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":32091,"byte_end":32097,"line_start":244,"line_end":244,"column_start":25,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":657},"to":{"krate":1,"index":3176}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":32231,"byte_end":32237,"line_start":252,"line_end":252,"column_start":23,"column_end":29},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":657},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/output.rs","byte_start":32525,"byte_end":32531,"line_start":261,"line_end":261,"column_start":21,"column_end":27},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":657},"to":{"krate":1,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":35121,"byte_end":35133,"line_start":46,"line_end":46,"column_start":6,"column_end":18},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":670},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":38907,"byte_end":38919,"line_start":173,"line_end":173,"column_start":18,"column_end":30},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":670},"to":{"krate":1,"index":12989}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":40066,"byte_end":40078,"line_start":214,"line_end":214,"column_start":37,"column_end":49},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":670},"to":{"krate":1,"index":8394}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":40378,"byte_end":40390,"line_start":229,"line_end":229,"column_start":23,"column_end":35},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":670},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":40520,"byte_end":40532,"line_start":235,"line_end":235,"column_start":21,"column_end":33},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":670},"to":{"krate":1,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":40810,"byte_end":40814,"line_start":246,"line_end":246,"column_start":10,"column_end":14},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":262},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":41091,"byte_end":41095,"line_start":259,"line_end":259,"column_start":23,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":262},"to":{"krate":1,"index":8596}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":41882,"byte_end":41888,"line_start":290,"line_end":290,"column_start":21,"column_end":27},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":684},"to":{"krate":1,"index":3160}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":42041,"byte_end":42047,"line_start":296,"line_end":296,"column_start":18,"column_end":24},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":684},"to":{"krate":1,"index":3241}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":42195,"byte_end":42201,"line_start":305,"line_end":305,"column_start":20,"column_end":26},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":684},"to":{"krate":1,"index":2915}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/params.rs","byte_start":42391,"byte_end":42397,"line_start":312,"line_end":312,"column_start":16,"column_end":22},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":684},"to":{"krate":1,"index":10238}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":50180,"byte_end":50184,"line_start":82,"line_end":82,"column_start":10,"column_end":14},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":696},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":52546,"byte_end":52550,"line_start":147,"line_end":147,"column_start":25,"column_end":29},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":696},"to":{"krate":1,"index":3160}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":52649,"byte_end":52653,"line_start":153,"line_end":153,"column_start":31,"column_end":35},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":696},"to":{"krate":1,"index":3176}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":52795,"byte_end":52799,"line_start":161,"line_end":161,"column_start":27,"column_end":31},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":696},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":52937,"byte_end":52941,"line_start":167,"line_end":167,"column_start":25,"column_end":29},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":696},"to":{"krate":1,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":53379,"byte_end":53389,"line_start":184,"line_end":184,"column_start":6,"column_end":16},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":716},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":55488,"byte_end":55498,"line_start":248,"line_end":248,"column_start":21,"column_end":31},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":716},"to":{"krate":1,"index":3160}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":55582,"byte_end":55592,"line_start":254,"line_end":254,"column_start":20,"column_end":30},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":716},"to":{"krate":1,"index":2915}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":55801,"byte_end":55805,"line_start":261,"line_end":261,"column_start":35,"column_end":39},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":696},"to":{"krate":1,"index":3169}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":55928,"byte_end":55938,"line_start":267,"line_end":267,"column_start":23,"column_end":33},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":716},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/salt.rs","byte_start":56068,"byte_end":56078,"line_start":273,"line_end":273,"column_start":21,"column_end":31},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":716},"to":{"krate":1,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/traits.rs","byte_start":59451,"byte_end":59452,"line_start":61,"line_end":61,"column_start":46,"column_end":47},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":403},"to":{"krate":0,"index":400}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":62926,"byte_end":62931,"line_start":43,"line_end":43,"column_start":10,"column_end":15},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":726},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":67552,"byte_end":67557,"line_start":157,"line_end":157,"column_start":25,"column_end":30},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":726},"to":{"krate":1,"index":3160}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":67656,"byte_end":67661,"line_start":163,"line_end":163,"column_start":31,"column_end":36},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":726},"to":{"krate":1,"index":3176}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":67809,"byte_end":67816,"line_start":171,"line_end":171,"column_start":33,"column_end":40},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":430},"to":{"krate":1,"index":3176}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":67975,"byte_end":67982,"line_start":179,"line_end":179,"column_start":34,"column_end":41},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":430},"to":{"krate":1,"index":3176}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/value.rs","byte_start":68125,"byte_end":68130,"line_start":187,"line_end":187,"column_start":27,"column_end":32},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":726},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":3700,"byte_end":3712,"line_start":126,"line_end":126,"column_start":10,"column_end":22},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":759},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":7063,"byte_end":7075,"line_start":242,"line_end":242,"column_start":31,"column_end":43},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":759},"to":{"krate":1,"index":3176}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/password-hash-0.4.2/src/lib.rs","byte_start":7209,"byte_end":7221,"line_start":250,"line_end":250,"column_start":27,"column_end":39},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":759},"to":{"krate":1,"index":10295}}]}