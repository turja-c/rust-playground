{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers","program":"/Users/turjachowdhury/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","ethers_providers","--edition=2018","/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=e24c57fe1640c0f1","-C","extra-filename=-e24c57fe1640c0f1","--out-dir","/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps","-L","dependency=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps","--extern","async_trait=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libasync_trait-37835b993f2699cf.dylib","--extern","auto_impl=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libauto_impl-ee6f909713eccee6.dylib","--extern","base64=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libbase64-5fc659cacbff3db3.rmeta","--extern","ethers_core=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libethers_core-84347711a988d5a3.rmeta","--extern","futures_core=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libfutures_core-ff2cc71b1680ff21.rmeta","--extern","futures_timer=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libfutures_timer-4b88fbea4aa478ea.rmeta","--extern","futures_util=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libfutures_util-dea35ca61872beb0.rmeta","--extern","hashers=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libhashers-defddbbbf0f78fb8.rmeta","--extern","hex=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libhex-22b2a681fb8a40a2.rmeta","--extern","http=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libhttp-66dff64a4ecce1cf.rmeta","--extern","once_cell=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libonce_cell-2955f51bb7209688.rmeta","--extern","pin_project=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libpin_project-afbf005dcc13086a.rmeta","--extern","reqwest=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libreqwest-5d977ca3cc8bb23d.rmeta","--extern","serde=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libserde-b430e2d23c4773a7.rmeta","--extern","serde_json=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libserde_json-a29acfa80cb07281.rmeta","--extern","thiserror=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libthiserror-055430993d723470.rmeta","--extern","tokio=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libtokio-841dbf2fca8b8ec3.rmeta","--extern","tracing=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libtracing-73d7233d25a3d7a3.rmeta","--extern","tracing_futures=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libtracing_futures-306c36c1008ac318.rmeta","--extern","url=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/liburl-097d0c4b1016a9b6.rmeta","--cap-lints","allow","-L","native=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/build/ring-30352de953c53962/out","--error-format=json","--sysroot","/Users/turjachowdhury/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libethers_providers-e24c57fe1640c0f1.rmeta"},"prelude":{"crate_id":{"name":"ethers_providers","disambiguator":[938389820918693091,0]},"crate_root":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src","external_crates":[{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3177202280525429736,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":2,"id":{"name":"core","disambiguator":[14771084576412554041,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2214913233095760658,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14062411168213242900,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12076482825092298057,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[14222321261015582298,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8777242437552039366,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17835652209006724865,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[8739993533421390330,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[14051958152740382928,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[10065303707608660519,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[11544620977869425193,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[6400271788769952154,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[15384311983005613458,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[18308402029100966730,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[6407954677654987270,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[15697432329694890830,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[8370702540642071065,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[13043233986326649044,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/erc.rs","num":20,"id":{"name":"serde","disambiguator":[8563986749973328371,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/erc.rs","num":21,"id":{"name":"serde_derive","disambiguator":[8343864943583289220,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":22,"id":{"name":"serde_json","disambiguator":[9253801033590943946,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":23,"id":{"name":"itoa","disambiguator":[5234178582960882733,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":24,"id":{"name":"ryu","disambiguator":[1781523030557575599,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":25,"id":{"name":"thiserror","disambiguator":[11500823736324019186,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":26,"id":{"name":"thiserror_impl","disambiguator":[3233667349052322716,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":27,"id":{"name":"ethers_core","disambiguator":[12279750216699067141,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":28,"id":{"name":"ethabi","disambiguator":[10544253139667299311,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":29,"id":{"name":"uint","disambiguator":[10755690701701842635,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":30,"id":{"name":"byteorder","disambiguator":[17568044588112060419,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","num":31,"id":{"name":"hex","disambiguator":[12047499046875803168,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":32,"id":{"name":"static_assertions","disambiguator":[4153618826055884147,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":33,"id":{"name":"crunchy","disambiguator":[7605243277534721252,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":34,"id":{"name":"sha3","disambiguator":[307639903087831380,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":35,"id":{"name":"digest","disambiguator":[14240980440409098146,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":36,"id":{"name":"crypto_common","disambiguator":[7165260881322399202,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":37,"id":{"name":"generic_array","disambiguator":[7919687574507098734,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":38,"id":{"name":"typenum","disambiguator":[7130954412725199219,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":39,"id":{"name":"block_buffer","disambiguator":[15880394773317876748,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":40,"id":{"name":"subtle","disambiguator":[9509557527791595074,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":41,"id":{"name":"keccak","disambiguator":[13972235789689654713,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","num":42,"id":{"name":"once_cell","disambiguator":[6572022596076535935,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":43,"id":{"name":"ethereum_types","disambiguator":[14392073323679730320,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":44,"id":{"name":"fixed_hash","disambiguator":[17941200946911691752,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":45,"id":{"name":"rustc_hex","disambiguator":[11480727328542592737,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":46,"id":{"name":"rand","disambiguator":[15368721808221371949,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":47,"id":{"name":"rand_core","disambiguator":[10219715068303864474,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":48,"id":{"name":"getrandom","disambiguator":[15641211430450808217,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":49,"id":{"name":"cfg_if","disambiguator":[4590009807048894466,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":50,"id":{"name":"libc","disambiguator":[4734073794903943432,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":51,"id":{"name":"rand_chacha","disambiguator":[2137982307708359113,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":52,"id":{"name":"ppv_lite86","disambiguator":[11631382450120135001,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":53,"id":{"name":"impl_codec","disambiguator":[2392157126475711567,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":54,"id":{"name":"parity_scale_codec","disambiguator":[4957919255226842075,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":55,"id":{"name":"parity_scale_codec_derive","disambiguator":[11912925632890472257,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":56,"id":{"name":"byte_slice_cast","disambiguator":[5513492499053633319,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":57,"id":{"name":"arrayvec","disambiguator":[14898269805389005271,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":58,"id":{"name":"impl_trait_for_tuples","disambiguator":[8046413577479339172,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":59,"id":{"name":"impl_rlp","disambiguator":[9870905076345212570,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":60,"id":{"name":"rlp","disambiguator":[436078883328174578,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":61,"id":{"name":"bytes","disambiguator":[1145573965042969789,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":62,"id":{"name":"impl_serde","disambiguator":[2950300518690755918,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":63,"id":{"name":"primitive_types","disambiguator":[3503474505047286204,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":64,"id":{"name":"scale_info","disambiguator":[11990844177187226064,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":65,"id":{"name":"derive_more","disambiguator":[14511597510602408082,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":66,"id":{"name":"scale_info_derive","disambiguator":[6800746272509617229,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":67,"id":{"name":"ethbloom","disambiguator":[2508138869585256833,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":68,"id":{"name":"tiny_keccak","disambiguator":[13151695677847618969,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":69,"id":{"name":"regex","disambiguator":[12716958326035925585,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":70,"id":{"name":"regex_syntax","disambiguator":[4544240962968005861,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":71,"id":{"name":"aho_corasick","disambiguator":[5597254555526314186,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":72,"id":{"name":"memchr","disambiguator":[13130618782193109137,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":73,"id":{"name":"open_fastrlp","disambiguator":[373955613295065185,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","num":74,"id":{"name":"auto_impl","disambiguator":[4128521902316029359,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":75,"id":{"name":"open_fastrlp_derive","disambiguator":[17745565833272186174,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":76,"id":{"name":"rlp_derive","disambiguator":[14949189322167479248,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":77,"id":{"name":"convert_case","disambiguator":[13774171361692484484,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":78,"id":{"name":"unicode_segmentation","disambiguator":[4835481013539129664,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":79,"id":{"name":"proc_macro2","disambiguator":[7624247617864266836,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":80,"id":{"name":"proc_macro","disambiguator":[18166776131305929452,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":81,"id":{"name":"unicode_ident","disambiguator":[13522124724369312600,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":82,"id":{"name":"syn","disambiguator":[13904927500551716099,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":83,"id":{"name":"quote","disambiguator":[15162805322579794832,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":84,"id":{"name":"chrono","disambiguator":[12707083240700723598,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":85,"id":{"name":"num_integer","disambiguator":[12435135886996412256,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":86,"id":{"name":"num_traits","disambiguator":[18019252465808392738,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":87,"id":{"name":"elliptic_curve","disambiguator":[8205541456902493608,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":88,"id":{"name":"crypto_bigint","disambiguator":[12976264071375523063,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":89,"id":{"name":"zeroize","disambiguator":[717154649940368447,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":90,"id":{"name":"group","disambiguator":[4921958859589967007,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":91,"id":{"name":"ff","disambiguator":[6330821995895865685,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":92,"id":{"name":"sec1","disambiguator":[10379005731568166508,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":93,"id":{"name":"base16ct","disambiguator":[1787797894898423547,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":94,"id":{"name":"der","disambiguator":[10195145284119301665,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":95,"id":{"name":"const_oid","disambiguator":[3804328892302361735,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":96,"id":{"name":"pkcs8","disambiguator":[319211019090565834,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":97,"id":{"name":"spki","disambiguator":[15149776323361318056,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":98,"id":{"name":"k256","disambiguator":[7704060304617212032,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":99,"id":{"name":"ecdsa","disambiguator":[10743627506935972445,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":100,"id":{"name":"signature","disambiguator":[3765389243401631928,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":101,"id":{"name":"rfc6979","disambiguator":[16647923202877290957,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":102,"id":{"name":"hmac","disambiguator":[17013744918602174821,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":103,"id":{"name":"sha2","disambiguator":[11260328861617274237,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":104,"id":{"name":"cpufeatures","disambiguator":[15642071456532895068,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":105,"id":{"name":"strum","disambiguator":[15667772398532373242,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":106,"id":{"name":"strum_macros","disambiguator":[1963425547486652521,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":107,"id":{"name":"unicode_xid","disambiguator":[7975086716418284509,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":108,"id":{"name":"cargo_metadata","disambiguator":[17452478358108596841,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":109,"id":{"name":"camino","disambiguator":[8752729102740321389,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":110,"id":{"name":"semver","disambiguator":[6138061531441618446,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":111,"id":{"name":"cargo_platform","disambiguator":[16658664874723081101,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":112,"id":{"name":"async_trait","disambiguator":[3717600401795139183,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":113,"id":{"name":"reqwest","disambiguator":[4713327246748578341,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":114,"id":{"name":"http","disambiguator":[18107581046445571459,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":115,"id":{"name":"fnv","disambiguator":[1526125635387841081,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":116,"id":{"name":"url","disambiguator":[12231729472022566309,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":117,"id":{"name":"form_urlencoded","disambiguator":[10608808757595914469,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":118,"id":{"name":"percent_encoding","disambiguator":[16511006977036736411,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":119,"id":{"name":"idna","disambiguator":[13414836472472753780,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":120,"id":{"name":"unicode_bidi","disambiguator":[14468088354333177951,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":121,"id":{"name":"unicode_normalization","disambiguator":[9598925151477760949,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":122,"id":{"name":"tinyvec","disambiguator":[18332122225826742171,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":123,"id":{"name":"tinyvec_macros","disambiguator":[10875419502334634020,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","num":124,"id":{"name":"futures_core","disambiguator":[8699272677329186135,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","num":125,"id":{"name":"futures_util","disambiguator":[13377393946723360603,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":126,"id":{"name":"pin_utils","disambiguator":[4137458827028393668,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":127,"id":{"name":"futures_macro","disambiguator":[9138652212337653651,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":128,"id":{"name":"futures_task","disambiguator":[18417935591013933675,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":129,"id":{"name":"pin_project_lite","disambiguator":[13538260751834456167,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":130,"id":{"name":"slab","disambiguator":[1632754967940313787,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":131,"id":{"name":"futures_io","disambiguator":[12892626021524678902,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":132,"id":{"name":"log","disambiguator":[16472255942076599003,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":133,"id":{"name":"http_body","disambiguator":[3749062583993301695,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","num":134,"id":{"name":"tokio","disambiguator":[14512511767748884222,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":135,"id":{"name":"mio","disambiguator":[13579241178913253437,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":136,"id":{"name":"socket2","disambiguator":[11248702686171348296,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":137,"id":{"name":"num_cpus","disambiguator":[11049082887327844334,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":138,"id":{"name":"hyper","disambiguator":[4534423203269794114,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":139,"id":{"name":"futures_channel","disambiguator":[9019469092809684545,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","num":140,"id":{"name":"tracing","disambiguator":[16701418842627249098,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":141,"id":{"name":"tracing_core","disambiguator":[444471876312461137,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":142,"id":{"name":"tracing_attributes","disambiguator":[15141037374487719097,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":143,"id":{"name":"tower_service","disambiguator":[12878869572648861875,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":144,"id":{"name":"h2","disambiguator":[12618054594232962220,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":145,"id":{"name":"tokio_util","disambiguator":[17021917141547763171,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":146,"id":{"name":"futures_sink","disambiguator":[11484984322259330916,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":147,"id":{"name":"indexmap","disambiguator":[11479065047218516536,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":148,"id":{"name":"hashbrown","disambiguator":[12289714350158195138,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":149,"id":{"name":"httparse","disambiguator":[9315140183853085367,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":150,"id":{"name":"want","disambiguator":[11220457293521235671,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":151,"id":{"name":"try_lock","disambiguator":[7939394656604504649,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":152,"id":{"name":"rustls","disambiguator":[15526725876887540831,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":153,"id":{"name":"ring","disambiguator":[12055077100490937217,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":154,"id":{"name":"untrusted","disambiguator":[13999471182684517631,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":155,"id":{"name":"spin","disambiguator":[11758997755284529733,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":156,"id":{"name":"webpki","disambiguator":[9738644160869591486,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":157,"id":{"name":"sct","disambiguator":[9630748534184732731,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","num":158,"id":{"name":"base64","disambiguator":[4600128248951093196,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":159,"id":{"name":"encoding_rs","disambiguator":[2417676077627871548,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":160,"id":{"name":"mime","disambiguator":[11444421134953651689,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":161,"id":{"name":"serde_urlencoded","disambiguator":[6370090635674625156,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":162,"id":{"name":"tokio_rustls","disambiguator":[9192929759660125652,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":163,"id":{"name":"ipnet","disambiguator":[12715735337727386460,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":164,"id":{"name":"webpki_roots","disambiguator":[7960746102071795373,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":165,"id":{"name":"hyper_rustls","disambiguator":[16847000527143666083,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","num":166,"id":{"name":"rustls_pemfile","disambiguator":[810048492393891782,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","num":167,"id":{"name":"tracing_futures","disambiguator":[11270491760630430194,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","num":168,"id":{"name":"pin_project","disambiguator":[16188773673079319031,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","num":169,"id":{"name":"pin_project_internal","disambiguator":[10830783223949348654,0]}},{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","num":170,"id":{"name":"futures_timer","disambiguator":[17632690682388426167,0]}}],"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":0,"byte_end":25316,"line_start":1,"line_end":737,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":2015},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/mod.rs","byte_start":25346,"byte_end":25359,"line_start":2,"line_end":2,"column_start":17,"column_end":30},"alias_span":null,"name":"Authorization","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":2032},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/mod.rs","byte_start":25866,"byte_end":25877,"line_start":28,"line_end":28,"column_start":22,"column_end":33},"alias_span":null,"name":"HttpClientError","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":2026},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/mod.rs","byte_start":25898,"byte_end":25906,"line_start":28,"line_end":28,"column_start":54,"column_end":62},"alias_span":null,"name":"Http","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":2151},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/mod.rs","byte_start":26050,"byte_end":26070,"line_start":36,"line_end":36,"column_start":18,"column_end":38},"alias_span":null,"name":"JsonRpcClientWrapper","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":2113},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/mod.rs","byte_start":26072,"byte_end":26078,"line_start":36,"line_end":36,"column_start":40,"column_end":46},"alias_span":null,"name":"Quorum","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":2142},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/mod.rs","byte_start":26080,"byte_end":26091,"line_start":36,"line_end":36,"column_start":48,"column_end":59},"alias_span":null,"name":"QuorumError","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":2092},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/mod.rs","byte_start":26093,"byte_end":26107,"line_start":36,"line_end":36,"column_start":61,"column_end":75},"alias_span":null,"name":"QuorumProvider","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":2132},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/mod.rs","byte_start":26109,"byte_end":26125,"line_start":36,"line_end":36,"column_start":77,"column_end":93},"alias_span":null,"name":"WeightedProvider","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":2195},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/mod.rs","byte_start":26150,"byte_end":26158,"line_start":39,"line_end":39,"column_start":14,"column_end":22},"alias_span":null,"name":"RwClient","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":2208},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/mod.rs","byte_start":26160,"byte_end":26173,"line_start":39,"line_end":39,"column_start":24,"column_end":37},"alias_span":null,"name":"RwClientError","value":"","parent":{"krate":0,"index":3}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/mod.rs","byte_start":26275,"byte_end":26276,"line_start":44,"line_end":44,"column_start":16,"column_end":17},"alias_span":null,"name":"*","value":"HttpRateLimitRetryPolicy, RetryClient","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":2401},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/mod.rs","byte_start":26304,"byte_end":26313,"line_start":47,"line_end":47,"column_start":16,"column_end":25},"alias_span":null,"name":"MockError","value":"","parent":{"krate":0,"index":3}},{"kind":"Use","ref_id":{"krate":0,"index":2385},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/mod.rs","byte_start":26315,"byte_end":26327,"line_start":47,"line_end":47,"column_start":27,"column_end":39},"alias_span":null,"name":"MockProvider","value":"","parent":{"krate":0,"index":3}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":249,"byte_end":250,"line_start":8,"line_end":8,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"JsonRpcClientWrapper, Http, QuorumProvider, HttpProvider, RwClient, MockProvider","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":838},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":286,"byte_end":303,"line_start":11,"line_end":11,"column_start":20,"column_end":37},"alias_span":null,"name":"is_local_endpoint","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2499},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":305,"byte_end":315,"line_start":11,"line_end":11,"column_start":39,"column_end":49},"alias_span":null,"name":"FilterKind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2434},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":317,"byte_end":325,"line_start":11,"line_end":11,"column_start":51,"column_end":59},"alias_span":null,"name":"Provider","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2447},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":327,"byte_end":340,"line_start":11,"line_end":11,"column_start":61,"column_end":74},"alias_span":null,"name":"ProviderError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2877},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":342,"byte_end":353,"line_start":11,"line_end":11,"column_start":76,"column_end":87},"alias_span":null,"name":"ProviderExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2955},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":440,"byte_end":458,"line_start":17,"line_end":17,"column_start":30,"column_end":48},"alias_span":null,"name":"PendingTransaction","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3122},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":511,"byte_end":528,"line_start":20,"line_end":20,"column_start":28,"column_end":45},"alias_span":null,"name":"EscalatingPending","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1205},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":566,"byte_end":574,"line_start":23,"line_end":23,"column_start":21,"column_end":29},"alias_span":null,"name":"LogQuery","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3201},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":576,"byte_end":589,"line_start":23,"line_end":23,"column_start":31,"column_end":44},"alias_span":null,"name":"LogQueryError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":125,"index":4030},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":627,"byte_end":636,"line_start":26,"line_end":26,"column_start":23,"column_end":32},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1331},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":660,"byte_end":668,"line_start":28,"line_end":28,"column_start":5,"column_end":13},"alias_span":null,"name":"interval","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3282},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":670,"byte_end":683,"line_start":28,"line_end":28,"column_start":15,"column_end":28},"alias_span":null,"name":"FilterWatcher","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1371},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":685,"byte_end":702,"line_start":28,"line_end":28,"column_start":30,"column_end":47},"alias_span":null,"name":"TransactionStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1336},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":704,"byte_end":731,"line_start":28,"line_end":28,"column_start":49,"column_end":76},"alias_span":null,"name":"DEFAULT_LOCAL_POLL_INTERVAL","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1335},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":733,"byte_end":754,"line_start":28,"line_end":28,"column_start":78,"column_end":99},"alias_span":null,"name":"DEFAULT_POLL_INTERVAL","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1469},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":789,"byte_end":801,"line_start":32,"line_end":32,"column_start":18,"column_end":30},"alias_span":null,"name":"PubsubClient","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3367},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":803,"byte_end":821,"line_start":32,"line_end":32,"column_start":32,"column_end":50},"alias_span":null,"name":"SubscriptionStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1684},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":223514,"byte_end":223521,"line_start":20,"line_end":20,"column_start":17,"column_end":24},"alias_span":null,"name":"balance","value":"","parent":{"krate":0,"index":1501}},{"kind":"Use","ref_id":{"krate":0,"index":1686},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":223523,"byte_end":223527,"line_start":20,"line_end":20,"column_start":26,"column_end":30},"alias_span":null,"name":"code","value":"","parent":{"krate":0,"index":1501}},{"kind":"Use","ref_id":{"krate":0,"index":1685},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":223529,"byte_end":223534,"line_start":20,"line_end":20,"column_start":32,"column_end":37},"alias_span":null,"name":"nonce","value":"","parent":{"krate":0,"index":1501}},{"kind":"Use","ref_id":{"krate":0,"index":1683},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":223536,"byte_end":223541,"line_start":20,"line_end":20,"column_start":39,"column_end":44},"alias_span":null,"name":"state","value":"","parent":{"krate":0,"index":1501}},{"kind":"Use","ref_id":{"krate":0,"index":1687},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":223543,"byte_end":223550,"line_start":20,"line_end":20,"column_start":46,"column_end":53},"alias_span":null,"name":"storage","value":"","parent":{"krate":0,"index":1501}},{"kind":"Use","ref_id":{"krate":0,"index":1812},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":23288,"byte_end":23294,"line_start":678,"line_end":678,"column_start":25,"column_end":31},"alias_span":null,"name":"GOERLI","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1814},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":23296,"byte_end":23303,"line_start":678,"line_end":678,"column_start":33,"column_end":40},"alias_span":null,"name":"MAINNET","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1816},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":23305,"byte_end":23312,"line_start":678,"line_end":678,"column_start":42,"column_end":49},"alias_span":null,"name":"ROPSTEN","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":0,"byte_end":25316,"line_start":1,"line_end":737,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":511},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":839},{"krate":0,"index":840},{"krate":0,"index":843},{"krate":0,"index":846},{"krate":0,"index":849},{"krate":0,"index":852},{"krate":0,"index":855},{"krate":0,"index":904},{"krate":0,"index":1050},{"krate":0,"index":1053},{"krate":0,"index":1155},{"krate":0,"index":1158},{"krate":0,"index":1241},{"krate":0,"index":1242},{"krate":0,"index":1245},{"krate":0,"index":1248},{"krate":0,"index":1393},{"krate":0,"index":1396},{"krate":0,"index":1397},{"krate":0,"index":1400},{"krate":0,"index":1403},{"krate":0,"index":1406},{"krate":0,"index":1409},{"krate":0,"index":1412},{"krate":0,"index":1494},{"krate":0,"index":1495},{"krate":0,"index":1498},{"krate":0,"index":1501},{"krate":0,"index":1688},{"krate":0,"index":1730},{"krate":0,"index":1733},{"krate":0,"index":1736},{"krate":0,"index":1737},{"krate":0,"index":1740},{"krate":0,"index":1743},{"krate":0,"index":1744},{"krate":0,"index":1747},{"krate":0,"index":1748},{"krate":0,"index":1750},{"krate":0,"index":1751},{"krate":0,"index":1754},{"krate":0,"index":1755},{"krate":0,"index":1757},{"krate":0,"index":1760},{"krate":0,"index":1763},{"krate":0,"index":1766},{"krate":0,"index":1767},{"krate":0,"index":3735},{"krate":0,"index":3743},{"krate":0,"index":3753},{"krate":0,"index":3764},{"krate":0,"index":1770},{"krate":0,"index":1771},{"krate":0,"index":1774},{"krate":0,"index":3775},{"krate":0,"index":4077},{"krate":0,"index":4315},{"krate":0,"index":4554},{"krate":0,"index":1780},{"krate":0,"index":1781},{"krate":0,"index":1784},{"krate":0,"index":1787},{"krate":0,"index":1790}],"decl_id":null,"docs":"# Clients for interacting with Ethereum nodes","sig":null,"attributes":[{"value":"deny(unsafe_code)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":39,"byte_end":60,"line_start":2,"line_end":2,"column_start":1,"column_end":22}},{"value":"deny(rustdoc :: broken_intra_doc_links)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":61,"byte_end":102,"line_start":3,"line_end":3,"column_start":1,"column_end":42}},{"value":"allow(clippy :: type_complexity)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":103,"byte_end":137,"line_start":4,"line_end":4,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":1822},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","byte_start":26703,"byte_end":26715,"line_start":15,"line_end":15,"column_start":12,"column_end":24},"name":"JsonRpcError","qualname":"::transports::common::JsonRpcError","value":"JsonRpcError { code, message, data }","parent":null,"children":[{"krate":0,"index":1823},{"krate":0,"index":1824},{"krate":0,"index":1825}],"decl_id":null,"docs":" A JSON-RPC 2.0 error\n","sig":null,"attributes":[{"value":"/ A JSON-RPC 2.0 error","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","byte_start":26667,"byte_end":26691,"line_start":14,"line_end":14,"column_start":1,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":1823},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","byte_start":26749,"byte_end":26753,"line_start":17,"line_end":17,"column_start":9,"column_end":13},"name":"code","qualname":"::transports::common::JsonRpcError::code","value":"i64","parent":{"krate":0,"index":1822},"children":[],"decl_id":null,"docs":" The error code\n","sig":null,"attributes":[{"value":"/ The error code","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","byte_start":26722,"byte_end":26740,"line_start":16,"line_end":16,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":1824},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","byte_start":26794,"byte_end":26801,"line_start":19,"line_end":19,"column_start":9,"column_end":16},"name":"message","qualname":"::transports::common::JsonRpcError::message","value":"std::string::String","parent":{"krate":0,"index":1822},"children":[],"decl_id":null,"docs":" The error message\n","sig":null,"attributes":[{"value":"/ The error message","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","byte_start":26764,"byte_end":26785,"line_start":18,"line_end":18,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":1825},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","byte_start":26843,"byte_end":26847,"line_start":21,"line_end":21,"column_start":9,"column_end":13},"name":"data","qualname":"::transports::common::JsonRpcError::data","value":"std::option::Option<serde_json::Value>","parent":{"krate":0,"index":1822},"children":[],"decl_id":null,"docs":" Additional data\n","sig":null,"attributes":[{"value":"/ Additional data","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","byte_start":26815,"byte_end":26834,"line_start":20,"line_end":20,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","byte_start":26911,"byte_end":26914,"line_start":25,"line_end":25,"column_start":8,"column_end":11},"name":"fmt","qualname":"<JsonRpcError as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2016},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","byte_start":32787,"byte_end":32792,"line_start":189,"line_end":189,"column_start":5,"column_end":10},"name":"Basic","qualname":"::transports::common::Authorization::Basic","value":"Authorization::Basic(String)","parent":{"krate":0,"index":2015},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2018},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","byte_start":32793,"byte_end":32799,"line_start":189,"line_end":189,"column_start":11,"column_end":17},"name":"0","qualname":"::transports::common::Authorization::Basic::0","value":"std::string::String","parent":{"krate":0,"index":2016},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2019},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","byte_start":32806,"byte_end":32812,"line_start":190,"line_end":190,"column_start":5,"column_end":11},"name":"Bearer","qualname":"::transports::common::Authorization::Bearer","value":"Authorization::Bearer(String)","parent":{"krate":0,"index":2015},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2021},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","byte_start":32813,"byte_end":32819,"line_start":190,"line_end":190,"column_start":12,"column_end":18},"name":"0","qualname":"::transports::common::Authorization::Bearer::0","value":"std::string::String","parent":{"krate":0,"index":2019},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2015},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","byte_start":32767,"byte_end":32780,"line_start":188,"line_end":188,"column_start":10,"column_end":23},"name":"Authorization","qualname":"::transports::common::Authorization","value":"enum Authorization { Basic(String), Bearer(String), }","parent":null,"children":[{"krate":0,"index":2016},{"krate":0,"index":2019}],"decl_id":null,"docs":" Basic or bearer authentication in http or websocket transport","sig":null,"attributes":[{"value":"/ Basic or bearer authentication in http or websocket transport","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","byte_start":32593,"byte_end":32658,"line_start":184,"line_end":184,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","byte_start":32659,"byte_end":32662,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ Use to inject username and password or an auth token into requests","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","byte_start":32663,"byte_end":32733,"line_start":186,"line_end":186,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","byte_start":32857,"byte_end":32862,"line_start":194,"line_end":194,"column_start":12,"column_end":17},"name":"basic","qualname":"<Authorization>::basic","value":"fn basic<impl Into<String>,\nimpl Into<String>>(impl Into<String>, impl Into<String>) -> Self where\nimpl Into<String>: Into<String>, impl Into<String>: Into<String>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","byte_start":33066,"byte_end":33072,"line_start":199,"line_end":199,"column_start":12,"column_end":18},"name":"bearer","qualname":"<Authorization>::bearer","value":"fn bearer<impl Into<String>>(impl Into<String>) -> Self where\nimpl Into<String>: Into<String>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","byte_start":33198,"byte_end":33201,"line_start":205,"line_end":205,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Authorization as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2026},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":36866,"byte_end":36874,"line_start":32,"line_end":32,"column_start":12,"column_end":20},"name":"Provider","qualname":"::transports::http::Provider","value":"Provider {  }","parent":null,"children":[{"krate":0,"index":2027},{"krate":0,"index":2028},{"krate":0,"index":2029}],"decl_id":null,"docs":" A low-level JSON-RPC Client over HTTP.","sig":null,"attributes":[{"value":"/ A low-level JSON-RPC Client over HTTP.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":36415,"byte_end":36457,"line_start":16,"line_end":16,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":36458,"byte_end":36461,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":36462,"byte_end":36475,"line_start":18,"line_end":18,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":36476,"byte_end":36479,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":36480,"byte_end":36493,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"/ use ethers_core::types::U64;","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":36494,"byte_end":36526,"line_start":21,"line_end":21,"column_start":1,"column_end":33}},{"value":"/ use ethers_providers::{JsonRpcClient, Http};","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":36527,"byte_end":36575,"line_start":22,"line_end":22,"column_start":1,"column_end":49}},{"value":"/ use std::str::FromStr;","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":36576,"byte_end":36602,"line_start":23,"line_end":23,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":36603,"byte_end":36606,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # async fn foo() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":36607,"byte_end":36671,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ let provider = Http::from_str(\"http://localhost:8545\")?;","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":36672,"byte_end":36732,"line_start":26,"line_end":26,"column_start":1,"column_end":61}},{"value":"/ let block_number: U64 = provider.request(\"eth_blockNumber\", ()).await?;","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":36733,"byte_end":36808,"line_start":27,"line_end":27,"column_start":1,"column_end":76}},{"value":"/ # Ok(())","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":36809,"byte_end":36821,"line_start":28,"line_end":28,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":36822,"byte_end":36829,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":36830,"byte_end":36837,"line_start":30,"line_end":30,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2053},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":37093,"byte_end":37105,"line_start":43,"line_end":43,"column_start":5,"column_end":17},"name":"ReqwestError","qualname":"::transports::http::ClientError::ReqwestError","value":"ClientError::ReqwestError(ReqwestError)","parent":{"krate":0,"index":2032},"children":[],"decl_id":null,"docs":" Thrown if the request failed\n","sig":null,"attributes":[{"value":"/ Thrown if the request failed","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":37030,"byte_end":37062,"line_start":41,"line_end":41,"column_start":5,"column_end":37}},{"value":"error(transparent)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":37067,"byte_end":37088,"line_start":42,"line_end":42,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":2055},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":37114,"byte_end":37126,"line_start":43,"line_end":43,"column_start":26,"column_end":38},"name":"0","qualname":"::transports::http::ClientError::ReqwestError::0","value":"reqwest::Error","parent":{"krate":0,"index":2053},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"from","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":37106,"byte_end":37113,"line_start":43,"line_end":43,"column_start":18,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2056},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":37210,"byte_end":37222,"line_start":46,"line_end":46,"column_start":5,"column_end":17},"name":"JsonRpcError","qualname":"::transports::http::ClientError::JsonRpcError","value":"ClientError::JsonRpcError(JsonRpcError)","parent":{"krate":0,"index":2032},"children":[],"decl_id":null,"docs":" Thrown if the response could not be parsed\n","sig":null,"attributes":[{"value":"error(transparent)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":37133,"byte_end":37154,"line_start":44,"line_end":44,"column_start":5,"column_end":26}},{"value":"/ Thrown if the response could not be parsed","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":37159,"byte_end":37205,"line_start":45,"line_end":45,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":2058},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":37231,"byte_end":37243,"line_start":46,"line_end":46,"column_start":26,"column_end":38},"name":"0","qualname":"::transports::http::ClientError::JsonRpcError::0","value":"transports::common::JsonRpcError","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"from","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":37223,"byte_end":37230,"line_start":46,"line_end":46,"column_start":18,"column_end":25}}]},{"kind":"StructVariant","id":{"krate":0,"index":2059},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":37339,"byte_end":37348,"line_start":50,"line_end":50,"column_start":5,"column_end":14},"name":"SerdeJson","qualname":"::transports::http::ClientError::SerdeJson","value":"ClientError::SerdeJson { err, text }","parent":{"krate":0,"index":2032},"children":[],"decl_id":null,"docs":" Serde JSON Error\n","sig":null,"attributes":[{"value":"error(\"Deserialization Error: {err}. Response: {text}\")","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":37251,"byte_end":37309,"line_start":48,"line_end":48,"column_start":5,"column_end":63}},{"value":"/ Serde JSON Error","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":37314,"byte_end":37334,"line_start":49,"line_end":49,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":2060},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":37351,"byte_end":37354,"line_start":50,"line_end":50,"column_start":17,"column_end":20},"name":"err","qualname":"::transports::http::ClientError::SerdeJson::err","value":"serde_json::Error","parent":{"krate":0,"index":2059},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2061},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":37375,"byte_end":37379,"line_start":50,"line_end":50,"column_start":41,"column_end":45},"name":"text","qualname":"::transports::http::ClientError::SerdeJson::text","value":"std::string::String","parent":{"krate":0,"index":2059},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2032},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":37012,"byte_end":37023,"line_start":40,"line_end":40,"column_start":10,"column_end":21},"name":"ClientError","qualname":"::transports::http::ClientError","value":"enum ClientError {\n    ReqwestError(ReqwestError),\n    JsonRpcError(JsonRpcError),\n    SerdeJson {\n            err: serde_json::Error,\n            text: String,\n        },\n}","parent":null,"children":[{"krate":0,"index":2053},{"krate":0,"index":2056},{"krate":0,"index":2059}],"decl_id":null,"docs":" Error thrown when sending an HTTP request\n","sig":null,"attributes":[{"value":"/ Error thrown when sending an HTTP request","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":36957,"byte_end":37002,"line_start":39,"line_end":39,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":37444,"byte_end":37448,"line_start":54,"line_end":54,"column_start":8,"column_end":12},"name":"from","qualname":"<ProviderError as std::convert::From>::from","value":"fn from(ClientError) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2064},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":37954,"byte_end":37961,"line_start":69,"line_end":69,"column_start":14,"column_end":21},"name":"request","qualname":"<Provider as JsonRpcClient>::request","value":"fn request<'life0, 'life1, 'async_trait, T, R>(&'life0 Self, &'life1 str, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<R, ClientError>> + ::core::marker::Send + 'async_trait>> where\nT: 'async_trait + Serialize + Send + Sync, R: 'async_trait + DeserializeOwned,\n'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3735},"children":[],"decl_id":{"krate":0,"index":3737},"docs":" Sends a POST request with the provided method and the params serialized as JSON\n over HTTP\n","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":37756,"byte_end":37767,"line_start":63,"line_end":63,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":39529,"byte_end":39532,"line_start":117,"line_end":117,"column_start":12,"column_end":15},"name":"new","qualname":"<Provider>::new","value":"fn new<impl Into<Url>>(impl Into<Url>) -> Self where impl Into<Url>: Into<Url>","parent":null,"children":[],"decl_id":null,"docs":" Initializes a new HTTP Client","sig":null,"attributes":[{"value":"/ Initializes a new HTTP Client","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":39257,"byte_end":39290,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":39295,"byte_end":39298,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":39303,"byte_end":39316,"line_start":108,"line_end":108,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":39321,"byte_end":39324,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":39329,"byte_end":39336,"line_start":110,"line_end":110,"column_start":5,"column_end":12}},{"value":"/ use ethers_providers::Http;","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":39341,"byte_end":39372,"line_start":111,"line_end":111,"column_start":5,"column_end":36}},{"value":"/ use url::Url;","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":39377,"byte_end":39394,"line_start":112,"line_end":112,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":39399,"byte_end":39402,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ let url = Url::parse(\"http://localhost:8545\").unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":39407,"byte_end":39466,"line_start":114,"line_end":114,"column_start":5,"column_end":64}},{"value":"/ let provider = Http::new(url);","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":39471,"byte_end":39505,"line_start":115,"line_end":115,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":39510,"byte_end":39517,"line_start":116,"line_end":116,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":39675,"byte_end":39678,"line_start":122,"line_end":122,"column_start":12,"column_end":15},"name":"url","qualname":"<Provider>::url","value":"fn url<'_>(&'_ Self) -> &'_ Url","parent":null,"children":[],"decl_id":null,"docs":" The Url to which requests are made\n","sig":null,"attributes":[{"value":"/ The Url to which requests are made","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":39625,"byte_end":39663,"line_start":121,"line_end":121,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":39793,"byte_end":39800,"line_start":127,"line_end":127,"column_start":12,"column_end":19},"name":"url_mut","qualname":"<Provider>::url_mut","value":"fn url_mut<'_>(&'_ mut Self) -> &'_ mut Url","parent":null,"children":[],"decl_id":null,"docs":" Mutable access to the Url to which requests are made\n","sig":null,"attributes":[{"value":"/ Mutable access to the Url to which requests are made","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":39725,"byte_end":39781,"line_start":126,"line_end":126,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":40226,"byte_end":40239,"line_start":142,"line_end":142,"column_start":12,"column_end":25},"name":"new_with_auth","qualname":"<Provider>::new_with_auth","value":"fn new_with_auth<impl Into<Url>>(impl Into<Url>, Authorization)\n-> Result<Self, HttpClientError> where impl Into<Url>: Into<Url>","parent":null,"children":[],"decl_id":null,"docs":" Initializes a new HTTP Client with authentication","sig":null,"attributes":[{"value":"/ Initializes a new HTTP Client with authentication","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":39859,"byte_end":39912,"line_start":131,"line_end":131,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":39917,"byte_end":39920,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":39925,"byte_end":39938,"line_start":133,"line_end":133,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":39943,"byte_end":39946,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":39951,"byte_end":39958,"line_start":135,"line_end":135,"column_start":5,"column_end":12}},{"value":"/ use ethers_providers::{Authorization, Http};","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":39963,"byte_end":40011,"line_start":136,"line_end":136,"column_start":5,"column_end":53}},{"value":"/ use url::Url;","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":40016,"byte_end":40033,"line_start":137,"line_end":137,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":40038,"byte_end":40041,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ let url = Url::parse(\"http://localhost:8545\").unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":40046,"byte_end":40105,"line_start":139,"line_end":139,"column_start":5,"column_end":64}},{"value":"/ let provider = Http::new_with_auth(url, Authorization::basic(\"admin\", \"good_password\"));","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":40110,"byte_end":40202,"line_start":140,"line_end":140,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":40207,"byte_end":40214,"line_start":141,"line_end":141,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":41111,"byte_end":41126,"line_start":169,"line_end":169,"column_start":12,"column_end":27},"name":"new_with_client","qualname":"<Provider>::new_with_client","value":"fn new_with_client<impl Into<Url>>(impl Into<Url>, reqwest::Client) -> Self\nwhere impl Into<Url>: Into<Url>","parent":null,"children":[],"decl_id":null,"docs":" Allows to customize the provider by providing your own http client","sig":null,"attributes":[{"value":"/ Allows to customize the provider by providing your own http client","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":40716,"byte_end":40786,"line_start":157,"line_end":157,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":40791,"byte_end":40794,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":40799,"byte_end":40812,"line_start":159,"line_end":159,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":40817,"byte_end":40820,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":40825,"byte_end":40832,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"/ use ethers_providers::Http;","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":40837,"byte_end":40868,"line_start":162,"line_end":162,"column_start":5,"column_end":36}},{"value":"/ use url::Url;","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":40873,"byte_end":40890,"line_start":163,"line_end":163,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":40895,"byte_end":40898,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ let url = Url::parse(\"http://localhost:8545\").unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":40903,"byte_end":40962,"line_start":165,"line_end":165,"column_start":5,"column_end":64}},{"value":"/ let client = reqwest::Client::builder().build().unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":40967,"byte_end":41028,"line_start":166,"line_end":166,"column_start":5,"column_end":66}},{"value":"/ let provider = Http::new_with_client(url, client);","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":41033,"byte_end":41087,"line_start":167,"line_end":167,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":41092,"byte_end":41099,"line_start":168,"line_end":168,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":41324,"byte_end":41332,"line_start":177,"line_end":177,"column_start":8,"column_end":16},"name":"from_str","qualname":"<Provider as std::str::FromStr>::from_str","value":"fn from_str<'_>(&'_ str) -> Result<Self, Self::Err>","parent":{"krate":2,"index":12989},"children":[],"decl_id":{"krate":2,"index":12991},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":41482,"byte_end":41487,"line_start":184,"line_end":184,"column_start":8,"column_end":13},"name":"clone","qualname":"<Provider as std::clone::Clone>::clone","value":"fn clone<'_>(&'_ Self) -> Self","parent":{"krate":2,"index":2882},"children":[],"decl_id":{"krate":2,"index":2883},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2086},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":41787,"byte_end":41800,"line_start":194,"line_end":194,"column_start":5,"column_end":18},"name":"InvalidHeader","qualname":"::transports::http::HttpClientError::InvalidHeader","value":"HttpClientError::InvalidHeader(http::header::InvalidHeaderValue)","parent":{"krate":0,"index":2072},"children":[],"decl_id":null,"docs":" Thrown if unable to build headers for client\n","sig":null,"attributes":[{"value":"/ Thrown if unable to build headers for client","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":41708,"byte_end":41756,"line_start":192,"line_end":192,"column_start":5,"column_end":53}},{"value":"error(transparent)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":41761,"byte_end":41782,"line_start":193,"line_end":193,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":2088},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":41809,"byte_end":41841,"line_start":194,"line_end":194,"column_start":27,"column_end":59},"name":"0","qualname":"::transports::http::HttpClientError::InvalidHeader::0","value":"reqwest::header::InvalidHeaderValue","parent":{"krate":0,"index":2086},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"from","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":41801,"byte_end":41808,"line_start":194,"line_end":194,"column_start":19,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2089},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":41916,"byte_end":41927,"line_start":198,"line_end":198,"column_start":5,"column_end":16},"name":"ClientBuild","qualname":"::transports::http::HttpClientError::ClientBuild","value":"HttpClientError::ClientBuild(reqwest::Error)","parent":{"krate":0,"index":2072},"children":[],"decl_id":null,"docs":" Thrown if unable to build client\n","sig":null,"attributes":[{"value":"/ Thrown if unable to build client","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":41849,"byte_end":41885,"line_start":196,"line_end":196,"column_start":5,"column_end":41}},{"value":"error(transparent)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":41890,"byte_end":41911,"line_start":197,"line_end":197,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":2091},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":41936,"byte_end":41950,"line_start":198,"line_end":198,"column_start":25,"column_end":39},"name":"0","qualname":"::transports::http::HttpClientError::ClientBuild::0","value":"reqwest::Error","parent":{"krate":0,"index":2089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"from","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":41928,"byte_end":41935,"line_start":198,"line_end":198,"column_start":17,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":2072},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":41686,"byte_end":41701,"line_start":191,"line_end":191,"column_start":10,"column_end":25},"name":"HttpClientError","qualname":"::transports::http::HttpClientError","value":"enum HttpClientError {\n    InvalidHeader(http::header::InvalidHeaderValue),\n    ClientBuild(reqwest::Error),\n}","parent":null,"children":[{"krate":0,"index":2086},{"krate":0,"index":2089}],"decl_id":null,"docs":" Error thrown when dealing with Http clients\n","sig":null,"attributes":[{"value":"/ Error thrown when dealing with Http clients","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":41629,"byte_end":41676,"line_start":190,"line_end":190,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":2092},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":44651,"byte_end":44665,"line_start":75,"line_end":75,"column_start":12,"column_end":26},"name":"QuorumProvider","qualname":"::transports::quorum::QuorumProvider","value":"QuorumProvider {  }","parent":null,"children":[{"krate":0,"index":2094},{"krate":0,"index":2095},{"krate":0,"index":2096}],"decl_id":null,"docs":" A provider that bundles multiple providers and only returns a value to the\n caller once the quorum has been reached.","sig":null,"attributes":[{"value":"/ A provider that bundles multiple providers and only returns a value to the","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":42379,"byte_end":42457,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ caller once the quorum has been reached.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":42458,"byte_end":42502,"line_start":18,"line_end":18,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":42503,"byte_end":42506,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":42507,"byte_end":42520,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":42521,"byte_end":42524,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Create a `QuorumProvider` that uses a homogenous `Provider` type only returns a value if the","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":42525,"byte_end":42621,"line_start":22,"line_end":22,"column_start":1,"column_end":97}},{"value":"/ `Quorum::Majority` of the weighted providers return the same value.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":42622,"byte_end":42693,"line_start":23,"line_end":23,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":42694,"byte_end":42697,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":42698,"byte_end":42705,"line_start":25,"line_end":25,"column_start":1,"column_end":8}},{"value":"/ use ethers_core::types::U64;","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":42706,"byte_end":42738,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/ use ethers_providers::{JsonRpcClient, QuorumProvider, Quorum, WeightedProvider, Http};","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":42739,"byte_end":42829,"line_start":27,"line_end":27,"column_start":1,"column_end":91}},{"value":"/ use std::str::FromStr;","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":42830,"byte_end":42856,"line_start":28,"line_end":28,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":42857,"byte_end":42860,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # async fn foo() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":42861,"byte_end":42925,"line_start":30,"line_end":30,"column_start":1,"column_end":65}},{"value":"/ let provider1 = WeightedProvider::new(Http::from_str(\"http://localhost:8545\")?);","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":42926,"byte_end":43010,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/ let provider2 = WeightedProvider::with_weight(Http::from_str(\"http://localhost:8545\")?, 2);","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":43011,"byte_end":43106,"line_start":32,"line_end":32,"column_start":1,"column_end":96}},{"value":"/ let provider3 = WeightedProvider::new(Http::from_str(\"http://localhost:8545\")?);","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":43107,"byte_end":43191,"line_start":33,"line_end":33,"column_start":1,"column_end":85}},{"value":"/ let provider = QuorumProvider::builder()","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":43192,"byte_end":43236,"line_start":34,"line_end":34,"column_start":1,"column_end":45}},{"value":"/     .add_providers([provider1, provider2, provider3])","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":43237,"byte_end":43294,"line_start":35,"line_end":35,"column_start":1,"column_end":58}},{"value":"/     .quorum(Quorum::Majority)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":43295,"byte_end":43328,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/     .build();","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":43329,"byte_end":43346,"line_start":37,"line_end":37,"column_start":1,"column_end":18}},{"value":"/ // the weight at which a quorum is reached,","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":43347,"byte_end":43394,"line_start":38,"line_end":38,"column_start":1,"column_end":48}},{"value":"/ assert_eq!(provider.quorum_weight(), 4 / 2); // majority >=50%","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":43395,"byte_end":43461,"line_start":39,"line_end":39,"column_start":1,"column_end":67}},{"value":"/ let block_number: U64 = provider.request(\"eth_blockNumber\", ()).await?;","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":43462,"byte_end":43537,"line_start":40,"line_end":40,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":43538,"byte_end":43541,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ # Ok(())","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":43542,"byte_end":43554,"line_start":42,"line_end":42,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":43555,"byte_end":43562,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":43563,"byte_end":43570,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":43571,"byte_end":43574,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":43575,"byte_end":43588,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":43589,"byte_end":43592,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Create a `QuorumProvider` consisting of different `Provider` types","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":43593,"byte_end":43663,"line_start":48,"line_end":48,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":43664,"byte_end":43667,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":43668,"byte_end":43675,"line_start":50,"line_end":50,"column_start":1,"column_end":8}},{"value":"/ use ethers_core::types::U64;","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":43676,"byte_end":43708,"line_start":51,"line_end":51,"column_start":1,"column_end":33}},{"value":"/ use ethers_providers::{JsonRpcClient, QuorumProvider, Quorum, WeightedProvider, Http, Ws};","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":43709,"byte_end":43803,"line_start":52,"line_end":52,"column_start":1,"column_end":95}},{"value":"/ use std::str::FromStr;","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":43804,"byte_end":43830,"line_start":53,"line_end":53,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":43831,"byte_end":43834,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # async fn foo() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":43835,"byte_end":43899,"line_start":55,"line_end":55,"column_start":1,"column_end":65}},{"value":"/     let provider: QuorumProvider = QuorumProvider::dyn_rpc()","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":43900,"byte_end":43964,"line_start":56,"line_end":56,"column_start":1,"column_end":65}},{"value":"/         .add_provider(WeightedProvider::new(Box::new(Http::from_str(\"http://localhost:8545\")?)))","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":43965,"byte_end":44065,"line_start":57,"line_end":57,"column_start":1,"column_end":101}},{"value":"/         .add_provider(WeightedProvider::with_weight(","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":44066,"byte_end":44122,"line_start":58,"line_end":58,"column_start":1,"column_end":57}},{"value":"/             Box::new(Ws::connect(\"ws://localhost:8545\").await?),","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":44123,"byte_end":44191,"line_start":59,"line_end":59,"column_start":1,"column_end":69}},{"value":"/             2,","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":44192,"byte_end":44210,"line_start":60,"line_end":60,"column_start":1,"column_end":19}},{"value":"/         ))","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":44211,"byte_end":44225,"line_start":61,"line_end":61,"column_start":1,"column_end":15}},{"value":"/         .add_provider(WeightedProvider::with_weight(","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":44226,"byte_end":44282,"line_start":62,"line_end":62,"column_start":1,"column_end":57}},{"value":"/             Box::new(Ws::connect(\"ws://localhost:8545\").await?),","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":44283,"byte_end":44351,"line_start":63,"line_end":63,"column_start":1,"column_end":69}},{"value":"/             2,","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":44352,"byte_end":44370,"line_start":64,"line_end":64,"column_start":1,"column_end":19}},{"value":"/         ))","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":44371,"byte_end":44385,"line_start":65,"line_end":65,"column_start":1,"column_end":15}},{"value":"/         // the quorum provider will yield the response if >50% of the weighted inner provider","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":44386,"byte_end":44483,"line_start":66,"line_end":66,"column_start":1,"column_end":98}},{"value":"/         // returned the same value","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":44484,"byte_end":44522,"line_start":67,"line_end":67,"column_start":1,"column_end":39}},{"value":"/         .quorum(Quorum::Majority)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":44523,"byte_end":44560,"line_start":68,"line_end":68,"column_start":1,"column_end":38}},{"value":"/         .build();","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":44561,"byte_end":44582,"line_start":69,"line_end":69,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":44583,"byte_end":44586,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ # Ok(())","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":44587,"byte_end":44599,"line_start":71,"line_end":71,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":44600,"byte_end":44607,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":44608,"byte_end":44615,"line_start":73,"line_end":73,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":45066,"byte_end":45073,"line_start":86,"line_end":86,"column_start":12,"column_end":19},"name":"dyn_rpc","qualname":"<QuorumProvider<Box<dyn JsonRpcClientWrapper>>>::dyn_rpc","value":"fn dyn_rpc() -> QuorumProviderBuilder<Box<dyn JsonRpcClientWrapper>>","parent":null,"children":[],"decl_id":null,"docs":" Create a `QuorumProvider` for different `JsonRpcClient` types\n","sig":null,"attributes":[{"value":"/ Create a `QuorumProvider` for different `JsonRpcClient` types","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":44989,"byte_end":45054,"line_start":85,"line_end":85,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":45299,"byte_end":45310,"line_start":93,"line_end":93,"column_start":12,"column_end":23},"name":"dyn_pub_sub","qualname":"<QuorumProvider<Box<dyn PubsubClientWrapper>>>::dyn_pub_sub","value":"fn dyn_pub_sub() -> QuorumProviderBuilder<Box<dyn PubsubClientWrapper>>","parent":null,"children":[],"decl_id":null,"docs":" Create a `QuorumProvider` for different `PubsubClient` types\n","sig":null,"attributes":[{"value":"/ Create a `QuorumProvider` for different `PubsubClient` types","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":45223,"byte_end":45287,"line_start":92,"line_end":92,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":45540,"byte_end":45547,"line_start":100,"line_end":100,"column_start":12,"column_end":19},"name":"builder","qualname":"<QuorumProvider<T>>::builder","value":"fn builder() -> QuorumProviderBuilder<T>","parent":null,"children":[],"decl_id":null,"docs":" Convenience method for creating a `QuorumProviderBuilder` with same `JsonRpcClient` types\n","sig":null,"attributes":[{"value":"/ Convenience method for creating a `QuorumProviderBuilder` with same `JsonRpcClient` types","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":45435,"byte_end":45528,"line_start":99,"line_end":99,"column_start":5,"column_end":98}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":45639,"byte_end":45642,"line_start":104,"line_end":104,"column_start":12,"column_end":15},"name":"new","qualname":"<QuorumProvider<T>>::new","value":"fn new<impl IntoIterator<Item = WeightedProvider<T>>>(Quorum,\nimpl IntoIterator<Item = WeightedProvider<T>>) -> Self where\nimpl IntoIterator<Item = WeightedProvider<T>>: IntoIterator<Item =\nWeightedProvider<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":45817,"byte_end":45826,"line_start":108,"line_end":108,"column_start":12,"column_end":21},"name":"providers","qualname":"<QuorumProvider<T>>::providers","value":"fn providers<'_>(&'_ Self) -> &'_ [WeightedProvider<T>]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":45962,"byte_end":45975,"line_start":113,"line_end":113,"column_start":12,"column_end":25},"name":"quorum_weight","qualname":"<QuorumProvider<T>>::quorum_weight","value":"fn quorum_weight<'_>(&'_ Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" The weight at which the provider reached a quorum\n","sig":null,"attributes":[{"value":"/ The weight at which the provider reached a quorum","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":45897,"byte_end":45950,"line_start":112,"line_end":112,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":46037,"byte_end":46049,"line_start":117,"line_end":117,"column_start":12,"column_end":24},"name":"add_provider","qualname":"<QuorumProvider<T>>::add_provider","value":"fn add_provider<'_>(&'_ mut Self, WeightedProvider<T>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2103},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":46242,"byte_end":46263,"line_start":124,"line_end":124,"column_start":12,"column_end":33},"name":"QuorumProviderBuilder","qualname":"::transports::quorum::QuorumProviderBuilder","value":"QuorumProviderBuilder {  }","parent":null,"children":[{"krate":0,"index":2105},{"krate":0,"index":2106}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":46387,"byte_end":46394,"line_start":130,"line_end":130,"column_start":8,"column_end":15},"name":"default","qualname":"<QuorumProviderBuilder<T> as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":46529,"byte_end":46541,"line_start":136,"line_end":136,"column_start":12,"column_end":24},"name":"add_provider","qualname":"<QuorumProviderBuilder<T>>::add_provider","value":"fn add_provider(Self, WeightedProvider<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":46662,"byte_end":46675,"line_start":140,"line_end":140,"column_start":12,"column_end":25},"name":"add_providers","qualname":"<QuorumProviderBuilder<T>>::add_providers","value":"fn add_providers<impl IntoIterator<Item = WeightedProvider<T>>>(Self,\nimpl IntoIterator<Item = WeightedProvider<T>>) -> Self where\nimpl IntoIterator<Item = WeightedProvider<T>>: IntoIterator<Item =\nWeightedProvider<T>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":46928,"byte_end":46934,"line_start":151,"line_end":151,"column_start":12,"column_end":18},"name":"quorum","qualname":"<QuorumProviderBuilder<T>>::quorum","value":"fn quorum(Self, Quorum) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the kind of quorum\n","sig":null,"attributes":[{"value":"/ Set the kind of quorum","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":46890,"byte_end":46916,"line_start":150,"line_end":150,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":47032,"byte_end":47037,"line_start":156,"line_end":156,"column_start":12,"column_end":17},"name":"build","qualname":"<QuorumProviderBuilder<T>>::build","value":"fn build(Self) -> QuorumProvider<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2114},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":49532,"byte_end":49535,"line_start":221,"line_end":221,"column_start":5,"column_end":8},"name":"All","qualname":"::transports::quorum::Quorum::All","value":"Quorum::All","parent":{"krate":0,"index":2113},"children":[],"decl_id":null,"docs":"  The quorum is reached when all providers return the exact value\n","sig":null,"attributes":[{"value":"/  The quorum is reached when all providers return the exact value","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":49459,"byte_end":49527,"line_start":220,"line_end":220,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2116},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":49680,"byte_end":49688,"line_start":224,"line_end":224,"column_start":5,"column_end":13},"name":"Majority","qualname":"::transports::quorum::Quorum::Majority","value":"Quorum::Majority","parent":{"krate":0,"index":2113},"children":[],"decl_id":null,"docs":" The quorum is reached when the majority of the providers have returned a\n matching value, taking into account their weight.\n","sig":null,"attributes":[{"value":"/ The quorum is reached when the majority of the providers have returned a","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":49541,"byte_end":49617,"line_start":222,"line_end":222,"column_start":5,"column_end":81}},{"value":"/ matching value, taking into account their weight.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":49622,"byte_end":49675,"line_start":223,"line_end":223,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2118},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":49883,"byte_end":49893,"line_start":229,"line_end":229,"column_start":5,"column_end":15},"name":"Percentage","qualname":"::transports::quorum::Quorum::Percentage","value":"Quorum::Percentage(u8)","parent":{"krate":0,"index":2113},"children":[],"decl_id":null,"docs":" The quorum is reached when the cumulative weight of a matching return\n exceeds the given percentage of the total weight.","sig":null,"attributes":[{"value":"/ The quorum is reached when the cumulative weight of a matching return","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":49694,"byte_end":49767,"line_start":225,"line_end":225,"column_start":5,"column_end":78}},{"value":"/ exceeds the given percentage of the total weight.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":49772,"byte_end":49825,"line_start":226,"line_end":226,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":49830,"byte_end":49833,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ NOTE: this must be less than `100u8`","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":49838,"byte_end":49878,"line_start":228,"line_end":228,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":2120},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":49894,"byte_end":49896,"line_start":229,"line_end":229,"column_start":16,"column_end":18},"name":"0","qualname":"::transports::quorum::Quorum::Percentage::0","value":"u8","parent":{"krate":0,"index":2118},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2121},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":50028,"byte_end":50041,"line_start":232,"line_end":232,"column_start":5,"column_end":18},"name":"ProviderCount","qualname":"::transports::quorum::Quorum::ProviderCount","value":"Quorum::ProviderCount(usize)","parent":{"krate":0,"index":2113},"children":[],"decl_id":null,"docs":" The quorum is reached when the given number of provider agree\n The configured weight is ignored in this case.\n","sig":null,"attributes":[{"value":"/ The quorum is reached when the given number of provider agree","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":49903,"byte_end":49968,"line_start":230,"line_end":230,"column_start":5,"column_end":70}},{"value":"/ The configured weight is ignored in this case.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":49973,"byte_end":50023,"line_start":231,"line_end":231,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":2123},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":50042,"byte_end":50047,"line_start":232,"line_end":232,"column_start":19,"column_end":24},"name":"0","qualname":"::transports::quorum::Quorum::ProviderCount::0","value":"usize","parent":{"krate":0,"index":2121},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2124},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":50164,"byte_end":50170,"line_start":235,"line_end":235,"column_start":5,"column_end":11},"name":"Weight","qualname":"::transports::quorum::Quorum::Weight","value":"Quorum::Weight(u64)","parent":{"krate":0,"index":2113},"children":[],"decl_id":null,"docs":" The quorum is reached once the accumulated weight of the matching return\n exceeds this weight.\n","sig":null,"attributes":[{"value":"/ The quorum is reached once the accumulated weight of the matching return","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":50054,"byte_end":50130,"line_start":233,"line_end":233,"column_start":5,"column_end":81}},{"value":"/ exceeds this weight.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":50135,"byte_end":50159,"line_start":234,"line_end":234,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":2126},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":50171,"byte_end":50174,"line_start":235,"line_end":235,"column_start":12,"column_end":15},"name":"0","qualname":"::transports::quorum::Quorum::Weight::0","value":"u64","parent":{"krate":0,"index":2124},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2113},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":49446,"byte_end":49452,"line_start":219,"line_end":219,"column_start":10,"column_end":16},"name":"Quorum","qualname":"::transports::quorum::Quorum","value":"enum Quorum {\n    All,\n    Majority,\n    Percentage(u8),\n    ProviderCount(usize),\n    Weight(u64),\n}","parent":null,"children":[{"krate":0,"index":2114},{"krate":0,"index":2116},{"krate":0,"index":2118},{"krate":0,"index":2121},{"krate":0,"index":2124}],"decl_id":null,"docs":" Determines when the provider reached a quorum\n","sig":null,"attributes":[{"value":"/ Determines when the provider reached a quorum","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":49357,"byte_end":49406,"line_start":217,"line_end":217,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":51066,"byte_end":51073,"line_start":262,"line_end":262,"column_start":8,"column_end":15},"name":"default","qualname":"<Quorum as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2132},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":54202,"byte_end":54218,"line_start":340,"line_end":340,"column_start":12,"column_end":28},"name":"WeightedProvider","qualname":"::transports::quorum::WeightedProvider","value":"WeightedProvider {  }","parent":null,"children":[{"krate":0,"index":2134},{"krate":0,"index":2135}],"decl_id":null,"docs":" The configuration of a provider for the `QuorumProvider`\n","sig":null,"attributes":[{"value":"/ The configuration of a provider for the `QuorumProvider`","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":54106,"byte_end":54166,"line_start":338,"line_end":338,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":54351,"byte_end":54354,"line_start":347,"line_end":347,"column_start":12,"column_end":15},"name":"new","qualname":"<WeightedProvider<T>>::new","value":"fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `WeightedProvider` with weight `1`\n","sig":null,"attributes":[{"value":"/ Create a `WeightedProvider` with weight `1`","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":54292,"byte_end":54339,"line_start":346,"line_end":346,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":54429,"byte_end":54440,"line_start":351,"line_end":351,"column_start":12,"column_end":23},"name":"with_weight","qualname":"<WeightedProvider<T>>::with_weight","value":"fn with_weight(T, u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2148},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":54675,"byte_end":54690,"line_start":361,"line_end":361,"column_start":5,"column_end":20},"name":"NoQuorumReached","qualname":"::transports::quorum::QuorumError::NoQuorumReached","value":"QuorumError::NoQuorumReached { values, errors }","parent":{"krate":0,"index":2142},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"No Quorum reached.\")","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":54640,"byte_end":54670,"line_start":360,"line_end":360,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2149},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":54693,"byte_end":54699,"line_start":361,"line_end":361,"column_start":23,"column_end":29},"name":"values","qualname":"::transports::quorum::QuorumError::NoQuorumReached::values","value":"std::vec::Vec<serde_json::Value>","parent":{"krate":0,"index":2148},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2150},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":54713,"byte_end":54719,"line_start":361,"line_end":361,"column_start":43,"column_end":49},"name":"errors","qualname":"::transports::quorum::QuorumError::NoQuorumReached::errors","value":"std::vec::Vec<provider::ProviderError>","parent":{"krate":0,"index":2148},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2142},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":54622,"byte_end":54633,"line_start":359,"line_end":359,"column_start":10,"column_end":21},"name":"QuorumError","qualname":"::transports::quorum::QuorumError","value":"enum QuorumError {\n    NoQuorumReached {\n            values: Vec<Value>,\n            errors: Vec<ProviderError>,\n        },\n}","parent":null,"children":[{"krate":0,"index":2148}],"decl_id":null,"docs":" Error thrown when sending an HTTP request\n","sig":null,"attributes":[{"value":"/ Error thrown when sending an HTTP request","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":54567,"byte_end":54612,"line_start":358,"line_end":358,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":54796,"byte_end":54800,"line_start":365,"line_end":365,"column_start":8,"column_end":12},"name":"from","qualname":"<ProviderError as std::convert::From>::from","value":"fn from(QuorumError) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2151},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":55015,"byte_end":55035,"line_start":372,"line_end":372,"column_start":11,"column_end":31},"name":"JsonRpcClientWrapper","qualname":"::transports::quorum::JsonRpcClientWrapper","value":"JsonRpcClientWrapper: Send + Sync + Debug","parent":null,"children":[{"krate":0,"index":2152}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2152},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":55072,"byte_end":55079,"line_start":373,"line_end":373,"column_start":14,"column_end":21},"name":"request","qualname":"::transports::quorum::JsonRpcClientWrapper::request","value":"fn request<'life0, 'life1,\n'async_trait>(&'life0 Self, &'life1 str, QuorumParams)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Value, ProviderError>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":2151},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":54991,"byte_end":55002,"line_start":371,"line_end":371,"column_start":41,"column_end":52}},{"value":"allow(clippy :: type_complexity, clippy :: type_repetition_in_bounds)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":54991,"byte_end":55002,"line_start":371,"line_end":371,"column_start":41,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":297},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":55277,"byte_end":55296,"line_start":378,"line_end":378,"column_start":11,"column_end":30},"name":"PubsubClientWrapper","qualname":"::transports::quorum::PubsubClientWrapper","value":"PubsubClientWrapper: JsonRpcClientWrapper","parent":null,"children":[{"krate":0,"index":298},{"krate":0,"index":299}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":55373,"byte_end":55382,"line_start":380,"line_end":380,"column_start":8,"column_end":17},"name":"subscribe","qualname":"::transports::quorum::PubsubClientWrapper::subscribe","value":"fn subscribe<'_>(&'_ Self, U256) -> Result<NotificationStream, ProviderError>","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" Add a subscription to this transport\n","sig":null,"attributes":[{"value":"/ Add a subscription to this transport","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":55325,"byte_end":55365,"line_start":379,"line_end":379,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":55504,"byte_end":55515,"line_start":383,"line_end":383,"column_start":8,"column_end":19},"name":"unsubscribe","qualname":"::transports::quorum::PubsubClientWrapper::unsubscribe","value":"fn unsubscribe<'_>(&'_ Self, U256) -> Result<(), ProviderError>","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" Remove a subscription from this transport\n","sig":null,"attributes":[{"value":"/ Remove a subscription from this transport","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":55451,"byte_end":55496,"line_start":382,"line_end":382,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2158},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":55741,"byte_end":55748,"line_start":389,"line_end":389,"column_start":14,"column_end":21},"name":"request","qualname":"<C as transports::quorum::JsonRpcClientWrapper>::request","value":"fn request<'life0, 'life1,\n'async_trait>(&'life0 Self, &'life1 str, QuorumParams)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Value, ProviderError>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":2151},"children":[],"decl_id":{"krate":0,"index":2152},"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":55662,"byte_end":55673,"line_start":387,"line_end":387,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2164},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":56269,"byte_end":56276,"line_start":402,"line_end":402,"column_start":14,"column_end":21},"name":"request","qualname":"<Box<dyn JsonRpcClientWrapper> as transports::quorum::JsonRpcClientWrapper>::request","value":"fn request<'life0, 'life1,\n'async_trait>(&'life0 Self, &'life1 str, QuorumParams)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Value, ProviderError>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":2151},"children":[],"decl_id":{"krate":0,"index":2152},"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":56180,"byte_end":56191,"line_start":400,"line_end":400,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2170},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":56599,"byte_end":56606,"line_start":410,"line_end":410,"column_start":14,"column_end":21},"name":"request","qualname":"<Box<dyn PubsubClientWrapper> as transports::quorum::JsonRpcClientWrapper>::request","value":"fn request<'life0, 'life1,\n'async_trait>(&'life0 Self, &'life1 str, QuorumParams)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Value, ProviderError>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":2151},"children":[],"decl_id":{"krate":0,"index":2152},"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":56511,"byte_end":56522,"line_start":408,"line_end":408,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":56862,"byte_end":56871,"line_start":419,"line_end":419,"column_start":8,"column_end":17},"name":"subscribe","qualname":"<C as transports::quorum::PubsubClientWrapper>::subscribe","value":"fn subscribe<'_>(&'_ Self, U256) -> Result<NotificationStream, ProviderError>","parent":{"krate":0,"index":297},"children":[],"decl_id":{"krate":0,"index":298},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":57031,"byte_end":57042,"line_start":423,"line_end":423,"column_start":8,"column_end":19},"name":"unsubscribe","qualname":"<C as transports::quorum::PubsubClientWrapper>::unsubscribe","value":"fn unsubscribe<'_>(&'_ Self, U256) -> Result<(), ProviderError>","parent":{"krate":0,"index":297},"children":[],"decl_id":{"krate":0,"index":299},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":57235,"byte_end":57244,"line_start":429,"line_end":429,"column_start":8,"column_end":17},"name":"subscribe","qualname":"<Box<dyn PubsubClientWrapper> as transports::quorum::PubsubClientWrapper>::subscribe","value":"fn subscribe<'_>(&'_ Self, U256) -> Result<NotificationStream, ProviderError>","parent":{"krate":0,"index":297},"children":[],"decl_id":{"krate":0,"index":298},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":57359,"byte_end":57370,"line_start":433,"line_end":433,"column_start":8,"column_end":19},"name":"unsubscribe","qualname":"<Box<dyn PubsubClientWrapper> as transports::quorum::PubsubClientWrapper>::unsubscribe","value":"fn unsubscribe<'_>(&'_ Self, U256) -> Result<(), ProviderError>","parent":{"krate":0,"index":297},"children":[],"decl_id":{"krate":0,"index":299},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2178},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":57703,"byte_end":57710,"line_start":446,"line_end":446,"column_start":14,"column_end":21},"name":"request","qualname":"<QuorumProvider<C> as JsonRpcClient>::request","value":"fn request<'life0, 'life1, 'async_trait, T, R>(&'life0 Self, &'life1 str, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<R, Self::Error>> + ::core::marker::Send + 'async_trait>> where\nT: 'async_trait + Serialize + Send + Sync, R: 'async_trait + DeserializeOwned,\n'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3735},"children":[],"decl_id":{"krate":0,"index":3737},"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":57562,"byte_end":57573,"line_start":439,"line_end":439,"column_start":41,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":308},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":58940,"byte_end":58952,"line_start":481,"line_end":481,"column_start":12,"column_end":24},"name":"QuorumStream","qualname":"::transports::quorum::QuorumStream","value":"QuorumStream {  }","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312}],"decl_id":null,"docs":" A Subscription stream that only yields the next value if the underlying\n providers reached quorum.\n","sig":null,"attributes":[{"value":"/ A Subscription stream that only yields the next value if the underlying","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":58823,"byte_end":58898,"line_start":479,"line_end":479,"column_start":1,"column_end":76}},{"value":"/ providers reached quorum.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":58899,"byte_end":58928,"line_start":480,"line_end":480,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":59650,"byte_end":59659,"line_start":502,"line_end":502,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<QuorumStream as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":124,"index":96},"children":[],"decl_id":{"krate":124,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":61534,"byte_end":61543,"line_start":555,"line_end":555,"column_start":8,"column_end":17},"name":"subscribe","qualname":"<QuorumProvider<C> as pubsub::PubsubClient>::subscribe","value":"fn subscribe<T, '_>(&'_ Self, T)\n-> Result<Self::NotificationStream, Self::Error> where T: Into<U256>","parent":{"krate":0,"index":1469},"children":[],"decl_id":{"krate":0,"index":1471},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":62059,"byte_end":62070,"line_start":566,"line_end":566,"column_start":8,"column_end":19},"name":"unsubscribe","qualname":"<QuorumProvider<C> as pubsub::PubsubClient>::unsubscribe","value":"fn unsubscribe<T, '_>(&'_ Self, T) -> Result<(), Self::Error> where\nT: Into<U256>","parent":{"krate":0,"index":1469},"children":[],"decl_id":{"krate":0,"index":1473},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2188},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":62540,"byte_end":62545,"line_start":580,"line_end":580,"column_start":5,"column_end":10},"name":"Value","qualname":"::transports::quorum::QuorumParams::Value","value":"QuorumParams::Value(Value)","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2190},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":62546,"byte_end":62551,"line_start":580,"line_end":580,"column_start":11,"column_end":16},"name":"0","qualname":"::transports::quorum::QuorumParams::Value::0","value":"serde_json::Value","parent":{"krate":0,"index":2188},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2191},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":62558,"byte_end":62561,"line_start":581,"line_end":581,"column_start":5,"column_end":8},"name":"Zst","qualname":"::transports::quorum::QuorumParams::Zst","value":"QuorumParams::Zst","parent":{"krate":0,"index":2187},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2187},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":62521,"byte_end":62533,"line_start":579,"line_end":579,"column_start":10,"column_end":22},"name":"QuorumParams","qualname":"::transports::quorum::QuorumParams","value":"enum QuorumParams { Value(Value), Zst, }","parent":null,"children":[{"krate":0,"index":2188},{"krate":0,"index":2191}],"decl_id":null,"docs":" Helper type that can be used to pass through the `params` value.\n This is necessary because the wrapper provider is supposed to skip the `params` if it's of\n size 0, see `crate::transports::common::Request`\n","sig":null,"attributes":[{"value":"/ Helper type that can be used to pass through the `params` value.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":62278,"byte_end":62346,"line_start":575,"line_end":575,"column_start":1,"column_end":69}},{"value":"/ This is necessary because the wrapper provider is supposed to skip the `params` if it's of","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":62347,"byte_end":62441,"line_start":576,"line_end":576,"column_start":1,"column_end":95}},{"value":"/ size 0, see `crate::transports::common::Request`","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":62442,"byte_end":62494,"line_start":577,"line_end":577,"column_start":1,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":2195},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/rw.rs","byte_start":65424,"byte_end":65432,"line_start":21,"line_end":21,"column_start":12,"column_end":20},"name":"RwClient","qualname":"::transports::rw::RwClient","value":"RwClient {  }","parent":null,"children":[{"krate":0,"index":2198},{"krate":0,"index":2199}],"decl_id":null,"docs":" A client contains two clients.","sig":null,"attributes":[{"value":"/ A client contains two clients.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/rw.rs","byte_start":65100,"byte_end":65134,"line_start":12,"line_end":12,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/rw.rs","byte_start":65135,"byte_end":65138,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ One is used for _read_ operations","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/rw.rs","byte_start":65139,"byte_end":65176,"line_start":14,"line_end":14,"column_start":1,"column_end":38}},{"value":"/ One is used for _write_ operations that consume gas `[\"eth_sendTransaction\",","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/rw.rs","byte_start":65177,"byte_end":65257,"line_start":15,"line_end":15,"column_start":1,"column_end":81}},{"value":"/ \"eth_sendRawTransaction\"]`","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/rw.rs","byte_start":65258,"byte_end":65288,"line_start":16,"line_end":16,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/rw.rs","byte_start":65289,"byte_end":65292,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ **Note**: if the method is unknown this client falls back to the _read_ client","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/rw.rs","byte_start":65293,"byte_end":65375,"line_start":18,"line_end":18,"column_start":1,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/rw.rs","byte_start":66006,"byte_end":66009,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<RwClient<Read, Write>>::new","value":"fn new(Read, Write) -> RwClient<Read, Write>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new client using two different clients","sig":null,"attributes":[{"value":"/ Creates a new client using two different clients","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/rw.rs","byte_start":65581,"byte_end":65633,"line_start":29,"line_end":29,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/rw.rs","byte_start":65638,"byte_end":65641,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/rw.rs","byte_start":65646,"byte_end":65659,"line_start":31,"line_end":31,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/rw.rs","byte_start":65664,"byte_end":65667,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/rw.rs","byte_start":65672,"byte_end":65685,"line_start":33,"line_end":33,"column_start":5,"column_end":18}},{"value":"/ # use url::Url;","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/rw.rs","byte_start":65690,"byte_end":65709,"line_start":34,"line_end":34,"column_start":5,"column_end":24}},{"value":"/  async fn t(){","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/rw.rs","byte_start":65714,"byte_end":65732,"line_start":35,"line_end":35,"column_start":5,"column_end":23}},{"value":"/ use ethers_providers::{Http, RwClient, Ws};","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/rw.rs","byte_start":65737,"byte_end":65784,"line_start":36,"line_end":36,"column_start":5,"column_end":52}},{"value":"/ let http = Http::new(Url::parse(\"http://localhost:8545\").unwrap());","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/rw.rs","byte_start":65789,"byte_end":65860,"line_start":37,"line_end":37,"column_start":5,"column_end":76}},{"value":"/ let ws = Ws::connect(\"ws://localhost:8545\").await.unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/rw.rs","byte_start":65865,"byte_end":65928,"line_start":38,"line_end":38,"column_start":5,"column_end":68}},{"value":"/ let rw = RwClient::new(http, ws);","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/rw.rs","byte_start":65933,"byte_end":65970,"line_start":39,"line_end":39,"column_start":5,"column_end":42}},{"value":"/ # }","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/rw.rs","byte_start":65975,"byte_end":65982,"line_start":40,"line_end":40,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/rw.rs","byte_start":65987,"byte_end":65994,"line_start":41,"line_end":41,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/rw.rs","byte_start":66148,"byte_end":66159,"line_start":47,"line_end":47,"column_start":12,"column_end":23},"name":"read_client","qualname":"<RwClient<Read, Write>>::read_client","value":"fn read_client<'_>(&'_ Self) -> &'_ Read","parent":null,"children":[],"decl_id":null,"docs":" Returns the client used for read operations\n","sig":null,"attributes":[{"value":"/ Returns the client used for read operations","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/rw.rs","byte_start":66089,"byte_end":66136,"line_start":46,"line_end":46,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/rw.rs","byte_start":66264,"byte_end":66276,"line_start":52,"line_end":52,"column_start":12,"column_end":24},"name":"write_client","qualname":"<RwClient<Read, Write>>::write_client","value":"fn write_client<'_>(&'_ Self) -> &'_ Write","parent":null,"children":[],"decl_id":null,"docs":" Returns the client used for read operations\n","sig":null,"attributes":[{"value":"/ Returns the client used for read operations","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/rw.rs","byte_start":66205,"byte_end":66252,"line_start":51,"line_end":51,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/rw.rs","byte_start":66387,"byte_end":66396,"line_start":57,"line_end":57,"column_start":12,"column_end":21},"name":"transpose","qualname":"<RwClient<Read, Write>>::transpose","value":"fn transpose(Self) -> RwClient<Write, Read>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `RwClient` with transposed clients\n","sig":null,"attributes":[{"value":"/ Returns a new `RwClient` with transposed clients","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/rw.rs","byte_start":66323,"byte_end":66375,"line_start":56,"line_end":56,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/rw.rs","byte_start":66577,"byte_end":66582,"line_start":63,"line_end":63,"column_start":12,"column_end":17},"name":"split","qualname":"<RwClient<Read, Write>>::split","value":"fn split(Self) -> (Read, Write)","parent":null,"children":[],"decl_id":null,"docs":" Consumes the client and returns the underlying clients\n","sig":null,"attributes":[{"value":"/ Consumes the client and returns the underlying clients","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/rw.rs","byte_start":66507,"byte_end":66565,"line_start":62,"line_end":62,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2226},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/rw.rs","byte_start":67038,"byte_end":67042,"line_start":80,"line_end":80,"column_start":5,"column_end":9},"name":"Read","qualname":"::transports::rw::RwClientError::Read","value":"RwClientError::Read(Read::Error)","parent":{"krate":0,"index":2208},"children":[],"decl_id":null,"docs":" Thrown if the _read_ request failed\n","sig":null,"attributes":[{"value":"/ Thrown if the _read_ request failed","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/rw.rs","byte_start":66968,"byte_end":67007,"line_start":78,"line_end":78,"column_start":5,"column_end":44}},{"value":"error(transparent)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/rw.rs","byte_start":67012,"byte_end":67033,"line_start":79,"line_end":79,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":2228},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/rw.rs","byte_start":67043,"byte_end":67054,"line_start":80,"line_end":80,"column_start":10,"column_end":21},"name":"0","qualname":"::transports::rw::RwClientError::Read::0","value":"<Read as JsonRpcClient>::Error","parent":{"krate":0,"index":2226},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2229},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/rw.rs","byte_start":67132,"byte_end":67137,"line_start":83,"line_end":83,"column_start":5,"column_end":10},"name":"Write","qualname":"::transports::rw::RwClientError::Write","value":"RwClientError::Write(Write::Error)","parent":{"krate":0,"index":2208},"children":[],"decl_id":null,"docs":" Thrown if the _write_ request failed\n","sig":null,"attributes":[{"value":"error(transparent)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/rw.rs","byte_start":67061,"byte_end":67082,"line_start":81,"line_end":81,"column_start":5,"column_end":26}},{"value":"/ Thrown if the _write_ request failed","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/rw.rs","byte_start":67087,"byte_end":67127,"line_start":82,"line_end":82,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":2231},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/rw.rs","byte_start":67138,"byte_end":67150,"line_start":83,"line_end":83,"column_start":11,"column_end":23},"name":"0","qualname":"::transports::rw::RwClientError::Write::0","value":"<Write as JsonRpcClient>::Error","parent":{"krate":0,"index":2229},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2208},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/rw.rs","byte_start":66759,"byte_end":66772,"line_start":71,"line_end":71,"column_start":10,"column_end":23},"name":"RwClientError","qualname":"::transports::rw::RwClientError","value":"enum RwClientError<Read, Write> where Read: JsonRpcClient,\n    <Read as JsonRpcClient>::Error: Sync + Send + 'static,\n    Write: JsonRpcClient, <Write as JsonRpcClient>::Error: Sync + Send +\n    'static {\n    Read(Read::Error),\n    Write(Write::Error),\n}","parent":null,"children":[{"krate":0,"index":2226},{"krate":0,"index":2229}],"decl_id":null,"docs":" Error thrown when using either read or write client\n","sig":null,"attributes":[{"value":"/ Error thrown when using either read or write client","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/rw.rs","byte_start":66694,"byte_end":66749,"line_start":70,"line_end":70,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/rw.rs","byte_start":67430,"byte_end":67434,"line_start":93,"line_end":93,"column_start":8,"column_end":12},"name":"from","qualname":"<ProviderError as std::convert::From>::from","value":"fn from(RwClientError<Read, Write>) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2236},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/rw.rs","byte_start":68075,"byte_end":68082,"line_start":111,"line_end":111,"column_start":14,"column_end":21},"name":"request","qualname":"<RwClient<Read, Write> as JsonRpcClient>::request","value":"fn request<'life0, 'life1, 'async_trait, T, R>(&'life0 Self, &'life1 str, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<R, Self::Error>> + ::core::marker::Send + 'async_trait>> where\nT: std::fmt::Debug + Serialize + Send + Sync, R: DeserializeOwned,\nT: 'async_trait + Serialize + Send + Sync, R: 'async_trait + DeserializeOwned,\n'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3735},"children":[],"decl_id":{"krate":0,"index":3737},"docs":" Sends a POST request with the provided method and the params serialized as JSON\n over HTTP\n","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/rw.rs","byte_start":67640,"byte_end":67651,"line_start":99,"line_end":99,"column_start":41,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":428},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":69195,"byte_end":69206,"line_start":18,"line_end":18,"column_start":11,"column_end":22},"name":"RetryPolicy","qualname":"::transports::retry::RetryPolicy","value":"RetryPolicy<E>: Send + Sync + Debug","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":431}],"decl_id":null,"docs":" [RetryPolicy] defines logic for which [JsonRpcClient::Error] instances should\n the client retry the request and try to recover from.\n","sig":null,"attributes":[{"value":"/ [RetryPolicy] defines logic for which [JsonRpcClient::Error] instances should","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":69045,"byte_end":69126,"line_start":16,"line_end":16,"column_start":1,"column_end":82}},{"value":"/ the client retry the request and try to recover from.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":69127,"byte_end":69184,"line_start":17,"line_end":17,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":69304,"byte_end":69316,"line_start":20,"line_end":20,"column_start":8,"column_end":20},"name":"should_retry","qualname":"::transports::retry::RetryPolicy::should_retry","value":"fn should_retry<'_, '_>(&'_ Self, &'_ E) -> bool","parent":{"krate":0,"index":428},"children":[],"decl_id":null,"docs":" Whether to retry the request based on the given `error`\n","sig":null,"attributes":[{"value":"/ Whether to retry the request based on the given `error`","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":69237,"byte_end":69296,"line_start":19,"line_end":19,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":69427,"byte_end":69439,"line_start":23,"line_end":23,"column_start":8,"column_end":20},"name":"backoff_hint","qualname":"::transports::retry::RetryPolicy::backoff_hint","value":"fn backoff_hint<'_, '_>(&'_ Self, &'_ E) -> Option<Duration>","parent":{"krate":0,"index":428},"children":[],"decl_id":null,"docs":" Providers may include the `backoff` in the error response directly\n","sig":null,"attributes":[{"value":"/ Providers may include the `backoff` in the error response directly","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":69349,"byte_end":69419,"line_start":22,"line_end":22,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":2243},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":70462,"byte_end":70473,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"RetryClient","qualname":"::transports::retry::RetryClient","value":"RetryClient {  }","parent":null,"children":[{"krate":0,"index":2245},{"krate":0,"index":2246},{"krate":0,"index":2247},{"krate":0,"index":2248},{"krate":0,"index":2249},{"krate":0,"index":2250},{"krate":0,"index":2251}],"decl_id":null,"docs":" [RetryClient] presents as a wrapper around [JsonRpcClient] that will retry\n requests based with an exponential backoff and filtering based on [RetryPolicy].","sig":null,"attributes":[{"value":"/ [RetryClient] presents as a wrapper around [JsonRpcClient] that will retry","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":69482,"byte_end":69560,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ requests based with an exponential backoff and filtering based on [RetryPolicy].","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":69561,"byte_end":69645,"line_start":27,"line_end":27,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":69646,"byte_end":69649,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The `RetryPolicy`, mainly for rate-limiting errors, can be adjusted for specific applications,","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":69650,"byte_end":69748,"line_start":29,"line_end":29,"column_start":1,"column_end":99}},{"value":"/ endpoints. In addition to the `RetryPolicy` errors due to connectivity issues, like timed out","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":69749,"byte_end":69846,"line_start":30,"line_end":30,"column_start":1,"column_end":98}},{"value":"/ connections or responses in range `5xx` can be retried separately.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":69847,"byte_end":69917,"line_start":31,"line_end":31,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":69918,"byte_end":69921,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":69922,"byte_end":69935,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":69936,"byte_end":69939,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":69940,"byte_end":69947,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ #  async fn demo() {","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":69948,"byte_end":69972,"line_start":36,"line_end":36,"column_start":1,"column_end":25}},{"value":"/ use ethers_providers::{Http, RetryClient, RetryClientBuilder, HttpRateLimitRetryPolicy};","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":69973,"byte_end":70065,"line_start":37,"line_end":37,"column_start":1,"column_end":93}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":70066,"byte_end":70094,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"/ use url::Url;","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":70095,"byte_end":70112,"line_start":39,"line_end":39,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":70113,"byte_end":70116,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let http = Http::new(Url::parse(\"http://localhost:8545\").unwrap());","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":70117,"byte_end":70188,"line_start":41,"line_end":41,"column_start":1,"column_end":72}},{"value":"/ let client = RetryClientBuilder::default()","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":70189,"byte_end":70235,"line_start":42,"line_end":42,"column_start":1,"column_end":47}},{"value":"/     .rate_limit_retries(10)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":70236,"byte_end":70267,"line_start":43,"line_end":43,"column_start":1,"column_end":32}},{"value":"/     .timeout_retries(3)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":70268,"byte_end":70295,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/     .initial_backoff(Duration::from_millis(500))","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":70296,"byte_end":70348,"line_start":45,"line_end":45,"column_start":1,"column_end":53}},{"value":"/     .build(http, Box::new(HttpRateLimitRetryPolicy::default()));","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":70349,"byte_end":70417,"line_start":46,"line_end":46,"column_start":1,"column_end":69}},{"value":"/ # }","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":70418,"byte_end":70425,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":70426,"byte_end":70433,"line_start":48,"line_end":48,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":71745,"byte_end":71748,"line_start":92,"line_end":92,"column_start":12,"column_end":15},"name":"new","qualname":"<RetryClient<T>>::new","value":"fn new(T, Box<dyn RetryPolicy<T::Error>>, u32, u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `RetryClient` that wraps a client and adds retry and backoff support","sig":null,"attributes":[{"value":"/ Creates a new `RetryClient` that wraps a client and adds retry and backoff support","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":71119,"byte_end":71205,"line_start":74,"line_end":74,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":71210,"byte_end":71213,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":71218,"byte_end":71231,"line_start":76,"line_end":76,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":71236,"byte_end":71239,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":71244,"byte_end":71251,"line_start":78,"line_end":78,"column_start":5,"column_end":12}},{"value":"/ ","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":71256,"byte_end":71260,"line_start":79,"line_end":79,"column_start":5,"column_end":9}},{"value":"/ # async fn demo() {","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":71265,"byte_end":71288,"line_start":80,"line_end":80,"column_start":5,"column_end":28}},{"value":"/ use ethers_providers::{Http, RetryClient, HttpRateLimitRetryPolicy};","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":71293,"byte_end":71365,"line_start":81,"line_end":81,"column_start":5,"column_end":77}},{"value":"/ use std::time::Duration;","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":71370,"byte_end":71398,"line_start":82,"line_end":82,"column_start":5,"column_end":33}},{"value":"/ use url::Url;","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":71403,"byte_end":71420,"line_start":83,"line_end":83,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":71425,"byte_end":71428,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let http = Http::new(Url::parse(\"http://localhost:8545\").unwrap());","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":71433,"byte_end":71504,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ let backoff_timeout = 3000; // in ms","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":71509,"byte_end":71549,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ let max_retries = 10;","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":71554,"byte_end":71579,"line_start":87,"line_end":87,"column_start":5,"column_end":30}},{"value":"/ let client = RetryClient::new(http, Box::new(HttpRateLimitRetryPolicy::default()), max_retries, backoff_timeout);","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":71584,"byte_end":71701,"line_start":88,"line_end":88,"column_start":5,"column_end":122}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":71706,"byte_end":71709,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ # }","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":71714,"byte_end":71721,"line_start":90,"line_end":90,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":71726,"byte_end":71733,"line_start":91,"line_end":91,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":72397,"byte_end":72414,"line_start":111,"line_end":111,"column_start":12,"column_end":29},"name":"set_compute_units","qualname":"<RetryClient<T>>::set_compute_units","value":"fn set_compute_units<'_>(&'_ mut Self, u64) -> &'_ mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the free compute units per second limit.","sig":null,"attributes":[{"value":"/ Sets the free compute units per second limit.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":72108,"byte_end":72157,"line_start":105,"line_end":105,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":72162,"byte_end":72165,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ This is the maximum number of weighted request that can be handled per second by the","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":72170,"byte_end":72258,"line_start":107,"line_end":107,"column_start":5,"column_end":93}},{"value":"/ endpoint before rate limit kicks in.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":72263,"byte_end":72303,"line_start":108,"line_end":108,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":72308,"byte_end":72311,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ This is used to guesstimate how long to wait until to retry again","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":72316,"byte_end":72385,"line_start":110,"line_end":110,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2255},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":72570,"byte_end":72588,"line_start":118,"line_end":118,"column_start":12,"column_end":30},"name":"RetryClientBuilder","qualname":"::transports::retry::RetryClientBuilder","value":"RetryClientBuilder {  }","parent":null,"children":[{"krate":0,"index":2256},{"krate":0,"index":2257},{"krate":0,"index":2258},{"krate":0,"index":2259}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":73110,"byte_end":73125,"line_start":135,"line_end":135,"column_start":12,"column_end":27},"name":"timeout_retries","qualname":"<RetryClientBuilder>::timeout_retries","value":"fn timeout_retries(Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of retries after a connection times out","sig":null,"attributes":[{"value":"/ Sets the number of retries after a connection times out","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":72959,"byte_end":73018,"line_start":132,"line_end":132,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":73023,"byte_end":73026,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ **Note:** this will only be used for `request::Error::TimedOut`","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":73031,"byte_end":73098,"line_start":134,"line_end":134,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":438},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":73299,"byte_end":73317,"line_start":141,"line_end":141,"column_start":12,"column_end":30},"name":"rate_limit_retries","qualname":"<RetryClientBuilder>::rate_limit_retries","value":"fn rate_limit_retries(Self, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" How many retries for rate limited responses\n","sig":null,"attributes":[{"value":"/ How many retries for rate limited responses","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":73240,"byte_end":73287,"line_start":140,"line_end":140,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":73654,"byte_end":73678,"line_start":149,"line_end":149,"column_start":12,"column_end":36},"name":"compute_units_per_second","qualname":"<RetryClientBuilder>::compute_units_per_second","value":"fn compute_units_per_second(Self, u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of assumed available compute units per second","sig":null,"attributes":[{"value":"/ Sets the number of assumed available compute units per second","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":73441,"byte_end":73506,"line_start":146,"line_end":146,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":73511,"byte_end":73514,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ See also, <https://github.com/alchemyplatform/alchemy-docs/blob/master/documentation/compute-units.md#rate-limits-cups>","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":73519,"byte_end":73642,"line_start":148,"line_end":148,"column_start":5,"column_end":128}}]},{"kind":"Method","id":{"krate":0,"index":440},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":73887,"byte_end":73902,"line_start":155,"line_end":155,"column_start":12,"column_end":27},"name":"initial_backoff","qualname":"<RetryClientBuilder>::initial_backoff","value":"fn initial_backoff(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the duration to wait initially before retrying\n","sig":null,"attributes":[{"value":"/ Sets the duration to wait initially before retrying","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":73820,"byte_end":73875,"line_start":154,"line_end":154,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":74092,"byte_end":74097,"line_start":161,"line_end":161,"column_start":12,"column_end":17},"name":"build","qualname":"<RetryClientBuilder>::build","value":"fn build<T>(Self, T, Box<dyn RetryPolicy<T::Error>>) -> RetryClient<T> where\nT: JsonRpcClient, T::Error: Sync + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Creates the `RetryClient` with the configured settings\n","sig":null,"attributes":[{"value":"/ Creates the `RetryClient` with the configured settings","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":74022,"byte_end":74080,"line_start":160,"line_end":160,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":74775,"byte_end":74782,"line_start":186,"line_end":186,"column_start":8,"column_end":15},"name":"default","qualname":"<RetryClientBuilder as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2281},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":75480,"byte_end":75493,"line_start":205,"line_end":205,"column_start":5,"column_end":18},"name":"ProviderError","qualname":"::transports::retry::RetryClientError::ProviderError","value":"RetryClientError::ProviderError(ProviderError)","parent":{"krate":0,"index":2271},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(transparent)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":75454,"byte_end":75475,"line_start":204,"line_end":204,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":2283},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":75494,"byte_end":75507,"line_start":205,"line_end":205,"column_start":19,"column_end":32},"name":"0","qualname":"::transports::retry::RetryClientError::ProviderError::0","value":"provider::ProviderError","parent":{"krate":0,"index":2281},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2272},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":75514,"byte_end":75526,"line_start":206,"line_end":206,"column_start":5,"column_end":17},"name":"TimeoutError","qualname":"::transports::retry::RetryClientError::TimeoutError","value":"RetryClientError::TimeoutError","parent":{"krate":0,"index":2271},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2284},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":75558,"byte_end":75567,"line_start":208,"line_end":208,"column_start":5,"column_end":14},"name":"SerdeJson","qualname":"::transports::retry::RetryClientError::SerdeJson","value":"RetryClientError::SerdeJson(serde_json::Error)","parent":{"krate":0,"index":2271},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(transparent)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":75532,"byte_end":75553,"line_start":207,"line_end":207,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":2286},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":75568,"byte_end":75585,"line_start":208,"line_end":208,"column_start":15,"column_end":32},"name":"0","qualname":"::transports::retry::RetryClientError::SerdeJson::0","value":"serde_json::Error","parent":{"krate":0,"index":2284},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2271},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":75431,"byte_end":75447,"line_start":203,"line_end":203,"column_start":10,"column_end":26},"name":"RetryClientError","qualname":"::transports::retry::RetryClientError","value":"enum RetryClientError {\n    ProviderError(ProviderError),\n    TimeoutError,\n    SerdeJson(serde_json::Error),\n}","parent":null,"children":[{"krate":0,"index":2281},{"krate":0,"index":2272},{"krate":0,"index":2284}],"decl_id":null,"docs":" Error thrown when:\n 1. Internal client throws an error we do not wish to try to recover from.\n 2. Params serialization failed.\n 3. Request timed out i.e. max retries were already made.\n","sig":null,"attributes":[{"value":"/ Error thrown when:","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":75200,"byte_end":75222,"line_start":198,"line_end":198,"column_start":1,"column_end":23}},{"value":"/ 1. Internal client throws an error we do not wish to try to recover from.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":75223,"byte_end":75300,"line_start":199,"line_end":199,"column_start":1,"column_end":78}},{"value":"/ 2. Params serialization failed.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":75301,"byte_end":75336,"line_start":200,"line_end":200,"column_start":1,"column_end":36}},{"value":"/ 3. Request timed out i.e. max retries were already made.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":75337,"byte_end":75397,"line_start":201,"line_end":201,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":75644,"byte_end":75647,"line_start":212,"line_end":212,"column_start":8,"column_end":11},"name":"fmt","qualname":"<RetryClientError as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut std::fmt::Formatter) -> std::fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":75804,"byte_end":75808,"line_start":218,"line_end":218,"column_start":8,"column_end":12},"name":"from","qualname":"<ProviderError as std::convert::From>::from","value":"fn from(RetryClientError) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2290},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":76315,"byte_end":76322,"line_start":235,"line_end":235,"column_start":14,"column_end":21},"name":"request","qualname":"<RetryClient<T> as JsonRpcClient>::request","value":"fn request<'life0, 'life1, 'async_trait, A, R>(&'life0 Self, &'life1 str, A)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<R, Self::Error>> + ::core::marker::Send + 'async_trait>> where\nA: Debug + Serialize + Send + Sync, R: DeserializeOwned, A: 'async_trait,\nR: 'async_trait, 'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3735},"children":[],"decl_id":{"krate":0,"index":3737},"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":76134,"byte_end":76145,"line_start":227,"line_end":227,"column_start":41,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":2371},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":81007,"byte_end":81031,"line_start":342,"line_end":342,"column_start":12,"column_end":36},"name":"HttpRateLimitRetryPolicy","qualname":"::transports::retry::HttpRateLimitRetryPolicy","value":"","parent":null,"children":[],"decl_id":null,"docs":" Implements [RetryPolicy] that will retry requests that errored with\n status code 429 i.e. TOO_MANY_REQUESTS","sig":null,"attributes":[{"value":"/ Implements [RetryPolicy] that will retry requests that errored with","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":80713,"byte_end":80784,"line_start":336,"line_end":336,"column_start":1,"column_end":72}},{"value":"/ status code 429 i.e. TOO_MANY_REQUESTS","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":80785,"byte_end":80827,"line_start":337,"line_end":337,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":80828,"byte_end":80831,"line_start":338,"line_end":338,"column_start":1,"column_end":4}},{"value":"/ Infura often fails with a `\"header not found\"` rpc error which is apparently linked to load","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":80832,"byte_end":80927,"line_start":339,"line_end":339,"column_start":1,"column_end":96}},{"value":"/ balancing, which are retried as well.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":80928,"byte_end":80969,"line_start":340,"line_end":340,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":81102,"byte_end":81114,"line_start":345,"line_end":345,"column_start":8,"column_end":20},"name":"should_retry","qualname":"<HttpRateLimitRetryPolicy as transports::retry::RetryPolicy>::should_retry","value":"fn should_retry<'_, '_>(&'_ Self, &'_ ClientError) -> bool","parent":{"krate":0,"index":428},"children":[],"decl_id":{"krate":0,"index":430},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":82061,"byte_end":82073,"line_start":367,"line_end":367,"column_start":8,"column_end":20},"name":"backoff_hint","qualname":"<HttpRateLimitRetryPolicy as transports::retry::RetryPolicy>::backoff_hint","value":"fn backoff_hint<'_, '_>(&'_ Self, &'_ ClientError) -> Option<Duration>","parent":{"krate":0,"index":428},"children":[],"decl_id":{"krate":0,"index":431},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2385},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/mock.rs","byte_start":87868,"byte_end":87880,"line_start":24,"line_end":24,"column_start":12,"column_end":24},"name":"MockProvider","qualname":"::transports::mock::MockProvider","value":"MockProvider {  }","parent":null,"children":[{"krate":0,"index":2386},{"krate":0,"index":2387}],"decl_id":null,"docs":" Mock transport used in test environments.\n","sig":null,"attributes":[{"value":"/ Mock transport used in test environments.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/mock.rs","byte_start":87811,"byte_end":87856,"line_start":23,"line_end":23,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/mock.rs","byte_start":88027,"byte_end":88034,"line_start":30,"line_end":30,"column_start":8,"column_end":15},"name":"default","qualname":"<MockProvider as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2394},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/mock.rs","byte_start":88407,"byte_end":88414,"line_start":42,"line_end":42,"column_start":14,"column_end":21},"name":"request","qualname":"<MockProvider as JsonRpcClient>::request","value":"fn request<'life0, 'life1, 'async_trait, T, R>(&'life0 Self, &'life1 str, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<R, MockError>> + ::core::marker::Send + 'async_trait>> where\nT: 'async_trait + Serialize + Send + Sync, R: 'async_trait + DeserializeOwned,\n'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3735},"children":[],"decl_id":{"krate":0,"index":3737},"docs":" Pushes the `(method, params)` to the back of the `requests` queue,\n pops the responses from the back of the `responses` queue\n","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/mock.rs","byte_start":88172,"byte_end":88183,"line_start":36,"line_end":36,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/mock.rs","byte_start":89113,"byte_end":89127,"line_start":63,"line_end":63,"column_start":12,"column_end":26},"name":"assert_request","qualname":"<MockProvider>::assert_request","value":"fn assert_request<T, '_, '_>(&'_ Self, &'_ str, T) -> Result<(), MockError>\nwhere T: Serialize + Send + Sync","parent":null,"children":[],"decl_id":null,"docs":" Checks that the provided request was submitted by the client\n","sig":null,"attributes":[{"value":"/ Checks that the provided request was submitted by the client","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/mock.rs","byte_start":89037,"byte_end":89101,"line_start":62,"line_end":62,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/mock.rs","byte_start":89873,"byte_end":89876,"line_start":83,"line_end":83,"column_start":12,"column_end":15},"name":"new","qualname":"<MockProvider>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Instantiates a mock transport\n","sig":null,"attributes":[{"value":"/ Instantiates a mock transport","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/mock.rs","byte_start":89828,"byte_end":89861,"line_start":82,"line_end":82,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":499},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/mock.rs","byte_start":90096,"byte_end":90100,"line_start":91,"line_end":91,"column_start":12,"column_end":16},"name":"push","qualname":"<MockProvider>::push","value":"fn push<T, K, '_>(&'_ Self, K) -> Result<(), MockError> where T: Serialize +\nSend + Sync, K: Borrow<T>","parent":null,"children":[],"decl_id":null,"docs":" Pushes the data to the responses\n","sig":null,"attributes":[{"value":"/ Pushes the data to the responses","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/mock.rs","byte_start":90048,"byte_end":90084,"line_start":90,"line_end":90,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2413},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/mock.rs","byte_start":90434,"byte_end":90443,"line_start":102,"line_end":102,"column_start":5,"column_end":14},"name":"SerdeJson","qualname":"::transports::mock::MockError::SerdeJson","value":"MockError::SerdeJson(serde_json::Error)","parent":{"krate":0,"index":2401},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(transparent)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/mock.rs","byte_start":90408,"byte_end":90429,"line_start":101,"line_end":101,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":2415},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/mock.rs","byte_start":90452,"byte_end":90469,"line_start":102,"line_end":102,"column_start":23,"column_end":40},"name":"0","qualname":"::transports::mock::MockError::SerdeJson::0","value":"serde_json::Error","parent":{"krate":0,"index":2413},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"from","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/mock.rs","byte_start":90444,"byte_end":90451,"line_start":102,"line_end":102,"column_start":15,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2416},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/mock.rs","byte_start":90542,"byte_end":90555,"line_start":105,"line_end":105,"column_start":5,"column_end":18},"name":"EmptyRequests","qualname":"::transports::mock::MockError::EmptyRequests","value":"MockError::EmptyRequests","parent":{"krate":0,"index":2401},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"empty responses array, please push some requests\")","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/mock.rs","byte_start":90477,"byte_end":90537,"line_start":104,"line_end":104,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2418},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/mock.rs","byte_start":90628,"byte_end":90642,"line_start":108,"line_end":108,"column_start":5,"column_end":19},"name":"EmptyResponses","qualname":"::transports::mock::MockError::EmptyResponses","value":"MockError::EmptyResponses","parent":{"krate":0,"index":2401},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"empty responses array, please push some responses\")","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/mock.rs","byte_start":90562,"byte_end":90623,"line_start":107,"line_end":107,"column_start":5,"column_end":66}}]},{"kind":"Enum","id":{"krate":0,"index":2401},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/mock.rs","byte_start":90392,"byte_end":90401,"line_start":100,"line_end":100,"column_start":10,"column_end":19},"name":"MockError","qualname":"::transports::mock::MockError","value":"enum MockError {\n    SerdeJson(serde_json::Error),\n    EmptyRequests,\n    EmptyResponses,\n}","parent":null,"children":[{"krate":0,"index":2413},{"krate":0,"index":2416},{"krate":0,"index":2418}],"decl_id":null,"docs":" Errors for the `MockProvider`\n","sig":null,"attributes":[{"value":"/ Errors for the `MockProvider`","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/mock.rs","byte_start":90349,"byte_end":90382,"line_start":99,"line_end":99,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":503},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/mock.rs","byte_start":90695,"byte_end":90699,"line_start":112,"line_end":112,"column_start":8,"column_end":12},"name":"from","qualname":"<ProviderError as std::convert::From>::from","value":"fn from(MockError) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2421},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":93880,"byte_end":93884,"line_start":46,"line_end":46,"column_start":5,"column_end":9},"name":"Geth","qualname":"::provider::NodeClient::Geth","value":"NodeClient::Geth","parent":{"krate":0,"index":2420},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2423},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":93890,"byte_end":93896,"line_start":47,"line_end":47,"column_start":5,"column_end":11},"name":"Erigon","qualname":"::provider::NodeClient::Erigon","value":"NodeClient::Erigon","parent":{"krate":0,"index":2420},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2425},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":93902,"byte_end":93914,"line_start":48,"line_end":48,"column_start":5,"column_end":17},"name":"OpenEthereum","qualname":"::provider::NodeClient::OpenEthereum","value":"NodeClient::OpenEthereum","parent":{"krate":0,"index":2420},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2427},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":93920,"byte_end":93930,"line_start":49,"line_end":49,"column_start":5,"column_end":15},"name":"Nethermind","qualname":"::provider::NodeClient::Nethermind","value":"NodeClient::Nethermind","parent":{"krate":0,"index":2420},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2429},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":93936,"byte_end":93940,"line_start":50,"line_end":50,"column_start":5,"column_end":9},"name":"Besu","qualname":"::provider::NodeClient::Besu","value":"NodeClient::Besu","parent":{"krate":0,"index":2420},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2420},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":93863,"byte_end":93873,"line_start":45,"line_end":45,"column_start":10,"column_end":20},"name":"NodeClient","qualname":"::provider::NodeClient","value":"enum NodeClient { Geth, Erigon, OpenEthereum, Nethermind, Besu, }","parent":null,"children":[{"krate":0,"index":2421},{"krate":0,"index":2423},{"krate":0,"index":2425},{"krate":0,"index":2427},{"krate":0,"index":2429}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":94013,"byte_end":94021,"line_start":56,"line_end":56,"column_start":8,"column_end":16},"name":"from_str","qualname":"<NodeClient as std::str::FromStr>::from_str","value":"fn from_str<'_>(&'_ str) -> Result<Self, Self::Err>","parent":{"krate":2,"index":12989},"children":[],"decl_id":{"krate":2,"index":12991},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2434},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":95301,"byte_end":95309,"line_start":90,"line_end":90,"column_start":12,"column_end":20},"name":"Provider","qualname":"::provider::Provider","value":"Provider {  }","parent":null,"children":[{"krate":0,"index":2436},{"krate":0,"index":2437},{"krate":0,"index":2438},{"krate":0,"index":2439},{"krate":0,"index":2440}],"decl_id":null,"docs":" An abstract provider for interacting with the [Ethereum JSON RPC\n API](https://github.com/ethereum/wiki/wiki/JSON-RPC). Must be instantiated\n with a data transport which implements the [`JsonRpcClient`](trait@crate::JsonRpcClient) trait\n (e.g. [HTTP](crate::Http), Websockets etc.)","sig":null,"attributes":[{"value":"/ An abstract provider for interacting with the [Ethereum JSON RPC","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":94460,"byte_end":94528,"line_start":68,"line_end":68,"column_start":1,"column_end":69}},{"value":"/ API](https://github.com/ethereum/wiki/wiki/JSON-RPC). Must be instantiated","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":94529,"byte_end":94607,"line_start":69,"line_end":69,"column_start":1,"column_end":79}},{"value":"/ with a data transport which implements the [`JsonRpcClient`](trait@crate::JsonRpcClient) trait","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":94608,"byte_end":94706,"line_start":70,"line_end":70,"column_start":1,"column_end":99}},{"value":"/ (e.g. [HTTP](crate::Http), Websockets etc.)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":94707,"byte_end":94754,"line_start":71,"line_end":71,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":94755,"byte_end":94758,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":94759,"byte_end":94772,"line_start":73,"line_end":73,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":94773,"byte_end":94776,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":94777,"byte_end":94790,"line_start":75,"line_end":75,"column_start":1,"column_end":14}},{"value":"/ # async fn foo() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":94791,"byte_end":94855,"line_start":76,"line_end":76,"column_start":1,"column_end":65}},{"value":"/ use ethers_providers::{Middleware, Provider, Http};","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":94856,"byte_end":94911,"line_start":77,"line_end":77,"column_start":1,"column_end":56}},{"value":"/ use std::convert::TryFrom;","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":94912,"byte_end":94942,"line_start":78,"line_end":78,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":94943,"byte_end":94946,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ let provider = Provider::<Http>::try_from(","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":94947,"byte_end":94993,"line_start":80,"line_end":80,"column_start":1,"column_end":47}},{"value":"/     \"https://mainnet.infura.io/v3/c60b0bb42f8a4c6481ecd229eddaca27\"","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":94994,"byte_end":95065,"line_start":81,"line_end":81,"column_start":1,"column_end":72}},{"value":"/ ).expect(\"could not instantiate HTTP Provider\");","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":95066,"byte_end":95118,"line_start":82,"line_end":82,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":95119,"byte_end":95122,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ let block = provider.get_block(100u64).await?;","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":95123,"byte_end":95173,"line_start":84,"line_end":84,"column_start":1,"column_end":51}},{"value":"/ println!(\"Got block: {}\", serde_json::to_string(&block)?);","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":95174,"byte_end":95236,"line_start":85,"line_end":85,"column_start":1,"column_end":63}},{"value":"/ # Ok(())","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":95237,"byte_end":95249,"line_start":86,"line_end":86,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":95250,"byte_end":95257,"line_start":87,"line_end":87,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":95258,"byte_end":95265,"line_start":88,"line_end":88,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":95666,"byte_end":95672,"line_start":102,"line_end":102,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<Provider<P> as std::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ P","parent":{"krate":2,"index":3160},"children":[],"decl_id":{"krate":2,"index":3162},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":95772,"byte_end":95776,"line_start":108,"line_end":108,"column_start":8,"column_end":12},"name":"from","qualname":"<ProviderError as FromErr>::from","value":"fn from(ProviderError) -> Self","parent":{"krate":0,"index":1771},"children":[],"decl_id":{"krate":0,"index":1773},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2472},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":96011,"byte_end":96029,"line_start":118,"line_end":118,"column_start":5,"column_end":23},"name":"JsonRpcClientError","qualname":"::provider::ProviderError::JsonRpcClientError","value":"ProviderError::JsonRpcClientError(Box<dyn std::error::Error + Send + Sync>)","parent":{"krate":0,"index":2447},"children":[],"decl_id":null,"docs":" An internal error in the JSON RPC Client\n","sig":null,"attributes":[{"value":"/ An internal error in the JSON RPC Client","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":95936,"byte_end":95980,"line_start":116,"line_end":116,"column_start":5,"column_end":49}},{"value":"error(transparent)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":95985,"byte_end":96006,"line_start":117,"line_end":117,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":2474},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":96038,"byte_end":96078,"line_start":118,"line_end":118,"column_start":32,"column_end":72},"name":"0","qualname":"::provider::ProviderError::JsonRpcClientError::0","value":"std::boxed::Box<(dyn std::error::Error + std::marker::Send + std::marker::Sync + 'static)>","parent":{"krate":0,"index":2472},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"from","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":96030,"byte_end":96037,"line_start":118,"line_end":118,"column_start":24,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2475},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":96170,"byte_end":96178,"line_start":122,"line_end":122,"column_start":5,"column_end":13},"name":"EnsError","qualname":"::provider::ProviderError::EnsError","value":"ProviderError::EnsError(String)","parent":{"krate":0,"index":2447},"children":[],"decl_id":null,"docs":" An error during ENS name resolution\n","sig":null,"attributes":[{"value":"/ An error during ENS name resolution","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":96086,"byte_end":96125,"line_start":120,"line_end":120,"column_start":5,"column_end":44}},{"value":"error(\"ens name not found: {0}\")","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":96130,"byte_end":96165,"line_start":121,"line_end":121,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":2477},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":96179,"byte_end":96185,"line_start":122,"line_end":122,"column_start":14,"column_end":20},"name":"0","qualname":"::provider::ProviderError::EnsError::0","value":"std::string::String","parent":{"krate":0,"index":2475},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2478},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":96287,"byte_end":96298,"line_start":126,"line_end":126,"column_start":5,"column_end":16},"name":"EnsNotOwned","qualname":"::provider::ProviderError::EnsNotOwned","value":"ProviderError::EnsNotOwned(String)","parent":{"krate":0,"index":2447},"children":[],"decl_id":null,"docs":" Invalid reverse ENS name\n","sig":null,"attributes":[{"value":"/ Invalid reverse ENS name","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":96193,"byte_end":96221,"line_start":124,"line_end":124,"column_start":5,"column_end":33}},{"value":"error(\"reverse ens name not pointing to itself: {0}\")","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":96226,"byte_end":96282,"line_start":125,"line_end":125,"column_start":5,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":2480},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":96299,"byte_end":96305,"line_start":126,"line_end":126,"column_start":17,"column_end":23},"name":"0","qualname":"::provider::ProviderError::EnsNotOwned::0","value":"std::string::String","parent":{"krate":0,"index":2478},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2481},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":96339,"byte_end":96348,"line_start":129,"line_end":129,"column_start":5,"column_end":14},"name":"SerdeJson","qualname":"::provider::ProviderError::SerdeJson","value":"ProviderError::SerdeJson(serde_json::Error)","parent":{"krate":0,"index":2447},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(transparent)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":96313,"byte_end":96334,"line_start":128,"line_end":128,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":2483},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":96357,"byte_end":96374,"line_start":129,"line_end":129,"column_start":23,"column_end":40},"name":"0","qualname":"::provider::ProviderError::SerdeJson::0","value":"serde_json::Error","parent":{"krate":0,"index":2481},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"from","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":96349,"byte_end":96356,"line_start":129,"line_end":129,"column_start":15,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2484},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":96408,"byte_end":96416,"line_start":132,"line_end":132,"column_start":5,"column_end":13},"name":"HexError","qualname":"::provider::ProviderError::HexError","value":"ProviderError::HexError(hex::FromHexError)","parent":{"krate":0,"index":2447},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(transparent)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":96382,"byte_end":96403,"line_start":131,"line_end":131,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":2486},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":96425,"byte_end":96442,"line_start":132,"line_end":132,"column_start":22,"column_end":39},"name":"0","qualname":"::provider::ProviderError::HexError::0","value":"hex::FromHexError","parent":{"krate":0,"index":2484},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"from","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":96417,"byte_end":96424,"line_start":132,"line_end":132,"column_start":14,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2487},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":96476,"byte_end":96485,"line_start":135,"line_end":135,"column_start":5,"column_end":14},"name":"HTTPError","qualname":"::provider::ProviderError::HTTPError","value":"ProviderError::HTTPError(reqwest::Error)","parent":{"krate":0,"index":2447},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(transparent)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":96450,"byte_end":96471,"line_start":134,"line_end":134,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":2489},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":96494,"byte_end":96508,"line_start":135,"line_end":135,"column_start":23,"column_end":37},"name":"0","qualname":"::provider::ProviderError::HTTPError::0","value":"reqwest::Error","parent":{"krate":0,"index":2487},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"from","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":96486,"byte_end":96493,"line_start":135,"line_end":135,"column_start":15,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2490},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":96550,"byte_end":96561,"line_start":138,"line_end":138,"column_start":5,"column_end":16},"name":"CustomError","qualname":"::provider::ProviderError::CustomError","value":"ProviderError::CustomError(String)","parent":{"krate":0,"index":2447},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"custom error: {0}\")","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":96516,"byte_end":96545,"line_start":137,"line_end":137,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":2492},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":96562,"byte_end":96568,"line_start":138,"line_end":138,"column_start":17,"column_end":23},"name":"0","qualname":"::provider::ProviderError::CustomError::0","value":"std::string::String","parent":{"krate":0,"index":2490},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2493},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":96608,"byte_end":96622,"line_start":141,"line_end":141,"column_start":5,"column_end":19},"name":"UnsupportedRPC","qualname":"::provider::ProviderError::UnsupportedRPC","value":"ProviderError::UnsupportedRPC","parent":{"krate":0,"index":2447},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"unsupported RPC\")","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":96576,"byte_end":96603,"line_start":140,"line_end":140,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2495},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":96669,"byte_end":96690,"line_start":144,"line_end":144,"column_start":5,"column_end":26},"name":"UnsupportedNodeClient","qualname":"::provider::ProviderError::UnsupportedNodeClient","value":"ProviderError::UnsupportedNodeClient","parent":{"krate":0,"index":2447},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"unsupported node client\")","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":96629,"byte_end":96664,"line_start":143,"line_end":143,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2497},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":96817,"byte_end":96834,"line_start":147,"line_end":147,"column_start":5,"column_end":22},"name":"SignerUnavailable","qualname":"::provider::ProviderError::SignerUnavailable","value":"ProviderError::SignerUnavailable","parent":{"krate":0,"index":2447},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Attempted to sign a transaction with no available signer. Hint: did you mean to use a SignerMiddleware?\")","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":96697,"byte_end":96812,"line_start":146,"line_end":146,"column_start":5,"column_end":120}}]},{"kind":"Enum","id":{"krate":0,"index":2447},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":95916,"byte_end":95929,"line_start":115,"line_end":115,"column_start":10,"column_end":23},"name":"ProviderError","qualname":"::provider::ProviderError","value":"enum ProviderError {\n    JsonRpcClientError(Box<dyn std::error::Error + Send + Sync>),\n    EnsError(String),\n    EnsNotOwned(String),\n    SerdeJson(serde_json::Error),\n    HexError(hex::FromHexError),\n    HTTPError(reqwest::Error),\n    CustomError(String),\n    UnsupportedRPC,\n    UnsupportedNodeClient,\n    SignerUnavailable,\n}","parent":null,"children":[{"krate":0,"index":2472},{"krate":0,"index":2475},{"krate":0,"index":2478},{"krate":0,"index":2481},{"krate":0,"index":2484},{"krate":0,"index":2487},{"krate":0,"index":2490},{"krate":0,"index":2493},{"krate":0,"index":2495},{"krate":0,"index":2497}],"decl_id":null,"docs":" An error thrown when making a call to the provider\n","sig":null,"attributes":[{"value":"/ An error thrown when making a call to the provider","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":95852,"byte_end":95906,"line_start":114,"line_end":114,"column_start":1,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2501},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":96970,"byte_end":96974,"line_start":154,"line_end":154,"column_start":5,"column_end":9},"name":"Logs","qualname":"::provider::FilterKind::Logs","value":"FilterKind::Logs(&'a Filter)","parent":{"krate":0,"index":2499},"children":[],"decl_id":null,"docs":" `eth_newBlockFilter`\n","sig":null,"attributes":[{"value":"/ `eth_newBlockFilter`","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":96941,"byte_end":96965,"line_start":153,"line_end":153,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":2503},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":96975,"byte_end":96985,"line_start":154,"line_end":154,"column_start":10,"column_end":20},"name":"0","qualname":"::provider::FilterKind::Logs::0","value":"&'a ethers_core::types::Filter","parent":{"krate":0,"index":2501},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2504},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":97029,"byte_end":97038,"line_start":157,"line_end":157,"column_start":5,"column_end":14},"name":"NewBlocks","qualname":"::provider::FilterKind::NewBlocks","value":"FilterKind::NewBlocks","parent":{"krate":0,"index":2499},"children":[],"decl_id":null,"docs":" `eth_newBlockFilter` filter\n","sig":null,"attributes":[{"value":"/ `eth_newBlockFilter` filter","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":96993,"byte_end":97024,"line_start":156,"line_end":156,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2506},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":97094,"byte_end":97113,"line_start":160,"line_end":160,"column_start":5,"column_end":24},"name":"PendingTransactions","qualname":"::provider::FilterKind::PendingTransactions","value":"FilterKind::PendingTransactions","parent":{"krate":0,"index":2499},"children":[],"decl_id":null,"docs":" `eth_newPendingTransactionFilter` filter\n","sig":null,"attributes":[{"value":"/ `eth_newPendingTransactionFilter` filter","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":97045,"byte_end":97089,"line_start":159,"line_end":159,"column_start":5,"column_end":49}}]},{"kind":"Enum","id":{"krate":0,"index":2499},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":96920,"byte_end":96930,"line_start":152,"line_end":152,"column_start":10,"column_end":20},"name":"FilterKind","qualname":"::provider::FilterKind","value":"enum FilterKind<'a> { Logs(&'a Filter), NewBlocks, PendingTransactions, }","parent":null,"children":[{"krate":0,"index":2501},{"krate":0,"index":2504},{"krate":0,"index":2506}],"decl_id":null,"docs":" Types of filters supported by the JSON-RPC.\n","sig":null,"attributes":[{"value":"/ Types of filters supported by the JSON-RPC.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":96839,"byte_end":96886,"line_start":150,"line_end":150,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":763},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":97238,"byte_end":97241,"line_start":166,"line_end":166,"column_start":12,"column_end":15},"name":"new","qualname":"<Provider<P>>::new","value":"fn new(P) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Instantiate a new provider with a backend.\n","sig":null,"attributes":[{"value":"/ Instantiate a new provider with a backend.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":97180,"byte_end":97226,"line_start":165,"line_end":165,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":97641,"byte_end":97652,"line_start":178,"line_end":178,"column_start":18,"column_end":29},"name":"node_client","qualname":"<Provider<P>>::node_client","value":"async fn node_client<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns the type of node we're connected to, while also caching the value for use\n in other node-specific API calls, such as the get_block_receipts call.\n","sig":null,"attributes":[{"value":"/ Returns the type of node we're connected to, while also caching the value for use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":97459,"byte_end":97544,"line_start":176,"line_end":176,"column_start":5,"column_end":90}},{"value":"/ in other node-specific API calls, such as the get_block_receipts call.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":97549,"byte_end":97623,"line_start":177,"line_end":177,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":767},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":98245,"byte_end":98256,"line_start":195,"line_end":195,"column_start":12,"column_end":23},"name":"with_sender","qualname":"<Provider<P>>::with_sender","value":"fn with_sender<impl Into<Address>>(Self, impl Into<Address>) -> Self where\nimpl Into<Address>: Into<Address>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":98222,"byte_end":98233,"line_start":194,"line_end":194,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":769},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":98385,"byte_end":98392,"line_start":200,"line_end":200,"column_start":18,"column_end":25},"name":"request","qualname":"<Provider<P>>::request","value":"async fn request<T, R, '_, '_>(&'_ Self, &'_ str, T) -> /*impl Trait*/ where\nT: Debug + Serialize + Send + Sync, R: Serialize + DeserializeOwned + Debug","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":779},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":101303,"byte_end":101311,"line_start":274,"line_end":274,"column_start":12,"column_end":20},"name":"call_raw","qualname":"<Provider<P>>::call_raw","value":"fn call_raw<'a>(&'a Self, &'a TypedTransaction) -> CallBuilder","parent":null,"children":[],"decl_id":null,"docs":" Analogous to [`Middleware::call`], but returns a [`CallBuilder`] that can either be\n `.await`d or used to override the parameters sent to `eth_call`.","sig":null,"attributes":[{"value":"/ Analogous to [`Middleware::call`], but returns a [`CallBuilder`] that can either be","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":99760,"byte_end":99847,"line_start":238,"line_end":238,"column_start":5,"column_end":92}},{"value":"/ `.await`d or used to override the parameters sent to `eth_call`.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":99852,"byte_end":99920,"line_start":239,"line_end":239,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":99925,"byte_end":99928,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ See the [`call_raw::spoof`] for functions to construct state override parameters.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":99933,"byte_end":100018,"line_start":241,"line_end":241,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":100023,"byte_end":100026,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ Note: this method _does not_ send a transaction from your account","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":100031,"byte_end":100100,"line_start":243,"line_end":243,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":100105,"byte_end":100108,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ [`call_raw::spoof`]: crate::call_raw::spoof","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":100113,"byte_end":100160,"line_start":245,"line_end":245,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":100165,"byte_end":100168,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":100173,"byte_end":100186,"line_start":247,"line_end":247,"column_start":5,"column_end":18}},{"value":"/ ```no_run","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":100191,"byte_end":100204,"line_start":248,"line_end":248,"column_start":5,"column_end":18}},{"value":"/ # use ethers_core::{","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":100209,"byte_end":100233,"line_start":249,"line_end":249,"column_start":5,"column_end":29}},{"value":"/ #     types::{Address, TransactionRequest, H256},","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":100238,"byte_end":100291,"line_start":250,"line_end":250,"column_start":5,"column_end":58}},{"value":"/ #     utils::{parse_ether, Geth},","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":100296,"byte_end":100333,"line_start":251,"line_end":251,"column_start":5,"column_end":42}},{"value":"/ # };","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":100338,"byte_end":100346,"line_start":252,"line_end":252,"column_start":5,"column_end":13}},{"value":"/ # use ethers_providers::{Provider, Http, Middleware, call_raw::{RawCall, spoof}};","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":100351,"byte_end":100436,"line_start":253,"line_end":253,"column_start":5,"column_end":90}},{"value":"/ # use std::convert::TryFrom;","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":100441,"byte_end":100473,"line_start":254,"line_end":254,"column_start":5,"column_end":37}},{"value":"/ #","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":100478,"byte_end":100483,"line_start":255,"line_end":255,"column_start":5,"column_end":10}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":100488,"byte_end":100535,"line_start":256,"line_end":256,"column_start":5,"column_end":52}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":100540,"byte_end":100605,"line_start":257,"line_end":257,"column_start":5,"column_end":70}},{"value":"/ let geth = Geth::new().spawn();","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":100610,"byte_end":100645,"line_start":258,"line_end":258,"column_start":5,"column_end":40}},{"value":"/ let provider = Provider::<Http>::try_from(geth.endpoint()).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":100650,"byte_end":100722,"line_start":259,"line_end":259,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":100727,"byte_end":100730,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ let adr1: Address = \"0x6fC21092DA55B392b045eD78F4732bff3C580e2c\".parse()?;","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":100735,"byte_end":100813,"line_start":261,"line_end":261,"column_start":5,"column_end":83}},{"value":"/ let adr2: Address = \"0x295a70b2de5e3953354a6a8344e616ed314d7251\".parse()?;","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":100818,"byte_end":100896,"line_start":262,"line_end":262,"column_start":5,"column_end":83}},{"value":"/ let pay_amt = parse_ether(1u64)?;","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":100901,"byte_end":100938,"line_start":263,"line_end":263,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":100943,"byte_end":100946,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ // Not enough ether to pay for the transaction","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":100951,"byte_end":101001,"line_start":265,"line_end":265,"column_start":5,"column_end":55}},{"value":"/ let tx = TransactionRequest::pay(adr2, pay_amt).from(adr1).into();","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":101006,"byte_end":101076,"line_start":266,"line_end":266,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":101081,"byte_end":101084,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ // override the sender's balance for the call","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":101089,"byte_end":101138,"line_start":268,"line_end":268,"column_start":5,"column_end":54}},{"value":"/ let mut state = spoof::balance(adr1, pay_amt * 2);","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":101143,"byte_end":101197,"line_start":269,"line_end":269,"column_start":5,"column_end":59}},{"value":"/ provider.call_raw(&tx).state(&state).await?;","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":101202,"byte_end":101250,"line_start":270,"line_end":270,"column_start":5,"column_end":53}},{"value":"/ # Ok(())","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":101255,"byte_end":101267,"line_start":271,"line_end":271,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":101272,"byte_end":101279,"line_start":272,"line_end":272,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":101284,"byte_end":101291,"line_start":273,"line_end":273,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2566},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102164,"byte_end":102169,"line_start":299,"line_end":299,"column_start":8,"column_end":13},"name":"inner","qualname":"<Provider<P> as Middleware>::inner","value":"fn inner<'_>(&'_ Self) -> &'_ Self::Inner","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3779},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2567},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102265,"byte_end":102273,"line_start":303,"line_end":303,"column_start":8,"column_end":16},"name":"provider","qualname":"<Provider<P> as Middleware>::provider","value":"fn provider<'_>(&'_ Self) -> &'_ Provider<Self::Provider>","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3780},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2568},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102339,"byte_end":102353,"line_start":307,"line_end":307,"column_start":8,"column_end":22},"name":"default_sender","qualname":"<Provider<P> as Middleware>::default_sender","value":"fn default_sender<'_>(&'_ Self) -> Option<Address>","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3781},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2569},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102594,"byte_end":102608,"line_start":316,"line_end":316,"column_start":14,"column_end":28},"name":"client_version","qualname":"<Provider<P> as Middleware>::client_version","value":"fn client_version<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<String, Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3782},"docs":" Returns the current client version using the `web3_clientVersion` RPC.\n","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2573},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102722,"byte_end":102738,"line_start":320,"line_end":320,"column_start":14,"column_end":30},"name":"fill_transaction","qualname":"<Provider<P> as Middleware>::fill_transaction","value":"fn fill_transaction<'life0, 'life1,\n'async_trait>(&'life0 Self, &'life1 mut TypedTransaction, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<(), Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3786},"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2578},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":104429,"byte_end":104445,"line_start":366,"line_end":366,"column_start":14,"column_end":30},"name":"get_block_number","qualname":"<Provider<P> as Middleware>::get_block_number","value":"fn get_block_number<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<U64, ProviderError>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3791},"docs":" Gets the latest block number via the `eth_BlockNumber` API\n","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2582},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":104630,"byte_end":104639,"line_start":371,"line_end":371,"column_start":14,"column_end":23},"name":"get_block","qualname":"<Provider<P> as Middleware>::get_block","value":"fn get_block<'life0, 'async_trait, T>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Option<Block<TxHash>>, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where T: 'async_trait + Into<BlockId> + Send + Sync,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3833},"docs":" Gets the block at `block_hash_or_number` (transaction hashes only)\n","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2587},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":104942,"byte_end":104960,"line_start":379,"line_end":379,"column_start":14,"column_end":32},"name":"get_block_with_txs","qualname":"<Provider<P> as Middleware>::get_block_with_txs","value":"fn get_block_with_txs<'life0, 'async_trait, T>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Option<Block<Transaction>>, ProviderError>> +\n    ::core::marker::Send + 'async_trait>> where T: 'async_trait +\nInto<BlockId> + Send + Sync, 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3838},"docs":" Gets the block at `block_hash_or_number` (full transactions included)\n","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2592},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":105252,"byte_end":105267,"line_start":387,"line_end":387,"column_start":14,"column_end":29},"name":"get_uncle_count","qualname":"<Provider<P> as Middleware>::get_uncle_count","value":"fn get_uncle_count<'life0, 'async_trait, T>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<U256, Self::Error>> + ::core::marker::Send + 'async_trait>> where\nT: 'async_trait + Into<BlockId> + Send + Sync, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3843},"docs":" Gets the block uncle count at `block_hash_or_number`\n","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2597},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":105908,"byte_end":105917,"line_start":405,"line_end":405,"column_start":14,"column_end":23},"name":"get_uncle","qualname":"<Provider<P> as Middleware>::get_uncle","value":"fn get_uncle<'life0, 'async_trait, T>(&'life0 Self, T, U64)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Option<Block<H256>>, ProviderError>> + ::core::marker::Send +\n    'async_trait>> where T: 'async_trait + Into<BlockId> + Send + Sync,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3848},"docs":" Gets the block uncle at `block_hash_or_number` and `idx`\n","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2602},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":106647,"byte_end":106662,"line_start":425,"line_end":425,"column_start":14,"column_end":29},"name":"get_transaction","qualname":"<Provider<P> as Middleware>::get_transaction","value":"fn get_transaction<'life0, 'async_trait, T>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Option<Transaction>, ProviderError>> + ::core::marker::Send +\n    'async_trait>> where T: 'async_trait + Send + Sync + Into<TxHash>,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3885},"docs":" Gets the transaction with `transaction_hash`\n","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2607},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":106981,"byte_end":107004,"line_start":434,"line_end":434,"column_start":14,"column_end":37},"name":"get_transaction_receipt","qualname":"<Provider<P> as Middleware>::get_transaction_receipt","value":"fn get_transaction_receipt<'life0, 'async_trait, T>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Option<TransactionReceipt>, ProviderError>> +\n    ::core::marker::Send + 'async_trait>> where T: 'async_trait + Send +\nSync + Into<TxHash>, 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3890},"docs":" Gets the transaction receipt with `transaction_hash`\n","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2612},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":107445,"byte_end":107463,"line_start":446,"line_end":446,"column_start":14,"column_end":32},"name":"get_block_receipts","qualname":"<Provider<P> as Middleware>::get_block_receipts","value":"fn get_block_receipts<'life0, 'async_trait, T>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<TransactionReceipt>, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where T: 'async_trait + Into<BlockNumber> + Send + Sync,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3895},"docs":" Returns all receipts for a block.","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2617},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":107753,"byte_end":107774,"line_start":454,"line_end":454,"column_start":14,"column_end":35},"name":"parity_block_receipts","qualname":"<Provider<P> as Middleware>::parity_block_receipts","value":"fn parity_block_receipts<'life0, 'async_trait, T>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<TransactionReceipt>, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where T: 'async_trait + Into<BlockNumber> + Send + Sync,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4037},"docs":" Returns all receipts for that block. Must be done on a parity node.\n","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2622},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":108055,"byte_end":108068,"line_start":462,"line_end":462,"column_start":14,"column_end":27},"name":"get_gas_price","qualname":"<Provider<P> as Middleware>::get_gas_price","value":"fn get_gas_price<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<U256, ProviderError>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3900},"docs":" Gets the current gas price as estimated by the node\n","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2626},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":108310,"byte_end":108331,"line_start":468,"line_end":468,"column_start":14,"column_end":35},"name":"estimate_eip1559_fees","qualname":"<Provider<P> as Middleware>::estimate_eip1559_fees","value":"fn estimate_eip1559_fees<'life0,\n'async_trait>(&'life0 Self,\nOption<fn(: U256, : Vec<Vec<U256>>) -> (U256, U256)>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<(U256, U256), Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3904},"docs":" Gets a heuristic recommendation of max fee per gas and max priority fee per gas for\n EIP-1559 compatible transactions.\n","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2632},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":109491,"byte_end":109503,"line_start":498,"line_end":498,"column_start":14,"column_end":26},"name":"get_accounts","qualname":"<Provider<P> as Middleware>::get_accounts","value":"fn get_accounts<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<Address>, ProviderError>> + ::core::marker::Send +\n    'async_trait>> where 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3908},"docs":" Gets the accounts on the node\n","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2636},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":109660,"byte_end":109681,"line_start":503,"line_end":503,"column_start":14,"column_end":35},"name":"get_transaction_count","qualname":"<Provider<P> as Middleware>::get_transaction_count","value":"fn get_transaction_count<'life0, 'async_trait,\nT>(&'life0 Self, T, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<U256, ProviderError>> + ::core::marker::Send + 'async_trait>> where\nT: 'async_trait + Into<NameOrAddress> + Send + Sync, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3853},"docs":" Returns the nonce of the address\n","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2642},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":110270,"byte_end":110281,"line_start":519,"line_end":519,"column_start":14,"column_end":25},"name":"get_balance","qualname":"<Provider<P> as Middleware>::get_balance","value":"fn get_balance<'life0, 'async_trait, T>(&'life0 Self, T, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<U256, ProviderError>> + ::core::marker::Send + 'async_trait>> where\nT: 'async_trait + Into<NameOrAddress> + Send + Sync, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3880},"docs":" Returns the account's balance\n","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2648},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":110961,"byte_end":110972,"line_start":536,"line_end":536,"column_start":14,"column_end":25},"name":"get_chainid","qualname":"<Provider<P> as Middleware>::get_chainid","value":"fn get_chainid<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<U256, ProviderError>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3872},"docs":" Returns the currently configured chain id, a value used in replay-protected\n transaction signing as introduced by EIP-155.\n","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2652},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":111150,"byte_end":111157,"line_start":541,"line_end":541,"column_start":14,"column_end":21},"name":"syncing","qualname":"<Provider<P> as Middleware>::syncing","value":"fn syncing<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<SyncingStatus, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3868},"docs":" Return current client syncing status. If IsFalse sync is over.\n","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2656},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":111308,"byte_end":111323,"line_start":546,"line_end":546,"column_start":14,"column_end":29},"name":"get_net_version","qualname":"<Provider<P> as Middleware>::get_net_version","value":"fn get_net_version<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<String, ProviderError>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3876},"docs":" Returns the network version.\n","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2660},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":111776,"byte_end":111780,"line_start":557,"line_end":557,"column_start":14,"column_end":18},"name":"call","qualname":"<Provider<P> as Middleware>::call","value":"fn call<'life0, 'life1,\n'async_trait>(&'life0 Self, &'life1 TypedTransaction, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Bytes, ProviderError>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3863},"docs":" Sends the read-only (constant) transaction to a single Ethereum node and return the result\n (as bytes) of executing it. This is free, since it does not change any state on the\n blockchain.\n","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2666},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":112399,"byte_end":112411,"line_start":571,"line_end":571,"column_start":14,"column_end":26},"name":"estimate_gas","qualname":"<Provider<P> as Middleware>::estimate_gas","value":"fn estimate_gas<'life0, 'life1,\n'async_trait>(&'life0 Self, &'life1 TypedTransaction, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<U256, ProviderError>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3858},"docs":" Sends a transaction to a single Ethereum node and return the estimated amount of gas\n required (as a U256) to send it This is free, but only an estimate. Providing too little\n gas will result in a transaction being rejected (while still consuming all provided\n gas).\n","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2671},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":112957,"byte_end":112975,"line_start":587,"line_end":587,"column_start":14,"column_end":32},"name":"create_access_list","qualname":"<Provider<P> as Middleware>::create_access_list","value":"fn create_access_list<'life0, 'life1,\n'async_trait>(&'life0 Self, &'life1 TypedTransaction, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<AccessListWithGasUsed, ProviderError>> + ::core::marker::Send +\n    'async_trait>> where 'life0:'async_trait, 'life1:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4072},"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2677},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":113498,"byte_end":113514,"line_start":599,"line_end":599,"column_start":14,"column_end":30},"name":"send_transaction","qualname":"<Provider<P> as Middleware>::send_transaction","value":"fn send_transaction<'life0, 'async_trait, T>(&'life0 Self, T, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<PendingTransaction, ProviderError>> + ::core::marker::Send +\n    'async_trait>> where T: 'async_trait + Into<TypedTransaction> + Send +\nSync, 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3795},"docs":" Sends the transaction to the entire Ethereum network and returns the transaction's hash\n This will consume gas from the account that signed the transaction.\n","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2682},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":114096,"byte_end":114116,"line_start":613,"line_end":613,"column_start":14,"column_end":34},"name":"send_raw_transaction","qualname":"<Provider<P> as Middleware>::send_raw_transaction","value":"fn send_raw_transaction<'a, 'async_trait>(&'a Self, Bytes)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<PendingTransaction, ProviderError>> + ::core::marker::Send +\n    'async_trait>> where 'a:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3912},"docs":" Send the raw RLP encoded transaction to the entire Ethereum network and returns the\n transaction's hash This will consume gas from the account that signed the transaction.\n","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2686},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":114607,"byte_end":114616,"line_start":624,"line_end":624,"column_start":14,"column_end":23},"name":"is_signer","qualname":"<Provider<P> as Middleware>::is_signer","value":"fn is_signer<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output = bool> +\n    ::core::marker::Send + 'async_trait>> where 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3916},"docs":" The JSON-RPC provider is at the bottom-most position in the middleware stack. Here we check\n if it has the key for the sender address unlocked, as well as supports the `eth_sign` call.\n","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2690},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":114867,"byte_end":114871,"line_start":632,"line_end":632,"column_start":14,"column_end":18},"name":"sign","qualname":"<Provider<P> as Middleware>::sign","value":"fn sign<'life0, 'life1, 'async_trait, T>(&'life0 Self, T, &'life1 Address)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Signature, ProviderError>> + ::core::marker::Send + 'async_trait>>\nwhere T: 'async_trait + Into<Bytes> + Send + Sync, 'life0:'async_trait,\n'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3920},"docs":" Signs data using a specific account. This account needs to be unlocked.\n","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2697},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":115561,"byte_end":115577,"line_start":651,"line_end":651,"column_start":14,"column_end":30},"name":"sign_transaction","qualname":"<Provider<P> as Middleware>::sign_transaction","value":"fn sign_transaction<'life0, 'life1,\n'async_trait>(&'life0 Self, &'life1 TypedTransaction, Address)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Signature, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3926},"docs":" Sign a transaction via RPC call\n","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2702},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":115880,"byte_end":115888,"line_start":662,"line_end":662,"column_start":14,"column_end":22},"name":"get_logs","qualname":"<Provider<P> as Middleware>::get_logs","value":"fn get_logs<'life0, 'life1, 'async_trait>(&'life0 Self, &'life1 Filter)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<Log>, ProviderError>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3931},"docs":" Returns an array (possibly empty) of logs that match the filter\n","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2707},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":116016,"byte_end":116034,"line_start":666,"line_end":666,"column_start":8,"column_end":26},"name":"get_logs_paginated","qualname":"<Provider<P> as Middleware>::get_logs_paginated","value":"fn get_logs_paginated<'a, '_>(&'a Self, &'_ Filter, u64) -> LogQuery","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3936},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2709},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":116222,"byte_end":116227,"line_start":671,"line_end":671,"column_start":14,"column_end":19},"name":"watch","qualname":"<Provider<P> as Middleware>::watch","value":"fn watch<'a, 'life0, 'async_trait>(&'a Self, &'life0 Filter)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<FilterWatcher, ProviderError>> + ::core::marker::Send +\n    'async_trait>> where 'a:'async_trait, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3948},"docs":" Streams matching filter logs\n","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2714},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":116556,"byte_end":116568,"line_start":681,"line_end":681,"column_start":14,"column_end":26},"name":"watch_blocks","qualname":"<Provider<P> as Middleware>::watch_blocks","value":"fn watch_blocks<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<FilterWatcher, ProviderError>> + ::core::marker::Send +\n    'async_trait>> where 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3963},"docs":" Streams new block hashes\n","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2718},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":116852,"byte_end":116878,"line_start":688,"line_end":688,"column_start":14,"column_end":40},"name":"watch_pending_transactions","qualname":"<Provider<P> as Middleware>::watch_pending_transactions","value":"fn watch_pending_transactions<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<FilterWatcher, ProviderError>> + ::core::marker::Send +\n    'async_trait>> where 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3953},"docs":" Streams pending transactions\n","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2722},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":117338,"byte_end":117348,"line_start":698,"line_end":698,"column_start":14,"column_end":24},"name":"new_filter","qualname":"<Provider<P> as Middleware>::new_filter","value":"fn new_filter<'life0, 'life1, 'async_trait>(&'life0 Self, FilterKind)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<U256, ProviderError>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3938},"docs":" Creates a filter object, based on filter options, to notify when the state changes (logs).\n To check if the state has changed, call `get_filter_changes` with the filter id.\n","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2727},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":117811,"byte_end":117827,"line_start":709,"line_end":709,"column_start":14,"column_end":30},"name":"uninstall_filter","qualname":"<Provider<P> as Middleware>::uninstall_filter","value":"fn uninstall_filter<'life0, 'async_trait, T>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<bool, ProviderError>> + ::core::marker::Send + 'async_trait>> where\nT: 'async_trait + Into<U256> + Send + Sync, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3943},"docs":" Uninstalls a filter\n","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2732},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":118676,"byte_end":118694,"line_start":730,"line_end":730,"column_start":14,"column_end":32},"name":"get_filter_changes","qualname":"<Provider<P> as Middleware>::get_filter_changes","value":"fn get_filter_changes<'life0, 'async_trait, T, R>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<R>, ProviderError>> + ::core::marker::Send + 'async_trait>>\nwhere T: Into<U256> + Send + Sync, R: Serialize + DeserializeOwned + Send +\nSync + Debug, T: 'async_trait, R: 'async_trait, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3957},"docs":" Polling method for a filter, which returns an array of logs which occurred since last poll.","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2738},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":119057,"byte_end":119071,"line_start":740,"line_end":740,"column_start":14,"column_end":28},"name":"get_storage_at","qualname":"<Provider<P> as Middleware>::get_storage_at","value":"fn get_storage_at<'life0, 'async_trait,\nT>(&'life0 Self, T, H256, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<H256, ProviderError>> + ::core::marker::Send + 'async_trait>> where\nT: 'async_trait + Into<NameOrAddress> + Send + Sync, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3972},"docs":" Get the storage of an address for a particular slot location\n","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2744},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":120362,"byte_end":120370,"line_start":766,"line_end":766,"column_start":14,"column_end":22},"name":"get_code","qualname":"<Provider<P> as Middleware>::get_code","value":"fn get_code<'life0, 'async_trait, T>(&'life0 Self, T, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Bytes, ProviderError>> + ::core::marker::Send + 'async_trait>>\nwhere T: 'async_trait + Into<NameOrAddress> + Send + Sync,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3967},"docs":" Returns the deployed code at a given address\n","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2750},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":120997,"byte_end":121006,"line_start":783,"line_end":783,"column_start":14,"column_end":23},"name":"get_proof","qualname":"<Provider<P> as Middleware>::get_proof","value":"fn get_proof<'life0, 'async_trait,\nT>(&'life0 Self, T, Vec<H256>, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<EIP1186ProofResponse, ProviderError>> + ::core::marker::Send +\n    'async_trait>> where T: 'async_trait + Into<NameOrAddress> + Send + Sync,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3977},"docs":" Returns the EIP-1186 proof response\n <https://github.com/ethereum/EIPs/issues/1186>\n","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2757},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":122350,"byte_end":122362,"line_start":815,"line_end":815,"column_start":14,"column_end":26},"name":"resolve_name","qualname":"<Provider<P> as Middleware>::resolve_name","value":"fn resolve_name<'life0, 'life1, 'async_trait>(&'life0 Self, &'life1 str)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Address, ProviderError>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3809},"docs":" Returns the address that the `ens_name` resolves to (or None if not configured).","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2762},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":122780,"byte_end":122794,"line_start":824,"line_end":824,"column_start":14,"column_end":28},"name":"lookup_address","qualname":"<Provider<P> as Middleware>::lookup_address","value":"fn lookup_address<'life0, 'async_trait>(&'life0 Self, Address)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<String, ProviderError>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3814},"docs":" Returns the ENS name the `address` resolves to (or None if not configured).\n # Panics","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2766},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":124105,"byte_end":124119,"line_start":855,"line_end":855,"column_start":14,"column_end":28},"name":"resolve_avatar","qualname":"<Provider<P> as Middleware>::resolve_avatar","value":"fn resolve_avatar<'life0, 'life1, 'async_trait>(&'life0 Self, &'life1 str)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Url, ProviderError>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3818},"docs":" Returns the avatar HTTP link of the avatar that the `ens_name` resolves to (or None\n if not configured)","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2773},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":128037,"byte_end":128048,"line_start":933,"line_end":933,"column_start":14,"column_end":25},"name":"resolve_nft","qualname":"<Provider<P> as Middleware>::resolve_nft","value":"fn resolve_nft<'life0, 'async_trait>(&'life0 Self, erc::ERCNFT)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Url, ProviderError>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3823},"docs":" Returns the URL (not necesserily HTTP) of the image behind a token.","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2779},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":129383,"byte_end":129396,"line_start":960,"line_end":960,"column_start":14,"column_end":27},"name":"resolve_field","qualname":"<Provider<P> as Middleware>::resolve_field","value":"fn resolve_field<'life0, 'life1, 'life2,\n'async_trait>(&'life0 Self, &'life1 str, &'life2 str)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<String, ProviderError>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, 'life1:'async_trait, 'life2:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3827},"docs":" Fetch a field for the `ens_name` (no None if not configured).","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2785},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":130025,"byte_end":130039,"line_start":975,"line_end":975,"column_start":14,"column_end":28},"name":"txpool_content","qualname":"<Provider<P> as Middleware>::txpool_content","value":"fn txpool_content<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<TxpoolContent, ProviderError>> + ::core::marker::Send +\n    'async_trait>> where 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3982},"docs":" Returns the details of all transactions currently pending for inclusion in the next\n block(s), as well as the ones that are being scheduled for future execution only.\n Ref: [Here](https://geth.ethereum.org/docs/rpc/ns-txpool#txpool_content)\n","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2789},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":130423,"byte_end":130437,"line_start":982,"line_end":982,"column_start":14,"column_end":28},"name":"txpool_inspect","qualname":"<Provider<P> as Middleware>::txpool_inspect","value":"fn txpool_inspect<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<TxpoolInspect, ProviderError>> + ::core::marker::Send +\n    'async_trait>> where 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3986},"docs":" Returns a summary of all the transactions currently pending for inclusion in the next\n block(s), as well as the ones that are being scheduled for future execution only.\n Ref: [Here](https://geth.ethereum.org/docs/rpc/ns-txpool#txpool_inspect)\n","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2793},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":130813,"byte_end":130826,"line_start":989,"line_end":989,"column_start":14,"column_end":27},"name":"txpool_status","qualname":"<Provider<P> as Middleware>::txpool_status","value":"fn txpool_status<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<TxpoolStatus, ProviderError>> + ::core::marker::Send +\n    'async_trait>> where 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3990},"docs":" Returns the number of transactions currently pending for inclusion in the next block(s), as\n well as the ones that are being scheduled for future execution only.\n Ref: [Here](https://geth.ethereum.org/docs/rpc/ns-txpool#txpool_status)\n","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2797},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":131022,"byte_end":131045,"line_start":994,"line_end":994,"column_start":14,"column_end":37},"name":"debug_trace_transaction","qualname":"<Provider<P> as Middleware>::debug_trace_transaction","value":"fn debug_trace_transaction<'life0,\n'async_trait>(&'life0 Self, TxHash, GethDebugTracingOptions)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<GethTrace, ProviderError>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3994},"docs":" Executes the given call and returns a number of possible traces for it\n","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2801},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":131469,"byte_end":131479,"line_start":1005,"line_end":1005,"column_start":14,"column_end":24},"name":"trace_call","qualname":"<Provider<P> as Middleware>::trace_call","value":"fn trace_call<'life0, 'async_trait,\nT>(&'life0 Self, T, Vec<TraceType>, Option<BlockNumber>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<BlockTrace, ProviderError>> + ::core::marker::Send + 'async_trait>>\nwhere T: 'async_trait + Into<TypedTransaction> + Send + Sync,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3998},"docs":" Executes the given call and returns a number of possible traces for it\n","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2806},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":132045,"byte_end":132060,"line_start":1019,"line_end":1019,"column_start":14,"column_end":29},"name":"trace_call_many","qualname":"<Provider<P> as Middleware>::trace_call_many","value":"fn trace_call_many<'life0, 'async_trait,\nT>(&'life0 Self, Vec<(T, Vec<TraceType>)>, Option<BlockNumber>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<BlockTrace>, ProviderError>> + ::core::marker::Send +\n    'async_trait>> where T: 'async_trait + Into<TypedTransaction> + Send +\nSync, 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4003},"docs":" Executes given calls and returns a number of possible traces for each call\n","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2812},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":132683,"byte_end":132704,"line_start":1032,"line_end":1032,"column_start":14,"column_end":35},"name":"trace_raw_transaction","qualname":"<Provider<P> as Middleware>::trace_raw_transaction","value":"fn trace_raw_transaction<'life0,\n'async_trait>(&'life0 Self, Bytes, Vec<TraceType>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<BlockTrace, ProviderError>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4008},"docs":" Traces a call to `eth_sendRawTransaction` without making the call, returning the traces\n","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2816},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":133066,"byte_end":133090,"line_start":1043,"line_end":1043,"column_start":14,"column_end":38},"name":"trace_replay_transaction","qualname":"<Provider<P> as Middleware>::trace_replay_transaction","value":"fn trace_replay_transaction<'life0,\n'async_trait>(&'life0 Self, H256, Vec<TraceType>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<BlockTrace, ProviderError>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4012},"docs":" Replays a transaction, returning the traces\n","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2820},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":133498,"byte_end":133529,"line_start":1054,"line_end":1054,"column_start":14,"column_end":45},"name":"trace_replay_block_transactions","qualname":"<Provider<P> as Middleware>::trace_replay_block_transactions","value":"fn trace_replay_block_transactions<'life0,\n'async_trait>(&'life0 Self, BlockNumber, Vec<TraceType>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<BlockTrace>, ProviderError>> + ::core::marker::Send +\n    'async_trait>> where 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4016},"docs":" Replays all transactions in a block returning the requested traces for each transaction\n","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2824},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":133909,"byte_end":133920,"line_start":1065,"line_end":1065,"column_start":14,"column_end":25},"name":"trace_block","qualname":"<Provider<P> as Middleware>::trace_block","value":"fn trace_block<'life0, 'async_trait>(&'life0 Self, BlockNumber)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<Trace>, ProviderError>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4020},"docs":" Returns traces created at given block\n","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2828},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":134152,"byte_end":134164,"line_start":1071,"line_end":1071,"column_start":14,"column_end":26},"name":"trace_filter","qualname":"<Provider<P> as Middleware>::trace_filter","value":"fn trace_filter<'life0, 'async_trait>(&'life0 Self, TraceFilter)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<Trace>, ProviderError>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4024},"docs":" Return traces matching the given filter\n","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2832},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":134401,"byte_end":134410,"line_start":1077,"line_end":1077,"column_start":14,"column_end":23},"name":"trace_get","qualname":"<Provider<P> as Middleware>::trace_get","value":"fn trace_get<'life0, 'async_trait, T>(&'life0 Self, H256, Vec<T>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Trace, ProviderError>> + ::core::marker::Send + 'async_trait>>\nwhere T: 'async_trait + Into<U64> + Send + Sync, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4028},"docs":" Returns trace at the given position\n","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2838},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":134834,"byte_end":134851,"line_start":1089,"line_end":1089,"column_start":14,"column_end":31},"name":"trace_transaction","qualname":"<Provider<P> as Middleware>::trace_transaction","value":"fn trace_transaction<'life0, 'async_trait>(&'life0 Self, H256)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<Trace>, ProviderError>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4033},"docs":" Returns all traces of a given transaction\n","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2842},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":135034,"byte_end":135043,"line_start":1094,"line_end":1094,"column_start":14,"column_end":23},"name":"subscribe","qualname":"<Provider<P> as Middleware>::subscribe","value":"fn subscribe<'life0, 'async_trait, T, R>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<SubscriptionStream, ProviderError>> + ::core::marker::Send +\n    'async_trait>> where T: Debug + Serialize + Send + Sync,\nR: DeserializeOwned + Send + Sync, P: PubsubClient, T: 'async_trait,\nR: 'async_trait, 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4042},"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2848},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":135425,"byte_end":135436,"line_start":1107,"line_end":1107,"column_start":14,"column_end":25},"name":"unsubscribe","qualname":"<Provider<P> as Middleware>::unsubscribe","value":"fn unsubscribe<'life0, 'async_trait, T>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<bool, ProviderError>> + ::core::marker::Send + 'async_trait>> where\nT: Into<U256> + Send + Sync, P: PubsubClient, T: 'async_trait,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4048},"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2853},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":135642,"byte_end":135658,"line_start":1115,"line_end":1115,"column_start":14,"column_end":30},"name":"subscribe_blocks","qualname":"<Provider<P> as Middleware>::subscribe_blocks","value":"fn subscribe_blocks<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<SubscriptionStream, ProviderError>> + ::core::marker::Send +\n    'async_trait>> where P: PubsubClient, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4053},"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2857},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":135852,"byte_end":135873,"line_start":1124,"line_end":1124,"column_start":14,"column_end":35},"name":"subscribe_pending_txs","qualname":"<Provider<P> as Middleware>::subscribe_pending_txs","value":"fn subscribe_pending_txs<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<SubscriptionStream, ProviderError>> + ::core::marker::Send +\n    'async_trait>> where P: PubsubClient, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4057},"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2861},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":136074,"byte_end":136088,"line_start":1133,"line_end":1133,"column_start":14,"column_end":28},"name":"subscribe_logs","qualname":"<Provider<P> as Middleware>::subscribe_logs","value":"fn subscribe_logs<'a, 'life0, 'async_trait>(&'a Self, &'life0 Filter)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<SubscriptionStream, ProviderError>> + ::core::marker::Send +\n    'async_trait>> where P: PubsubClient, 'a:'async_trait,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4061},"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2867},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":136984,"byte_end":136995,"line_start":1160,"line_end":1160,"column_start":14,"column_end":25},"name":"fee_history","qualname":"<Provider<P> as Middleware>::fee_history","value":"fn fee_history<'life0, 'life1, 'async_trait,\nT>(&'life0 Self, T, BlockNumber, &'life1 [f64])\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<FeeHistory, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere T: 'async_trait + Into<U256> + Send + Sync, 'life0:'async_trait,\n'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4066},"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102012,"byte_end":102023,"line_start":293,"line_end":293,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":795},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":141578,"byte_end":141581,"line_start":1291,"line_end":1291,"column_start":12,"column_end":15},"name":"ens","qualname":"<Provider<P>>::ens","value":"fn ens<T>(Self, T) -> Self where T: Into<Address>","parent":null,"children":[],"decl_id":null,"docs":" Sets the ENS Address (default: mainnet)\n","sig":null,"attributes":[{"value":"/ Sets the ENS Address (default: mainnet)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":141507,"byte_end":141550,"line_start":1289,"line_end":1289,"column_start":5,"column_end":48}},{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":141555,"byte_end":141566,"line_start":1290,"line_end":1290,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":141810,"byte_end":141822,"line_start":1298,"line_end":1298,"column_start":12,"column_end":24},"name":"set_interval","qualname":"<Provider<P>>::set_interval","value":"fn set_interval<T, '_>(&'_ mut Self, T) -> &'_ mut Self where\nT: Into<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Sets the default polling interval for event filters and pending transactions\n (default: 7 seconds)\n","sig":null,"attributes":[{"value":"/ Sets the default polling interval for event filters and pending transactions","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":141689,"byte_end":141769,"line_start":1296,"line_end":1296,"column_start":5,"column_end":85}},{"value":"/ (default: 7 seconds)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":141774,"byte_end":141798,"line_start":1297,"line_end":1297,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":799},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":142089,"byte_end":142097,"line_start":1306,"line_end":1306,"column_start":12,"column_end":20},"name":"interval","qualname":"<Provider<P>>::interval","value":"fn interval<T>(Self, T) -> Self where T: Into<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Sets the default polling interval for event filters and pending transactions\n (default: 7 seconds)\n","sig":null,"attributes":[{"value":"/ Sets the default polling interval for event filters and pending transactions","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":141952,"byte_end":142032,"line_start":1303,"line_end":1303,"column_start":5,"column_end":85}},{"value":"/ (default: 7 seconds)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":142037,"byte_end":142061,"line_start":1304,"line_end":1304,"column_start":5,"column_end":29}},{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":142066,"byte_end":142077,"line_start":1305,"line_end":1305,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":142358,"byte_end":142370,"line_start":1313,"line_end":1313,"column_start":12,"column_end":24},"name":"get_interval","qualname":"<Provider<P>>::get_interval","value":"fn get_interval<'_>(&'_ Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Gets the polling interval which the provider currently uses for event filters\n and pending transactions (default: 7 seconds)\n","sig":null,"attributes":[{"value":"/ Gets the polling interval which the provider currently uses for event filters","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":142211,"byte_end":142292,"line_start":1311,"line_end":1311,"column_start":5,"column_end":86}},{"value":"/ and pending transactions (default: 7 seconds)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":142297,"byte_end":142346,"line_start":1312,"line_end":1312,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":143787,"byte_end":143790,"line_start":1357,"line_end":1357,"column_start":12,"column_end":15},"name":"url","qualname":"<Provider<HttpProvider>>::url","value":"fn url<'_>(&'_ Self) -> &'_ Url","parent":null,"children":[],"decl_id":null,"docs":" The Url to which requests are made\n","sig":null,"attributes":[{"value":"/ The Url to which requests are made","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":143737,"byte_end":143775,"line_start":1356,"line_end":1356,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":143912,"byte_end":143919,"line_start":1362,"line_end":1362,"column_start":12,"column_end":19},"name":"url_mut","qualname":"<Provider<HttpProvider>>::url_mut","value":"fn url_mut<'_>(&'_ mut Self) -> &'_ mut Url","parent":null,"children":[],"decl_id":null,"docs":" Mutable access to the Url to which requests are made\n","sig":null,"attributes":[{"value":"/ Mutable access to the Url to which requests are made","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":143844,"byte_end":143900,"line_start":1361,"line_end":1361,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":808},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":144293,"byte_end":144295,"line_start":1375,"line_end":1375,"column_start":12,"column_end":14},"name":"rw","qualname":"<Provider<RwClient<Read, Write>>>::rw","value":"fn rw(Read, Write) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [Provider] with a [RwClient]\n","sig":null,"attributes":[{"value":"/ Creates a new [Provider] with a [RwClient]","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":144235,"byte_end":144281,"line_start":1374,"line_end":1374,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":144480,"byte_end":144486,"line_start":1382,"line_end":1382,"column_start":12,"column_end":18},"name":"quorum","qualname":"<Provider<QuorumProvider<T>>>::quorum","value":"fn quorum(QuorumProvider<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Provider that uses a quorum\n","sig":null,"attributes":[{"value":"/ Provider that uses a quorum","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":144437,"byte_end":144468,"line_start":1381,"line_end":1381,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":813},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":145332,"byte_end":145338,"line_start":1409,"line_end":1409,"column_start":12,"column_end":18},"name":"mocked","qualname":"<Provider<MockProvider>>::mocked","value":"fn mocked() -> (Self, MockProvider)","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Provider` instantiated with an internal \"mock\" transport.","sig":null,"attributes":[{"value":"/ Returns a `Provider` instantiated with an internal \"mock\" transport.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":144591,"byte_end":144663,"line_start":1388,"line_end":1388,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":144668,"byte_end":144671,"line_start":1389,"line_end":1389,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":144676,"byte_end":144689,"line_start":1390,"line_end":1390,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":144694,"byte_end":144697,"line_start":1391,"line_end":1391,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":144702,"byte_end":144709,"line_start":1392,"line_end":1392,"column_start":5,"column_end":12}},{"value":"/ # async fn foo() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":144714,"byte_end":144778,"line_start":1393,"line_end":1393,"column_start":5,"column_end":69}},{"value":"/ use ethers_core::types::U64;","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":144783,"byte_end":144815,"line_start":1394,"line_end":1394,"column_start":5,"column_end":37}},{"value":"/ use ethers_providers::{Middleware, Provider};","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":144820,"byte_end":144869,"line_start":1395,"line_end":1395,"column_start":5,"column_end":54}},{"value":"/ // Instantiate the provider","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":144874,"byte_end":144905,"line_start":1396,"line_end":1396,"column_start":5,"column_end":36}},{"value":"/ let (provider, mock) = Provider::mocked();","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":144910,"byte_end":144956,"line_start":1397,"line_end":1397,"column_start":5,"column_end":51}},{"value":"/ // Push the mock response","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":144961,"byte_end":144990,"line_start":1398,"line_end":1398,"column_start":5,"column_end":34}},{"value":"/ mock.push(U64::from(12))?;","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":144995,"byte_end":145025,"line_start":1399,"line_end":1399,"column_start":5,"column_end":35}},{"value":"/ // Make the call","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":145030,"byte_end":145050,"line_start":1400,"line_end":1400,"column_start":5,"column_end":25}},{"value":"/ let blk = provider.get_block_number().await.unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":145055,"byte_end":145112,"line_start":1401,"line_end":1401,"column_start":5,"column_end":62}},{"value":"/ // The response matches","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":145117,"byte_end":145144,"line_start":1402,"line_end":1402,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(blk.as_u64(), 12);","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":145149,"byte_end":145182,"line_start":1403,"line_end":1403,"column_start":5,"column_end":38}},{"value":"/ // and the request as well!","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":145187,"byte_end":145218,"line_start":1404,"line_end":1404,"column_start":5,"column_end":36}},{"value":"/ mock.assert_request(\"eth_blockNumber\", ()).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":145223,"byte_end":145279,"line_start":1405,"line_end":1405,"column_start":5,"column_end":61}},{"value":"/ # Ok(())","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":145284,"byte_end":145296,"line_start":1406,"line_end":1406,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":145301,"byte_end":145308,"line_start":1407,"line_end":1407,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":145313,"byte_end":145320,"line_start":1408,"line_end":1408,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":818},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":145983,"byte_end":145991,"line_start":1430,"line_end":1430,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Provider<HttpProvider> as std::convert::TryFrom>::try_from","value":"fn try_from<'_>(&'_ str) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3176},"children":[],"decl_id":{"krate":2,"index":3179},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":821},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":146193,"byte_end":146201,"line_start":1438,"line_end":1438,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Provider<HttpProvider> as std::convert::TryFrom>::try_from","value":"fn try_from(String) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3176},"children":[],"decl_id":{"krate":2,"index":3179},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":825},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":146391,"byte_end":146399,"line_start":1446,"line_end":1446,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Provider<HttpProvider> as std::convert::TryFrom>::try_from","value":"fn try_from(&'a String) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3176},"children":[],"decl_id":{"krate":2,"index":3179},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":827},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":146588,"byte_end":146598,"line_start":1453,"line_end":1453,"column_start":12,"column_end":22},"name":"new_client","qualname":"<Provider<RetryClient<HttpProvider>>>::new_client","value":"fn new_client<'_>(&'_ str, u32, u64) -> Result<Self, ParseError>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":836},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":147038,"byte_end":147044,"line_start":1466,"line_end":1466,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::provider::sealed::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":" private trait to ensure extension trait is not implement outside of this crate\n","sig":null,"attributes":[{"value":"/ private trait to ensure extension trait is not implement outside of this crate","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":146941,"byte_end":147023,"line_start":1465,"line_end":1465,"column_start":5,"column_end":87}}]},{"kind":"Trait","id":{"krate":0,"index":2877},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":148037,"byte_end":148048,"line_start":1497,"line_end":1497,"column_start":11,"column_end":22},"name":"ProviderExt","qualname":"::provider::ProviderExt","value":"ProviderExt: sealed::Sealed","parent":null,"children":[{"krate":0,"index":2878},{"krate":0,"index":2879},{"krate":0,"index":2883},{"krate":0,"index":2886},{"krate":0,"index":2888}],"decl_id":null,"docs":" Extension trait for `Provider`","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2878},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":148139,"byte_end":148144,"line_start":1499,"line_end":1499,"column_start":10,"column_end":15},"name":"Error","qualname":"::provider::ProviderExt::Error","value":"type Error: Debug;","parent":{"krate":0,"index":2877},"children":[],"decl_id":null,"docs":" The error type that can occur when creating a provider\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2879},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":148242,"byte_end":148249,"line_start":1502,"line_end":1502,"column_start":14,"column_end":21},"name":"connect","qualname":"::provider::ProviderExt::connect","value":"fn connect<'life0, 'async_trait>(&'life0 str)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output = Self> +\n    ::core::marker::Send + 'async_trait>> where Self: Sized,\n'life0:'async_trait, Self: ::core::marker::Send + 'async_trait","parent":{"krate":0,"index":2877},"children":[],"decl_id":null,"docs":" Creates a new instance connected to the given `url`, exit on error\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":148013,"byte_end":148024,"line_start":1496,"line_end":1496,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":148013,"byte_end":148024,"line_start":1496,"line_end":1496,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2883},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":148411,"byte_end":148422,"line_start":1510,"line_end":1510,"column_start":14,"column_end":25},"name":"try_connect","qualname":"::provider::ProviderExt::try_connect","value":"fn try_connect<'life0, 'async_trait>(&'life0 str)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Self, Self::Error>> + ::core::marker::Send + 'async_trait>> where\nSelf: Sized, 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":2877},"children":[],"decl_id":null,"docs":" Try to create a new `Provider`\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":148013,"byte_end":148024,"line_start":1496,"line_end":1496,"column_start":41,"column_end":52}},{"value":"allow(clippy :: type_complexity, clippy :: type_repetition_in_bounds)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":148013,"byte_end":148024,"line_start":1496,"line_end":1496,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2886},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":148745,"byte_end":148754,"line_start":1520,"line_end":1520,"column_start":8,"column_end":17},"name":"for_chain","qualname":"::provider::ProviderExt::for_chain","value":"fn for_chain<impl Into<Chain>>(Self, impl Into<Chain>) -> Self where\nSelf: Sized, impl Into<Chain>: Into<Chain>","parent":{"krate":0,"index":2877},"children":[],"decl_id":null,"docs":" Customize `Provider` settings for chain.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2888},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":148942,"byte_end":148951,"line_start":1529,"line_end":1529,"column_start":8,"column_end":17},"name":"set_chain","qualname":"::provider::ProviderExt::set_chain","value":"fn set_chain<'_, impl Into<Chain>>(&'_ mut Self, impl Into<Chain>)\n-> &'_ mut Self where impl Into<Chain>: Into<Chain>","parent":{"krate":0,"index":2877},"children":[],"decl_id":null,"docs":" Customized `Provider` settings for chain\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2892},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":149204,"byte_end":149215,"line_start":1537,"line_end":1537,"column_start":14,"column_end":25},"name":"try_connect","qualname":"<Provider<HttpProvider> as provider::ProviderExt>::try_connect","value":"fn try_connect<'life0, 'async_trait>(&'life0 str)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Self, Self::Error>> + ::core::marker::Send + 'async_trait>> where\nSelf: Sized, 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":2877},"children":[],"decl_id":{"krate":0,"index":2883},"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":149101,"byte_end":149112,"line_start":1533,"line_end":1533,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2897},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":149663,"byte_end":149672,"line_start":1553,"line_end":1553,"column_start":8,"column_end":17},"name":"set_chain","qualname":"<Provider<HttpProvider> as provider::ProviderExt>::set_chain","value":"fn set_chain<'_, impl Into<Chain>>(&'_ mut Self, impl Into<Chain>)\n-> &'_ mut Self where impl Into<Chain>: Into<Chain>","parent":{"krate":0,"index":2877},"children":[],"decl_id":{"krate":0,"index":2888},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":838},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":150200,"byte_end":150217,"line_start":1573,"line_end":1573,"column_start":8,"column_end":25},"name":"is_local_endpoint","qualname":"::provider::is_local_endpoint","value":"fn is_local_endpoint<'_>(&'_ str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the endpoint is local","sig":null,"attributes":[{"value":"/ Returns true if the endpoint is local","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":149944,"byte_end":149985,"line_start":1563,"line_end":1563,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":149986,"byte_end":149989,"line_start":1564,"line_end":1564,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":149990,"byte_end":150003,"line_start":1565,"line_end":1565,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":150004,"byte_end":150007,"line_start":1566,"line_end":1566,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":150008,"byte_end":150015,"line_start":1567,"line_end":1567,"column_start":1,"column_end":8}},{"value":"/ use ethers_providers::is_local_endpoint;","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":150016,"byte_end":150060,"line_start":1568,"line_end":1568,"column_start":1,"column_end":45}},{"value":"/ assert!(is_local_endpoint(\"http://localhost:8545\"));","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":150061,"byte_end":150117,"line_start":1569,"line_end":1569,"column_start":1,"column_end":57}},{"value":"/ assert!(is_local_endpoint(\"http://127.0.0.1:8545\"));","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":150118,"byte_end":150174,"line_start":1570,"line_end":1570,"column_start":1,"column_end":57}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":150175,"byte_end":150182,"line_start":1571,"line_end":1571,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":150183,"byte_end":150192,"line_start":1572,"line_end":1572,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":855},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/ens.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ens","qualname":"::ens","value":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/ens.rs","parent":null,"children":[{"krate":0,"index":856},{"krate":0,"index":857},{"krate":0,"index":858},{"krate":0,"index":861},{"krate":0,"index":864},{"krate":0,"index":867},{"krate":0,"index":870},{"krate":0,"index":871},{"krate":0,"index":873},{"krate":0,"index":874},{"krate":0,"index":876},{"krate":0,"index":879},{"krate":0,"index":882},{"krate":0,"index":883},{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":891},{"krate":0,"index":894},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":900},{"krate":0,"index":902}],"decl_id":null,"docs":" [Ethereum Name Service](https://docs.ens.domains/) support\n Adapted from <https://github.com/hhatto/rust-ens/blob/master/src/lib.rs>\n","sig":null,"attributes":[{"value":"/ [Ethereum Name Service](https://docs.ens.domains/) support","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/ens.rs","byte_start":170955,"byte_end":171017,"line_start":1,"line_end":1,"column_start":1,"column_end":63}},{"value":"/ Adapted from <https://github.com/hhatto/rust-ens/blob/master/src/lib.rs>","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/ens.rs","byte_start":171018,"byte_end":171094,"line_start":2,"line_end":2,"column_start":1,"column_end":77}}]},{"kind":"Const","id":{"krate":0,"index":882},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/ens.rs","byte_start":171329,"byte_end":171340,"line_start":11,"line_end":11,"column_start":11,"column_end":22},"name":"ENS_ADDRESS","qualname":"::ens::ENS_ADDRESS","value":"Address","parent":null,"children":[],"decl_id":null,"docs":" ENS registry address (`0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e`)\n","sig":null,"attributes":[{"value":"/ ENS registry address (`0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e`)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/ens.rs","byte_start":171247,"byte_end":171318,"line_start":10,"line_end":10,"column_start":1,"column_end":72}}]},{"kind":"Const","id":{"krate":0,"index":885},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/ens.rs","byte_start":171667,"byte_end":171680,"line_start":23,"line_end":23,"column_start":11,"column_end":24},"name":"ADDR_SELECTOR","qualname":"::ens::ADDR_SELECTOR","value":"Selector","parent":null,"children":[],"decl_id":null,"docs":" addr(bytes32)\n","sig":null,"attributes":[{"value":"/ addr(bytes32)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/ens.rs","byte_start":171639,"byte_end":171656,"line_start":22,"line_end":22,"column_start":1,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":886},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/ens.rs","byte_start":171741,"byte_end":171754,"line_start":26,"line_end":26,"column_start":11,"column_end":24},"name":"NAME_SELECTOR","qualname":"::ens::NAME_SELECTOR","value":"Selector","parent":null,"children":[],"decl_id":null,"docs":" name(bytes32)\n","sig":null,"attributes":[{"value":"/ name(bytes32)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/ens.rs","byte_start":171713,"byte_end":171730,"line_start":25,"line_end":25,"column_start":1,"column_end":18}}]},{"kind":"Const","id":{"krate":0,"index":887},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/ens.rs","byte_start":171823,"byte_end":171837,"line_start":29,"line_end":29,"column_start":11,"column_end":25},"name":"FIELD_SELECTOR","qualname":"::ens::FIELD_SELECTOR","value":"Selector","parent":null,"children":[],"decl_id":null,"docs":" text(bytes32, string)\n","sig":null,"attributes":[{"value":"/ text(bytes32, string)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/ens.rs","byte_start":171787,"byte_end":171812,"line_start":28,"line_end":28,"column_start":1,"column_end":26}}]},{"kind":"Const","id":{"krate":0,"index":888},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/ens.rs","byte_start":171923,"byte_end":171941,"line_start":32,"line_end":32,"column_start":11,"column_end":29},"name":"INTERFACE_SELECTOR","qualname":"::ens::INTERFACE_SELECTOR","value":"Selector","parent":null,"children":[],"decl_id":null,"docs":" supportsInterface(bytes4 interfaceID)\n","sig":null,"attributes":[{"value":"/ supportsInterface(bytes4 interfaceID)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/ens.rs","byte_start":171871,"byte_end":171912,"line_start":31,"line_end":31,"column_start":1,"column_end":42}}]},{"kind":"Function","id":{"krate":0,"index":889},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/ens.rs","byte_start":172068,"byte_end":172080,"line_start":35,"line_end":35,"column_start":8,"column_end":20},"name":"get_resolver","qualname":"::ens::get_resolver","value":"fn get_resolver<T, '_>(T, &'_ str) -> TransactionRequest where\nT: Into<NameOrAddress>","parent":null,"children":[],"decl_id":null,"docs":" Returns a transaction request for calling the `resolver` method on the ENS server\n","sig":null,"attributes":[{"value":"/ Returns a transaction request for calling the `resolver` method on the ENS server","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/ens.rs","byte_start":171975,"byte_end":172060,"line_start":34,"line_end":34,"column_start":1,"column_end":86}}]},{"kind":"Function","id":{"krate":0,"index":891},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/ens.rs","byte_start":172461,"byte_end":172479,"line_start":46,"line_end":46,"column_start":8,"column_end":26},"name":"supports_interface","qualname":"::ens::supports_interface","value":"fn supports_interface<T>(T, Selector) -> TransactionRequest where\nT: Into<NameOrAddress>","parent":null,"children":[],"decl_id":null,"docs":" Returns a transaction request for checking interface support\n","sig":null,"attributes":[{"value":"/ Returns a transaction request for checking interface support","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/ens.rs","byte_start":172389,"byte_end":172453,"line_start":45,"line_end":45,"column_start":1,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":894},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/ens.rs","byte_start":172848,"byte_end":172855,"line_start":59,"line_end":59,"column_start":8,"column_end":15},"name":"resolve","qualname":"::ens::resolve","value":"fn resolve<T, '_, '_>(T, Selector, &'_ str, Option<&'_ [u8]>)\n-> TransactionRequest where T: Into<NameOrAddress>","parent":null,"children":[],"decl_id":null,"docs":" Returns a transaction request for calling\n","sig":null,"attributes":[{"value":"/ Returns a transaction request for calling","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/ens.rs","byte_start":172795,"byte_end":172840,"line_start":58,"line_end":58,"column_start":1,"column_end":46}}]},{"kind":"Function","id":{"krate":0,"index":896},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/ens.rs","byte_start":173295,"byte_end":173310,"line_start":74,"line_end":74,"column_start":8,"column_end":23},"name":"reverse_address","qualname":"::ens::reverse_address","value":"fn reverse_address(Address) -> String","parent":null,"children":[],"decl_id":null,"docs":" Returns the reverse-registrar name of an address.\n","sig":null,"attributes":[{"value":"/ Returns the reverse-registrar name of an address.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/ens.rs","byte_start":173234,"byte_end":173287,"line_start":73,"line_end":73,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":897},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/ens.rs","byte_start":173515,"byte_end":173523,"line_start":79,"line_end":79,"column_start":8,"column_end":16},"name":"namehash","qualname":"::ens::namehash","value":"fn namehash<'_>(&'_ str) -> H256","parent":null,"children":[],"decl_id":null,"docs":" Returns the ENS namehash as specified in [EIP-137](https://eips.ethereum.org/EIPS/eip-137)\n","sig":null,"attributes":[{"value":"/ Returns the ENS namehash as specified in [EIP-137](https://eips.ethereum.org/EIPS/eip-137)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/ens.rs","byte_start":173413,"byte_end":173507,"line_start":78,"line_end":78,"column_start":1,"column_end":95}}]},{"kind":"Function","id":{"krate":0,"index":900},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/ens.rs","byte_start":173843,"byte_end":173854,"line_start":91,"line_end":91,"column_start":8,"column_end":19},"name":"bytes_32ify","qualname":"::ens::bytes_32ify","value":"fn bytes_32ify(u64) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Returns a number in bytes form with padding to fit in 32 bytes.\n","sig":null,"attributes":[{"value":"/ Returns a number in bytes form with padding to fit in 32 bytes.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/ens.rs","byte_start":173768,"byte_end":173835,"line_start":90,"line_end":90,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":902},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/ens.rs","byte_start":174056,"byte_end":174069,"line_start":97,"line_end":97,"column_start":8,"column_end":21},"name":"parameterhash","qualname":"::ens::parameterhash","value":"fn parameterhash<'_>(&'_ str) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Returns the ENS record key hash [EIP-634](https://eips.ethereum.org/EIPS/eip-634)\n","sig":null,"attributes":[{"value":"/ Returns the ENS record key hash [EIP-634](https://eips.ethereum.org/EIPS/eip-634)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/ens.rs","byte_start":173963,"byte_end":174048,"line_start":96,"line_end":96,"column_start":1,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":2955},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":177789,"byte_end":177807,"line_start":56,"line_end":56,"column_start":12,"column_end":30},"name":"PendingTransaction","qualname":"::pending_transaction::PendingTransaction","value":"PendingTransaction {  }","parent":null,"children":[{"krate":0,"index":2958},{"krate":0,"index":2959},{"krate":0,"index":2960},{"krate":0,"index":2961},{"krate":0,"index":2962},{"krate":0,"index":2963}],"decl_id":null,"docs":" A pending transaction is a transaction which has been submitted but is not yet mined.\n `await`'ing on a pending transaction will resolve to a transaction receipt\n once the transaction has enough `confirmations`. The default number of confirmations\n is 1, but may be adjusted with the `confirmations` method. If the transaction does not\n have enough confirmations or is not mined, the future will stay in the pending state.","sig":null,"attributes":[{"value":"pin(__private())","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":177763,"byte_end":177777,"line_start":55,"line_end":55,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2931},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":177789,"byte_end":177807,"line_start":56,"line_end":56,"column_start":12,"column_end":30},"name":"__PendingTransaction","qualname":"::pending_transaction::_::__PendingTransaction","value":"__PendingTransaction {  }","parent":null,"children":[{"krate":0,"index":2935},{"krate":0,"index":2936}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":177763,"byte_end":177777,"line_start":55,"line_end":55,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":976},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":178193,"byte_end":178196,"line_start":69,"line_end":69,"column_start":12,"column_end":15},"name":"new","qualname":"<PendingTransaction>::new","value":"fn new(TxHash, &'a Provider<P>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new pending transaction poller from a hash and a provider\n","sig":null,"attributes":[{"value":"/ Creates a new pending transaction poller from a hash and a provider","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":178110,"byte_end":178181,"line_start":68,"line_end":68,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":977},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":178675,"byte_end":178683,"line_start":83,"line_end":83,"column_start":12,"column_end":20},"name":"provider","qualname":"<PendingTransaction>::provider","value":"fn provider<'_>(&'_ Self) -> Provider<P> where P: Clone","parent":null,"children":[],"decl_id":null,"docs":" Returns the Provider associated with the pending transaction\n","sig":null,"attributes":[{"value":"/ Returns the Provider associated with the pending transaction","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":178599,"byte_end":178663,"line_start":82,"line_end":82,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":178852,"byte_end":178859,"line_start":91,"line_end":91,"column_start":12,"column_end":19},"name":"tx_hash","qualname":"<PendingTransaction>::tx_hash","value":"fn tx_hash<'_>(&'_ Self) -> TxHash","parent":null,"children":[],"decl_id":null,"docs":" Returns the transaction hash of the pending transaction\n","sig":null,"attributes":[{"value":"/ Returns the transaction hash of the pending transaction","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":178781,"byte_end":178840,"line_start":90,"line_end":90,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":979},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":179035,"byte_end":179048,"line_start":98,"line_end":98,"column_start":12,"column_end":25},"name":"confirmations","qualname":"<PendingTransaction>::confirmations","value":"fn confirmations(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of confirmations for the pending transaction to resolve\n to a receipt\n","sig":null,"attributes":[{"value":"/ Sets the number of confirmations for the pending transaction to resolve","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":178911,"byte_end":178986,"line_start":95,"line_end":95,"column_start":5,"column_end":80}},{"value":"/ to a receipt","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":178991,"byte_end":179007,"line_start":96,"line_end":96,"column_start":5,"column_end":21}},{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":179012,"byte_end":179023,"line_start":97,"line_end":97,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":980},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":179200,"byte_end":179208,"line_start":105,"line_end":105,"column_start":12,"column_end":20},"name":"interval","qualname":"<PendingTransaction>::interval","value":"fn interval<T>(Self, T) -> Self where T: Into<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Sets the polling interval\n","sig":null,"attributes":[{"value":"/ Sets the polling interval","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":179143,"byte_end":179172,"line_start":103,"line_end":103,"column_start":5,"column_end":34}},{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":179177,"byte_end":179188,"line_start":104,"line_end":104,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":982},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":179588,"byte_end":179595,"line_start":119,"line_end":119,"column_start":12,"column_end":19},"name":"retries","qualname":"<PendingTransaction>::retries","value":"fn retries(Self, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set retries\n","sig":null,"attributes":[{"value":"/ Set retries","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":179545,"byte_end":179560,"line_start":117,"line_end":117,"column_start":5,"column_end":20}},{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":179565,"byte_end":179576,"line_start":118,"line_end":118,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":986},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":179993,"byte_end":180000,"line_start":130,"line_end":130,"column_start":12,"column_end":19},"name":"inspect","qualname":"<PendingTransaction>::inspect","value":"fn inspect<F>(Self, F) -> Self where F: for<'_> FnMut(&'_ Self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Allows inspecting the content of a pending transaction in a builder-like way to avoid\n more verbose calls, e.g.:\n `let mined = token.transfer(recipient, amt).send().await?.inspect(|tx| println!(\".{}\",\n *tx)).await?;`\n","sig":null,"attributes":[{"value":"/ Allows inspecting the content of a pending transaction in a builder-like way to avoid","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":179740,"byte_end":179829,"line_start":126,"line_end":126,"column_start":5,"column_end":94}},{"value":"/ more verbose calls, e.g.:","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":179834,"byte_end":179863,"line_start":127,"line_end":127,"column_start":5,"column_end":34}},{"value":"/ `let mined = token.transfer(recipient, amt).send().await?.inspect(|tx| println!(\".{}\",","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":179868,"byte_end":179958,"line_start":128,"line_end":128,"column_start":5,"column_end":95}},{"value":"/ *tx)).await?;`","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":179963,"byte_end":179981,"line_start":129,"line_end":129,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":988},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":180199,"byte_end":180206,"line_start":139,"line_end":139,"column_start":12,"column_end":19},"name":"log_msg","qualname":"<PendingTransaction>::log_msg","value":"fn log_msg<S>(Self, S) -> Self where S: std::fmt::Display","parent":null,"children":[],"decl_id":null,"docs":" Logs the pending transaction hash along with a custom message before it.\n","sig":null,"attributes":[{"value":"/ Logs the pending transaction hash along with a custom message before it.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":180111,"byte_end":180187,"line_start":138,"line_end":138,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":991},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":180370,"byte_end":180373,"line_start":144,"line_end":144,"column_start":12,"column_end":15},"name":"log","qualname":"<PendingTransaction>::log","value":"fn log(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Logs the pending transaction's hash\n","sig":null,"attributes":[{"value":"/ Logs the pending transaction's hash","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":180319,"byte_end":180358,"line_start":143,"line_end":143,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":999},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":181081,"byte_end":181085,"line_start":169,"line_end":169,"column_start":8,"column_end":12},"name":"poll","qualname":"<PendingTransaction as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1003},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":187988,"byte_end":187991,"line_start":311,"line_end":311,"column_start":8,"column_end":11},"name":"fmt","qualname":"<PendingTransaction as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1007},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":188324,"byte_end":188326,"line_start":321,"line_end":321,"column_start":8,"column_end":10},"name":"eq","qualname":"<PendingTransaction as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ Self) -> bool","parent":{"krate":2,"index":2915},"children":[],"decl_id":{"krate":2,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1011},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":188474,"byte_end":188476,"line_start":327,"line_end":327,"column_start":8,"column_end":10},"name":"eq","qualname":"<PendingTransaction as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ TxHash) -> bool","parent":{"krate":2,"index":2915},"children":[],"decl_id":{"krate":2,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1019},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":188683,"byte_end":188688,"line_start":337,"line_end":337,"column_start":8,"column_end":13},"name":"deref","qualname":"<PendingTransaction as std::ops::Deref>::deref","value":"fn deref<'_>(&'_ Self) -> &'_ Self::Target","parent":{"krate":2,"index":3486},"children":[],"decl_id":{"krate":2,"index":3488},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3122},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_escalator.rs","byte_start":191860,"byte_end":191877,"line_start":34,"line_end":34,"column_start":12,"column_end":29},"name":"EscalatingPending","qualname":"::pending_escalator::EscalatingPending","value":"EscalatingPending {  }","parent":null,"children":[{"krate":0,"index":3125},{"krate":0,"index":3126},{"krate":0,"index":3127},{"krate":0,"index":3128},{"krate":0,"index":3129},{"krate":0,"index":3130},{"krate":0,"index":3131}],"decl_id":null,"docs":" An EscalatingPending is a pending transaction that increases its own gas\n price over time, by broadcasting successive versions with higher gas prices.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_escalator.rs","byte_start":191782,"byte_end":191793,"line_start":31,"line_end":31,"column_start":1,"column_end":12}},{"value":"pin(__private(project = PendingProj))","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_escalator.rs","byte_start":191794,"byte_end":191831,"line_start":32,"line_end":32,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3098},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_escalator.rs","byte_start":191860,"byte_end":191877,"line_start":34,"line_end":34,"column_start":12,"column_end":29},"name":"__EscalatingPending","qualname":"::pending_escalator::_::__EscalatingPending","value":"__EscalatingPending {  }","parent":null,"children":[{"krate":0,"index":3102},{"krate":0,"index":3103}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_escalator.rs","byte_start":191794,"byte_end":191831,"line_start":32,"line_end":32,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1134},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_escalator.rs","byte_start":193381,"byte_end":193404,"line_start":80,"line_end":80,"column_start":12,"column_end":35},"name":"with_broadcast_interval","qualname":"<EscalatingPending>::with_broadcast_interval","value":"fn with_broadcast_interval<impl Into<Duration>>(Self, impl Into<Duration>)\n-> Self where impl Into<Duration>: Into<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Set the broadcast interval. This controls how often the escalator\n broadcasts a new transaction at a higher gas price\n","sig":null,"attributes":[{"value":"/ Set the broadcast interval. This controls how often the escalator","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_escalator.rs","byte_start":193241,"byte_end":193310,"line_start":78,"line_end":78,"column_start":5,"column_end":74}},{"value":"/ broadcasts a new transaction at a higher gas price","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_escalator.rs","byte_start":193315,"byte_end":193369,"line_start":79,"line_end":79,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1136},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_escalator.rs","byte_start":193664,"byte_end":193685,"line_start":87,"line_end":87,"column_start":12,"column_end":33},"name":"with_polling_interval","qualname":"<EscalatingPending>::with_polling_interval","value":"fn with_polling_interval<impl Into<Duration>>(Self, impl Into<Duration>)\n-> Self where impl Into<Duration>: Into<Duration>","parent":null,"children":[],"decl_id":null,"docs":" Set the polling interval. This controls how often the escalator checks\n transaction receipts for confirmation.\n","sig":null,"attributes":[{"value":"/ Set the polling interval. This controls how often the escalator checks","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_escalator.rs","byte_start":193531,"byte_end":193605,"line_start":85,"line_end":85,"column_start":5,"column_end":79}},{"value":"/ transaction receipts for confirmation.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_escalator.rs","byte_start":193610,"byte_end":193652,"line_start":86,"line_end":86,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1138},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_escalator.rs","byte_start":193859,"byte_end":193879,"line_start":93,"line_end":93,"column_start":12,"column_end":32},"name":"get_polling_interval","qualname":"<EscalatingPending>::get_polling_interval","value":"fn get_polling_interval<'_>(&'_ Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Get the current polling interval.\n","sig":null,"attributes":[{"value":"/ Get the current polling interval.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_escalator.rs","byte_start":193810,"byte_end":193847,"line_start":92,"line_end":92,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1139},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_escalator.rs","byte_start":193993,"byte_end":194015,"line_start":98,"line_end":98,"column_start":12,"column_end":34},"name":"get_broadcast_interval","qualname":"<EscalatingPending>::get_broadcast_interval","value":"fn get_broadcast_interval<'_>(&'_ Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Get the current broadcast interval.\n","sig":null,"attributes":[{"value":"/ Get the current broadcast interval.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_escalator.rs","byte_start":193942,"byte_end":193981,"line_start":97,"line_end":97,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1149},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_escalator.rs","byte_start":196570,"byte_end":196574,"line_start":179,"line_end":179,"column_start":8,"column_end":12},"name":"poll","qualname":"<EscalatingPending as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(std::pin::Pin<&'_ mut Self>, &'_ mut std::task::Context)\n-> std::task::Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1205},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/log_query.rs","byte_start":200384,"byte_end":200392,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"LogQuery","qualname":"::log_query::LogQuery","value":"LogQuery {  }","parent":null,"children":[{"krate":0,"index":1208},{"krate":0,"index":1209},{"krate":0,"index":1210},{"krate":0,"index":1211},{"krate":0,"index":1212},{"krate":0,"index":1213},{"krate":0,"index":1214}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1230},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/log_query.rs","byte_start":200798,"byte_end":200801,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<LogQuery>::new","value":"fn new<'_>(&'a Provider<P>, &'_ Filter) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1231},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/log_query.rs","byte_start":201189,"byte_end":201203,"line_start":45,"line_end":45,"column_start":12,"column_end":26},"name":"with_page_size","qualname":"<LogQuery>::with_page_size","value":"fn with_page_size(Self, u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" set page size for pagination\n","sig":null,"attributes":[{"value":"/ set page size for pagination","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/log_query.rs","byte_start":201145,"byte_end":201177,"line_start":44,"line_end":44,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3215},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/log_query.rs","byte_start":201578,"byte_end":201596,"line_start":62,"line_end":62,"column_start":5,"column_end":23},"name":"LoadLastBlockError","qualname":"::log_query::LogQueryError::LoadLastBlockError","value":"LogQueryError::LoadLastBlockError(E)","parent":{"krate":0,"index":3201},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(transparent)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/log_query.rs","byte_start":201552,"byte_end":201573,"line_start":61,"line_end":61,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":3217},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/log_query.rs","byte_start":201597,"byte_end":201598,"line_start":62,"line_end":62,"column_start":24,"column_end":25},"name":"0","qualname":"::log_query::LogQueryError::LoadLastBlockError::0","value":"E","parent":{"krate":0,"index":3215},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3218},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/log_query.rs","byte_start":201631,"byte_end":201644,"line_start":64,"line_end":64,"column_start":5,"column_end":18},"name":"LoadLogsError","qualname":"::log_query::LogQueryError::LoadLogsError","value":"LogQueryError::LoadLogsError(E)","parent":{"krate":0,"index":3201},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(transparent)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/log_query.rs","byte_start":201605,"byte_end":201626,"line_start":63,"line_end":63,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":3220},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/log_query.rs","byte_start":201645,"byte_end":201646,"line_start":64,"line_end":64,"column_start":19,"column_end":20},"name":"0","qualname":"::log_query::LogQueryError::LoadLogsError::0","value":"E","parent":{"krate":0,"index":3218},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3201},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/log_query.rs","byte_start":201529,"byte_end":201542,"line_start":60,"line_end":60,"column_start":10,"column_end":23},"name":"LogQueryError","qualname":"::log_query::LogQueryError","value":"enum LogQueryError<E> { LoadLastBlockError(E), LoadLogsError(E), }","parent":null,"children":[{"krate":0,"index":3215},{"krate":0,"index":3218}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1237},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/log_query.rs","byte_start":201788,"byte_end":201797,"line_start":73,"line_end":73,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<LogQuery as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":124,"index":96},"children":[],"decl_id":{"krate":124,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1331},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":206367,"byte_end":206375,"line_start":24,"line_end":24,"column_start":8,"column_end":16},"name":"interval","qualname":"::stream::interval","value":"fn interval(Duration) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1335},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":206610,"byte_end":206631,"line_start":29,"line_end":29,"column_start":11,"column_end":32},"name":"DEFAULT_POLL_INTERVAL","qualname":"::stream::DEFAULT_POLL_INTERVAL","value":"Duration","parent":null,"children":[],"decl_id":null,"docs":" The default polling interval for filters and pending transactions\n","sig":null,"attributes":[{"value":"/ The default polling interval for filters and pending transactions","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":206530,"byte_end":206599,"line_start":28,"line_end":28,"column_start":1,"column_end":70}}]},{"kind":"Const","id":{"krate":0,"index":1336},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":206772,"byte_end":206799,"line_start":32,"line_end":32,"column_start":11,"column_end":38},"name":"DEFAULT_LOCAL_POLL_INTERVAL","qualname":"::stream::DEFAULT_LOCAL_POLL_INTERVAL","value":"Duration","parent":null,"children":[],"decl_id":null,"docs":" The polling interval to use for local endpoints, See [`crate::is_local_endpoint()`]\n","sig":null,"attributes":[{"value":"/ The polling interval to use for local endpoints, See [`crate::is_local_endpoint()`]","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":206674,"byte_end":206761,"line_start":31,"line_end":31,"column_start":1,"column_end":88}}]},{"kind":"Struct","id":{"krate":0,"index":3282},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":207123,"byte_end":207136,"line_start":43,"line_end":43,"column_start":12,"column_end":25},"name":"FilterWatcher","qualname":"::stream::FilterWatcher","value":"FilterWatcher { id }","parent":null,"children":[{"krate":0,"index":3286},{"krate":0,"index":3287},{"krate":0,"index":3288},{"krate":0,"index":3289}],"decl_id":null,"docs":" Streams data from an installed filter via `eth_getFilterChanges`\n","sig":null,"attributes":[{"value":"must_use = \"filters do nothing unless you stream them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":206970,"byte_end":207027,"line_start":40,"line_end":40,"column_start":1,"column_end":58}},{"value":"pin(__private())","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":207097,"byte_end":207111,"line_start":42,"line_end":42,"column_start":1,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":3286},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":207212,"byte_end":207214,"line_start":45,"line_end":45,"column_start":9,"column_end":11},"name":"id","qualname":"::stream::FilterWatcher::id","value":"ethers_core::types::U256","parent":{"krate":0,"index":3282},"children":[],"decl_id":null,"docs":" The filter's installed id on the ethereum node\n","sig":null,"attributes":[{"value":"/ The filter's installed id on the ethereum node","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":207153,"byte_end":207203,"line_start":44,"line_end":44,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":3253},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":207123,"byte_end":207136,"line_start":43,"line_end":43,"column_start":12,"column_end":25},"name":"__FilterWatcher","qualname":"::stream::_::__FilterWatcher","value":"__FilterWatcher {  }","parent":null,"children":[{"krate":0,"index":3258},{"krate":0,"index":3259}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":207097,"byte_end":207111,"line_start":42,"line_end":42,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1352},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":207618,"byte_end":207621,"line_start":61,"line_end":61,"column_start":12,"column_end":15},"name":"new","qualname":"<FilterWatcher>::new","value":"fn new<T>(T, &'a Provider<P>) -> Self where T: Into<U256>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new watcher with the provided factory and filter id.\n","sig":null,"attributes":[{"value":"/ Creates a new watcher with the provided factory and filter id.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":207540,"byte_end":207606,"line_start":60,"line_end":60,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1354},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":207937,"byte_end":207945,"line_start":71,"line_end":71,"column_start":12,"column_end":20},"name":"interval","qualname":"<FilterWatcher>::interval","value":"fn interval(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the stream's polling interval\n","sig":null,"attributes":[{"value":"/ Sets the stream's polling interval","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":207887,"byte_end":207925,"line_start":70,"line_end":70,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1355},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":208183,"byte_end":208189,"line_start":78,"line_end":78,"column_start":12,"column_end":18},"name":"stream","qualname":"<FilterWatcher>::stream","value":"fn stream(Self) -> Pin<Box<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Alias for Box::pin, must be called in order to pin the stream and be able\n to call `next` on it.\n","sig":null,"attributes":[{"value":"/ Alias for Box::pin, must be called in order to pin the stream and be able","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":208064,"byte_end":208141,"line_start":76,"line_end":76,"column_start":5,"column_end":82}},{"value":"/ to call `next` on it.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":208146,"byte_end":208171,"line_start":77,"line_end":77,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1361},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":208458,"byte_end":208467,"line_start":91,"line_end":91,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<FilterWatcher as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":124,"index":96},"children":[],"decl_id":{"krate":124,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1365},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":210696,"byte_end":210718,"line_start":137,"line_end":137,"column_start":12,"column_end":34},"name":"transactions_unordered","qualname":"<FilterWatcher>::transactions_unordered","value":"fn transactions_unordered(Self, usize) -> TransactionStream","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream that yields the `Transaction`s for the transaction hashes this stream\n yields.","sig":null,"attributes":[{"value":"/ Returns a stream that yields the `Transaction`s for the transaction hashes this stream","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":210330,"byte_end":210420,"line_start":131,"line_end":131,"column_start":5,"column_end":95}},{"value":"/ yields.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":210425,"byte_end":210436,"line_start":132,"line_end":132,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":210441,"byte_end":210444,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This internally calls `Provider::get_transaction` with every new transaction.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":210449,"byte_end":210530,"line_start":134,"line_end":134,"column_start":5,"column_end":86}},{"value":"/ No more than n futures will be buffered at any point in time, and less than n may also be","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":210535,"byte_end":210628,"line_start":135,"line_end":135,"column_start":5,"column_end":98}},{"value":"/ buffered depending on the state of each future.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":210633,"byte_end":210684,"line_start":136,"line_end":136,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3303},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":210999,"byte_end":211012,"line_start":146,"line_end":146,"column_start":5,"column_end":18},"name":"ProviderError","qualname":"::stream::GetTransactionError::ProviderError","value":"GetTransactionError::ProviderError(TxHash, ProviderError)","parent":{"krate":0,"index":3290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"error(\"Failed to get transaction `{0}`: {1}\")","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":210946,"byte_end":210994,"line_start":145,"line_end":145,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":3305},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":211013,"byte_end":211019,"line_start":146,"line_end":146,"column_start":19,"column_end":25},"name":"0","qualname":"::stream::GetTransactionError::ProviderError::0","value":"ethers_core::types::TxHash","parent":{"krate":0,"index":3303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3306},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":211021,"byte_end":211034,"line_start":146,"line_end":146,"column_start":27,"column_end":40},"name":"1","qualname":"::stream::GetTransactionError::ProviderError::1","value":"provider::ProviderError","parent":{"krate":0,"index":3303},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3307},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":211132,"byte_end":211140,"line_start":149,"line_end":149,"column_start":5,"column_end":13},"name":"NotFound","qualname":"::stream::GetTransactionError::NotFound","value":"GetTransactionError::NotFound(TxHash)","parent":{"krate":0,"index":3290},"children":[],"decl_id":null,"docs":" `get_transaction` resulted in a `None`\n","sig":null,"attributes":[{"value":"/ `get_transaction` resulted in a `None`","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":211041,"byte_end":211083,"line_start":147,"line_end":147,"column_start":5,"column_end":47}},{"value":"error(\"Transaction `{0}` not found\")","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":211088,"byte_end":211127,"line_start":148,"line_end":148,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":3309},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":211141,"byte_end":211147,"line_start":149,"line_end":149,"column_start":14,"column_end":20},"name":"0","qualname":"::stream::GetTransactionError::NotFound::0","value":"ethers_core::types::TxHash","parent":{"krate":0,"index":3307},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3290},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":210920,"byte_end":210939,"line_start":144,"line_end":144,"column_start":10,"column_end":29},"name":"GetTransactionError","qualname":"::stream::GetTransactionError","value":"enum GetTransactionError {\n    ProviderError(TxHash, ProviderError),\n    NotFound(TxHash),\n}","parent":null,"children":[{"krate":0,"index":3303},{"krate":0,"index":3307}],"decl_id":null,"docs":" Errors `TransactionStream` can throw\n","sig":null,"attributes":[{"value":"/ Errors `TransactionStream` can throw","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":210835,"byte_end":210875,"line_start":142,"line_end":142,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1367},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":211211,"byte_end":211215,"line_start":153,"line_end":153,"column_start":8,"column_end":12},"name":"from","qualname":"<ProviderError as std::convert::From>::from","value":"fn from(GetTransactionError) -> Self","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1371},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":211893,"byte_end":211910,"line_start":170,"line_end":170,"column_start":12,"column_end":29},"name":"TransactionStream","qualname":"::stream::TransactionStream","value":"TransactionStream {  }","parent":null,"children":[{"krate":0,"index":1375},{"krate":0,"index":1376},{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1379}],"decl_id":null,"docs":" Drains a stream of transaction hashes and yields entire `Transaction`.\n","sig":null,"attributes":[{"value":"/ Drains a stream of transaction hashes and yields entire `Transaction`.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":211758,"byte_end":211832,"line_start":168,"line_end":168,"column_start":1,"column_end":75}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":211833,"byte_end":211881,"line_start":169,"line_end":169,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1384},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":212488,"byte_end":212491,"line_start":185,"line_end":185,"column_start":12,"column_end":15},"name":"new","qualname":"<TransactionStream>::new","value":"fn new(&'a Provider<P>, St, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `TransactionStream` instance\n","sig":null,"attributes":[{"value":"/ Create a new `TransactionStream` instance","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":212431,"byte_end":212476,"line_start":184,"line_end":184,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1392},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":213380,"byte_end":213389,"line_start":213,"line_end":213,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TransactionStream as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":124,"index":96},"children":[],"decl_id":{"krate":124,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1469},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pubsub.rs","byte_start":219060,"byte_end":219072,"line_start":18,"line_end":18,"column_start":11,"column_end":23},"name":"PubsubClient","qualname":"::pubsub::PubsubClient","value":"PubsubClient: JsonRpcClient","parent":null,"children":[{"krate":0,"index":1470},{"krate":0,"index":1471},{"krate":0,"index":1473}],"decl_id":null,"docs":" A transport implementation supporting pub sub subscriptions.\n","sig":null,"attributes":[{"value":"/ A transport implementation supporting pub sub subscriptions.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pubsub.rs","byte_start":218985,"byte_end":219049,"line_start":17,"line_end":17,"column_start":1,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":1470},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pubsub.rs","byte_start":219149,"byte_end":219167,"line_start":20,"line_end":20,"column_start":10,"column_end":28},"name":"NotificationStream","qualname":"::pubsub::PubsubClient::NotificationStream","value":"type NotificationStream: futures_core::Stream<Item = Box<RawValue>> + Send + Unpin;","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" The type of stream this transport returns\n","sig":null,"attributes":[{"value":"/ The type of stream this transport returns","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pubsub.rs","byte_start":219094,"byte_end":219139,"line_start":19,"line_end":19,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1471},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pubsub.rs","byte_start":219281,"byte_end":219290,"line_start":23,"line_end":23,"column_start":8,"column_end":17},"name":"subscribe","qualname":"::pubsub::PubsubClient::subscribe","value":"fn subscribe<T, '_>(&'_ Self, T)\n-> Result<Self::NotificationStream, Self::Error> where T: Into<U256>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Add a subscription to this transport\n","sig":null,"attributes":[{"value":"/ Add a subscription to this transport","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pubsub.rs","byte_start":219233,"byte_end":219273,"line_start":22,"line_end":22,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1473},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pubsub.rs","byte_start":219428,"byte_end":219439,"line_start":26,"line_end":26,"column_start":8,"column_end":19},"name":"unsubscribe","qualname":"::pubsub::PubsubClient::unsubscribe","value":"fn unsubscribe<T, '_>(&'_ Self, T) -> Result<(), Self::Error> where\nT: Into<U256>","parent":{"krate":0,"index":1469},"children":[],"decl_id":null,"docs":" Remove a subscription from this transport\n","sig":null,"attributes":[{"value":"/ Remove a subscription from this transport","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pubsub.rs","byte_start":219375,"byte_end":219420,"line_start":25,"line_end":25,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":3367},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pubsub.rs","byte_start":219664,"byte_end":219682,"line_start":32,"line_end":32,"column_start":12,"column_end":30},"name":"SubscriptionStream","qualname":"::pubsub::SubscriptionStream","value":"SubscriptionStream { id }","parent":null,"children":[{"krate":0,"index":3371},{"krate":0,"index":3372},{"krate":0,"index":3373},{"krate":0,"index":3375},{"krate":0,"index":3374}],"decl_id":null,"docs":" Streams data from an installed filter via `eth_subscribe`\n","sig":null,"attributes":[{"value":"must_use = \"subscriptions do nothing unless you stream them\"","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pubsub.rs","byte_start":219500,"byte_end":219563,"line_start":29,"line_end":29,"column_start":1,"column_end":64}},{"value":"pin(__private(PinnedDrop))","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pubsub.rs","byte_start":219564,"byte_end":219590,"line_start":30,"line_end":30,"column_start":1,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":3371},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pubsub.rs","byte_start":219796,"byte_end":219798,"line_start":34,"line_end":34,"column_start":9,"column_end":11},"name":"id","qualname":"::pubsub::SubscriptionStream::id","value":"ethers_core::types::U256","parent":{"krate":0,"index":3367},"children":[],"decl_id":null,"docs":" The subscription's installed id on the ethereum node\n","sig":null,"attributes":[{"value":"/ The subscription's installed id on the ethereum node","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pubsub.rs","byte_start":219731,"byte_end":219787,"line_start":33,"line_end":33,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":3344},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pubsub.rs","byte_start":219664,"byte_end":219682,"line_start":32,"line_end":32,"column_start":12,"column_end":30},"name":"__SubscriptionStream","qualname":"::pubsub::_::__SubscriptionStream","value":"__SubscriptionStream {  }","parent":null,"children":[{"krate":0,"index":3349},{"krate":0,"index":3350},{"krate":0,"index":3351}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pubsub.rs","byte_start":219564,"byte_end":219590,"line_start":30,"line_end":30,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":3366},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pubsub.rs","byte_start":219578,"byte_end":219588,"line_start":30,"line_end":30,"column_start":15,"column_end":25},"name":"drop","qualname":"<SubscriptionStream as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1479},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pubsub.rs","byte_start":220461,"byte_end":220464,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"new","qualname":"<SubscriptionStream>::new","value":"fn new(U256, &'a Provider<P>) -> Result<Self, P::Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new subscription stream for the provided subscription id.","sig":null,"attributes":[{"value":"/ Creates a new subscription stream for the provided subscription id.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pubsub.rs","byte_start":220047,"byte_end":220118,"line_start":51,"line_end":51,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pubsub.rs","byte_start":220123,"byte_end":220126,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ ### Note","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pubsub.rs","byte_start":220131,"byte_end":220143,"line_start":53,"line_end":53,"column_start":5,"column_end":17}},{"value":"/ Most providers treat `SubscriptionStream` IDs as global singletons.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pubsub.rs","byte_start":220148,"byte_end":220219,"line_start":54,"line_end":54,"column_start":5,"column_end":76}},{"value":"/ Instantiating this directly with a known ID will likely cause any","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pubsub.rs","byte_start":220224,"byte_end":220293,"line_start":55,"line_end":55,"column_start":5,"column_end":74}},{"value":"/ existing streams with that ID to end. To avoid this, start a new stream","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pubsub.rs","byte_start":220298,"byte_end":220373,"line_start":56,"line_end":56,"column_start":5,"column_end":80}},{"value":"/ using [`Provider::subscribe`] instead of `SubscriptionStream::new`.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pubsub.rs","byte_start":220378,"byte_end":220449,"line_start":57,"line_end":57,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1480},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pubsub.rs","byte_start":220795,"byte_end":220806,"line_start":65,"line_end":65,"column_start":18,"column_end":29},"name":"unsubscribe","qualname":"<SubscriptionStream>::unsubscribe","value":"async fn unsubscribe<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Unsubscribes from the subscription.\n","sig":null,"attributes":[{"value":"/ Unsubscribes from the subscription.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pubsub.rs","byte_start":220738,"byte_end":220777,"line_start":64,"line_end":64,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1483},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pubsub.rs","byte_start":220921,"byte_end":220940,"line_start":69,"line_end":69,"column_start":12,"column_end":31},"name":"set_loaded_elements","qualname":"<SubscriptionStream>::set_loaded_elements","value":"fn set_loaded_elements<'_>(&'_ mut Self, VecDeque<R>)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1489},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pubsub.rs","byte_start":221353,"byte_end":221362,"line_start":84,"line_end":84,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<SubscriptionStream as futures_core::Stream>::poll_next","value":"fn poll_next<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context)\n-> Poll<Option<Self::Item>>","parent":{"krate":124,"index":96},"children":[],"decl_id":{"krate":124,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3395},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pubsub.rs","byte_start":222179,"byte_end":222183,"line_start":110,"line_end":110,"column_start":8,"column_end":12},"name":"drop","qualname":"<SubscriptionStream as pending_transaction::_::_pin_project::__private::PinnedDrop>::drop","value":"unsafe fn drop<'_>(Pin<&'_ mut Self>)","parent":{"krate":168,"index":41},"children":[],"decl_id":{"krate":168,"index":42},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1493},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pubsub.rs","byte_start":222913,"byte_end":222935,"line_start":128,"line_end":128,"column_start":12,"column_end":34},"name":"transactions_unordered","qualname":"<SubscriptionStream>::transactions_unordered","value":"fn transactions_unordered(Self, usize) -> TransactionStream","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream that yields the `Transaction`s for the transaction hashes this stream\n yields.","sig":null,"attributes":[{"value":"/ Returns a stream that yields the `Transaction`s for the transaction hashes this stream","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pubsub.rs","byte_start":222547,"byte_end":222637,"line_start":122,"line_end":122,"column_start":5,"column_end":95}},{"value":"/ yields.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pubsub.rs","byte_start":222642,"byte_end":222653,"line_start":123,"line_end":123,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pubsub.rs","byte_start":222658,"byte_end":222661,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ This internally calls `Provider::get_transaction` with every new transaction.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pubsub.rs","byte_start":222666,"byte_end":222747,"line_start":125,"line_end":125,"column_start":5,"column_end":86}},{"value":"/ No more than n futures will be buffered at any point in time, and less than n may also be","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pubsub.rs","byte_start":222752,"byte_end":222845,"line_start":126,"line_end":126,"column_start":5,"column_end":98}},{"value":"/ buffered depending on the state of each future.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pubsub.rs","byte_start":222850,"byte_end":222901,"line_start":127,"line_end":127,"column_start":5,"column_end":56}}]},{"kind":"Mod","id":{"krate":0,"index":1501},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"call_raw","qualname":"::call_raw","value":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","parent":null,"children":[{"krate":0,"index":1502},{"krate":0,"index":1503},{"krate":0,"index":1506},{"krate":0,"index":1509},{"krate":0,"index":1512},{"krate":0,"index":1515},{"krate":0,"index":1516},{"krate":0,"index":1517},{"krate":0,"index":1520},{"krate":0,"index":1523},{"krate":0,"index":1526},{"krate":0,"index":1529},{"krate":0,"index":1530},{"krate":0,"index":1532},{"krate":0,"index":1533},{"krate":0,"index":1535},{"krate":0,"index":1536},{"krate":0,"index":1538},{"krate":0,"index":1539},{"krate":0,"index":1541},{"krate":0,"index":1544},{"krate":0,"index":1547},{"krate":0,"index":1548},{"krate":0,"index":1551},{"krate":0,"index":1552},{"krate":0,"index":1554},{"krate":0,"index":1555},{"krate":0,"index":1557},{"krate":0,"index":1558},{"krate":0,"index":1561},{"krate":0,"index":1564},{"krate":0,"index":1567},{"krate":0,"index":1568},{"krate":0,"index":1571},{"krate":0,"index":1574},{"krate":0,"index":1575},{"krate":0,"index":1578},{"krate":0,"index":1581},{"krate":0,"index":1584},{"krate":0,"index":1587},{"krate":0,"index":1590},{"krate":0,"index":1596},{"krate":0,"index":1605},{"krate":0,"index":1608},{"krate":0,"index":1615},{"krate":0,"index":1622},{"krate":0,"index":3400},{"krate":0,"index":3405},{"krate":0,"index":3409},{"krate":0,"index":1627},{"krate":0,"index":1631},{"krate":0,"index":3413},{"krate":0,"index":3418},{"krate":0,"index":3421},{"krate":0,"index":3424},{"krate":0,"index":3426},{"krate":0,"index":3430},{"krate":0,"index":3432},{"krate":0,"index":1636},{"krate":0,"index":1639},{"krate":0,"index":3487},{"krate":0,"index":3439},{"krate":0,"index":3435},{"krate":0,"index":1644},{"krate":0,"index":1648},{"krate":0,"index":1652},{"krate":0,"index":1658},{"krate":0,"index":1664}],"decl_id":null,"docs":" Overrides for the `eth_call` rpc method\n","sig":null,"attributes":[{"value":"/ Overrides for the `eth_call` rpc method","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":223052,"byte_end":223095,"line_start":1,"line_end":1,"column_start":1,"column_end":44}}]},{"kind":"Trait","id":{"krate":0,"index":1590},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":223640,"byte_end":223647,"line_start":23,"line_end":23,"column_start":11,"column_end":18},"name":"RawCall","qualname":"::call_raw::RawCall","value":"RawCall<'a>","parent":null,"children":[{"krate":0,"index":1592},{"krate":0,"index":1593},{"krate":0,"index":1594}],"decl_id":null,"docs":" Provides methods for overriding parameters to the `eth_call` rpc method\n","sig":null,"attributes":[{"value":"/ Provides methods for overriding parameters to the `eth_call` rpc method","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":223554,"byte_end":223629,"line_start":22,"line_end":22,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1592},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":223710,"byte_end":223715,"line_start":25,"line_end":25,"column_start":8,"column_end":13},"name":"block","qualname":"::call_raw::RawCall::block","value":"fn block(Self, BlockId) -> Self","parent":{"krate":0,"index":1590},"children":[],"decl_id":null,"docs":" Sets the block number to execute against\n","sig":null,"attributes":[{"value":"/ Sets the block number to execute against","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":223658,"byte_end":223702,"line_start":24,"line_end":24,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1593},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":223946,"byte_end":223951,"line_start":28,"line_end":28,"column_start":8,"column_end":13},"name":"state","qualname":"::call_raw::RawCall::state","value":"fn state(Self, &'a spoof::State) -> Self","parent":{"krate":0,"index":1590},"children":[],"decl_id":null,"docs":" Sets the [state override set](https://geth.ethereum.org/docs/rpc/ns-eth#3-object---state-override-set).\n Note that not all client implementations will support this as a parameter.\n","sig":null,"attributes":[{"value":"/ Sets the [state override set](https://geth.ethereum.org/docs/rpc/ns-eth#3-object---state-override-set).","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":223748,"byte_end":223855,"line_start":26,"line_end":26,"column_start":5,"column_end":112}},{"value":"/ Note that not all client implementations will support this as a parameter.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":223860,"byte_end":223938,"line_start":27,"line_end":27,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1594},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":224068,"byte_end":224071,"line_start":31,"line_end":31,"column_start":8,"column_end":11},"name":"map","qualname":"::call_raw::RawCall::map","value":"fn map<F>(Self, F) -> Map<Self, F> where Self: Sized","parent":{"krate":0,"index":1590},"children":[],"decl_id":null,"docs":" Maps a closure `f` over the result of `.await`ing this call\n","sig":null,"attributes":[{"value":"/ Maps a closure `f` over the result of `.await`ing this call","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":223997,"byte_end":224060,"line_start":30,"line_end":30,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1599},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":224597,"byte_end":224602,"line_start":46,"line_end":46,"column_start":5,"column_end":10},"name":"Build","qualname":"::call_raw::CallBuilder::Build","value":"CallBuilder::Build(Caller)","parent":{"krate":0,"index":1596},"children":[],"decl_id":null,"docs":" The primary builder which exposes [`RawCall`] methods.\n","sig":null,"attributes":[{"value":"/ The primary builder which exposes [`RawCall`] methods.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":224534,"byte_end":224592,"line_start":45,"line_end":45,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":1601},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":224603,"byte_end":224616,"line_start":46,"line_end":46,"column_start":11,"column_end":24},"name":"0","qualname":"::call_raw::CallBuilder::Build::0","value":"call_raw::Caller<'a, P>","parent":{"krate":0,"index":1599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1602},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":224797,"byte_end":224801,"line_start":49,"line_end":49,"column_start":5,"column_end":9},"name":"Wait","qualname":"::call_raw::CallBuilder::Wait","value":"CallBuilder::Wait(PinBoxFut)","parent":{"krate":0,"index":1596},"children":[],"decl_id":null,"docs":" Used by the [`std::future::Future`] implementation. You are unlikely to encounter this\n variant unless you are constructing your own [`RawCall`] wrapper type.\n","sig":null,"attributes":[{"value":"/ Used by the [`std::future::Future`] implementation. You are unlikely to encounter this","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":224623,"byte_end":224713,"line_start":47,"line_end":47,"column_start":5,"column_end":95}},{"value":"/ variant unless you are constructing your own [`RawCall`] wrapper type.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":224718,"byte_end":224792,"line_start":48,"line_end":48,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":1604},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":224802,"byte_end":224822,"line_start":49,"line_end":49,"column_start":10,"column_end":30},"name":"0","qualname":"::call_raw::CallBuilder::Wait::0","value":"std::pin::Pin<std::boxed::Box<(dyn futures_core::Future<Output = std::result::Result<ethers_core::types::Bytes, provider::ProviderError>> + std::marker::Send + 'a)>>","parent":{"krate":0,"index":1602},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1596},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":224509,"byte_end":224520,"line_start":44,"line_end":44,"column_start":10,"column_end":21},"name":"CallBuilder","qualname":"::call_raw::CallBuilder","value":"enum CallBuilder<'a, P> { Build(Caller), Wait(PinBoxFut), }","parent":null,"children":[{"krate":0,"index":1599},{"krate":0,"index":1602}],"decl_id":null,"docs":" A builder which implements [`RawCall`] methods for overriding `eth_call` parameters.","sig":null,"attributes":[{"value":"/ A builder which implements [`RawCall`] methods for overriding `eth_call` parameters.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":224175,"byte_end":224263,"line_start":39,"line_end":39,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":224264,"byte_end":224267,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ `CallBuilder` also implements [`std::future::Future`], so `.await`ing a `CallBuilder` will","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":224268,"byte_end":224362,"line_start":41,"line_end":41,"column_start":1,"column_end":95}},{"value":"/ resolve to the result of executing the `eth_call`.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":224363,"byte_end":224417,"line_start":42,"line_end":42,"column_start":1,"column_end":55}},{"value":"must_use =\n\"call_raw::CallBuilder does nothing unless you `.await` or poll it\"","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":224418,"byte_end":224499,"line_start":43,"line_end":43,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1607},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":224891,"byte_end":224894,"line_start":53,"line_end":53,"column_start":8,"column_end":11},"name":"fmt","qualname":"<CallBuilder as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1611},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":225191,"byte_end":225194,"line_start":62,"line_end":62,"column_start":12,"column_end":15},"name":"new","qualname":"<CallBuilder>::new","value":"fn new(&'a Provider<P>, &'a TypedTransaction) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1612},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":225418,"byte_end":225427,"line_start":67,"line_end":67,"column_start":12,"column_end":21},"name":"map_input","qualname":"<CallBuilder>::map_input","value":"fn map_input<F>(Self, F) -> Self where F: for<'_> FnOnce(&'_ mut Caller) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Applies a closure `f` to a `CallBuilder::Build`. Does nothing for `CallBuilder::Wait`.\n","sig":null,"attributes":[{"value":"/ Applies a closure `f` to a `CallBuilder::Build`. Does nothing for `CallBuilder::Wait`.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":225316,"byte_end":225406,"line_start":66,"line_end":66,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":1614},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":225830,"byte_end":225836,"line_start":82,"line_end":82,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<CallBuilder>::unwrap","value":"fn unwrap(Self) -> Caller","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner `Caller` from a `CallBuilder::Build`. Panics if the `CallBuilder` future\n has already been polled.\n","sig":null,"attributes":[{"value":"/ Returns the inner `Caller` from a `CallBuilder::Build`. Panics if the `CallBuilder` future","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":225691,"byte_end":225785,"line_start":80,"line_end":80,"column_start":5,"column_end":99}},{"value":"/ has already been polled.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":225790,"byte_end":225818,"line_start":81,"line_end":81,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1618},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":226104,"byte_end":226109,"line_start":92,"line_end":92,"column_start":8,"column_end":13},"name":"block","qualname":"<CallBuilder as call_raw::RawCall>::block","value":"fn block(Self, BlockId) -> Self","parent":{"krate":0,"index":1590},"children":[],"decl_id":{"krate":0,"index":1592},"docs":" Sets the block number to execute against\n","sig":null,"attributes":[{"value":"/ Sets the block number to execute against","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":226052,"byte_end":226096,"line_start":91,"line_end":91,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1620},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":226410,"byte_end":226415,"line_start":97,"line_end":97,"column_start":8,"column_end":13},"name":"state","qualname":"<CallBuilder as call_raw::RawCall>::state","value":"fn state(Self, &'a spoof::State) -> Self","parent":{"krate":0,"index":1590},"children":[],"decl_id":{"krate":0,"index":1593},"docs":" Sets the [state override set](https://geth.ethereum.org/docs/rpc/ns-eth#3-object---state-override-set).\n Note that not all client implementations will support this as a parameter.\n","sig":null,"attributes":[{"value":"/ Sets the [state override set](https://geth.ethereum.org/docs/rpc/ns-eth#3-object---state-override-set).","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":226212,"byte_end":226319,"line_start":95,"line_end":95,"column_start":5,"column_end":112}},{"value":"/ Note that not all client implementations will support this as a parameter.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":226324,"byte_end":226402,"line_start":96,"line_end":96,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1626},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":226647,"byte_end":226651,"line_start":105,"line_end":105,"column_start":8,"column_end":12},"name":"poll","qualname":"<CallBuilder as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3400},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":227245,"byte_end":227251,"line_start":122,"line_end":122,"column_start":12,"column_end":18},"name":"Caller","qualname":"::call_raw::Caller","value":"Caller {  }","parent":null,"children":[{"krate":0,"index":3403},{"krate":0,"index":3404}],"decl_id":null,"docs":" Holds the inputs to the `eth_call` rpc method along with the rpc provider.\n This type is constructed by [`CallBuilder::new`].\n","sig":null,"attributes":[{"value":"/ Holds the inputs to the `eth_call` rpc method along with the rpc provider.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":227077,"byte_end":227155,"line_start":119,"line_end":119,"column_start":1,"column_end":79}},{"value":"/ This type is constructed by [`CallBuilder::new`].","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":227156,"byte_end":227209,"line_start":120,"line_end":120,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1630},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":227360,"byte_end":227363,"line_start":128,"line_end":128,"column_start":12,"column_end":15},"name":"new","qualname":"<Caller>::new","value":"fn new(&'a Provider<P>, &'a TypedTransaction) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3487},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":229057,"byte_end":229060,"line_start":182,"line_end":182,"column_start":12,"column_end":15},"name":"Map","qualname":"::call_raw::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":3491},{"krate":0,"index":3490}],"decl_id":null,"docs":" An implementer of [`RawCall`] that maps a function `f` over the output of the inner future.","sig":null,"attributes":[{"value":"must_use = \"call_raw::Map does nothing unless you `.await` or poll it\"","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":228940,"byte_end":229013,"line_start":179,"line_end":179,"column_start":1,"column_end":74}},{"value":"pin(__private())","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":229031,"byte_end":229045,"line_start":181,"line_end":181,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3463},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":229057,"byte_end":229060,"line_start":182,"line_end":182,"column_start":12,"column_end":15},"name":"__Map","qualname":"::call_raw::_::__Map","value":"__Map {  }","parent":null,"children":[{"krate":0,"index":3467},{"krate":0,"index":3468}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_debug_implementations)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":229031,"byte_end":229045,"line_start":181,"line_end":181,"column_start":1,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1647},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":229164,"byte_end":229167,"line_start":189,"line_end":189,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Map<T, F> as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1651},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":229330,"byte_end":229333,"line_start":195,"line_end":195,"column_start":12,"column_end":15},"name":"new","qualname":"<Map<T, F>>::new","value":"fn new(T, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1656},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":229520,"byte_end":229525,"line_start":205,"line_end":205,"column_start":8,"column_end":13},"name":"block","qualname":"<Map<T, F> as call_raw::RawCall>::block","value":"fn block(Self, BlockId) -> Self","parent":{"krate":0,"index":1590},"children":[],"decl_id":{"krate":0,"index":1592},"docs":" Sets the block number to execute against\n","sig":null,"attributes":[{"value":"/ Sets the block number to execute against","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":229468,"byte_end":229512,"line_start":204,"line_end":204,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1657},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":229820,"byte_end":229825,"line_start":211,"line_end":211,"column_start":8,"column_end":13},"name":"state","qualname":"<Map<T, F> as call_raw::RawCall>::state","value":"fn state(Self, &'a spoof::State) -> Self","parent":{"krate":0,"index":1590},"children":[],"decl_id":{"krate":0,"index":1593},"docs":" Sets the [state override set](https://geth.ethereum.org/docs/rpc/ns-eth#3-object---state-override-set).\n Note that not all client implementations will support this as a parameter.\n","sig":null,"attributes":[{"value":"/ Sets the [state override set](https://geth.ethereum.org/docs/rpc/ns-eth#3-object---state-override-set).","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":229622,"byte_end":229729,"line_start":209,"line_end":209,"column_start":5,"column_end":112}},{"value":"/ Note that not all client implementations will support this as a parameter.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":229734,"byte_end":229812,"line_start":210,"line_end":210,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1663},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":230052,"byte_end":230056,"line_start":223,"line_end":223,"column_start":8,"column_end":12},"name":"poll","qualname":"<Map<T, F> as futures_core::Future>::poll","value":"fn poll<'_, '_, '_>(Pin<&'_ mut Self>, &'_ mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13763},"children":[],"decl_id":{"krate":2,"index":13765},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1664},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":230426,"byte_end":230431,"line_start":232,"line_end":232,"column_start":9,"column_end":14},"name":"spoof","qualname":"::call_raw::spoof","value":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","parent":null,"children":[{"krate":0,"index":1665},{"krate":0,"index":1666},{"krate":0,"index":3492},{"krate":0,"index":3493},{"krate":0,"index":3495},{"krate":0,"index":3497},{"krate":0,"index":3499},{"krate":0,"index":3500},{"krate":0,"index":3503},{"krate":0,"index":3504},{"krate":0,"index":3506},{"krate":0,"index":3512},{"krate":0,"index":1669},{"krate":0,"index":3588},{"krate":0,"index":3589},{"krate":0,"index":3591},{"krate":0,"index":3593},{"krate":0,"index":3594},{"krate":0,"index":3597},{"krate":0,"index":3598},{"krate":0,"index":3600},{"krate":0,"index":3606},{"krate":0,"index":1674},{"krate":0,"index":1676},{"krate":0,"index":1679},{"krate":0,"index":3678},{"krate":0,"index":3651},{"krate":0,"index":3653},{"krate":0,"index":3655},{"krate":0,"index":3657},{"krate":0,"index":3658},{"krate":0,"index":3661},{"krate":0,"index":3662},{"krate":0,"index":3664},{"krate":0,"index":3670},{"krate":0,"index":1681},{"krate":0,"index":1683},{"krate":0,"index":1684},{"krate":0,"index":1685},{"krate":0,"index":1686},{"krate":0,"index":1687}],"decl_id":null,"docs":" Provides types and methods for constructing an `eth_call`\n [state override set](https://geth.ethereum.org/docs/rpc/ns-eth#3-object---state-override-set)\n","sig":null,"attributes":[{"value":"/ Provides types and methods for constructing an `eth_call`","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":230258,"byte_end":230319,"line_start":230,"line_end":230,"column_start":1,"column_end":62}},{"value":"/ [state override set](https://geth.ethereum.org/docs/rpc/ns-eth#3-object---state-override-set)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":230320,"byte_end":230417,"line_start":231,"line_end":231,"column_start":1,"column_end":98}}]},{"kind":"Struct","id":{"krate":0,"index":3492},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":230644,"byte_end":230651,"line_start":238,"line_end":238,"column_start":16,"column_end":23},"name":"Account","qualname":"::call_raw::spoof::Account","value":"Account { nonce, balance, code, storage }","parent":null,"children":[{"krate":0,"index":3584},{"krate":0,"index":3585},{"krate":0,"index":3586},{"krate":0,"index":3587}],"decl_id":null,"docs":" The state elements to override for a particular account.\n","sig":null,"attributes":[{"value":"/ The state elements to override for a particular account.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":230492,"byte_end":230552,"line_start":236,"line_end":236,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":3584},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":230724,"byte_end":230729,"line_start":240,"line_end":240,"column_start":13,"column_end":18},"name":"nonce","qualname":"::call_raw::spoof::Account::nonce","value":"std::option::Option<ethers_core::types::U64>","parent":{"krate":0,"index":3492},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":230662,"byte_end":230711,"line_start":239,"line_end":239,"column_start":9,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":3585},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":230814,"byte_end":230821,"line_start":242,"line_end":242,"column_start":13,"column_end":20},"name":"balance","qualname":"::call_raw::spoof::Account::balance","value":"std::option::Option<ethers_core::types::U256>","parent":{"krate":0,"index":3492},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":230752,"byte_end":230801,"line_start":241,"line_end":241,"column_start":9,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":3586},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":230907,"byte_end":230911,"line_start":244,"line_end":244,"column_start":13,"column_end":17},"name":"code","qualname":"::call_raw::spoof::Account::code","value":"std::option::Option<ethers_core::types::Bytes>","parent":{"krate":0,"index":3492},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":230845,"byte_end":230894,"line_start":243,"line_end":243,"column_start":9,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":3587},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":231007,"byte_end":231014,"line_start":246,"line_end":246,"column_start":13,"column_end":20},"name":"storage","qualname":"::call_raw::spoof::Account::storage","value":"std::option::Option<call_raw::spoof::Storage>","parent":{"krate":0,"index":3492},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(flatten, skip_serializing_if = \"Option::is_none\")","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":230936,"byte_end":230994,"line_start":245,"line_end":245,"column_start":9,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1670},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":231113,"byte_end":231118,"line_start":251,"line_end":251,"column_start":16,"column_end":21},"name":"nonce","qualname":"<Account>::nonce","value":"fn nonce<'_>(&'_ mut Self, U64) -> &'_ mut Self","parent":null,"children":[],"decl_id":null,"docs":" Override the account nonce\n","sig":null,"attributes":[{"value":"/ Override the account nonce","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":231067,"byte_end":231097,"line_start":250,"line_end":250,"column_start":9,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1671},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":231278,"byte_end":231285,"line_start":256,"line_end":256,"column_start":16,"column_end":23},"name":"balance","qualname":"<Account>::balance","value":"fn balance<'_>(&'_ mut Self, U256) -> &'_ mut Self","parent":null,"children":[],"decl_id":null,"docs":" Override the account balance\n","sig":null,"attributes":[{"value":"/ Override the account balance","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":231230,"byte_end":231262,"line_start":255,"line_end":255,"column_start":9,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1672},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":231448,"byte_end":231452,"line_start":261,"line_end":261,"column_start":16,"column_end":20},"name":"code","qualname":"<Account>::code","value":"fn code<'_>(&'_ mut Self, Bytes) -> &'_ mut Self","parent":null,"children":[],"decl_id":null,"docs":" Override the code at the account\n","sig":null,"attributes":[{"value":"/ Override the code at the account","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":231396,"byte_end":231432,"line_start":260,"line_end":260,"column_start":9,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1673},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":231651,"byte_end":231656,"line_start":266,"line_end":266,"column_start":16,"column_end":21},"name":"store","qualname":"<Account>::store","value":"fn store<'_>(&'_ mut Self, H256, H256) -> &'_ mut Self","parent":null,"children":[],"decl_id":null,"docs":" Override the value of the account storage at the given storage `key`\n","sig":null,"attributes":[{"value":"/ Override the value of the account storage at the given storage `key`","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":231563,"byte_end":231635,"line_start":265,"line_end":265,"column_start":9,"column_end":81}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3645},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":232168,"byte_end":232172,"line_start":279,"line_end":279,"column_start":9,"column_end":13},"name":"Diff","qualname":"::call_raw::spoof::Storage::Diff","value":"Storage::Diff(HashMap<H256, H256>)","parent":{"krate":0,"index":3588},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"stateDiff\")","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":232129,"byte_end":232159,"line_start":278,"line_end":278,"column_start":9,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":3647},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":232173,"byte_end":232192,"line_start":279,"line_end":279,"column_start":14,"column_end":33},"name":"0","qualname":"::call_raw::spoof::Storage::Diff::0","value":"std::collections::HashMap<ethers_core::types::TxHash, ethers_core::types::TxHash>","parent":{"krate":0,"index":3645},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3648},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":232238,"byte_end":232245,"line_start":281,"line_end":281,"column_start":9,"column_end":16},"name":"Replace","qualname":"::call_raw::spoof::Storage::Replace","value":"Storage::Replace(HashMap<H256, H256>)","parent":{"krate":0,"index":3588},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"serde(rename = \"state\")","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":232203,"byte_end":232229,"line_start":280,"line_end":280,"column_start":9,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":3650},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":232246,"byte_end":232265,"line_start":281,"line_end":281,"column_start":17,"column_end":36},"name":"0","qualname":"::call_raw::spoof::Storage::Replace::0","value":"std::collections::HashMap<ethers_core::types::TxHash, ethers_core::types::TxHash>","parent":{"krate":0,"index":3648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3588},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":232111,"byte_end":232118,"line_start":277,"line_end":277,"column_start":14,"column_end":21},"name":"Storage","qualname":"::call_raw::spoof::Storage","value":"enum Storage { Diff(HashMap<H256, H256>), Replace(HashMap<H256, H256>), }","parent":null,"children":[{"krate":0,"index":3645},{"krate":0,"index":3648}],"decl_id":null,"docs":" Wraps a map from storage slot to the overriden value.","sig":null,"attributes":[{"value":"/ Wraps a map from storage slot to the overriden value.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":231823,"byte_end":231880,"line_start":272,"line_end":272,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":231885,"byte_end":231888,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ Storage overrides can either replace the existing state of an account or they can be treated","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":231893,"byte_end":231989,"line_start":274,"line_end":274,"column_start":5,"column_end":101}},{"value":"/ as a diff on the existing state.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":231994,"byte_end":232030,"line_start":275,"line_end":275,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1675},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":232402,"byte_end":232409,"line_start":286,"line_end":286,"column_start":12,"column_end":19},"name":"default","qualname":"<Storage as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1678},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":232574,"byte_end":232579,"line_start":292,"line_end":292,"column_start":12,"column_end":17},"name":"deref","qualname":"<Storage as std::ops::Deref>::deref","value":"fn deref<'_>(&'_ Self) -> &'_ Self::Target","parent":{"krate":2,"index":3486},"children":[],"decl_id":{"krate":2,"index":3488},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1680},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":232797,"byte_end":232806,"line_start":300,"line_end":300,"column_start":12,"column_end":21},"name":"deref_mut","qualname":"<Storage as std::ops::DerefMut>::deref_mut","value":"fn deref_mut<'_>(&'_ mut Self) -> &'_ mut Self::Target","parent":{"krate":2,"index":3499},"children":[],"decl_id":{"krate":2,"index":3500},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3678},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":233162,"byte_end":233167,"line_start":311,"line_end":311,"column_start":16,"column_end":21},"name":"State","qualname":"::call_raw::spoof::State","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper type that holds a complete state override set.\n","sig":null,"attributes":[{"value":"/ A wrapper type that holds a complete state override set.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":232984,"byte_end":233044,"line_start":308,"line_end":308,"column_start":5,"column_end":65}},{"value":"serde(transparent)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":233125,"byte_end":233146,"line_start":310,"line_end":310,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1682},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":233352,"byte_end":233359,"line_start":315,"line_end":315,"column_start":16,"column_end":23},"name":"account","qualname":"<State>::account","value":"fn account<'_>(&'_ mut Self, Address) -> &'_ mut Account","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the [`Account`] in the map.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the [`Account`] in the map.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":233274,"byte_end":233336,"line_start":314,"line_end":314,"column_start":9,"column_end":71}}]},{"kind":"Function","id":{"krate":0,"index":1683},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":234781,"byte_end":234786,"line_start":354,"line_end":354,"column_start":12,"column_end":17},"name":"state","qualname":"::call_raw::spoof::state","value":"fn state() -> State","parent":null,"children":[],"decl_id":null,"docs":" Returns an empty state override set.","sig":null,"attributes":[{"value":"/ Returns an empty state override set.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":233467,"byte_end":233507,"line_start":320,"line_end":320,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":233512,"byte_end":233515,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":233520,"byte_end":233533,"line_start":322,"line_end":322,"column_start":5,"column_end":18}},{"value":"/ ```no_run","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":233538,"byte_end":233551,"line_start":323,"line_end":323,"column_start":5,"column_end":18}},{"value":"/ # use ethers_core::{","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":233556,"byte_end":233580,"line_start":324,"line_end":324,"column_start":5,"column_end":29}},{"value":"/ #     types::{Address, TransactionRequest, H256},","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":233585,"byte_end":233638,"line_start":325,"line_end":325,"column_start":5,"column_end":58}},{"value":"/ #     utils::{parse_ether, Geth},","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":233643,"byte_end":233680,"line_start":326,"line_end":326,"column_start":5,"column_end":42}},{"value":"/ # };","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":233685,"byte_end":233693,"line_start":327,"line_end":327,"column_start":5,"column_end":13}},{"value":"/ # use ethers_providers::{Provider, Http, Middleware, call_raw::{spoof, RawCall}};","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":233698,"byte_end":233783,"line_start":328,"line_end":328,"column_start":5,"column_end":90}},{"value":"/ # use std::convert::TryFrom;","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":233788,"byte_end":233820,"line_start":329,"line_end":329,"column_start":5,"column_end":37}},{"value":"/ #","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":233825,"byte_end":233830,"line_start":330,"line_end":330,"column_start":5,"column_end":10}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":233835,"byte_end":233882,"line_start":331,"line_end":331,"column_start":5,"column_end":52}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":233887,"byte_end":233952,"line_start":332,"line_end":332,"column_start":5,"column_end":70}},{"value":"/ let geth = Geth::new().spawn();","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":233957,"byte_end":233992,"line_start":333,"line_end":333,"column_start":5,"column_end":40}},{"value":"/ let provider = Provider::<Http>::try_from(geth.endpoint()).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":233997,"byte_end":234069,"line_start":334,"line_end":334,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":234074,"byte_end":234077,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let adr1: Address = \"0x6fC21092DA55B392b045eD78F4732bff3C580e2c\".parse().unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":234082,"byte_end":234168,"line_start":336,"line_end":336,"column_start":5,"column_end":91}},{"value":"/ let adr2: Address = \"0x295a70b2de5e3953354a6a8344e616ed314d7251\".parse().unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":234173,"byte_end":234259,"line_start":337,"line_end":337,"column_start":5,"column_end":91}},{"value":"/ let key = H256::from_low_u64_be(1);","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":234264,"byte_end":234303,"line_start":338,"line_end":338,"column_start":5,"column_end":44}},{"value":"/ let val = H256::from_low_u64_be(17);","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":234308,"byte_end":234348,"line_start":339,"line_end":339,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":234353,"byte_end":234356,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ let tx = TransactionRequest::default().to(adr2).from(adr1).into();","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":234361,"byte_end":234431,"line_start":341,"line_end":341,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":234436,"byte_end":234439,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ // override the storage at `adr2`","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":234444,"byte_end":234481,"line_start":343,"line_end":343,"column_start":5,"column_end":42}},{"value":"/ let mut state = spoof::state();","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":234486,"byte_end":234521,"line_start":344,"line_end":344,"column_start":5,"column_end":40}},{"value":"/ state.account(adr2).store(key, val);","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":234526,"byte_end":234566,"line_start":345,"line_end":345,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":234571,"byte_end":234574,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ // override the nonce at `adr1`","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":234579,"byte_end":234614,"line_start":347,"line_end":347,"column_start":5,"column_end":40}},{"value":"/ state.account(adr1).nonce(2.into());","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":234619,"byte_end":234659,"line_start":348,"line_end":348,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":234664,"byte_end":234667,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ provider.call_raw(&tx).state(&state).await.unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":234672,"byte_end":234728,"line_start":350,"line_end":350,"column_start":5,"column_end":61}},{"value":"/ # Ok(())","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":234733,"byte_end":234745,"line_start":351,"line_end":351,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":234750,"byte_end":234757,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":234762,"byte_end":234769,"line_start":353,"line_end":353,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":1684},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":236067,"byte_end":236074,"line_start":387,"line_end":387,"column_start":12,"column_end":19},"name":"balance","qualname":"::call_raw::spoof::balance","value":"fn balance(Address, U256) -> State","parent":null,"children":[],"decl_id":null,"docs":" Returns a state override set with a single element setting the balance of the address.","sig":null,"attributes":[{"value":"/ Returns a state override set with a single element setting the balance of the address.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":234838,"byte_end":234928,"line_start":358,"line_end":358,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":234933,"byte_end":234936,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":234941,"byte_end":234954,"line_start":360,"line_end":360,"column_start":5,"column_end":18}},{"value":"/ ```no_run","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":234959,"byte_end":234972,"line_start":361,"line_end":361,"column_start":5,"column_end":18}},{"value":"/ # use ethers_core::{","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":234977,"byte_end":235001,"line_start":362,"line_end":362,"column_start":5,"column_end":29}},{"value":"/ #     types::{Address, TransactionRequest, H256},","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":235006,"byte_end":235059,"line_start":363,"line_end":363,"column_start":5,"column_end":58}},{"value":"/ #     utils::{parse_ether, Geth},","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":235064,"byte_end":235101,"line_start":364,"line_end":364,"column_start":5,"column_end":42}},{"value":"/ # };","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":235106,"byte_end":235114,"line_start":365,"line_end":365,"column_start":5,"column_end":13}},{"value":"/ # use ethers_providers::{Provider, Http, Middleware, call_raw::{RawCall, spoof}};","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":235119,"byte_end":235204,"line_start":366,"line_end":366,"column_start":5,"column_end":90}},{"value":"/ # use std::convert::TryFrom;","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":235209,"byte_end":235241,"line_start":367,"line_end":367,"column_start":5,"column_end":37}},{"value":"/ #","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":235246,"byte_end":235251,"line_start":368,"line_end":368,"column_start":5,"column_end":10}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":235256,"byte_end":235303,"line_start":369,"line_end":369,"column_start":5,"column_end":52}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":235308,"byte_end":235373,"line_start":370,"line_end":370,"column_start":5,"column_end":70}},{"value":"/ let geth = Geth::new().spawn();","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":235378,"byte_end":235413,"line_start":371,"line_end":371,"column_start":5,"column_end":40}},{"value":"/ let provider = Provider::<Http>::try_from(geth.endpoint()).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":235418,"byte_end":235490,"line_start":372,"line_end":372,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":235495,"byte_end":235498,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ let adr1: Address = \"0x6fC21092DA55B392b045eD78F4732bff3C580e2c\".parse()?;","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":235503,"byte_end":235581,"line_start":374,"line_end":374,"column_start":5,"column_end":83}},{"value":"/ let adr2: Address = \"0x295a70b2de5e3953354a6a8344e616ed314d7251\".parse()?;","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":235586,"byte_end":235664,"line_start":375,"line_end":375,"column_start":5,"column_end":83}},{"value":"/ let pay_amt = parse_ether(1u64)?;","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":235669,"byte_end":235706,"line_start":376,"line_end":376,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":235711,"byte_end":235714,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ // Not enough ether to pay for the transaction","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":235719,"byte_end":235769,"line_start":378,"line_end":378,"column_start":5,"column_end":55}},{"value":"/ let tx = TransactionRequest::pay(adr2, pay_amt).from(adr1).into();","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":235774,"byte_end":235844,"line_start":379,"line_end":379,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":235849,"byte_end":235852,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ // override the sender's balance for the call","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":235857,"byte_end":235906,"line_start":381,"line_end":381,"column_start":5,"column_end":54}},{"value":"/ let state = spoof::balance(adr1, pay_amt * 2);","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":235911,"byte_end":235961,"line_start":382,"line_end":382,"column_start":5,"column_end":55}},{"value":"/ provider.call_raw(&tx).state(&state).await?;","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":235966,"byte_end":236014,"line_start":383,"line_end":383,"column_start":5,"column_end":53}},{"value":"/ # Ok(())","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":236019,"byte_end":236031,"line_start":384,"line_end":384,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":236036,"byte_end":236043,"line_start":385,"line_end":385,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":236048,"byte_end":236055,"line_start":386,"line_end":386,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":1685},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":237290,"byte_end":237295,"line_start":420,"line_end":420,"column_start":12,"column_end":17},"name":"nonce","qualname":"::call_raw::spoof::nonce","value":"fn nonce(Address, U64) -> State","parent":null,"children":[],"decl_id":null,"docs":" Returns a state override set with a single element setting the nonce of the address.","sig":null,"attributes":[{"value":"/ Returns a state override set with a single element setting the nonce of the address.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":236219,"byte_end":236307,"line_start":393,"line_end":393,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":236312,"byte_end":236315,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":236320,"byte_end":236333,"line_start":395,"line_end":395,"column_start":5,"column_end":18}},{"value":"/ ```no_run","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":236338,"byte_end":236351,"line_start":396,"line_end":396,"column_start":5,"column_end":18}},{"value":"/ # use ethers_core::{","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":236356,"byte_end":236380,"line_start":397,"line_end":397,"column_start":5,"column_end":29}},{"value":"/ #     types::{Address, TransactionRequest, H256},","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":236385,"byte_end":236438,"line_start":398,"line_end":398,"column_start":5,"column_end":58}},{"value":"/ #     utils::{parse_ether, Geth},","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":236443,"byte_end":236480,"line_start":399,"line_end":399,"column_start":5,"column_end":42}},{"value":"/ # };","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":236485,"byte_end":236493,"line_start":400,"line_end":400,"column_start":5,"column_end":13}},{"value":"/ # use ethers_providers::{Provider, Http, Middleware, call_raw::{RawCall, spoof}};","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":236498,"byte_end":236583,"line_start":401,"line_end":401,"column_start":5,"column_end":90}},{"value":"/ # use std::convert::TryFrom;","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":236588,"byte_end":236620,"line_start":402,"line_end":402,"column_start":5,"column_end":37}},{"value":"/ #","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":236625,"byte_end":236630,"line_start":403,"line_end":403,"column_start":5,"column_end":10}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":236635,"byte_end":236682,"line_start":404,"line_end":404,"column_start":5,"column_end":52}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":236687,"byte_end":236752,"line_start":405,"line_end":405,"column_start":5,"column_end":70}},{"value":"/ let geth = Geth::new().spawn();","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":236757,"byte_end":236792,"line_start":406,"line_end":406,"column_start":5,"column_end":40}},{"value":"/ let provider = Provider::<Http>::try_from(geth.endpoint()).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":236797,"byte_end":236869,"line_start":407,"line_end":407,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":236874,"byte_end":236877,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ let adr: Address = \"0x6fC21092DA55B392b045eD78F4732bff3C580e2c\".parse()?;","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":236882,"byte_end":236959,"line_start":409,"line_end":409,"column_start":5,"column_end":82}},{"value":"/ let pay_amt = parse_ether(1u64)?;","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":236964,"byte_end":237001,"line_start":410,"line_end":410,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":237006,"byte_end":237009,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ let tx = TransactionRequest::default().from(adr).into();","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":237014,"byte_end":237074,"line_start":412,"line_end":412,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":237079,"byte_end":237082,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ // override the sender's nonce for the call","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":237087,"byte_end":237134,"line_start":414,"line_end":414,"column_start":5,"column_end":52}},{"value":"/ let state = spoof::nonce(adr, 72.into());","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":237139,"byte_end":237184,"line_start":415,"line_end":415,"column_start":5,"column_end":50}},{"value":"/ provider.call_raw(&tx).state(&state).await?;","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":237189,"byte_end":237237,"line_start":416,"line_end":416,"column_start":5,"column_end":53}},{"value":"/ # Ok(())","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":237242,"byte_end":237254,"line_start":417,"line_end":417,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":237259,"byte_end":237266,"line_start":418,"line_end":418,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":237271,"byte_end":237278,"line_start":419,"line_end":419,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":1686},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":238513,"byte_end":238517,"line_start":453,"line_end":453,"column_start":12,"column_end":16},"name":"code","qualname":"::call_raw::spoof::code","value":"fn code(Address, Bytes) -> State","parent":null,"children":[],"decl_id":null,"docs":" Returns a state override set with a single element setting the code at the address.","sig":null,"attributes":[{"value":"/ Returns a state override set with a single element setting the code at the address.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":237441,"byte_end":237528,"line_start":426,"line_end":426,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":237533,"byte_end":237536,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":237541,"byte_end":237554,"line_start":428,"line_end":428,"column_start":5,"column_end":18}},{"value":"/ ```no_run","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":237559,"byte_end":237572,"line_start":429,"line_end":429,"column_start":5,"column_end":18}},{"value":"/ # use ethers_core::{","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":237577,"byte_end":237601,"line_start":430,"line_end":430,"column_start":5,"column_end":29}},{"value":"/ #     types::{Address, TransactionRequest, H256},","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":237606,"byte_end":237659,"line_start":431,"line_end":431,"column_start":5,"column_end":58}},{"value":"/ #     utils::{parse_ether, Geth},","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":237664,"byte_end":237701,"line_start":432,"line_end":432,"column_start":5,"column_end":42}},{"value":"/ # };","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":237706,"byte_end":237714,"line_start":433,"line_end":433,"column_start":5,"column_end":13}},{"value":"/ # use ethers_providers::{Provider, Http, Middleware, call_raw::{RawCall, spoof}};","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":237719,"byte_end":237804,"line_start":434,"line_end":434,"column_start":5,"column_end":90}},{"value":"/ # use std::convert::TryFrom;","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":237809,"byte_end":237841,"line_start":435,"line_end":435,"column_start":5,"column_end":37}},{"value":"/ #","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":237846,"byte_end":237851,"line_start":436,"line_end":436,"column_start":5,"column_end":10}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":237856,"byte_end":237903,"line_start":437,"line_end":437,"column_start":5,"column_end":52}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":237908,"byte_end":237973,"line_start":438,"line_end":438,"column_start":5,"column_end":70}},{"value":"/ let geth = Geth::new().spawn();","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":237978,"byte_end":238013,"line_start":439,"line_end":439,"column_start":5,"column_end":40}},{"value":"/ let provider = Provider::<Http>::try_from(geth.endpoint()).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":238018,"byte_end":238090,"line_start":440,"line_end":440,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":238095,"byte_end":238098,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ let adr: Address = \"0x6fC21092DA55B392b045eD78F4732bff3C580e2c\".parse()?;","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":238103,"byte_end":238180,"line_start":442,"line_end":442,"column_start":5,"column_end":82}},{"value":"/ let pay_amt = parse_ether(1u64)?;","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":238185,"byte_end":238222,"line_start":443,"line_end":443,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":238227,"byte_end":238230,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ let tx = TransactionRequest::default().to(adr).into();","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":238235,"byte_end":238293,"line_start":445,"line_end":445,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":238298,"byte_end":238301,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ // override the code at the target address","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":238306,"byte_end":238352,"line_start":447,"line_end":447,"column_start":5,"column_end":51}},{"value":"/ let state = spoof::code(adr, \"0x00\".parse()?);","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":238357,"byte_end":238407,"line_start":448,"line_end":448,"column_start":5,"column_end":55}},{"value":"/ provider.call_raw(&tx).state(&state).await?;","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":238412,"byte_end":238460,"line_start":449,"line_end":449,"column_start":5,"column_end":53}},{"value":"/ # Ok(())","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":238465,"byte_end":238477,"line_start":450,"line_end":450,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":238482,"byte_end":238489,"line_start":451,"line_end":451,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":238494,"byte_end":238501,"line_start":452,"line_end":452,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":1687},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":239803,"byte_end":239810,"line_start":488,"line_end":488,"column_start":12,"column_end":19},"name":"storage","qualname":"::call_raw::spoof::storage","value":"fn storage(Address, H256, H256) -> State","parent":null,"children":[],"decl_id":null,"docs":" Returns a state override set with a single element setting the storage at the given address\n and key.","sig":null,"attributes":[{"value":"/ Returns a state override set with a single element setting the storage at the given address","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":238662,"byte_end":238757,"line_start":459,"line_end":459,"column_start":5,"column_end":100}},{"value":"/ and key.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":238762,"byte_end":238774,"line_start":460,"line_end":460,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":238779,"byte_end":238782,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":238787,"byte_end":238800,"line_start":462,"line_end":462,"column_start":5,"column_end":18}},{"value":"/ ```no_run","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":238805,"byte_end":238818,"line_start":463,"line_end":463,"column_start":5,"column_end":18}},{"value":"/ # use ethers_core::{","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":238823,"byte_end":238847,"line_start":464,"line_end":464,"column_start":5,"column_end":29}},{"value":"/ #     types::{Address, TransactionRequest, H256},","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":238852,"byte_end":238905,"line_start":465,"line_end":465,"column_start":5,"column_end":58}},{"value":"/ #     utils::{parse_ether, Geth},","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":238910,"byte_end":238947,"line_start":466,"line_end":466,"column_start":5,"column_end":42}},{"value":"/ # };","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":238952,"byte_end":238960,"line_start":467,"line_end":467,"column_start":5,"column_end":13}},{"value":"/ # use ethers_providers::{Provider, Http, Middleware, call_raw::{RawCall, spoof}};","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":238965,"byte_end":239050,"line_start":468,"line_end":468,"column_start":5,"column_end":90}},{"value":"/ # use std::convert::TryFrom;","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":239055,"byte_end":239087,"line_start":469,"line_end":469,"column_start":5,"column_end":37}},{"value":"/ #","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":239092,"byte_end":239097,"line_start":470,"line_end":470,"column_start":5,"column_end":10}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":239102,"byte_end":239149,"line_start":471,"line_end":471,"column_start":5,"column_end":52}},{"value":"/ # async fn main() -> Result<(), Box<dyn std::error::Error>> {","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":239154,"byte_end":239219,"line_start":472,"line_end":472,"column_start":5,"column_end":70}},{"value":"/ let geth = Geth::new().spawn();","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":239224,"byte_end":239259,"line_start":473,"line_end":473,"column_start":5,"column_end":40}},{"value":"/ let provider = Provider::<Http>::try_from(geth.endpoint()).unwrap();","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":239264,"byte_end":239336,"line_start":474,"line_end":474,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":239341,"byte_end":239344,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ let adr: Address = \"0x6fC21092DA55B392b045eD78F4732bff3C580e2c\".parse()?;","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":239349,"byte_end":239426,"line_start":476,"line_end":476,"column_start":5,"column_end":82}},{"value":"/ let key = H256::from_low_u64_be(1);","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":239431,"byte_end":239470,"line_start":477,"line_end":477,"column_start":5,"column_end":44}},{"value":"/ let val = H256::from_low_u64_be(17);","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":239475,"byte_end":239515,"line_start":478,"line_end":478,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":239520,"byte_end":239523,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ let tx = TransactionRequest::default().to(adr).into();","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":239528,"byte_end":239586,"line_start":480,"line_end":480,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":239591,"byte_end":239594,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ // override the storage slot `key` at `adr`","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":239599,"byte_end":239646,"line_start":482,"line_end":482,"column_start":5,"column_end":52}},{"value":"/ let state = spoof::storage(adr, key, val);","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":239651,"byte_end":239697,"line_start":483,"line_end":483,"column_start":5,"column_end":51}},{"value":"/ provider.call_raw(&tx).state(&state).await?;","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":239702,"byte_end":239750,"line_start":484,"line_end":484,"column_start":5,"column_end":53}},{"value":"/ # Ok(())","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":239755,"byte_end":239767,"line_start":485,"line_end":485,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":239772,"byte_end":239779,"line_start":486,"line_end":486,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":239784,"byte_end":239791,"line_start":487,"line_end":487,"column_start":5,"column_end":12}}]},{"kind":"Mod","id":{"krate":0,"index":1688},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/erc.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"erc","qualname":"::erc","value":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/erc.rs","parent":null,"children":[{"krate":0,"index":1689},{"krate":0,"index":1690},{"krate":0,"index":1693},{"krate":0,"index":1696},{"krate":0,"index":1697},{"krate":0,"index":1699},{"krate":0,"index":1700},{"krate":0,"index":1702},{"krate":0,"index":1705},{"krate":0,"index":1708},{"krate":0,"index":1709},{"krate":0,"index":1710},{"krate":0,"index":1711},{"krate":0,"index":1716},{"krate":0,"index":3681},{"krate":0,"index":3686},{"krate":0,"index":3687},{"krate":0,"index":3689},{"krate":0,"index":3690},{"krate":0,"index":1723},{"krate":0,"index":1726},{"krate":0,"index":3692},{"krate":0,"index":3694},{"krate":0,"index":1728}],"decl_id":null,"docs":" ERC related utilities. Only supporting NFTs for now.\n","sig":null,"attributes":[{"value":"/ ERC related utilities. Only supporting NFTs for now.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/erc.rs","byte_start":245012,"byte_end":245068,"line_start":1,"line_end":1,"column_start":1,"column_end":57}}]},{"kind":"Const","id":{"krate":0,"index":1708},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/erc.rs","byte_start":245222,"byte_end":245243,"line_start":9,"line_end":9,"column_start":11,"column_end":32},"name":"ERC721_OWNER_SELECTOR","qualname":"::erc::ERC721_OWNER_SELECTOR","value":"Selector","parent":null,"children":[],"decl_id":null,"docs":" ownerOf(uint256 tokenId)\n","sig":null,"attributes":[{"value":"/ ownerOf(uint256 tokenId)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/erc.rs","byte_start":245183,"byte_end":245211,"line_start":8,"line_end":8,"column_start":1,"column_end":29}}]},{"kind":"Const","id":{"krate":0,"index":1709},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/erc.rs","byte_start":245339,"byte_end":245363,"line_start":12,"line_end":12,"column_start":11,"column_end":35},"name":"ERC1155_BALANCE_SELECTOR","qualname":"::erc::ERC1155_BALANCE_SELECTOR","value":"Selector","parent":null,"children":[],"decl_id":null,"docs":" balanceOf(address owner, uint256 tokenId)\n","sig":null,"attributes":[{"value":"/ balanceOf(address owner, uint256 tokenId)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/erc.rs","byte_start":245283,"byte_end":245328,"line_start":11,"line_end":11,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1711},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/erc.rs","byte_start":245496,"byte_end":245502,"line_start":17,"line_end":17,"column_start":12,"column_end":18},"name":"ERCNFT","qualname":"::erc::ERCNFT","value":"ERCNFT { type_, contract, id }","parent":null,"children":[{"krate":0,"index":1712},{"krate":0,"index":1713},{"krate":0,"index":1714}],"decl_id":null,"docs":" An ERC 721 or 1155 token\n","sig":null,"attributes":[{"value":"/ An ERC 721 or 1155 token","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/erc.rs","byte_start":245456,"byte_end":245484,"line_start":16,"line_end":16,"column_start":1,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":1712},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/erc.rs","byte_start":245513,"byte_end":245518,"line_start":18,"line_end":18,"column_start":9,"column_end":14},"name":"type_","qualname":"::erc::ERCNFT::type_","value":"erc::ERCNFTType","parent":{"krate":0,"index":1711},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1713},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/erc.rs","byte_start":245540,"byte_end":245548,"line_start":19,"line_end":19,"column_start":9,"column_end":17},"name":"contract","qualname":"::erc::ERCNFT::contract","value":"ethers_core::types::H160","parent":{"krate":0,"index":1711},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1714},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/erc.rs","byte_start":245567,"byte_end":245569,"line_start":20,"line_end":20,"column_start":9,"column_end":11},"name":"id","qualname":"::erc::ERCNFT::id","value":"[u8; 32]","parent":{"krate":0,"index":1711},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1718},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/erc.rs","byte_start":245640,"byte_end":245648,"line_start":25,"line_end":25,"column_start":8,"column_end":16},"name":"from_str","qualname":"<ERCNFT as std::str::FromStr>::from_str","value":"fn from_str<'_>(&'_ str) -> Result<ERCNFT, Self::Err>","parent":{"krate":2,"index":12989},"children":[],"decl_id":{"krate":2,"index":12991},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3682},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/erc.rs","byte_start":247026,"byte_end":247032,"line_start":59,"line_end":59,"column_start":5,"column_end":11},"name":"ERC721","qualname":"::erc::ERCNFTType::ERC721","value":"ERCNFTType::ERC721","parent":{"krate":0,"index":3681},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3684},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/erc.rs","byte_start":247038,"byte_end":247045,"line_start":60,"line_end":60,"column_start":5,"column_end":12},"name":"ERC1155","qualname":"::erc::ERCNFTType::ERC1155","value":"ERCNFTType::ERC1155","parent":{"krate":0,"index":3681},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3681},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/erc.rs","byte_start":247009,"byte_end":247019,"line_start":58,"line_end":58,"column_start":10,"column_end":20},"name":"ERCNFTType","qualname":"::erc::ERCNFTType","value":"enum ERCNFTType { ERC721, ERC1155, }","parent":null,"children":[{"krate":0,"index":3682},{"krate":0,"index":3684}],"decl_id":null,"docs":" Supported ERCs\n","sig":null,"attributes":[{"value":"/ Supported ERCs","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/erc.rs","byte_start":246956,"byte_end":246974,"line_start":56,"line_end":56,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1725},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/erc.rs","byte_start":247106,"byte_end":247114,"line_start":65,"line_end":65,"column_start":8,"column_end":16},"name":"from_str","qualname":"<ERCNFTType as std::str::FromStr>::from_str","value":"fn from_str<'_>(&'_ str) -> Result<ERCNFTType, Self::Err>","parent":{"krate":2,"index":12989},"children":[],"decl_id":{"krate":2,"index":12991},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1727},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/erc.rs","byte_start":247357,"byte_end":247376,"line_start":75,"line_end":75,"column_start":12,"column_end":31},"name":"resolution_selector","qualname":"<ERCNFTType>::resolution_selector","value":"fn resolution_selector<'_>(&'_ Self) -> Selector","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3692},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/erc.rs","byte_start":247698,"byte_end":247706,"line_start":87,"line_end":87,"column_start":12,"column_end":20},"name":"Metadata","qualname":"::erc::Metadata","value":"Metadata { image }","parent":null,"children":[{"krate":0,"index":3693}],"decl_id":null,"docs":" ERC-1155 and ERC-721 metadata document.\n","sig":null,"attributes":[{"value":"/ ERC-1155 and ERC-721 metadata document.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/erc.rs","byte_start":247620,"byte_end":247663,"line_start":85,"line_end":85,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":3693},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/erc.rs","byte_start":247717,"byte_end":247722,"line_start":88,"line_end":88,"column_start":9,"column_end":14},"name":"image","qualname":"::erc::Metadata::image","value":"std::string::String","parent":{"krate":0,"index":3692},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1728},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/erc.rs","byte_start":247785,"byte_end":247799,"line_start":92,"line_end":92,"column_start":8,"column_end":22},"name":"http_link_ipfs","qualname":"::erc::http_link_ipfs","value":"fn http_link_ipfs(Url) -> Result<Url, String>","parent":null,"children":[],"decl_id":null,"docs":" Returns a HTTP url for an IPFS object.\n","sig":null,"attributes":[{"value":"/ Returns a HTTP url for an IPFS object.","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/erc.rs","byte_start":247735,"byte_end":247777,"line_start":91,"line_end":91,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":1766},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":1300,"byte_end":1316,"line_start":49,"line_end":49,"column_start":10,"column_end":26},"name":"EscalationPolicy","qualname":"::EscalationPolicy","value":"Box<dyn Fn(U256, usize) -> U256 + Send + Sync>","parent":null,"children":[],"decl_id":null,"docs":" A simple gas escalation policy\n","sig":null,"attributes":[{"value":"/ A simple gas escalation policy","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":1256,"byte_end":1290,"line_start":48,"line_end":48,"column_start":1,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":3735},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":1915,"byte_end":1928,"line_start":63,"line_end":63,"column_start":11,"column_end":24},"name":"JsonRpcClient","qualname":"::JsonRpcClient","value":"JsonRpcClient: Debug + Send + Sync","parent":null,"children":[{"krate":0,"index":3736},{"krate":0,"index":3737}],"decl_id":null,"docs":" Trait which must be implemented by data transports to be used with the Ethereum\n JSON-RPC provider.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3736},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":1986,"byte_end":1991,"line_start":65,"line_end":65,"column_start":10,"column_end":15},"name":"Error","qualname":"::JsonRpcClient::Error","value":"type Error: Error + Into<ProviderError>;","parent":{"krate":0,"index":3735},"children":[],"decl_id":null,"docs":" A JSON-RPC Error\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3737},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":2121,"byte_end":2128,"line_start":68,"line_end":68,"column_start":14,"column_end":21},"name":"request","qualname":"::JsonRpcClient::request","value":"fn request<'life0, 'life1, 'async_trait, T, R>(&'life0 Self, &'life1 str, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<R, Self::Error>> + ::core::marker::Send + 'async_trait>> where\nT: Debug + Serialize + Send + Sync, R: DeserializeOwned, T: 'async_trait,\nR: 'async_trait, 'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3735},"children":[],"decl_id":null,"docs":" Sends a request with the provided JSON-RPC and parameters serialized as JSON\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":1758,"byte_end":1769,"line_start":59,"line_end":59,"column_start":41,"column_end":52}},{"value":"allow(clippy :: type_complexity, clippy :: type_repetition_in_bounds)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":1758,"byte_end":1769,"line_start":59,"line_end":59,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3747},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":2121,"byte_end":2128,"line_start":68,"line_end":68,"column_start":14,"column_end":21},"name":"request","qualname":"<&'a U as JsonRpcClient>::request","value":"fn request<'life0, 'life1, 'async_trait, T, R>(&'life0 Self, &'life1 str, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<R, Self::Error>> + ::core::marker::Send + 'async_trait>> where\nT: Debug + Serialize + Send + Sync, R: DeserializeOwned, T: 'async_trait,\nR: 'async_trait, 'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3735},"children":[],"decl_id":{"krate":0,"index":3737},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3758},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":2121,"byte_end":2128,"line_start":68,"line_end":68,"column_start":14,"column_end":21},"name":"request","qualname":"<alloc::boxed::Box<U> as JsonRpcClient>::request","value":"fn request<'life0, 'life1, 'async_trait, T, R>(&'life0 Self, &'life1 str, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<R, Self::Error>> + ::core::marker::Send + 'async_trait>> where\nT: Debug + Serialize + Send + Sync, R: DeserializeOwned, T: 'async_trait,\nR: 'async_trait, 'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3735},"children":[],"decl_id":{"krate":0,"index":3737},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3769},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":2121,"byte_end":2128,"line_start":68,"line_end":68,"column_start":14,"column_end":21},"name":"request","qualname":"<alloc::sync::Arc<U> as JsonRpcClient>::request","value":"fn request<'life0, 'life1, 'async_trait, T, R>(&'life0 Self, &'life1 str, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<R, Self::Error>> + ::core::marker::Send + 'async_trait>> where\nT: Debug + Serialize + Send + Sync, R: DeserializeOwned, T: 'async_trait,\nR: 'async_trait, 'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3735},"children":[],"decl_id":{"krate":0,"index":3737},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1771},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":2316,"byte_end":2323,"line_start":75,"line_end":75,"column_start":11,"column_end":18},"name":"FromErr","qualname":"::FromErr","value":"FromErr<T>","parent":null,"children":[{"krate":0,"index":1773}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1773},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":2336,"byte_end":2340,"line_start":76,"line_end":76,"column_start":8,"column_end":12},"name":"from","qualname":"::FromErr::from","value":"fn from(T) -> Self","parent":{"krate":0,"index":1771},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1774},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":2448,"byte_end":2453,"line_start":80,"line_end":80,"column_start":14,"column_end":19},"name":"maybe","qualname":"::maybe","value":"async fn maybe<F, T, E>(Option<T>, F) -> /*impl Trait*/ where F: Future<Output\n= Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Calls the future if `item` is None, otherwise returns a `futures::ok`\n","sig":null,"attributes":[{"value":"/ Calls the future if `item` is None, otherwise returns a `futures::ok`","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":2361,"byte_end":2434,"line_start":79,"line_end":79,"column_start":1,"column_end":74}}]},{"kind":"Trait","id":{"krate":0,"index":3775},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4725,"byte_end":4735,"line_start":150,"line_end":150,"column_start":11,"column_end":21},"name":"Middleware","qualname":"::Middleware","value":"Middleware: Sync + Send + Debug","parent":null,"children":[{"krate":0,"index":3776},{"krate":0,"index":3777},{"krate":0,"index":3778},{"krate":0,"index":3779},{"krate":0,"index":3780},{"krate":0,"index":3781},{"krate":0,"index":3782},{"krate":0,"index":3786},{"krate":0,"index":3791},{"krate":0,"index":3795},{"krate":0,"index":3800},{"krate":0,"index":3809},{"krate":0,"index":3814},{"krate":0,"index":3818},{"krate":0,"index":3823},{"krate":0,"index":3827},{"krate":0,"index":3833},{"krate":0,"index":3838},{"krate":0,"index":3843},{"krate":0,"index":3848},{"krate":0,"index":3853},{"krate":0,"index":3858},{"krate":0,"index":3863},{"krate":0,"index":3868},{"krate":0,"index":3872},{"krate":0,"index":3876},{"krate":0,"index":3880},{"krate":0,"index":3885},{"krate":0,"index":3890},{"krate":0,"index":3895},{"krate":0,"index":3900},{"krate":0,"index":3904},{"krate":0,"index":3908},{"krate":0,"index":3912},{"krate":0,"index":3916},{"krate":0,"index":3920},{"krate":0,"index":3926},{"krate":0,"index":3931},{"krate":0,"index":3936},{"krate":0,"index":3938},{"krate":0,"index":3943},{"krate":0,"index":3948},{"krate":0,"index":3953},{"krate":0,"index":3957},{"krate":0,"index":3963},{"krate":0,"index":3967},{"krate":0,"index":3972},{"krate":0,"index":3977},{"krate":0,"index":3982},{"krate":0,"index":3986},{"krate":0,"index":3990},{"krate":0,"index":3994},{"krate":0,"index":3998},{"krate":0,"index":4003},{"krate":0,"index":4008},{"krate":0,"index":4012},{"krate":0,"index":4016},{"krate":0,"index":4020},{"krate":0,"index":4024},{"krate":0,"index":4028},{"krate":0,"index":4033},{"krate":0,"index":4037},{"krate":0,"index":4042},{"krate":0,"index":4048},{"krate":0,"index":4053},{"krate":0,"index":4057},{"krate":0,"index":4061},{"krate":0,"index":4066},{"krate":0,"index":4072}],"decl_id":null,"docs":" A middleware allows customizing requests send and received from an ethereum node.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3776},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4768,"byte_end":4773,"line_start":151,"line_end":151,"column_start":10,"column_end":15},"name":"Error","qualname":"::Middleware::Error","value":"type Error: Sync + Send + Error + FromErr<<Self::Inner as Middleware>::Error>;","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3777},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4851,"byte_end":4859,"line_start":152,"line_end":152,"column_start":10,"column_end":18},"name":"Provider","qualname":"::Middleware::Provider","value":"type Provider: JsonRpcClient;","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3778},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4885,"byte_end":4890,"line_start":153,"line_end":153,"column_start":10,"column_end":15},"name":"Inner","qualname":"::Middleware::Inner","value":"type Inner: Middleware<Provider = Self::Provider>;","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3779},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4980,"byte_end":4985,"line_start":156,"line_end":156,"column_start":8,"column_end":13},"name":"inner","qualname":"::Middleware::inner","value":"fn inner<'_>(&'_ Self) -> &'_ Self::Inner","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":" The next middleware in the stack\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3780},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":5058,"byte_end":5066,"line_start":159,"line_end":159,"column_start":8,"column_end":16},"name":"provider","qualname":"::Middleware::provider","value":"fn provider<'_>(&'_ Self) -> &'_ Provider<Self::Provider>","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":" The HTTP or Websocket provider.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3781},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":5151,"byte_end":5165,"line_start":163,"line_end":163,"column_start":8,"column_end":22},"name":"default_sender","qualname":"::Middleware::default_sender","value":"fn default_sender<'_>(&'_ Self) -> Option<Address>","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3782},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":5252,"byte_end":5266,"line_start":167,"line_end":167,"column_start":14,"column_end":28},"name":"client_version","qualname":"::Middleware::client_version","value":"fn client_version<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<String, Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3786},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":6229,"byte_end":6245,"line_start":188,"line_end":188,"column_start":14,"column_end":30},"name":"fill_transaction","qualname":"::Middleware::fill_transaction","value":"fn fill_transaction<'life0, 'life1,\n'async_trait>(&'life0 Self, &'life1 mut TypedTransaction, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<(), Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":" Fill necessary details of a transaction for dispatch","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3791},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":6462,"byte_end":6478,"line_start":196,"line_end":196,"column_start":14,"column_end":30},"name":"get_block_number","qualname":"::Middleware::get_block_number","value":"fn get_block_number<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<U64, Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3795},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":6605,"byte_end":6621,"line_start":200,"line_end":200,"column_start":14,"column_end":30},"name":"send_transaction","qualname":"::Middleware::send_transaction","value":"fn send_transaction<'life0, 'async_trait, T>(&'life0 Self, T, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<PendingTransaction, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where T: 'async_trait + Into<TypedTransaction> + Send +\nSync, 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3800},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":7224,"byte_end":7239,"line_start":215,"line_end":215,"column_start":14,"column_end":29},"name":"send_escalating","qualname":"::Middleware::send_escalating","value":"fn send_escalating<'a, 'life0,\n'async_trait>(&'a Self, &'life0 TypedTransaction, usize, EscalationPolicy)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<EscalatingPending, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where 'a:'async_trait, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":" Send a transaction with a simple escalation policy.","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3809},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":8663,"byte_end":8675,"line_start":254,"line_end":254,"column_start":14,"column_end":26},"name":"resolve_name","qualname":"::Middleware::resolve_name","value":"fn resolve_name<'life0, 'life1, 'async_trait>(&'life0 Self, &'life1 str)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Address, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3814},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":8826,"byte_end":8840,"line_start":258,"line_end":258,"column_start":14,"column_end":28},"name":"lookup_address","qualname":"::Middleware::lookup_address","value":"fn lookup_address<'life0, 'async_trait>(&'life0 Self, Address)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<String, Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3818},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":8993,"byte_end":9007,"line_start":262,"line_end":262,"column_start":14,"column_end":28},"name":"resolve_avatar","qualname":"::Middleware::resolve_avatar","value":"fn resolve_avatar<'life0, 'life1, 'async_trait>(&'life0 Self, &'life1 str)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Url, Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3823},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":9156,"byte_end":9167,"line_start":266,"line_end":266,"column_start":14,"column_end":25},"name":"resolve_nft","qualname":"::Middleware::resolve_nft","value":"fn resolve_nft<'life0, 'async_trait>(&'life0 Self, erc::ERCNFT)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Url, Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3827},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":9314,"byte_end":9327,"line_start":270,"line_end":270,"column_start":14,"column_end":27},"name":"resolve_field","qualname":"::Middleware::resolve_field","value":"fn resolve_field<'life0, 'life1, 'life2,\n'async_trait>(&'life0 Self, &'life1 str, &'life2 str)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<String, Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, 'life1:'async_trait, 'life2:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3833},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":9498,"byte_end":9507,"line_start":274,"line_end":274,"column_start":14,"column_end":23},"name":"get_block","qualname":"::Middleware::get_block","value":"fn get_block<'life0, 'async_trait, T>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Option<Block<TxHash>>, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where T: 'async_trait + Into<BlockId> + Send + Sync,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3838},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":9745,"byte_end":9763,"line_start":281,"line_end":281,"column_start":14,"column_end":32},"name":"get_block_with_txs","qualname":"::Middleware::get_block_with_txs","value":"fn get_block_with_txs<'life0, 'async_trait, T>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Option<Block<Transaction>>, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where T: 'async_trait + Into<BlockId> + Send + Sync,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3843},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":10015,"byte_end":10030,"line_start":288,"line_end":288,"column_start":14,"column_end":29},"name":"get_uncle_count","qualname":"::Middleware::get_uncle_count","value":"fn get_uncle_count<'life0, 'async_trait, T>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<U256, Self::Error>> + ::core::marker::Send + 'async_trait>> where\nT: 'async_trait + Into<BlockId> + Send + Sync, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3848},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":10257,"byte_end":10266,"line_start":295,"line_end":295,"column_start":14,"column_end":23},"name":"get_uncle","qualname":"::Middleware::get_uncle","value":"fn get_uncle<'life0, 'async_trait, T>(&'life0 Self, T, U64)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Option<Block<H256>>, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where T: 'async_trait + Into<BlockId> + Send + Sync,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3853},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":10525,"byte_end":10546,"line_start":303,"line_end":303,"column_start":14,"column_end":35},"name":"get_transaction_count","qualname":"::Middleware::get_transaction_count","value":"fn get_transaction_count<'life0, 'async_trait,\nT>(&'life0 Self, T, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<U256, Self::Error>> + ::core::marker::Send + 'async_trait>> where\nT: 'async_trait + Into<NameOrAddress> + Send + Sync, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3858},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":10792,"byte_end":10804,"line_start":311,"line_end":311,"column_start":14,"column_end":26},"name":"estimate_gas","qualname":"::Middleware::estimate_gas","value":"fn estimate_gas<'life0, 'life1,\n'async_trait>(&'life0 Self, &'life1 TypedTransaction, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<U256, Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3863},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":11015,"byte_end":11019,"line_start":319,"line_end":319,"column_start":14,"column_end":18},"name":"call","qualname":"::Middleware::call","value":"fn call<'life0, 'life1,\n'async_trait>(&'life0 Self, &'life1 TypedTransaction, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Bytes, Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3868},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":11223,"byte_end":11230,"line_start":327,"line_end":327,"column_start":14,"column_end":21},"name":"syncing","qualname":"::Middleware::syncing","value":"fn syncing<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<SyncingStatus, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3872},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":11358,"byte_end":11369,"line_start":331,"line_end":331,"column_start":14,"column_end":25},"name":"get_chainid","qualname":"::Middleware::get_chainid","value":"fn get_chainid<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<U256, Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3876},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":11492,"byte_end":11507,"line_start":335,"line_end":335,"column_start":14,"column_end":29},"name":"get_net_version","qualname":"::Middleware::get_net_version","value":"fn get_net_version<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<String, Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3880},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":11636,"byte_end":11647,"line_start":339,"line_end":339,"column_start":14,"column_end":25},"name":"get_balance","qualname":"::Middleware::get_balance","value":"fn get_balance<'life0, 'async_trait, T>(&'life0 Self, T, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<U256, Self::Error>> + ::core::marker::Send + 'async_trait>> where\nT: 'async_trait + Into<NameOrAddress> + Send + Sync, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3885},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":11883,"byte_end":11898,"line_start":347,"line_end":347,"column_start":14,"column_end":29},"name":"get_transaction","qualname":"::Middleware::get_transaction","value":"fn get_transaction<'life0, 'async_trait, T>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Option<Transaction>, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where T: 'async_trait + Send + Sync + Into<TxHash>,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3890},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":12131,"byte_end":12154,"line_start":354,"line_end":354,"column_start":14,"column_end":37},"name":"get_transaction_receipt","qualname":"::Middleware::get_transaction_receipt","value":"fn get_transaction_receipt<'life0, 'async_trait, T>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Option<TransactionReceipt>, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where T: 'async_trait + Send + Sync + Into<TxHash>,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3895},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":12402,"byte_end":12420,"line_start":361,"line_end":361,"column_start":14,"column_end":32},"name":"get_block_receipts","qualname":"::Middleware::get_block_receipts","value":"fn get_block_receipts<'life0, 'async_trait, T>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<TransactionReceipt>, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where T: 'async_trait + Into<BlockNumber> + Send + Sync,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3900},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":12643,"byte_end":12656,"line_start":368,"line_end":368,"column_start":14,"column_end":27},"name":"get_gas_price","qualname":"::Middleware::get_gas_price","value":"fn get_gas_price<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<U256, Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3904},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":12781,"byte_end":12802,"line_start":372,"line_end":372,"column_start":14,"column_end":35},"name":"estimate_eip1559_fees","qualname":"::Middleware::estimate_eip1559_fees","value":"fn estimate_eip1559_fees<'life0,\n'async_trait>(&'life0 Self,\nOption<fn(: U256, : Vec<Vec<U256>>) -> (U256, U256)>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<(U256, U256), Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3908},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":13036,"byte_end":13048,"line_start":379,"line_end":379,"column_start":14,"column_end":26},"name":"get_accounts","qualname":"::Middleware::get_accounts","value":"fn get_accounts<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<Address>, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3912},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":13180,"byte_end":13200,"line_start":383,"line_end":383,"column_start":14,"column_end":34},"name":"send_raw_transaction","qualname":"::Middleware::send_raw_transaction","value":"fn send_raw_transaction<'a, 'async_trait>(&'a Self, Bytes)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<PendingTransaction, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where 'a:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3916},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":13698,"byte_end":13707,"line_start":393,"line_end":393,"column_start":14,"column_end":23},"name":"is_signer","qualname":"::Middleware::is_signer","value":"fn is_signer<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output = bool> +\n    ::core::marker::Send + 'async_trait>> where 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":" This returns true if either the middleware stack contains a `SignerMiddleware`, or the\n JSON-RPC provider has an unlocked key that can sign using the `eth_sign` call. If none of\n the above conditions are met, then the middleware stack is not capable of signing data.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3920},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":13784,"byte_end":13788,"line_start":397,"line_end":397,"column_start":14,"column_end":18},"name":"sign","qualname":"::Middleware::sign","value":"fn sign<'life0, 'life1, 'async_trait, T>(&'life0 Self, T, &'life1 Address)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Signature, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere T: 'async_trait + Into<Bytes> + Send + Sync, 'life0:'async_trait,\n'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3926},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":14045,"byte_end":14061,"line_start":406,"line_end":406,"column_start":14,"column_end":30},"name":"sign_transaction","qualname":"::Middleware::sign_transaction","value":"fn sign_transaction<'life0, 'life1,\n'async_trait>(&'life0 Self, &'life1 TypedTransaction, Address)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Signature, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":" Sign a transaction via RPC call\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3931},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":14298,"byte_end":14306,"line_start":416,"line_end":416,"column_start":14,"column_end":22},"name":"get_logs","qualname":"::Middleware::get_logs","value":"fn get_logs<'life0, 'life1, 'async_trait>(&'life0 Self, &'life1 Filter)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<Log>, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3936},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":14519,"byte_end":14537,"line_start":421,"line_end":421,"column_start":8,"column_end":26},"name":"get_logs_paginated","qualname":"::Middleware::get_logs_paginated","value":"fn get_logs_paginated<'a, '_>(&'a Self, &'_ Filter, u64) -> LogQuery","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":" Returns a stream of logs are loaded in pages of given page size\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3938},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":14729,"byte_end":14739,"line_start":429,"line_end":429,"column_start":14,"column_end":24},"name":"new_filter","qualname":"::Middleware::new_filter","value":"fn new_filter<'life0, 'life1, 'async_trait>(&'life0 Self, FilterKind)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<U256, Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3943},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":14891,"byte_end":14907,"line_start":433,"line_end":433,"column_start":14,"column_end":30},"name":"uninstall_filter","qualname":"::Middleware::uninstall_filter","value":"fn uninstall_filter<'life0, 'async_trait, T>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<bool, Self::Error>> + ::core::marker::Send + 'async_trait>> where\nT: 'async_trait + Into<U256> + Send + Sync, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3948},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":15096,"byte_end":15101,"line_start":440,"line_end":440,"column_start":14,"column_end":19},"name":"watch","qualname":"::Middleware::watch","value":"fn watch<'a, 'life0, 'async_trait>(&'a Self, &'life0 Filter)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<FilterWatcher, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where 'a:'async_trait, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3953},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":15305,"byte_end":15331,"line_start":447,"line_end":447,"column_start":14,"column_end":40},"name":"watch_pending_transactions","qualname":"::Middleware::watch_pending_transactions","value":"fn watch_pending_transactions<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<FilterWatcher, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3957},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":15519,"byte_end":15537,"line_start":453,"line_end":453,"column_start":14,"column_end":32},"name":"get_filter_changes","qualname":"::Middleware::get_filter_changes","value":"fn get_filter_changes<'life0, 'async_trait, T, R>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<R>, Self::Error>> + ::core::marker::Send + 'async_trait>> where\nT: Into<U256> + Send + Sync, R: Serialize + DeserializeOwned + Send + Sync +\nDebug, T: 'async_trait, R: 'async_trait, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3963},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":15798,"byte_end":15810,"line_start":461,"line_end":461,"column_start":14,"column_end":26},"name":"watch_blocks","qualname":"::Middleware::watch_blocks","value":"fn watch_blocks<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<FilterWatcher, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3967},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":15969,"byte_end":15977,"line_start":465,"line_end":465,"column_start":14,"column_end":22},"name":"get_code","qualname":"::Middleware::get_code","value":"fn get_code<'life0, 'async_trait, T>(&'life0 Self, T, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Bytes, Self::Error>> + ::core::marker::Send + 'async_trait>> where\nT: 'async_trait + Into<NameOrAddress> + Send + Sync, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3972},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":16207,"byte_end":16221,"line_start":473,"line_end":473,"column_start":14,"column_end":28},"name":"get_storage_at","qualname":"::Middleware::get_storage_at","value":"fn get_storage_at<'life0, 'async_trait,\nT>(&'life0 Self, T, H256, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<H256, Self::Error>> + ::core::marker::Send + 'async_trait>> where\nT: 'async_trait + Into<NameOrAddress> + Send + Sync, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3977},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":16494,"byte_end":16503,"line_start":482,"line_end":482,"column_start":14,"column_end":23},"name":"get_proof","qualname":"::Middleware::get_proof","value":"fn get_proof<'life0, 'async_trait,\nT>(&'life0 Self, T, Vec<H256>, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<EIP1186ProofResponse, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where T: 'async_trait + Into<NameOrAddress> + Send + Sync,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3982},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":16836,"byte_end":16850,"line_start":493,"line_end":493,"column_start":14,"column_end":28},"name":"txpool_content","qualname":"::Middleware::txpool_content","value":"fn txpool_content<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<TxpoolContent, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3986},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":16985,"byte_end":16999,"line_start":497,"line_end":497,"column_start":14,"column_end":28},"name":"txpool_inspect","qualname":"::Middleware::txpool_inspect","value":"fn txpool_inspect<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<TxpoolInspect, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3990},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":17134,"byte_end":17147,"line_start":501,"line_end":501,"column_start":14,"column_end":27},"name":"txpool_status","qualname":"::Middleware::txpool_status","value":"fn txpool_status<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<TxpoolStatus, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3994},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":17460,"byte_end":17483,"line_start":508,"line_end":508,"column_start":14,"column_end":37},"name":"debug_trace_transaction","qualname":"::Middleware::debug_trace_transaction","value":"fn debug_trace_transaction<'life0,\n'async_trait>(&'life0 Self, TxHash, GethDebugTracingOptions)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<GethTrace, ProviderError>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":" After replaying any previous transactions in the same block,\n Replays a transaction, returning the traces configured with passed options\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3998},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":17845,"byte_end":17855,"line_start":519,"line_end":519,"column_start":14,"column_end":24},"name":"trace_call","qualname":"::Middleware::trace_call","value":"fn trace_call<'life0, 'async_trait,\nT>(&'life0 Self, T, Vec<TraceType>, Option<BlockNumber>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<BlockTrace, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere T: 'async_trait + Into<TypedTransaction> + Send + Sync,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":" Executes the given call and returns a number of possible traces for it\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4003},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":18149,"byte_end":18164,"line_start":528,"line_end":528,"column_start":14,"column_end":29},"name":"trace_call_many","qualname":"::Middleware::trace_call_many","value":"fn trace_call_many<'life0, 'async_trait,\nT>(&'life0 Self, Vec<(T, Vec<TraceType>)>, Option<BlockNumber>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<BlockTrace>, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where T: 'async_trait + Into<TypedTransaction> + Send +\nSync, 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4008},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":18539,"byte_end":18560,"line_start":537,"line_end":537,"column_start":14,"column_end":35},"name":"trace_raw_transaction","qualname":"::Middleware::trace_raw_transaction","value":"fn trace_raw_transaction<'life0,\n'async_trait>(&'life0 Self, Bytes, Vec<TraceType>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<BlockTrace, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":" Traces a call to `eth_sendRawTransaction` without making the call, returning the traces\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4012},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":18839,"byte_end":18863,"line_start":546,"line_end":546,"column_start":14,"column_end":38},"name":"trace_replay_transaction","qualname":"::Middleware::trace_replay_transaction","value":"fn trace_replay_transaction<'life0,\n'async_trait>(&'life0 Self, H256, Vec<TraceType>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<BlockTrace, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":" Replays a transaction, returning the traces\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4016},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":19188,"byte_end":19219,"line_start":555,"line_end":555,"column_start":14,"column_end":45},"name":"trace_replay_block_transactions","qualname":"::Middleware::trace_replay_block_transactions","value":"fn trace_replay_block_transactions<'life0,\n'async_trait>(&'life0 Self, BlockNumber, Vec<TraceType>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<BlockTrace>, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":" Replays all transactions in a block returning the requested traces for each transaction\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4020},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":19515,"byte_end":19526,"line_start":564,"line_end":564,"column_start":14,"column_end":25},"name":"trace_block","qualname":"::Middleware::trace_block","value":"fn trace_block<'life0, 'async_trait>(&'life0 Self, BlockNumber)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<Trace>, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":" Returns traces created at given block\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4024},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":19728,"byte_end":19740,"line_start":569,"line_end":569,"column_start":14,"column_end":26},"name":"trace_filter","qualname":"::Middleware::trace_filter","value":"fn trace_filter<'life0, 'async_trait>(&'life0 Self, TraceFilter)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<Trace>, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":" Return traces matching the given filter\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4028},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":19941,"byte_end":19950,"line_start":574,"line_end":574,"column_start":14,"column_end":23},"name":"trace_get","qualname":"::Middleware::trace_get","value":"fn trace_get<'life0, 'async_trait, T>(&'life0 Self, H256, Vec<T>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Trace, Self::Error>> + ::core::marker::Send + 'async_trait>> where\nT: 'async_trait + Into<U64> + Send + Sync, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":" Returns trace at the given position\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4033},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":20219,"byte_end":20236,"line_start":583,"line_end":583,"column_start":14,"column_end":31},"name":"trace_transaction","qualname":"::Middleware::trace_transaction","value":"fn trace_transaction<'life0, 'async_trait>(&'life0 Self, H256)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<Trace>, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":" Returns all traces of a given transaction\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4037},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":20488,"byte_end":20509,"line_start":590,"line_end":590,"column_start":14,"column_end":35},"name":"parity_block_receipts","qualname":"::Middleware::parity_block_receipts","value":"fn parity_block_receipts<'life0, 'async_trait, T>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<TransactionReceipt>, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where T: 'async_trait + Into<BlockNumber> + Send + Sync,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":" Returns all receipts for that block. Must be done on a parity node.\n","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4042},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":20735,"byte_end":20744,"line_start":597,"line_end":597,"column_start":14,"column_end":23},"name":"subscribe","qualname":"::Middleware::subscribe","value":"fn subscribe<'life0, 'async_trait, T, R>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<SubscriptionStream, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where T: Debug + Serialize + Send + Sync,\nR: DeserializeOwned + Send + Sync,\n<Self as Middleware>::Provider: PubsubClient, T: 'async_trait,\nR: 'async_trait, 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4048},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":21103,"byte_end":21114,"line_start":609,"line_end":609,"column_start":14,"column_end":25},"name":"unsubscribe","qualname":"::Middleware::unsubscribe","value":"fn unsubscribe<'life0, 'async_trait, T>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<bool, Self::Error>> + ::core::marker::Send + 'async_trait>> where\nT: Into<U256> + Send + Sync, <Self as Middleware>::Provider: PubsubClient,\nT: 'async_trait, 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4053},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":21354,"byte_end":21370,"line_start":617,"line_end":617,"column_start":14,"column_end":30},"name":"subscribe_blocks","qualname":"::Middleware::subscribe_blocks","value":"fn subscribe_blocks<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<SubscriptionStream, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where <Self as Middleware>::Provider: PubsubClient,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4057},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":21630,"byte_end":21651,"line_start":626,"line_end":626,"column_start":14,"column_end":35},"name":"subscribe_pending_txs","qualname":"::Middleware::subscribe_pending_txs","value":"fn subscribe_pending_txs<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<SubscriptionStream, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where <Self as Middleware>::Provider: PubsubClient,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4061},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":21909,"byte_end":21923,"line_start":635,"line_end":635,"column_start":14,"column_end":28},"name":"subscribe_logs","qualname":"::Middleware::subscribe_logs","value":"fn subscribe_logs<'a, 'life0, 'async_trait>(&'a Self, &'life0 Filter)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<SubscriptionStream, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where <Self as Middleware>::Provider: PubsubClient,\n'a:'async_trait, 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4066},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":22209,"byte_end":22220,"line_start":645,"line_end":645,"column_start":14,"column_end":25},"name":"fee_history","qualname":"::Middleware::fee_history","value":"fn fee_history<'life0, 'life1, 'async_trait,\nT>(&'life0 Self, T, BlockNumber, &'life1 [f64])\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<FeeHistory, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere T: 'async_trait + Into<U256> + serde::Serialize + Send + Sync,\n'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4072},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":22587,"byte_end":22605,"line_start":657,"line_end":657,"column_start":14,"column_end":32},"name":"create_access_list","qualname":"::Middleware::create_access_list","value":"fn create_access_list<'life0, 'life1,\n'async_trait>(&'life0 Self, &'life1 TypedTransaction, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<AccessListWithGasUsed, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where 'life0:'async_trait, 'life1:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}},{"value":"allow(clippy :: let_unit_value, clippy :: no_effect_underscore_binding,\nclippy :: shadow_same, clippy :: type_complexity, clippy ::\ntype_repetition_in_bounds, clippy :: used_underscore_binding)","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4675,"byte_end":4686,"line_start":148,"line_end":148,"column_start":41,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4083},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4980,"byte_end":4985,"line_start":156,"line_end":156,"column_start":8,"column_end":13},"name":"inner","qualname":"<&'b U as Middleware>::inner","value":"fn inner<'_>(&'_ Self) -> &'_ Self::Inner","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3779},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4084},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":5058,"byte_end":5066,"line_start":159,"line_end":159,"column_start":8,"column_end":16},"name":"provider","qualname":"<&'b U as Middleware>::provider","value":"fn provider<'_>(&'_ Self) -> &'_ Provider<Self::Provider>","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3780},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4085},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":5151,"byte_end":5165,"line_start":163,"line_end":163,"column_start":8,"column_end":22},"name":"default_sender","qualname":"<&'b U as Middleware>::default_sender","value":"fn default_sender<'_>(&'_ Self) -> Option<Address>","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3781},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4086},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":5252,"byte_end":5266,"line_start":167,"line_end":167,"column_start":14,"column_end":28},"name":"client_version","qualname":"<&'b U as Middleware>::client_version","value":"fn client_version<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<String, Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3782},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4089},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":6229,"byte_end":6245,"line_start":188,"line_end":188,"column_start":14,"column_end":30},"name":"fill_transaction","qualname":"<&'b U as Middleware>::fill_transaction","value":"fn fill_transaction<'life0, 'life1,\n'async_trait>(&'life0 Self, &'life1 mut TypedTransaction, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<(), Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3786},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4093},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":6462,"byte_end":6478,"line_start":196,"line_end":196,"column_start":14,"column_end":30},"name":"get_block_number","qualname":"<&'b U as Middleware>::get_block_number","value":"fn get_block_number<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<U64, Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3791},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4096},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":6605,"byte_end":6621,"line_start":200,"line_end":200,"column_start":14,"column_end":30},"name":"send_transaction","qualname":"<&'b U as Middleware>::send_transaction","value":"fn send_transaction<'life0, 'async_trait, T>(&'life0 Self, T, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<PendingTransaction, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where T: 'async_trait + Into<TypedTransaction> + Send +\nSync, 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3795},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4100},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":7224,"byte_end":7239,"line_start":215,"line_end":215,"column_start":14,"column_end":29},"name":"send_escalating","qualname":"<&'b U as Middleware>::send_escalating","value":"fn send_escalating<'a, 'life0,\n'async_trait>(&'a Self, &'life0 TypedTransaction, usize, EscalationPolicy)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<EscalatingPending, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where 'a:'async_trait, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3800},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4104},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":8663,"byte_end":8675,"line_start":254,"line_end":254,"column_start":14,"column_end":26},"name":"resolve_name","qualname":"<&'b U as Middleware>::resolve_name","value":"fn resolve_name<'life0, 'life1, 'async_trait>(&'life0 Self, &'life1 str)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Address, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3809},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4108},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":8826,"byte_end":8840,"line_start":258,"line_end":258,"column_start":14,"column_end":28},"name":"lookup_address","qualname":"<&'b U as Middleware>::lookup_address","value":"fn lookup_address<'life0, 'async_trait>(&'life0 Self, Address)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<String, Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3814},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4111},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":8993,"byte_end":9007,"line_start":262,"line_end":262,"column_start":14,"column_end":28},"name":"resolve_avatar","qualname":"<&'b U as Middleware>::resolve_avatar","value":"fn resolve_avatar<'life0, 'life1, 'async_trait>(&'life0 Self, &'life1 str)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Url, Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3818},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4115},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":9156,"byte_end":9167,"line_start":266,"line_end":266,"column_start":14,"column_end":25},"name":"resolve_nft","qualname":"<&'b U as Middleware>::resolve_nft","value":"fn resolve_nft<'life0, 'async_trait>(&'life0 Self, erc::ERCNFT)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Url, Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3823},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4118},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":9314,"byte_end":9327,"line_start":270,"line_end":270,"column_start":14,"column_end":27},"name":"resolve_field","qualname":"<&'b U as Middleware>::resolve_field","value":"fn resolve_field<'life0, 'life1, 'life2,\n'async_trait>(&'life0 Self, &'life1 str, &'life2 str)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<String, Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, 'life1:'async_trait, 'life2:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3827},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4123},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":9498,"byte_end":9507,"line_start":274,"line_end":274,"column_start":14,"column_end":23},"name":"get_block","qualname":"<&'b U as Middleware>::get_block","value":"fn get_block<'life0, 'async_trait, T>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Option<Block<TxHash>>, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where T: 'async_trait + Into<BlockId> + Send + Sync,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3833},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4127},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":9745,"byte_end":9763,"line_start":281,"line_end":281,"column_start":14,"column_end":32},"name":"get_block_with_txs","qualname":"<&'b U as Middleware>::get_block_with_txs","value":"fn get_block_with_txs<'life0, 'async_trait, T>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Option<Block<Transaction>>, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where T: 'async_trait + Into<BlockId> + Send + Sync,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3838},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4131},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":10015,"byte_end":10030,"line_start":288,"line_end":288,"column_start":14,"column_end":29},"name":"get_uncle_count","qualname":"<&'b U as Middleware>::get_uncle_count","value":"fn get_uncle_count<'life0, 'async_trait, T>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<U256, Self::Error>> + ::core::marker::Send + 'async_trait>> where\nT: 'async_trait + Into<BlockId> + Send + Sync, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3843},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4135},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":10257,"byte_end":10266,"line_start":295,"line_end":295,"column_start":14,"column_end":23},"name":"get_uncle","qualname":"<&'b U as Middleware>::get_uncle","value":"fn get_uncle<'life0, 'async_trait, T>(&'life0 Self, T, U64)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Option<Block<H256>>, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where T: 'async_trait + Into<BlockId> + Send + Sync,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3848},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4139},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":10525,"byte_end":10546,"line_start":303,"line_end":303,"column_start":14,"column_end":35},"name":"get_transaction_count","qualname":"<&'b U as Middleware>::get_transaction_count","value":"fn get_transaction_count<'life0, 'async_trait,\nT>(&'life0 Self, T, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<U256, Self::Error>> + ::core::marker::Send + 'async_trait>> where\nT: 'async_trait + Into<NameOrAddress> + Send + Sync, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3853},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4143},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":10792,"byte_end":10804,"line_start":311,"line_end":311,"column_start":14,"column_end":26},"name":"estimate_gas","qualname":"<&'b U as Middleware>::estimate_gas","value":"fn estimate_gas<'life0, 'life1,\n'async_trait>(&'life0 Self, &'life1 TypedTransaction, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<U256, Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3858},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4147},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":11015,"byte_end":11019,"line_start":319,"line_end":319,"column_start":14,"column_end":18},"name":"call","qualname":"<&'b U as Middleware>::call","value":"fn call<'life0, 'life1,\n'async_trait>(&'life0 Self, &'life1 TypedTransaction, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Bytes, Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3863},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4151},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":11223,"byte_end":11230,"line_start":327,"line_end":327,"column_start":14,"column_end":21},"name":"syncing","qualname":"<&'b U as Middleware>::syncing","value":"fn syncing<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<SyncingStatus, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3868},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4154},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":11358,"byte_end":11369,"line_start":331,"line_end":331,"column_start":14,"column_end":25},"name":"get_chainid","qualname":"<&'b U as Middleware>::get_chainid","value":"fn get_chainid<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<U256, Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3872},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4157},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":11492,"byte_end":11507,"line_start":335,"line_end":335,"column_start":14,"column_end":29},"name":"get_net_version","qualname":"<&'b U as Middleware>::get_net_version","value":"fn get_net_version<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<String, Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3876},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4160},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":11636,"byte_end":11647,"line_start":339,"line_end":339,"column_start":14,"column_end":25},"name":"get_balance","qualname":"<&'b U as Middleware>::get_balance","value":"fn get_balance<'life0, 'async_trait, T>(&'life0 Self, T, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<U256, Self::Error>> + ::core::marker::Send + 'async_trait>> where\nT: 'async_trait + Into<NameOrAddress> + Send + Sync, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3880},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4164},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":11883,"byte_end":11898,"line_start":347,"line_end":347,"column_start":14,"column_end":29},"name":"get_transaction","qualname":"<&'b U as Middleware>::get_transaction","value":"fn get_transaction<'life0, 'async_trait, T>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Option<Transaction>, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where T: 'async_trait + Send + Sync + Into<TxHash>,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3885},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4168},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":12131,"byte_end":12154,"line_start":354,"line_end":354,"column_start":14,"column_end":37},"name":"get_transaction_receipt","qualname":"<&'b U as Middleware>::get_transaction_receipt","value":"fn get_transaction_receipt<'life0, 'async_trait, T>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Option<TransactionReceipt>, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where T: 'async_trait + Send + Sync + Into<TxHash>,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3890},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4172},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":12402,"byte_end":12420,"line_start":361,"line_end":361,"column_start":14,"column_end":32},"name":"get_block_receipts","qualname":"<&'b U as Middleware>::get_block_receipts","value":"fn get_block_receipts<'life0, 'async_trait, T>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<TransactionReceipt>, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where T: 'async_trait + Into<BlockNumber> + Send + Sync,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3895},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4176},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":12643,"byte_end":12656,"line_start":368,"line_end":368,"column_start":14,"column_end":27},"name":"get_gas_price","qualname":"<&'b U as Middleware>::get_gas_price","value":"fn get_gas_price<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<U256, Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3900},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4179},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":12781,"byte_end":12802,"line_start":372,"line_end":372,"column_start":14,"column_end":35},"name":"estimate_eip1559_fees","qualname":"<&'b U as Middleware>::estimate_eip1559_fees","value":"fn estimate_eip1559_fees<'life0,\n'async_trait>(&'life0 Self,\nOption<fn(: U256, : Vec<Vec<U256>>) -> (U256, U256)>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<(U256, U256), Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3904},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4182},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":13036,"byte_end":13048,"line_start":379,"line_end":379,"column_start":14,"column_end":26},"name":"get_accounts","qualname":"<&'b U as Middleware>::get_accounts","value":"fn get_accounts<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<Address>, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4185},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":13180,"byte_end":13200,"line_start":383,"line_end":383,"column_start":14,"column_end":34},"name":"send_raw_transaction","qualname":"<&'b U as Middleware>::send_raw_transaction","value":"fn send_raw_transaction<'a, 'async_trait>(&'a Self, Bytes)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<PendingTransaction, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where 'a:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3912},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4188},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":13698,"byte_end":13707,"line_start":393,"line_end":393,"column_start":14,"column_end":23},"name":"is_signer","qualname":"<&'b U as Middleware>::is_signer","value":"fn is_signer<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output = bool> +\n    ::core::marker::Send + 'async_trait>> where 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3916},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4191},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":13784,"byte_end":13788,"line_start":397,"line_end":397,"column_start":14,"column_end":18},"name":"sign","qualname":"<&'b U as Middleware>::sign","value":"fn sign<'life0, 'life1, 'async_trait, T>(&'life0 Self, T, &'life1 Address)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Signature, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere T: 'async_trait + Into<Bytes> + Send + Sync, 'life0:'async_trait,\n'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3920},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4196},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":14045,"byte_end":14061,"line_start":406,"line_end":406,"column_start":14,"column_end":30},"name":"sign_transaction","qualname":"<&'b U as Middleware>::sign_transaction","value":"fn sign_transaction<'life0, 'life1,\n'async_trait>(&'life0 Self, &'life1 TypedTransaction, Address)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Signature, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3926},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4200},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":14298,"byte_end":14306,"line_start":416,"line_end":416,"column_start":14,"column_end":22},"name":"get_logs","qualname":"<&'b U as Middleware>::get_logs","value":"fn get_logs<'life0, 'life1, 'async_trait>(&'life0 Self, &'life1 Filter)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<Log>, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3931},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4204},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":14519,"byte_end":14537,"line_start":421,"line_end":421,"column_start":8,"column_end":26},"name":"get_logs_paginated","qualname":"<&'b U as Middleware>::get_logs_paginated","value":"fn get_logs_paginated<'a, '_>(&'a Self, &'_ Filter, u64) -> LogQuery","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3936},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4206},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":14729,"byte_end":14739,"line_start":429,"line_end":429,"column_start":14,"column_end":24},"name":"new_filter","qualname":"<&'b U as Middleware>::new_filter","value":"fn new_filter<'life0, 'life1, 'async_trait>(&'life0 Self, FilterKind)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<U256, Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3938},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4210},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":14891,"byte_end":14907,"line_start":433,"line_end":433,"column_start":14,"column_end":30},"name":"uninstall_filter","qualname":"<&'b U as Middleware>::uninstall_filter","value":"fn uninstall_filter<'life0, 'async_trait, T>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<bool, Self::Error>> + ::core::marker::Send + 'async_trait>> where\nT: 'async_trait + Into<U256> + Send + Sync, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3943},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4214},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":15096,"byte_end":15101,"line_start":440,"line_end":440,"column_start":14,"column_end":19},"name":"watch","qualname":"<&'b U as Middleware>::watch","value":"fn watch<'a, 'life0, 'async_trait>(&'a Self, &'life0 Filter)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<FilterWatcher, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where 'a:'async_trait, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3948},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4218},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":15305,"byte_end":15331,"line_start":447,"line_end":447,"column_start":14,"column_end":40},"name":"watch_pending_transactions","qualname":"<&'b U as Middleware>::watch_pending_transactions","value":"fn watch_pending_transactions<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<FilterWatcher, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3953},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4221},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":15519,"byte_end":15537,"line_start":453,"line_end":453,"column_start":14,"column_end":32},"name":"get_filter_changes","qualname":"<&'b U as Middleware>::get_filter_changes","value":"fn get_filter_changes<'life0, 'async_trait, T, R>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<R>, Self::Error>> + ::core::marker::Send + 'async_trait>> where\nT: Into<U256> + Send + Sync, R: Serialize + DeserializeOwned + Send + Sync +\nDebug, T: 'async_trait, R: 'async_trait, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3957},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4226},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":15798,"byte_end":15810,"line_start":461,"line_end":461,"column_start":14,"column_end":26},"name":"watch_blocks","qualname":"<&'b U as Middleware>::watch_blocks","value":"fn watch_blocks<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<FilterWatcher, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3963},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4229},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":15969,"byte_end":15977,"line_start":465,"line_end":465,"column_start":14,"column_end":22},"name":"get_code","qualname":"<&'b U as Middleware>::get_code","value":"fn get_code<'life0, 'async_trait, T>(&'life0 Self, T, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Bytes, Self::Error>> + ::core::marker::Send + 'async_trait>> where\nT: 'async_trait + Into<NameOrAddress> + Send + Sync, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3967},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4233},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":16207,"byte_end":16221,"line_start":473,"line_end":473,"column_start":14,"column_end":28},"name":"get_storage_at","qualname":"<&'b U as Middleware>::get_storage_at","value":"fn get_storage_at<'life0, 'async_trait,\nT>(&'life0 Self, T, H256, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<H256, Self::Error>> + ::core::marker::Send + 'async_trait>> where\nT: 'async_trait + Into<NameOrAddress> + Send + Sync, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3972},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4237},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":16494,"byte_end":16503,"line_start":482,"line_end":482,"column_start":14,"column_end":23},"name":"get_proof","qualname":"<&'b U as Middleware>::get_proof","value":"fn get_proof<'life0, 'async_trait,\nT>(&'life0 Self, T, Vec<H256>, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<EIP1186ProofResponse, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where T: 'async_trait + Into<NameOrAddress> + Send + Sync,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3977},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4241},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":16836,"byte_end":16850,"line_start":493,"line_end":493,"column_start":14,"column_end":28},"name":"txpool_content","qualname":"<&'b U as Middleware>::txpool_content","value":"fn txpool_content<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<TxpoolContent, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3982},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4244},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":16985,"byte_end":16999,"line_start":497,"line_end":497,"column_start":14,"column_end":28},"name":"txpool_inspect","qualname":"<&'b U as Middleware>::txpool_inspect","value":"fn txpool_inspect<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<TxpoolInspect, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3986},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4247},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":17134,"byte_end":17147,"line_start":501,"line_end":501,"column_start":14,"column_end":27},"name":"txpool_status","qualname":"<&'b U as Middleware>::txpool_status","value":"fn txpool_status<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<TxpoolStatus, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3990},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4250},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":17460,"byte_end":17483,"line_start":508,"line_end":508,"column_start":14,"column_end":37},"name":"debug_trace_transaction","qualname":"<&'b U as Middleware>::debug_trace_transaction","value":"fn debug_trace_transaction<'life0,\n'async_trait>(&'life0 Self, TxHash, GethDebugTracingOptions)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<GethTrace, ProviderError>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3994},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4253},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":17845,"byte_end":17855,"line_start":519,"line_end":519,"column_start":14,"column_end":24},"name":"trace_call","qualname":"<&'b U as Middleware>::trace_call","value":"fn trace_call<'life0, 'async_trait,\nT>(&'life0 Self, T, Vec<TraceType>, Option<BlockNumber>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<BlockTrace, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere T: 'async_trait + Into<TypedTransaction> + Send + Sync,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3998},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4257},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":18149,"byte_end":18164,"line_start":528,"line_end":528,"column_start":14,"column_end":29},"name":"trace_call_many","qualname":"<&'b U as Middleware>::trace_call_many","value":"fn trace_call_many<'life0, 'async_trait,\nT>(&'life0 Self, Vec<(T, Vec<TraceType>)>, Option<BlockNumber>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<BlockTrace>, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where T: 'async_trait + Into<TypedTransaction> + Send +\nSync, 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4003},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4261},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":18539,"byte_end":18560,"line_start":537,"line_end":537,"column_start":14,"column_end":35},"name":"trace_raw_transaction","qualname":"<&'b U as Middleware>::trace_raw_transaction","value":"fn trace_raw_transaction<'life0,\n'async_trait>(&'life0 Self, Bytes, Vec<TraceType>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<BlockTrace, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4008},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4264},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":18839,"byte_end":18863,"line_start":546,"line_end":546,"column_start":14,"column_end":38},"name":"trace_replay_transaction","qualname":"<&'b U as Middleware>::trace_replay_transaction","value":"fn trace_replay_transaction<'life0,\n'async_trait>(&'life0 Self, H256, Vec<TraceType>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<BlockTrace, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4012},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4267},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":19188,"byte_end":19219,"line_start":555,"line_end":555,"column_start":14,"column_end":45},"name":"trace_replay_block_transactions","qualname":"<&'b U as Middleware>::trace_replay_block_transactions","value":"fn trace_replay_block_transactions<'life0,\n'async_trait>(&'life0 Self, BlockNumber, Vec<TraceType>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<BlockTrace>, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4016},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4270},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":19515,"byte_end":19526,"line_start":564,"line_end":564,"column_start":14,"column_end":25},"name":"trace_block","qualname":"<&'b U as Middleware>::trace_block","value":"fn trace_block<'life0, 'async_trait>(&'life0 Self, BlockNumber)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<Trace>, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4020},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4273},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":19728,"byte_end":19740,"line_start":569,"line_end":569,"column_start":14,"column_end":26},"name":"trace_filter","qualname":"<&'b U as Middleware>::trace_filter","value":"fn trace_filter<'life0, 'async_trait>(&'life0 Self, TraceFilter)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<Trace>, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4024},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4276},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":19941,"byte_end":19950,"line_start":574,"line_end":574,"column_start":14,"column_end":23},"name":"trace_get","qualname":"<&'b U as Middleware>::trace_get","value":"fn trace_get<'life0, 'async_trait, T>(&'life0 Self, H256, Vec<T>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Trace, Self::Error>> + ::core::marker::Send + 'async_trait>> where\nT: 'async_trait + Into<U64> + Send + Sync, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4028},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4280},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":20219,"byte_end":20236,"line_start":583,"line_end":583,"column_start":14,"column_end":31},"name":"trace_transaction","qualname":"<&'b U as Middleware>::trace_transaction","value":"fn trace_transaction<'life0, 'async_trait>(&'life0 Self, H256)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<Trace>, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4033},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4283},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":20488,"byte_end":20509,"line_start":590,"line_end":590,"column_start":14,"column_end":35},"name":"parity_block_receipts","qualname":"<&'b U as Middleware>::parity_block_receipts","value":"fn parity_block_receipts<'life0, 'async_trait, T>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<TransactionReceipt>, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where T: 'async_trait + Into<BlockNumber> + Send + Sync,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4287},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":20735,"byte_end":20744,"line_start":597,"line_end":597,"column_start":14,"column_end":23},"name":"subscribe","qualname":"<&'b U as Middleware>::subscribe","value":"fn subscribe<'life0, 'async_trait, T, R>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<SubscriptionStream, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where T: Debug + Serialize + Send + Sync,\nR: DeserializeOwned + Send + Sync,\n<Self as Middleware>::Provider: PubsubClient, T: 'async_trait,\nR: 'async_trait, 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4042},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4292},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":21103,"byte_end":21114,"line_start":609,"line_end":609,"column_start":14,"column_end":25},"name":"unsubscribe","qualname":"<&'b U as Middleware>::unsubscribe","value":"fn unsubscribe<'life0, 'async_trait, T>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<bool, Self::Error>> + ::core::marker::Send + 'async_trait>> where\nT: Into<U256> + Send + Sync, <Self as Middleware>::Provider: PubsubClient,\nT: 'async_trait, 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4048},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4296},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":21354,"byte_end":21370,"line_start":617,"line_end":617,"column_start":14,"column_end":30},"name":"subscribe_blocks","qualname":"<&'b U as Middleware>::subscribe_blocks","value":"fn subscribe_blocks<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<SubscriptionStream, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where <Self as Middleware>::Provider: PubsubClient,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4053},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4299},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":21630,"byte_end":21651,"line_start":626,"line_end":626,"column_start":14,"column_end":35},"name":"subscribe_pending_txs","qualname":"<&'b U as Middleware>::subscribe_pending_txs","value":"fn subscribe_pending_txs<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<SubscriptionStream, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where <Self as Middleware>::Provider: PubsubClient,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4057},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4302},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":21909,"byte_end":21923,"line_start":635,"line_end":635,"column_start":14,"column_end":28},"name":"subscribe_logs","qualname":"<&'b U as Middleware>::subscribe_logs","value":"fn subscribe_logs<'a, 'life0, 'async_trait>(&'a Self, &'life0 Filter)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<SubscriptionStream, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where <Self as Middleware>::Provider: PubsubClient,\n'a:'async_trait, 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4061},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4306},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":22209,"byte_end":22220,"line_start":645,"line_end":645,"column_start":14,"column_end":25},"name":"fee_history","qualname":"<&'b U as Middleware>::fee_history","value":"fn fee_history<'life0, 'life1, 'async_trait,\nT>(&'life0 Self, T, BlockNumber, &'life1 [f64])\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<FeeHistory, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere T: 'async_trait + Into<U256> + serde::Serialize + Send + Sync,\n'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4311},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":22587,"byte_end":22605,"line_start":657,"line_end":657,"column_start":14,"column_end":32},"name":"create_access_list","qualname":"<&'b U as Middleware>::create_access_list","value":"fn create_access_list<'life0, 'life1,\n'async_trait>(&'life0 Self, &'life1 TypedTransaction, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<AccessListWithGasUsed, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where 'life0:'async_trait, 'life1:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4072},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4322},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4980,"byte_end":4985,"line_start":156,"line_end":156,"column_start":8,"column_end":13},"name":"inner","qualname":"<alloc::boxed::Box<U> as Middleware>::inner","value":"fn inner<'_>(&'_ Self) -> &'_ Self::Inner","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3779},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4323},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":5058,"byte_end":5066,"line_start":159,"line_end":159,"column_start":8,"column_end":16},"name":"provider","qualname":"<alloc::boxed::Box<U> as Middleware>::provider","value":"fn provider<'_>(&'_ Self) -> &'_ Provider<Self::Provider>","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3780},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4324},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":5151,"byte_end":5165,"line_start":163,"line_end":163,"column_start":8,"column_end":22},"name":"default_sender","qualname":"<alloc::boxed::Box<U> as Middleware>::default_sender","value":"fn default_sender<'_>(&'_ Self) -> Option<Address>","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3781},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4325},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":5252,"byte_end":5266,"line_start":167,"line_end":167,"column_start":14,"column_end":28},"name":"client_version","qualname":"<alloc::boxed::Box<U> as Middleware>::client_version","value":"fn client_version<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<String, Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3782},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4328},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":6229,"byte_end":6245,"line_start":188,"line_end":188,"column_start":14,"column_end":30},"name":"fill_transaction","qualname":"<alloc::boxed::Box<U> as Middleware>::fill_transaction","value":"fn fill_transaction<'life0, 'life1,\n'async_trait>(&'life0 Self, &'life1 mut TypedTransaction, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<(), Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3786},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4332},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":6462,"byte_end":6478,"line_start":196,"line_end":196,"column_start":14,"column_end":30},"name":"get_block_number","qualname":"<alloc::boxed::Box<U> as Middleware>::get_block_number","value":"fn get_block_number<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<U64, Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3791},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4335},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":6605,"byte_end":6621,"line_start":200,"line_end":200,"column_start":14,"column_end":30},"name":"send_transaction","qualname":"<alloc::boxed::Box<U> as Middleware>::send_transaction","value":"fn send_transaction<'life0, 'async_trait, T>(&'life0 Self, T, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<PendingTransaction, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where T: 'async_trait + Into<TypedTransaction> + Send +\nSync, 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3795},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4339},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":7224,"byte_end":7239,"line_start":215,"line_end":215,"column_start":14,"column_end":29},"name":"send_escalating","qualname":"<alloc::boxed::Box<U> as Middleware>::send_escalating","value":"fn send_escalating<'a, 'life0,\n'async_trait>(&'a Self, &'life0 TypedTransaction, usize, EscalationPolicy)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<EscalatingPending, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where 'a:'async_trait, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3800},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4343},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":8663,"byte_end":8675,"line_start":254,"line_end":254,"column_start":14,"column_end":26},"name":"resolve_name","qualname":"<alloc::boxed::Box<U> as Middleware>::resolve_name","value":"fn resolve_name<'life0, 'life1, 'async_trait>(&'life0 Self, &'life1 str)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Address, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3809},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4347},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":8826,"byte_end":8840,"line_start":258,"line_end":258,"column_start":14,"column_end":28},"name":"lookup_address","qualname":"<alloc::boxed::Box<U> as Middleware>::lookup_address","value":"fn lookup_address<'life0, 'async_trait>(&'life0 Self, Address)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<String, Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3814},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4350},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":8993,"byte_end":9007,"line_start":262,"line_end":262,"column_start":14,"column_end":28},"name":"resolve_avatar","qualname":"<alloc::boxed::Box<U> as Middleware>::resolve_avatar","value":"fn resolve_avatar<'life0, 'life1, 'async_trait>(&'life0 Self, &'life1 str)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Url, Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3818},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4354},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":9156,"byte_end":9167,"line_start":266,"line_end":266,"column_start":14,"column_end":25},"name":"resolve_nft","qualname":"<alloc::boxed::Box<U> as Middleware>::resolve_nft","value":"fn resolve_nft<'life0, 'async_trait>(&'life0 Self, erc::ERCNFT)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Url, Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3823},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4357},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":9314,"byte_end":9327,"line_start":270,"line_end":270,"column_start":14,"column_end":27},"name":"resolve_field","qualname":"<alloc::boxed::Box<U> as Middleware>::resolve_field","value":"fn resolve_field<'life0, 'life1, 'life2,\n'async_trait>(&'life0 Self, &'life1 str, &'life2 str)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<String, Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, 'life1:'async_trait, 'life2:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3827},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4362},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":9498,"byte_end":9507,"line_start":274,"line_end":274,"column_start":14,"column_end":23},"name":"get_block","qualname":"<alloc::boxed::Box<U> as Middleware>::get_block","value":"fn get_block<'life0, 'async_trait, T>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Option<Block<TxHash>>, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where T: 'async_trait + Into<BlockId> + Send + Sync,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3833},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4366},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":9745,"byte_end":9763,"line_start":281,"line_end":281,"column_start":14,"column_end":32},"name":"get_block_with_txs","qualname":"<alloc::boxed::Box<U> as Middleware>::get_block_with_txs","value":"fn get_block_with_txs<'life0, 'async_trait, T>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Option<Block<Transaction>>, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where T: 'async_trait + Into<BlockId> + Send + Sync,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3838},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4370},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":10015,"byte_end":10030,"line_start":288,"line_end":288,"column_start":14,"column_end":29},"name":"get_uncle_count","qualname":"<alloc::boxed::Box<U> as Middleware>::get_uncle_count","value":"fn get_uncle_count<'life0, 'async_trait, T>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<U256, Self::Error>> + ::core::marker::Send + 'async_trait>> where\nT: 'async_trait + Into<BlockId> + Send + Sync, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3843},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4374},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":10257,"byte_end":10266,"line_start":295,"line_end":295,"column_start":14,"column_end":23},"name":"get_uncle","qualname":"<alloc::boxed::Box<U> as Middleware>::get_uncle","value":"fn get_uncle<'life0, 'async_trait, T>(&'life0 Self, T, U64)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Option<Block<H256>>, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where T: 'async_trait + Into<BlockId> + Send + Sync,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3848},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4378},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":10525,"byte_end":10546,"line_start":303,"line_end":303,"column_start":14,"column_end":35},"name":"get_transaction_count","qualname":"<alloc::boxed::Box<U> as Middleware>::get_transaction_count","value":"fn get_transaction_count<'life0, 'async_trait,\nT>(&'life0 Self, T, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<U256, Self::Error>> + ::core::marker::Send + 'async_trait>> where\nT: 'async_trait + Into<NameOrAddress> + Send + Sync, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3853},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4382},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":10792,"byte_end":10804,"line_start":311,"line_end":311,"column_start":14,"column_end":26},"name":"estimate_gas","qualname":"<alloc::boxed::Box<U> as Middleware>::estimate_gas","value":"fn estimate_gas<'life0, 'life1,\n'async_trait>(&'life0 Self, &'life1 TypedTransaction, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<U256, Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3858},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4386},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":11015,"byte_end":11019,"line_start":319,"line_end":319,"column_start":14,"column_end":18},"name":"call","qualname":"<alloc::boxed::Box<U> as Middleware>::call","value":"fn call<'life0, 'life1,\n'async_trait>(&'life0 Self, &'life1 TypedTransaction, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Bytes, Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3863},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4390},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":11223,"byte_end":11230,"line_start":327,"line_end":327,"column_start":14,"column_end":21},"name":"syncing","qualname":"<alloc::boxed::Box<U> as Middleware>::syncing","value":"fn syncing<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<SyncingStatus, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3868},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4393},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":11358,"byte_end":11369,"line_start":331,"line_end":331,"column_start":14,"column_end":25},"name":"get_chainid","qualname":"<alloc::boxed::Box<U> as Middleware>::get_chainid","value":"fn get_chainid<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<U256, Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3872},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4396},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":11492,"byte_end":11507,"line_start":335,"line_end":335,"column_start":14,"column_end":29},"name":"get_net_version","qualname":"<alloc::boxed::Box<U> as Middleware>::get_net_version","value":"fn get_net_version<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<String, Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3876},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4399},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":11636,"byte_end":11647,"line_start":339,"line_end":339,"column_start":14,"column_end":25},"name":"get_balance","qualname":"<alloc::boxed::Box<U> as Middleware>::get_balance","value":"fn get_balance<'life0, 'async_trait, T>(&'life0 Self, T, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<U256, Self::Error>> + ::core::marker::Send + 'async_trait>> where\nT: 'async_trait + Into<NameOrAddress> + Send + Sync, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3880},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4403},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":11883,"byte_end":11898,"line_start":347,"line_end":347,"column_start":14,"column_end":29},"name":"get_transaction","qualname":"<alloc::boxed::Box<U> as Middleware>::get_transaction","value":"fn get_transaction<'life0, 'async_trait, T>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Option<Transaction>, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where T: 'async_trait + Send + Sync + Into<TxHash>,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3885},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4407},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":12131,"byte_end":12154,"line_start":354,"line_end":354,"column_start":14,"column_end":37},"name":"get_transaction_receipt","qualname":"<alloc::boxed::Box<U> as Middleware>::get_transaction_receipt","value":"fn get_transaction_receipt<'life0, 'async_trait, T>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Option<TransactionReceipt>, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where T: 'async_trait + Send + Sync + Into<TxHash>,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3890},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4411},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":12402,"byte_end":12420,"line_start":361,"line_end":361,"column_start":14,"column_end":32},"name":"get_block_receipts","qualname":"<alloc::boxed::Box<U> as Middleware>::get_block_receipts","value":"fn get_block_receipts<'life0, 'async_trait, T>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<TransactionReceipt>, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where T: 'async_trait + Into<BlockNumber> + Send + Sync,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3895},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4415},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":12643,"byte_end":12656,"line_start":368,"line_end":368,"column_start":14,"column_end":27},"name":"get_gas_price","qualname":"<alloc::boxed::Box<U> as Middleware>::get_gas_price","value":"fn get_gas_price<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<U256, Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3900},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4418},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":12781,"byte_end":12802,"line_start":372,"line_end":372,"column_start":14,"column_end":35},"name":"estimate_eip1559_fees","qualname":"<alloc::boxed::Box<U> as Middleware>::estimate_eip1559_fees","value":"fn estimate_eip1559_fees<'life0,\n'async_trait>(&'life0 Self,\nOption<fn(: U256, : Vec<Vec<U256>>) -> (U256, U256)>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<(U256, U256), Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3904},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4421},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":13036,"byte_end":13048,"line_start":379,"line_end":379,"column_start":14,"column_end":26},"name":"get_accounts","qualname":"<alloc::boxed::Box<U> as Middleware>::get_accounts","value":"fn get_accounts<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<Address>, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4424},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":13180,"byte_end":13200,"line_start":383,"line_end":383,"column_start":14,"column_end":34},"name":"send_raw_transaction","qualname":"<alloc::boxed::Box<U> as Middleware>::send_raw_transaction","value":"fn send_raw_transaction<'a, 'async_trait>(&'a Self, Bytes)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<PendingTransaction, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where 'a:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3912},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4427},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":13698,"byte_end":13707,"line_start":393,"line_end":393,"column_start":14,"column_end":23},"name":"is_signer","qualname":"<alloc::boxed::Box<U> as Middleware>::is_signer","value":"fn is_signer<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output = bool> +\n    ::core::marker::Send + 'async_trait>> where 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3916},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4430},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":13784,"byte_end":13788,"line_start":397,"line_end":397,"column_start":14,"column_end":18},"name":"sign","qualname":"<alloc::boxed::Box<U> as Middleware>::sign","value":"fn sign<'life0, 'life1, 'async_trait, T>(&'life0 Self, T, &'life1 Address)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Signature, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere T: 'async_trait + Into<Bytes> + Send + Sync, 'life0:'async_trait,\n'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3920},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4435},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":14045,"byte_end":14061,"line_start":406,"line_end":406,"column_start":14,"column_end":30},"name":"sign_transaction","qualname":"<alloc::boxed::Box<U> as Middleware>::sign_transaction","value":"fn sign_transaction<'life0, 'life1,\n'async_trait>(&'life0 Self, &'life1 TypedTransaction, Address)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Signature, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3926},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4439},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":14298,"byte_end":14306,"line_start":416,"line_end":416,"column_start":14,"column_end":22},"name":"get_logs","qualname":"<alloc::boxed::Box<U> as Middleware>::get_logs","value":"fn get_logs<'life0, 'life1, 'async_trait>(&'life0 Self, &'life1 Filter)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<Log>, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3931},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4443},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":14519,"byte_end":14537,"line_start":421,"line_end":421,"column_start":8,"column_end":26},"name":"get_logs_paginated","qualname":"<alloc::boxed::Box<U> as Middleware>::get_logs_paginated","value":"fn get_logs_paginated<'a, '_>(&'a Self, &'_ Filter, u64) -> LogQuery","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3936},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4445},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":14729,"byte_end":14739,"line_start":429,"line_end":429,"column_start":14,"column_end":24},"name":"new_filter","qualname":"<alloc::boxed::Box<U> as Middleware>::new_filter","value":"fn new_filter<'life0, 'life1, 'async_trait>(&'life0 Self, FilterKind)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<U256, Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3938},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4449},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":14891,"byte_end":14907,"line_start":433,"line_end":433,"column_start":14,"column_end":30},"name":"uninstall_filter","qualname":"<alloc::boxed::Box<U> as Middleware>::uninstall_filter","value":"fn uninstall_filter<'life0, 'async_trait, T>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<bool, Self::Error>> + ::core::marker::Send + 'async_trait>> where\nT: 'async_trait + Into<U256> + Send + Sync, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3943},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4453},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":15096,"byte_end":15101,"line_start":440,"line_end":440,"column_start":14,"column_end":19},"name":"watch","qualname":"<alloc::boxed::Box<U> as Middleware>::watch","value":"fn watch<'a, 'life0, 'async_trait>(&'a Self, &'life0 Filter)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<FilterWatcher, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where 'a:'async_trait, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3948},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4457},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":15305,"byte_end":15331,"line_start":447,"line_end":447,"column_start":14,"column_end":40},"name":"watch_pending_transactions","qualname":"<alloc::boxed::Box<U> as Middleware>::watch_pending_transactions","value":"fn watch_pending_transactions<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<FilterWatcher, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3953},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4460},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":15519,"byte_end":15537,"line_start":453,"line_end":453,"column_start":14,"column_end":32},"name":"get_filter_changes","qualname":"<alloc::boxed::Box<U> as Middleware>::get_filter_changes","value":"fn get_filter_changes<'life0, 'async_trait, T, R>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<R>, Self::Error>> + ::core::marker::Send + 'async_trait>> where\nT: Into<U256> + Send + Sync, R: Serialize + DeserializeOwned + Send + Sync +\nDebug, T: 'async_trait, R: 'async_trait, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3957},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4465},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":15798,"byte_end":15810,"line_start":461,"line_end":461,"column_start":14,"column_end":26},"name":"watch_blocks","qualname":"<alloc::boxed::Box<U> as Middleware>::watch_blocks","value":"fn watch_blocks<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<FilterWatcher, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3963},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4468},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":15969,"byte_end":15977,"line_start":465,"line_end":465,"column_start":14,"column_end":22},"name":"get_code","qualname":"<alloc::boxed::Box<U> as Middleware>::get_code","value":"fn get_code<'life0, 'async_trait, T>(&'life0 Self, T, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Bytes, Self::Error>> + ::core::marker::Send + 'async_trait>> where\nT: 'async_trait + Into<NameOrAddress> + Send + Sync, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3967},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4472},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":16207,"byte_end":16221,"line_start":473,"line_end":473,"column_start":14,"column_end":28},"name":"get_storage_at","qualname":"<alloc::boxed::Box<U> as Middleware>::get_storage_at","value":"fn get_storage_at<'life0, 'async_trait,\nT>(&'life0 Self, T, H256, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<H256, Self::Error>> + ::core::marker::Send + 'async_trait>> where\nT: 'async_trait + Into<NameOrAddress> + Send + Sync, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3972},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4476},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":16494,"byte_end":16503,"line_start":482,"line_end":482,"column_start":14,"column_end":23},"name":"get_proof","qualname":"<alloc::boxed::Box<U> as Middleware>::get_proof","value":"fn get_proof<'life0, 'async_trait,\nT>(&'life0 Self, T, Vec<H256>, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<EIP1186ProofResponse, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where T: 'async_trait + Into<NameOrAddress> + Send + Sync,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3977},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4480},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":16836,"byte_end":16850,"line_start":493,"line_end":493,"column_start":14,"column_end":28},"name":"txpool_content","qualname":"<alloc::boxed::Box<U> as Middleware>::txpool_content","value":"fn txpool_content<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<TxpoolContent, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3982},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4483},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":16985,"byte_end":16999,"line_start":497,"line_end":497,"column_start":14,"column_end":28},"name":"txpool_inspect","qualname":"<alloc::boxed::Box<U> as Middleware>::txpool_inspect","value":"fn txpool_inspect<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<TxpoolInspect, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3986},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4486},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":17134,"byte_end":17147,"line_start":501,"line_end":501,"column_start":14,"column_end":27},"name":"txpool_status","qualname":"<alloc::boxed::Box<U> as Middleware>::txpool_status","value":"fn txpool_status<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<TxpoolStatus, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3990},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4489},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":17460,"byte_end":17483,"line_start":508,"line_end":508,"column_start":14,"column_end":37},"name":"debug_trace_transaction","qualname":"<alloc::boxed::Box<U> as Middleware>::debug_trace_transaction","value":"fn debug_trace_transaction<'life0,\n'async_trait>(&'life0 Self, TxHash, GethDebugTracingOptions)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<GethTrace, ProviderError>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3994},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4492},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":17845,"byte_end":17855,"line_start":519,"line_end":519,"column_start":14,"column_end":24},"name":"trace_call","qualname":"<alloc::boxed::Box<U> as Middleware>::trace_call","value":"fn trace_call<'life0, 'async_trait,\nT>(&'life0 Self, T, Vec<TraceType>, Option<BlockNumber>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<BlockTrace, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere T: 'async_trait + Into<TypedTransaction> + Send + Sync,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3998},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4496},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":18149,"byte_end":18164,"line_start":528,"line_end":528,"column_start":14,"column_end":29},"name":"trace_call_many","qualname":"<alloc::boxed::Box<U> as Middleware>::trace_call_many","value":"fn trace_call_many<'life0, 'async_trait,\nT>(&'life0 Self, Vec<(T, Vec<TraceType>)>, Option<BlockNumber>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<BlockTrace>, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where T: 'async_trait + Into<TypedTransaction> + Send +\nSync, 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4003},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4500},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":18539,"byte_end":18560,"line_start":537,"line_end":537,"column_start":14,"column_end":35},"name":"trace_raw_transaction","qualname":"<alloc::boxed::Box<U> as Middleware>::trace_raw_transaction","value":"fn trace_raw_transaction<'life0,\n'async_trait>(&'life0 Self, Bytes, Vec<TraceType>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<BlockTrace, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4008},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4503},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":18839,"byte_end":18863,"line_start":546,"line_end":546,"column_start":14,"column_end":38},"name":"trace_replay_transaction","qualname":"<alloc::boxed::Box<U> as Middleware>::trace_replay_transaction","value":"fn trace_replay_transaction<'life0,\n'async_trait>(&'life0 Self, H256, Vec<TraceType>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<BlockTrace, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4012},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4506},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":19188,"byte_end":19219,"line_start":555,"line_end":555,"column_start":14,"column_end":45},"name":"trace_replay_block_transactions","qualname":"<alloc::boxed::Box<U> as Middleware>::trace_replay_block_transactions","value":"fn trace_replay_block_transactions<'life0,\n'async_trait>(&'life0 Self, BlockNumber, Vec<TraceType>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<BlockTrace>, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4016},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4509},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":19515,"byte_end":19526,"line_start":564,"line_end":564,"column_start":14,"column_end":25},"name":"trace_block","qualname":"<alloc::boxed::Box<U> as Middleware>::trace_block","value":"fn trace_block<'life0, 'async_trait>(&'life0 Self, BlockNumber)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<Trace>, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4020},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4512},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":19728,"byte_end":19740,"line_start":569,"line_end":569,"column_start":14,"column_end":26},"name":"trace_filter","qualname":"<alloc::boxed::Box<U> as Middleware>::trace_filter","value":"fn trace_filter<'life0, 'async_trait>(&'life0 Self, TraceFilter)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<Trace>, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4024},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4515},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":19941,"byte_end":19950,"line_start":574,"line_end":574,"column_start":14,"column_end":23},"name":"trace_get","qualname":"<alloc::boxed::Box<U> as Middleware>::trace_get","value":"fn trace_get<'life0, 'async_trait, T>(&'life0 Self, H256, Vec<T>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Trace, Self::Error>> + ::core::marker::Send + 'async_trait>> where\nT: 'async_trait + Into<U64> + Send + Sync, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4028},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4519},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":20219,"byte_end":20236,"line_start":583,"line_end":583,"column_start":14,"column_end":31},"name":"trace_transaction","qualname":"<alloc::boxed::Box<U> as Middleware>::trace_transaction","value":"fn trace_transaction<'life0, 'async_trait>(&'life0 Self, H256)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<Trace>, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4033},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4522},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":20488,"byte_end":20509,"line_start":590,"line_end":590,"column_start":14,"column_end":35},"name":"parity_block_receipts","qualname":"<alloc::boxed::Box<U> as Middleware>::parity_block_receipts","value":"fn parity_block_receipts<'life0, 'async_trait, T>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<TransactionReceipt>, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where T: 'async_trait + Into<BlockNumber> + Send + Sync,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4526},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":20735,"byte_end":20744,"line_start":597,"line_end":597,"column_start":14,"column_end":23},"name":"subscribe","qualname":"<alloc::boxed::Box<U> as Middleware>::subscribe","value":"fn subscribe<'life0, 'async_trait, T, R>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<SubscriptionStream, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where T: Debug + Serialize + Send + Sync,\nR: DeserializeOwned + Send + Sync,\n<Self as Middleware>::Provider: PubsubClient, T: 'async_trait,\nR: 'async_trait, 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4042},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4531},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":21103,"byte_end":21114,"line_start":609,"line_end":609,"column_start":14,"column_end":25},"name":"unsubscribe","qualname":"<alloc::boxed::Box<U> as Middleware>::unsubscribe","value":"fn unsubscribe<'life0, 'async_trait, T>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<bool, Self::Error>> + ::core::marker::Send + 'async_trait>> where\nT: Into<U256> + Send + Sync, <Self as Middleware>::Provider: PubsubClient,\nT: 'async_trait, 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4048},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4535},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":21354,"byte_end":21370,"line_start":617,"line_end":617,"column_start":14,"column_end":30},"name":"subscribe_blocks","qualname":"<alloc::boxed::Box<U> as Middleware>::subscribe_blocks","value":"fn subscribe_blocks<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<SubscriptionStream, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where <Self as Middleware>::Provider: PubsubClient,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4053},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4538},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":21630,"byte_end":21651,"line_start":626,"line_end":626,"column_start":14,"column_end":35},"name":"subscribe_pending_txs","qualname":"<alloc::boxed::Box<U> as Middleware>::subscribe_pending_txs","value":"fn subscribe_pending_txs<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<SubscriptionStream, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where <Self as Middleware>::Provider: PubsubClient,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4057},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4541},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":21909,"byte_end":21923,"line_start":635,"line_end":635,"column_start":14,"column_end":28},"name":"subscribe_logs","qualname":"<alloc::boxed::Box<U> as Middleware>::subscribe_logs","value":"fn subscribe_logs<'a, 'life0, 'async_trait>(&'a Self, &'life0 Filter)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<SubscriptionStream, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where <Self as Middleware>::Provider: PubsubClient,\n'a:'async_trait, 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4061},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4545},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":22209,"byte_end":22220,"line_start":645,"line_end":645,"column_start":14,"column_end":25},"name":"fee_history","qualname":"<alloc::boxed::Box<U> as Middleware>::fee_history","value":"fn fee_history<'life0, 'life1, 'async_trait,\nT>(&'life0 Self, T, BlockNumber, &'life1 [f64])\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<FeeHistory, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere T: 'async_trait + Into<U256> + serde::Serialize + Send + Sync,\n'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4550},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":22587,"byte_end":22605,"line_start":657,"line_end":657,"column_start":14,"column_end":32},"name":"create_access_list","qualname":"<alloc::boxed::Box<U> as Middleware>::create_access_list","value":"fn create_access_list<'life0, 'life1,\n'async_trait>(&'life0 Self, &'life1 TypedTransaction, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<AccessListWithGasUsed, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where 'life0:'async_trait, 'life1:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4072},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4561},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4980,"byte_end":4985,"line_start":156,"line_end":156,"column_start":8,"column_end":13},"name":"inner","qualname":"<alloc::sync::Arc<U> as Middleware>::inner","value":"fn inner<'_>(&'_ Self) -> &'_ Self::Inner","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3779},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4562},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":5058,"byte_end":5066,"line_start":159,"line_end":159,"column_start":8,"column_end":16},"name":"provider","qualname":"<alloc::sync::Arc<U> as Middleware>::provider","value":"fn provider<'_>(&'_ Self) -> &'_ Provider<Self::Provider>","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3780},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4563},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":5151,"byte_end":5165,"line_start":163,"line_end":163,"column_start":8,"column_end":22},"name":"default_sender","qualname":"<alloc::sync::Arc<U> as Middleware>::default_sender","value":"fn default_sender<'_>(&'_ Self) -> Option<Address>","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3781},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4564},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":5252,"byte_end":5266,"line_start":167,"line_end":167,"column_start":14,"column_end":28},"name":"client_version","qualname":"<alloc::sync::Arc<U> as Middleware>::client_version","value":"fn client_version<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<String, Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3782},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4567},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":6229,"byte_end":6245,"line_start":188,"line_end":188,"column_start":14,"column_end":30},"name":"fill_transaction","qualname":"<alloc::sync::Arc<U> as Middleware>::fill_transaction","value":"fn fill_transaction<'life0, 'life1,\n'async_trait>(&'life0 Self, &'life1 mut TypedTransaction, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<(), Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3786},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4571},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":6462,"byte_end":6478,"line_start":196,"line_end":196,"column_start":14,"column_end":30},"name":"get_block_number","qualname":"<alloc::sync::Arc<U> as Middleware>::get_block_number","value":"fn get_block_number<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<U64, Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3791},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4574},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":6605,"byte_end":6621,"line_start":200,"line_end":200,"column_start":14,"column_end":30},"name":"send_transaction","qualname":"<alloc::sync::Arc<U> as Middleware>::send_transaction","value":"fn send_transaction<'life0, 'async_trait, T>(&'life0 Self, T, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<PendingTransaction, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where T: 'async_trait + Into<TypedTransaction> + Send +\nSync, 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3795},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4578},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":7224,"byte_end":7239,"line_start":215,"line_end":215,"column_start":14,"column_end":29},"name":"send_escalating","qualname":"<alloc::sync::Arc<U> as Middleware>::send_escalating","value":"fn send_escalating<'a, 'life0,\n'async_trait>(&'a Self, &'life0 TypedTransaction, usize, EscalationPolicy)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<EscalatingPending, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where 'a:'async_trait, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3800},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4582},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":8663,"byte_end":8675,"line_start":254,"line_end":254,"column_start":14,"column_end":26},"name":"resolve_name","qualname":"<alloc::sync::Arc<U> as Middleware>::resolve_name","value":"fn resolve_name<'life0, 'life1, 'async_trait>(&'life0 Self, &'life1 str)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Address, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3809},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4586},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":8826,"byte_end":8840,"line_start":258,"line_end":258,"column_start":14,"column_end":28},"name":"lookup_address","qualname":"<alloc::sync::Arc<U> as Middleware>::lookup_address","value":"fn lookup_address<'life0, 'async_trait>(&'life0 Self, Address)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<String, Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3814},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4589},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":8993,"byte_end":9007,"line_start":262,"line_end":262,"column_start":14,"column_end":28},"name":"resolve_avatar","qualname":"<alloc::sync::Arc<U> as Middleware>::resolve_avatar","value":"fn resolve_avatar<'life0, 'life1, 'async_trait>(&'life0 Self, &'life1 str)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Url, Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3818},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4593},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":9156,"byte_end":9167,"line_start":266,"line_end":266,"column_start":14,"column_end":25},"name":"resolve_nft","qualname":"<alloc::sync::Arc<U> as Middleware>::resolve_nft","value":"fn resolve_nft<'life0, 'async_trait>(&'life0 Self, erc::ERCNFT)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Url, Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3823},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4596},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":9314,"byte_end":9327,"line_start":270,"line_end":270,"column_start":14,"column_end":27},"name":"resolve_field","qualname":"<alloc::sync::Arc<U> as Middleware>::resolve_field","value":"fn resolve_field<'life0, 'life1, 'life2,\n'async_trait>(&'life0 Self, &'life1 str, &'life2 str)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<String, Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, 'life1:'async_trait, 'life2:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3827},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4601},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":9498,"byte_end":9507,"line_start":274,"line_end":274,"column_start":14,"column_end":23},"name":"get_block","qualname":"<alloc::sync::Arc<U> as Middleware>::get_block","value":"fn get_block<'life0, 'async_trait, T>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Option<Block<TxHash>>, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where T: 'async_trait + Into<BlockId> + Send + Sync,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3833},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4605},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":9745,"byte_end":9763,"line_start":281,"line_end":281,"column_start":14,"column_end":32},"name":"get_block_with_txs","qualname":"<alloc::sync::Arc<U> as Middleware>::get_block_with_txs","value":"fn get_block_with_txs<'life0, 'async_trait, T>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Option<Block<Transaction>>, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where T: 'async_trait + Into<BlockId> + Send + Sync,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3838},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4609},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":10015,"byte_end":10030,"line_start":288,"line_end":288,"column_start":14,"column_end":29},"name":"get_uncle_count","qualname":"<alloc::sync::Arc<U> as Middleware>::get_uncle_count","value":"fn get_uncle_count<'life0, 'async_trait, T>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<U256, Self::Error>> + ::core::marker::Send + 'async_trait>> where\nT: 'async_trait + Into<BlockId> + Send + Sync, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3843},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4613},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":10257,"byte_end":10266,"line_start":295,"line_end":295,"column_start":14,"column_end":23},"name":"get_uncle","qualname":"<alloc::sync::Arc<U> as Middleware>::get_uncle","value":"fn get_uncle<'life0, 'async_trait, T>(&'life0 Self, T, U64)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Option<Block<H256>>, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where T: 'async_trait + Into<BlockId> + Send + Sync,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3848},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4617},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":10525,"byte_end":10546,"line_start":303,"line_end":303,"column_start":14,"column_end":35},"name":"get_transaction_count","qualname":"<alloc::sync::Arc<U> as Middleware>::get_transaction_count","value":"fn get_transaction_count<'life0, 'async_trait,\nT>(&'life0 Self, T, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<U256, Self::Error>> + ::core::marker::Send + 'async_trait>> where\nT: 'async_trait + Into<NameOrAddress> + Send + Sync, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3853},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4621},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":10792,"byte_end":10804,"line_start":311,"line_end":311,"column_start":14,"column_end":26},"name":"estimate_gas","qualname":"<alloc::sync::Arc<U> as Middleware>::estimate_gas","value":"fn estimate_gas<'life0, 'life1,\n'async_trait>(&'life0 Self, &'life1 TypedTransaction, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<U256, Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3858},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4625},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":11015,"byte_end":11019,"line_start":319,"line_end":319,"column_start":14,"column_end":18},"name":"call","qualname":"<alloc::sync::Arc<U> as Middleware>::call","value":"fn call<'life0, 'life1,\n'async_trait>(&'life0 Self, &'life1 TypedTransaction, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Bytes, Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3863},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4629},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":11223,"byte_end":11230,"line_start":327,"line_end":327,"column_start":14,"column_end":21},"name":"syncing","qualname":"<alloc::sync::Arc<U> as Middleware>::syncing","value":"fn syncing<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<SyncingStatus, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3868},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4632},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":11358,"byte_end":11369,"line_start":331,"line_end":331,"column_start":14,"column_end":25},"name":"get_chainid","qualname":"<alloc::sync::Arc<U> as Middleware>::get_chainid","value":"fn get_chainid<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<U256, Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3872},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4635},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":11492,"byte_end":11507,"line_start":335,"line_end":335,"column_start":14,"column_end":29},"name":"get_net_version","qualname":"<alloc::sync::Arc<U> as Middleware>::get_net_version","value":"fn get_net_version<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<String, Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3876},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4638},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":11636,"byte_end":11647,"line_start":339,"line_end":339,"column_start":14,"column_end":25},"name":"get_balance","qualname":"<alloc::sync::Arc<U> as Middleware>::get_balance","value":"fn get_balance<'life0, 'async_trait, T>(&'life0 Self, T, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<U256, Self::Error>> + ::core::marker::Send + 'async_trait>> where\nT: 'async_trait + Into<NameOrAddress> + Send + Sync, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3880},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4642},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":11883,"byte_end":11898,"line_start":347,"line_end":347,"column_start":14,"column_end":29},"name":"get_transaction","qualname":"<alloc::sync::Arc<U> as Middleware>::get_transaction","value":"fn get_transaction<'life0, 'async_trait, T>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Option<Transaction>, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where T: 'async_trait + Send + Sync + Into<TxHash>,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3885},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4646},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":12131,"byte_end":12154,"line_start":354,"line_end":354,"column_start":14,"column_end":37},"name":"get_transaction_receipt","qualname":"<alloc::sync::Arc<U> as Middleware>::get_transaction_receipt","value":"fn get_transaction_receipt<'life0, 'async_trait, T>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Option<TransactionReceipt>, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where T: 'async_trait + Send + Sync + Into<TxHash>,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3890},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4650},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":12402,"byte_end":12420,"line_start":361,"line_end":361,"column_start":14,"column_end":32},"name":"get_block_receipts","qualname":"<alloc::sync::Arc<U> as Middleware>::get_block_receipts","value":"fn get_block_receipts<'life0, 'async_trait, T>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<TransactionReceipt>, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where T: 'async_trait + Into<BlockNumber> + Send + Sync,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3895},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4654},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":12643,"byte_end":12656,"line_start":368,"line_end":368,"column_start":14,"column_end":27},"name":"get_gas_price","qualname":"<alloc::sync::Arc<U> as Middleware>::get_gas_price","value":"fn get_gas_price<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<U256, Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3900},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4657},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":12781,"byte_end":12802,"line_start":372,"line_end":372,"column_start":14,"column_end":35},"name":"estimate_eip1559_fees","qualname":"<alloc::sync::Arc<U> as Middleware>::estimate_eip1559_fees","value":"fn estimate_eip1559_fees<'life0,\n'async_trait>(&'life0 Self,\nOption<fn(: U256, : Vec<Vec<U256>>) -> (U256, U256)>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<(U256, U256), Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3904},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4660},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":13036,"byte_end":13048,"line_start":379,"line_end":379,"column_start":14,"column_end":26},"name":"get_accounts","qualname":"<alloc::sync::Arc<U> as Middleware>::get_accounts","value":"fn get_accounts<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<Address>, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4663},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":13180,"byte_end":13200,"line_start":383,"line_end":383,"column_start":14,"column_end":34},"name":"send_raw_transaction","qualname":"<alloc::sync::Arc<U> as Middleware>::send_raw_transaction","value":"fn send_raw_transaction<'a, 'async_trait>(&'a Self, Bytes)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<PendingTransaction, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where 'a:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3912},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4666},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":13698,"byte_end":13707,"line_start":393,"line_end":393,"column_start":14,"column_end":23},"name":"is_signer","qualname":"<alloc::sync::Arc<U> as Middleware>::is_signer","value":"fn is_signer<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output = bool> +\n    ::core::marker::Send + 'async_trait>> where 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3916},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4669},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":13784,"byte_end":13788,"line_start":397,"line_end":397,"column_start":14,"column_end":18},"name":"sign","qualname":"<alloc::sync::Arc<U> as Middleware>::sign","value":"fn sign<'life0, 'life1, 'async_trait, T>(&'life0 Self, T, &'life1 Address)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Signature, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere T: 'async_trait + Into<Bytes> + Send + Sync, 'life0:'async_trait,\n'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3920},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4674},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":14045,"byte_end":14061,"line_start":406,"line_end":406,"column_start":14,"column_end":30},"name":"sign_transaction","qualname":"<alloc::sync::Arc<U> as Middleware>::sign_transaction","value":"fn sign_transaction<'life0, 'life1,\n'async_trait>(&'life0 Self, &'life1 TypedTransaction, Address)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Signature, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3926},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4678},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":14298,"byte_end":14306,"line_start":416,"line_end":416,"column_start":14,"column_end":22},"name":"get_logs","qualname":"<alloc::sync::Arc<U> as Middleware>::get_logs","value":"fn get_logs<'life0, 'life1, 'async_trait>(&'life0 Self, &'life1 Filter)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<Log>, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3931},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4682},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":14519,"byte_end":14537,"line_start":421,"line_end":421,"column_start":8,"column_end":26},"name":"get_logs_paginated","qualname":"<alloc::sync::Arc<U> as Middleware>::get_logs_paginated","value":"fn get_logs_paginated<'a, '_>(&'a Self, &'_ Filter, u64) -> LogQuery","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3936},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4684},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":14729,"byte_end":14739,"line_start":429,"line_end":429,"column_start":14,"column_end":24},"name":"new_filter","qualname":"<alloc::sync::Arc<U> as Middleware>::new_filter","value":"fn new_filter<'life0, 'life1, 'async_trait>(&'life0 Self, FilterKind)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<U256, Self::Error>> + ::core::marker::Send + 'async_trait>> where\n'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3938},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4688},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":14891,"byte_end":14907,"line_start":433,"line_end":433,"column_start":14,"column_end":30},"name":"uninstall_filter","qualname":"<alloc::sync::Arc<U> as Middleware>::uninstall_filter","value":"fn uninstall_filter<'life0, 'async_trait, T>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<bool, Self::Error>> + ::core::marker::Send + 'async_trait>> where\nT: 'async_trait + Into<U256> + Send + Sync, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3943},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4692},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":15096,"byte_end":15101,"line_start":440,"line_end":440,"column_start":14,"column_end":19},"name":"watch","qualname":"<alloc::sync::Arc<U> as Middleware>::watch","value":"fn watch<'a, 'life0, 'async_trait>(&'a Self, &'life0 Filter)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<FilterWatcher, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where 'a:'async_trait, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3948},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4696},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":15305,"byte_end":15331,"line_start":447,"line_end":447,"column_start":14,"column_end":40},"name":"watch_pending_transactions","qualname":"<alloc::sync::Arc<U> as Middleware>::watch_pending_transactions","value":"fn watch_pending_transactions<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<FilterWatcher, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3953},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4699},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":15519,"byte_end":15537,"line_start":453,"line_end":453,"column_start":14,"column_end":32},"name":"get_filter_changes","qualname":"<alloc::sync::Arc<U> as Middleware>::get_filter_changes","value":"fn get_filter_changes<'life0, 'async_trait, T, R>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<R>, Self::Error>> + ::core::marker::Send + 'async_trait>> where\nT: Into<U256> + Send + Sync, R: Serialize + DeserializeOwned + Send + Sync +\nDebug, T: 'async_trait, R: 'async_trait, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3957},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4704},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":15798,"byte_end":15810,"line_start":461,"line_end":461,"column_start":14,"column_end":26},"name":"watch_blocks","qualname":"<alloc::sync::Arc<U> as Middleware>::watch_blocks","value":"fn watch_blocks<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<FilterWatcher, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3963},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4707},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":15969,"byte_end":15977,"line_start":465,"line_end":465,"column_start":14,"column_end":22},"name":"get_code","qualname":"<alloc::sync::Arc<U> as Middleware>::get_code","value":"fn get_code<'life0, 'async_trait, T>(&'life0 Self, T, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Bytes, Self::Error>> + ::core::marker::Send + 'async_trait>> where\nT: 'async_trait + Into<NameOrAddress> + Send + Sync, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3967},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4711},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":16207,"byte_end":16221,"line_start":473,"line_end":473,"column_start":14,"column_end":28},"name":"get_storage_at","qualname":"<alloc::sync::Arc<U> as Middleware>::get_storage_at","value":"fn get_storage_at<'life0, 'async_trait,\nT>(&'life0 Self, T, H256, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<H256, Self::Error>> + ::core::marker::Send + 'async_trait>> where\nT: 'async_trait + Into<NameOrAddress> + Send + Sync, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3972},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4715},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":16494,"byte_end":16503,"line_start":482,"line_end":482,"column_start":14,"column_end":23},"name":"get_proof","qualname":"<alloc::sync::Arc<U> as Middleware>::get_proof","value":"fn get_proof<'life0, 'async_trait,\nT>(&'life0 Self, T, Vec<H256>, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<EIP1186ProofResponse, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where T: 'async_trait + Into<NameOrAddress> + Send + Sync,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3977},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4719},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":16836,"byte_end":16850,"line_start":493,"line_end":493,"column_start":14,"column_end":28},"name":"txpool_content","qualname":"<alloc::sync::Arc<U> as Middleware>::txpool_content","value":"fn txpool_content<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<TxpoolContent, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3982},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4722},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":16985,"byte_end":16999,"line_start":497,"line_end":497,"column_start":14,"column_end":28},"name":"txpool_inspect","qualname":"<alloc::sync::Arc<U> as Middleware>::txpool_inspect","value":"fn txpool_inspect<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<TxpoolInspect, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3986},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4725},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":17134,"byte_end":17147,"line_start":501,"line_end":501,"column_start":14,"column_end":27},"name":"txpool_status","qualname":"<alloc::sync::Arc<U> as Middleware>::txpool_status","value":"fn txpool_status<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<TxpoolStatus, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3990},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4728},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":17460,"byte_end":17483,"line_start":508,"line_end":508,"column_start":14,"column_end":37},"name":"debug_trace_transaction","qualname":"<alloc::sync::Arc<U> as Middleware>::debug_trace_transaction","value":"fn debug_trace_transaction<'life0,\n'async_trait>(&'life0 Self, TxHash, GethDebugTracingOptions)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<GethTrace, ProviderError>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3994},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4731},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":17845,"byte_end":17855,"line_start":519,"line_end":519,"column_start":14,"column_end":24},"name":"trace_call","qualname":"<alloc::sync::Arc<U> as Middleware>::trace_call","value":"fn trace_call<'life0, 'async_trait,\nT>(&'life0 Self, T, Vec<TraceType>, Option<BlockNumber>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<BlockTrace, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere T: 'async_trait + Into<TypedTransaction> + Send + Sync,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":3998},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4735},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":18149,"byte_end":18164,"line_start":528,"line_end":528,"column_start":14,"column_end":29},"name":"trace_call_many","qualname":"<alloc::sync::Arc<U> as Middleware>::trace_call_many","value":"fn trace_call_many<'life0, 'async_trait,\nT>(&'life0 Self, Vec<(T, Vec<TraceType>)>, Option<BlockNumber>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<BlockTrace>, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where T: 'async_trait + Into<TypedTransaction> + Send +\nSync, 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4003},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4739},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":18539,"byte_end":18560,"line_start":537,"line_end":537,"column_start":14,"column_end":35},"name":"trace_raw_transaction","qualname":"<alloc::sync::Arc<U> as Middleware>::trace_raw_transaction","value":"fn trace_raw_transaction<'life0,\n'async_trait>(&'life0 Self, Bytes, Vec<TraceType>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<BlockTrace, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4008},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4742},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":18839,"byte_end":18863,"line_start":546,"line_end":546,"column_start":14,"column_end":38},"name":"trace_replay_transaction","qualname":"<alloc::sync::Arc<U> as Middleware>::trace_replay_transaction","value":"fn trace_replay_transaction<'life0,\n'async_trait>(&'life0 Self, H256, Vec<TraceType>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<BlockTrace, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4012},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4745},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":19188,"byte_end":19219,"line_start":555,"line_end":555,"column_start":14,"column_end":45},"name":"trace_replay_block_transactions","qualname":"<alloc::sync::Arc<U> as Middleware>::trace_replay_block_transactions","value":"fn trace_replay_block_transactions<'life0,\n'async_trait>(&'life0 Self, BlockNumber, Vec<TraceType>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<BlockTrace>, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4016},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4748},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":19515,"byte_end":19526,"line_start":564,"line_end":564,"column_start":14,"column_end":25},"name":"trace_block","qualname":"<alloc::sync::Arc<U> as Middleware>::trace_block","value":"fn trace_block<'life0, 'async_trait>(&'life0 Self, BlockNumber)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<Trace>, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4020},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4751},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":19728,"byte_end":19740,"line_start":569,"line_end":569,"column_start":14,"column_end":26},"name":"trace_filter","qualname":"<alloc::sync::Arc<U> as Middleware>::trace_filter","value":"fn trace_filter<'life0, 'async_trait>(&'life0 Self, TraceFilter)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<Trace>, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4024},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4754},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":19941,"byte_end":19950,"line_start":574,"line_end":574,"column_start":14,"column_end":23},"name":"trace_get","qualname":"<alloc::sync::Arc<U> as Middleware>::trace_get","value":"fn trace_get<'life0, 'async_trait, T>(&'life0 Self, H256, Vec<T>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Trace, Self::Error>> + ::core::marker::Send + 'async_trait>> where\nT: 'async_trait + Into<U64> + Send + Sync, 'life0:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4028},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4758},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":20219,"byte_end":20236,"line_start":583,"line_end":583,"column_start":14,"column_end":31},"name":"trace_transaction","qualname":"<alloc::sync::Arc<U> as Middleware>::trace_transaction","value":"fn trace_transaction<'life0, 'async_trait>(&'life0 Self, H256)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<Trace>, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4033},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4761},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":20488,"byte_end":20509,"line_start":590,"line_end":590,"column_start":14,"column_end":35},"name":"parity_block_receipts","qualname":"<alloc::sync::Arc<U> as Middleware>::parity_block_receipts","value":"fn parity_block_receipts<'life0, 'async_trait, T>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<Vec<TransactionReceipt>, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where T: 'async_trait + Into<BlockNumber> + Send + Sync,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4037},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4765},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":20735,"byte_end":20744,"line_start":597,"line_end":597,"column_start":14,"column_end":23},"name":"subscribe","qualname":"<alloc::sync::Arc<U> as Middleware>::subscribe","value":"fn subscribe<'life0, 'async_trait, T, R>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<SubscriptionStream, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where T: Debug + Serialize + Send + Sync,\nR: DeserializeOwned + Send + Sync,\n<Self as Middleware>::Provider: PubsubClient, T: 'async_trait,\nR: 'async_trait, 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4042},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4770},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":21103,"byte_end":21114,"line_start":609,"line_end":609,"column_start":14,"column_end":25},"name":"unsubscribe","qualname":"<alloc::sync::Arc<U> as Middleware>::unsubscribe","value":"fn unsubscribe<'life0, 'async_trait, T>(&'life0 Self, T)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<bool, Self::Error>> + ::core::marker::Send + 'async_trait>> where\nT: Into<U256> + Send + Sync, <Self as Middleware>::Provider: PubsubClient,\nT: 'async_trait, 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4048},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4774},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":21354,"byte_end":21370,"line_start":617,"line_end":617,"column_start":14,"column_end":30},"name":"subscribe_blocks","qualname":"<alloc::sync::Arc<U> as Middleware>::subscribe_blocks","value":"fn subscribe_blocks<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<SubscriptionStream, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where <Self as Middleware>::Provider: PubsubClient,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4053},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4777},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":21630,"byte_end":21651,"line_start":626,"line_end":626,"column_start":14,"column_end":35},"name":"subscribe_pending_txs","qualname":"<alloc::sync::Arc<U> as Middleware>::subscribe_pending_txs","value":"fn subscribe_pending_txs<'life0, 'async_trait>(&'life0 Self)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<SubscriptionStream, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where <Self as Middleware>::Provider: PubsubClient,\n'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4057},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4780},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":21909,"byte_end":21923,"line_start":635,"line_end":635,"column_start":14,"column_end":28},"name":"subscribe_logs","qualname":"<alloc::sync::Arc<U> as Middleware>::subscribe_logs","value":"fn subscribe_logs<'a, 'life0, 'async_trait>(&'a Self, &'life0 Filter)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<SubscriptionStream, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where <Self as Middleware>::Provider: PubsubClient,\n'a:'async_trait, 'life0:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4061},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4784},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":22209,"byte_end":22220,"line_start":645,"line_end":645,"column_start":14,"column_end":25},"name":"fee_history","qualname":"<alloc::sync::Arc<U> as Middleware>::fee_history","value":"fn fee_history<'life0, 'life1, 'async_trait,\nT>(&'life0 Self, T, BlockNumber, &'life1 [f64])\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<FeeHistory, Self::Error>> + ::core::marker::Send + 'async_trait>>\nwhere T: 'async_trait + Into<U256> + serde::Serialize + Send + Sync,\n'life0:'async_trait, 'life1:'async_trait, Self: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4789},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":22587,"byte_end":22605,"line_start":657,"line_end":657,"column_start":14,"column_end":32},"name":"create_access_list","qualname":"<alloc::sync::Arc<U> as Middleware>::create_access_list","value":"fn create_access_list<'life0, 'life1,\n'async_trait>(&'life0 Self, &'life1 TypedTransaction, Option<BlockId>)\n->\n    ::core::pin::Pin<Box<dyn ::core::future::Future<Output =\n    Result<AccessListWithGasUsed, Self::Error>> + ::core::marker::Send +\n    'async_trait>> where 'life0:'async_trait, 'life1:'async_trait,\nSelf: 'async_trait","parent":{"krate":0,"index":3775},"children":[],"decl_id":{"krate":0,"index":4072},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1790},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":23431,"byte_end":23444,"line_start":682,"line_end":682,"column_start":9,"column_end":22},"name":"test_provider","qualname":"::test_provider","value":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","parent":null,"children":[{"krate":0,"index":1791},{"krate":0,"index":1792},{"krate":0,"index":1795},{"krate":0,"index":1798},{"krate":0,"index":1799},{"krate":0,"index":1802},{"krate":0,"index":1805},{"krate":0,"index":1808},{"krate":0,"index":1811},{"krate":0,"index":1812},{"krate":0,"index":1814},{"krate":0,"index":1816},{"krate":0,"index":4793},{"krate":0,"index":4796},{"krate":0,"index":1818}],"decl_id":null,"docs":" Pre-instantiated Infura HTTP clients which rotate through multiple API keys\n to prevent rate limits\n","sig":null,"attributes":[{"value":"/ Pre-instantiated Infura HTTP clients which rotate through multiple API keys","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":23316,"byte_end":23395,"line_start":680,"line_end":680,"column_start":1,"column_end":80}},{"value":"/ to prevent rate limits","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":23396,"byte_end":23422,"line_start":681,"line_end":681,"column_start":1,"column_end":27}}]},{"kind":"Static","id":{"krate":0,"index":1812},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":23987,"byte_end":23993,"line_start":698,"line_end":698,"column_start":16,"column_end":22},"name":"GOERLI","qualname":"::test_provider::GOERLI","value":"Lazy<TestProvider>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1814},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":24087,"byte_end":24094,"line_start":699,"line_end":699,"column_start":16,"column_end":23},"name":"MAINNET","qualname":"::test_provider::MAINNET","value":"Lazy<TestProvider>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":1816},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":24197,"byte_end":24204,"line_start":701,"line_end":701,"column_start":16,"column_end":23},"name":"ROPSTEN","qualname":"::test_provider::ROPSTEN","value":"Lazy<TestProvider>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4793},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":24329,"byte_end":24341,"line_start":705,"line_end":705,"column_start":16,"column_end":28},"name":"TestProvider","qualname":"::test_provider::TestProvider","value":"TestProvider {  }","parent":null,"children":[{"krate":0,"index":4794},{"krate":0,"index":4795}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1819},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":24472,"byte_end":24475,"line_start":711,"line_end":711,"column_start":16,"column_end":19},"name":"new","qualname":"<TestProvider>::new","value":"fn new<'_>(&'static [&'static str], &'_ str) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1820},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":24646,"byte_end":24649,"line_start":715,"line_end":715,"column_start":16,"column_end":19},"name":"url","qualname":"<TestProvider>::url","value":"fn url<'_>(&'_ Self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1821},"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":24864,"byte_end":24872,"line_start":723,"line_end":723,"column_start":16,"column_end":24},"name":"provider","qualname":"<TestProvider>::provider","value":"fn provider<'_>(&'_ Self) -> Provider<Http>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":2,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","byte_start":26889,"byte_end":26901,"line_start":24,"line_end":24,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","byte_start":27360,"byte_end":27367,"line_start":44,"line_end":44,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","byte_start":28079,"byte_end":28087,"line_start":68,"line_end":68,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":52}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","byte_start":28299,"byte_end":28314,"line_start":74,"line_end":74,"column_start":44,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","byte_start":32830,"byte_end":32843,"line_start":193,"line_end":193,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":66},{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","byte_start":33175,"byte_end":33188,"line_start":204,"line_end":204,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":37421,"byte_end":37434,"line_start":53,"line_end":53,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":37793,"byte_end":37801,"line_start":64,"line_end":64,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2063},{"krate":0,"index":2064}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":39242,"byte_end":39250,"line_start":105,"line_end":105,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":137},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":41273,"byte_end":41281,"line_start":174,"line_end":174,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":41464,"byte_end":41472,"line_start":183,"line_end":183,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":149}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":44937,"byte_end":44951,"line_start":84,"line_end":84,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":45172,"byte_end":45186,"line_start":91,"line_end":91,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":45411,"byte_end":45425,"line_start":98,"line_end":98,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":46353,"byte_end":46374,"line_start":129,"line_end":129,"column_start":21,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":46491,"byte_end":46512,"line_start":135,"line_end":135,"column_start":9,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":245},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":47260,"byte_end":47274,"line_start":162,"line_end":162,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":255}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":50185,"byte_end":50191,"line_start":238,"line_end":238,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":261}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":51050,"byte_end":51056,"line_start":261,"line_end":261,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":51926,"byte_end":51939,"line_start":287,"line_end":287,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":52143,"byte_end":52156,"line_start":293,"line_end":293,"column_start":24,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":285},{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":54266,"byte_end":54282,"line_start":345,"line_end":345,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":54773,"byte_end":54786,"line_start":364,"line_end":364,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":55724,"byte_end":55725,"line_start":388,"line_end":388,"column_start":49,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2158}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":56224,"byte_end":56227,"line_start":401,"line_end":401,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2164}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":56555,"byte_end":56558,"line_start":409,"line_end":409,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2170}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":56791,"byte_end":56792,"line_start":415,"line_end":415,"column_start":47,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":57197,"byte_end":57200,"line_start":428,"line_end":428,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":57602,"byte_end":57616,"line_start":440,"line_end":440,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2177},{"krate":0,"index":2178}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":59369,"byte_end":59381,"line_start":493,"line_end":493,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":59596,"byte_end":59608,"line_start":499,"line_end":499,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":61428,"byte_end":61442,"line_start":549,"line_end":549,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/rw.rs","byte_start":65553,"byte_end":65561,"line_start":28,"line_end":28,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/rw.rs","byte_start":67211,"byte_end":67224,"line_start":86,"line_end":86,"column_start":56,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/rw.rs","byte_start":67690,"byte_end":67698,"line_start":100,"line_end":100,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2235},{"krate":0,"index":2236}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":71033,"byte_end":71044,"line_start":69,"line_end":69,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":72934,"byte_end":72952,"line_start":131,"line_end":131,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":74747,"byte_end":74765,"line_start":185,"line_end":185,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":75618,"byte_end":75634,"line_start":211,"line_end":211,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":75781,"byte_end":75794,"line_start":217,"line_end":217,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":76174,"byte_end":76185,"line_start":228,"line_end":228,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2289},{"krate":0,"index":2290}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":81068,"byte_end":81092,"line_start":344,"line_end":344,"column_start":35,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":450},{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/mock.rs","byte_start":88005,"byte_end":88017,"line_start":29,"line_end":29,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":494}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/mock.rs","byte_start":88209,"byte_end":88221,"line_start":37,"line_end":37,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2393},{"krate":0,"index":2394}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/mock.rs","byte_start":89018,"byte_end":89030,"line_start":61,"line_end":61,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":496},{"krate":0,"index":498},{"krate":0,"index":499}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/mock.rs","byte_start":90672,"byte_end":90685,"line_start":111,"line_end":111,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":503}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":93962,"byte_end":93972,"line_start":53,"line_end":53,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":754},{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":95645,"byte_end":95653,"line_start":101,"line_end":101,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":758}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":95749,"byte_end":95762,"line_start":107,"line_end":107,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":97162,"byte_end":97170,"line_start":164,"line_end":164,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":767},{"krate":0,"index":769},{"krate":0,"index":775},{"krate":0,"index":779}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102064,"byte_end":102072,"line_start":294,"line_end":294,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2563},{"krate":0,"index":2564},{"krate":0,"index":2565},{"krate":0,"index":2566},{"krate":0,"index":2567},{"krate":0,"index":2568},{"krate":0,"index":2569},{"krate":0,"index":2573},{"krate":0,"index":2578},{"krate":0,"index":2582},{"krate":0,"index":2587},{"krate":0,"index":2592},{"krate":0,"index":2597},{"krate":0,"index":2602},{"krate":0,"index":2607},{"krate":0,"index":2612},{"krate":0,"index":2617},{"krate":0,"index":2622},{"krate":0,"index":2626},{"krate":0,"index":2632},{"krate":0,"index":2636},{"krate":0,"index":2642},{"krate":0,"index":2648},{"krate":0,"index":2652},{"krate":0,"index":2656},{"krate":0,"index":2660},{"krate":0,"index":2666},{"krate":0,"index":2671},{"krate":0,"index":2677},{"krate":0,"index":2682},{"krate":0,"index":2686},{"krate":0,"index":2690},{"krate":0,"index":2697},{"krate":0,"index":2702},{"krate":0,"index":2707},{"krate":0,"index":2709},{"krate":0,"index":2714},{"krate":0,"index":2718},{"krate":0,"index":2722},{"krate":0,"index":2727},{"krate":0,"index":2732},{"krate":0,"index":2738},{"krate":0,"index":2744},{"krate":0,"index":2750},{"krate":0,"index":2757},{"krate":0,"index":2762},{"krate":0,"index":2766},{"krate":0,"index":2773},{"krate":0,"index":2779},{"krate":0,"index":2785},{"krate":0,"index":2789},{"krate":0,"index":2793},{"krate":0,"index":2797},{"krate":0,"index":2801},{"krate":0,"index":2806},{"krate":0,"index":2812},{"krate":0,"index":2816},{"krate":0,"index":2820},{"krate":0,"index":2824},{"krate":0,"index":2828},{"krate":0,"index":2832},{"krate":0,"index":2838},{"krate":0,"index":2842},{"krate":0,"index":2848},{"krate":0,"index":2853},{"krate":0,"index":2857},{"krate":0,"index":2861},{"krate":0,"index":2867}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":138499,"byte_end":138507,"line_start":1200,"line_end":1200,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":783},{"krate":0,"index":787},{"krate":0,"index":791},{"krate":0,"index":795},{"krate":0,"index":797},{"krate":0,"index":799},{"krate":0,"index":801}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":143708,"byte_end":143716,"line_start":1355,"line_end":1355,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":803},{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":144001,"byte_end":144009,"line_start":1367,"line_end":1367,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":144403,"byte_end":144411,"line_start":1380,"line_end":1380,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":144562,"byte_end":144570,"line_start":1387,"line_end":1387,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":813}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":145921,"byte_end":145929,"line_start":1427,"line_end":1427,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":817},{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":146131,"byte_end":146139,"line_start":1435,"line_end":1435,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":820},{"krate":0,"index":821}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":146329,"byte_end":146337,"line_start":1443,"line_end":1443,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":824},{"krate":0,"index":825}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":146539,"byte_end":146547,"line_start":1452,"line_end":1452,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":827}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":147068,"byte_end":147076,"line_start":1467,"line_end":1467,"column_start":21,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":149136,"byte_end":149144,"line_start":1534,"line_end":1534,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2891},{"krate":0,"index":2892},{"krate":0,"index":2897}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":178078,"byte_end":178096,"line_start":67,"line_end":67,"column_start":28,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":982}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":179708,"byte_end":179726,"line_start":125,"line_end":125,"column_start":13,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":986},{"krate":0,"index":988},{"krate":0,"index":991}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":180912,"byte_end":180930,"line_start":165,"line_end":165,"column_start":39,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":998},{"krate":0,"index":999}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":187953,"byte_end":187971,"line_start":310,"line_end":310,"column_start":28,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1003}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":188289,"byte_end":188307,"line_start":320,"line_end":320,"column_start":27,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1007}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":188439,"byte_end":188457,"line_start":326,"line_end":326,"column_start":35,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1011}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":188569,"byte_end":188587,"line_start":332,"line_end":332,"column_start":20,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":188621,"byte_end":188639,"line_start":334,"line_end":334,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1018},{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":189971,"byte_end":189985,"line_start":374,"line_end":374,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1049}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_escalator.rs","byte_start":192124,"byte_end":192141,"line_start":47,"line_end":47,"column_start":13,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1136},{"krate":0,"index":1138},{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_escalator.rs","byte_start":196382,"byte_end":196399,"line_start":172,"line_end":172,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1148},{"krate":0,"index":1149}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_escalator.rs","byte_start":199637,"byte_end":199652,"line_start":248,"line_end":248,"column_start":33,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1154}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/log_query.rs","byte_start":200741,"byte_end":200749,"line_start":28,"line_end":28,"column_start":13,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1230},{"krate":0,"index":1231}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/log_query.rs","byte_start":201675,"byte_end":201683,"line_start":67,"line_end":67,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1236},{"krate":0,"index":1237}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":207443,"byte_end":207456,"line_start":55,"line_end":55,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1352},{"krate":0,"index":1354},{"krate":0,"index":1355}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":208313,"byte_end":208326,"line_start":84,"line_end":84,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1360},{"krate":0,"index":1361}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":210267,"byte_end":210280,"line_start":127,"line_end":127,"column_start":13,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1365}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":211188,"byte_end":211201,"line_start":152,"line_end":152,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1367}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":212396,"byte_end":212413,"line_start":183,"line_end":183,"column_start":32,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1384},{"krate":0,"index":1385}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":213234,"byte_end":213251,"line_start":206,"line_end":206,"column_start":28,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1391},{"krate":0,"index":1392}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pubsub.rs","byte_start":219664,"byte_end":219682,"line_start":32,"line_end":32,"column_start":12,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3366}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pubsub.rs","byte_start":219960,"byte_end":219978,"line_start":46,"line_end":46,"column_start":16,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1479},{"krate":0,"index":1480},{"krate":0,"index":1483}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pubsub.rs","byte_start":221243,"byte_end":221261,"line_start":77,"line_end":77,"column_start":27,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1488},{"krate":0,"index":1489}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pubsub.rs","byte_start":222089,"byte_end":222107,"line_start":105,"line_end":105,"column_start":27,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3395}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pubsub.rs","byte_start":222480,"byte_end":222498,"line_start":118,"line_end":118,"column_start":13,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1493}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":224863,"byte_end":224874,"line_start":52,"line_end":52,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1607}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":225159,"byte_end":225170,"line_start":61,"line_end":61,"column_start":13,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1611},{"krate":0,"index":1612},{"krate":0,"index":1614}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":226027,"byte_end":226038,"line_start":90,"line_end":90,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1618},{"krate":0,"index":1620}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":226570,"byte_end":226581,"line_start":102,"line_end":102,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1625},{"krate":0,"index":1626}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":227333,"byte_end":227339,"line_start":127,"line_end":127,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1630}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":227515,"byte_end":227521,"line_start":132,"line_end":132,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1634}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":228062,"byte_end":228071,"line_start":148,"line_end":148,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1638}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":228203,"byte_end":228212,"line_start":154,"line_end":154,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1641}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":229145,"byte_end":229148,"line_start":188,"line_end":188,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1647}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":229307,"byte_end":229310,"line_start":194,"line_end":194,"column_start":12,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1651}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":229426,"byte_end":229429,"line_start":200,"line_end":200,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1656},{"krate":0,"index":1657}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":229960,"byte_end":229963,"line_start":216,"line_end":216,"column_start":26,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1662},{"krate":0,"index":1663}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":231049,"byte_end":231056,"line_start":249,"line_end":249,"column_start":10,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1670},{"krate":0,"index":1671},{"krate":0,"index":1672},{"krate":0,"index":1673}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":232381,"byte_end":232388,"line_start":285,"line_end":285,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1675}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":232510,"byte_end":232517,"line_start":290,"line_end":290,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1677},{"krate":0,"index":1678}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":232776,"byte_end":232783,"line_start":299,"line_end":299,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1680}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":233258,"byte_end":233263,"line_start":313,"line_end":313,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1682}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/erc.rs","byte_start":245601,"byte_end":245607,"line_start":23,"line_end":23,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1717},{"krate":0,"index":1718}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/erc.rs","byte_start":247067,"byte_end":247077,"line_start":63,"line_end":63,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1724},{"krate":0,"index":1725}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/erc.rs","byte_start":247333,"byte_end":247343,"line_start":74,"line_end":74,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1727}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":24442,"byte_end":24454,"line_start":710,"line_end":710,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1819},{"krate":0,"index":1820},{"krate":0,"index":1821}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":380,"byte_end":383,"line_start":14,"line_end":14,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":855}},{"kind":"Mod","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":833,"byte_end":841,"line_start":34,"line_end":34,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1501}},{"kind":"Mod","span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":851,"byte_end":854,"line_start":35,"line_end":35,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1688}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","byte_start":26889,"byte_end":26901,"line_start":24,"line_end":24,"column_start":23,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1822},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","byte_start":27360,"byte_end":27367,"line_start":44,"line_end":44,"column_start":13,"column_end":20},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1876},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","byte_start":28079,"byte_end":28087,"line_start":68,"line_end":68,"column_start":40,"column_end":48},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1948},"to":{"krate":20,"index":1586}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","byte_start":28299,"byte_end":28314,"line_start":74,"line_end":74,"column_start":44,"column_end":59},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":54},"to":{"krate":20,"index":1672}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","byte_start":32830,"byte_end":32843,"line_start":193,"line_end":193,"column_start":6,"column_end":19},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":2015},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/common.rs","byte_start":33175,"byte_end":33188,"line_start":204,"line_end":204,"column_start":23,"column_end":36},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2015},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":37421,"byte_end":37434,"line_start":53,"line_end":53,"column_start":28,"column_end":41},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2447},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":37793,"byte_end":37801,"line_start":64,"line_end":64,"column_start":24,"column_end":32},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":2026},"to":{"krate":0,"index":3735}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":39242,"byte_end":39250,"line_start":105,"line_end":105,"column_start":6,"column_end":14},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":2026},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":41273,"byte_end":41281,"line_start":174,"line_end":174,"column_start":18,"column_end":26},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":2026},"to":{"krate":2,"index":12989}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/http.rs","byte_start":41464,"byte_end":41472,"line_start":183,"line_end":183,"column_start":16,"column_end":24},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":2026},"to":{"krate":2,"index":2882}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":44937,"byte_end":44951,"line_start":84,"line_end":84,"column_start":6,"column_end":20},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":2092},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":45172,"byte_end":45186,"line_start":91,"line_end":91,"column_start":6,"column_end":20},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":2092},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":45411,"byte_end":45425,"line_start":98,"line_end":98,"column_start":9,"column_end":23},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":2092},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":46353,"byte_end":46374,"line_start":129,"line_end":129,"column_start":21,"column_end":42},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":2103},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":46491,"byte_end":46512,"line_start":135,"line_end":135,"column_start":9,"column_end":30},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":2103},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":47260,"byte_end":47274,"line_start":162,"line_end":162,"column_start":31,"column_end":45},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":2092},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":50185,"byte_end":50191,"line_start":238,"line_end":238,"column_start":6,"column_end":12},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":2113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":51050,"byte_end":51056,"line_start":261,"line_end":261,"column_start":18,"column_end":24},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":2113},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":51926,"byte_end":51939,"line_start":287,"line_end":287,"column_start":13,"column_end":26},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":271},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":52143,"byte_end":52156,"line_start":293,"line_end":293,"column_start":24,"column_end":37},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":271},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":54266,"byte_end":54282,"line_start":345,"line_end":345,"column_start":9,"column_end":25},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":2132},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":54773,"byte_end":54786,"line_start":364,"line_end":364,"column_start":28,"column_end":41},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":2447},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":55037,"byte_end":55041,"line_start":372,"line_end":372,"column_start":33,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":3263},"to":{"krate":0,"index":2151}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":55044,"byte_end":55048,"line_start":372,"line_end":372,"column_start":40,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":3275},"to":{"krate":0,"index":2151}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":55051,"byte_end":55056,"line_start":372,"line_end":372,"column_start":47,"column_end":52},"kind":"SuperTrait","from":{"krate":2,"index":10288},"to":{"krate":0,"index":2151}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":55298,"byte_end":55318,"line_start":378,"line_end":378,"column_start":32,"column_end":52},"kind":"SuperTrait","from":{"krate":0,"index":2151},"to":{"krate":0,"index":297}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":55724,"byte_end":55725,"line_start":388,"line_end":388,"column_start":49,"column_end":50},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":2157},"to":{"krate":0,"index":2151}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":56224,"byte_end":56227,"line_start":401,"line_end":401,"column_start":31,"column_end":34},"kind":{"Impl":{"id":39}},"from":{"krate":5,"index":432},"to":{"krate":0,"index":2151}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":56555,"byte_end":56558,"line_start":409,"line_end":409,"column_start":31,"column_end":34},"kind":{"Impl":{"id":40}},"from":{"krate":5,"index":432},"to":{"krate":0,"index":2151}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":56791,"byte_end":56792,"line_start":415,"line_end":415,"column_start":47,"column_end":48},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":301},"to":{"krate":0,"index":297}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":57197,"byte_end":57200,"line_start":428,"line_end":428,"column_start":30,"column_end":33},"kind":{"Impl":{"id":42}},"from":{"krate":5,"index":432},"to":{"krate":0,"index":297}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":57602,"byte_end":57616,"line_start":440,"line_end":440,"column_start":27,"column_end":41},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":2092},"to":{"krate":0,"index":3735}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":59369,"byte_end":59381,"line_start":493,"line_end":493,"column_start":6,"column_end":18},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":308},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":59596,"byte_end":59608,"line_start":499,"line_end":499,"column_start":17,"column_end":29},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":308},"to":{"krate":124,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/quorum.rs","byte_start":61428,"byte_end":61442,"line_start":549,"line_end":549,"column_start":26,"column_end":40},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":2092},"to":{"krate":0,"index":1469}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/rw.rs","byte_start":65553,"byte_end":65561,"line_start":28,"line_end":28,"column_start":19,"column_end":27},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":2195},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/rw.rs","byte_start":67211,"byte_end":67224,"line_start":86,"line_end":86,"column_start":56,"column_end":69},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":2447},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/rw.rs","byte_start":67690,"byte_end":67698,"line_start":100,"line_end":100,"column_start":37,"column_end":45},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":2195},"to":{"krate":0,"index":3735}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":69211,"byte_end":69215,"line_start":18,"line_end":18,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":3263},"to":{"krate":0,"index":428}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":69218,"byte_end":69222,"line_start":18,"line_end":18,"column_start":34,"column_end":38},"kind":"SuperTrait","from":{"krate":2,"index":3275},"to":{"krate":0,"index":428}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":69225,"byte_end":69230,"line_start":18,"line_end":18,"column_start":41,"column_end":46},"kind":"SuperTrait","from":{"krate":2,"index":10288},"to":{"krate":0,"index":428}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":71033,"byte_end":71044,"line_start":69,"line_end":69,"column_start":9,"column_end":20},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":2243},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":72934,"byte_end":72952,"line_start":131,"line_end":131,"column_start":6,"column_end":24},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":2255},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":74747,"byte_end":74765,"line_start":185,"line_end":185,"column_start":18,"column_end":36},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":2255},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":75618,"byte_end":75634,"line_start":211,"line_end":211,"column_start":28,"column_end":44},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":2271},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":75781,"byte_end":75794,"line_start":217,"line_end":217,"column_start":33,"column_end":46},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":2447},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":76174,"byte_end":76185,"line_start":228,"line_end":228,"column_start":27,"column_end":38},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":2243},"to":{"krate":0,"index":3735}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/retry.rs","byte_start":81068,"byte_end":81092,"line_start":344,"line_end":344,"column_start":35,"column_end":59},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":2371},"to":{"krate":0,"index":428}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/mock.rs","byte_start":88005,"byte_end":88017,"line_start":29,"line_end":29,"column_start":18,"column_end":30},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":2385},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/mock.rs","byte_start":88209,"byte_end":88221,"line_start":37,"line_end":37,"column_start":24,"column_end":36},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":2385},"to":{"krate":0,"index":3735}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/mock.rs","byte_start":89018,"byte_end":89030,"line_start":61,"line_end":61,"column_start":6,"column_end":18},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":2385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/transports/mock.rs","byte_start":90672,"byte_end":90685,"line_start":111,"line_end":111,"column_start":26,"column_end":39},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":2447},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":93962,"byte_end":93972,"line_start":53,"line_end":53,"column_start":18,"column_end":28},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":2420},"to":{"krate":2,"index":12989}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":95645,"byte_end":95653,"line_start":101,"line_end":101,"column_start":22,"column_end":30},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":2434},"to":{"krate":2,"index":3160}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":95749,"byte_end":95762,"line_start":107,"line_end":107,"column_start":33,"column_end":46},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":2447},"to":{"krate":0,"index":1771}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":97162,"byte_end":97170,"line_start":164,"line_end":164,"column_start":24,"column_end":32},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":2434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":102064,"byte_end":102072,"line_start":294,"line_end":294,"column_start":39,"column_end":47},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":2434},"to":{"krate":0,"index":3775}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":138499,"byte_end":138507,"line_start":1200,"line_end":1200,"column_start":24,"column_end":32},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":2434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":143708,"byte_end":143716,"line_start":1355,"line_end":1355,"column_start":6,"column_end":14},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":2434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":144001,"byte_end":144009,"line_start":1367,"line_end":1367,"column_start":19,"column_end":27},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":2434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":144403,"byte_end":144411,"line_start":1380,"line_end":1380,"column_start":31,"column_end":39},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":2434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":144562,"byte_end":144570,"line_start":1387,"line_end":1387,"column_start":6,"column_end":14},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":145921,"byte_end":145929,"line_start":1427,"line_end":1427,"column_start":24,"column_end":32},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":2434},"to":{"krate":2,"index":3176}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":146131,"byte_end":146139,"line_start":1435,"line_end":1435,"column_start":26,"column_end":34},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2434},"to":{"krate":2,"index":3176}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":146329,"byte_end":146337,"line_start":1443,"line_end":1443,"column_start":34,"column_end":42},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2434},"to":{"krate":2,"index":3176}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":146539,"byte_end":146547,"line_start":1452,"line_end":1452,"column_start":6,"column_end":14},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":2434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":147068,"byte_end":147076,"line_start":1467,"line_end":1467,"column_start":21,"column_end":29},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2434},"to":{"krate":0,"index":836}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":148058,"byte_end":148064,"line_start":1497,"line_end":1497,"column_start":32,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":836},"to":{"krate":0,"index":2877}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/provider.rs","byte_start":149136,"byte_end":149144,"line_start":1534,"line_end":1534,"column_start":22,"column_end":30},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2434},"to":{"krate":0,"index":2877}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":178078,"byte_end":178096,"line_start":67,"line_end":67,"column_start":28,"column_end":46},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2955},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":179708,"byte_end":179726,"line_start":125,"line_end":125,"column_start":13,"column_end":31},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2955},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":180912,"byte_end":180930,"line_start":165,"line_end":165,"column_start":39,"column_end":57},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":2955},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":187953,"byte_end":187971,"line_start":310,"line_end":310,"column_start":28,"column_end":46},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":2955},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":188289,"byte_end":188307,"line_start":320,"line_end":320,"column_start":27,"column_end":45},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":2955},"to":{"krate":2,"index":2915}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":188439,"byte_end":188457,"line_start":326,"line_end":326,"column_start":35,"column_end":53},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":2955},"to":{"krate":2,"index":2915}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":188569,"byte_end":188587,"line_start":332,"line_end":332,"column_start":20,"column_end":38},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":2955},"to":{"krate":2,"index":2920}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":188621,"byte_end":188639,"line_start":334,"line_end":334,"column_start":23,"column_end":41},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":2955},"to":{"krate":2,"index":3486}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_transaction.rs","byte_start":189971,"byte_end":189985,"line_start":374,"line_end":374,"column_start":25,"column_end":39},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1020},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_escalator.rs","byte_start":192124,"byte_end":192141,"line_start":47,"line_end":47,"column_start":13,"column_end":30},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":3122},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_escalator.rs","byte_start":196382,"byte_end":196399,"line_start":172,"line_end":172,"column_start":24,"column_end":41},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":3122},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pending_escalator.rs","byte_start":199637,"byte_end":199652,"line_start":248,"line_end":248,"column_start":33,"column_end":48},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1113},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/log_query.rs","byte_start":200741,"byte_end":200749,"line_start":28,"line_end":28,"column_start":13,"column_end":21},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1205},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/log_query.rs","byte_start":201675,"byte_end":201683,"line_start":67,"line_end":67,"column_start":24,"column_end":32},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1205},"to":{"krate":124,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":207443,"byte_end":207456,"line_start":55,"line_end":55,"column_start":16,"column_end":29},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":3282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":208313,"byte_end":208326,"line_start":84,"line_end":84,"column_start":27,"column_end":40},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":3282},"to":{"krate":124,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":210267,"byte_end":210280,"line_start":127,"line_end":127,"column_start":13,"column_end":26},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":3282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":211188,"byte_end":211201,"line_start":152,"line_end":152,"column_start":36,"column_end":49},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2447},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":212396,"byte_end":212413,"line_start":183,"line_end":183,"column_start":32,"column_end":49},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1371},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/stream.rs","byte_start":213234,"byte_end":213251,"line_start":206,"line_end":206,"column_start":28,"column_end":45},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1371},"to":{"krate":124,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pubsub.rs","byte_start":219074,"byte_end":219087,"line_start":18,"line_end":18,"column_start":25,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":3735},"to":{"krate":0,"index":1469}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pubsub.rs","byte_start":219664,"byte_end":219682,"line_start":32,"line_end":32,"column_start":12,"column_end":30},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":3367},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pubsub.rs","byte_start":219960,"byte_end":219978,"line_start":46,"line_end":46,"column_start":16,"column_end":34},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":3367},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pubsub.rs","byte_start":221243,"byte_end":221261,"line_start":77,"line_end":77,"column_start":27,"column_end":45},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":3367},"to":{"krate":124,"index":96}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pubsub.rs","byte_start":222089,"byte_end":222107,"line_start":105,"line_end":105,"column_start":27,"column_end":45},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":3367},"to":{"krate":168,"index":41}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/pubsub.rs","byte_start":222480,"byte_end":222498,"line_start":118,"line_end":118,"column_start":13,"column_end":31},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":3367},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":224863,"byte_end":224874,"line_start":52,"line_end":52,"column_start":36,"column_end":47},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1596},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":225159,"byte_end":225170,"line_start":61,"line_end":61,"column_start":13,"column_end":24},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":1596},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":226027,"byte_end":226038,"line_start":90,"line_end":90,"column_start":29,"column_end":40},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":1596},"to":{"krate":0,"index":1590}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":226570,"byte_end":226581,"line_start":102,"line_end":102,"column_start":39,"column_end":50},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1596},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":227333,"byte_end":227339,"line_start":127,"line_end":127,"column_start":13,"column_end":19},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":3400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":227515,"byte_end":227521,"line_start":132,"line_end":132,"column_start":28,"column_end":34},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":3400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":228062,"byte_end":228071,"line_start":148,"line_end":148,"column_start":10,"column_end":19},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":3413},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":228203,"byte_end":228212,"line_start":154,"line_end":154,"column_start":24,"column_end":33},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":3413},"to":{"krate":20,"index":2126}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":229145,"byte_end":229148,"line_start":188,"line_end":188,"column_start":39,"column_end":42},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":3487},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":229307,"byte_end":229310,"line_start":194,"line_end":194,"column_start":12,"column_end":15},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":3487},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":229426,"byte_end":229429,"line_start":200,"line_end":200,"column_start":32,"column_end":35},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":3487},"to":{"krate":0,"index":1590}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":229960,"byte_end":229963,"line_start":216,"line_end":216,"column_start":26,"column_end":29},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":3487},"to":{"krate":2,"index":13763}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":231049,"byte_end":231056,"line_start":249,"line_end":249,"column_start":10,"column_end":17},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":3492},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":232381,"byte_end":232388,"line_start":285,"line_end":285,"column_start":22,"column_end":29},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":3588},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":232510,"byte_end":232517,"line_start":290,"line_end":290,"column_start":30,"column_end":37},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":3588},"to":{"krate":2,"index":3486}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":232776,"byte_end":232783,"line_start":299,"line_end":299,"column_start":33,"column_end":40},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":3588},"to":{"krate":2,"index":3499}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/call_raw.rs","byte_start":233258,"byte_end":233263,"line_start":313,"line_end":313,"column_start":10,"column_end":15},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":3678},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/erc.rs","byte_start":245601,"byte_end":245607,"line_start":23,"line_end":23,"column_start":18,"column_end":24},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":1711},"to":{"krate":2,"index":12989}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/erc.rs","byte_start":247067,"byte_end":247077,"line_start":63,"line_end":63,"column_start":18,"column_end":28},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":3681},"to":{"krate":2,"index":12989}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/erc.rs","byte_start":247333,"byte_end":247343,"line_start":74,"line_end":74,"column_start":6,"column_end":16},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":3681},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":1930,"byte_end":1935,"line_start":63,"line_end":63,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":10288},"to":{"krate":0,"index":3735}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":1938,"byte_end":1942,"line_start":63,"line_end":63,"column_start":34,"column_end":38},"kind":"SuperTrait","from":{"krate":2,"index":3263},"to":{"krate":0,"index":3735}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":1945,"byte_end":1949,"line_start":63,"line_end":63,"column_start":41,"column_end":45},"kind":"SuperTrait","from":{"krate":2,"index":3275},"to":{"krate":0,"index":3735}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4737,"byte_end":4741,"line_start":150,"line_end":150,"column_start":23,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":3275},"to":{"krate":0,"index":3775}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4744,"byte_end":4748,"line_start":150,"line_end":150,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":3263},"to":{"krate":0,"index":3775}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":4751,"byte_end":4756,"line_start":150,"line_end":150,"column_start":37,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":10288},"to":{"krate":0,"index":3775}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/git/checkouts/ethers-rs-c3a7c0a0ae0fe6be/8de8a29/ethers-providers/src/lib.rs","byte_start":24442,"byte_end":24454,"line_start":710,"line_end":710,"column_start":10,"column_end":22},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":4793},"to":{"krate":4294967295,"index":4294967295}}]}