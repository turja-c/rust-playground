{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0","program":"/Users/turjachowdhury/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","scale_info","--edition=2021","/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"derive\"","--cfg","feature=\"scale-info-derive\"","-C","metadata=896f12d78e99f805","-C","extra-filename=-896f12d78e99f805","--out-dir","/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps","-L","dependency=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps","--extern","cfg_if=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libcfg_if-b1ae54669c30c021.rmeta","--extern","derive_more=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libderive_more-99407df1cc477ef7.dylib","--extern","scale=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libparity_scale_codec-81b48ac06601602e.rmeta","--extern","scale_info_derive=/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libscale_info_derive-89a780306e12e90d.dylib","--cap-lints","allow","--error-format=json","--sysroot","/Users/turjachowdhury/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/turjachowdhury/GitHub/rust-playground/eth/ethers/target/rls/debug/deps/libscale_info-896f12d78e99f805.rmeta"},"prelude":{"crate_id":{"name":"scale_info","disambiguator":[11990844177187226064,0]},"crate_root":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src","external_crates":[{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[14771084576412554041,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[2214913233095760658,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[14062411168213242900,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/prelude.rs","num":4,"id":{"name":"alloc","disambiguator":[12076482825092298057,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/prelude.rs","num":5,"id":{"name":"cfg_if","disambiguator":[4590009807048894466,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","num":6,"id":{"name":"parity_scale_codec","disambiguator":[4957919255226842075,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","num":7,"id":{"name":"std","disambiguator":[3177202280525429736,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","num":8,"id":{"name":"libc","disambiguator":[14222321261015582298,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","num":9,"id":{"name":"unwind","disambiguator":[8777242437552039366,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","num":10,"id":{"name":"cfg_if","disambiguator":[17835652209006724865,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","num":11,"id":{"name":"miniz_oxide","disambiguator":[8739993533421390330,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[14051958152740382928,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","num":13,"id":{"name":"adler","disambiguator":[10065303707608660519,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","num":14,"id":{"name":"hashbrown","disambiguator":[11544620977869425193,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","num":15,"id":{"name":"std_detect","disambiguator":[6400271788769952154,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","num":16,"id":{"name":"rustc_demangle","disambiguator":[15384311983005613458,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","num":17,"id":{"name":"addr2line","disambiguator":[18308402029100966730,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","num":18,"id":{"name":"gimli","disambiguator":[6407954677654987270,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","num":19,"id":{"name":"object","disambiguator":[15697432329694890830,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","num":20,"id":{"name":"memchr","disambiguator":[8370702540642071065,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","num":21,"id":{"name":"panic_unwind","disambiguator":[13043233986326649044,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","num":22,"id":{"name":"parity_scale_codec_derive","disambiguator":[11912925632890472257,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","num":23,"id":{"name":"byte_slice_cast","disambiguator":[5513492499053633319,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","num":24,"id":{"name":"arrayvec","disambiguator":[14898269805389005271,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","num":25,"id":{"name":"impl_trait_for_tuples","disambiguator":[8046413577479339172,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","num":26,"id":{"name":"serde","disambiguator":[8563986749973328371,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","num":27,"id":{"name":"serde_derive","disambiguator":[8343864943583289220,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","num":28,"id":{"name":"derive_more","disambiguator":[14511597510602408082,0]}},{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","num":29,"id":{"name":"scale_info_derive","disambiguator":[6800746272509617229,0]}}],"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":612,"byte_end":13626,"line_start":15,"line_end":397,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":4,"index":744},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/prelude.rs","byte_start":14823,"byte_end":14829,"line_start":44,"line_end":44,"column_start":13,"column_end":19},"alias_span":null,"name":"borrow","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":4,"index":194},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/prelude.rs","byte_start":14843,"byte_end":14848,"line_start":45,"line_end":45,"column_start":13,"column_end":18},"alias_span":null,"name":"boxed","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":4,"index":860},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/prelude.rs","byte_start":14862,"byte_end":14873,"line_start":46,"line_end":46,"column_start":13,"column_end":24},"alias_span":null,"name":"collections","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":4,"index":6},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/prelude.rs","byte_start":14887,"byte_end":14893,"line_start":47,"line_end":47,"column_start":13,"column_end":19},"alias_span":null,"name":"format","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":4,"index":6115},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/prelude.rs","byte_start":14907,"byte_end":14913,"line_start":48,"line_end":48,"column_start":13,"column_end":19},"alias_span":null,"name":"string","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":4,"index":6973},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/prelude.rs","byte_start":14927,"byte_end":14930,"line_start":49,"line_end":49,"column_start":13,"column_end":16},"alias_span":null,"name":"vec","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":4,"index":5},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/prelude.rs","byte_start":14927,"byte_end":14930,"line_start":49,"line_end":49,"column_start":13,"column_end":16},"alias_span":null,"name":"vec","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":1,"index":3987},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/prelude.rs","byte_start":14980,"byte_end":14983,"line_start":53,"line_end":53,"column_start":13,"column_end":16},"alias_span":null,"name":"any","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":1,"index":2910},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/prelude.rs","byte_start":14997,"byte_end":15000,"line_start":54,"line_end":54,"column_start":13,"column_end":16},"alias_span":null,"name":"cmp","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":1,"index":9915},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/prelude.rs","byte_start":15014,"byte_end":15017,"line_start":55,"line_end":55,"column_start":13,"column_end":16},"alias_span":null,"name":"fmt","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":1,"index":10459},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/prelude.rs","byte_start":15031,"byte_end":15035,"line_start":56,"line_end":56,"column_start":13,"column_end":17},"alias_span":null,"name":"hash","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":1,"index":3247},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/prelude.rs","byte_start":15049,"byte_end":15055,"line_start":57,"line_end":57,"column_start":13,"column_end":19},"alias_span":null,"name":"marker","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":1,"index":1944},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/prelude.rs","byte_start":15069,"byte_end":15072,"line_start":58,"line_end":58,"column_start":13,"column_end":16},"alias_span":null,"name":"mem","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":1,"index":293},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/prelude.rs","byte_start":15086,"byte_end":15089,"line_start":59,"line_end":59,"column_start":13,"column_end":16},"alias_span":null,"name":"num","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":1,"index":3329},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/prelude.rs","byte_start":15103,"byte_end":15106,"line_start":60,"line_end":60,"column_start":13,"column_end":16},"alias_span":null,"name":"ops","value":"","parent":{"krate":0,"index":7}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":75114,"byte_end":75115,"line_start":47,"line_end":47,"column_start":16,"column_end":17},"alias_span":null,"name":"*","value":"TypeDefComposite","parent":{"krate":0,"index":632}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":75129,"byte_end":75130,"line_start":48,"line_end":48,"column_start":13,"column_end":14},"alias_span":null,"name":"*","value":"Field","parent":{"krate":0,"index":632}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":75142,"byte_end":75143,"line_start":49,"line_end":49,"column_start":11,"column_end":12},"alias_span":null,"name":"*","value":"Path","parent":{"krate":0,"index":632}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":75158,"byte_end":75159,"line_start":50,"line_end":50,"column_start":14,"column_end":15},"alias_span":null,"name":"*","value":"TypeDefVariant, Variant","parent":{"krate":0,"index":632}},{"kind":"Use","ref_id":{"krate":6,"index":0},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":12148,"byte_end":12153,"line_start":347,"line_end":347,"column_start":9,"column_end":14},"alias_span":null,"name":"scale","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1494},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":12187,"byte_end":12195,"line_start":350,"line_end":350,"column_start":16,"column_end":24},"alias_span":null,"name":"MetaType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2143},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":12221,"byte_end":12237,"line_start":352,"line_end":352,"column_start":9,"column_end":25},"alias_span":null,"name":"PortableRegistry","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2118},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":12247,"byte_end":12270,"line_start":353,"line_end":353,"column_start":9,"column_end":32},"alias_span":null,"name":"PortableRegistryBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":611},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":12303,"byte_end":12315,"line_start":356,"line_end":356,"column_start":9,"column_end":21},"alias_span":null,"name":"IntoPortable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2106},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":12325,"byte_end":12333,"line_start":357,"line_end":357,"column_start":9,"column_end":17},"alias_span":null,"name":"Registry","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":12350,"byte_end":12351,"line_start":359,"line_end":359,"column_start":9,"column_end":10},"alias_span":null,"name":"*","value":"Type, Field, TypeDefVariant, TypeDefPrimitive, TypeParameter, TypeDef, Variant, TypeDefArray, TypeDefSequence, TypeDefTuple, Path, TypeDefComposite, TypeDefCompact","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":29,"index":273},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":12411,"byte_end":12419,"line_start":363,"line_end":363,"column_start":28,"column_end":36},"alias_span":null,"name":"TypeInfo","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":612,"byte_end":13626,"line_start":15,"line_end":397,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":12},{"krate":0,"index":230},{"krate":0,"index":251},{"krate":0,"index":444},{"krate":0,"index":481},{"krate":0,"index":534},{"krate":0,"index":576},{"krate":0,"index":632},{"krate":0,"index":958},{"krate":0,"index":961},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":972},{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":979},{"krate":0,"index":982},{"krate":0,"index":983},{"krate":0,"index":986},{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":992}],"decl_id":null,"docs":" Efficient and space-efficient serialization of Rust types.","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":646,"byte_end":652,"line_start":15,"line_end":15,"column_start":35,"column_end":41}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":655,"byte_end":677,"line_start":16,"line_end":16,"column_start":1,"column_end":23}},{"value":"/ Efficient and space-efficient serialization of Rust types.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":679,"byte_end":741,"line_start":18,"line_end":18,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":742,"byte_end":745,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This library provides structures to easily retrieve compile-time type","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":746,"byte_end":819,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"/ information at runtime and also to serialize this information in a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":820,"byte_end":890,"line_start":21,"line_end":21,"column_start":1,"column_end":71}},{"value":"/ space-efficient form, aka `PortableForm`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":891,"byte_end":936,"line_start":22,"line_end":22,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":937,"byte_end":940,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Registry","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":941,"byte_end":955,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":956,"byte_end":959,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ At the heart of its functionality is the [`Registry`](`crate::Registry`)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":960,"byte_end":1036,"line_start":26,"line_end":26,"column_start":1,"column_end":77}},{"value":"/ that acts as a cache for known types in order to efficiently deduplicate","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":1037,"byte_end":1113,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/ types and ensure a space-efficient serialization.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":1114,"byte_end":1167,"line_start":28,"line_end":28,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":1168,"byte_end":1171,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Type Information","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":1172,"byte_end":1194,"line_start":30,"line_end":30,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":1195,"byte_end":1198,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Information about types is provided via the [`TypeInfo`](`crate::TypeInfo`)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":1199,"byte_end":1278,"line_start":32,"line_end":32,"column_start":1,"column_end":80}},{"value":"/ trait.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":1279,"byte_end":1289,"line_start":33,"line_end":33,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":1290,"byte_end":1293,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ This trait should be implemented for all types that are serializable.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":1294,"byte_end":1367,"line_start":35,"line_end":35,"column_start":1,"column_end":74}},{"value":"/ `scale-info` provides implementations for all commonly used Rust standard","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":1368,"byte_end":1445,"line_start":36,"line_end":36,"column_start":1,"column_end":78}},{"value":"/ types and a derive macro for implementing of custom types.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":1446,"byte_end":1508,"line_start":37,"line_end":37,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":1509,"byte_end":1512,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ## Deriving `TypeInfo`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":1513,"byte_end":1539,"line_start":39,"line_end":39,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":1540,"byte_end":1543,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ Enable the `derive` feature of this crate:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":1544,"byte_end":1590,"line_start":41,"line_end":41,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":1591,"byte_end":1594,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":1595,"byte_end":1606,"line_start":43,"line_end":43,"column_start":1,"column_end":12}},{"value":"/ scale-info = { version = \"2.0.0\", features = [\"derive\"] }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":1607,"byte_end":1668,"line_start":44,"line_end":44,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":1669,"byte_end":1676,"line_start":45,"line_end":45,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":1677,"byte_end":1680,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":1681,"byte_end":1694,"line_start":47,"line_end":47,"column_start":1,"column_end":14}},{"value":"/ use scale_info::TypeInfo;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":1695,"byte_end":1724,"line_start":48,"line_end":48,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":1725,"byte_end":1728,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ #[derive(TypeInfo)]","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":1729,"byte_end":1752,"line_start":50,"line_end":50,"column_start":1,"column_end":24}},{"value":"/ struct MyStruct {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":1753,"byte_end":1774,"line_start":51,"line_end":51,"column_start":1,"column_end":22}},{"value":"/     a: u32,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":1775,"byte_end":1790,"line_start":52,"line_end":52,"column_start":1,"column_end":16}},{"value":"/     b: MyEnum,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":1791,"byte_end":1809,"line_start":53,"line_end":53,"column_start":1,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":1810,"byte_end":1815,"line_start":54,"line_end":54,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":1816,"byte_end":1819,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ #[derive(TypeInfo)]","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":1820,"byte_end":1843,"line_start":56,"line_end":56,"column_start":1,"column_end":24}},{"value":"/ enum MyEnum {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":1844,"byte_end":1861,"line_start":57,"line_end":57,"column_start":1,"column_end":18}},{"value":"/     A(bool),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":1862,"byte_end":1878,"line_start":58,"line_end":58,"column_start":1,"column_end":17}},{"value":"/     B { f: Vec<u8> },","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":1879,"byte_end":1904,"line_start":59,"line_end":59,"column_start":1,"column_end":26}},{"value":"/     C,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":1905,"byte_end":1915,"line_start":60,"line_end":60,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":1916,"byte_end":1921,"line_start":61,"line_end":61,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":1922,"byte_end":1929,"line_start":62,"line_end":62,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":1930,"byte_end":1933,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ ### Attributes","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":1934,"byte_end":1952,"line_start":64,"line_end":64,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":1953,"byte_end":1956,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ #### `#[scale_info(bounds(..))]`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":1957,"byte_end":1993,"line_start":66,"line_end":66,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":1994,"byte_end":1997,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ Replace the auto-generated `where` clause bounds for the derived `TypeInfo` implementation.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":1998,"byte_end":2093,"line_start":68,"line_end":68,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":2094,"byte_end":2097,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":2098,"byte_end":2111,"line_start":70,"line_end":70,"column_start":1,"column_end":14}},{"value":"/ #[derive(TypeInfo)]","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":2112,"byte_end":2135,"line_start":71,"line_end":71,"column_start":1,"column_end":24}},{"value":"/ #[scale_info(bounds(T: TypeInfo + 'static))]","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":2136,"byte_end":2184,"line_start":72,"line_end":72,"column_start":1,"column_end":49}},{"value":"/ struct MyStruct<T> {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":2185,"byte_end":2209,"line_start":73,"line_end":73,"column_start":1,"column_end":25}},{"value":"/     a: Vec<T>,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":2210,"byte_end":2228,"line_start":74,"line_end":74,"column_start":1,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":2229,"byte_end":2234,"line_start":75,"line_end":75,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":2235,"byte_end":2242,"line_start":76,"line_end":76,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":2243,"byte_end":2246,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The derive macro automatically adds `TypeInfo` bounds for all type parameters, and all field","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":2247,"byte_end":2343,"line_start":78,"line_end":78,"column_start":1,"column_end":97}},{"value":"/ types containing type parameters or associated types.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":2344,"byte_end":2401,"line_start":79,"line_end":79,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":2402,"byte_end":2405,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ This is naive and sometimes adds unnecessary bounds, since on a syntactical level there is no","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":2406,"byte_end":2503,"line_start":81,"line_end":81,"column_start":1,"column_end":98}},{"value":"/ way to differentiate between a generic type constructor and a type alias with a generic argument","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":2504,"byte_end":2604,"line_start":82,"line_end":82,"column_start":1,"column_end":101}},{"value":"/ e.g.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":2605,"byte_end":2613,"line_start":83,"line_end":83,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":2614,"byte_end":2617,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":2618,"byte_end":2631,"line_start":85,"line_end":85,"column_start":1,"column_end":14}},{"value":"/ trait MyTrait {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":2632,"byte_end":2651,"line_start":86,"line_end":86,"column_start":1,"column_end":20}},{"value":"/     type A;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":2652,"byte_end":2667,"line_start":87,"line_end":87,"column_start":1,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":2668,"byte_end":2673,"line_start":88,"line_end":88,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":2674,"byte_end":2677,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ type MyAlias<T> = <T as MyTrait>::A;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":2678,"byte_end":2718,"line_start":90,"line_end":90,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":2719,"byte_end":2722,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ #[derive(TypeInfo)]","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":2723,"byte_end":2746,"line_start":92,"line_end":92,"column_start":1,"column_end":24}},{"value":"/ struct MyStruct<T> {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":2747,"byte_end":2771,"line_start":93,"line_end":93,"column_start":1,"column_end":25}},{"value":"/     a: MyAlias<T>,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":2772,"byte_end":2794,"line_start":94,"line_end":94,"column_start":1,"column_end":23}},{"value":"/     b: Vec<T>,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":2795,"byte_end":2813,"line_start":95,"line_end":95,"column_start":1,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":2814,"byte_end":2819,"line_start":96,"line_end":96,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":2820,"byte_end":2827,"line_start":97,"line_end":97,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":2828,"byte_end":2831,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ So for the above, since a `MyAlias<T>: TypeInfo` bound is required, and we can't distinguish","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":2832,"byte_end":2928,"line_start":99,"line_end":99,"column_start":1,"column_end":97}},{"value":"/ between `MyAlias<T>` and `Vec<T>`, then the `TypeInfo` bound is simply added for all","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":2929,"byte_end":3017,"line_start":100,"line_end":100,"column_start":1,"column_end":89}},{"value":"/ fields which contain any type param. In this case the redundant `Vec<T>: TypeInfo`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":3018,"byte_end":3104,"line_start":101,"line_end":101,"column_start":1,"column_end":87}},{"value":"/ would be added.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":3105,"byte_end":3124,"line_start":102,"line_end":102,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":3125,"byte_end":3128,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ This is usually okay, but in some circumstances can cause problems, for example with the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":3129,"byte_end":3221,"line_start":104,"line_end":104,"column_start":1,"column_end":93}},{"value":"/ [`overflow evaluating the requirement`] error [here](https://github.com/paritytech/scale-info/blob/master/test_suite/tests/ui/pass_custom_bounds_fix_overflow.rs).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":3222,"byte_end":3388,"line_start":105,"line_end":105,"column_start":1,"column_end":167}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":3389,"byte_end":3392,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ The `bounds` attribute provides an [\"escape hatch\"](https://serde.rs/attr-bound.html) to allow","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":3393,"byte_end":3491,"line_start":107,"line_end":107,"column_start":1,"column_end":99}},{"value":"/ the programmer control of the `where` clause on the generated `impl`, to solve this and other","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":3492,"byte_end":3589,"line_start":108,"line_end":108,"column_start":1,"column_end":98}},{"value":"/ issues that can't be foreseen by the auto-generated bounds heuristic.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":3590,"byte_end":3663,"line_start":109,"line_end":109,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":3664,"byte_end":3667,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ #### `#[scale_info(skip_type_params(..))]`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":3668,"byte_end":3714,"line_start":111,"line_end":111,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":3715,"byte_end":3718,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ Remove the requirement for the specified type params to implement `TypeInfo`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":3719,"byte_end":3800,"line_start":113,"line_end":113,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":3801,"byte_end":3804,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ Consider a simple example of a type parameter which is used for associated types, but the type","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":3805,"byte_end":3903,"line_start":115,"line_end":115,"column_start":1,"column_end":99}},{"value":"/ itself does not carry any type information. Consider this common pattern:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":3904,"byte_end":3981,"line_start":116,"line_end":116,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":3982,"byte_end":3985,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":3986,"byte_end":3999,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/ trait Config {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":4000,"byte_end":4018,"line_start":119,"line_end":119,"column_start":1,"column_end":19}},{"value":"/     type Balance;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":4019,"byte_end":4040,"line_start":120,"line_end":120,"column_start":1,"column_end":22}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":4041,"byte_end":4046,"line_start":121,"line_end":121,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":4047,"byte_end":4050,"line_start":122,"line_end":122,"column_start":1,"column_end":4}},{"value":"/ struct Runtime; // doesn't implement `TypeInfo`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":4051,"byte_end":4102,"line_start":123,"line_end":123,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":4103,"byte_end":4106,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ impl Config for Runtime {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":4107,"byte_end":4136,"line_start":125,"line_end":125,"column_start":1,"column_end":30}},{"value":"/     type Balance = u64;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":4137,"byte_end":4164,"line_start":126,"line_end":126,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":4165,"byte_end":4170,"line_start":127,"line_end":127,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":4171,"byte_end":4174,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ #[allow(unused)]","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":4175,"byte_end":4195,"line_start":129,"line_end":129,"column_start":1,"column_end":21}},{"value":"/ #[derive(TypeInfo)]","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":4196,"byte_end":4219,"line_start":130,"line_end":130,"column_start":1,"column_end":24}},{"value":"/ #[scale_info(skip_type_params(T))]","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":4220,"byte_end":4258,"line_start":131,"line_end":131,"column_start":1,"column_end":39}},{"value":"/ struct A<T: Config> {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":4259,"byte_end":4284,"line_start":132,"line_end":132,"column_start":1,"column_end":26}},{"value":"/     balance: T::Balance,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":4285,"byte_end":4313,"line_start":133,"line_end":133,"column_start":1,"column_end":29}},{"value":"/     marker: core::marker::PhantomData<T>,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":4314,"byte_end":4359,"line_start":134,"line_end":134,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":4360,"byte_end":4365,"line_start":135,"line_end":135,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":4366,"byte_end":4369,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ fn assert_type_info<T: scale_info::TypeInfo + 'static>() {}","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":4370,"byte_end":4433,"line_start":137,"line_end":137,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":4434,"byte_end":4437,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ fn main() {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":4438,"byte_end":4453,"line_start":139,"line_end":139,"column_start":1,"column_end":16}},{"value":"/     // without the `skip_type_params` attribute this will fail.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":4454,"byte_end":4521,"line_start":140,"line_end":140,"column_start":1,"column_end":68}},{"value":"/     assert_type_info::<A<Runtime>>();","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":4522,"byte_end":4563,"line_start":141,"line_end":141,"column_start":1,"column_end":42}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":4564,"byte_end":4569,"line_start":142,"line_end":142,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":4570,"byte_end":4577,"line_start":143,"line_end":143,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":4578,"byte_end":4581,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ By default, the derived `TypeInfo` implementation will add the type of all type parameters to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":4582,"byte_end":4679,"line_start":145,"line_end":145,"column_start":1,"column_end":98}},{"value":"/ the `TypeParameter` specification e.g.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":4680,"byte_end":4722,"line_start":146,"line_end":146,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":4723,"byte_end":4726,"line_start":147,"line_end":147,"column_start":1,"column_end":4}},{"value":"/ `type_params(vec![TypeParameter::new(\"T\", Some(MetaType::new::<T>()))])`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":4727,"byte_end":4803,"line_start":148,"line_end":148,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":4804,"byte_end":4807,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ In the example above, this will cause a compiler error because `Runtime` is the concrete tyoe","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":4808,"byte_end":4905,"line_start":150,"line_end":150,"column_start":1,"column_end":98}},{"value":"/ for `T`, which does not satisfy the `TypeInfo` requirement of `MetaType::new::<T>()`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":4906,"byte_end":4995,"line_start":151,"line_end":151,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":4996,"byte_end":4999,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ Simply adding a `TypeInfo` derive to `Runtime` is one way of solving this, but that could be","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":5000,"byte_end":5096,"line_start":153,"line_end":153,"column_start":1,"column_end":97}},{"value":"/ misleading (why does it need `TypeInfo` if a value of that type is never encoded?), and can","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":5097,"byte_end":5192,"line_start":154,"line_end":154,"column_start":1,"column_end":96}},{"value":"/ sometimes require adding `TypeInfo` bounds in other impl blocks.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":5193,"byte_end":5261,"line_start":155,"line_end":155,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":5262,"byte_end":5265,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ The `skip_type_params` attribute solves this, providing an additional \"escape hatch\" which","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":5266,"byte_end":5360,"line_start":157,"line_end":157,"column_start":1,"column_end":95}},{"value":"/ prevents the given type parameter's type information being required:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":5361,"byte_end":5433,"line_start":158,"line_end":158,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":5434,"byte_end":5437,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ `type_params(vec![TypeParameter::new(\"T\", None)])`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":5438,"byte_end":5492,"line_start":160,"line_end":160,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":5493,"byte_end":5496,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ The generated type params do not now require `T` to implement `TypeInfo`, so the auto-generated","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":5497,"byte_end":5596,"line_start":162,"line_end":162,"column_start":1,"column_end":100}},{"value":"/ bound is not added to the generated `TypeInfo` `where` clause.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":5597,"byte_end":5663,"line_start":163,"line_end":163,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":5664,"byte_end":5667,"line_start":164,"line_end":164,"column_start":1,"column_end":4}},{"value":"/ #### Combining `bounds` and `skip_type_params`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":5668,"byte_end":5718,"line_start":165,"line_end":165,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":5719,"byte_end":5722,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ These two attributes can complement one another, particularly in the case where using `bounds`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":5723,"byte_end":5821,"line_start":167,"line_end":167,"column_start":1,"column_end":99}},{"value":"/ would still require manually adding a `TypeInfo` bound for the type parameter:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":5822,"byte_end":5904,"line_start":168,"line_end":168,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":5905,"byte_end":5908,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":5909,"byte_end":5922,"line_start":170,"line_end":170,"column_start":1,"column_end":14}},{"value":"/ #[derive(TypeInfo)]","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":5923,"byte_end":5946,"line_start":171,"line_end":171,"column_start":1,"column_end":24}},{"value":"/ #[scale_info(bounds(), skip_type_params(T))]","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":5947,"byte_end":5995,"line_start":172,"line_end":172,"column_start":1,"column_end":49}},{"value":"/ struct A<T> {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":5996,"byte_end":6013,"line_start":173,"line_end":173,"column_start":1,"column_end":18}},{"value":"/     marker: core::marker::PhantomData<T>,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":6014,"byte_end":6059,"line_start":174,"line_end":174,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":6060,"byte_end":6065,"line_start":175,"line_end":175,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":6066,"byte_end":6073,"line_start":176,"line_end":176,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":6074,"byte_end":6077,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ Without `skip_type_params` in the example above, it would require the `TypeInfo` bounds for `T`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":6078,"byte_end":6177,"line_start":178,"line_end":178,"column_start":1,"column_end":100}},{"value":"/ to be added manually e.g. `#[scale_info(bounds(T: TypeInfo + 'static))]`. Since the intention of","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":6178,"byte_end":6278,"line_start":179,"line_end":179,"column_start":1,"column_end":101}},{"value":"/ the empty bounds is to **remove** all type bounds, then the addition of `skip_type_params`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":6279,"byte_end":6373,"line_start":180,"line_end":180,"column_start":1,"column_end":95}},{"value":"/ allows this to compile successfully.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":6374,"byte_end":6414,"line_start":181,"line_end":181,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":6415,"byte_end":6418,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ ##### Precedence","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":6419,"byte_end":6439,"line_start":183,"line_end":183,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":6440,"byte_end":6443,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ When used independently, both attributes modify the `where` clause of the derived `TypeInfo`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":6444,"byte_end":6540,"line_start":185,"line_end":185,"column_start":1,"column_end":97}},{"value":"/ impl. When used together, the predicates supplied in the `bounds` attribute replaces *all*","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":6541,"byte_end":6635,"line_start":186,"line_end":186,"column_start":1,"column_end":95}},{"value":"/ auto-generated bounds, and `skip_type_params` will have no effect on the resulting `where`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":6636,"byte_end":6730,"line_start":187,"line_end":187,"column_start":1,"column_end":95}},{"value":"/ clause.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":6731,"byte_end":6742,"line_start":188,"line_end":188,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":6743,"byte_end":6746,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ **Note:** When using `bounds` without `skip_type_params`, it is therefore required to manually","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":6747,"byte_end":6845,"line_start":190,"line_end":190,"column_start":1,"column_end":99}},{"value":"/ add a `TypeInfo` bound for any non skipped type parameters. The compiler will let you know.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":6846,"byte_end":6941,"line_start":191,"line_end":191,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":6942,"byte_end":6945,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ #### `#[scale_info(capture_docs = \"default|always|never\")]`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":6946,"byte_end":7009,"line_start":193,"line_end":193,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":7010,"byte_end":7013,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ Docs for types, fields and variants can all be captured by the `docs` feature being enabled.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":7014,"byte_end":7110,"line_start":195,"line_end":195,"column_start":1,"column_end":97}},{"value":"/ This can be overridden using the `capture_docs` attribute:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":7111,"byte_end":7173,"line_start":196,"line_end":196,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":7174,"byte_end":7177,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ `#[scale_info(capture_docs = \"default\")]` will capture docs iff the `docs` feature is enabled.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":7178,"byte_end":7276,"line_start":198,"line_end":198,"column_start":1,"column_end":99}},{"value":"/ This is the default if `capture_docs` is not specified.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":7277,"byte_end":7336,"line_start":199,"line_end":199,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":7337,"byte_end":7340,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ `#[scale_info(capture_docs = \"always\")]` will capture docs for the annotated type even if the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":7341,"byte_end":7438,"line_start":201,"line_end":201,"column_start":1,"column_end":98}},{"value":"/ `docs` feature is *not* enabled.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":7439,"byte_end":7475,"line_start":202,"line_end":202,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":7476,"byte_end":7479,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ `#[scale_info(capture_docs = \"never\")]` will *not* capture docs for the annotated type even if","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":7480,"byte_end":7578,"line_start":204,"line_end":204,"column_start":1,"column_end":99}},{"value":"/ the `docs` is enabled.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":7579,"byte_end":7605,"line_start":205,"line_end":205,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":7606,"byte_end":7609,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ This is useful e.g. when compiling metadata into a Wasm blob, and it is desirable to keep the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":7610,"byte_end":7707,"line_start":207,"line_end":207,"column_start":1,"column_end":98}},{"value":"/ binary size as small as possible, so the `docs` feature would be disabled. In case the docs for","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":7708,"byte_end":7807,"line_start":208,"line_end":208,"column_start":1,"column_end":100}},{"value":"/ some types is necessary they could be enabled on a per-type basis with the above attribute.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":7808,"byte_end":7903,"line_start":209,"line_end":209,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":7904,"byte_end":7907,"line_start":210,"line_end":210,"column_start":1,"column_end":4}},{"value":"/ #### `#[scale_info(crate = path::to::crate)]`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":7908,"byte_end":7957,"line_start":211,"line_end":211,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":7958,"byte_end":7961,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ Specify a path to the scale-info crate instance to use when referring to the APIs from generated","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":7962,"byte_end":8062,"line_start":213,"line_end":213,"column_start":1,"column_end":101}},{"value":"/ code. This is normally only applicable when invoking re-exported scale-info derives from a public","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":8063,"byte_end":8164,"line_start":214,"line_end":214,"column_start":1,"column_end":102}},{"value":"/ macro in a different crate. For example:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":8165,"byte_end":8209,"line_start":215,"line_end":215,"column_start":1,"column_end":45}},{"value":"/ ```ignore","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":8210,"byte_end":8223,"line_start":216,"line_end":216,"column_start":1,"column_end":14}},{"value":"/ use scale_info_reexport::info::TypeInfo;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":8224,"byte_end":8268,"line_start":217,"line_end":217,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":8269,"byte_end":8272,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ #[derive(TypeInfo)]","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":8273,"byte_end":8296,"line_start":219,"line_end":219,"column_start":1,"column_end":24}},{"value":"/ #[scale_info(crate = scale_info_reexport::info)]","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":8297,"byte_end":8349,"line_start":220,"line_end":220,"column_start":1,"column_end":53}},{"value":"/ enum TestEnum {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":8350,"byte_end":8369,"line_start":221,"line_end":221,"column_start":1,"column_end":20}},{"value":"/     FirstVariant,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":8370,"byte_end":8391,"line_start":222,"line_end":222,"column_start":1,"column_end":22}},{"value":"/     SecondVariant,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":8392,"byte_end":8414,"line_start":223,"line_end":223,"column_start":1,"column_end":23}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":8415,"byte_end":8420,"line_start":224,"line_end":224,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":8421,"byte_end":8428,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":8429,"byte_end":8432,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ # Forms","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":8433,"byte_end":8444,"line_start":227,"line_end":227,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":8445,"byte_end":8448,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ To bridge between compile-time type information and runtime the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":8449,"byte_end":8516,"line_start":229,"line_end":229,"column_start":1,"column_end":68}},{"value":"/ [`MetaForm`](`crate::form::MetaForm`) is used to easily retrieve all","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":8517,"byte_end":8589,"line_start":230,"line_end":230,"column_start":1,"column_end":73}},{"value":"/ information needed to uniquely identify types.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":8590,"byte_end":8640,"line_start":231,"line_end":231,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":8641,"byte_end":8644,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ The `MetaForm` and its associated `Registry` can be transformed into the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":8645,"byte_end":8721,"line_start":233,"line_end":233,"column_start":1,"column_end":77}},{"value":"/ space-efficient form by the [`IntoPortable`](`crate::IntoPortable`) trait; it is","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":8722,"byte_end":8806,"line_start":234,"line_end":234,"column_start":1,"column_end":85}},{"value":"/ used internally by the [`Registry`](`crate::Registry`) in order to convert","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":8807,"byte_end":8885,"line_start":235,"line_end":235,"column_start":1,"column_end":79}},{"value":"/ the expanded types into their space-efficient form.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":8886,"byte_end":8941,"line_start":236,"line_end":236,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":8942,"byte_end":8945,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ # Symbols and Namespaces","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":8946,"byte_end":8974,"line_start":238,"line_end":238,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":8975,"byte_end":8978,"line_start":239,"line_end":239,"column_start":1,"column_end":4}},{"value":"/ To differentiate two types sharing the same name, namespaces are used.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":8979,"byte_end":9053,"line_start":240,"line_end":240,"column_start":1,"column_end":75}},{"value":"/ Commonly the namespace is equal to the one where the type has been defined","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":9054,"byte_end":9132,"line_start":241,"line_end":241,"column_start":1,"column_end":79}},{"value":"/ in. For Rust prelude types such as [`Option`](`std::option::Option`) and","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":9133,"byte_end":9209,"line_start":242,"line_end":242,"column_start":1,"column_end":77}},{"value":"/ [`Result`](`std::result::Result`) the root namespace (empty namespace) is","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":9210,"byte_end":9287,"line_start":243,"line_end":243,"column_start":1,"column_end":78}},{"value":"/ used.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":9288,"byte_end":9297,"line_start":244,"line_end":244,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":9298,"byte_end":9301,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ To use this library simply use the [`MetaForm`](`crate::form::MetaForm`)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":9302,"byte_end":9378,"line_start":246,"line_end":246,"column_start":1,"column_end":77}},{"value":"/ initially with your own data structures; make them generic over the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":9379,"byte_end":9450,"line_start":247,"line_end":247,"column_start":1,"column_end":72}},{"value":"/ [`Form`](`crate::form::Form`) trait just as has been done in this crate with","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":9451,"byte_end":9531,"line_start":248,"line_end":248,"column_start":1,"column_end":81}},{"value":"/ [`TypeInfo`](`crate::TypeInfo`) in order to get a simple implementation of","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":9532,"byte_end":9610,"line_start":249,"line_end":249,"column_start":1,"column_end":79}},{"value":"/ [`IntoPortable`](`crate::IntoPortable`). Use a single instance of the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":9611,"byte_end":9684,"line_start":250,"line_end":250,"column_start":1,"column_end":74}},{"value":"/ [`Registry`](`crate::Registry`) for compaction and provide this registry","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":9685,"byte_end":9761,"line_start":251,"line_end":251,"column_start":1,"column_end":77}},{"value":"/ instance upon serialization.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":9762,"byte_end":9794,"line_start":252,"line_end":252,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":9795,"byte_end":9798,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ A usage example can be found in ink! here:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":9799,"byte_end":9845,"line_start":254,"line_end":254,"column_start":1,"column_end":47}},{"value":"/ https://github.com/paritytech/ink/blob/master/abi/src/specs.rs","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":9846,"byte_end":9912,"line_start":255,"line_end":255,"column_start":1,"column_end":67}}]},{"kind":"Mod","id":{"krate":0,"index":7},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/prelude.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"prelude","qualname":"::prelude","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/prelude.rs","parent":null,"children":[{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":998},{"krate":0,"index":1001},{"krate":0,"index":1004},{"krate":0,"index":1007},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1017},{"krate":0,"index":1020},{"krate":0,"index":1023},{"krate":0,"index":1026},{"krate":0,"index":1029},{"krate":0,"index":1032},{"krate":0,"index":1035}],"decl_id":null,"docs":" Exports from `std`, `core` and `alloc` crates.","sig":null,"attributes":[{"value":"/ Exports from `std`, `core` and `alloc` crates.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/prelude.rs","byte_start":14240,"byte_end":14290,"line_start":15,"line_end":15,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/prelude.rs","byte_start":14291,"byte_end":14294,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Guarantees a stable interface between `std` and `no_std` modes.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/prelude.rs","byte_start":14295,"byte_end":14362,"line_start":17,"line_end":17,"column_start":1,"column_end":68}}]},{"kind":"Mod","id":{"krate":0,"index":12},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"build","qualname":"::build","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","parent":null,"children":[{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":71},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":85},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":103},{"krate":0,"index":108},{"krate":0,"index":113},{"krate":0,"index":117},{"krate":0,"index":121},{"krate":0,"index":124},{"krate":0,"index":127},{"krate":0,"index":130},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":144},{"krate":0,"index":153},{"krate":0,"index":158},{"krate":0,"index":161},{"krate":0,"index":165},{"krate":0,"index":171},{"krate":0,"index":175},{"krate":0,"index":180},{"krate":0,"index":183},{"krate":0,"index":188},{"krate":0,"index":1038},{"krate":0,"index":1041},{"krate":0,"index":192},{"krate":0,"index":199},{"krate":0,"index":202},{"krate":0,"index":211},{"krate":0,"index":215},{"krate":0,"index":221},{"krate":0,"index":223},{"krate":0,"index":227}],"decl_id":null,"docs":" Builders for defining metadata for variant types (enums), and composite types (structs).\n They are designed to allow only construction of valid definitions.","sig":null,"attributes":[{"value":"/ Builders for defining metadata for variant types (enums), and composite types (structs).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":15740,"byte_end":15832,"line_start":15,"line_end":15,"column_start":1,"column_end":93}},{"value":"/ They are designed to allow only construction of valid definitions.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":15833,"byte_end":15903,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":15904,"byte_end":15907,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ In most cases we recommend using the `scale-info-derive` crate to auto generate the builder","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":15908,"byte_end":16003,"line_start":18,"line_end":18,"column_start":1,"column_end":96}},{"value":"/ constructions.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":16004,"byte_end":16022,"line_start":19,"line_end":19,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":16023,"byte_end":16026,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":16027,"byte_end":16041,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":16042,"byte_end":16045,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ## Generic struct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":16046,"byte_end":16067,"line_start":23,"line_end":23,"column_start":1,"column_end":22}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":16068,"byte_end":16075,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ # use scale_info::{build::Fields, type_params, MetaType, Path, Type, TypeInfo};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":16076,"byte_end":16159,"line_start":25,"line_end":25,"column_start":1,"column_end":84}},{"value":"/ struct Foo<T> {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":16160,"byte_end":16179,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"/     bar: T,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":16180,"byte_end":16195,"line_start":27,"line_end":27,"column_start":1,"column_end":16}},{"value":"/     data: u64,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":16196,"byte_end":16214,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":16215,"byte_end":16220,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":16221,"byte_end":16224,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ impl<T> TypeInfo for Foo<T>","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":16225,"byte_end":16256,"line_start":31,"line_end":31,"column_start":1,"column_end":32}},{"value":"/ where","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":16257,"byte_end":16266,"line_start":32,"line_end":32,"column_start":1,"column_end":10}},{"value":"/     T: TypeInfo + 'static,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":16267,"byte_end":16297,"line_start":33,"line_end":33,"column_start":1,"column_end":31}},{"value":"/ {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":16298,"byte_end":16303,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/     type Identity = Self;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":16304,"byte_end":16333,"line_start":35,"line_end":35,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":16334,"byte_end":16337,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/     fn type_info() -> Type {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":16338,"byte_end":16370,"line_start":37,"line_end":37,"column_start":1,"column_end":33}},{"value":"/         Type::builder()","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":16371,"byte_end":16398,"line_start":38,"line_end":38,"column_start":1,"column_end":28}},{"value":"/             .path(Path::new(\"Foo\", module_path!()))","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":16399,"byte_end":16454,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/             .type_params(type_params!(T))","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":16455,"byte_end":16500,"line_start":40,"line_end":40,"column_start":1,"column_end":46}},{"value":"/             .composite(Fields::named()","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":16501,"byte_end":16543,"line_start":41,"line_end":41,"column_start":1,"column_end":43}},{"value":"/                 .field(|f| f.ty::<T>().name(\"bar\").type_name(\"T\"))","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":16544,"byte_end":16614,"line_start":42,"line_end":42,"column_start":1,"column_end":71}},{"value":"/                 .field(|f| f.ty::<u64>().name(\"data\").type_name(\"u64\"))","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":16615,"byte_end":16690,"line_start":43,"line_end":43,"column_start":1,"column_end":76}},{"value":"/             )","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":16691,"byte_end":16708,"line_start":44,"line_end":44,"column_start":1,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":16709,"byte_end":16718,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":16719,"byte_end":16724,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":16725,"byte_end":16732,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ ## Tuple struct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":16733,"byte_end":16752,"line_start":48,"line_end":48,"column_start":1,"column_end":20}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":16753,"byte_end":16760,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/ # use scale_info::{build::Fields, MetaType, Path, Type, TypeInfo};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":16761,"byte_end":16831,"line_start":50,"line_end":50,"column_start":1,"column_end":71}},{"value":"/ struct Foo(u32, bool);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":16832,"byte_end":16858,"line_start":51,"line_end":51,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":16859,"byte_end":16862,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ impl TypeInfo for Foo {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":16863,"byte_end":16890,"line_start":53,"line_end":53,"column_start":1,"column_end":28}},{"value":"/     type Identity = Self;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":16891,"byte_end":16920,"line_start":54,"line_end":54,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":16921,"byte_end":16924,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/     fn type_info() -> Type {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":16925,"byte_end":16957,"line_start":56,"line_end":56,"column_start":1,"column_end":33}},{"value":"/         Type::builder()","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":16958,"byte_end":16985,"line_start":57,"line_end":57,"column_start":1,"column_end":28}},{"value":"/             .path(Path::new(\"Foo\", module_path!()))","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":16986,"byte_end":17041,"line_start":58,"line_end":58,"column_start":1,"column_end":56}},{"value":"/             .composite(Fields::unnamed()","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":17042,"byte_end":17086,"line_start":59,"line_end":59,"column_start":1,"column_end":45}},{"value":"/                 .field(|f| f.ty::<u32>().type_name(\"u32\"))","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":17087,"byte_end":17149,"line_start":60,"line_end":60,"column_start":1,"column_end":63}},{"value":"/                 .field(|f| f.ty::<bool>().type_name(\"bool\"))","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":17150,"byte_end":17214,"line_start":61,"line_end":61,"column_start":1,"column_end":65}},{"value":"/             )","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":17215,"byte_end":17232,"line_start":62,"line_end":62,"column_start":1,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":17233,"byte_end":17242,"line_start":63,"line_end":63,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":17243,"byte_end":17248,"line_start":64,"line_end":64,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":17249,"byte_end":17256,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/ ## Enum with fields","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":17257,"byte_end":17280,"line_start":66,"line_end":66,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":17281,"byte_end":17288,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/ # use scale_info::{build::{Fields, Variants}, type_params, MetaType, Path, Type, TypeInfo, Variant};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":17289,"byte_end":17393,"line_start":68,"line_end":68,"column_start":1,"column_end":105}},{"value":"/ enum Foo<T>{","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":17394,"byte_end":17410,"line_start":69,"line_end":69,"column_start":1,"column_end":17}},{"value":"/     A(T),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":17411,"byte_end":17424,"line_start":70,"line_end":70,"column_start":1,"column_end":14}},{"value":"/     B { f: u32 },","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":17425,"byte_end":17446,"line_start":71,"line_end":71,"column_start":1,"column_end":22}},{"value":"/     C,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":17447,"byte_end":17457,"line_start":72,"line_end":72,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":17458,"byte_end":17463,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":17464,"byte_end":17467,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ impl<T> TypeInfo for Foo<T>","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":17468,"byte_end":17499,"line_start":75,"line_end":75,"column_start":1,"column_end":32}},{"value":"/ where","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":17500,"byte_end":17509,"line_start":76,"line_end":76,"column_start":1,"column_end":10}},{"value":"/     T: TypeInfo + 'static,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":17510,"byte_end":17540,"line_start":77,"line_end":77,"column_start":1,"column_end":31}},{"value":"/ {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":17541,"byte_end":17546,"line_start":78,"line_end":78,"column_start":1,"column_end":6}},{"value":"/     type Identity = Self;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":17547,"byte_end":17576,"line_start":79,"line_end":79,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":17577,"byte_end":17580,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/     fn type_info() -> Type {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":17581,"byte_end":17613,"line_start":81,"line_end":81,"column_start":1,"column_end":33}},{"value":"/         Type::builder()","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":17614,"byte_end":17641,"line_start":82,"line_end":82,"column_start":1,"column_end":28}},{"value":"/             .path(Path::new(\"Foo\", module_path!()))","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":17642,"byte_end":17697,"line_start":83,"line_end":83,"column_start":1,"column_end":56}},{"value":"/                .type_params(type_params!(T))","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":17698,"byte_end":17746,"line_start":84,"line_end":84,"column_start":1,"column_end":49}},{"value":"/             .variant(","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":17747,"byte_end":17772,"line_start":85,"line_end":85,"column_start":1,"column_end":26}},{"value":"/                 Variants::new()","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":17773,"byte_end":17808,"line_start":86,"line_end":86,"column_start":1,"column_end":36}},{"value":"/                     .variant(\"A\", |v| v","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":17809,"byte_end":17852,"line_start":87,"line_end":87,"column_start":1,"column_end":44}},{"value":"/                         .index(0)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":17853,"byte_end":17890,"line_start":88,"line_end":88,"column_start":1,"column_end":38}},{"value":"/                         .fields(Fields::unnamed().field(|f| f.ty::<T>().type_name(\"T\")))","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":17891,"byte_end":17983,"line_start":89,"line_end":89,"column_start":1,"column_end":93}},{"value":"/                     )","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":17984,"byte_end":18009,"line_start":90,"line_end":90,"column_start":1,"column_end":26}},{"value":"/                     .variant(\"B\", |v| v","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":18010,"byte_end":18053,"line_start":91,"line_end":91,"column_start":1,"column_end":44}},{"value":"/                         .index(1)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":18054,"byte_end":18091,"line_start":92,"line_end":92,"column_start":1,"column_end":38}},{"value":"/                         .fields(Fields::named().field(|f| f.ty::<u32>().name(\"f\").type_name(\"u32\")))","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":18092,"byte_end":18196,"line_start":93,"line_end":93,"column_start":1,"column_end":105}},{"value":"/                     )","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":18197,"byte_end":18222,"line_start":94,"line_end":94,"column_start":1,"column_end":26}},{"value":"/                     .variant_unit(\"A\", 2)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":18223,"byte_end":18268,"line_start":95,"line_end":95,"column_start":1,"column_end":46}},{"value":"/             )","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":18269,"byte_end":18286,"line_start":96,"line_end":96,"column_start":1,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":18287,"byte_end":18296,"line_start":97,"line_end":97,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":18297,"byte_end":18302,"line_start":98,"line_end":98,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":18303,"byte_end":18310,"line_start":99,"line_end":99,"column_start":1,"column_end":8}},{"value":"/ ## Enum without fields, aka C-style enums.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":18311,"byte_end":18357,"line_start":100,"line_end":100,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":18358,"byte_end":18365,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/ # use scale_info::{build::{Fields, Variants}, MetaType, Path, Type, TypeInfo, Variant};","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":18366,"byte_end":18457,"line_start":102,"line_end":102,"column_start":1,"column_end":92}},{"value":"/ enum Foo {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":18458,"byte_end":18472,"line_start":103,"line_end":103,"column_start":1,"column_end":15}},{"value":"/     A,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":18473,"byte_end":18483,"line_start":104,"line_end":104,"column_start":1,"column_end":11}},{"value":"/     B,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":18484,"byte_end":18494,"line_start":105,"line_end":105,"column_start":1,"column_end":11}},{"value":"/     C = 33,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":18495,"byte_end":18510,"line_start":106,"line_end":106,"column_start":1,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":18511,"byte_end":18516,"line_start":107,"line_end":107,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":18517,"byte_end":18520,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ impl TypeInfo for Foo {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":18521,"byte_end":18548,"line_start":109,"line_end":109,"column_start":1,"column_end":28}},{"value":"/     type Identity = Self;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":18549,"byte_end":18578,"line_start":110,"line_end":110,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":18579,"byte_end":18582,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/     fn type_info() -> Type {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":18583,"byte_end":18615,"line_start":112,"line_end":112,"column_start":1,"column_end":33}},{"value":"/         Type::builder()","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":18616,"byte_end":18643,"line_start":113,"line_end":113,"column_start":1,"column_end":28}},{"value":"/             .path(Path::new(\"Foo\", module_path!()))","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":18644,"byte_end":18699,"line_start":114,"line_end":114,"column_start":1,"column_end":56}},{"value":"/             .variant(","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":18700,"byte_end":18725,"line_start":115,"line_end":115,"column_start":1,"column_end":26}},{"value":"/                 Variants::new()","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":18726,"byte_end":18761,"line_start":116,"line_end":116,"column_start":1,"column_end":36}},{"value":"/                     .variant(\"A\", |v| v.index(1))","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":18762,"byte_end":18815,"line_start":117,"line_end":117,"column_start":1,"column_end":54}},{"value":"/                     .variant(\"B\", |v| v.index(2))","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":18816,"byte_end":18869,"line_start":118,"line_end":118,"column_start":1,"column_end":54}},{"value":"/                     .variant(\"C\", |v| v.index(33))","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":18870,"byte_end":18924,"line_start":119,"line_end":119,"column_start":1,"column_end":55}},{"value":"/             )","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":18925,"byte_end":18942,"line_start":120,"line_end":120,"column_start":1,"column_end":18}},{"value":"/     }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":18943,"byte_end":18952,"line_start":121,"line_end":121,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":18953,"byte_end":18958,"line_start":122,"line_end":122,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":18959,"byte_end":18966,"line_start":123,"line_end":123,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":61},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":19333,"byte_end":19338,"line_start":149,"line_end":149,"column_start":9,"column_end":14},"name":"state","qualname":"::build::state","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":63}],"decl_id":null,"docs":" State types for type builders which require a Path.\n","sig":null,"attributes":[{"value":"/ State types for type builders which require a Path.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":19269,"byte_end":19324,"line_start":148,"line_end":148,"column_start":1,"column_end":56}}]},{"kind":"Enum","id":{"krate":0,"index":62},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":19422,"byte_end":19437,"line_start":151,"line_end":151,"column_start":14,"column_end":29},"name":"PathNotAssigned","qualname":"::build::state::PathNotAssigned","value":"enum PathNotAssigned { }","parent":null,"children":[],"decl_id":null,"docs":" State where the builder has not assigned a Path to the type\n","sig":null,"attributes":[{"value":"/ State where the builder has not assigned a Path to the type","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":19345,"byte_end":19408,"line_start":150,"line_end":150,"column_start":5,"column_end":68}}]},{"kind":"Enum","id":{"krate":0,"index":63},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":19518,"byte_end":19530,"line_start":153,"line_end":153,"column_start":14,"column_end":26},"name":"PathAssigned","qualname":"::build::state::PathAssigned","value":"enum PathAssigned { }","parent":null,"children":[],"decl_id":null,"docs":" State where the builder has assigned a Path to the type\n","sig":null,"attributes":[{"value":"/ State where the builder has assigned a Path to the type","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":19445,"byte_end":19504,"line_start":152,"line_end":152,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":64},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":19597,"byte_end":19608,"line_start":158,"line_end":158,"column_start":12,"column_end":23},"name":"TypeBuilder","qualname":"::build::TypeBuilder","value":"TypeBuilder {  }","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70}],"decl_id":null,"docs":" Builds a [`Type`](`crate::Type`)\n","sig":null,"attributes":[{"value":"/ Builds a [`Type`](`crate::Type`)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":19537,"byte_end":19573,"line_start":156,"line_end":156,"column_start":1,"column_end":37}},{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":19574,"byte_end":19585,"line_start":157,"line_end":157,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":19852,"byte_end":19859,"line_start":166,"line_end":166,"column_start":8,"column_end":15},"name":"default","qualname":"<TypeBuilder<F, S> as core::default::Default>::default","value":"fn default() -> Self","parent":{"krate":1,"index":3241},"children":[],"decl_id":{"krate":1,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":20174,"byte_end":20178,"line_start":178,"line_end":178,"column_start":12,"column_end":16},"name":"path","qualname":"<TypeBuilder<F, state::PathNotAssigned>>::path","value":"fn path(Self, Path<F>) -> TypeBuilder<F, state::PathAssigned>","parent":null,"children":[],"decl_id":null,"docs":" Set the Path for the type\n","sig":null,"attributes":[{"value":"/ Set the Path for the type","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":20133,"byte_end":20162,"line_start":177,"line_end":177,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":20755,"byte_end":20762,"line_start":198,"line_end":198,"column_start":12,"column_end":19},"name":"variant","qualname":"<TypeBuilder<F, state::PathAssigned>>::variant","value":"fn variant(Self, Variants<F>) -> Type<F>","parent":null,"children":[],"decl_id":null,"docs":" Construct a \"variant\" type i.e an `enum`\n","sig":null,"attributes":[{"value":"/ Construct a \"variant\" type i.e an `enum`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":20699,"byte_end":20743,"line_start":197,"line_end":197,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":83},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":20914,"byte_end":20923,"line_start":203,"line_end":203,"column_start":12,"column_end":21},"name":"composite","qualname":"<TypeBuilder<F, state::PathAssigned>>::composite","value":"fn composite<T>(Self, FieldsBuilder<F, T>) -> Type<F>","parent":null,"children":[],"decl_id":null,"docs":" Construct a \"composite\" type i.e. a `struct`\n","sig":null,"attributes":[{"value":"/ Construct a \"composite\" type i.e. a `struct`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":20854,"byte_end":20902,"line_start":202,"line_end":202,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":21148,"byte_end":21159,"line_start":210,"line_end":210,"column_start":12,"column_end":23},"name":"type_params","qualname":"<TypeBuilder<F, S>>::type_params","value":"fn type_params<I>(Self, I) -> Self where I: IntoIterator<Item =\nTypeParameter<F>>","parent":null,"children":[],"decl_id":null,"docs":" Set the type parameters if it's a generic type\n","sig":null,"attributes":[{"value":"/ Set the type parameters if it's a generic type","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":21086,"byte_end":21136,"line_start":209,"line_end":209,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":22035,"byte_end":22039,"line_start":242,"line_end":242,"column_start":12,"column_end":16},"name":"docs","qualname":"<TypeBuilder<MetaForm, S>>::docs","value":"fn docs(Self, &'static [&'static str]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Doc capture is not enabled via the \"docs\" feature so this is a no-op.\n","sig":null,"attributes":[{"value":"cfg(not(feature = \"docs\"))","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":21902,"byte_end":21931,"line_start":239,"line_end":239,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":21936,"byte_end":21945,"line_start":240,"line_end":240,"column_start":5,"column_end":14}},{"value":"/ Doc capture is not enabled via the \"docs\" feature so this is a no-op.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":21950,"byte_end":22023,"line_start":241,"line_end":241,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":22214,"byte_end":22225,"line_start":247,"line_end":247,"column_start":12,"column_end":23},"name":"docs_always","qualname":"<TypeBuilder<MetaForm, S>>::docs_always","value":"fn docs_always<'_>(Self, &'_ [&'static str]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the type documentation, always captured even if the \"docs\" feature is not enabled.\n","sig":null,"attributes":[{"value":"/ Set the type documentation, always captured even if the \"docs\" feature is not enabled.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":22112,"byte_end":22202,"line_start":246,"line_end":246,"column_start":5,"column_end":95}}]},{"kind":"Enum","id":{"krate":0,"index":96},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":22391,"byte_end":22399,"line_start":254,"line_end":254,"column_start":10,"column_end":18},"name":"NoFields","qualname":"::build::NoFields","value":"enum NoFields { }","parent":null,"children":[],"decl_id":null,"docs":" A fields builder has no fields (e.g. a unit struct)\n","sig":null,"attributes":[{"value":"/ A fields builder has no fields (e.g. a unit struct)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":22326,"byte_end":22381,"line_start":253,"line_end":253,"column_start":1,"column_end":56}}]},{"kind":"Enum","id":{"krate":0,"index":97},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":22474,"byte_end":22485,"line_start":256,"line_end":256,"column_start":10,"column_end":21},"name":"NamedFields","qualname":"::build::NamedFields","value":"enum NamedFields { }","parent":null,"children":[],"decl_id":null,"docs":" A fields builder only allows named fields (e.g. a struct)\n","sig":null,"attributes":[{"value":"/ A fields builder only allows named fields (e.g. a struct)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":22403,"byte_end":22464,"line_start":255,"line_end":255,"column_start":1,"column_end":62}}]},{"kind":"Enum","id":{"krate":0,"index":98},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":22561,"byte_end":22574,"line_start":258,"line_end":258,"column_start":10,"column_end":23},"name":"UnnamedFields","qualname":"::build::UnnamedFields","value":"enum UnnamedFields { }","parent":null,"children":[],"decl_id":null,"docs":" A fields builder only allows unnamed fields (e.g. a tuple)\n","sig":null,"attributes":[{"value":"/ A fields builder only allows unnamed fields (e.g. a tuple)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":22489,"byte_end":22551,"line_start":257,"line_end":257,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":99},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":22630,"byte_end":22636,"line_start":261,"line_end":261,"column_start":12,"column_end":18},"name":"Fields","qualname":"::build::Fields","value":"","parent":null,"children":[],"decl_id":null,"docs":" Provides FieldsBuilder constructors\n","sig":null,"attributes":[{"value":"/ Provides FieldsBuilder constructors","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":22579,"byte_end":22618,"line_start":260,"line_end":260,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":22750,"byte_end":22754,"line_start":265,"line_end":265,"column_start":12,"column_end":16},"name":"unit","qualname":"<Fields<F>>::unit","value":"fn unit() -> FieldsBuilder<F, NoFields>","parent":null,"children":[],"decl_id":null,"docs":" The type construct has no fields\n","sig":null,"attributes":[{"value":"/ The type construct has no fields","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":22702,"byte_end":22738,"line_start":264,"line_end":264,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":22909,"byte_end":22914,"line_start":270,"line_end":270,"column_start":12,"column_end":17},"name":"named","qualname":"<Fields<F>>::named","value":"fn named() -> FieldsBuilder<F, NamedFields>","parent":null,"children":[],"decl_id":null,"docs":" Fields for a type construct with named fields\n","sig":null,"attributes":[{"value":"/ Fields for a type construct with named fields","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":22848,"byte_end":22897,"line_start":269,"line_end":269,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":23059,"byte_end":23066,"line_start":275,"line_end":275,"column_start":12,"column_end":19},"name":"unnamed","qualname":"<Fields<F>>::unnamed","value":"fn unnamed() -> FieldsBuilder<F, UnnamedFields>","parent":null,"children":[],"decl_id":null,"docs":" Fields for a type construct with unnamed fields\n","sig":null,"attributes":[{"value":"/ Fields for a type construct with unnamed fields","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":22996,"byte_end":23047,"line_start":274,"line_end":274,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":108},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":23268,"byte_end":23281,"line_start":282,"line_end":282,"column_start":12,"column_end":25},"name":"FieldsBuilder","qualname":"::build::FieldsBuilder","value":"FieldsBuilder {  }","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":112}],"decl_id":null,"docs":" Build a set of either all named (e.g. for a struct) or all unnamed (e.g. for a tuple struct)\n","sig":null,"attributes":[{"value":"/ Build a set of either all named (e.g. for a struct) or all unnamed (e.g. for a tuple struct)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":23148,"byte_end":23244,"line_start":280,"line_end":280,"column_start":1,"column_end":97}},{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":23245,"byte_end":23256,"line_start":281,"line_end":281,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":23420,"byte_end":23427,"line_start":288,"line_end":288,"column_start":8,"column_end":15},"name":"default","qualname":"<FieldsBuilder<F, T> as core::default::Default>::default","value":"fn default() -> Self","parent":{"krate":1,"index":3241},"children":[],"decl_id":{"krate":1,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":23651,"byte_end":23659,"line_start":298,"line_end":298,"column_start":12,"column_end":20},"name":"finalize","qualname":"<FieldsBuilder<F, T>>::finalize","value":"fn finalize(Self) -> Vec<Field<F>>","parent":null,"children":[],"decl_id":null,"docs":" Complete building and return the set of fields\n","sig":null,"attributes":[{"value":"/ Complete building and return the set of fields","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":23589,"byte_end":23639,"line_start":297,"line_end":297,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":24066,"byte_end":24071,"line_start":315,"line_end":315,"column_start":12,"column_end":17},"name":"field","qualname":"<FieldsBuilder<MetaForm, NamedFields>>::field","value":"fn field<B>(Self, B) -> Self where B: Fn(FieldBuilder) ->\nFieldBuilder<MetaForm, field_state::NameAssigned, field_state::TypeAssigned>","parent":null,"children":[],"decl_id":null,"docs":" Add a named field constructed using the builder.\n","sig":null,"attributes":[{"value":"/ Add a named field constructed using the builder.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":24002,"byte_end":24054,"line_start":314,"line_end":314,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":24518,"byte_end":24523,"line_start":332,"line_end":332,"column_start":12,"column_end":17},"name":"field","qualname":"<FieldsBuilder<MetaForm, UnnamedFields>>::field","value":"fn field<B>(Self, B) -> Self where B: Fn(FieldBuilder) ->\nFieldBuilder<MetaForm, field_state::NameNotAssigned,\nfield_state::TypeAssigned>","parent":null,"children":[],"decl_id":null,"docs":" Add an unnamed field constructed using the builder.\n","sig":null,"attributes":[{"value":"/ Add an unnamed field constructed using the builder.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":24451,"byte_end":24506,"line_start":331,"line_end":331,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":25134,"byte_end":25148,"line_start":356,"line_end":356,"column_start":12,"column_end":26},"name":"field_portable","qualname":"<FieldsBuilder<PortableForm, NamedFields>>::field_portable","value":"fn field_portable<B>(Self, B) -> Self where\nB: Fn(FieldBuilder<PortableForm, field_state::NameNotAssigned,\nfield_state::TypeNotAssigned>) ->\nFieldBuilder<PortableForm, field_state::NameAssigned,\nfield_state::TypeAssigned>","parent":null,"children":[],"decl_id":null,"docs":" Add a named field constructed using the builder.\n","sig":null,"attributes":[{"value":"/ Add a named field constructed using the builder.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":25070,"byte_end":25122,"line_start":355,"line_end":355,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":25740,"byte_end":25754,"line_start":377,"line_end":377,"column_start":12,"column_end":26},"name":"field_portable","qualname":"<FieldsBuilder<PortableForm, UnnamedFields>>::field_portable","value":"fn field_portable<B>(Self, B) -> Self where\nB: Fn(FieldBuilder<PortableForm, field_state::NameNotAssigned,\nfield_state::TypeNotAssigned>) ->\nFieldBuilder<PortableForm, field_state::NameNotAssigned,\nfield_state::TypeAssigned>","parent":null,"children":[],"decl_id":null,"docs":" Add an unnamed field constructed using the builder.\n","sig":null,"attributes":[{"value":"/ Add an unnamed field constructed using the builder.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":25673,"byte_end":25728,"line_start":376,"line_end":376,"column_start":5,"column_end":60}}]},{"kind":"Mod","id":{"krate":0,"index":139},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":26274,"byte_end":26285,"line_start":397,"line_end":397,"column_start":9,"column_end":20},"name":"field_state","qualname":"::build::field_state","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143}],"decl_id":null,"docs":" Type states for building a field.\n","sig":null,"attributes":[{"value":"/ Type states for building a field.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":26228,"byte_end":26265,"line_start":396,"line_end":396,"column_start":1,"column_end":38}}]},{"kind":"Enum","id":{"krate":0,"index":140},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":26352,"byte_end":26367,"line_start":399,"line_end":399,"column_start":14,"column_end":29},"name":"NameNotAssigned","qualname":"::build::field_state::NameNotAssigned","value":"enum NameNotAssigned { }","parent":null,"children":[],"decl_id":null,"docs":" A name has not been assigned to the field.\n","sig":null,"attributes":[{"value":"/ A name has not been assigned to the field.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":26292,"byte_end":26338,"line_start":398,"line_end":398,"column_start":5,"column_end":51}}]},{"kind":"Enum","id":{"krate":0,"index":141},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":26431,"byte_end":26443,"line_start":401,"line_end":401,"column_start":14,"column_end":26},"name":"NameAssigned","qualname":"::build::field_state::NameAssigned","value":"enum NameAssigned { }","parent":null,"children":[],"decl_id":null,"docs":" A name has been assigned to the field.\n","sig":null,"attributes":[{"value":"/ A name has been assigned to the field.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":26375,"byte_end":26417,"line_start":400,"line_end":400,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":142},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":26511,"byte_end":26526,"line_start":403,"line_end":403,"column_start":14,"column_end":29},"name":"TypeNotAssigned","qualname":"::build::field_state::TypeNotAssigned","value":"enum TypeNotAssigned { }","parent":null,"children":[],"decl_id":null,"docs":" A type has not been assigned to the field.\n","sig":null,"attributes":[{"value":"/ A type has not been assigned to the field.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":26451,"byte_end":26497,"line_start":402,"line_end":402,"column_start":5,"column_end":51}}]},{"kind":"Enum","id":{"krate":0,"index":143},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":26590,"byte_end":26602,"line_start":405,"line_end":405,"column_start":14,"column_end":26},"name":"TypeAssigned","qualname":"::build::field_state::TypeAssigned","value":"enum TypeAssigned { }","parent":null,"children":[],"decl_id":null,"docs":" A type has been assigned to the field.\n","sig":null,"attributes":[{"value":"/ A type has been assigned to the field.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":26534,"byte_end":26576,"line_start":404,"line_end":404,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":144},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":26665,"byte_end":26677,"line_start":410,"line_end":410,"column_start":12,"column_end":24},"name":"FieldBuilder","qualname":"::build::FieldBuilder","value":"FieldBuilder {  }","parent":null,"children":[{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152}],"decl_id":null,"docs":" Construct a valid [`Field`].\n","sig":null,"attributes":[{"value":"/ Construct a valid [`Field`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":26609,"byte_end":26641,"line_start":408,"line_end":408,"column_start":1,"column_end":33}},{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":26642,"byte_end":26653,"line_start":409,"line_end":409,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":27004,"byte_end":27011,"line_start":423,"line_end":423,"column_start":8,"column_end":15},"name":"default","qualname":"<FieldBuilder<F, N, T> as core::default::Default>::default","value":"fn default() -> Self","parent":{"krate":1,"index":3241},"children":[],"decl_id":{"krate":1,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":27339,"byte_end":27342,"line_start":436,"line_end":436,"column_start":12,"column_end":15},"name":"new","qualname":"<FieldBuilder<F>>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new FieldBuilder.\n","sig":null,"attributes":[{"value":"/ Create a new FieldBuilder.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":27297,"byte_end":27327,"line_start":435,"line_end":435,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":27505,"byte_end":27509,"line_start":443,"line_end":443,"column_start":12,"column_end":16},"name":"name","qualname":"<FieldBuilder<F, field_state::NameNotAssigned, T>>::name","value":"fn name(Self, F::String) -> FieldBuilder<F, field_state::NameAssigned, T>","parent":null,"children":[],"decl_id":null,"docs":" Initialize the field name.\n","sig":null,"attributes":[{"value":"/ Initialize the field name.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":27463,"byte_end":27493,"line_start":442,"line_end":442,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":27901,"byte_end":27903,"line_start":456,"line_end":456,"column_start":12,"column_end":14},"name":"ty","qualname":"<FieldBuilder<MetaForm, N, field_state::TypeNotAssigned>>::ty","value":"fn ty<TY>(Self) -> FieldBuilder<MetaForm, N, field_state::TypeAssigned> where\nTY: TypeInfo + 'static + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Initialize the type of the field.\n","sig":null,"attributes":[{"value":"/ Initialize the type of the field.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":27852,"byte_end":27889,"line_start":455,"line_end":455,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":28314,"byte_end":28321,"line_start":470,"line_end":470,"column_start":12,"column_end":19},"name":"compact","qualname":"<FieldBuilder<MetaForm, N, field_state::TypeNotAssigned>>::compact","value":"fn compact<TY>(Self) -> FieldBuilder<MetaForm, N, field_state::TypeAssigned>\nwhere TY: scale::HasCompact + TypeInfo + 'static","parent":null,"children":[],"decl_id":null,"docs":" Initializes the type of the field as a compact type.\n","sig":null,"attributes":[{"value":"/ Initializes the type of the field as a compact type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":28246,"byte_end":28302,"line_start":469,"line_end":469,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":28812,"byte_end":28814,"line_start":486,"line_end":486,"column_start":12,"column_end":14},"name":"ty","qualname":"<FieldBuilder<PortableForm, N, field_state::TypeNotAssigned>>::ty","value":"fn ty<T>(Self, T) -> FieldBuilder<PortableForm, N, field_state::TypeAssigned>\nwhere T: Into<<PortableForm as Form>::Type>","parent":null,"children":[],"decl_id":null,"docs":" Initialize the type of the field.\n","sig":null,"attributes":[{"value":"/ Initialize the type of the field.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":28763,"byte_end":28800,"line_start":485,"line_end":485,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":29270,"byte_end":29279,"line_start":502,"line_end":502,"column_start":12,"column_end":21},"name":"type_name","qualname":"<FieldBuilder<F, N, T>>::type_name","value":"fn type_name(Self, F::String) -> FieldBuilder<F, N, T>","parent":null,"children":[],"decl_id":null,"docs":" Initialize the type name of a field (optional).\n","sig":null,"attributes":[{"value":"/ Initialize the type name of a field (optional).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":29207,"byte_end":29258,"line_start":501,"line_end":501,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":30431,"byte_end":30435,"line_start":541,"line_end":541,"column_start":12,"column_end":16},"name":"docs","qualname":"<FieldBuilder<MetaForm, N, T>>::docs","value":"fn docs(Self, &'static [&'static str]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Doc capture is not enabled via the \"docs\" feature so this is a no-op.\n","sig":null,"attributes":[{"value":"cfg(not(feature = \"docs\"))","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":30298,"byte_end":30327,"line_start":538,"line_end":538,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":30332,"byte_end":30341,"line_start":539,"line_end":539,"column_start":5,"column_end":14}},{"value":"/ Doc capture is not enabled via the \"docs\" feature so this is a no-op.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":30346,"byte_end":30419,"line_start":540,"line_end":540,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":30631,"byte_end":30642,"line_start":547,"line_end":547,"column_start":12,"column_end":23},"name":"docs_always","qualname":"<FieldBuilder<MetaForm, N, T>>::docs_always","value":"fn docs_always(Self, &'static [&'static str]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Initialize the documentation of a field, always captured even if the \"docs\" feature is not\n enabled.\n","sig":null,"attributes":[{"value":"/ Initialize the documentation of a field, always captured even if the \"docs\" feature is not","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":30508,"byte_end":30602,"line_start":545,"line_end":545,"column_start":5,"column_end":99}},{"value":"/ enabled.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":30607,"byte_end":30619,"line_start":546,"line_end":546,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":31021,"byte_end":31029,"line_start":560,"line_end":560,"column_start":12,"column_end":20},"name":"finalize","qualname":"<FieldBuilder<F, N, field_state::TypeAssigned>>::finalize","value":"fn finalize(Self) -> Field<F>","parent":null,"children":[],"decl_id":null,"docs":" Complete building and return a new [`Field`].\n","sig":null,"attributes":[{"value":"/ Complete building and return a new [`Field`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":30960,"byte_end":31009,"line_start":559,"line_end":559,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":1038},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":31322,"byte_end":31330,"line_start":573,"line_end":573,"column_start":12,"column_end":20},"name":"Variants","qualname":"::build::Variants","value":"Variants {  }","parent":null,"children":[{"krate":0,"index":1040}],"decl_id":null,"docs":" Builds a definition of a variant type i.e an `enum`\n","sig":null,"attributes":[{"value":"/ Builds a definition of a variant type i.e an `enum`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":31224,"byte_end":31279,"line_start":570,"line_end":570,"column_start":1,"column_end":56}},{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":31299,"byte_end":31310,"line_start":572,"line_end":572,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":31468,"byte_end":31471,"line_start":579,"line_end":579,"column_start":12,"column_end":15},"name":"new","qualname":"<Variants<F>>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`VariantsBuilder`].\n","sig":null,"attributes":[{"value":"/ Create a new [`VariantsBuilder`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":31419,"byte_end":31456,"line_start":578,"line_end":578,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":31583,"byte_end":31590,"line_start":586,"line_end":586,"column_start":12,"column_end":19},"name":"variant","qualname":"<Variants<F>>::variant","value":"fn variant<B>(Self, F::String, B) -> Self where B: Fn(VariantBuilder<F>) ->\nVariantBuilder<F, variant_state::IndexAssigned>","parent":null,"children":[],"decl_id":null,"docs":" Add a variant\n","sig":null,"attributes":[{"value":"/ Add a variant","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":31554,"byte_end":31571,"line_start":585,"line_end":585,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":31924,"byte_end":31936,"line_start":596,"line_end":596,"column_start":12,"column_end":24},"name":"variant_unit","qualname":"<Variants<F>>::variant_unit","value":"fn variant_unit(Self, F::String, u8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Add a unit variant (without fields).\n","sig":null,"attributes":[{"value":"/ Add a unit variant (without fields).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":31872,"byte_end":31912,"line_start":595,"line_end":595,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":32208,"byte_end":32216,"line_start":603,"line_end":603,"column_start":12,"column_end":20},"name":"finalize","qualname":"<Variants<F>>::finalize","value":"fn finalize(Self) -> TypeDefVariant<F>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new [`TypeDefVariant`] from the initialized builder variants.\n","sig":null,"attributes":[{"value":"/ Construct a new [`TypeDefVariant`] from the initialized builder variants.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":32119,"byte_end":32196,"line_start":602,"line_end":602,"column_start":5,"column_end":82}}]},{"kind":"Mod","id":{"krate":0,"index":199},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":32372,"byte_end":32385,"line_start":609,"line_end":609,"column_start":9,"column_end":22},"name":"variant_state","qualname":"::build::variant_state","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","parent":null,"children":[{"krate":0,"index":200},{"krate":0,"index":201}],"decl_id":null,"docs":" State types for the `VariantBuilder` which requires an index.\n","sig":null,"attributes":[{"value":"/ State types for the `VariantBuilder` which requires an index.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":32298,"byte_end":32363,"line_start":608,"line_end":608,"column_start":1,"column_end":66}}]},{"kind":"Enum","id":{"krate":0,"index":200},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":32473,"byte_end":32489,"line_start":611,"line_end":611,"column_start":14,"column_end":30},"name":"IndexNotAssigned","qualname":"::build::variant_state::IndexNotAssigned","value":"enum IndexNotAssigned { }","parent":null,"children":[],"decl_id":null,"docs":" State where the builder has not assigned an index to a variant.\n","sig":null,"attributes":[{"value":"/ State where the builder has not assigned an index to a variant.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":32392,"byte_end":32459,"line_start":610,"line_end":610,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":201},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":32574,"byte_end":32587,"line_start":613,"line_end":613,"column_start":14,"column_end":27},"name":"IndexAssigned","qualname":"::build::variant_state::IndexAssigned","value":"enum IndexAssigned { }","parent":null,"children":[],"decl_id":null,"docs":" State where the builder has assigned an index to a variant.\n","sig":null,"attributes":[{"value":"/ State where the builder has assigned an index to a variant.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":32497,"byte_end":32560,"line_start":612,"line_end":612,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":202},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":32642,"byte_end":32656,"line_start":618,"line_end":618,"column_start":12,"column_end":26},"name":"VariantBuilder","qualname":"::build::VariantBuilder","value":"VariantBuilder {  }","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210}],"decl_id":null,"docs":" Build a [`Variant`].\n","sig":null,"attributes":[{"value":"/ Build a [`Variant`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":32594,"byte_end":32618,"line_start":616,"line_end":616,"column_start":1,"column_end":25}},{"value":"must_use","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":32619,"byte_end":32630,"line_start":617,"line_end":617,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":32983,"byte_end":32986,"line_start":629,"line_end":629,"column_start":12,"column_end":15},"name":"new","qualname":"<VariantBuilder<F, variant_state::IndexNotAssigned>>::new","value":"fn new(F::String) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`VariantBuilder`].\n","sig":null,"attributes":[{"value":"/ Create a new [`VariantBuilder`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":32935,"byte_end":32971,"line_start":628,"line_end":628,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":33273,"byte_end":33278,"line_start":641,"line_end":641,"column_start":12,"column_end":17},"name":"index","qualname":"<VariantBuilder<F, variant_state::IndexNotAssigned>>::index","value":"fn index(Self, u8) -> VariantBuilder<F, variant_state::IndexAssigned>","parent":null,"children":[],"decl_id":null,"docs":" Set the variant's codec index.\n","sig":null,"attributes":[{"value":"/ Set the variant's codec index.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":33227,"byte_end":33261,"line_start":640,"line_end":640,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":33692,"byte_end":33704,"line_start":655,"line_end":655,"column_start":12,"column_end":24},"name":"discriminant","qualname":"<VariantBuilder<F, S>>::discriminant","value":"fn discriminant(Self, u64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the variant's discriminant.\n","sig":null,"attributes":[{"value":"/ Set the variant's discriminant.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":33645,"byte_end":33680,"line_start":654,"line_end":654,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":33864,"byte_end":33870,"line_start":661,"line_end":661,"column_start":12,"column_end":18},"name":"fields","qualname":"<VariantBuilder<F, S>>::fields","value":"fn fields<T>(Self, FieldsBuilder<F, T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Initialize the variant's fields.\n","sig":null,"attributes":[{"value":"/ Initialize the variant's fields.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":33816,"byte_end":33852,"line_start":660,"line_end":660,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":34721,"byte_end":34725,"line_start":690,"line_end":690,"column_start":12,"column_end":16},"name":"docs","qualname":"<VariantBuilder<MetaForm, S>>::docs","value":"fn docs<'_>(Self, &'_ [&'static str]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Doc capture is not enabled via the \"docs\" feature so this is a no-op.\n","sig":null,"attributes":[{"value":"cfg(not(feature = \"docs\"))","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":34588,"byte_end":34617,"line_start":687,"line_end":687,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":34622,"byte_end":34631,"line_start":688,"line_end":688,"column_start":5,"column_end":14}},{"value":"/ Doc capture is not enabled via the \"docs\" feature so this is a no-op.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":34636,"byte_end":34709,"line_start":689,"line_end":689,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":34912,"byte_end":34923,"line_start":696,"line_end":696,"column_start":12,"column_end":23},"name":"docs_always","qualname":"<VariantBuilder<MetaForm, S>>::docs_always","value":"fn docs_always<'_>(Self, &'_ [&'static str]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Initialize the variant's documentation, always captured even if the \"docs\" feature is not\n enabled.\n","sig":null,"attributes":[{"value":"/ Initialize the variant's documentation, always captured even if the \"docs\" feature is not","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":34790,"byte_end":34883,"line_start":694,"line_end":694,"column_start":5,"column_end":98}},{"value":"/ enabled.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":34888,"byte_end":34900,"line_start":695,"line_end":695,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":35164,"byte_end":35172,"line_start":704,"line_end":704,"column_start":12,"column_end":20},"name":"finalize","qualname":"<VariantBuilder<F, variant_state::IndexAssigned>>::finalize","value":"fn finalize(Self) -> Variant<F>","parent":null,"children":[],"decl_id":null,"docs":" Complete building and create final [`Variant`] instance.\n","sig":null,"attributes":[{"value":"/ Complete building and create final [`Variant`] instance.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":35092,"byte_end":35152,"line_start":703,"line_end":703,"column_start":5,"column_end":65}}]},{"kind":"Mod","id":{"krate":0,"index":230},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/form.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"form","qualname":"::form","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/form.rs","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":242},{"krate":0,"index":245},{"krate":0,"index":2181},{"krate":0,"index":2182},{"krate":0,"index":2183},{"krate":0,"index":2185},{"krate":0,"index":2186},{"krate":0,"index":2188},{"krate":0,"index":2190},{"krate":0,"index":2192},{"krate":0,"index":2194},{"krate":0,"index":2195},{"krate":0,"index":248},{"krate":0,"index":2165},{"krate":0,"index":2166},{"krate":0,"index":2167},{"krate":0,"index":2169},{"krate":0,"index":2170},{"krate":0,"index":2172},{"krate":0,"index":2174},{"krate":0,"index":2176},{"krate":0,"index":2178},{"krate":0,"index":2179},{"krate":0,"index":1044}],"decl_id":null,"docs":" Provides form definitions.","sig":null,"attributes":[{"value":"/ Provides form definitions.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/form.rs","byte_start":35993,"byte_end":36023,"line_start":15,"line_end":15,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/form.rs","byte_start":36024,"byte_end":36027,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The forms provided here are used to generically communicate the mode a type","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/form.rs","byte_start":36028,"byte_end":36107,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ identifier, type definition or structure is using.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/form.rs","byte_start":36108,"byte_end":36162,"line_start":18,"line_end":18,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/form.rs","byte_start":36163,"byte_end":36166,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The default form is the `MetaForm`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/form.rs","byte_start":36167,"byte_end":36206,"line_start":20,"line_end":20,"column_start":1,"column_end":40}},{"value":"/ It uses `MetaType` for communicating type identifiers and thus acts as","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/form.rs","byte_start":36207,"byte_end":36281,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/ a bridge from runtime to compile time type information.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/form.rs","byte_start":36282,"byte_end":36341,"line_start":22,"line_end":22,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/form.rs","byte_start":36342,"byte_end":36345,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The `PortableForm` is a space-efficient representation","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/form.rs","byte_start":36346,"byte_end":36404,"line_start":24,"line_end":24,"column_start":1,"column_end":59}},{"value":"/ that no longer has any connections to the interning registry and thus","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/form.rs","byte_start":36405,"byte_end":36478,"line_start":25,"line_end":25,"column_start":1,"column_end":74}},{"value":"/ can no longer be used to retrieve information from the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/form.rs","byte_start":36479,"byte_end":36537,"line_start":26,"line_end":26,"column_start":1,"column_end":59}},{"value":"/ original registry. Its sole purpose is for space-efficient serialization.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/form.rs","byte_start":36538,"byte_end":36615,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/form.rs","byte_start":36616,"byte_end":36619,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Other forms, such as a portable form that is still bound to the registry","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/form.rs","byte_start":36620,"byte_end":36696,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ (also via lifetime tracking) are possible but current not needed.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/form.rs","byte_start":36697,"byte_end":36766,"line_start":30,"line_end":30,"column_start":1,"column_end":70}}]},{"kind":"Trait","id":{"krate":0,"index":245},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/form.rs","byte_start":37211,"byte_end":37215,"line_start":50,"line_end":50,"column_start":11,"column_end":15},"name":"Form","qualname":"::form::Form","value":"Form","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":247}],"decl_id":null,"docs":" Trait to control the internal structures of type definitions.","sig":null,"attributes":[{"value":"/ Trait to control the internal structures of type definitions.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/form.rs","byte_start":36949,"byte_end":37014,"line_start":45,"line_end":45,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/form.rs","byte_start":37015,"byte_end":37018,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ This allows for type-level separation between free forms that can be","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/form.rs","byte_start":37019,"byte_end":37091,"line_start":47,"line_end":47,"column_start":1,"column_end":73}},{"value":"/ instantiated out of the flux and portable forms that require some sort of","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/form.rs","byte_start":37092,"byte_end":37169,"line_start":48,"line_end":48,"column_start":1,"column_end":78}},{"value":"/ interning data structures.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/form.rs","byte_start":37170,"byte_end":37200,"line_start":49,"line_end":49,"column_start":1,"column_end":31}}]},{"kind":"Type","id":{"krate":0,"index":246},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/form.rs","byte_start":37267,"byte_end":37271,"line_start":52,"line_end":52,"column_start":10,"column_end":14},"name":"Type","qualname":"::form::Form::Type","value":"type Type: PartialEq + Eq + PartialOrd + Ord + Clone + Debug;","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" The type representing the type.\n","sig":null,"attributes":[{"value":"/ The type representing the type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/form.rs","byte_start":37222,"byte_end":37257,"line_start":51,"line_end":51,"column_start":5,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":247},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/form.rs","byte_start":37358,"byte_end":37364,"line_start":54,"line_end":54,"column_start":10,"column_end":16},"name":"String","qualname":"::form::Form::String","value":"type String: AsRef<str> + PartialEq + Eq + PartialOrd + Ord + Clone + Debug;","parent":{"krate":0,"index":245},"children":[],"decl_id":null,"docs":" The string type.\n","sig":null,"attributes":[{"value":"/ The string type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/form.rs","byte_start":37328,"byte_end":37348,"line_start":53,"line_end":53,"column_start":5,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":2181},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/form.rs","byte_start":37691,"byte_end":37699,"line_start":63,"line_end":63,"column_start":10,"column_end":18},"name":"MetaForm","qualname":"::form::MetaForm","value":"enum MetaForm { }","parent":null,"children":[],"decl_id":null,"docs":" A meta meta-type.","sig":null,"attributes":[{"value":"/ A meta meta-type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/form.rs","byte_start":37433,"byte_end":37454,"line_start":57,"line_end":57,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/form.rs","byte_start":37455,"byte_end":37458,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ Allows to be converted into other forms such as portable form","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/form.rs","byte_start":37459,"byte_end":37524,"line_start":59,"line_end":59,"column_start":1,"column_end":66}},{"value":"/ through the registry and `IntoPortable`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/form.rs","byte_start":37525,"byte_end":37569,"line_start":60,"line_end":60,"column_start":1,"column_end":45}}]},{"kind":"Enum","id":{"krate":0,"index":2165},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/form.rs","byte_start":38189,"byte_end":38201,"line_start":79,"line_end":79,"column_start":10,"column_end":22},"name":"PortableForm","qualname":"::form::PortableForm","value":"enum PortableForm { }","parent":null,"children":[],"decl_id":null,"docs":" Portable form that has its lifetime untracked in association to its interner.","sig":null,"attributes":[{"value":"/ Portable form that has its lifetime untracked in association to its interner.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/form.rs","byte_start":37790,"byte_end":37871,"line_start":70,"line_end":70,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/form.rs","byte_start":37872,"byte_end":37875,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/form.rs","byte_start":37876,"byte_end":37886,"line_start":72,"line_end":72,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/form.rs","byte_start":37887,"byte_end":37890,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ This resolves some lifetime issues with self-referential structs (such as","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/form.rs","byte_start":37891,"byte_end":37968,"line_start":74,"line_end":74,"column_start":1,"column_end":78}},{"value":"/ the registry itself) but can no longer be used to resolve to the original","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/form.rs","byte_start":37969,"byte_end":38046,"line_start":75,"line_end":75,"column_start":1,"column_end":78}},{"value":"/ underlying data.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/form.rs","byte_start":38047,"byte_end":38067,"line_start":76,"line_end":76,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/impls.rs","byte_start":40742,"byte_end":40751,"line_start":91,"line_end":91,"column_start":8,"column_end":17},"name":"type_info","qualname":"<[T; N] as TypeInfo>::type_info","value":"fn type_info() -> Type","parent":{"krate":0,"index":986},"children":[],"decl_id":{"krate":0,"index":988},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/impls.rs","byte_start":43097,"byte_end":43106,"line_start":169,"line_end":169,"column_start":8,"column_end":17},"name":"type_info","qualname":"<Vec<T> as TypeInfo>::type_info","value":"fn type_info() -> Type","parent":{"krate":0,"index":986},"children":[],"decl_id":{"krate":0,"index":988},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/impls.rs","byte_start":43265,"byte_end":43274,"line_start":180,"line_end":180,"column_start":8,"column_end":17},"name":"type_info","qualname":"<VecDeque<T> as TypeInfo>::type_info","value":"fn type_info() -> Type","parent":{"krate":0,"index":986},"children":[],"decl_id":{"krate":0,"index":988},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/impls.rs","byte_start":43432,"byte_end":43441,"line_start":191,"line_end":191,"column_start":8,"column_end":17},"name":"type_info","qualname":"<Option<T> as TypeInfo>::type_info","value":"fn type_info() -> Type","parent":{"krate":0,"index":986},"children":[],"decl_id":{"krate":0,"index":988},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/impls.rs","byte_start":43977,"byte_end":43986,"line_start":212,"line_end":212,"column_start":8,"column_end":17},"name":"type_info","qualname":"<Result<T, E> as TypeInfo>::type_info","value":"fn type_info() -> Type","parent":{"krate":0,"index":986},"children":[],"decl_id":{"krate":0,"index":988},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/impls.rs","byte_start":44611,"byte_end":44620,"line_start":234,"line_end":234,"column_start":8,"column_end":17},"name":"type_info","qualname":"<Cow as TypeInfo>::type_info","value":"fn type_info() -> Type","parent":{"krate":0,"index":986},"children":[],"decl_id":{"krate":0,"index":988},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/impls.rs","byte_start":44948,"byte_end":44957,"line_start":249,"line_end":249,"column_start":8,"column_end":17},"name":"type_info","qualname":"<BTreeMap<K, V> as TypeInfo>::type_info","value":"fn type_info() -> Type","parent":{"krate":0,"index":986},"children":[],"decl_id":{"krate":0,"index":988},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/impls.rs","byte_start":45267,"byte_end":45276,"line_start":263,"line_end":263,"column_start":8,"column_end":17},"name":"type_info","qualname":"<BTreeSet<T> as TypeInfo>::type_info","value":"fn type_info() -> Type","parent":{"krate":0,"index":986},"children":[],"decl_id":{"krate":0,"index":988},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/impls.rs","byte_start":45579,"byte_end":45588,"line_start":277,"line_end":277,"column_start":8,"column_end":17},"name":"type_info","qualname":"<Box<T> as TypeInfo>::type_info","value":"fn type_info() -> Type","parent":{"krate":0,"index":986},"children":[],"decl_id":{"krate":0,"index":988},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/impls.rs","byte_start":45745,"byte_end":45754,"line_start":288,"line_end":288,"column_start":8,"column_end":17},"name":"type_info","qualname":"<&'_ T as TypeInfo>::type_info","value":"fn type_info() -> Type","parent":{"krate":0,"index":986},"children":[],"decl_id":{"krate":0,"index":988},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/impls.rs","byte_start":45915,"byte_end":45924,"line_start":299,"line_end":299,"column_start":8,"column_end":17},"name":"type_info","qualname":"<&'_ mut T as TypeInfo>::type_info","value":"fn type_info() -> Type","parent":{"krate":0,"index":986},"children":[],"decl_id":{"krate":0,"index":988},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/impls.rs","byte_start":46076,"byte_end":46085,"line_start":310,"line_end":310,"column_start":8,"column_end":17},"name":"type_info","qualname":"<[T] as TypeInfo>::type_info","value":"fn type_info() -> Type","parent":{"krate":0,"index":986},"children":[],"decl_id":{"krate":0,"index":988},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":419},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/impls.rs","byte_start":46207,"byte_end":46216,"line_start":318,"line_end":318,"column_start":8,"column_end":17},"name":"type_info","qualname":"<str as TypeInfo>::type_info","value":"fn type_info() -> Type","parent":{"krate":0,"index":986},"children":[],"decl_id":{"krate":0,"index":988},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/impls.rs","byte_start":46335,"byte_end":46344,"line_start":326,"line_end":326,"column_start":8,"column_end":17},"name":"type_info","qualname":"<String as TypeInfo>::type_info","value":"fn type_info() -> Type","parent":{"krate":0,"index":986},"children":[],"decl_id":{"krate":0,"index":988},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/impls.rs","byte_start":46537,"byte_end":46546,"line_start":336,"line_end":336,"column_start":8,"column_end":17},"name":"type_info","qualname":"<PhantomData<T> as TypeInfo>::type_info","value":"fn type_info() -> Type","parent":{"krate":0,"index":986},"children":[],"decl_id":{"krate":0,"index":988},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/impls.rs","byte_start":46958,"byte_end":46967,"line_start":350,"line_end":350,"column_start":8,"column_end":17},"name":"type_info","qualname":"<scale::Compact<T> as TypeInfo>::type_info","value":"fn type_info() -> Type","parent":{"krate":0,"index":986},"children":[],"decl_id":{"krate":0,"index":988},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/impls.rs","byte_start":47176,"byte_end":47185,"line_start":360,"line_end":360,"column_start":8,"column_end":17},"name":"type_info","qualname":"<Range<Idx> as TypeInfo>::type_info","value":"fn type_info() -> Type","parent":{"krate":0,"index":986},"children":[],"decl_id":{"krate":0,"index":988},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/impls.rs","byte_start":47679,"byte_end":47688,"line_start":377,"line_end":377,"column_start":8,"column_end":17},"name":"type_info","qualname":"<RangeInclusive<Idx> as TypeInfo>::type_info","value":"fn type_info() -> Type","parent":{"krate":0,"index":986},"children":[],"decl_id":{"krate":0,"index":988},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":444},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"interner","qualname":"::interner","value":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":450},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":456},{"krate":0,"index":1396},{"krate":0,"index":1399},{"krate":0,"index":1402},{"krate":0,"index":1404},{"krate":0,"index":1407},{"krate":0,"index":1409},{"krate":0,"index":1413},{"krate":0,"index":1415},{"krate":0,"index":1418},{"krate":0,"index":1421},{"krate":0,"index":1424},{"krate":0,"index":1431},{"krate":0,"index":459},{"krate":0,"index":462},{"krate":0,"index":1437},{"krate":0,"index":1442},{"krate":0,"index":1446},{"krate":0,"index":1449},{"krate":0,"index":1453},{"krate":0,"index":1456},{"krate":0,"index":1461},{"krate":0,"index":1464},{"krate":0,"index":1468},{"krate":0,"index":1472},{"krate":0,"index":465},{"krate":0,"index":1476},{"krate":0,"index":1480},{"krate":0,"index":1483},{"krate":0,"index":1485},{"krate":0,"index":1489},{"krate":0,"index":1491},{"krate":0,"index":468},{"krate":0,"index":471},{"krate":0,"index":474}],"decl_id":null,"docs":" Interning data structure and associated symbol definitions.","sig":null,"attributes":[{"value":"/ Interning data structure and associated symbol definitions.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":49560,"byte_end":49623,"line_start":15,"line_end":15,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":49624,"byte_end":49627,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The interner is used by the registry in order to deduplicate strings and type","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":49628,"byte_end":49709,"line_start":17,"line_end":17,"column_start":1,"column_end":82}},{"value":"/ definitions. Strings are uniquely identified by their contents while types","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":49710,"byte_end":49788,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ are uniquely identified by their respective type identifiers.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":49789,"byte_end":49854,"line_start":19,"line_end":19,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":49855,"byte_end":49858,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The interners provide a strict ordered sequence of cached (interned)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":49859,"byte_end":49931,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ elements and is later used for space-efficient serialization within the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":49932,"byte_end":50007,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/ registry.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":50008,"byte_end":50021,"line_start":23,"line_end":23,"column_start":1,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1396},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":50603,"byte_end":50618,"line_start":49,"line_end":49,"column_start":12,"column_end":27},"name":"UntrackedSymbol","qualname":"::interner::UntrackedSymbol","value":"UntrackedSymbol {  }","parent":null,"children":[{"krate":0,"index":1436},{"krate":0,"index":1398}],"decl_id":null,"docs":" A symbol that is not lifetime tracked.","sig":null,"attributes":[{"value":"/ A symbol that is not lifetime tracked.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":50233,"byte_end":50275,"line_start":40,"line_end":40,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":50276,"byte_end":50279,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ This can be used by self-referential types but","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":50280,"byte_end":50330,"line_start":42,"line_end":42,"column_start":1,"column_end":51}},{"value":"/ can no longer be used to resolve instances.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":50331,"byte_end":50378,"line_start":43,"line_end":43,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":50904,"byte_end":50906,"line_start":59,"line_end":59,"column_start":12,"column_end":14},"name":"id","qualname":"<UntrackedSymbol<T>>::id","value":"fn id<'_>(&'_ Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the index to the symbol in the interner table.\n","sig":null,"attributes":[{"value":"/ Returns the index to the symbol in the interner table.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":50834,"byte_end":50892,"line_start":58,"line_end":58,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":50998,"byte_end":51002,"line_start":65,"line_end":65,"column_start":8,"column_end":12},"name":"from","qualname":"<UntrackedSymbol<T> as core::convert::From>::from","value":"fn from(u32) -> Self","parent":{"krate":1,"index":3169},"children":[],"decl_id":{"krate":1,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1437},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":51376,"byte_end":51382,"line_start":79,"line_end":79,"column_start":12,"column_end":18},"name":"Symbol","qualname":"::interner::Symbol","value":"Symbol {  }","parent":null,"children":[{"krate":0,"index":1440},{"krate":0,"index":1441}],"decl_id":null,"docs":" A symbol from an interner.","sig":null,"attributes":[{"value":"/ A symbol from an interner.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":51112,"byte_end":51142,"line_start":73,"line_end":73,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":51143,"byte_end":51146,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Can be used to resolve to the associated instance.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":51147,"byte_end":51201,"line_start":75,"line_end":75,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":52176,"byte_end":52190,"line_start":101,"line_end":101,"column_start":12,"column_end":26},"name":"into_untracked","qualname":"<Symbol>::into_untracked","value":"fn into_untracked(Self) -> UntrackedSymbol<T>","parent":null,"children":[],"decl_id":null,"docs":" Removes the lifetime tracking for this symbol.","sig":null,"attributes":[{"value":"/ Removes the lifetime tracking for this symbol.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":51524,"byte_end":51574,"line_start":86,"line_end":86,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":51579,"byte_end":51582,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":51587,"byte_end":51597,"line_start":88,"line_end":88,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":51602,"byte_end":51605,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ - This can be useful in situations where a data structure owns all","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":51610,"byte_end":51680,"line_start":90,"line_end":90,"column_start":5,"column_end":75}},{"value":"/   symbols and interners and can verify accesses by itself.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":51685,"byte_end":51747,"line_start":91,"line_end":91,"column_start":5,"column_end":67}},{"value":"/ - For further safety reasons an untracked symbol can no longer be used","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":51752,"byte_end":51826,"line_start":92,"line_end":92,"column_start":5,"column_end":79}},{"value":"/   to resolve from an interner. It is still useful for serialization","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":51831,"byte_end":51902,"line_start":93,"line_end":93,"column_start":5,"column_end":76}},{"value":"/   purposes.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":51907,"byte_end":51922,"line_start":94,"line_end":94,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":51927,"byte_end":51930,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":51935,"byte_end":51947,"line_start":96,"line_end":96,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":51952,"byte_end":51955,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ Although removing lifetime constraints this operation can be","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":51960,"byte_end":52024,"line_start":98,"line_end":98,"column_start":5,"column_end":69}},{"value":"/ considered to be safe since untracked symbols can no longer be","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":52029,"byte_end":52095,"line_start":99,"line_end":99,"column_start":5,"column_end":71}},{"value":"/ used to resolve their associated instance from the interner.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":52100,"byte_end":52164,"line_start":100,"line_end":100,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":1476},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":52791,"byte_end":52799,"line_start":121,"line_end":121,"column_start":12,"column_end":20},"name":"Interner","qualname":"::interner::Interner","value":"Interner {  }","parent":null,"children":[{"krate":0,"index":1478},{"krate":0,"index":1479}],"decl_id":null,"docs":" Interning data structure generic over the element type.","sig":null,"attributes":[{"value":"/ Interning data structure generic over the element type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":52324,"byte_end":52383,"line_start":109,"line_end":109,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":52384,"byte_end":52387,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ For the sake of simplicity and correctness we are using a rather naive","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":52388,"byte_end":52462,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/ implementation.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":52463,"byte_end":52482,"line_start":112,"line_end":112,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":52483,"byte_end":52486,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ # Usage","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":52487,"byte_end":52498,"line_start":114,"line_end":114,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":52499,"byte_end":52502,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ This is used in order to quite efficiently cache strings and type","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":52503,"byte_end":52572,"line_start":116,"line_end":116,"column_start":1,"column_end":70}},{"value":"/ definitions uniquely identified by their associated type identifiers.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":52573,"byte_end":52646,"line_start":117,"line_end":117,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":53478,"byte_end":53481,"line_start":142,"line_end":142,"column_start":12,"column_end":15},"name":"new","qualname":"<Interner<T>>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty interner.\n","sig":null,"attributes":[{"value":"/ Creates a new empty interner.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":53433,"byte_end":53466,"line_start":141,"line_end":141,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":53637,"byte_end":53644,"line_start":151,"line_end":151,"column_start":8,"column_end":15},"name":"default","qualname":"<Interner<T> as core::default::Default>::default","value":"fn default() -> Self","parent":{"krate":1,"index":3241},"children":[],"decl_id":{"krate":1,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":53853,"byte_end":53866,"line_start":162,"line_end":162,"column_start":12,"column_end":25},"name":"intern_or_get","qualname":"<Interner<T>>::intern_or_get","value":"fn intern_or_get<'_>(&'_ mut Self, T) -> (bool, Symbol)","parent":null,"children":[],"decl_id":null,"docs":" Interns the given element or returns its associated symbol if it has\n already been interned.\n","sig":null,"attributes":[{"value":"/ Interns the given element or returns its associated symbol if it has","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":53738,"byte_end":53810,"line_start":160,"line_end":160,"column_start":5,"column_end":77}},{"value":"/ already been interned.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":53815,"byte_end":53841,"line_start":161,"line_end":161,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":54519,"byte_end":54522,"line_start":183,"line_end":183,"column_start":12,"column_end":15},"name":"get","qualname":"<Interner<T>>::get","value":"fn get<'_, '_>(&'_ Self, &'_ T) -> Option<Symbol>","parent":null,"children":[],"decl_id":null,"docs":" Returns the symbol of the given element or `None` if it hasn't been\n interned already.\n","sig":null,"attributes":[{"value":"/ Returns the symbol of the given element or `None` if it hasn't been","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":54410,"byte_end":54481,"line_start":181,"line_end":181,"column_start":5,"column_end":76}},{"value":"/ interned already.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":54486,"byte_end":54507,"line_start":182,"line_end":182,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":54857,"byte_end":54864,"line_start":194,"line_end":194,"column_start":12,"column_end":19},"name":"resolve","qualname":"<Interner<T>>::resolve","value":"fn resolve<'_, '_>(&'_ Self, Symbol) -> Option<&'_ T>","parent":null,"children":[],"decl_id":null,"docs":" Resolves the original element given its associated symbol or\n returns `None` if it has not been interned yet.\n","sig":null,"attributes":[{"value":"/ Resolves the original element given its associated symbol or","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":54725,"byte_end":54789,"line_start":192,"line_end":192,"column_start":5,"column_end":69}},{"value":"/ returns `None` if it has not been interned yet.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":54794,"byte_end":54845,"line_start":193,"line_end":193,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":55111,"byte_end":55119,"line_start":203,"line_end":203,"column_start":12,"column_end":20},"name":"elements","qualname":"<Interner<T>>::elements","value":"fn elements<'_>(&'_ Self) -> &'_ [T]","parent":null,"children":[],"decl_id":null,"docs":" Returns the ordered sequence of interned elements.\n","sig":null,"attributes":[{"value":"/ Returns the ordered sequence of interned elements.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":55045,"byte_end":55099,"line_start":202,"line_end":202,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":1494},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/meta_type.rs","byte_start":57479,"byte_end":57487,"line_start":43,"line_end":43,"column_start":12,"column_end":20},"name":"MetaType","qualname":"::meta_type::MetaType","value":"MetaType {  }","parent":null,"children":[{"krate":0,"index":1495},{"krate":0,"index":1496}],"decl_id":null,"docs":" A metatype abstraction.","sig":null,"attributes":[{"value":"/ A metatype abstraction.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/meta_type.rs","byte_start":57182,"byte_end":57209,"line_start":35,"line_end":35,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/meta_type.rs","byte_start":57210,"byte_end":57213,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Allows to store compile-time type information at runtime.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/meta_type.rs","byte_start":57214,"byte_end":57275,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/ This again allows to derive type ID and type definition from it.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/meta_type.rs","byte_start":57276,"byte_end":57344,"line_start":38,"line_end":38,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/meta_type.rs","byte_start":57345,"byte_end":57348,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ This needs a conversion to another representation of types","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/meta_type.rs","byte_start":57349,"byte_end":57411,"line_start":40,"line_end":40,"column_start":1,"column_end":63}},{"value":"/ in order to be serializable.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/meta_type.rs","byte_start":57412,"byte_end":57444,"line_start":41,"line_end":41,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/meta_type.rs","byte_start":57814,"byte_end":57816,"line_start":53,"line_end":53,"column_start":8,"column_end":10},"name":"eq","qualname":"<MetaType as core::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ Self) -> bool","parent":{"krate":1,"index":2915},"children":[],"decl_id":{"krate":1,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/meta_type.rs","byte_start":57958,"byte_end":57969,"line_start":61,"line_end":61,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<MetaType as core::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ Self) -> Option<Ordering>","parent":{"krate":1,"index":2961},"children":[],"decl_id":{"krate":1,"index":2963},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/meta_type.rs","byte_start":58102,"byte_end":58105,"line_start":67,"line_end":67,"column_start":8,"column_end":11},"name":"cmp","qualname":"<MetaType as core::cmp::Ord>::cmp","value":"fn cmp<'_, '_>(&'_ Self, &'_ Self) -> Ordering","parent":{"krate":1,"index":2951},"children":[],"decl_id":{"krate":1,"index":2952},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/meta_type.rs","byte_start":58223,"byte_end":58227,"line_start":73,"line_end":73,"column_start":8,"column_end":12},"name":"hash","qualname":"<MetaType as core::hash::Hash>::hash","value":"fn hash<H, '_, '_>(&'_ Self, &'_ mut H) where H: Hasher","parent":{"krate":1,"index":10526},"children":[],"decl_id":{"krate":1,"index":10527},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":527},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/meta_type.rs","byte_start":58363,"byte_end":58366,"line_start":82,"line_end":82,"column_start":8,"column_end":11},"name":"fmt","qualname":"<MetaType as core::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut Formatter) -> Result<(), FmtError>","parent":{"krate":1,"index":10288},"children":[],"decl_id":{"krate":1,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":529},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/meta_type.rs","byte_start":58555,"byte_end":58558,"line_start":89,"line_end":89,"column_start":12,"column_end":15},"name":"new","qualname":"<MetaType>::new","value":"fn new<T>() -> Self where T: TypeInfo + ?Sized + 'static","parent":null,"children":[],"decl_id":null,"docs":" Creates a new meta type from the given compile-time known type.\n","sig":null,"attributes":[{"value":"/ Creates a new meta type from the given compile-time known type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/meta_type.rs","byte_start":58476,"byte_end":58543,"line_start":88,"line_end":88,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/meta_type.rs","byte_start":58818,"byte_end":58827,"line_start":100,"line_end":100,"column_start":12,"column_end":21},"name":"type_info","qualname":"<MetaType>::type_info","value":"fn type_info<'_>(&'_ Self) -> Type<MetaForm>","parent":null,"children":[],"decl_id":null,"docs":" Returns the meta type information.\n","sig":null,"attributes":[{"value":"/ Returns the meta type information.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/meta_type.rs","byte_start":58768,"byte_end":58806,"line_start":99,"line_end":99,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/meta_type.rs","byte_start":58964,"byte_end":58971,"line_start":105,"line_end":105,"column_start":12,"column_end":19},"name":"type_id","qualname":"<MetaType>::type_id","value":"fn type_id<'_>(&'_ Self) -> TypeId","parent":null,"children":[],"decl_id":null,"docs":" Returns the type identifier provided by `core::any`.\n","sig":null,"attributes":[{"value":"/ Returns the type identifier provided by `core::any`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/meta_type.rs","byte_start":58896,"byte_end":58952,"line_start":104,"line_end":104,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":2143},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","byte_start":60923,"byte_end":60939,"line_start":43,"line_end":43,"column_start":12,"column_end":28},"name":"PortableRegistry","qualname":"::portable::PortableRegistry","value":"PortableRegistry {  }","parent":null,"children":[{"krate":0,"index":2144}],"decl_id":null,"docs":" A read-only registry containing types in their portable form for serialization.\n","sig":null,"attributes":[{"value":"/ A read-only registry containing types in their portable form for serialization.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","byte_start":60563,"byte_end":60646,"line_start":38,"line_end":38,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":2158},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","byte_start":60946,"byte_end":60951,"line_start":44,"line_end":44,"column_start":5,"column_end":10},"name":"encode_to","qualname":"<PortableRegistry as parity_scale_codec::Encode>::encode_to","value":"fn encode_to<__CodecOutputEdqy, '_, '_>(&'_ Self, &'_ mut __CodecOutputEdqy)\nwhere __CodecOutputEdqy: ::scale::Output + ?::core::marker::Sized","parent":{"krate":6,"index":209},"children":[],"decl_id":{"krate":6,"index":212},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2160},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","byte_start":60946,"byte_end":60951,"line_start":44,"line_end":44,"column_start":5,"column_end":10},"name":"encode","qualname":"<PortableRegistry as parity_scale_codec::Encode>::encode","value":"fn encode<'_>(&'_ Self) -> ::scale::alloc::vec::Vec<::core::primitive::u8>","parent":{"krate":6,"index":209},"children":[],"decl_id":{"krate":6,"index":215},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2161},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","byte_start":60946,"byte_end":60951,"line_start":44,"line_end":44,"column_start":5,"column_end":10},"name":"using_encoded","qualname":"<PortableRegistry as parity_scale_codec::Encode>::using_encoded","value":"fn using_encoded<R, F, '_>(&'_ Self, F) -> R where\nF: for<'_> ::core::ops::FnOnce(&'_ [::core::primitive::u8]) -> R","parent":{"krate":6,"index":209},"children":[],"decl_id":{"krate":6,"index":216},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":559},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","byte_start":61025,"byte_end":61029,"line_start":48,"line_end":48,"column_start":8,"column_end":12},"name":"from","qualname":"<PortableRegistry as core::convert::From>::from","value":"fn from(Registry) -> Self","parent":{"krate":1,"index":3169},"children":[],"decl_id":{"krate":1,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","byte_start":61514,"byte_end":61521,"line_start":65,"line_end":65,"column_start":12,"column_end":19},"name":"resolve","qualname":"<PortableRegistry>::resolve","value":"fn resolve<'_>(&'_ Self, u32) -> Option<&'_ Type<PortableForm>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the type definition for the given identifier, `None` if no type found for that ID.\n","sig":null,"attributes":[{"value":"/ Returns the type definition for the given identifier, `None` if no type found for that ID.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","byte_start":61408,"byte_end":61502,"line_start":64,"line_end":64,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","byte_start":61704,"byte_end":61709,"line_start":70,"line_end":70,"column_start":12,"column_end":17},"name":"types","qualname":"<PortableRegistry>::types","value":"fn types<'_>(&'_ Self) -> &'_ [PortableType]","parent":null,"children":[],"decl_id":null,"docs":" Returns all types with their associated identifiers.\n","sig":null,"attributes":[{"value":"/ Returns all types with their associated identifiers.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","byte_start":61636,"byte_end":61692,"line_start":69,"line_end":69,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":2124},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","byte_start":62087,"byte_end":62099,"line_start":80,"line_end":80,"column_start":12,"column_end":24},"name":"PortableType","qualname":"::portable::PortableType","value":"PortableType {  }","parent":null,"children":[{"krate":0,"index":2142},{"krate":0,"index":2125}],"decl_id":null,"docs":" Represent a type in it's portable form.\n","sig":null,"attributes":[{"value":"/ Represent a type in it's portable form.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","byte_start":61767,"byte_end":61810,"line_start":75,"line_end":75,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","byte_start":62301,"byte_end":62304,"line_start":89,"line_end":89,"column_start":12,"column_end":15},"name":"new","qualname":"<PortableType>::new","value":"fn new(u32, Type<PortableForm>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a custom `PortableType`.\n","sig":null,"attributes":[{"value":"/ Construct a custom `PortableType`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","byte_start":62251,"byte_end":62289,"line_start":88,"line_end":88,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","byte_start":62441,"byte_end":62443,"line_start":94,"line_end":94,"column_start":12,"column_end":14},"name":"id","qualname":"<PortableType>::id","value":"fn id<'_>(&'_ Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the index of the [`PortableType`].\n","sig":null,"attributes":[{"value":"/ Returns the index of the [`PortableType`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","byte_start":62383,"byte_end":62429,"line_start":93,"line_end":93,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","byte_start":62544,"byte_end":62546,"line_start":99,"line_end":99,"column_start":12,"column_end":14},"name":"ty","qualname":"<PortableType>::ty","value":"fn ty<'_>(&'_ Self) -> &'_ Type<PortableForm>","parent":null,"children":[],"decl_id":null,"docs":" Returns the type of the [`PortableType`].\n","sig":null,"attributes":[{"value":"/ Returns the type of the [`PortableType`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","byte_start":62487,"byte_end":62532,"line_start":98,"line_end":98,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":2118},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","byte_start":62901,"byte_end":62924,"line_start":110,"line_end":110,"column_start":12,"column_end":35},"name":"PortableRegistryBuilder","qualname":"::portable::PortableRegistryBuilder","value":"PortableRegistryBuilder {  }","parent":null,"children":[{"krate":0,"index":2119}],"decl_id":null,"docs":" Construct a [`PortableRegistry`].","sig":null,"attributes":[{"value":"/ Construct a [`PortableRegistry`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","byte_start":62605,"byte_end":62642,"line_start":104,"line_end":104,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","byte_start":62643,"byte_end":62646,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ Guarantees that the resulting [`PortableRegistry`] has the list of types in the correct order,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","byte_start":62647,"byte_end":62745,"line_start":106,"line_end":106,"column_start":1,"column_end":99}},{"value":"/ since downstream libs assume that a `u32` type id corresponds to the index of the type","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","byte_start":62746,"byte_end":62836,"line_start":107,"line_end":107,"column_start":1,"column_end":91}},{"value":"/ definition type table.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","byte_start":62837,"byte_end":62863,"line_start":108,"line_end":108,"column_start":1,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","byte_start":63063,"byte_end":63066,"line_start":116,"line_end":116,"column_start":12,"column_end":15},"name":"new","qualname":"<PortableRegistryBuilder>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`PortableRegistryBuilder`].\n","sig":null,"attributes":[{"value":"/ Create a new [`PortableRegistryBuilder`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","byte_start":63006,"byte_end":63051,"line_start":115,"line_end":115,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","byte_start":63258,"byte_end":63271,"line_start":123,"line_end":123,"column_start":12,"column_end":25},"name":"register_type","qualname":"<PortableRegistryBuilder>::register_type","value":"fn register_type<'_>(&'_ mut Self, Type<PortableForm>) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Register a type, returning the assigned ID.","sig":null,"attributes":[{"value":"/ Register a type, returning the assigned ID.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","byte_start":63117,"byte_end":63164,"line_start":120,"line_end":120,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","byte_start":63169,"byte_end":63172,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ If the type is already registered it will return the existing ID.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","byte_start":63177,"byte_end":63246,"line_start":122,"line_end":122,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","byte_start":63474,"byte_end":63486,"line_start":128,"line_end":128,"column_start":12,"column_end":24},"name":"next_type_id","qualname":"<PortableRegistryBuilder>::next_type_id","value":"fn next_type_id<'_>(&'_ Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the type id that would be assigned to a newly registered type.\n","sig":null,"attributes":[{"value":"/ Returns the type id that would be assigned to a newly registered type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","byte_start":63388,"byte_end":63462,"line_start":127,"line_end":127,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","byte_start":63641,"byte_end":63644,"line_start":133,"line_end":133,"column_start":12,"column_end":15},"name":"get","qualname":"<PortableRegistryBuilder>::get","value":"fn get<'_>(&'_ Self, u32) -> Option<&'_ Type<PortableForm>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the type registered at the given ID (if any).\n","sig":null,"attributes":[{"value":"/ Returns a reference to the type registered at the given ID (if any).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","byte_start":63557,"byte_end":63629,"line_start":132,"line_end":132,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","byte_start":63826,"byte_end":63832,"line_start":138,"line_end":138,"column_start":12,"column_end":18},"name":"finish","qualname":"<PortableRegistryBuilder>::finish","value":"fn finish<'_>(&'_ Self) -> PortableRegistry","parent":null,"children":[],"decl_id":null,"docs":" Finalize and return a valid [`PortableRegistry`] instance.\n","sig":null,"attributes":[{"value":"/ Finalize and return a valid [`PortableRegistry`] instance.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","byte_start":63752,"byte_end":63814,"line_start":137,"line_end":137,"column_start":5,"column_end":67}}]},{"kind":"Trait","id":{"krate":0,"index":611},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/registry.rs","byte_start":68160,"byte_end":68172,"line_start":47,"line_end":47,"column_start":11,"column_end":23},"name":"IntoPortable","qualname":"::registry::IntoPortable","value":"IntoPortable","parent":null,"children":[{"krate":0,"index":612},{"krate":0,"index":613}],"decl_id":null,"docs":" Convert the type definition into the portable form using a registry.\n","sig":null,"attributes":[{"value":"/ Convert the type definition into the portable form using a registry.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/registry.rs","byte_start":68077,"byte_end":68149,"line_start":46,"line_end":46,"column_start":1,"column_end":73}}]},{"kind":"Type","id":{"krate":0,"index":612},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/registry.rs","byte_start":68224,"byte_end":68230,"line_start":49,"line_end":49,"column_start":10,"column_end":16},"name":"Output","qualname":"::registry::IntoPortable::Output","value":"type Output;","parent":{"krate":0,"index":611},"children":[],"decl_id":null,"docs":" The portable version of `Self`.\n","sig":null,"attributes":[{"value":"/ The portable version of `Self`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/registry.rs","byte_start":68179,"byte_end":68214,"line_start":48,"line_end":48,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/registry.rs","byte_start":68319,"byte_end":68332,"line_start":52,"line_end":52,"column_start":8,"column_end":21},"name":"into_portable","qualname":"::registry::IntoPortable::into_portable","value":"fn into_portable<'_>(Self, &'_ mut Registry) -> Self::Output","parent":{"krate":0,"index":611},"children":[],"decl_id":null,"docs":" Convert `self` to the portable form by using the registry for caching.\n","sig":null,"attributes":[{"value":"/ Convert `self` to the portable form by using the registry for caching.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/registry.rs","byte_start":68237,"byte_end":68311,"line_start":51,"line_end":51,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/registry.rs","byte_start":68479,"byte_end":68492,"line_start":58,"line_end":58,"column_start":8,"column_end":21},"name":"into_portable","qualname":"<&'static str as registry::IntoPortable>::into_portable","value":"fn into_portable<'_>(Self, &'_ mut Registry) -> Self::Output","parent":{"krate":0,"index":611},"children":[],"decl_id":{"krate":0,"index":613},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2106},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/registry.rs","byte_start":69154,"byte_end":69162,"line_start":77,"line_end":77,"column_start":12,"column_end":20},"name":"Registry","qualname":"::registry::Registry","value":"Registry {  }","parent":null,"children":[{"krate":0,"index":2107},{"krate":0,"index":2108}],"decl_id":null,"docs":" The registry for space-efficient storage of type identifiers and\n definitions.","sig":null,"attributes":[{"value":"/ The registry for space-efficient storage of type identifiers and","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/registry.rs","byte_start":68572,"byte_end":68640,"line_start":63,"line_end":63,"column_start":1,"column_end":69}},{"value":"/ definitions.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/registry.rs","byte_start":68641,"byte_end":68657,"line_start":64,"line_end":64,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/registry.rs","byte_start":68658,"byte_end":68661,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ The registry consists of a cache for type identifiers and definitions.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/registry.rs","byte_start":68662,"byte_end":68736,"line_start":66,"line_end":66,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/registry.rs","byte_start":68737,"byte_end":68740,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ When adding a type to  the registry, all of its sub-types are registered","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/registry.rs","byte_start":68741,"byte_end":68817,"line_start":68,"line_end":68,"column_start":1,"column_end":77}},{"value":"/ recursively as well. A type is considered a sub-type of another type if it","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/registry.rs","byte_start":68818,"byte_end":68896,"line_start":69,"line_end":69,"column_start":1,"column_end":79}},{"value":"/ is used by its identifier or structure.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/registry.rs","byte_start":68897,"byte_end":68940,"line_start":70,"line_end":70,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/registry.rs","byte_start":68941,"byte_end":68944,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/registry.rs","byte_start":68945,"byte_end":68955,"line_start":72,"line_end":72,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/registry.rs","byte_start":68956,"byte_end":68959,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ A type can be a sub-type of itself. In this case the registry has a builtin","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/registry.rs","byte_start":68960,"byte_end":69039,"line_start":74,"line_end":74,"column_start":1,"column_end":80}},{"value":"/ mechanism to stop recursion and avoid going into an infinite loop.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/registry.rs","byte_start":69040,"byte_end":69110,"line_start":75,"line_end":75,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":618},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/registry.rs","byte_start":69581,"byte_end":69588,"line_start":90,"line_end":90,"column_start":8,"column_end":15},"name":"default","qualname":"<Registry as core::default::Default>::default","value":"fn default() -> Self","parent":{"krate":1,"index":3241},"children":[],"decl_id":{"krate":1,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/registry.rs","byte_start":69695,"byte_end":69698,"line_start":97,"line_end":97,"column_start":12,"column_end":15},"name":"new","qualname":"<Registry>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new empty registry.\n","sig":null,"attributes":[{"value":"/ Creates a new empty registry.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/registry.rs","byte_start":69650,"byte_end":69683,"line_start":96,"line_end":96,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/registry.rs","byte_start":70826,"byte_end":70839,"line_start":128,"line_end":128,"column_start":12,"column_end":25},"name":"register_type","qualname":"<Registry>::register_type","value":"fn register_type<'_, '_>(&'_ mut Self, &'_ MetaType)\n-> UntrackedSymbol<TypeId>","parent":null,"children":[],"decl_id":null,"docs":" Registers the given type into the registry and returns\n its associated type ID symbol.","sig":null,"attributes":[{"value":"/ Registers the given type into the registry and returns","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/registry.rs","byte_start":70412,"byte_end":70470,"line_start":119,"line_end":119,"column_start":5,"column_end":63}},{"value":"/ its associated type ID symbol.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/registry.rs","byte_start":70475,"byte_end":70509,"line_start":120,"line_end":120,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/registry.rs","byte_start":70514,"byte_end":70517,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/registry.rs","byte_start":70522,"byte_end":70532,"line_start":122,"line_end":122,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/registry.rs","byte_start":70537,"byte_end":70540,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ Due to safety requirements the returns type ID symbol cannot","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/registry.rs","byte_start":70545,"byte_end":70609,"line_start":124,"line_end":124,"column_start":5,"column_end":69}},{"value":"/ be used later to resolve back to the associated type definition.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/registry.rs","byte_start":70614,"byte_end":70682,"line_start":125,"line_end":125,"column_start":5,"column_end":73}},{"value":"/ However, since this facility is going to be used for serialization","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/registry.rs","byte_start":70687,"byte_end":70757,"line_start":126,"line_end":126,"column_start":5,"column_end":75}},{"value":"/ purposes this functionality isn't needed anyway.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/registry.rs","byte_start":70762,"byte_end":70814,"line_start":127,"line_end":127,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/registry.rs","byte_start":71217,"byte_end":71231,"line_start":138,"line_end":138,"column_start":12,"column_end":26},"name":"register_types","qualname":"<Registry>::register_types","value":"fn register_types<I, '_>(&'_ mut Self, I) -> Vec<UntrackedSymbol<TypeId>>\nwhere I: IntoIterator<Item = MetaType>","parent":null,"children":[],"decl_id":null,"docs":" Calls `register_type` for each `MetaType` in the given `iter`.\n","sig":null,"attributes":[{"value":"/ Calls `register_type` for each `MetaType` in the given `iter`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/registry.rs","byte_start":71139,"byte_end":71205,"line_start":137,"line_end":137,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/registry.rs","byte_start":71558,"byte_end":71575,"line_start":149,"line_end":149,"column_start":12,"column_end":29},"name":"map_into_portable","qualname":"<Registry>::map_into_portable","value":"fn map_into_portable<I, T, '_>(&'_ mut Self, I) -> Vec<T::Output> where\nI: IntoIterator<Item = T>, T: IntoPortable","parent":null,"children":[],"decl_id":null,"docs":" Converts an iterator into a Vec of the equivalent portable\n representations.\n","sig":null,"attributes":[{"value":"/ Converts an iterator into a Vec of the equivalent portable","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/registry.rs","byte_start":71459,"byte_end":71521,"line_start":147,"line_end":147,"column_start":5,"column_end":67}},{"value":"/ representations.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/registry.rs","byte_start":71526,"byte_end":71546,"line_start":148,"line_end":148,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/registry.rs","byte_start":71875,"byte_end":71880,"line_start":160,"line_end":160,"column_start":12,"column_end":17},"name":"types","qualname":"<Registry>::types","value":"fn types<'_>(&'_ Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the types with their keys\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the types with their keys","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/registry.rs","byte_start":71809,"byte_end":71863,"line_start":159,"line_end":159,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":1500},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/composite.rs","byte_start":94922,"byte_end":94938,"line_start":73,"line_end":73,"column_start":12,"column_end":28},"name":"TypeDefComposite","qualname":"::ty::composite::TypeDefComposite","value":"TypeDefComposite {  }","parent":null,"children":[{"krate":0,"index":1502}],"decl_id":null,"docs":" A composite type, consisting of either named (struct) or unnamed (tuple\n struct) fields","sig":null,"attributes":[{"value":"/ A composite type, consisting of either named (struct) or unnamed (tuple","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/composite.rs","byte_start":93973,"byte_end":94048,"line_start":36,"line_end":36,"column_start":1,"column_end":76}},{"value":"/ struct) fields","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/composite.rs","byte_start":94049,"byte_end":94067,"line_start":37,"line_end":37,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/composite.rs","byte_start":94068,"byte_end":94071,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/composite.rs","byte_start":94072,"byte_end":94086,"line_start":39,"line_end":39,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/composite.rs","byte_start":94087,"byte_end":94090,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ## A Rust struct with named fields.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/composite.rs","byte_start":94091,"byte_end":94130,"line_start":41,"line_end":41,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/composite.rs","byte_start":94131,"byte_end":94134,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/composite.rs","byte_start":94135,"byte_end":94142,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ struct Person {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/composite.rs","byte_start":94143,"byte_end":94162,"line_start":44,"line_end":44,"column_start":1,"column_end":20}},{"value":"/     name: String,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/composite.rs","byte_start":94163,"byte_end":94184,"line_start":45,"line_end":45,"column_start":1,"column_end":22}},{"value":"/     age_in_years: u8,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/composite.rs","byte_start":94185,"byte_end":94210,"line_start":46,"line_end":46,"column_start":1,"column_end":26}},{"value":"/     friends: Vec<Person>,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/composite.rs","byte_start":94211,"byte_end":94240,"line_start":47,"line_end":47,"column_start":1,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/composite.rs","byte_start":94241,"byte_end":94246,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/composite.rs","byte_start":94247,"byte_end":94254,"line_start":49,"line_end":49,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/composite.rs","byte_start":94255,"byte_end":94258,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ## A tuple struct with unnamed fields.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/composite.rs","byte_start":94259,"byte_end":94301,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/composite.rs","byte_start":94302,"byte_end":94305,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/composite.rs","byte_start":94306,"byte_end":94313,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ struct Color(u8, u8, u8);","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/composite.rs","byte_start":94314,"byte_end":94343,"line_start":54,"line_end":54,"column_start":1,"column_end":30}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/composite.rs","byte_start":94344,"byte_end":94351,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/composite.rs","byte_start":94352,"byte_end":94355,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ## A so-called unit struct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/composite.rs","byte_start":94356,"byte_end":94386,"line_start":57,"line_end":57,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/composite.rs","byte_start":94387,"byte_end":94390,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/composite.rs","byte_start":94391,"byte_end":94398,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ struct JustAMarker;","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/composite.rs","byte_start":94399,"byte_end":94422,"line_start":60,"line_end":60,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/composite.rs","byte_start":94423,"byte_end":94430,"line_start":61,"line_end":61,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1532},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/composite.rs","byte_start":94965,"byte_end":95002,"line_start":74,"line_end":74,"column_start":5,"column_end":42},"name":"encode_to","qualname":"<TypeDefComposite<T> as parity_scale_codec::Encode>::encode_to","value":"fn encode_to<__CodecOutputEdqy, '_, '_>(&'_ Self, &'_ mut __CodecOutputEdqy)\nwhere __CodecOutputEdqy: ::scale::Output + ?::core::marker::Sized","parent":{"krate":6,"index":209},"children":[],"decl_id":{"krate":6,"index":212},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1534},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/composite.rs","byte_start":94965,"byte_end":95002,"line_start":74,"line_end":74,"column_start":5,"column_end":42},"name":"encode","qualname":"<TypeDefComposite<T> as parity_scale_codec::Encode>::encode","value":"fn encode<'_>(&'_ Self) -> ::scale::alloc::vec::Vec<::core::primitive::u8>","parent":{"krate":6,"index":209},"children":[],"decl_id":{"krate":6,"index":215},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1535},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/composite.rs","byte_start":94965,"byte_end":95002,"line_start":74,"line_end":74,"column_start":5,"column_end":42},"name":"using_encoded","qualname":"<TypeDefComposite<T> as parity_scale_codec::Encode>::using_encoded","value":"fn using_encoded<R, F, '_>(&'_ Self, F) -> R where\nF: for<'_> ::core::ops::FnOnce(&'_ [::core::primitive::u8]) -> R","parent":{"krate":6,"index":209},"children":[],"decl_id":{"krate":6,"index":216},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/composite.rs","byte_start":95244,"byte_end":95257,"line_start":85,"line_end":85,"column_start":8,"column_end":21},"name":"into_portable","qualname":"<TypeDefComposite as registry::IntoPortable>::into_portable","value":"fn into_portable<'_>(Self, &'_ mut Registry) -> Self::Output","parent":{"krate":0,"index":611},"children":[],"decl_id":{"krate":0,"index":613},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/composite.rs","byte_start":95533,"byte_end":95536,"line_start":97,"line_end":97,"column_start":12,"column_end":15},"name":"new","qualname":"<TypeDefComposite<T>>::new","value":"fn new<I>(I) -> Self where I: IntoIterator<Item = Field<T>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new struct definition with named fields.\n","sig":null,"attributes":[{"value":"/ Creates a new struct definition with named fields.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/composite.rs","byte_start":95467,"byte_end":95521,"line_start":96,"line_end":96,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/composite.rs","byte_start":95811,"byte_end":95817,"line_start":112,"line_end":112,"column_start":12,"column_end":18},"name":"fields","qualname":"<TypeDefComposite<T>>::fields","value":"fn fields<'_>(&'_ Self) -> &'_ [Field<T>]","parent":null,"children":[],"decl_id":null,"docs":" Returns the fields of the composite type.\n","sig":null,"attributes":[{"value":"/ Returns the fields of the composite type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/composite.rs","byte_start":95754,"byte_end":95799,"line_start":111,"line_end":111,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":1540},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":98652,"byte_end":98657,"line_start":75,"line_end":75,"column_start":12,"column_end":17},"name":"Field","qualname":"::ty::fields::Field","value":"Field {  }","parent":null,"children":[{"krate":0,"index":1542},{"krate":0,"index":1543},{"krate":0,"index":1544},{"krate":0,"index":1545}],"decl_id":null,"docs":" A field of a struct-like data type.","sig":null,"attributes":[{"value":"/ A field of a struct-like data type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":96773,"byte_end":96812,"line_start":34,"line_end":34,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":96813,"byte_end":96816,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ Name is optional so it can represent both named and unnamed fields.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":96817,"byte_end":96888,"line_start":36,"line_end":36,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":96889,"byte_end":96892,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ This can be a named field of a struct type or an enum struct variant, or an","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":96893,"byte_end":96972,"line_start":38,"line_end":38,"column_start":1,"column_end":80}},{"value":"/ unnamed field of a tuple struct.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":96973,"byte_end":97009,"line_start":39,"line_end":39,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":97010,"byte_end":97013,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ # Type name","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":97014,"byte_end":97029,"line_start":41,"line_end":41,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":97030,"byte_end":97033,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ The `type_name` field contains a string which is the name of the type of the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":97034,"byte_end":97114,"line_start":43,"line_end":43,"column_start":1,"column_end":81}},{"value":"/ field as it appears in the source code. The exact contents and format of the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":97115,"byte_end":97195,"line_start":44,"line_end":44,"column_start":1,"column_end":81}},{"value":"/ type name are not specified, but in practice will be the name of any valid","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":97196,"byte_end":97274,"line_start":45,"line_end":45,"column_start":1,"column_end":79}},{"value":"/ type for a field e.g.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":97275,"byte_end":97300,"line_start":46,"line_end":46,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":97301,"byte_end":97304,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/   - Concrete types e.g `\"u32\"`, `\"bool\"`, `\"Foo\"` etc.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":97305,"byte_end":97363,"line_start":48,"line_end":48,"column_start":1,"column_end":59}},{"value":"/   - Type parameters e.g `\"T\"`, `\"U\"`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":97364,"byte_end":97404,"line_start":49,"line_end":49,"column_start":1,"column_end":41}},{"value":"/   - Generic types e.g `\"Vec<u32>\"`, `\"Vec<T>\"`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":97405,"byte_end":97455,"line_start":50,"line_end":50,"column_start":1,"column_end":51}},{"value":"/   - Associated types e.g. `\"T::MyType\"`, `\"<T as MyTrait>::MyType\"`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":97456,"byte_end":97527,"line_start":51,"line_end":51,"column_start":1,"column_end":72}},{"value":"/   - Type aliases e.g. `\"MyTypeAlias\"`, `\"MyTypeAlias<T>\"`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":97528,"byte_end":97589,"line_start":52,"line_end":52,"column_start":1,"column_end":62}},{"value":"/   - Other built in Rust types e.g. arrays, references etc.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":97590,"byte_end":97652,"line_start":53,"line_end":53,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":97653,"byte_end":97656,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ Note that the type name doesn't correspond to the underlying type of the","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":97657,"byte_end":97733,"line_start":55,"line_end":55,"column_start":1,"column_end":77}},{"value":"/ field, unless using a concrete type directly. Any given type may be referred","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":97734,"byte_end":97814,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/ to by multiple field type names, when using generic type parameters and type","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":97815,"byte_end":97895,"line_start":57,"line_end":57,"column_start":1,"column_end":81}},{"value":"/ aliases.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":97896,"byte_end":97908,"line_start":58,"line_end":58,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":97909,"byte_end":97912,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ This is intended for informational and diagnostic purposes only. Although it","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":97913,"byte_end":97993,"line_start":60,"line_end":60,"column_start":1,"column_end":81}},{"value":"/ is possible to infer certain properties e.g. whether a type name is a type","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":97994,"byte_end":98072,"line_start":61,"line_end":61,"column_start":1,"column_end":79}},{"value":"/ alias, there are no guarantees provided, and the type name representation","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":98073,"byte_end":98150,"line_start":62,"line_end":62,"column_start":1,"column_end":78}},{"value":"/ may change.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":98151,"byte_end":98166,"line_start":63,"line_end":63,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":741},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":99450,"byte_end":99463,"line_start":102,"line_end":102,"column_start":8,"column_end":21},"name":"into_portable","qualname":"<Field as registry::IntoPortable>::into_portable","value":"fn into_portable<'_>(Self, &'_ mut Registry) -> Self::Output","parent":{"krate":0,"index":611},"children":[],"decl_id":{"krate":0,"index":613},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":99879,"byte_end":99886,"line_start":117,"line_end":117,"column_start":12,"column_end":19},"name":"builder","qualname":"<Field<T>>::builder","value":"fn builder() -> FieldBuilder<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new [`FieldBuilder`] for constructing a field.\n","sig":null,"attributes":[{"value":"/ Returns a new [`FieldBuilder`] for constructing a field.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":99807,"byte_end":99867,"line_start":116,"line_end":116,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":745},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":100073,"byte_end":100076,"line_start":124,"line_end":124,"column_start":12,"column_end":15},"name":"new","qualname":"<Field<T>>::new","value":"fn new(Option<T::String>, T::Type, Option<T::String>, Vec<T::String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new field.","sig":null,"attributes":[{"value":"/ Creates a new field.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":99949,"byte_end":99973,"line_start":121,"line_end":121,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":99978,"byte_end":99981,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ Use this constructor if you want to instantiate from a given meta type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":99986,"byte_end":100061,"line_start":123,"line_end":123,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":748},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":100438,"byte_end":100442,"line_start":144,"line_end":144,"column_start":12,"column_end":16},"name":"name","qualname":"<Field<T>>::name","value":"fn name<'_>(&'_ Self) -> Option<&'_ T::String>","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of the field. None for unnamed fields.\n","sig":null,"attributes":[{"value":"/ Returns the name of the field. None for unnamed fields.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":100367,"byte_end":100426,"line_start":143,"line_end":143,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":749},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":100558,"byte_end":100560,"line_start":149,"line_end":149,"column_start":12,"column_end":14},"name":"ty","qualname":"<Field<T>>::ty","value":"fn ty<'_>(&'_ Self) -> &'_ T::Type","parent":null,"children":[],"decl_id":null,"docs":" Returns the type of the field.\n","sig":null,"attributes":[{"value":"/ Returns the type of the field.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":100512,"byte_end":100546,"line_start":148,"line_end":148,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":100946,"byte_end":100955,"line_start":158,"line_end":158,"column_start":12,"column_end":21},"name":"type_name","qualname":"<Field<T>>::type_name","value":"fn type_name<'_>(&'_ Self) -> Option<&'_ T::String>","parent":null,"children":[],"decl_id":null,"docs":" Returns a string which is the name of the type of the field as it\n appears in the source code. The exact contents and format of the type\n name are not specified, but in practice will be the name of any valid\n type for a field. This is intended for informational and diagnostic\n purposes only.\n","sig":null,"attributes":[{"value":"/ Returns a string which is the name of the type of the field as it","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":100610,"byte_end":100679,"line_start":153,"line_end":153,"column_start":5,"column_end":74}},{"value":"/ appears in the source code. The exact contents and format of the type","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":100684,"byte_end":100757,"line_start":154,"line_end":154,"column_start":5,"column_end":78}},{"value":"/ name are not specified, but in practice will be the name of any valid","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":100762,"byte_end":100835,"line_start":155,"line_end":155,"column_start":5,"column_end":78}},{"value":"/ type for a field. This is intended for informational and diagnostic","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":100840,"byte_end":100911,"line_start":156,"line_end":156,"column_start":5,"column_end":76}},{"value":"/ purposes only.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":100916,"byte_end":100934,"line_start":157,"line_end":157,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":751},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":101085,"byte_end":101089,"line_start":163,"line_end":163,"column_start":12,"column_end":16},"name":"docs","qualname":"<Field<T>>::docs","value":"fn docs<'_>(&'_ Self) -> &'_ [T::String]","parent":null,"children":[],"decl_id":null,"docs":" Returns the documentation of the field.\n","sig":null,"attributes":[{"value":"/ Returns the documentation of the field.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":101030,"byte_end":101073,"line_start":162,"line_end":162,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":1576},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":102968,"byte_end":102972,"line_start":60,"line_end":60,"column_start":12,"column_end":16},"name":"Path","qualname":"::ty::path::Path","value":"Path {  }","parent":null,"children":[{"krate":0,"index":1578}],"decl_id":null,"docs":" Represents the path of a type definition.","sig":null,"attributes":[{"value":"/ Represents the path of a type definition.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":102148,"byte_end":102193,"line_start":42,"line_end":42,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":102194,"byte_end":102197,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ This consists of several segments that each have to be a valid Rust","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":102198,"byte_end":102269,"line_start":44,"line_end":44,"column_start":1,"column_end":72}},{"value":"/ identifier. The first segment represents the crate name in which the type","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":102270,"byte_end":102347,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ has been defined. The last segment is the identifier accessed with `ident()`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":102348,"byte_end":102429,"line_start":46,"line_end":46,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":102430,"byte_end":102433,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Rust prelude type may have an empty namespace definition.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":102434,"byte_end":102495,"line_start":48,"line_end":48,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1605},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":102999,"byte_end":103033,"line_start":61,"line_end":61,"column_start":5,"column_end":39},"name":"encode_to","qualname":"<Path<T> as parity_scale_codec::Encode>::encode_to","value":"fn encode_to<__CodecOutputEdqy, '_, '_>(&'_ Self, &'_ mut __CodecOutputEdqy)\nwhere __CodecOutputEdqy: ::scale::Output + ?::core::marker::Sized","parent":{"krate":6,"index":209},"children":[],"decl_id":{"krate":6,"index":212},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1607},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":102999,"byte_end":103033,"line_start":61,"line_end":61,"column_start":5,"column_end":39},"name":"encode","qualname":"<Path<T> as parity_scale_codec::Encode>::encode","value":"fn encode<'_>(&'_ Self) -> ::scale::alloc::vec::Vec<::core::primitive::u8>","parent":{"krate":6,"index":209},"children":[],"decl_id":{"krate":6,"index":215},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1608},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":102999,"byte_end":103033,"line_start":61,"line_end":61,"column_start":5,"column_end":39},"name":"using_encoded","qualname":"<Path<T> as parity_scale_codec::Encode>::using_encoded","value":"fn using_encoded<R, F, '_>(&'_ Self, F) -> R where\nF: for<'_> ::core::ops::FnOnce(&'_ [::core::primitive::u8]) -> R","parent":{"krate":6,"index":209},"children":[],"decl_id":{"krate":6,"index":216},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":103123,"byte_end":103130,"line_start":69,"line_end":69,"column_start":8,"column_end":15},"name":"default","qualname":"<Path<T> as core::default::Default>::default","value":"fn default() -> Self","parent":{"krate":1,"index":3241},"children":[],"decl_id":{"krate":1,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":795},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":103286,"byte_end":103299,"line_start":79,"line_end":79,"column_start":8,"column_end":21},"name":"into_portable","qualname":"<Path as registry::IntoPortable>::into_portable","value":"fn into_portable<'_>(Self, &'_ mut Registry) -> Self::Output","parent":{"krate":0,"index":611},"children":[],"decl_id":{"krate":0,"index":613},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":103504,"byte_end":103507,"line_start":87,"line_end":87,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Path<PortableForm> as core::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut Formatter) -> Result<(), FmtError>","parent":{"krate":1,"index":10295},"children":[],"decl_id":{"krate":1,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":799},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":103796,"byte_end":103799,"line_start":98,"line_end":98,"column_start":12,"column_end":15},"name":"new","qualname":"<Path<MetaForm>>::new","value":"fn new(&'static str, &'static str) -> Path","parent":null,"children":[],"decl_id":null,"docs":" Create a new Path","sig":null,"attributes":[{"value":"/ Create a new Path","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":103649,"byte_end":103670,"line_start":93,"line_end":93,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":103675,"byte_end":103678,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":103683,"byte_end":103695,"line_start":95,"line_end":95,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":103700,"byte_end":103703,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ - If the type identifier or module path contain invalid Rust identifiers","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":103708,"byte_end":103784,"line_start":97,"line_end":97,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":800},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":104269,"byte_end":104282,"line_start":111,"line_end":111,"column_start":12,"column_end":25},"name":"from_segments","qualname":"<Path<MetaForm>>::from_segments","value":"fn from_segments<I>(I) -> Result<Self, PathError> where I: IntoIterator<Item =\n<MetaForm as Form>::String>","parent":null,"children":[],"decl_id":null,"docs":" Create a Path from the given segments","sig":null,"attributes":[{"value":"/ Create a Path from the given segments","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":104083,"byte_end":104124,"line_start":105,"line_end":105,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":104129,"byte_end":104132,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":104137,"byte_end":104149,"line_start":107,"line_end":107,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":104154,"byte_end":104157,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ - If no segments are supplied","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":104162,"byte_end":104195,"line_start":109,"line_end":109,"column_start":5,"column_end":38}},{"value":"/ - If any of the segments are invalid Rust identifiers","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":104200,"byte_end":104257,"line_start":110,"line_end":110,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":808},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":105488,"byte_end":105511,"line_start":151,"line_end":151,"column_start":12,"column_end":35},"name":"from_segments_unchecked","qualname":"<Path<T>>::from_segments_unchecked","value":"fn from_segments_unchecked<I>(I) -> Path<T> where I: IntoIterator<Item =\nT::String>","parent":null,"children":[],"decl_id":null,"docs":" Create a Path from the given segments.","sig":null,"attributes":[{"value":"/ Create a Path from the given segments.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":105355,"byte_end":105397,"line_start":148,"line_end":148,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":105402,"byte_end":105405,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ Does *not* check that the segments are valid Rust identifiers.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":105410,"byte_end":105476,"line_start":150,"line_end":150,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":105736,"byte_end":105744,"line_start":161,"line_end":161,"column_start":12,"column_end":20},"name":"segments","qualname":"<Path<T>>::segments","value":"fn segments<'_>(&'_ Self) -> &'_ [T::String]","parent":null,"children":[],"decl_id":null,"docs":" Returns the segments of the Path\n","sig":null,"attributes":[{"value":"/ Returns the segments of the Path","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":105688,"byte_end":105724,"line_start":160,"line_end":160,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":105855,"byte_end":105863,"line_start":166,"line_end":166,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Path<T>>::is_empty","value":"fn is_empty<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the path is empty\n","sig":null,"attributes":[{"value":"/ Returns `true` if the path is empty","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":105804,"byte_end":105843,"line_start":165,"line_end":165,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":105974,"byte_end":105979,"line_start":171,"line_end":171,"column_start":12,"column_end":17},"name":"ident","qualname":"<Path<T>>::ident","value":"fn ident<'_>(&'_ Self) -> Option<T::String>","parent":null,"children":[],"decl_id":null,"docs":" Get the ident segment of the Path\n","sig":null,"attributes":[{"value":"/ Get the ident segment of the Path","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":105925,"byte_end":105962,"line_start":170,"line_end":170,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":813},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":106120,"byte_end":106129,"line_start":176,"line_end":176,"column_start":12,"column_end":21},"name":"namespace","qualname":"<Path<T>>::namespace","value":"fn namespace<'_>(&'_ Self) -> &'_ [T::String]","parent":null,"children":[],"decl_id":null,"docs":" Get the namespace segments of the Path\n","sig":null,"attributes":[{"value":"/ Get the namespace segments of the Path","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":106066,"byte_end":106108,"line_start":175,"line_end":175,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1614},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":106419,"byte_end":106434,"line_start":185,"line_end":185,"column_start":5,"column_end":20},"name":"MissingSegments","qualname":"::ty::path::PathError::MissingSegments","value":"PathError::MissingSegments","parent":{"krate":0,"index":1613},"children":[],"decl_id":null,"docs":" If the module path does not at least have one segment.\n","sig":null,"attributes":[{"value":"/ If the module path does not at least have one segment.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":106356,"byte_end":106414,"line_start":184,"line_end":184,"column_start":5,"column_end":63}}]},{"kind":"StructVariant","id":{"krate":0,"index":1616},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":106515,"byte_end":106532,"line_start":187,"line_end":187,"column_start":5,"column_end":22},"name":"InvalidIdentifier","qualname":"::ty::path::PathError::InvalidIdentifier","value":"PathError::InvalidIdentifier { segment }","parent":{"krate":0,"index":1613},"children":[],"decl_id":null,"docs":" If a segment within a module path is not a proper Rust identifier.\n","sig":null,"attributes":[{"value":"/ If a segment within a module path is not a proper Rust identifier.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":106440,"byte_end":106510,"line_start":186,"line_end":186,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":1617},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":106591,"byte_end":106598,"line_start":189,"line_end":189,"column_start":9,"column_end":16},"name":"segment","qualname":"::ty::path::PathError::InvalidIdentifier::segment","value":"usize","parent":{"krate":0,"index":1616},"children":[],"decl_id":null,"docs":" The index of the erroneous segment.\n","sig":null,"attributes":[{"value":"/ The index of the erroneous segment.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":106543,"byte_end":106582,"line_start":188,"line_end":188,"column_start":9,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":1613},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":106340,"byte_end":106349,"line_start":183,"line_end":183,"column_start":10,"column_end":19},"name":"PathError","qualname":"::ty::path::PathError","value":"enum PathError {\n    MissingSegments,\n    InvalidIdentifier {\n            segment: usize,\n        },\n}","parent":null,"children":[{"krate":0,"index":1614},{"krate":0,"index":1616}],"decl_id":null,"docs":" An error that may be encountered upon constructing namespaces.\n","sig":null,"attributes":[{"value":"/ An error that may be encountered upon constructing namespaces.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":106232,"byte_end":106298,"line_start":181,"line_end":181,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":1627},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":111089,"byte_end":111103,"line_start":85,"line_end":85,"column_start":12,"column_end":26},"name":"TypeDefVariant","qualname":"::ty::variant::TypeDefVariant","value":"TypeDefVariant {  }","parent":null,"children":[{"krate":0,"index":1629}],"decl_id":null,"docs":" A Enum type (consisting of variants).","sig":null,"attributes":[{"value":"/ A Enum type (consisting of variants).","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":109880,"byte_end":109921,"line_start":36,"line_end":36,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":109922,"byte_end":109925,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":109926,"byte_end":109940,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":109941,"byte_end":109944,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ## A Rust enum, aka tagged union.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":109945,"byte_end":109982,"line_start":40,"line_end":40,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":109983,"byte_end":109986,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":109987,"byte_end":109994,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ enum MyEnum {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":109995,"byte_end":110012,"line_start":43,"line_end":43,"column_start":1,"column_end":18}},{"value":"/     RustAllowsForClikeVariants,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":110013,"byte_end":110048,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/     AndAlsoForTupleStructs(i32, bool),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":110049,"byte_end":110091,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/     OrStructs {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":110092,"byte_end":110111,"line_start":46,"line_end":46,"column_start":1,"column_end":20}},{"value":"/         with: i32,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":110112,"byte_end":110134,"line_start":47,"line_end":47,"column_start":1,"column_end":23}},{"value":"/         named: bool,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":110135,"byte_end":110159,"line_start":48,"line_end":48,"column_start":1,"column_end":25}},{"value":"/         fields: [u8; 32],","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":110160,"byte_end":110189,"line_start":49,"line_end":49,"column_start":1,"column_end":30}},{"value":"/     },","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":110190,"byte_end":110200,"line_start":50,"line_end":50,"column_start":1,"column_end":11}},{"value":"/     ItIsntPossibleToSetADiscriminantThough,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":110201,"byte_end":110248,"line_start":51,"line_end":51,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":110249,"byte_end":110254,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":110255,"byte_end":110262,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":110263,"byte_end":110266,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ## A C-like enum type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":110267,"byte_end":110293,"line_start":55,"line_end":55,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":110294,"byte_end":110297,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":110298,"byte_end":110305,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ enum Days {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":110306,"byte_end":110321,"line_start":58,"line_end":58,"column_start":1,"column_end":16}},{"value":"/     Monday,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":110322,"byte_end":110337,"line_start":59,"line_end":59,"column_start":1,"column_end":16}},{"value":"/     Tuesday,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":110338,"byte_end":110354,"line_start":60,"line_end":60,"column_start":1,"column_end":17}},{"value":"/     Wednesday,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":110355,"byte_end":110373,"line_start":61,"line_end":61,"column_start":1,"column_end":19}},{"value":"/     Thursday = 42, // Allows setting the discriminant explicitly","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":110374,"byte_end":110442,"line_start":62,"line_end":62,"column_start":1,"column_end":69}},{"value":"/     Friday,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":110443,"byte_end":110458,"line_start":63,"line_end":63,"column_start":1,"column_end":16}},{"value":"/     Saturday,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":110459,"byte_end":110476,"line_start":64,"line_end":64,"column_start":1,"column_end":18}},{"value":"/     Sunday,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":110477,"byte_end":110492,"line_start":65,"line_end":65,"column_start":1,"column_end":16}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":110493,"byte_end":110498,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":110499,"byte_end":110506,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":110507,"byte_end":110510,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ## An empty enum (for marker purposes)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":110511,"byte_end":110553,"line_start":69,"line_end":69,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":110554,"byte_end":110557,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":110558,"byte_end":110565,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ enum JustAMarker {}","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":110566,"byte_end":110589,"line_start":72,"line_end":72,"column_start":1,"column_end":24}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":110590,"byte_end":110597,"line_start":73,"line_end":73,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1659},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":111130,"byte_end":111164,"line_start":86,"line_end":86,"column_start":5,"column_end":39},"name":"encode_to","qualname":"<TypeDefVariant<T> as parity_scale_codec::Encode>::encode_to","value":"fn encode_to<__CodecOutputEdqy, '_, '_>(&'_ Self, &'_ mut __CodecOutputEdqy)\nwhere __CodecOutputEdqy: ::scale::Output + ?::core::marker::Sized","parent":{"krate":6,"index":209},"children":[],"decl_id":{"krate":6,"index":212},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1661},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":111130,"byte_end":111164,"line_start":86,"line_end":86,"column_start":5,"column_end":39},"name":"encode","qualname":"<TypeDefVariant<T> as parity_scale_codec::Encode>::encode","value":"fn encode<'_>(&'_ Self) -> ::scale::alloc::vec::Vec<::core::primitive::u8>","parent":{"krate":6,"index":209},"children":[],"decl_id":{"krate":6,"index":215},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1662},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":111130,"byte_end":111164,"line_start":86,"line_end":86,"column_start":5,"column_end":39},"name":"using_encoded","qualname":"<TypeDefVariant<T> as parity_scale_codec::Encode>::using_encoded","value":"fn using_encoded<R, F, '_>(&'_ Self, F) -> R where\nF: for<'_> ::core::ops::FnOnce(&'_ [::core::primitive::u8]) -> R","parent":{"krate":6,"index":209},"children":[],"decl_id":{"krate":6,"index":216},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":847},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":111406,"byte_end":111419,"line_start":97,"line_end":97,"column_start":8,"column_end":21},"name":"into_portable","qualname":"<TypeDefVariant as registry::IntoPortable>::into_portable","value":"fn into_portable<'_>(Self, &'_ mut Registry) -> Self::Output","parent":{"krate":0,"index":611},"children":[],"decl_id":{"krate":0,"index":613},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":111698,"byte_end":111701,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"name":"new","qualname":"<TypeDefVariant<T>>::new","value":"fn new<I>(I) -> Self where I: IntoIterator<Item = Variant<T>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `TypeDefVariant` with the given variants\n","sig":null,"attributes":[{"value":"/ Create a new `TypeDefVariant` with the given variants","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":111629,"byte_end":111686,"line_start":108,"line_end":108,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":111979,"byte_end":111987,"line_start":124,"line_end":124,"column_start":12,"column_end":20},"name":"variants","qualname":"<TypeDefVariant<T>>::variants","value":"fn variants<'_>(&'_ Self) -> &'_ [Variant<T>]","parent":null,"children":[],"decl_id":null,"docs":" Returns the variants of a variant type\n","sig":null,"attributes":[{"value":"/ Returns the variants of a variant type","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":111925,"byte_end":111967,"line_start":123,"line_end":123,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1667},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":112856,"byte_end":112863,"line_start":154,"line_end":154,"column_start":12,"column_end":19},"name":"Variant","qualname":"::ty::variant::Variant","value":"Variant { name, fields, index, docs }","parent":null,"children":[{"krate":0,"index":1669},{"krate":0,"index":1670},{"krate":0,"index":1671},{"krate":0,"index":1672}],"decl_id":null,"docs":" A struct enum variant with either named (struct) or unnamed (tuple struct)\n fields.","sig":null,"attributes":[{"value":"/ A struct enum variant with either named (struct) or unnamed (tuple struct)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":112046,"byte_end":112124,"line_start":129,"line_end":129,"column_start":1,"column_end":79}},{"value":"/ fields.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":112125,"byte_end":112136,"line_start":130,"line_end":130,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":112137,"byte_end":112140,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":112141,"byte_end":112154,"line_start":132,"line_end":132,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":112155,"byte_end":112158,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":112159,"byte_end":112166,"line_start":134,"line_end":134,"column_start":1,"column_end":8}},{"value":"/ enum Operation {","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":112167,"byte_end":112187,"line_start":135,"line_end":135,"column_start":1,"column_end":21}},{"value":"/     Zero,","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":112188,"byte_end":112201,"line_start":136,"line_end":136,"column_start":1,"column_end":14}},{"value":"/ //  ^^^^ this is a unit struct enum variant","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":112202,"byte_end":112249,"line_start":137,"line_end":137,"column_start":1,"column_end":48}},{"value":"/     Add(i32, i32),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":112250,"byte_end":112272,"line_start":138,"line_end":138,"column_start":1,"column_end":23}},{"value":"/ //  ^^^^^^^^^^^^^ this is a tuple-struct enum variant","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":112273,"byte_end":112330,"line_start":139,"line_end":139,"column_start":1,"column_end":58}},{"value":"/     Minus { source: i32 }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":112331,"byte_end":112360,"line_start":140,"line_end":140,"column_start":1,"column_end":30}},{"value":"/ //  ^^^^^^^^^^^^^^^^^^^^^ this is a struct enum variant","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":112361,"byte_end":112420,"line_start":141,"line_end":141,"column_start":1,"column_end":60}},{"value":"/ }","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":112421,"byte_end":112426,"line_start":142,"line_end":142,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":112427,"byte_end":112434,"line_start":143,"line_end":143,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":1669},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":112927,"byte_end":112931,"line_start":156,"line_end":156,"column_start":9,"column_end":13},"name":"name","qualname":"::ty::variant::Variant::name","value":"<T as form::Form>::String","parent":{"krate":0,"index":1667},"children":[],"decl_id":null,"docs":" The name of the variant.\n","sig":null,"attributes":[{"value":"/ The name of the variant.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":112890,"byte_end":112918,"line_start":155,"line_end":155,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":1670},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":113099,"byte_end":113105,"line_start":162,"line_end":162,"column_start":9,"column_end":15},"name":"fields","qualname":"::ty::variant::Variant::fields","value":"prelude::alloc::vec::Vec<ty::fields::Field<T>>","parent":{"krate":0,"index":1667},"children":[],"decl_id":null,"docs":" The fields of the variant.\n","sig":null,"attributes":[{"value":"/ The fields of the variant.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":112948,"byte_end":112978,"line_start":157,"line_end":157,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1671},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":113430,"byte_end":113435,"line_start":168,"line_end":168,"column_start":9,"column_end":14},"name":"index","qualname":"::ty::variant::Variant::index","value":"u8","parent":{"krate":0,"index":1667},"children":[],"decl_id":null,"docs":" Index of the variant, used in `parity-scale-codec`.","sig":null,"attributes":[{"value":"/ Index of the variant, used in `parity-scale-codec`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":113126,"byte_end":113181,"line_start":163,"line_end":163,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":113186,"byte_end":113189,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ The value of this will be, in order of precedence:","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":113194,"byte_end":113248,"line_start":165,"line_end":165,"column_start":5,"column_end":59}},{"value":"/     1. The explicit index defined by a `#[codec(index = N)]` attribute.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":113253,"byte_end":113328,"line_start":166,"line_end":166,"column_start":5,"column_end":80}},{"value":"/     2. The implicit index from the position of the variant in the `enum` definition.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":113333,"byte_end":113421,"line_start":167,"line_end":167,"column_start":5,"column_end":93}}]},{"kind":"Field","id":{"krate":0,"index":1672},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":113583,"byte_end":113587,"line_start":174,"line_end":174,"column_start":9,"column_end":13},"name":"docs","qualname":"::ty::variant::Variant::docs","value":"prelude::alloc::vec::Vec<<T as form::Form>::String>","parent":{"krate":0,"index":1667},"children":[],"decl_id":null,"docs":" Documentation\n","sig":null,"attributes":[{"value":"/ Documentation","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":113445,"byte_end":113462,"line_start":169,"line_end":169,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":857},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":113689,"byte_end":113702,"line_start":180,"line_end":180,"column_start":8,"column_end":21},"name":"into_portable","qualname":"<Variant as registry::IntoPortable>::into_portable","value":"fn into_portable<'_>(Self, &'_ mut Registry) -> Self::Output","parent":{"krate":0,"index":611},"children":[],"decl_id":{"krate":0,"index":613},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":114066,"byte_end":114069,"line_start":195,"line_end":195,"column_start":12,"column_end":15},"name":"new","qualname":"<Variant<T>>::new","value":"fn new(T::String, Vec<Field<T>>, u8, Vec<T::String>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new variant.\n","sig":null,"attributes":[{"value":"/ Creates a new variant.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":114028,"byte_end":114054,"line_start":194,"line_end":194,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":863},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":114393,"byte_end":114397,"line_start":215,"line_end":215,"column_start":12,"column_end":16},"name":"name","qualname":"<Variant<T>>::name","value":"fn name<'_>(&'_ Self) -> &'_ T::String","parent":null,"children":[],"decl_id":null,"docs":" Returns the name of the variant.\n","sig":null,"attributes":[{"value":"/ Returns the name of the variant.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":114345,"byte_end":114381,"line_start":214,"line_end":214,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":114508,"byte_end":114514,"line_start":220,"line_end":220,"column_start":12,"column_end":18},"name":"fields","qualname":"<Variant<T>>::fields","value":"fn fields<'_>(&'_ Self) -> &'_ [Field<T>]","parent":null,"children":[],"decl_id":null,"docs":" Returns the fields of the struct variant.\n","sig":null,"attributes":[{"value":"/ Returns the fields of the struct variant.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":114451,"byte_end":114496,"line_start":219,"line_end":219,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":865},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":114620,"byte_end":114625,"line_start":225,"line_end":225,"column_start":12,"column_end":17},"name":"index","qualname":"<Variant<T>>::index","value":"fn index<'_>(&'_ Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the index of the variant.\n","sig":null,"attributes":[{"value":"/ Returns the index of the variant.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":114571,"byte_end":114608,"line_start":224,"line_end":224,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":114728,"byte_end":114732,"line_start":230,"line_end":230,"column_start":12,"column_end":16},"name":"docs","qualname":"<Variant<T>>::docs","value":"fn docs<'_>(&'_ Self) -> &'_ [T::String]","parent":null,"children":[],"decl_id":null,"docs":" Returns the documentation of the variant.\n","sig":null,"attributes":[{"value":"/ Returns the documentation of the variant.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":114671,"byte_end":114716,"line_start":229,"line_end":229,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":1703},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":75706,"byte_end":75710,"line_start":65,"line_end":65,"column_start":12,"column_end":16},"name":"Type","qualname":"::ty::Type","value":"Type {  }","parent":null,"children":[{"krate":0,"index":1705},{"krate":0,"index":1706},{"krate":0,"index":1707},{"krate":0,"index":1708}],"decl_id":null,"docs":" A [`Type`] definition with optional metadata.\n","sig":null,"attributes":[{"value":"/ A [`Type`] definition with optional metadata.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":75165,"byte_end":75214,"line_start":53,"line_end":53,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":874},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":76546,"byte_end":76559,"line_start":92,"line_end":92,"column_start":8,"column_end":21},"name":"into_portable","qualname":"<Type as registry::IntoPortable>::into_portable","value":"fn into_portable<'_>(Self, &'_ mut Registry) -> Self::Output","parent":{"krate":0,"index":611},"children":[],"decl_id":{"krate":0,"index":613},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":877},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":77495,"byte_end":77502,"line_start":124,"line_end":124,"column_start":12,"column_end":19},"name":"builder","qualname":"<Type>::builder","value":"fn builder() -> TypeBuilder","parent":null,"children":[],"decl_id":null,"docs":" Create a [`TypeBuilder`](`crate::build::TypeBuilder`) the public API for constructing a\n [`Type`] of [`MetaForm`].\n","sig":null,"attributes":[{"value":"/ Create a [`TypeBuilder`](`crate::build::TypeBuilder`) the public API for constructing a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":77358,"byte_end":77449,"line_start":122,"line_end":122,"column_start":5,"column_end":96}},{"value":"/ [`Type`] of [`MetaForm`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":77454,"byte_end":77483,"line_start":123,"line_end":123,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":878},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":77724,"byte_end":77740,"line_start":130,"line_end":130,"column_start":12,"column_end":28},"name":"builder_portable","qualname":"<Type>::builder_portable","value":"fn builder_portable() -> TypeBuilder<PortableForm>","parent":null,"children":[],"decl_id":null,"docs":" Create a [`TypeBuilder`](`crate::build::TypeBuilder`) the public API for constructing a\n [`Type`] of [`PortableForm`] for use at runtime.\n","sig":null,"attributes":[{"value":"/ Create a [`TypeBuilder`](`crate::build::TypeBuilder`) the public API for constructing a","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":77564,"byte_end":77655,"line_start":128,"line_end":128,"column_start":5,"column_end":96}},{"value":"/ [`Type`] of [`PortableForm`] for use at runtime.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":77660,"byte_end":77712,"line_start":129,"line_end":129,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":881},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":77889,"byte_end":77892,"line_start":140,"line_end":140,"column_start":12,"column_end":15},"name":"new","qualname":"<Type<F>>::new","value":"fn new<I, D>(Path<F>, I, D, Vec<F::String>) -> Type<F> where\nI: IntoIterator<Item = TypeParameter<F>>, D: Into<TypeDef<F>>","parent":null,"children":[],"decl_id":null,"docs":" Create a [`Type`].\n","sig":null,"attributes":[{"value":"/ Create a [`Type`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":77855,"byte_end":77877,"line_start":139,"line_end":139,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":78364,"byte_end":78368,"line_start":164,"line_end":164,"column_start":12,"column_end":16},"name":"path","qualname":"<Type<T>>::path","value":"fn path<'_>(&'_ Self) -> &'_ Path<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the path of the type\n","sig":null,"attributes":[{"value":"/ Returns the path of the type","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":78320,"byte_end":78352,"line_start":163,"line_end":163,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":78483,"byte_end":78494,"line_start":169,"line_end":169,"column_start":12,"column_end":23},"name":"type_params","qualname":"<Type<T>>::type_params","value":"fn type_params<'_>(&'_ Self) -> &'_ [TypeParameter<T>]","parent":null,"children":[],"decl_id":null,"docs":" Returns the generic type parameters of the type\n","sig":null,"attributes":[{"value":"/ Returns the generic type parameters of the type","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":78420,"byte_end":78471,"line_start":168,"line_end":168,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":78614,"byte_end":78622,"line_start":174,"line_end":174,"column_start":12,"column_end":20},"name":"type_def","qualname":"<Type<T>>::type_def","value":"fn type_def<'_>(&'_ Self) -> &'_ TypeDef<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the definition of the type\n","sig":null,"attributes":[{"value":"/ Returns the definition of the type","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":78564,"byte_end":78602,"line_start":173,"line_end":173,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":78734,"byte_end":78738,"line_start":179,"line_end":179,"column_start":12,"column_end":16},"name":"docs","qualname":"<Type<T>>::docs","value":"fn docs<'_>(&'_ Self) -> &'_ [T::String]","parent":null,"children":[],"decl_id":null,"docs":" Returns the documentation of the type\n","sig":null,"attributes":[{"value":"/ Returns the documentation of the type","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":78681,"byte_end":78722,"line_start":178,"line_end":178,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":1760},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":79249,"byte_end":79262,"line_start":195,"line_end":195,"column_start":12,"column_end":25},"name":"TypeParameter","qualname":"::ty::TypeParameter","value":"TypeParameter {  }","parent":null,"children":[{"krate":0,"index":1762},{"krate":0,"index":1763}],"decl_id":null,"docs":" A generic type parameter.\n","sig":null,"attributes":[{"value":"/ A generic type parameter.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":78792,"byte_end":78821,"line_start":184,"line_end":184,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":79650,"byte_end":79663,"line_start":208,"line_end":208,"column_start":8,"column_end":21},"name":"into_portable","qualname":"<TypeParameter as registry::IntoPortable>::into_portable","value":"fn into_portable<'_>(Self, &'_ mut Registry) -> Self::Output","parent":{"krate":0,"index":611},"children":[],"decl_id":{"krate":0,"index":613},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":895},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":79937,"byte_end":79940,"line_start":218,"line_end":218,"column_start":12,"column_end":15},"name":"new","qualname":"<TypeParameter<MetaForm>>::new","value":"fn new(<MetaForm as Form>::String, Option<<MetaForm as Form>::Type>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`TypeParameter`].\n","sig":null,"attributes":[{"value":"/ Create a new [`TypeParameter`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":79890,"byte_end":79925,"line_start":217,"line_end":217,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":897},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":80187,"byte_end":80199,"line_start":228,"line_end":228,"column_start":12,"column_end":24},"name":"new_portable","qualname":"<TypeParameter<PortableForm>>::new_portable","value":"fn new_portable(<PortableForm as Form>::String,\nOption<<PortableForm as Form>::Type>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`TypeParameter`] in [`PortableForm`].\n","sig":null,"attributes":[{"value":"/ Create a new [`TypeParameter`] in [`PortableForm`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":80120,"byte_end":80175,"line_start":227,"line_end":227,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":900},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":80496,"byte_end":80498,"line_start":243,"line_end":243,"column_start":12,"column_end":14},"name":"ty","qualname":"<TypeParameter<T>>::ty","value":"fn ty<'_>(&'_ Self) -> Option<&'_ T::Type>","parent":null,"children":[],"decl_id":null,"docs":" Get the type of the parameter.","sig":null,"attributes":[{"value":"/ Get the type of the parameter.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":80398,"byte_end":80432,"line_start":240,"line_end":240,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":80437,"byte_end":80440,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ `None` if the parameter is skipped.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":80445,"byte_end":80484,"line_start":242,"line_end":242,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":901},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":80610,"byte_end":80614,"line_start":248,"line_end":248,"column_start":12,"column_end":16},"name":"name","qualname":"<TypeParameter<T>>::name","value":"fn name<'_>(&'_ Self) -> &'_ T::String","parent":null,"children":[],"decl_id":null,"docs":" Get the name of the parameter.\n","sig":null,"attributes":[{"value":"/ Get the name of the parameter.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":80564,"byte_end":80598,"line_start":247,"line_end":247,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1829},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":81718,"byte_end":81727,"line_start":278,"line_end":278,"column_start":5,"column_end":14},"name":"Composite","qualname":"::ty::TypeDef::Composite","value":"TypeDef::Composite(TypeDefComposite<T>)","parent":{"krate":0,"index":1797},"children":[],"decl_id":null,"docs":" A composite type (e.g. a struct or a tuple)\n","sig":null,"attributes":[{"value":"/ A composite type (e.g. a struct or a tuple)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":81642,"byte_end":81689,"line_start":276,"line_end":276,"column_start":5,"column_end":52}},{"value":"codec(index = 0)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":81694,"byte_end":81713,"line_start":277,"line_end":277,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":1831},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":81728,"byte_end":81747,"line_start":278,"line_end":278,"column_start":15,"column_end":34},"name":"0","qualname":"::ty::TypeDef::Composite::0","value":"ty::composite::TypeDefComposite<T>","parent":{"krate":0,"index":1829},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1832},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":81816,"byte_end":81823,"line_start":281,"line_end":281,"column_start":5,"column_end":12},"name":"Variant","qualname":"::ty::TypeDef::Variant","value":"TypeDef::Variant(TypeDefVariant<T>)","parent":{"krate":0,"index":1797},"children":[],"decl_id":null,"docs":" A variant type (e.g. an enum)\n","sig":null,"attributes":[{"value":"/ A variant type (e.g. an enum)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":81754,"byte_end":81787,"line_start":279,"line_end":279,"column_start":5,"column_end":38}},{"value":"codec(index = 1)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":81792,"byte_end":81811,"line_start":280,"line_end":280,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":1834},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":81824,"byte_end":81841,"line_start":281,"line_end":281,"column_start":13,"column_end":30},"name":"0","qualname":"::ty::TypeDef::Variant::0","value":"ty::variant::TypeDefVariant<T>","parent":{"krate":0,"index":1832},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1835},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":81923,"byte_end":81931,"line_start":284,"line_end":284,"column_start":5,"column_end":13},"name":"Sequence","qualname":"::ty::TypeDef::Sequence","value":"TypeDef::Sequence(TypeDefSequence<T>)","parent":{"krate":0,"index":1797},"children":[],"decl_id":null,"docs":" A sequence type with runtime known length.\n","sig":null,"attributes":[{"value":"/ A sequence type with runtime known length.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":81848,"byte_end":81894,"line_start":282,"line_end":282,"column_start":5,"column_end":51}},{"value":"codec(index = 2)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":81899,"byte_end":81918,"line_start":283,"line_end":283,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":1837},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":81932,"byte_end":81950,"line_start":284,"line_end":284,"column_start":14,"column_end":32},"name":"0","qualname":"::ty::TypeDef::Sequence::0","value":"ty::TypeDefSequence<T>","parent":{"krate":0,"index":1835},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1838},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":82035,"byte_end":82040,"line_start":287,"line_end":287,"column_start":5,"column_end":10},"name":"Array","qualname":"::ty::TypeDef::Array","value":"TypeDef::Array(TypeDefArray<T>)","parent":{"krate":0,"index":1797},"children":[],"decl_id":null,"docs":" An array type with compile-time known length.\n","sig":null,"attributes":[{"value":"/ An array type with compile-time known length.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":81957,"byte_end":82006,"line_start":285,"line_end":285,"column_start":5,"column_end":54}},{"value":"codec(index = 3)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":82011,"byte_end":82030,"line_start":286,"line_end":286,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":1840},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":82041,"byte_end":82056,"line_start":287,"line_end":287,"column_start":11,"column_end":26},"name":"0","qualname":"::ty::TypeDef::Array::0","value":"ty::TypeDefArray<T>","parent":{"krate":0,"index":1838},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1841},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":82109,"byte_end":82114,"line_start":290,"line_end":290,"column_start":5,"column_end":10},"name":"Tuple","qualname":"::ty::TypeDef::Tuple","value":"TypeDef::Tuple(TypeDefTuple<T>)","parent":{"krate":0,"index":1797},"children":[],"decl_id":null,"docs":" A tuple type.\n","sig":null,"attributes":[{"value":"/ A tuple type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":82063,"byte_end":82080,"line_start":288,"line_end":288,"column_start":5,"column_end":22}},{"value":"codec(index = 4)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":82085,"byte_end":82104,"line_start":289,"line_end":289,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":1843},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":82115,"byte_end":82130,"line_start":290,"line_end":290,"column_start":11,"column_end":26},"name":"0","qualname":"::ty::TypeDef::Tuple::0","value":"ty::TypeDefTuple<T>","parent":{"krate":0,"index":1841},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1844},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":82192,"byte_end":82201,"line_start":293,"line_end":293,"column_start":5,"column_end":14},"name":"Primitive","qualname":"::ty::TypeDef::Primitive","value":"TypeDef::Primitive(TypeDefPrimitive)","parent":{"krate":0,"index":1797},"children":[],"decl_id":null,"docs":" A Rust primitive type.\n","sig":null,"attributes":[{"value":"/ A Rust primitive type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":82137,"byte_end":82163,"line_start":291,"line_end":291,"column_start":5,"column_end":31}},{"value":"codec(index = 5)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":82168,"byte_end":82187,"line_start":292,"line_end":292,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":1846},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":82202,"byte_end":82218,"line_start":293,"line_end":293,"column_start":15,"column_end":31},"name":"0","qualname":"::ty::TypeDef::Primitive::0","value":"ty::TypeDefPrimitive","parent":{"krate":0,"index":1844},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1847},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":82295,"byte_end":82302,"line_start":296,"line_end":296,"column_start":5,"column_end":12},"name":"Compact","qualname":"::ty::TypeDef::Compact","value":"TypeDef::Compact(TypeDefCompact<T>)","parent":{"krate":0,"index":1797},"children":[],"decl_id":null,"docs":" A type using the [`Compact`] encoding\n","sig":null,"attributes":[{"value":"/ A type using the [`Compact`] encoding","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":82225,"byte_end":82266,"line_start":294,"line_end":294,"column_start":5,"column_end":46}},{"value":"codec(index = 6)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":82271,"byte_end":82290,"line_start":295,"line_end":295,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":1849},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":82303,"byte_end":82320,"line_start":296,"line_end":296,"column_start":13,"column_end":30},"name":"0","qualname":"::ty::TypeDef::Compact::0","value":"ty::TypeDefCompact<T>","parent":{"krate":0,"index":1847},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1850},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":82399,"byte_end":82410,"line_start":299,"line_end":299,"column_start":5,"column_end":16},"name":"BitSequence","qualname":"::ty::TypeDef::BitSequence","value":"TypeDef::BitSequence(TypeDefBitSequence<T>)","parent":{"krate":0,"index":1797},"children":[],"decl_id":null,"docs":" A type representing a sequence of bits.\n","sig":null,"attributes":[{"value":"/ A type representing a sequence of bits.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":82327,"byte_end":82370,"line_start":297,"line_end":297,"column_start":5,"column_end":48}},{"value":"codec(index = 7)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":82375,"byte_end":82394,"line_start":298,"line_end":298,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":1852},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":82411,"byte_end":82432,"line_start":299,"line_end":299,"column_start":17,"column_end":38},"name":"0","qualname":"::ty::TypeDef::BitSequence::0","value":"ty::TypeDefBitSequence<T>","parent":{"krate":0,"index":1850},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1797},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":81608,"byte_end":81615,"line_start":275,"line_end":275,"column_start":10,"column_end":17},"name":"TypeDef","qualname":"::ty::TypeDef","value":"enum TypeDef<T = MetaForm> where T: Form {\n    Composite(TypeDefComposite<T>),\n    Variant(TypeDefVariant<T>),\n    Sequence(TypeDefSequence<T>),\n    Array(TypeDefArray<T>),\n    Tuple(TypeDefTuple<T>),\n    Primitive(TypeDefPrimitive),\n    Compact(TypeDefCompact<T>),\n    BitSequence(TypeDefBitSequence<T>),\n}","parent":null,"children":[{"krate":0,"index":1829},{"krate":0,"index":1832},{"krate":0,"index":1835},{"krate":0,"index":1838},{"krate":0,"index":1841},{"krate":0,"index":1844},{"krate":0,"index":1847},{"krate":0,"index":1850}],"decl_id":null,"docs":" The possible types a SCALE encodable Rust value could have.","sig":null,"attributes":[{"value":"/ The possible types a SCALE encodable Rust value could have.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":80666,"byte_end":80729,"line_start":253,"line_end":253,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":80730,"byte_end":80733,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":80734,"byte_end":80744,"line_start":255,"line_end":255,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":80745,"byte_end":80748,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ In order to preserve backwards compatibility, variant indices are explicitly specified instead","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":80749,"byte_end":80847,"line_start":257,"line_end":257,"column_start":1,"column_end":99}},{"value":"/ of depending on the default implicit ordering.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":80848,"byte_end":80898,"line_start":258,"line_end":258,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":80899,"byte_end":80902,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"/ When adding a new variant, it must be added at the end with an incremented index.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":80903,"byte_end":80988,"line_start":260,"line_end":260,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":80989,"byte_end":80992,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ When removing an existing variant, the rest of variant indices remain the same, and the removed","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":80993,"byte_end":81092,"line_start":262,"line_end":262,"column_start":1,"column_end":100}},{"value":"/ index should not be reused.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":81093,"byte_end":81124,"line_start":263,"line_end":263,"column_start":1,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":905},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":83069,"byte_end":83082,"line_start":326,"line_end":326,"column_start":8,"column_end":21},"name":"into_portable","qualname":"<TypeDef as registry::IntoPortable>::into_portable","value":"fn into_portable<'_>(Self, &'_ mut Registry) -> Self::Output","parent":{"krate":0,"index":611},"children":[],"decl_id":{"krate":0,"index":613},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1897},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":84280,"byte_end":84284,"line_start":352,"line_end":352,"column_start":5,"column_end":9},"name":"Bool","qualname":"::ty::TypeDefPrimitive::Bool","value":"TypeDefPrimitive::Bool","parent":{"krate":0,"index":1877},"children":[],"decl_id":null,"docs":" `bool` type\n","sig":null,"attributes":[{"value":"/ `bool` type","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":84236,"byte_end":84251,"line_start":350,"line_end":350,"column_start":5,"column_end":20}},{"value":"codec(index = 0)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":84256,"byte_end":84275,"line_start":351,"line_end":351,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1899},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":84334,"byte_end":84338,"line_start":355,"line_end":355,"column_start":5,"column_end":9},"name":"Char","qualname":"::ty::TypeDefPrimitive::Char","value":"TypeDefPrimitive::Char","parent":{"krate":0,"index":1877},"children":[],"decl_id":null,"docs":" `char` type\n","sig":null,"attributes":[{"value":"/ `char` type","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":84290,"byte_end":84305,"line_start":353,"line_end":353,"column_start":5,"column_end":20}},{"value":"codec(index = 1)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":84310,"byte_end":84329,"line_start":354,"line_end":354,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1901},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":84387,"byte_end":84390,"line_start":358,"line_end":358,"column_start":5,"column_end":8},"name":"Str","qualname":"::ty::TypeDefPrimitive::Str","value":"TypeDefPrimitive::Str","parent":{"krate":0,"index":1877},"children":[],"decl_id":null,"docs":" `str` type\n","sig":null,"attributes":[{"value":"/ `str` type","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":84344,"byte_end":84358,"line_start":356,"line_end":356,"column_start":5,"column_end":19}},{"value":"codec(index = 2)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":84363,"byte_end":84382,"line_start":357,"line_end":357,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1903},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":84433,"byte_end":84435,"line_start":361,"line_end":361,"column_start":5,"column_end":7},"name":"U8","qualname":"::ty::TypeDefPrimitive::U8","value":"TypeDefPrimitive::U8","parent":{"krate":0,"index":1877},"children":[],"decl_id":null,"docs":" `u8`\n","sig":null,"attributes":[{"value":"/ `u8`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":84396,"byte_end":84404,"line_start":359,"line_end":359,"column_start":5,"column_end":13}},{"value":"codec(index = 3)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":84409,"byte_end":84428,"line_start":360,"line_end":360,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1905},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":84479,"byte_end":84482,"line_start":364,"line_end":364,"column_start":5,"column_end":8},"name":"U16","qualname":"::ty::TypeDefPrimitive::U16","value":"TypeDefPrimitive::U16","parent":{"krate":0,"index":1877},"children":[],"decl_id":null,"docs":" `u16`\n","sig":null,"attributes":[{"value":"/ `u16`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":84441,"byte_end":84450,"line_start":362,"line_end":362,"column_start":5,"column_end":14}},{"value":"codec(index = 4)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":84455,"byte_end":84474,"line_start":363,"line_end":363,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1907},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":84526,"byte_end":84529,"line_start":367,"line_end":367,"column_start":5,"column_end":8},"name":"U32","qualname":"::ty::TypeDefPrimitive::U32","value":"TypeDefPrimitive::U32","parent":{"krate":0,"index":1877},"children":[],"decl_id":null,"docs":" `u32`\n","sig":null,"attributes":[{"value":"/ `u32`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":84488,"byte_end":84497,"line_start":365,"line_end":365,"column_start":5,"column_end":14}},{"value":"codec(index = 5)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":84502,"byte_end":84521,"line_start":366,"line_end":366,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1909},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":84573,"byte_end":84576,"line_start":370,"line_end":370,"column_start":5,"column_end":8},"name":"U64","qualname":"::ty::TypeDefPrimitive::U64","value":"TypeDefPrimitive::U64","parent":{"krate":0,"index":1877},"children":[],"decl_id":null,"docs":" `u64`\n","sig":null,"attributes":[{"value":"/ `u64`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":84535,"byte_end":84544,"line_start":368,"line_end":368,"column_start":5,"column_end":14}},{"value":"codec(index = 6)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":84549,"byte_end":84568,"line_start":369,"line_end":369,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1911},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":84621,"byte_end":84625,"line_start":373,"line_end":373,"column_start":5,"column_end":9},"name":"U128","qualname":"::ty::TypeDefPrimitive::U128","value":"TypeDefPrimitive::U128","parent":{"krate":0,"index":1877},"children":[],"decl_id":null,"docs":" `u128`\n","sig":null,"attributes":[{"value":"/ `u128`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":84582,"byte_end":84592,"line_start":371,"line_end":371,"column_start":5,"column_end":15}},{"value":"codec(index = 7)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":84597,"byte_end":84616,"line_start":372,"line_end":372,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1913},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":84706,"byte_end":84710,"line_start":376,"line_end":376,"column_start":5,"column_end":9},"name":"U256","qualname":"::ty::TypeDefPrimitive::U256","value":"TypeDefPrimitive::U256","parent":{"krate":0,"index":1877},"children":[],"decl_id":null,"docs":" 256 bits unsigned int (no rust equivalent)\n","sig":null,"attributes":[{"value":"/ 256 bits unsigned int (no rust equivalent)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":84631,"byte_end":84677,"line_start":374,"line_end":374,"column_start":5,"column_end":51}},{"value":"codec(index = 8)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":84682,"byte_end":84701,"line_start":375,"line_end":375,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1915},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":84753,"byte_end":84755,"line_start":379,"line_end":379,"column_start":5,"column_end":7},"name":"I8","qualname":"::ty::TypeDefPrimitive::I8","value":"TypeDefPrimitive::I8","parent":{"krate":0,"index":1877},"children":[],"decl_id":null,"docs":" `i8`\n","sig":null,"attributes":[{"value":"/ `i8`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":84716,"byte_end":84724,"line_start":377,"line_end":377,"column_start":5,"column_end":13}},{"value":"codec(index = 9)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":84729,"byte_end":84748,"line_start":378,"line_end":378,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1917},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":84800,"byte_end":84803,"line_start":382,"line_end":382,"column_start":5,"column_end":8},"name":"I16","qualname":"::ty::TypeDefPrimitive::I16","value":"TypeDefPrimitive::I16","parent":{"krate":0,"index":1877},"children":[],"decl_id":null,"docs":" `i16`\n","sig":null,"attributes":[{"value":"/ `i16`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":84761,"byte_end":84770,"line_start":380,"line_end":380,"column_start":5,"column_end":14}},{"value":"codec(index = 10)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":84775,"byte_end":84795,"line_start":381,"line_end":381,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1919},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":84848,"byte_end":84851,"line_start":385,"line_end":385,"column_start":5,"column_end":8},"name":"I32","qualname":"::ty::TypeDefPrimitive::I32","value":"TypeDefPrimitive::I32","parent":{"krate":0,"index":1877},"children":[],"decl_id":null,"docs":" `i32`\n","sig":null,"attributes":[{"value":"/ `i32`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":84809,"byte_end":84818,"line_start":383,"line_end":383,"column_start":5,"column_end":14}},{"value":"codec(index = 11)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":84823,"byte_end":84843,"line_start":384,"line_end":384,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1921},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":84896,"byte_end":84899,"line_start":388,"line_end":388,"column_start":5,"column_end":8},"name":"I64","qualname":"::ty::TypeDefPrimitive::I64","value":"TypeDefPrimitive::I64","parent":{"krate":0,"index":1877},"children":[],"decl_id":null,"docs":" `i64`\n","sig":null,"attributes":[{"value":"/ `i64`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":84857,"byte_end":84866,"line_start":386,"line_end":386,"column_start":5,"column_end":14}},{"value":"codec(index = 12)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":84871,"byte_end":84891,"line_start":387,"line_end":387,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1923},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":84945,"byte_end":84949,"line_start":391,"line_end":391,"column_start":5,"column_end":9},"name":"I128","qualname":"::ty::TypeDefPrimitive::I128","value":"TypeDefPrimitive::I128","parent":{"krate":0,"index":1877},"children":[],"decl_id":null,"docs":" `i128`\n","sig":null,"attributes":[{"value":"/ `i128`","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":84905,"byte_end":84915,"line_start":389,"line_end":389,"column_start":5,"column_end":15}},{"value":"codec(index = 13)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":84920,"byte_end":84940,"line_start":390,"line_end":390,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1925},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":85029,"byte_end":85033,"line_start":394,"line_end":394,"column_start":5,"column_end":9},"name":"I256","qualname":"::ty::TypeDefPrimitive::I256","value":"TypeDefPrimitive::I256","parent":{"krate":0,"index":1877},"children":[],"decl_id":null,"docs":" 256 bits signed int (no rust equivalent)\n","sig":null,"attributes":[{"value":"/ 256 bits signed int (no rust equivalent)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":84955,"byte_end":84999,"line_start":392,"line_end":392,"column_start":5,"column_end":49}},{"value":"codec(index = 14)","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":85004,"byte_end":85024,"line_start":393,"line_end":393,"column_start":5,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":1877},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":84213,"byte_end":84229,"line_start":349,"line_end":349,"column_start":10,"column_end":26},"name":"TypeDefPrimitive","qualname":"::ty::TypeDefPrimitive","value":"enum TypeDefPrimitive {\n    Bool,\n    Char,\n    Str,\n    U8,\n    U16,\n    U32,\n    U64,\n    U128,\n    U256,\n    I8,\n    I16,\n    I32,\n    I64,\n    I128,\n    I256,\n}","parent":null,"children":[{"krate":0,"index":1897},{"krate":0,"index":1899},{"krate":0,"index":1901},{"krate":0,"index":1903},{"krate":0,"index":1905},{"krate":0,"index":1907},{"krate":0,"index":1909},{"krate":0,"index":1911},{"krate":0,"index":1913},{"krate":0,"index":1915},{"krate":0,"index":1917},{"krate":0,"index":1919},{"krate":0,"index":1921},{"krate":0,"index":1923},{"krate":0,"index":1925}],"decl_id":null,"docs":" A primitive Rust type.","sig":null,"attributes":[{"value":"/ A primitive Rust type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":83801,"byte_end":83827,"line_start":340,"line_end":340,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":83828,"byte_end":83831,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":83832,"byte_end":83842,"line_start":342,"line_end":342,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":83843,"byte_end":83846,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ Explicit codec indices specified to ensure backwards compatibility. See [`TypeDef`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":83847,"byte_end":83935,"line_start":344,"line_end":344,"column_start":1,"column_end":89}}]},{"kind":"Struct","id":{"krate":0,"index":1927},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":85272,"byte_end":85284,"line_start":401,"line_end":401,"column_start":12,"column_end":24},"name":"TypeDefArray","qualname":"::ty::TypeDefArray","value":"TypeDefArray {  }","parent":null,"children":[{"krate":0,"index":1929},{"krate":0,"index":1930}],"decl_id":null,"docs":" An array type.\n","sig":null,"attributes":[{"value":"/ An array type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":85038,"byte_end":85056,"line_start":397,"line_end":397,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":85581,"byte_end":85594,"line_start":412,"line_end":412,"column_start":8,"column_end":21},"name":"into_portable","qualname":"<TypeDefArray as registry::IntoPortable>::into_portable","value":"fn into_portable<'_>(Self, &'_ mut Registry) -> Self::Output","parent":{"krate":0,"index":611},"children":[],"decl_id":{"krate":0,"index":613},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":85908,"byte_end":85911,"line_start":426,"line_end":426,"column_start":12,"column_end":15},"name":"new","qualname":"<TypeDefArray<T>>::new","value":"fn new(u32, <T as Form>::Type) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new array type.\n","sig":null,"attributes":[{"value":"/ Creates a new array type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":85867,"byte_end":85896,"line_start":425,"line_end":425,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":912},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":86060,"byte_end":86063,"line_start":431,"line_end":431,"column_start":12,"column_end":15},"name":"len","qualname":"<TypeDefArray<T>>::len","value":"fn len<'_>(&'_ Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of the array type.\n","sig":null,"attributes":[{"value":"/ Returns the length of the array type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":86007,"byte_end":86048,"line_start":430,"line_end":430,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":86167,"byte_end":86177,"line_start":436,"line_end":436,"column_start":12,"column_end":22},"name":"type_param","qualname":"<TypeDefArray<T>>::type_param","value":"fn type_param<'_>(&'_ Self) -> &'_ T::Type","parent":null,"children":[],"decl_id":null,"docs":" Returns the element type of the array type.\n","sig":null,"attributes":[{"value":"/ Returns the element type of the array type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":86108,"byte_end":86155,"line_start":435,"line_end":435,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":1961},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":86741,"byte_end":86753,"line_start":453,"line_end":453,"column_start":12,"column_end":24},"name":"TypeDefTuple","qualname":"::ty::TypeDefTuple","value":"TypeDefTuple {  }","parent":null,"children":[{"krate":0,"index":1963}],"decl_id":null,"docs":" A type to refer to tuple types.\n","sig":null,"attributes":[{"value":"/ A type to refer to tuple types.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":86233,"byte_end":86268,"line_start":441,"line_end":441,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1987},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":86780,"byte_end":86814,"line_start":454,"line_end":454,"column_start":5,"column_end":39},"name":"encode_to","qualname":"<TypeDefTuple<T> as parity_scale_codec::Encode>::encode_to","value":"fn encode_to<__CodecOutputEdqy, '_, '_>(&'_ Self, &'_ mut __CodecOutputEdqy)\nwhere __CodecOutputEdqy: ::scale::Output + ?::core::marker::Sized","parent":{"krate":6,"index":209},"children":[],"decl_id":{"krate":6,"index":212},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1989},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":86780,"byte_end":86814,"line_start":454,"line_end":454,"column_start":5,"column_end":39},"name":"encode","qualname":"<TypeDefTuple<T> as parity_scale_codec::Encode>::encode","value":"fn encode<'_>(&'_ Self) -> ::scale::alloc::vec::Vec<::core::primitive::u8>","parent":{"krate":6,"index":209},"children":[],"decl_id":{"krate":6,"index":215},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1990},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":86780,"byte_end":86814,"line_start":454,"line_end":454,"column_start":5,"column_end":39},"name":"using_encoded","qualname":"<TypeDefTuple<T> as parity_scale_codec::Encode>::using_encoded","value":"fn using_encoded<R, F, '_>(&'_ Self, F) -> R where\nF: for<'_> ::core::ops::FnOnce(&'_ [::core::primitive::u8]) -> R","parent":{"krate":6,"index":209},"children":[],"decl_id":{"krate":6,"index":216},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":916},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":86935,"byte_end":86948,"line_start":461,"line_end":461,"column_start":8,"column_end":21},"name":"into_portable","qualname":"<TypeDefTuple as registry::IntoPortable>::into_portable","value":"fn into_portable<'_>(Self, &'_ mut Registry) -> Self::Output","parent":{"krate":0,"index":611},"children":[],"decl_id":{"krate":0,"index":613},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":918},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":87195,"byte_end":87198,"line_start":470,"line_end":470,"column_start":12,"column_end":15},"name":"new","qualname":"<TypeDefTuple>::new","value":"fn new<T>(T) -> Self where T: IntoIterator<Item = MetaType>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new tuple type definition from the given types.\n","sig":null,"attributes":[{"value":"/ Creates a new tuple type definition from the given types.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":87122,"byte_end":87183,"line_start":469,"line_end":469,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":921},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":87530,"byte_end":87534,"line_start":483,"line_end":483,"column_start":12,"column_end":16},"name":"unit","qualname":"<TypeDefTuple>::unit","value":"fn unit() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unit tuple to represent the unit type, `()`.\n","sig":null,"attributes":[{"value":"/ Creates a new unit tuple to represent the unit type, `()`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":87456,"byte_end":87518,"line_start":482,"line_end":482,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":923},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":87694,"byte_end":87706,"line_start":490,"line_end":490,"column_start":12,"column_end":24},"name":"new_portable","qualname":"<TypeDefTuple<PortableForm>>::new_portable","value":"fn new_portable<I>(I) -> Self where I: IntoIterator<Item =\n<PortableForm as Form>::Type>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new custom type definition from the given types.\n","sig":null,"attributes":[{"value":"/ Creates a new custom type definition from the given types.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":87620,"byte_end":87682,"line_start":489,"line_end":489,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":88004,"byte_end":88010,"line_start":505,"line_end":505,"column_start":12,"column_end":18},"name":"fields","qualname":"<TypeDefTuple<T>>::fields","value":"fn fields<'_>(&'_ Self) -> &'_ [T::Type]","parent":null,"children":[],"decl_id":null,"docs":" Returns the types of the tuple fields.\n","sig":null,"attributes":[{"value":"/ Returns the types of the tuple fields.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":87950,"byte_end":87992,"line_start":504,"line_end":504,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1998},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":88343,"byte_end":88358,"line_start":514,"line_end":514,"column_start":12,"column_end":27},"name":"TypeDefSequence","qualname":"::ty::TypeDefSequence","value":"TypeDefSequence {  }","parent":null,"children":[{"krate":0,"index":2000}],"decl_id":null,"docs":" A type to refer to a sequence of elements of the same type.\n","sig":null,"attributes":[{"value":"/ A type to refer to a sequence of elements of the same type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":88064,"byte_end":88127,"line_start":510,"line_end":510,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2024},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":88385,"byte_end":88427,"line_start":515,"line_end":515,"column_start":5,"column_end":47},"name":"encode_to","qualname":"<TypeDefSequence<T> as parity_scale_codec::Encode>::encode_to","value":"fn encode_to<__CodecOutputEdqy, '_, '_>(&'_ Self, &'_ mut __CodecOutputEdqy)\nwhere __CodecOutputEdqy: ::scale::Output + ?::core::marker::Sized","parent":{"krate":6,"index":209},"children":[],"decl_id":{"krate":6,"index":212},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2026},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":88385,"byte_end":88427,"line_start":515,"line_end":515,"column_start":5,"column_end":47},"name":"encode","qualname":"<TypeDefSequence<T> as parity_scale_codec::Encode>::encode","value":"fn encode<'_>(&'_ Self) -> ::scale::alloc::vec::Vec<::core::primitive::u8>","parent":{"krate":6,"index":209},"children":[],"decl_id":{"krate":6,"index":215},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2027},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":88385,"byte_end":88427,"line_start":515,"line_end":515,"column_start":5,"column_end":47},"name":"using_encoded","qualname":"<TypeDefSequence<T> as parity_scale_codec::Encode>::using_encoded","value":"fn using_encoded<R, F, '_>(&'_ Self, F) -> R where\nF: for<'_> ::core::ops::FnOnce(&'_ [::core::primitive::u8]) -> R","parent":{"krate":6,"index":209},"children":[],"decl_id":{"krate":6,"index":216},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":88612,"byte_end":88625,"line_start":523,"line_end":523,"column_start":8,"column_end":21},"name":"into_portable","qualname":"<TypeDefSequence as registry::IntoPortable>::into_portable","value":"fn into_portable<'_>(Self, &'_ mut Registry) -> Self::Output","parent":{"krate":0,"index":611},"children":[],"decl_id":{"krate":0,"index":613},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":932},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":88961,"byte_end":88963,"line_start":535,"line_end":535,"column_start":12,"column_end":14},"name":"of","qualname":"<TypeDefSequence>::of","value":"fn of<T>() -> Self where T: TypeInfo + 'static","parent":null,"children":[],"decl_id":null,"docs":" Creates a new sequence type.","sig":null,"attributes":[{"value":"/ Creates a new sequence type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":88813,"byte_end":88845,"line_start":531,"line_end":531,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":88850,"byte_end":88853,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ Use this constructor if you want to instantiate from a given","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":88858,"byte_end":88922,"line_start":533,"line_end":533,"column_start":5,"column_end":69}},{"value":"/ compile-time type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":88927,"byte_end":88949,"line_start":534,"line_end":534,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":936},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":89257,"byte_end":89260,"line_start":550,"line_end":550,"column_start":12,"column_end":15},"name":"new","qualname":"<TypeDefSequence<T>>::new","value":"fn new(<T as Form>::Type) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new sequence type.","sig":null,"attributes":[{"value":"/ Creates a new sequence type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":89125,"byte_end":89157,"line_start":547,"line_end":547,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":89162,"byte_end":89165,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Use this constructor if you want to instantiate from a given meta type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":89170,"byte_end":89245,"line_start":549,"line_end":549,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":937},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":89403,"byte_end":89413,"line_start":555,"line_end":555,"column_start":12,"column_end":22},"name":"type_param","qualname":"<TypeDefSequence<T>>::type_param","value":"fn type_param<'_>(&'_ Self) -> &'_ T::Type","parent":null,"children":[],"decl_id":null,"docs":" Returns the element type of the sequence type.\n","sig":null,"attributes":[{"value":"/ Returns the element type of the sequence type.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":89341,"byte_end":89391,"line_start":554,"line_end":554,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":2035},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":89719,"byte_end":89733,"line_start":564,"line_end":564,"column_start":12,"column_end":26},"name":"TypeDefCompact","qualname":"::ty::TypeDefCompact","value":"TypeDefCompact {  }","parent":null,"children":[{"krate":0,"index":2037}],"decl_id":null,"docs":" A type wrapped in [`Compact`].\n","sig":null,"attributes":[{"value":"/ A type wrapped in [`Compact`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":89469,"byte_end":89503,"line_start":560,"line_end":560,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2061},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":89760,"byte_end":89826,"line_start":565,"line_end":565,"column_start":5,"column_end":71},"name":"encode_to","qualname":"<TypeDefCompact<T> as parity_scale_codec::Encode>::encode_to","value":"fn encode_to<__CodecOutputEdqy, '_, '_>(&'_ Self, &'_ mut __CodecOutputEdqy)\nwhere __CodecOutputEdqy: ::scale::Output + ?::core::marker::Sized","parent":{"krate":6,"index":209},"children":[],"decl_id":{"krate":6,"index":212},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2063},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":89760,"byte_end":89826,"line_start":565,"line_end":565,"column_start":5,"column_end":71},"name":"encode","qualname":"<TypeDefCompact<T> as parity_scale_codec::Encode>::encode","value":"fn encode<'_>(&'_ Self) -> ::scale::alloc::vec::Vec<::core::primitive::u8>","parent":{"krate":6,"index":209},"children":[],"decl_id":{"krate":6,"index":215},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2064},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":89760,"byte_end":89826,"line_start":565,"line_end":565,"column_start":5,"column_end":71},"name":"using_encoded","qualname":"<TypeDefCompact<T> as parity_scale_codec::Encode>::using_encoded","value":"fn using_encoded<R, F, '_>(&'_ Self, F) -> R where\nF: for<'_> ::core::ops::FnOnce(&'_ [::core::primitive::u8]) -> R","parent":{"krate":6,"index":209},"children":[],"decl_id":{"krate":6,"index":216},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":940},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":90009,"byte_end":90022,"line_start":573,"line_end":573,"column_start":8,"column_end":21},"name":"into_portable","qualname":"<TypeDefCompact as registry::IntoPortable>::into_portable","value":"fn into_portable<'_>(Self, &'_ mut Registry) -> Self::Output","parent":{"krate":0,"index":611},"children":[],"decl_id":{"krate":0,"index":613},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":943},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":90291,"byte_end":90294,"line_start":585,"line_end":585,"column_start":12,"column_end":15},"name":"new","qualname":"<TypeDefCompact<T>>::new","value":"fn new(<T as Form>::Type) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new type wrapped in [`Compact`].\n","sig":null,"attributes":[{"value":"/ Creates a new type wrapped in [`Compact`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":90233,"byte_end":90279,"line_start":584,"line_end":584,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":944},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":90458,"byte_end":90468,"line_start":590,"line_end":590,"column_start":12,"column_end":22},"name":"type_param","qualname":"<TypeDefCompact<T>>::type_param","value":"fn type_param<'_>(&'_ Self) -> &'_ T::Type","parent":null,"children":[],"decl_id":null,"docs":" Returns the [`Compact`] wrapped type, i.e. the `T` in `Compact<T>`.\n","sig":null,"attributes":[{"value":"/ Returns the [`Compact`] wrapped type, i.e. the `T` in `Compact<T>`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":90375,"byte_end":90446,"line_start":589,"line_end":589,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2072},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":90992,"byte_end":91010,"line_start":604,"line_end":604,"column_start":12,"column_end":30},"name":"TypeDefBitSequence","qualname":"::ty::TypeDefBitSequence","value":"TypeDefBitSequence {  }","parent":null,"children":[{"krate":0,"index":2074},{"krate":0,"index":2075}],"decl_id":null,"docs":" Type describing a [`bitvec::vec::BitVec`].","sig":null,"attributes":[{"value":"/ Type describing a [`bitvec::vec::BitVec`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":90524,"byte_end":90570,"line_start":595,"line_end":595,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":90571,"byte_end":90574,"line_start":596,"line_end":596,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":90575,"byte_end":90585,"line_start":597,"line_end":597,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":90586,"byte_end":90589,"line_start":598,"line_end":598,"column_start":1,"column_end":4}},{"value":"/ This can only be constructed for `TypeInfo` in the `MetaForm` with the `bit-vec` feature","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":90590,"byte_end":90682,"line_start":599,"line_end":599,"column_start":1,"column_end":93}},{"value":"/ enabled, but can be decoded or deserialized into the `PortableForm` without this feature.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":90683,"byte_end":90776,"line_start":600,"line_end":600,"column_start":1,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":947},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":91315,"byte_end":91328,"line_start":614,"line_end":614,"column_start":8,"column_end":21},"name":"into_portable","qualname":"<TypeDefBitSequence as registry::IntoPortable>::into_portable","value":"fn into_portable<'_>(Self, &'_ mut Registry) -> Self::Output","parent":{"krate":0,"index":611},"children":[],"decl_id":{"krate":0,"index":613},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":950},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":91715,"byte_end":91729,"line_start":627,"line_end":627,"column_start":12,"column_end":26},"name":"bit_order_type","qualname":"<TypeDefBitSequence<T>>::bit_order_type","value":"fn bit_order_type<'_>(&'_ Self) -> &'_ T::Type","parent":null,"children":[],"decl_id":null,"docs":" Returns the type of the bit ordering of the [`::bitvec::vec::BitVec`].\n","sig":null,"attributes":[{"value":"/ Returns the type of the bit ordering of the [`::bitvec::vec::BitVec`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":91629,"byte_end":91703,"line_start":626,"line_end":626,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":951},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":91875,"byte_end":91889,"line_start":632,"line_end":632,"column_start":12,"column_end":26},"name":"bit_store_type","qualname":"<TypeDefBitSequence<T>>::bit_store_type","value":"fn bit_store_type<'_>(&'_ Self) -> &'_ T::Type","parent":null,"children":[],"decl_id":null,"docs":" Returns underlying type used to store the [`::bitvec::vec::BitVec`].\n","sig":null,"attributes":[{"value":"/ Returns underlying type used to store the [`::bitvec::vec::BitVec`].","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":91791,"byte_end":91863,"line_start":631,"line_end":631,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":953},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":92427,"byte_end":92430,"line_start":644,"line_end":644,"column_start":12,"column_end":15},"name":"new","qualname":"<TypeDefBitSequence>::new","value":"fn new<Store, Order>() -> Self where Store: TypeInfo + 'static,\nOrder: TypeInfo + 'static","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`TypeDefBitSequence`] for the supplied bit order and bit store types.","sig":null,"attributes":[{"value":"/ Creates a new [`TypeDefBitSequence`] for the supplied bit order and bit store types.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":91979,"byte_end":92067,"line_start":638,"line_end":638,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":92072,"byte_end":92075,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ With the `bit-vec` feature enabled, the expected usage is to provide either","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":92080,"byte_end":92159,"line_start":640,"line_end":640,"column_start":5,"column_end":84}},{"value":"/ `bitvec::order::Lsb0` or `bitvec::order::Msb0` as the order type, and then something","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":92164,"byte_end":92252,"line_start":641,"line_end":641,"column_start":5,"column_end":93}},{"value":"/ like u8, u8, or u32 as the store type. Without the `bit-vec` feature enabled, it's","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":92257,"byte_end":92343,"line_start":642,"line_end":642,"column_start":5,"column_end":91}},{"value":"/ recommended that your types have identical `TypeInfo` to those.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":92348,"byte_end":92415,"line_start":643,"line_end":643,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":957},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":92827,"byte_end":92839,"line_start":658,"line_end":658,"column_start":12,"column_end":24},"name":"new_portable","qualname":"<TypeDefBitSequence<PortableForm>>::new_portable","value":"fn new_portable(<PortableForm as Form>::Type, <PortableForm as Form>::Type)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`TypeDefBitSequence`] for the supplied bit order and bit store types.\n","sig":null,"attributes":[{"value":"/ Creates a new [`TypeDefBitSequence`] for the supplied bit order and bit store types.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":92727,"byte_end":92815,"line_start":657,"line_end":657,"column_start":5,"column_end":93}}]},{"kind":"Trait","id":{"krate":0,"index":986},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":12485,"byte_end":12493,"line_start":366,"line_end":366,"column_start":11,"column_end":19},"name":"TypeInfo","qualname":"::TypeInfo","value":"TypeInfo","parent":null,"children":[{"krate":0,"index":987},{"krate":0,"index":988}],"decl_id":null,"docs":" Implementors return their meta type information.\n","sig":null,"attributes":[{"value":"/ Implementors return their meta type information.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":12422,"byte_end":12474,"line_start":365,"line_end":365,"column_start":1,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":987},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":12866,"byte_end":12874,"line_start":374,"line_end":374,"column_start":10,"column_end":18},"name":"Identity","qualname":"::TypeInfo::Identity","value":"type Identity: ?Sized + 'static;","parent":{"krate":0,"index":986},"children":[],"decl_id":null,"docs":" The type identifying for which type info is provided.","sig":null,"attributes":[{"value":"/ The type identifying for which type info is provided.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":12500,"byte_end":12557,"line_start":367,"line_end":367,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":12562,"byte_end":12565,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":12570,"byte_end":12580,"line_start":369,"line_end":369,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":12585,"byte_end":12588,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ This is used to uniquely identify a type via [`core::any::TypeId::of`]. In most cases it","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":12593,"byte_end":12685,"line_start":371,"line_end":371,"column_start":5,"column_end":97}},{"value":"/ will just be `Self`, but can be used to unify different types which have the same encoded","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":12690,"byte_end":12783,"line_start":372,"line_end":372,"column_start":5,"column_end":98}},{"value":"/ representation e.g. reference types `Box<T>`, `&T` and `&mut T`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":12788,"byte_end":12856,"line_start":373,"line_end":373,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":988},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":12957,"byte_end":12966,"line_start":377,"line_end":377,"column_start":8,"column_end":17},"name":"type_info","qualname":"::TypeInfo::type_info","value":"fn type_info() -> Type","parent":{"krate":0,"index":986},"children":[],"decl_id":null,"docs":" Returns the static type identifier for `Self`.\n","sig":null,"attributes":[{"value":"/ Returns the static type identifier for `Self`.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":12899,"byte_end":12949,"line_start":376,"line_end":376,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":989},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":13347,"byte_end":13361,"line_start":387,"line_end":387,"column_start":11,"column_end":25},"name":"StaticTypeInfo","qualname":"::StaticTypeInfo","value":"StaticTypeInfo: TypeInfo + 'static","parent":null,"children":[],"decl_id":null,"docs":" Convenience trait for implementors, combining `TypeInfo` and `'static` bounds.","sig":null,"attributes":[{"value":"/ Convenience trait for implementors, combining `TypeInfo` and `'static` bounds.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":12981,"byte_end":13063,"line_start":380,"line_end":380,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":13064,"byte_end":13067,"line_start":381,"line_end":381,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":13068,"byte_end":13078,"line_start":382,"line_end":382,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":13079,"byte_end":13082,"line_start":383,"line_end":383,"column_start":1,"column_end":4}},{"value":"/ Currently because of the `'static` constraint on [`std::any::TypeId::of`] (see [`MetaType`]),","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":13083,"byte_end":13180,"line_start":384,"line_end":384,"column_start":1,"column_end":98}},{"value":"/ `TypeInfo` constraints must also be accompanied by a `'static` bound. This trait is useful to","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":13181,"byte_end":13278,"line_start":385,"line_end":385,"column_start":1,"column_end":98}},{"value":"/ implementors so only a single constraint is required.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":13279,"byte_end":13336,"line_start":386,"line_end":386,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":992},"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":13529,"byte_end":13538,"line_start":392,"line_end":392,"column_start":8,"column_end":17},"name":"meta_type","qualname":"::meta_type","value":"fn meta_type<T>() -> MetaType where T: ?Sized + TypeInfo + 'static","parent":null,"children":[],"decl_id":null,"docs":" Returns the runtime bridge to the types compile-time type information.\n","sig":null,"attributes":[{"value":"/ Returns the runtime bridge to the types compile-time type information.","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":13447,"byte_end":13521,"line_start":391,"line_end":391,"column_start":1,"column_end":75}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":19825,"byte_end":19836,"line_start":165,"line_end":165,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":20088,"byte_end":20099,"line_start":176,"line_end":176,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":20438,"byte_end":20449,"line_start":188,"line_end":188,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":82},{"krate":0,"index":83}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":21062,"byte_end":21073,"line_start":208,"line_end":208,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":21355,"byte_end":21366,"line_start":219,"line_end":219,"column_start":9,"column_end":20},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":21693,"byte_end":21704,"line_start":231,"line_end":231,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":22686,"byte_end":22692,"line_start":263,"line_end":263,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":23391,"byte_end":23404,"line_start":287,"line_end":287,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":23563,"byte_end":23576,"line_start":296,"line_end":296,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":23722,"byte_end":23735,"line_start":303,"line_end":303,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":23959,"byte_end":23972,"line_start":313,"line_end":313,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":24406,"byte_end":24419,"line_start":330,"line_end":330,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":24864,"byte_end":24877,"line_start":347,"line_end":347,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":25023,"byte_end":25036,"line_start":354,"line_end":354,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":25624,"byte_end":25637,"line_start":375,"line_end":375,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":26973,"byte_end":26985,"line_start":422,"line_end":422,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":27275,"byte_end":27287,"line_start":434,"line_end":434,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":27408,"byte_end":27420,"line_start":441,"line_end":441,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":27790,"byte_end":27802,"line_start":454,"line_end":454,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":167},{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":28697,"byte_end":28709,"line_start":484,"line_end":484,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":29179,"byte_end":29191,"line_start":500,"line_end":500,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":29544,"byte_end":29556,"line_start":513,"line_end":513,"column_start":12,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":29912,"byte_end":29924,"line_start":525,"line_end":525,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":30908,"byte_end":30920,"line_start":558,"line_end":558,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":31401,"byte_end":31409,"line_start":577,"line_end":577,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":197},{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":32878,"byte_end":32892,"line_start":627,"line_end":627,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":33618,"byte_end":33632,"line_start":653,"line_end":653,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":34010,"byte_end":34024,"line_start":667,"line_end":667,"column_start":9,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":34363,"byte_end":34377,"line_start":679,"line_end":679,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":225},{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":35038,"byte_end":35052,"line_start":702,"line_end":702,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/form.rs","byte_start":37718,"byte_end":37726,"line_start":65,"line_end":65,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/form.rs","byte_start":38537,"byte_end":38549,"line_start":89,"line_end":89,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1045},{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/impls.rs","byte_start":43022,"byte_end":43025,"line_start":163,"line_end":163,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/impls.rs","byte_start":43185,"byte_end":43193,"line_start":174,"line_end":174,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/impls.rs","byte_start":43353,"byte_end":43359,"line_start":185,"line_end":185,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":371},{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/impls.rs","byte_start":43868,"byte_end":43874,"line_start":205,"line_end":205,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":379},{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/impls.rs","byte_start":44507,"byte_end":44510,"line_start":228,"line_end":228,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":387},{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/impls.rs","byte_start":44837,"byte_end":44845,"line_start":242,"line_end":242,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":393},{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/impls.rs","byte_start":45186,"byte_end":45194,"line_start":257,"line_end":257,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":398},{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/impls.rs","byte_start":45497,"byte_end":45500,"line_start":271,"line_end":271,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":403},{"krate":0,"index":404}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/impls.rs","byte_start":46293,"byte_end":46299,"line_start":323,"line_end":323,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":421},{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/impls.rs","byte_start":46475,"byte_end":46486,"line_start":333,"line_end":333,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":426},{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/impls.rs","byte_start":46879,"byte_end":46886,"line_start":345,"line_end":345,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/impls.rs","byte_start":47069,"byte_end":47074,"line_start":355,"line_end":355,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":434},{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/impls.rs","byte_start":47563,"byte_end":47577,"line_start":372,"line_end":372,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":440},{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":50809,"byte_end":50824,"line_start":57,"line_end":57,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":50970,"byte_end":50985,"line_start":64,"line_end":64,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":464}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":51504,"byte_end":51510,"line_start":85,"line_end":85,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":53397,"byte_end":53405,"line_start":137,"line_end":137,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":53616,"byte_end":53624,"line_start":150,"line_end":150,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":473}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":53694,"byte_end":53702,"line_start":156,"line_end":156,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":479},{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/meta_type.rs","byte_start":57796,"byte_end":57804,"line_start":52,"line_end":52,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/meta_type.rs","byte_start":57907,"byte_end":57915,"line_start":58,"line_end":58,"column_start":13,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/meta_type.rs","byte_start":57940,"byte_end":57948,"line_start":60,"line_end":60,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/meta_type.rs","byte_start":58084,"byte_end":58092,"line_start":66,"line_end":66,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/meta_type.rs","byte_start":58205,"byte_end":58213,"line_start":72,"line_end":72,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/meta_type.rs","byte_start":58345,"byte_end":58353,"line_start":81,"line_end":81,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":527}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/meta_type.rs","byte_start":58461,"byte_end":58469,"line_start":87,"line_end":87,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":529},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","byte_start":60999,"byte_end":61015,"line_start":47,"line_end":47,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":559}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","byte_start":61385,"byte_end":61401,"line_start":63,"line_end":63,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":562},{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","byte_start":62232,"byte_end":62244,"line_start":87,"line_end":87,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","byte_start":62976,"byte_end":62999,"line_start":114,"line_end":114,"column_start":6,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":570},{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/registry.rs","byte_start":69563,"byte_end":69571,"line_start":89,"line_end":89,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/registry.rs","byte_start":69635,"byte_end":69643,"line_start":95,"line_end":95,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":626},{"krate":0,"index":630}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/composite.rs","byte_start":95167,"byte_end":95183,"line_start":82,"line_end":82,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":703},{"krate":0,"index":704}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/composite.rs","byte_start":95422,"byte_end":95438,"line_start":92,"line_end":92,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/composite.rs","byte_start":95709,"byte_end":95725,"line_start":107,"line_end":107,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":711}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":99395,"byte_end":99400,"line_start":99,"line_end":99,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":740},{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":99773,"byte_end":99778,"line_start":112,"line_end":112,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":744},{"krate":0,"index":745}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":100333,"byte_end":100338,"line_start":139,"line_end":139,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":750},{"krate":0,"index":751}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":103087,"byte_end":103091,"line_start":65,"line_end":65,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":792}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":103233,"byte_end":103237,"line_start":76,"line_end":76,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":794},{"krate":0,"index":795}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":103476,"byte_end":103480,"line_start":86,"line_end":86,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":797}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":103628,"byte_end":103632,"line_start":92,"line_end":92,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":799},{"krate":0,"index":800},{"krate":0,"index":803}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":105131,"byte_end":105135,"line_start":136,"line_end":136,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":111333,"byte_end":111347,"line_start":94,"line_end":94,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":846},{"krate":0,"index":847}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":111586,"byte_end":111600,"line_start":104,"line_end":104,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":850}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":111882,"byte_end":111896,"line_start":119,"line_end":119,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":113630,"byte_end":113637,"line_start":177,"line_end":177,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":856},{"krate":0,"index":857}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":113992,"byte_end":113999,"line_start":190,"line_end":190,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":860}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":114309,"byte_end":114316,"line_start":210,"line_end":210,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":76493,"byte_end":76497,"line_start":89,"line_end":89,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":873},{"krate":0,"index":874}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":77347,"byte_end":77351,"line_start":121,"line_end":121,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":877},{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":77822,"byte_end":77826,"line_start":135,"line_end":135,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":881}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":78287,"byte_end":78291,"line_start":159,"line_end":159,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":79579,"byte_end":79592,"line_start":205,"line_end":205,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":891},{"krate":0,"index":892}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":79860,"byte_end":79873,"line_start":216,"line_end":216,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":895}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":80086,"byte_end":80099,"line_start":226,"line_end":226,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":897}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":80356,"byte_end":80369,"line_start":236,"line_end":236,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":900},{"krate":0,"index":901}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":83010,"byte_end":83017,"line_start":323,"line_end":323,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":904},{"krate":0,"index":905}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":85512,"byte_end":85524,"line_start":409,"line_end":409,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":907},{"krate":0,"index":908}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":85826,"byte_end":85838,"line_start":421,"line_end":421,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":913}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":86866,"byte_end":86878,"line_start":458,"line_end":458,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":915},{"krate":0,"index":916}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":87103,"byte_end":87115,"line_start":468,"line_end":468,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":918},{"krate":0,"index":921}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":87587,"byte_end":87599,"line_start":488,"line_end":488,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":923}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":87909,"byte_end":87921,"line_start":500,"line_end":500,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":927}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":88537,"byte_end":88552,"line_start":520,"line_end":520,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":929},{"krate":0,"index":930}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":88791,"byte_end":88806,"line_start":530,"line_end":530,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":932}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":89081,"byte_end":89096,"line_start":543,"line_end":543,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":936},{"krate":0,"index":937}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":89936,"byte_end":89950,"line_start":570,"line_end":570,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":939},{"krate":0,"index":940}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":90190,"byte_end":90204,"line_start":580,"line_end":580,"column_start":9,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":943},{"krate":0,"index":944}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":91234,"byte_end":91252,"line_start":611,"line_end":611,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":946},{"krate":0,"index":947}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":91582,"byte_end":91600,"line_start":622,"line_end":622,"column_start":9,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":950},{"krate":0,"index":951}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":91954,"byte_end":91972,"line_start":637,"line_end":637,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":953}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":92688,"byte_end":92706,"line_start":656,"line_end":656,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":957}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":13413,"byte_end":13414,"line_start":389,"line_end":389,"column_start":28,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":11969,"byte_end":11976,"line_start":331,"line_end":331,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":7}},{"kind":"Mod","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":11987,"byte_end":11992,"line_start":333,"line_end":333,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":12}},{"kind":"Mod","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":12002,"byte_end":12006,"line_start":334,"line_end":334,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":230}},{"kind":"Mod","span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":12027,"byte_end":12035,"line_start":336,"line_end":336,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":444}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":19825,"byte_end":19836,"line_start":165,"line_end":165,"column_start":30,"column_end":41},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":64},"to":{"krate":1,"index":3241}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":20088,"byte_end":20099,"line_start":176,"line_end":176,"column_start":15,"column_end":26},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":64},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":20438,"byte_end":20449,"line_start":188,"line_end":188,"column_start":15,"column_end":26},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":64},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":21062,"byte_end":21073,"line_start":208,"line_end":208,"column_start":18,"column_end":29},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":64},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":21355,"byte_end":21366,"line_start":219,"line_end":219,"column_start":9,"column_end":20},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":64},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":21693,"byte_end":21704,"line_start":231,"line_end":231,"column_start":9,"column_end":20},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":64},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":22686,"byte_end":22692,"line_start":263,"line_end":263,"column_start":15,"column_end":21},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":99},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":23391,"byte_end":23404,"line_start":287,"line_end":287,"column_start":30,"column_end":43},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":108},"to":{"krate":1,"index":3241}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":23563,"byte_end":23576,"line_start":296,"line_end":296,"column_start":18,"column_end":31},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":108},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":23722,"byte_end":23735,"line_start":303,"line_end":303,"column_start":9,"column_end":22},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":108},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":23959,"byte_end":23972,"line_start":313,"line_end":313,"column_start":6,"column_end":19},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":108},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":24406,"byte_end":24419,"line_start":330,"line_end":330,"column_start":6,"column_end":19},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":108},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":24864,"byte_end":24877,"line_start":347,"line_end":347,"column_start":9,"column_end":22},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":108},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":25023,"byte_end":25036,"line_start":354,"line_end":354,"column_start":6,"column_end":19},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":108},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":25624,"byte_end":25637,"line_start":375,"line_end":375,"column_start":6,"column_end":19},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":108},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":26973,"byte_end":26985,"line_start":422,"line_end":422,"column_start":33,"column_end":45},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":144},"to":{"krate":1,"index":3241}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":27275,"byte_end":27287,"line_start":434,"line_end":434,"column_start":15,"column_end":27},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":27408,"byte_end":27420,"line_start":441,"line_end":441,"column_start":18,"column_end":30},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":27790,"byte_end":27802,"line_start":454,"line_end":454,"column_start":9,"column_end":21},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":28697,"byte_end":28709,"line_start":484,"line_end":484,"column_start":9,"column_end":21},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":29179,"byte_end":29191,"line_start":500,"line_end":500,"column_start":21,"column_end":33},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":29544,"byte_end":29556,"line_start":513,"line_end":513,"column_start":12,"column_end":24},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":29912,"byte_end":29924,"line_start":525,"line_end":525,"column_start":12,"column_end":24},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":30908,"byte_end":30920,"line_start":558,"line_end":558,"column_start":18,"column_end":30},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":31401,"byte_end":31409,"line_start":577,"line_end":577,"column_start":15,"column_end":23},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1038},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":32878,"byte_end":32892,"line_start":627,"line_end":627,"column_start":15,"column_end":29},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":33618,"byte_end":33632,"line_start":653,"line_end":653,"column_start":18,"column_end":32},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":34010,"byte_end":34024,"line_start":667,"line_end":667,"column_start":9,"column_end":23},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":34363,"byte_end":34377,"line_start":679,"line_end":679,"column_start":9,"column_end":23},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/build.rs","byte_start":35038,"byte_end":35052,"line_start":702,"line_end":702,"column_start":15,"column_end":29},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/form.rs","byte_start":37718,"byte_end":37726,"line_start":65,"line_end":65,"column_start":15,"column_end":23},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":2181},"to":{"krate":0,"index":245}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/form.rs","byte_start":38537,"byte_end":38549,"line_start":89,"line_end":89,"column_start":23,"column_end":35},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":2165},"to":{"krate":0,"index":245}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/impls.rs","byte_start":43022,"byte_end":43025,"line_start":163,"line_end":163,"column_start":22,"column_end":25},"kind":{"Impl":{"id":54}},"from":{"krate":4,"index":7780},"to":{"krate":0,"index":986}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/impls.rs","byte_start":43185,"byte_end":43193,"line_start":174,"line_end":174,"column_start":22,"column_end":30},"kind":{"Impl":{"id":55}},"from":{"krate":4,"index":4628},"to":{"krate":0,"index":986}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/impls.rs","byte_start":43353,"byte_end":43359,"line_start":185,"line_end":185,"column_start":22,"column_end":28},"kind":{"Impl":{"id":56}},"from":{"krate":1,"index":47485},"to":{"krate":0,"index":986}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/impls.rs","byte_start":43868,"byte_end":43874,"line_start":205,"line_end":205,"column_start":25,"column_end":31},"kind":{"Impl":{"id":57}},"from":{"krate":1,"index":47612},"to":{"krate":0,"index":986}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/impls.rs","byte_start":44507,"byte_end":44510,"line_start":228,"line_end":228,"column_start":22,"column_end":25},"kind":{"Impl":{"id":58}},"from":{"krate":4,"index":792},"to":{"krate":0,"index":986}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/impls.rs","byte_start":44837,"byte_end":44845,"line_start":242,"line_end":242,"column_start":25,"column_end":33},"kind":{"Impl":{"id":59}},"from":{"krate":4,"index":1560},"to":{"krate":0,"index":986}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/impls.rs","byte_start":45186,"byte_end":45194,"line_start":257,"line_end":257,"column_start":22,"column_end":30},"kind":{"Impl":{"id":60}},"from":{"krate":4,"index":3300},"to":{"krate":0,"index":986}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/impls.rs","byte_start":45497,"byte_end":45500,"line_start":271,"line_end":271,"column_start":22,"column_end":25},"kind":{"Impl":{"id":61}},"from":{"krate":4,"index":432},"to":{"krate":0,"index":986}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/impls.rs","byte_start":46293,"byte_end":46299,"line_start":323,"line_end":323,"column_start":19,"column_end":25},"kind":{"Impl":{"id":63}},"from":{"krate":4,"index":8368},"to":{"krate":0,"index":986}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/impls.rs","byte_start":46475,"byte_end":46486,"line_start":333,"line_end":333,"column_start":22,"column_end":33},"kind":{"Impl":{"id":64}},"from":{"krate":1,"index":3281},"to":{"krate":0,"index":986}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/impls.rs","byte_start":46879,"byte_end":46886,"line_start":345,"line_end":345,"column_start":29,"column_end":36},"kind":{"Impl":{"id":65}},"from":{"krate":6,"index":2549},"to":{"krate":0,"index":986}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/impls.rs","byte_start":47069,"byte_end":47074,"line_start":355,"line_end":355,"column_start":24,"column_end":29},"kind":{"Impl":{"id":66}},"from":{"krate":1,"index":45866},"to":{"krate":0,"index":986}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/impls.rs","byte_start":47563,"byte_end":47577,"line_start":372,"line_end":372,"column_start":24,"column_end":38},"kind":{"Impl":{"id":67}},"from":{"krate":1,"index":45935},"to":{"krate":0,"index":986}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":50809,"byte_end":50824,"line_start":57,"line_end":57,"column_start":9,"column_end":24},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1396},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":50970,"byte_end":50985,"line_start":64,"line_end":64,"column_start":23,"column_end":38},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1396},"to":{"krate":1,"index":3169}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":51504,"byte_end":51510,"line_start":85,"line_end":85,"column_start":9,"column_end":15},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1437},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":53397,"byte_end":53405,"line_start":137,"line_end":137,"column_start":9,"column_end":17},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1476},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":53616,"byte_end":53624,"line_start":150,"line_end":150,"column_start":26,"column_end":34},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1476},"to":{"krate":1,"index":3241}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/interner.rs","byte_start":53694,"byte_end":53702,"line_start":156,"line_end":156,"column_start":9,"column_end":17},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1476},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/meta_type.rs","byte_start":57796,"byte_end":57804,"line_start":52,"line_end":52,"column_start":20,"column_end":28},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1494},"to":{"krate":1,"index":2915}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/meta_type.rs","byte_start":57907,"byte_end":57915,"line_start":58,"line_end":58,"column_start":13,"column_end":21},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1494},"to":{"krate":1,"index":2920}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/meta_type.rs","byte_start":57940,"byte_end":57948,"line_start":60,"line_end":60,"column_start":21,"column_end":29},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1494},"to":{"krate":1,"index":2961}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/meta_type.rs","byte_start":58084,"byte_end":58092,"line_start":66,"line_end":66,"column_start":14,"column_end":22},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1494},"to":{"krate":1,"index":2951}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/meta_type.rs","byte_start":58205,"byte_end":58213,"line_start":72,"line_end":72,"column_start":15,"column_end":23},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1494},"to":{"krate":1,"index":10526}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/meta_type.rs","byte_start":58345,"byte_end":58353,"line_start":81,"line_end":81,"column_start":16,"column_end":24},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1494},"to":{"krate":1,"index":10288}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/meta_type.rs","byte_start":58461,"byte_end":58469,"line_start":87,"line_end":87,"column_start":6,"column_end":14},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1494},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","byte_start":60999,"byte_end":61015,"line_start":47,"line_end":47,"column_start":25,"column_end":41},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":2143},"to":{"krate":1,"index":3169}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","byte_start":61385,"byte_end":61401,"line_start":63,"line_end":63,"column_start":6,"column_end":22},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2143},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","byte_start":62232,"byte_end":62244,"line_start":87,"line_end":87,"column_start":6,"column_end":18},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":2124},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/portable.rs","byte_start":62976,"byte_end":62999,"line_start":114,"line_end":114,"column_start":6,"column_end":29},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2118},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/registry.rs","byte_start":69563,"byte_end":69571,"line_start":89,"line_end":89,"column_start":18,"column_end":26},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":2106},"to":{"krate":1,"index":3241}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/registry.rs","byte_start":69635,"byte_end":69643,"line_start":95,"line_end":95,"column_start":6,"column_end":14},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2106},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/composite.rs","byte_start":95167,"byte_end":95183,"line_start":82,"line_end":82,"column_start":23,"column_end":39},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1500},"to":{"krate":0,"index":611}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/composite.rs","byte_start":95422,"byte_end":95438,"line_start":92,"line_end":92,"column_start":9,"column_end":25},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/composite.rs","byte_start":95709,"byte_end":95725,"line_start":107,"line_end":107,"column_start":9,"column_end":25},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1500},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":99395,"byte_end":99400,"line_start":99,"line_end":99,"column_start":23,"column_end":28},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1540},"to":{"krate":0,"index":611}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":99773,"byte_end":99778,"line_start":112,"line_end":112,"column_start":9,"column_end":14},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1540},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/fields.rs","byte_start":100333,"byte_end":100338,"line_start":139,"line_end":139,"column_start":9,"column_end":14},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1540},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":103087,"byte_end":103091,"line_start":65,"line_end":65,"column_start":21,"column_end":25},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1576},"to":{"krate":1,"index":3241}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":103233,"byte_end":103237,"line_start":76,"line_end":76,"column_start":23,"column_end":27},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1576},"to":{"krate":0,"index":611}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":103476,"byte_end":103480,"line_start":86,"line_end":86,"column_start":18,"column_end":22},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1576},"to":{"krate":1,"index":10295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":103628,"byte_end":103632,"line_start":92,"line_end":92,"column_start":6,"column_end":10},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1576},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/path.rs","byte_start":105131,"byte_end":105135,"line_start":136,"line_end":136,"column_start":9,"column_end":13},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1576},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":111333,"byte_end":111347,"line_start":94,"line_end":94,"column_start":23,"column_end":37},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1627},"to":{"krate":0,"index":611}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":111586,"byte_end":111600,"line_start":104,"line_end":104,"column_start":9,"column_end":23},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1627},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":111882,"byte_end":111896,"line_start":119,"line_end":119,"column_start":9,"column_end":23},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1627},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":113630,"byte_end":113637,"line_start":177,"line_end":177,"column_start":23,"column_end":30},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1667},"to":{"krate":0,"index":611}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":113992,"byte_end":113999,"line_start":190,"line_end":190,"column_start":9,"column_end":16},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1667},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/variant.rs","byte_start":114309,"byte_end":114316,"line_start":210,"line_end":210,"column_start":9,"column_end":16},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1667},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":76493,"byte_end":76497,"line_start":89,"line_end":89,"column_start":23,"column_end":27},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1703},"to":{"krate":0,"index":611}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":77347,"byte_end":77351,"line_start":121,"line_end":121,"column_start":6,"column_end":10},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1703},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":77822,"byte_end":77826,"line_start":135,"line_end":135,"column_start":9,"column_end":13},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1703},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":78287,"byte_end":78291,"line_start":159,"line_end":159,"column_start":9,"column_end":13},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1703},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":79579,"byte_end":79592,"line_start":205,"line_end":205,"column_start":23,"column_end":36},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1760},"to":{"krate":0,"index":611}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":79860,"byte_end":79873,"line_start":216,"line_end":216,"column_start":6,"column_end":19},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1760},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":80086,"byte_end":80099,"line_start":226,"line_end":226,"column_start":6,"column_end":19},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":1760},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":80356,"byte_end":80369,"line_start":236,"line_end":236,"column_start":9,"column_end":22},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":1760},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":83010,"byte_end":83017,"line_start":323,"line_end":323,"column_start":23,"column_end":30},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1797},"to":{"krate":0,"index":611}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":85512,"byte_end":85524,"line_start":409,"line_end":409,"column_start":23,"column_end":35},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":1927},"to":{"krate":0,"index":611}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":85826,"byte_end":85838,"line_start":421,"line_end":421,"column_start":9,"column_end":21},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":1927},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":86866,"byte_end":86878,"line_start":458,"line_end":458,"column_start":23,"column_end":35},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":1961},"to":{"krate":0,"index":611}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":87103,"byte_end":87115,"line_start":468,"line_end":468,"column_start":6,"column_end":18},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":1961},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":87587,"byte_end":87599,"line_start":488,"line_end":488,"column_start":6,"column_end":18},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":1961},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":87909,"byte_end":87921,"line_start":500,"line_end":500,"column_start":9,"column_end":21},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":1961},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":88537,"byte_end":88552,"line_start":520,"line_end":520,"column_start":23,"column_end":38},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":1998},"to":{"krate":0,"index":611}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":88791,"byte_end":88806,"line_start":530,"line_end":530,"column_start":6,"column_end":21},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":1998},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":89081,"byte_end":89096,"line_start":543,"line_end":543,"column_start":9,"column_end":24},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":1998},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":89936,"byte_end":89950,"line_start":570,"line_end":570,"column_start":23,"column_end":37},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":2035},"to":{"krate":0,"index":611}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":90190,"byte_end":90204,"line_start":580,"line_end":580,"column_start":9,"column_end":23},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":2035},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":91234,"byte_end":91252,"line_start":611,"line_end":611,"column_start":23,"column_end":41},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":2072},"to":{"krate":0,"index":611}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":91582,"byte_end":91600,"line_start":622,"line_end":622,"column_start":9,"column_end":27},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":2072},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":91954,"byte_end":91972,"line_start":637,"line_end":637,"column_start":6,"column_end":24},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":2072},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/ty/mod.rs","byte_start":92688,"byte_end":92706,"line_start":656,"line_end":656,"column_start":6,"column_end":24},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":2072},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":13363,"byte_end":13371,"line_start":387,"line_end":387,"column_start":27,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":986},"to":{"krate":0,"index":989}},{"span":{"file_name":"/Users/turjachowdhury/.cargo/registry/src/github.com-1ecc6299db9ec823/scale-info-2.3.0/src/lib.rs","byte_start":13413,"byte_end":13414,"line_start":389,"line_end":389,"column_start":28,"column_end":29},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":991},"to":{"krate":0,"index":989}}]}